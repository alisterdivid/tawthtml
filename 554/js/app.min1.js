try {
	(function (a) {
		a.emojioneList = {
			":kiss_ww:": {
				unicode: ["1f469-200d-2764-fe0f-200d-1f48b-200d-1f469", "1f469-2764-1f48b-1f469"],
				fname: "1f469-2764-1f48b-1f469",
				uc: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469",
				isCanonical: !0
			},
			":couplekiss_ww:": {
				unicode: ["1f469-200d-2764-fe0f-200d-1f48b-200d-1f469", "1f469-2764-1f48b-1f469"],
				fname: "1f469-2764-1f48b-1f469",
				uc: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469",
				isCanonical: !1
			},
			":kiss_mm:": {
				unicode: ["1f468-200d-2764-fe0f-200d-1f48b-200d-1f468", "1f468-2764-1f48b-1f468"],
				fname: "1f468-2764-1f48b-1f468", uc: "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468", isCanonical: !0
			},
			":couplekiss_mm:": {
				unicode: ["1f468-200d-2764-fe0f-200d-1f48b-200d-1f468", "1f468-2764-1f48b-1f468"],
				fname: "1f468-2764-1f48b-1f468",
				uc: "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468",
				isCanonical: !1
			},
			":family_mmbb:": {
				unicode: ["1f468-200d-1f468-200d-1f466-200d-1f466", "1f468-1f468-1f466-1f466"],
				fname: "1f468-1f468-1f466-1f466",
				uc: "1f468-200d-1f468-200d-1f466-200d-1f466",
				isCanonical: !0
			},
			":family_mmgb:": {
				unicode: ["1f468-200d-1f468-200d-1f467-200d-1f466",
					"1f468-1f468-1f467-1f466"],
				fname: "1f468-1f468-1f467-1f466",
				uc: "1f468-200d-1f468-200d-1f467-200d-1f466",
				isCanonical: !0
			},
			":family_mmgg:": {
				unicode: ["1f468-200d-1f468-200d-1f467-200d-1f467", "1f468-1f468-1f467-1f467"],
				fname: "1f468-1f468-1f467-1f467",
				uc: "1f468-200d-1f468-200d-1f467-200d-1f467",
				isCanonical: !0
			},
			":family_mwbb:": {
				unicode: ["1f468-200d-1f469-200d-1f466-200d-1f466", "1f468-1f469-1f466-1f466"],
				fname: "1f468-1f469-1f466-1f466",
				uc: "1f468-200d-1f469-200d-1f466-200d-1f466",
				isCanonical: !0
			},
			":family_mwgb:": {
				unicode: ["1f468-200d-1f469-200d-1f467-200d-1f466",
					"1f468-1f469-1f467-1f466"],
				fname: "1f468-1f469-1f467-1f466",
				uc: "1f468-200d-1f469-200d-1f467-200d-1f466",
				isCanonical: !0
			},
			":family_mwgg:": {
				unicode: ["1f468-200d-1f469-200d-1f467-200d-1f467", "1f468-1f469-1f467-1f467"],
				fname: "1f468-1f469-1f467-1f467",
				uc: "1f468-200d-1f469-200d-1f467-200d-1f467",
				isCanonical: !0
			},
			":family_wwbb:": {
				unicode: ["1f469-200d-1f469-200d-1f466-200d-1f466", "1f469-1f469-1f466-1f466"],
				fname: "1f469-1f469-1f466-1f466",
				uc: "1f469-200d-1f469-200d-1f466-200d-1f466",
				isCanonical: !0
			},
			":family_wwgb:": {
				unicode: ["1f469-200d-1f469-200d-1f467-200d-1f466",
					"1f469-1f469-1f467-1f466"],
				fname: "1f469-1f469-1f467-1f466",
				uc: "1f469-200d-1f469-200d-1f467-200d-1f466",
				isCanonical: !0
			},
			":family_wwgg:": {
				unicode: ["1f469-200d-1f469-200d-1f467-200d-1f467", "1f469-1f469-1f467-1f467"],
				fname: "1f469-1f469-1f467-1f467",
				uc: "1f469-200d-1f469-200d-1f467-200d-1f467",
				isCanonical: !0
			},
			":couple_ww:": {
				unicode: ["1f469-200d-2764-fe0f-200d-1f469", "1f469-2764-1f469"],
				fname: "1f469-2764-1f469",
				uc: "1f469-200d-2764-fe0f-200d-1f469",
				isCanonical: !0
			},
			":couple_with_heart_ww:": {
				unicode: ["1f469-200d-2764-fe0f-200d-1f469",
					"1f469-2764-1f469"],
				fname: "1f469-2764-1f469",
				uc: "1f469-200d-2764-fe0f-200d-1f469",
				isCanonical: !1
			},
			":couple_mm:": {
				unicode: ["1f468-200d-2764-fe0f-200d-1f468", "1f468-2764-1f468"],
				fname: "1f468-2764-1f468",
				uc: "1f468-200d-2764-fe0f-200d-1f468",
				isCanonical: !0
			},
			":couple_with_heart_mm:": {
				unicode: ["1f468-200d-2764-fe0f-200d-1f468", "1f468-2764-1f468"],
				fname: "1f468-2764-1f468",
				uc: "1f468-200d-2764-fe0f-200d-1f468",
				isCanonical: !1
			},
			":family_mmb:": {
				unicode: ["1f468-200d-1f468-200d-1f466", "1f468-1f468-1f466"], fname: "1f468-1f468-1f466",
				uc: "1f468-200d-1f468-200d-1f466", isCanonical: !0
			},
			":family_mmg:": {
				unicode: ["1f468-200d-1f468-200d-1f467", "1f468-1f468-1f467"],
				fname: "1f468-1f468-1f467",
				uc: "1f468-200d-1f468-200d-1f467",
				isCanonical: !0
			},
			":family_mwg:": {
				unicode: ["1f468-200d-1f469-200d-1f467", "1f468-1f469-1f467"],
				fname: "1f468-1f469-1f467",
				uc: "1f468-200d-1f469-200d-1f467",
				isCanonical: !0
			},
			":family_wwb:": {
				unicode: ["1f469-200d-1f469-200d-1f466", "1f469-1f469-1f466"],
				fname: "1f469-1f469-1f466",
				uc: "1f469-200d-1f469-200d-1f466",
				isCanonical: !0
			},
			":family_wwg:": {
				unicode: ["1f469-200d-1f469-200d-1f467", "1f469-1f469-1f467"],
				fname: "1f469-1f469-1f467",
				uc: "1f469-200d-1f469-200d-1f467",
				isCanonical: !0
			},
			":rainbow_flag:": {
				unicode: ["1f3f3-fe0f-200d-1f308", "1f3f3-1f308"],
				fname: "1f3f3-1f308",
				uc: "1f3f3-fe0f-200d-1f308",
				isCanonical: !0
			},
			":gay_pride_flag:": {
				unicode: ["1f3f3-fe0f-200d-1f308", "1f3f3-1f308"],
				fname: "1f3f3-1f308",
				uc: "1f3f3-fe0f-200d-1f308",
				isCanonical: !1
			},
			":eye_in_speech_bubble:": {
				unicode: ["1f441-200d-1f5e8", "1f441-1f5e8"], fname: "1f441-1f5e8", uc: "1f441-200d-1f5e8",
				isCanonical: !0
			},
			":hash:": {unicode: ["0023-fe0f-20e3", "0023-20e3"], fname: "0023-20e3", uc: "0023-20e3", isCanonical: !0},
			":zero:": {unicode: ["0030-fe0f-20e3", "0030-20e3"], fname: "0030-20e3", uc: "0030-20e3", isCanonical: !0},
			":one:": {unicode: ["0031-fe0f-20e3", "0031-20e3"], fname: "0031-20e3", uc: "0031-20e3", isCanonical: !0},
			":two:": {unicode: ["0032-fe0f-20e3", "0032-20e3"], fname: "0032-20e3", uc: "0032-20e3", isCanonical: !0},
			":three:": {unicode: ["0033-fe0f-20e3", "0033-20e3"], fname: "0033-20e3", uc: "0033-20e3", isCanonical: !0},
			":four:": {unicode: ["0034-fe0f-20e3", "0034-20e3"], fname: "0034-20e3", uc: "0034-20e3", isCanonical: !0},
			":five:": {unicode: ["0035-fe0f-20e3", "0035-20e3"], fname: "0035-20e3", uc: "0035-20e3", isCanonical: !0},
			":six:": {unicode: ["0036-fe0f-20e3", "0036-20e3"], fname: "0036-20e3", uc: "0036-20e3", isCanonical: !0},
			":seven:": {unicode: ["0037-fe0f-20e3", "0037-20e3"], fname: "0037-20e3", uc: "0037-20e3", isCanonical: !0},
			":eight:": {unicode: ["0038-fe0f-20e3", "0038-20e3"], fname: "0038-20e3", uc: "0038-20e3", isCanonical: !0},
			":nine:": {
				unicode: ["0039-fe0f-20e3",
					"0039-20e3"], fname: "0039-20e3", uc: "0039-20e3", isCanonical: !0
			},
			":asterisk:": {
				unicode: ["002a-fe0f-20e3", "002a-20e3"],
				fname: "002a-20e3",
				uc: "002a-20e3",
				isCanonical: !0
			},
			":keycap_asterisk:": {
				unicode: ["002a-fe0f-20e3", "002a-20e3"],
				fname: "002a-20e3",
				uc: "002a-20e3",
				isCanonical: !1
			},
			":handball_tone5:": {unicode: ["1f93e-1f3ff"], fname: "1f93e-1f3ff", uc: "1f93e-1f3ff", isCanonical: !0},
			":handball_tone4:": {unicode: ["1f93e-1f3fe"], fname: "1f93e-1f3fe", uc: "1f93e-1f3fe", isCanonical: !0},
			":handball_tone3:": {
				unicode: ["1f93e-1f3fd"],
				fname: "1f93e-1f3fd", uc: "1f93e-1f3fd", isCanonical: !0
			},
			":handball_tone2:": {unicode: ["1f93e-1f3fc"], fname: "1f93e-1f3fc", uc: "1f93e-1f3fc", isCanonical: !0},
			":handball_tone1:": {unicode: ["1f93e-1f3fb"], fname: "1f93e-1f3fb", uc: "1f93e-1f3fb", isCanonical: !0},
			":water_polo_tone5:": {unicode: ["1f93d-1f3ff"], fname: "1f93d-1f3ff", uc: "1f93d-1f3ff", isCanonical: !0},
			":water_polo_tone4:": {unicode: ["1f93d-1f3fe"], fname: "1f93d-1f3fe", uc: "1f93d-1f3fe", isCanonical: !0},
			":water_polo_tone3:": {
				unicode: ["1f93d-1f3fd"], fname: "1f93d-1f3fd",
				uc: "1f93d-1f3fd", isCanonical: !0
			},
			":water_polo_tone2:": {unicode: ["1f93d-1f3fc"], fname: "1f93d-1f3fc", uc: "1f93d-1f3fc", isCanonical: !0},
			":water_polo_tone1:": {unicode: ["1f93d-1f3fb"], fname: "1f93d-1f3fb", uc: "1f93d-1f3fb", isCanonical: !0},
			":wrestlers_tone5:": {unicode: ["1f93c-1f3ff"], fname: "1f93c-1f3ff", uc: "1f93c-1f3ff", isCanonical: !0},
			":wrestling_tone5:": {unicode: ["1f93c-1f3ff"], fname: "1f93c-1f3ff", uc: "1f93c-1f3ff", isCanonical: !1},
			":wrestlers_tone4:": {
				unicode: ["1f93c-1f3fe"], fname: "1f93c-1f3fe", uc: "1f93c-1f3fe",
				isCanonical: !0
			},
			":wrestling_tone4:": {unicode: ["1f93c-1f3fe"], fname: "1f93c-1f3fe", uc: "1f93c-1f3fe", isCanonical: !1},
			":wrestlers_tone3:": {unicode: ["1f93c-1f3fd"], fname: "1f93c-1f3fd", uc: "1f93c-1f3fd", isCanonical: !0},
			":wrestling_tone3:": {unicode: ["1f93c-1f3fd"], fname: "1f93c-1f3fd", uc: "1f93c-1f3fd", isCanonical: !1},
			":wrestlers_tone2:": {unicode: ["1f93c-1f3fc"], fname: "1f93c-1f3fc", uc: "1f93c-1f3fc", isCanonical: !0},
			":wrestling_tone2:": {unicode: ["1f93c-1f3fc"], fname: "1f93c-1f3fc", uc: "1f93c-1f3fc", isCanonical: !1},
			":wrestlers_tone1:": {unicode: ["1f93c-1f3fb"], fname: "1f93c-1f3fb", uc: "1f93c-1f3fb", isCanonical: !0},
			":wrestling_tone1:": {unicode: ["1f93c-1f3fb"], fname: "1f93c-1f3fb", uc: "1f93c-1f3fb", isCanonical: !1},
			":juggling_tone5:": {unicode: ["1f939-1f3ff"], fname: "1f939-1f3ff", uc: "1f939-1f3ff", isCanonical: !0},
			":juggler_tone5:": {unicode: ["1f939-1f3ff"], fname: "1f939-1f3ff", uc: "1f939-1f3ff", isCanonical: !1},
			":juggling_tone4:": {unicode: ["1f939-1f3fe"], fname: "1f939-1f3fe", uc: "1f939-1f3fe", isCanonical: !0},
			":juggler_tone4:": {
				unicode: ["1f939-1f3fe"],
				fname: "1f939-1f3fe", uc: "1f939-1f3fe", isCanonical: !1
			},
			":juggling_tone3:": {unicode: ["1f939-1f3fd"], fname: "1f939-1f3fd", uc: "1f939-1f3fd", isCanonical: !0},
			":juggler_tone3:": {unicode: ["1f939-1f3fd"], fname: "1f939-1f3fd", uc: "1f939-1f3fd", isCanonical: !1},
			":juggling_tone2:": {unicode: ["1f939-1f3fc"], fname: "1f939-1f3fc", uc: "1f939-1f3fc", isCanonical: !0},
			":juggler_tone2:": {unicode: ["1f939-1f3fc"], fname: "1f939-1f3fc", uc: "1f939-1f3fc", isCanonical: !1},
			":juggling_tone1:": {
				unicode: ["1f939-1f3fb"], fname: "1f939-1f3fb",
				uc: "1f939-1f3fb", isCanonical: !0
			},
			":juggler_tone1:": {unicode: ["1f939-1f3fb"], fname: "1f939-1f3fb", uc: "1f939-1f3fb", isCanonical: !1},
			":cartwheel_tone5:": {unicode: ["1f938-1f3ff"], fname: "1f938-1f3ff", uc: "1f938-1f3ff", isCanonical: !0},
			":person_doing_cartwheel_tone5:": {
				unicode: ["1f938-1f3ff"],
				fname: "1f938-1f3ff",
				uc: "1f938-1f3ff",
				isCanonical: !1
			},
			":cartwheel_tone4:": {unicode: ["1f938-1f3fe"], fname: "1f938-1f3fe", uc: "1f938-1f3fe", isCanonical: !0},
			":person_doing_cartwheel_tone4:": {
				unicode: ["1f938-1f3fe"], fname: "1f938-1f3fe",
				uc: "1f938-1f3fe", isCanonical: !1
			},
			":cartwheel_tone3:": {unicode: ["1f938-1f3fd"], fname: "1f938-1f3fd", uc: "1f938-1f3fd", isCanonical: !0},
			":person_doing_cartwheel_tone3:": {
				unicode: ["1f938-1f3fd"],
				fname: "1f938-1f3fd",
				uc: "1f938-1f3fd",
				isCanonical: !1
			},
			":cartwheel_tone2:": {unicode: ["1f938-1f3fc"], fname: "1f938-1f3fc", uc: "1f938-1f3fc", isCanonical: !0},
			":person_doing_cartwheel_tone2:": {
				unicode: ["1f938-1f3fc"],
				fname: "1f938-1f3fc",
				uc: "1f938-1f3fc",
				isCanonical: !1
			},
			":cartwheel_tone1:": {
				unicode: ["1f938-1f3fb"], fname: "1f938-1f3fb",
				uc: "1f938-1f3fb", isCanonical: !0
			},
			":person_doing_cartwheel_tone1:": {
				unicode: ["1f938-1f3fb"],
				fname: "1f938-1f3fb",
				uc: "1f938-1f3fb",
				isCanonical: !1
			},
			":shrug_tone5:": {unicode: ["1f937-1f3ff"], fname: "1f937-1f3ff", uc: "1f937-1f3ff", isCanonical: !0},
			":shrug_tone4:": {unicode: ["1f937-1f3fe"], fname: "1f937-1f3fe", uc: "1f937-1f3fe", isCanonical: !0},
			":shrug_tone3:": {unicode: ["1f937-1f3fd"], fname: "1f937-1f3fd", uc: "1f937-1f3fd", isCanonical: !0},
			":shrug_tone2:": {
				unicode: ["1f937-1f3fc"], fname: "1f937-1f3fc", uc: "1f937-1f3fc",
				isCanonical: !0
			},
			":shrug_tone1:": {unicode: ["1f937-1f3fb"], fname: "1f937-1f3fb", uc: "1f937-1f3fb", isCanonical: !0},
			":mrs_claus_tone5:": {unicode: ["1f936-1f3ff"], fname: "1f936-1f3ff", uc: "1f936-1f3ff", isCanonical: !0},
			":mother_christmas_tone5:": {
				unicode: ["1f936-1f3ff"],
				fname: "1f936-1f3ff",
				uc: "1f936-1f3ff",
				isCanonical: !1
			},
			":mrs_claus_tone4:": {unicode: ["1f936-1f3fe"], fname: "1f936-1f3fe", uc: "1f936-1f3fe", isCanonical: !0},
			":mother_christmas_tone4:": {
				unicode: ["1f936-1f3fe"],
				fname: "1f936-1f3fe",
				uc: "1f936-1f3fe",
				isCanonical: !1
			},
			":mrs_claus_tone3:": {unicode: ["1f936-1f3fd"], fname: "1f936-1f3fd", uc: "1f936-1f3fd", isCanonical: !0},
			":mother_christmas_tone3:": {
				unicode: ["1f936-1f3fd"],
				fname: "1f936-1f3fd",
				uc: "1f936-1f3fd",
				isCanonical: !1
			},
			":mrs_claus_tone2:": {unicode: ["1f936-1f3fc"], fname: "1f936-1f3fc", uc: "1f936-1f3fc", isCanonical: !0},
			":mother_christmas_tone2:": {
				unicode: ["1f936-1f3fc"],
				fname: "1f936-1f3fc",
				uc: "1f936-1f3fc",
				isCanonical: !1
			},
			":mrs_claus_tone1:": {unicode: ["1f936-1f3fb"], fname: "1f936-1f3fb", uc: "1f936-1f3fb", isCanonical: !0},
			":mother_christmas_tone1:": {
				unicode: ["1f936-1f3fb"],
				fname: "1f936-1f3fb",
				uc: "1f936-1f3fb",
				isCanonical: !1
			},
			":man_in_tuxedo_tone5:": {
				unicode: ["1f935-1f3ff"],
				fname: "1f935-1f3ff",
				uc: "1f935-1f3ff",
				isCanonical: !0
			},
			":tuxedo_tone5:": {unicode: ["1f935-1f3ff"], fname: "1f935-1f3ff", uc: "1f935-1f3ff", isCanonical: !1},
			":man_in_tuxedo_tone4:": {
				unicode: ["1f935-1f3fe"],
				fname: "1f935-1f3fe",
				uc: "1f935-1f3fe",
				isCanonical: !0
			},
			":tuxedo_tone4:": {unicode: ["1f935-1f3fe"], fname: "1f935-1f3fe", uc: "1f935-1f3fe", isCanonical: !1},
			":man_in_tuxedo_tone3:": {
				unicode: ["1f935-1f3fd"],
				fname: "1f935-1f3fd", uc: "1f935-1f3fd", isCanonical: !0
			},
			":tuxedo_tone3:": {unicode: ["1f935-1f3fd"], fname: "1f935-1f3fd", uc: "1f935-1f3fd", isCanonical: !1},
			":man_in_tuxedo_tone2:": {
				unicode: ["1f935-1f3fc"],
				fname: "1f935-1f3fc",
				uc: "1f935-1f3fc",
				isCanonical: !0
			},
			":tuxedo_tone2:": {unicode: ["1f935-1f3fc"], fname: "1f935-1f3fc", uc: "1f935-1f3fc", isCanonical: !1},
			":man_in_tuxedo_tone1:": {
				unicode: ["1f935-1f3fb"],
				fname: "1f935-1f3fb",
				uc: "1f935-1f3fb",
				isCanonical: !0
			},
			":tuxedo_tone1:": {
				unicode: ["1f935-1f3fb"], fname: "1f935-1f3fb",
				uc: "1f935-1f3fb", isCanonical: !1
			},
			":prince_tone5:": {unicode: ["1f934-1f3ff"], fname: "1f934-1f3ff", uc: "1f934-1f3ff", isCanonical: !0},
			":prince_tone4:": {unicode: ["1f934-1f3fe"], fname: "1f934-1f3fe", uc: "1f934-1f3fe", isCanonical: !0},
			":prince_tone3:": {unicode: ["1f934-1f3fd"], fname: "1f934-1f3fd", uc: "1f934-1f3fd", isCanonical: !0},
			":prince_tone2:": {unicode: ["1f934-1f3fc"], fname: "1f934-1f3fc", uc: "1f934-1f3fc", isCanonical: !0},
			":prince_tone1:": {unicode: ["1f934-1f3fb"], fname: "1f934-1f3fb", uc: "1f934-1f3fb", isCanonical: !0},
			":selfie_tone5:": {unicode: ["1f933-1f3ff"], fname: "1f933-1f3ff", uc: "1f933-1f3ff", isCanonical: !0},
			":selfie_tone4:": {unicode: ["1f933-1f3fe"], fname: "1f933-1f3fe", uc: "1f933-1f3fe", isCanonical: !0},
			":selfie_tone3:": {unicode: ["1f933-1f3fd"], fname: "1f933-1f3fd", uc: "1f933-1f3fd", isCanonical: !0},
			":selfie_tone2:": {unicode: ["1f933-1f3fc"], fname: "1f933-1f3fc", uc: "1f933-1f3fc", isCanonical: !0},
			":selfie_tone1:": {unicode: ["1f933-1f3fb"], fname: "1f933-1f3fb", uc: "1f933-1f3fb", isCanonical: !0},
			":pregnant_woman_tone5:": {
				unicode: ["1f930-1f3ff"],
				fname: "1f930-1f3ff", uc: "1f930-1f3ff", isCanonical: !0
			},
			":expecting_woman_tone5:": {
				unicode: ["1f930-1f3ff"],
				fname: "1f930-1f3ff",
				uc: "1f930-1f3ff",
				isCanonical: !1
			},
			":pregnant_woman_tone4:": {
				unicode: ["1f930-1f3fe"],
				fname: "1f930-1f3fe",
				uc: "1f930-1f3fe",
				isCanonical: !0
			},
			":expecting_woman_tone4:": {
				unicode: ["1f930-1f3fe"],
				fname: "1f930-1f3fe",
				uc: "1f930-1f3fe",
				isCanonical: !1
			},
			":pregnant_woman_tone3:": {
				unicode: ["1f930-1f3fd"],
				fname: "1f930-1f3fd",
				uc: "1f930-1f3fd",
				isCanonical: !0
			},
			":expecting_woman_tone3:": {
				unicode: ["1f930-1f3fd"],
				fname: "1f930-1f3fd", uc: "1f930-1f3fd", isCanonical: !1
			},
			":pregnant_woman_tone2:": {
				unicode: ["1f930-1f3fc"],
				fname: "1f930-1f3fc",
				uc: "1f930-1f3fc",
				isCanonical: !0
			},
			":expecting_woman_tone2:": {
				unicode: ["1f930-1f3fc"],
				fname: "1f930-1f3fc",
				uc: "1f930-1f3fc",
				isCanonical: !1
			},
			":pregnant_woman_tone1:": {
				unicode: ["1f930-1f3fb"],
				fname: "1f930-1f3fb",
				uc: "1f930-1f3fb",
				isCanonical: !0
			},
			":expecting_woman_tone1:": {
				unicode: ["1f930-1f3fb"],
				fname: "1f930-1f3fb",
				uc: "1f930-1f3fb",
				isCanonical: !1
			},
			":face_palm_tone5:": {
				unicode: ["1f926-1f3ff"],
				fname: "1f926-1f3ff", uc: "1f926-1f3ff", isCanonical: !0
			},
			":facepalm_tone5:": {unicode: ["1f926-1f3ff"], fname: "1f926-1f3ff", uc: "1f926-1f3ff", isCanonical: !1},
			":face_palm_tone4:": {unicode: ["1f926-1f3fe"], fname: "1f926-1f3fe", uc: "1f926-1f3fe", isCanonical: !0},
			":facepalm_tone4:": {unicode: ["1f926-1f3fe"], fname: "1f926-1f3fe", uc: "1f926-1f3fe", isCanonical: !1},
			":face_palm_tone3:": {unicode: ["1f926-1f3fd"], fname: "1f926-1f3fd", uc: "1f926-1f3fd", isCanonical: !0},
			":facepalm_tone3:": {
				unicode: ["1f926-1f3fd"], fname: "1f926-1f3fd",
				uc: "1f926-1f3fd", isCanonical: !1
			},
			":face_palm_tone2:": {unicode: ["1f926-1f3fc"], fname: "1f926-1f3fc", uc: "1f926-1f3fc", isCanonical: !0},
			":facepalm_tone2:": {unicode: ["1f926-1f3fc"], fname: "1f926-1f3fc", uc: "1f926-1f3fc", isCanonical: !1},
			":face_palm_tone1:": {unicode: ["1f926-1f3fb"], fname: "1f926-1f3fb", uc: "1f926-1f3fb", isCanonical: !0},
			":facepalm_tone1:": {unicode: ["1f926-1f3fb"], fname: "1f926-1f3fb", uc: "1f926-1f3fb", isCanonical: !1},
			":fingers_crossed_tone5:": {
				unicode: ["1f91e-1f3ff"], fname: "1f91e-1f3ff", uc: "1f91e-1f3ff",
				isCanonical: !0
			},
			":hand_with_index_and_middle_fingers_crossed_tone5:": {
				unicode: ["1f91e-1f3ff"],
				fname: "1f91e-1f3ff",
				uc: "1f91e-1f3ff",
				isCanonical: !1
			},
			":fingers_crossed_tone4:": {
				unicode: ["1f91e-1f3fe"],
				fname: "1f91e-1f3fe",
				uc: "1f91e-1f3fe",
				isCanonical: !0
			},
			":hand_with_index_and_middle_fingers_crossed_tone4:": {
				unicode: ["1f91e-1f3fe"],
				fname: "1f91e-1f3fe",
				uc: "1f91e-1f3fe",
				isCanonical: !1
			},
			":fingers_crossed_tone3:": {
				unicode: ["1f91e-1f3fd"],
				fname: "1f91e-1f3fd",
				uc: "1f91e-1f3fd",
				isCanonical: !0
			},
			":hand_with_index_and_middle_fingers_crossed_tone3:": {
				unicode: ["1f91e-1f3fd"],
				fname: "1f91e-1f3fd", uc: "1f91e-1f3fd", isCanonical: !1
			},
			":fingers_crossed_tone2:": {
				unicode: ["1f91e-1f3fc"],
				fname: "1f91e-1f3fc",
				uc: "1f91e-1f3fc",
				isCanonical: !0
			},
			":hand_with_index_and_middle_fingers_crossed_tone2:": {
				unicode: ["1f91e-1f3fc"],
				fname: "1f91e-1f3fc",
				uc: "1f91e-1f3fc",
				isCanonical: !1
			},
			":fingers_crossed_tone1:": {
				unicode: ["1f91e-1f3fb"],
				fname: "1f91e-1f3fb",
				uc: "1f91e-1f3fb",
				isCanonical: !0
			},
			":hand_with_index_and_middle_fingers_crossed_tone1:": {
				unicode: ["1f91e-1f3fb"], fname: "1f91e-1f3fb", uc: "1f91e-1f3fb",
				isCanonical: !1
			},
			":handshake_tone5:": {unicode: ["1f91d-1f3ff"], fname: "1f91d-1f3ff", uc: "1f91d-1f3ff", isCanonical: !0},
			":shaking_hands_tone5:": {
				unicode: ["1f91d-1f3ff"],
				fname: "1f91d-1f3ff",
				uc: "1f91d-1f3ff",
				isCanonical: !1
			},
			":handshake_tone4:": {unicode: ["1f91d-1f3fe"], fname: "1f91d-1f3fe", uc: "1f91d-1f3fe", isCanonical: !0},
			":shaking_hands_tone4:": {
				unicode: ["1f91d-1f3fe"],
				fname: "1f91d-1f3fe",
				uc: "1f91d-1f3fe",
				isCanonical: !1
			},
			":handshake_tone3:": {unicode: ["1f91d-1f3fd"], fname: "1f91d-1f3fd", uc: "1f91d-1f3fd", isCanonical: !0},
			":shaking_hands_tone3:": {
				unicode: ["1f91d-1f3fd"],
				fname: "1f91d-1f3fd",
				uc: "1f91d-1f3fd",
				isCanonical: !1
			},
			":handshake_tone2:": {unicode: ["1f91d-1f3fc"], fname: "1f91d-1f3fc", uc: "1f91d-1f3fc", isCanonical: !0},
			":shaking_hands_tone2:": {
				unicode: ["1f91d-1f3fc"],
				fname: "1f91d-1f3fc",
				uc: "1f91d-1f3fc",
				isCanonical: !1
			},
			":handshake_tone1:": {unicode: ["1f91d-1f3fb"], fname: "1f91d-1f3fb", uc: "1f91d-1f3fb", isCanonical: !0},
			":shaking_hands_tone1:": {
				unicode: ["1f91d-1f3fb"],
				fname: "1f91d-1f3fb",
				uc: "1f91d-1f3fb",
				isCanonical: !1
			},
			":right_facing_fist_tone5:": {
				unicode: ["1f91c-1f3ff"],
				fname: "1f91c-1f3ff",
				uc: "1f91c-1f3ff",
				isCanonical: !0
			},
			":right_fist_tone5:": {unicode: ["1f91c-1f3ff"], fname: "1f91c-1f3ff", uc: "1f91c-1f3ff", isCanonical: !1},
			":right_facing_fist_tone4:": {
				unicode: ["1f91c-1f3fe"],
				fname: "1f91c-1f3fe",
				uc: "1f91c-1f3fe",
				isCanonical: !0
			},
			":right_fist_tone4:": {unicode: ["1f91c-1f3fe"], fname: "1f91c-1f3fe", uc: "1f91c-1f3fe", isCanonical: !1},
			":right_facing_fist_tone3:": {
				unicode: ["1f91c-1f3fd"],
				fname: "1f91c-1f3fd",
				uc: "1f91c-1f3fd",
				isCanonical: !0
			},
			":right_fist_tone3:": {unicode: ["1f91c-1f3fd"], fname: "1f91c-1f3fd", uc: "1f91c-1f3fd", isCanonical: !1},
			":right_facing_fist_tone2:": {
				unicode: ["1f91c-1f3fc"],
				fname: "1f91c-1f3fc",
				uc: "1f91c-1f3fc",
				isCanonical: !0
			},
			":right_fist_tone2:": {unicode: ["1f91c-1f3fc"], fname: "1f91c-1f3fc", uc: "1f91c-1f3fc", isCanonical: !1},
			":right_facing_fist_tone1:": {
				unicode: ["1f91c-1f3fb"],
				fname: "1f91c-1f3fb",
				uc: "1f91c-1f3fb",
				isCanonical: !0
			},
			":right_fist_tone1:": {unicode: ["1f91c-1f3fb"], fname: "1f91c-1f3fb", uc: "1f91c-1f3fb", isCanonical: !1},
			":left_facing_fist_tone5:": {
				unicode: ["1f91b-1f3ff"],
				fname: "1f91b-1f3ff",
				uc: "1f91b-1f3ff",
				isCanonical: !0
			},
			":left_fist_tone5:": {unicode: ["1f91b-1f3ff"], fname: "1f91b-1f3ff", uc: "1f91b-1f3ff", isCanonical: !1},
			":left_facing_fist_tone4:": {
				unicode: ["1f91b-1f3fe"],
				fname: "1f91b-1f3fe",
				uc: "1f91b-1f3fe",
				isCanonical: !0
			},
			":left_fist_tone4:": {unicode: ["1f91b-1f3fe"], fname: "1f91b-1f3fe", uc: "1f91b-1f3fe", isCanonical: !1},
			":left_facing_fist_tone3:": {
				unicode: ["1f91b-1f3fd"],
				fname: "1f91b-1f3fd",
				uc: "1f91b-1f3fd",
				isCanonical: !0
			},
			":left_fist_tone3:": {unicode: ["1f91b-1f3fd"], fname: "1f91b-1f3fd", uc: "1f91b-1f3fd", isCanonical: !1},
			":left_facing_fist_tone2:": {
				unicode: ["1f91b-1f3fc"],
				fname: "1f91b-1f3fc",
				uc: "1f91b-1f3fc",
				isCanonical: !0
			},
			":left_fist_tone2:": {unicode: ["1f91b-1f3fc"], fname: "1f91b-1f3fc", uc: "1f91b-1f3fc", isCanonical: !1},
			":left_facing_fist_tone1:": {
				unicode: ["1f91b-1f3fb"],
				fname: "1f91b-1f3fb",
				uc: "1f91b-1f3fb",
				isCanonical: !0
			},
			":left_fist_tone1:": {unicode: ["1f91b-1f3fb"], fname: "1f91b-1f3fb", uc: "1f91b-1f3fb", isCanonical: !1},
			":raised_back_of_hand_tone5:": {
				unicode: ["1f91a-1f3ff"],
				fname: "1f91a-1f3ff",
				uc: "1f91a-1f3ff",
				isCanonical: !0
			},
			":back_of_hand_tone5:": {
				unicode: ["1f91a-1f3ff"],
				fname: "1f91a-1f3ff",
				uc: "1f91a-1f3ff",
				isCanonical: !1
			},
			":raised_back_of_hand_tone4:": {
				unicode: ["1f91a-1f3fe"],
				fname: "1f91a-1f3fe",
				uc: "1f91a-1f3fe",
				isCanonical: !0
			},
			":back_of_hand_tone4:": {
				unicode: ["1f91a-1f3fe"],
				fname: "1f91a-1f3fe",
				uc: "1f91a-1f3fe",
				isCanonical: !1
			},
			":raised_back_of_hand_tone3:": {
				unicode: ["1f91a-1f3fd"], fname: "1f91a-1f3fd", uc: "1f91a-1f3fd",
				isCanonical: !0
			},
			":back_of_hand_tone3:": {
				unicode: ["1f91a-1f3fd"],
				fname: "1f91a-1f3fd",
				uc: "1f91a-1f3fd",
				isCanonical: !1
			},
			":raised_back_of_hand_tone2:": {
				unicode: ["1f91a-1f3fc"],
				fname: "1f91a-1f3fc",
				uc: "1f91a-1f3fc",
				isCanonical: !0
			},
			":back_of_hand_tone2:": {
				unicode: ["1f91a-1f3fc"],
				fname: "1f91a-1f3fc",
				uc: "1f91a-1f3fc",
				isCanonical: !1
			},
			":raised_back_of_hand_tone1:": {
				unicode: ["1f91a-1f3fb"],
				fname: "1f91a-1f3fb",
				uc: "1f91a-1f3fb",
				isCanonical: !0
			},
			":back_of_hand_tone1:": {
				unicode: ["1f91a-1f3fb"], fname: "1f91a-1f3fb",
				uc: "1f91a-1f3fb", isCanonical: !1
			},
			":call_me_tone5:": {unicode: ["1f919-1f3ff"], fname: "1f919-1f3ff", uc: "1f919-1f3ff", isCanonical: !0},
			":call_me_hand_tone5:": {
				unicode: ["1f919-1f3ff"],
				fname: "1f919-1f3ff",
				uc: "1f919-1f3ff",
				isCanonical: !1
			},
			":call_me_tone4:": {unicode: ["1f919-1f3fe"], fname: "1f919-1f3fe", uc: "1f919-1f3fe", isCanonical: !0},
			":call_me_hand_tone4:": {
				unicode: ["1f919-1f3fe"],
				fname: "1f919-1f3fe",
				uc: "1f919-1f3fe",
				isCanonical: !1
			},
			":call_me_tone3:": {
				unicode: ["1f919-1f3fd"], fname: "1f919-1f3fd", uc: "1f919-1f3fd",
				isCanonical: !0
			},
			":call_me_hand_tone3:": {
				unicode: ["1f919-1f3fd"],
				fname: "1f919-1f3fd",
				uc: "1f919-1f3fd",
				isCanonical: !1
			},
			":call_me_tone2:": {unicode: ["1f919-1f3fc"], fname: "1f919-1f3fc", uc: "1f919-1f3fc", isCanonical: !0},
			":call_me_hand_tone2:": {
				unicode: ["1f919-1f3fc"],
				fname: "1f919-1f3fc",
				uc: "1f919-1f3fc",
				isCanonical: !1
			},
			":call_me_tone1:": {unicode: ["1f919-1f3fb"], fname: "1f919-1f3fb", uc: "1f919-1f3fb", isCanonical: !0},
			":call_me_hand_tone1:": {
				unicode: ["1f919-1f3fb"],
				fname: "1f919-1f3fb",
				uc: "1f919-1f3fb",
				isCanonical: !1
			},
			":metal_tone5:": {unicode: ["1f918-1f3ff"], fname: "1f918-1f3ff", uc: "1f918-1f3ff", isCanonical: !0},
			":sign_of_the_horns_tone5:": {
				unicode: ["1f918-1f3ff"],
				fname: "1f918-1f3ff",
				uc: "1f918-1f3ff",
				isCanonical: !1
			},
			":metal_tone4:": {unicode: ["1f918-1f3fe"], fname: "1f918-1f3fe", uc: "1f918-1f3fe", isCanonical: !0},
			":sign_of_the_horns_tone4:": {
				unicode: ["1f918-1f3fe"],
				fname: "1f918-1f3fe",
				uc: "1f918-1f3fe",
				isCanonical: !1
			},
			":metal_tone3:": {unicode: ["1f918-1f3fd"], fname: "1f918-1f3fd", uc: "1f918-1f3fd", isCanonical: !0},
			":sign_of_the_horns_tone3:": {
				unicode: ["1f918-1f3fd"],
				fname: "1f918-1f3fd", uc: "1f918-1f3fd", isCanonical: !1
			},
			":metal_tone2:": {unicode: ["1f918-1f3fc"], fname: "1f918-1f3fc", uc: "1f918-1f3fc", isCanonical: !0},
			":sign_of_the_horns_tone2:": {
				unicode: ["1f918-1f3fc"],
				fname: "1f918-1f3fc",
				uc: "1f918-1f3fc",
				isCanonical: !1
			},
			":metal_tone1:": {unicode: ["1f918-1f3fb"], fname: "1f918-1f3fb", uc: "1f918-1f3fb", isCanonical: !0},
			":sign_of_the_horns_tone1:": {
				unicode: ["1f918-1f3fb"],
				fname: "1f918-1f3fb",
				uc: "1f918-1f3fb",
				isCanonical: !1
			},
			":bath_tone5:": {
				unicode: ["1f6c0-1f3ff"], fname: "1f6c0-1f3ff",
				uc: "1f6c0-1f3ff", isCanonical: !0
			},
			":bath_tone4:": {unicode: ["1f6c0-1f3fe"], fname: "1f6c0-1f3fe", uc: "1f6c0-1f3fe", isCanonical: !0},
			":bath_tone3:": {unicode: ["1f6c0-1f3fd"], fname: "1f6c0-1f3fd", uc: "1f6c0-1f3fd", isCanonical: !0},
			":bath_tone2:": {unicode: ["1f6c0-1f3fc"], fname: "1f6c0-1f3fc", uc: "1f6c0-1f3fc", isCanonical: !0},
			":bath_tone1:": {unicode: ["1f6c0-1f3fb"], fname: "1f6c0-1f3fb", uc: "1f6c0-1f3fb", isCanonical: !0},
			":walking_tone5:": {unicode: ["1f6b6-1f3ff"], fname: "1f6b6-1f3ff", uc: "1f6b6-1f3ff", isCanonical: !0},
			":walking_tone4:": {unicode: ["1f6b6-1f3fe"], fname: "1f6b6-1f3fe", uc: "1f6b6-1f3fe", isCanonical: !0},
			":walking_tone3:": {unicode: ["1f6b6-1f3fd"], fname: "1f6b6-1f3fd", uc: "1f6b6-1f3fd", isCanonical: !0},
			":walking_tone2:": {unicode: ["1f6b6-1f3fc"], fname: "1f6b6-1f3fc", uc: "1f6b6-1f3fc", isCanonical: !0},
			":walking_tone1:": {unicode: ["1f6b6-1f3fb"], fname: "1f6b6-1f3fb", uc: "1f6b6-1f3fb", isCanonical: !0},
			":mountain_bicyclist_tone5:": {
				unicode: ["1f6b5-1f3ff"],
				fname: "1f6b5-1f3ff",
				uc: "1f6b5-1f3ff",
				isCanonical: !0
			},
			":mountain_bicyclist_tone4:": {
				unicode: ["1f6b5-1f3fe"],
				fname: "1f6b5-1f3fe", uc: "1f6b5-1f3fe", isCanonical: !0
			},
			":mountain_bicyclist_tone3:": {
				unicode: ["1f6b5-1f3fd"],
				fname: "1f6b5-1f3fd",
				uc: "1f6b5-1f3fd",
				isCanonical: !0
			},
			":mountain_bicyclist_tone2:": {
				unicode: ["1f6b5-1f3fc"],
				fname: "1f6b5-1f3fc",
				uc: "1f6b5-1f3fc",
				isCanonical: !0
			},
			":mountain_bicyclist_tone1:": {
				unicode: ["1f6b5-1f3fb"],
				fname: "1f6b5-1f3fb",
				uc: "1f6b5-1f3fb",
				isCanonical: !0
			},
			":bicyclist_tone5:": {unicode: ["1f6b4-1f3ff"], fname: "1f6b4-1f3ff", uc: "1f6b4-1f3ff", isCanonical: !0},
			":bicyclist_tone4:": {
				unicode: ["1f6b4-1f3fe"],
				fname: "1f6b4-1f3fe", uc: "1f6b4-1f3fe", isCanonical: !0
			},
			":bicyclist_tone3:": {unicode: ["1f6b4-1f3fd"], fname: "1f6b4-1f3fd", uc: "1f6b4-1f3fd", isCanonical: !0},
			":bicyclist_tone2:": {unicode: ["1f6b4-1f3fc"], fname: "1f6b4-1f3fc", uc: "1f6b4-1f3fc", isCanonical: !0},
			":bicyclist_tone1:": {unicode: ["1f6b4-1f3fb"], fname: "1f6b4-1f3fb", uc: "1f6b4-1f3fb", isCanonical: !0},
			":rowboat_tone5:": {unicode: ["1f6a3-1f3ff"], fname: "1f6a3-1f3ff", uc: "1f6a3-1f3ff", isCanonical: !0},
			":rowboat_tone4:": {
				unicode: ["1f6a3-1f3fe"], fname: "1f6a3-1f3fe",
				uc: "1f6a3-1f3fe", isCanonical: !0
			},
			":rowboat_tone3:": {unicode: ["1f6a3-1f3fd"], fname: "1f6a3-1f3fd", uc: "1f6a3-1f3fd", isCanonical: !0},
			":rowboat_tone2:": {unicode: ["1f6a3-1f3fc"], fname: "1f6a3-1f3fc", uc: "1f6a3-1f3fc", isCanonical: !0},
			":rowboat_tone1:": {unicode: ["1f6a3-1f3fb"], fname: "1f6a3-1f3fb", uc: "1f6a3-1f3fb", isCanonical: !0},
			":pray_tone5:": {unicode: ["1f64f-1f3ff"], fname: "1f64f-1f3ff", uc: "1f64f-1f3ff", isCanonical: !0},
			":pray_tone4:": {unicode: ["1f64f-1f3fe"], fname: "1f64f-1f3fe", uc: "1f64f-1f3fe", isCanonical: !0},
			":pray_tone3:": {unicode: ["1f64f-1f3fd"], fname: "1f64f-1f3fd", uc: "1f64f-1f3fd", isCanonical: !0},
			":pray_tone2:": {unicode: ["1f64f-1f3fc"], fname: "1f64f-1f3fc", uc: "1f64f-1f3fc", isCanonical: !0},
			":pray_tone1:": {unicode: ["1f64f-1f3fb"], fname: "1f64f-1f3fb", uc: "1f64f-1f3fb", isCanonical: !0},
			":person_with_pouting_face_tone5:": {
				unicode: ["1f64e-1f3ff"],
				fname: "1f64e-1f3ff",
				uc: "1f64e-1f3ff",
				isCanonical: !0
			},
			":person_with_pouting_face_tone4:": {
				unicode: ["1f64e-1f3fe"],
				fname: "1f64e-1f3fe",
				uc: "1f64e-1f3fe",
				isCanonical: !0
			},
			":person_with_pouting_face_tone3:": {
				unicode: ["1f64e-1f3fd"],
				fname: "1f64e-1f3fd",
				uc: "1f64e-1f3fd",
				isCanonical: !0
			},
			":person_with_pouting_face_tone2:": {
				unicode: ["1f64e-1f3fc"],
				fname: "1f64e-1f3fc",
				uc: "1f64e-1f3fc",
				isCanonical: !0
			},
			":person_with_pouting_face_tone1:": {
				unicode: ["1f64e-1f3fb"],
				fname: "1f64e-1f3fb",
				uc: "1f64e-1f3fb",
				isCanonical: !0
			},
			":person_frowning_tone5:": {
				unicode: ["1f64d-1f3ff"],
				fname: "1f64d-1f3ff",
				uc: "1f64d-1f3ff",
				isCanonical: !0
			},
			":person_frowning_tone4:": {
				unicode: ["1f64d-1f3fe"], fname: "1f64d-1f3fe",
				uc: "1f64d-1f3fe", isCanonical: !0
			},
			":person_frowning_tone3:": {
				unicode: ["1f64d-1f3fd"],
				fname: "1f64d-1f3fd",
				uc: "1f64d-1f3fd",
				isCanonical: !0
			},
			":person_frowning_tone2:": {
				unicode: ["1f64d-1f3fc"],
				fname: "1f64d-1f3fc",
				uc: "1f64d-1f3fc",
				isCanonical: !0
			},
			":person_frowning_tone1:": {
				unicode: ["1f64d-1f3fb"],
				fname: "1f64d-1f3fb",
				uc: "1f64d-1f3fb",
				isCanonical: !0
			},
			":raised_hands_tone5:": {
				unicode: ["1f64c-1f3ff"],
				fname: "1f64c-1f3ff",
				uc: "1f64c-1f3ff",
				isCanonical: !0
			},
			":raised_hands_tone4:": {
				unicode: ["1f64c-1f3fe"], fname: "1f64c-1f3fe",
				uc: "1f64c-1f3fe", isCanonical: !0
			},
			":raised_hands_tone3:": {
				unicode: ["1f64c-1f3fd"],
				fname: "1f64c-1f3fd",
				uc: "1f64c-1f3fd",
				isCanonical: !0
			},
			":raised_hands_tone2:": {
				unicode: ["1f64c-1f3fc"],
				fname: "1f64c-1f3fc",
				uc: "1f64c-1f3fc",
				isCanonical: !0
			},
			":raised_hands_tone1:": {
				unicode: ["1f64c-1f3fb"],
				fname: "1f64c-1f3fb",
				uc: "1f64c-1f3fb",
				isCanonical: !0
			},
			":raising_hand_tone5:": {
				unicode: ["1f64b-1f3ff"],
				fname: "1f64b-1f3ff",
				uc: "1f64b-1f3ff",
				isCanonical: !0
			},
			":raising_hand_tone4:": {
				unicode: ["1f64b-1f3fe"], fname: "1f64b-1f3fe",
				uc: "1f64b-1f3fe", isCanonical: !0
			},
			":raising_hand_tone3:": {
				unicode: ["1f64b-1f3fd"],
				fname: "1f64b-1f3fd",
				uc: "1f64b-1f3fd",
				isCanonical: !0
			},
			":raising_hand_tone2:": {
				unicode: ["1f64b-1f3fc"],
				fname: "1f64b-1f3fc",
				uc: "1f64b-1f3fc",
				isCanonical: !0
			},
			":raising_hand_tone1:": {
				unicode: ["1f64b-1f3fb"],
				fname: "1f64b-1f3fb",
				uc: "1f64b-1f3fb",
				isCanonical: !0
			},
			":bow_tone5:": {unicode: ["1f647-1f3ff"], fname: "1f647-1f3ff", uc: "1f647-1f3ff", isCanonical: !0},
			":bow_tone4:": {
				unicode: ["1f647-1f3fe"], fname: "1f647-1f3fe", uc: "1f647-1f3fe",
				isCanonical: !0
			},
			":bow_tone3:": {unicode: ["1f647-1f3fd"], fname: "1f647-1f3fd", uc: "1f647-1f3fd", isCanonical: !0},
			":bow_tone2:": {unicode: ["1f647-1f3fc"], fname: "1f647-1f3fc", uc: "1f647-1f3fc", isCanonical: !0},
			":bow_tone1:": {unicode: ["1f647-1f3fb"], fname: "1f647-1f3fb", uc: "1f647-1f3fb", isCanonical: !0},
			":ok_woman_tone5:": {unicode: ["1f646-1f3ff"], fname: "1f646-1f3ff", uc: "1f646-1f3ff", isCanonical: !0},
			":ok_woman_tone4:": {unicode: ["1f646-1f3fe"], fname: "1f646-1f3fe", uc: "1f646-1f3fe", isCanonical: !0},
			":ok_woman_tone3:": {
				unicode: ["1f646-1f3fd"],
				fname: "1f646-1f3fd", uc: "1f646-1f3fd", isCanonical: !0
			},
			":ok_woman_tone2:": {unicode: ["1f646-1f3fc"], fname: "1f646-1f3fc", uc: "1f646-1f3fc", isCanonical: !0},
			":ok_woman_tone1:": {unicode: ["1f646-1f3fb"], fname: "1f646-1f3fb", uc: "1f646-1f3fb", isCanonical: !0},
			":no_good_tone5:": {unicode: ["1f645-1f3ff"], fname: "1f645-1f3ff", uc: "1f645-1f3ff", isCanonical: !0},
			":no_good_tone4:": {unicode: ["1f645-1f3fe"], fname: "1f645-1f3fe", uc: "1f645-1f3fe", isCanonical: !0},
			":no_good_tone3:": {
				unicode: ["1f645-1f3fd"], fname: "1f645-1f3fd",
				uc: "1f645-1f3fd", isCanonical: !0
			},
			":no_good_tone2:": {unicode: ["1f645-1f3fc"], fname: "1f645-1f3fc", uc: "1f645-1f3fc", isCanonical: !0},
			":no_good_tone1:": {unicode: ["1f645-1f3fb"], fname: "1f645-1f3fb", uc: "1f645-1f3fb", isCanonical: !0},
			":vulcan_tone5:": {unicode: ["1f596-1f3ff"], fname: "1f596-1f3ff", uc: "1f596-1f3ff", isCanonical: !0},
			":raised_hand_with_part_between_middle_and_ring_fingers_tone5:": {
				unicode: ["1f596-1f3ff"],
				fname: "1f596-1f3ff",
				uc: "1f596-1f3ff",
				isCanonical: !1
			},
			":vulcan_tone4:": {
				unicode: ["1f596-1f3fe"],
				fname: "1f596-1f3fe", uc: "1f596-1f3fe", isCanonical: !0
			},
			":raised_hand_with_part_between_middle_and_ring_fingers_tone4:": {
				unicode: ["1f596-1f3fe"],
				fname: "1f596-1f3fe",
				uc: "1f596-1f3fe",
				isCanonical: !1
			},
			":vulcan_tone3:": {unicode: ["1f596-1f3fd"], fname: "1f596-1f3fd", uc: "1f596-1f3fd", isCanonical: !0},
			":raised_hand_with_part_between_middle_and_ring_fingers_tone3:": {
				unicode: ["1f596-1f3fd"],
				fname: "1f596-1f3fd",
				uc: "1f596-1f3fd",
				isCanonical: !1
			},
			":vulcan_tone2:": {
				unicode: ["1f596-1f3fc"], fname: "1f596-1f3fc", uc: "1f596-1f3fc",
				isCanonical: !0
			},
			":raised_hand_with_part_between_middle_and_ring_fingers_tone2:": {
				unicode: ["1f596-1f3fc"],
				fname: "1f596-1f3fc",
				uc: "1f596-1f3fc",
				isCanonical: !1
			},
			":vulcan_tone1:": {unicode: ["1f596-1f3fb"], fname: "1f596-1f3fb", uc: "1f596-1f3fb", isCanonical: !0},
			":raised_hand_with_part_between_middle_and_ring_fingers_tone1:": {
				unicode: ["1f596-1f3fb"],
				fname: "1f596-1f3fb",
				uc: "1f596-1f3fb",
				isCanonical: !1
			},
			":middle_finger_tone5:": {
				unicode: ["1f595-1f3ff"],
				fname: "1f595-1f3ff",
				uc: "1f595-1f3ff",
				isCanonical: !0
			},
			":reversed_hand_with_middle_finger_extended_tone5:": {
				unicode: ["1f595-1f3ff"],
				fname: "1f595-1f3ff", uc: "1f595-1f3ff", isCanonical: !1
			},
			":middle_finger_tone4:": {
				unicode: ["1f595-1f3fe"],
				fname: "1f595-1f3fe",
				uc: "1f595-1f3fe",
				isCanonical: !0
			},
			":reversed_hand_with_middle_finger_extended_tone4:": {
				unicode: ["1f595-1f3fe"],
				fname: "1f595-1f3fe",
				uc: "1f595-1f3fe",
				isCanonical: !1
			},
			":middle_finger_tone3:": {
				unicode: ["1f595-1f3fd"],
				fname: "1f595-1f3fd",
				uc: "1f595-1f3fd",
				isCanonical: !0
			},
			":reversed_hand_with_middle_finger_extended_tone3:": {
				unicode: ["1f595-1f3fd"], fname: "1f595-1f3fd", uc: "1f595-1f3fd",
				isCanonical: !1
			},
			":middle_finger_tone2:": {
				unicode: ["1f595-1f3fc"],
				fname: "1f595-1f3fc",
				uc: "1f595-1f3fc",
				isCanonical: !0
			},
			":reversed_hand_with_middle_finger_extended_tone2:": {
				unicode: ["1f595-1f3fc"],
				fname: "1f595-1f3fc",
				uc: "1f595-1f3fc",
				isCanonical: !1
			},
			":middle_finger_tone1:": {
				unicode: ["1f595-1f3fb"],
				fname: "1f595-1f3fb",
				uc: "1f595-1f3fb",
				isCanonical: !0
			},
			":reversed_hand_with_middle_finger_extended_tone1:": {
				unicode: ["1f595-1f3fb"],
				fname: "1f595-1f3fb",
				uc: "1f595-1f3fb",
				isCanonical: !1
			},
			":hand_splayed_tone5:": {
				unicode: ["1f590-1f3ff"],
				fname: "1f590-1f3ff", uc: "1f590-1f3ff", isCanonical: !0
			},
			":raised_hand_with_fingers_splayed_tone5:": {
				unicode: ["1f590-1f3ff"],
				fname: "1f590-1f3ff",
				uc: "1f590-1f3ff",
				isCanonical: !1
			},
			":hand_splayed_tone4:": {
				unicode: ["1f590-1f3fe"],
				fname: "1f590-1f3fe",
				uc: "1f590-1f3fe",
				isCanonical: !0
			},
			":raised_hand_with_fingers_splayed_tone4:": {
				unicode: ["1f590-1f3fe"],
				fname: "1f590-1f3fe",
				uc: "1f590-1f3fe",
				isCanonical: !1
			},
			":hand_splayed_tone3:": {
				unicode: ["1f590-1f3fd"],
				fname: "1f590-1f3fd",
				uc: "1f590-1f3fd",
				isCanonical: !0
			},
			":raised_hand_with_fingers_splayed_tone3:": {
				unicode: ["1f590-1f3fd"],
				fname: "1f590-1f3fd", uc: "1f590-1f3fd", isCanonical: !1
			},
			":hand_splayed_tone2:": {
				unicode: ["1f590-1f3fc"],
				fname: "1f590-1f3fc",
				uc: "1f590-1f3fc",
				isCanonical: !0
			},
			":raised_hand_with_fingers_splayed_tone2:": {
				unicode: ["1f590-1f3fc"],
				fname: "1f590-1f3fc",
				uc: "1f590-1f3fc",
				isCanonical: !1
			},
			":hand_splayed_tone1:": {
				unicode: ["1f590-1f3fb"],
				fname: "1f590-1f3fb",
				uc: "1f590-1f3fb",
				isCanonical: !0
			},
			":raised_hand_with_fingers_splayed_tone1:": {
				unicode: ["1f590-1f3fb"],
				fname: "1f590-1f3fb",
				uc: "1f590-1f3fb",
				isCanonical: !1
			},
			":man_dancing_tone5:": {
				unicode: ["1f57a-1f3ff"],
				fname: "1f57a-1f3ff", uc: "1f57a-1f3ff", isCanonical: !0
			},
			":male_dancer_tone5:": {unicode: ["1f57a-1f3ff"], fname: "1f57a-1f3ff", uc: "1f57a-1f3ff", isCanonical: !1},
			":man_dancing_tone4:": {unicode: ["1f57a-1f3fe"], fname: "1f57a-1f3fe", uc: "1f57a-1f3fe", isCanonical: !0},
			":male_dancer_tone4:": {unicode: ["1f57a-1f3fe"], fname: "1f57a-1f3fe", uc: "1f57a-1f3fe", isCanonical: !1},
			":man_dancing_tone3:": {unicode: ["1f57a-1f3fd"], fname: "1f57a-1f3fd", uc: "1f57a-1f3fd", isCanonical: !0},
			":male_dancer_tone3:": {
				unicode: ["1f57a-1f3fd"], fname: "1f57a-1f3fd",
				uc: "1f57a-1f3fd", isCanonical: !1
			},
			":man_dancing_tone2:": {unicode: ["1f57a-1f3fc"], fname: "1f57a-1f3fc", uc: "1f57a-1f3fc", isCanonical: !0},
			":male_dancer_tone2:": {unicode: ["1f57a-1f3fc"], fname: "1f57a-1f3fc", uc: "1f57a-1f3fc", isCanonical: !1},
			":man_dancing_tone1:": {unicode: ["1f57a-1f3fb"], fname: "1f57a-1f3fb", uc: "1f57a-1f3fb", isCanonical: !0},
			":male_dancer_tone1:": {unicode: ["1f57a-1f3fb"], fname: "1f57a-1f3fb", uc: "1f57a-1f3fb", isCanonical: !1},
			":spy_tone5:": {
				unicode: ["1f575-1f3ff"], fname: "1f575-1f3ff", uc: "1f575-1f3ff",
				isCanonical: !0
			},
			":sleuth_or_spy_tone5:": {
				unicode: ["1f575-1f3ff"],
				fname: "1f575-1f3ff",
				uc: "1f575-1f3ff",
				isCanonical: !1
			},
			":spy_tone4:": {unicode: ["1f575-1f3fe"], fname: "1f575-1f3fe", uc: "1f575-1f3fe", isCanonical: !0},
			":sleuth_or_spy_tone4:": {
				unicode: ["1f575-1f3fe"],
				fname: "1f575-1f3fe",
				uc: "1f575-1f3fe",
				isCanonical: !1
			},
			":spy_tone3:": {unicode: ["1f575-1f3fd"], fname: "1f575-1f3fd", uc: "1f575-1f3fd", isCanonical: !0},
			":sleuth_or_spy_tone3:": {
				unicode: ["1f575-1f3fd"],
				fname: "1f575-1f3fd",
				uc: "1f575-1f3fd",
				isCanonical: !1
			},
			":spy_tone2:": {unicode: ["1f575-1f3fc"], fname: "1f575-1f3fc", uc: "1f575-1f3fc", isCanonical: !0},
			":sleuth_or_spy_tone2:": {
				unicode: ["1f575-1f3fc"],
				fname: "1f575-1f3fc",
				uc: "1f575-1f3fc",
				isCanonical: !1
			},
			":spy_tone1:": {unicode: ["1f575-1f3fb"], fname: "1f575-1f3fb", uc: "1f575-1f3fb", isCanonical: !0},
			":sleuth_or_spy_tone1:": {
				unicode: ["1f575-1f3fb"],
				fname: "1f575-1f3fb",
				uc: "1f575-1f3fb",
				isCanonical: !1
			},
			":muscle_tone5:": {unicode: ["1f4aa-1f3ff"], fname: "1f4aa-1f3ff", uc: "1f4aa-1f3ff", isCanonical: !0},
			":muscle_tone4:": {
				unicode: ["1f4aa-1f3fe"],
				fname: "1f4aa-1f3fe", uc: "1f4aa-1f3fe", isCanonical: !0
			},
			":muscle_tone3:": {unicode: ["1f4aa-1f3fd"], fname: "1f4aa-1f3fd", uc: "1f4aa-1f3fd", isCanonical: !0},
			":muscle_tone2:": {unicode: ["1f4aa-1f3fc"], fname: "1f4aa-1f3fc", uc: "1f4aa-1f3fc", isCanonical: !0},
			":muscle_tone1:": {unicode: ["1f4aa-1f3fb"], fname: "1f4aa-1f3fb", uc: "1f4aa-1f3fb", isCanonical: !0},
			":haircut_tone5:": {unicode: ["1f487-1f3ff"], fname: "1f487-1f3ff", uc: "1f487-1f3ff", isCanonical: !0},
			":haircut_tone4:": {
				unicode: ["1f487-1f3fe"], fname: "1f487-1f3fe", uc: "1f487-1f3fe",
				isCanonical: !0
			},
			":haircut_tone3:": {unicode: ["1f487-1f3fd"], fname: "1f487-1f3fd", uc: "1f487-1f3fd", isCanonical: !0},
			":haircut_tone2:": {unicode: ["1f487-1f3fc"], fname: "1f487-1f3fc", uc: "1f487-1f3fc", isCanonical: !0},
			":haircut_tone1:": {unicode: ["1f487-1f3fb"], fname: "1f487-1f3fb", uc: "1f487-1f3fb", isCanonical: !0},
			":massage_tone5:": {unicode: ["1f486-1f3ff"], fname: "1f486-1f3ff", uc: "1f486-1f3ff", isCanonical: !0},
			":massage_tone4:": {unicode: ["1f486-1f3fe"], fname: "1f486-1f3fe", uc: "1f486-1f3fe", isCanonical: !0},
			":massage_tone3:": {
				unicode: ["1f486-1f3fd"],
				fname: "1f486-1f3fd", uc: "1f486-1f3fd", isCanonical: !0
			},
			":massage_tone2:": {unicode: ["1f486-1f3fc"], fname: "1f486-1f3fc", uc: "1f486-1f3fc", isCanonical: !0},
			":massage_tone1:": {unicode: ["1f486-1f3fb"], fname: "1f486-1f3fb", uc: "1f486-1f3fb", isCanonical: !0},
			":nail_care_tone5:": {unicode: ["1f485-1f3ff"], fname: "1f485-1f3ff", uc: "1f485-1f3ff", isCanonical: !0},
			":nail_care_tone4:": {unicode: ["1f485-1f3fe"], fname: "1f485-1f3fe", uc: "1f485-1f3fe", isCanonical: !0},
			":nail_care_tone3:": {
				unicode: ["1f485-1f3fd"], fname: "1f485-1f3fd",
				uc: "1f485-1f3fd", isCanonical: !0
			},
			":nail_care_tone2:": {unicode: ["1f485-1f3fc"], fname: "1f485-1f3fc", uc: "1f485-1f3fc", isCanonical: !0},
			":nail_care_tone1:": {unicode: ["1f485-1f3fb"], fname: "1f485-1f3fb", uc: "1f485-1f3fb", isCanonical: !0},
			":dancer_tone5:": {unicode: ["1f483-1f3ff"], fname: "1f483-1f3ff", uc: "1f483-1f3ff", isCanonical: !0},
			":dancer_tone4:": {unicode: ["1f483-1f3fe"], fname: "1f483-1f3fe", uc: "1f483-1f3fe", isCanonical: !0},
			":dancer_tone3:": {unicode: ["1f483-1f3fd"], fname: "1f483-1f3fd", uc: "1f483-1f3fd", isCanonical: !0},
			":dancer_tone2:": {unicode: ["1f483-1f3fc"], fname: "1f483-1f3fc", uc: "1f483-1f3fc", isCanonical: !0},
			":dancer_tone1:": {unicode: ["1f483-1f3fb"], fname: "1f483-1f3fb", uc: "1f483-1f3fb", isCanonical: !0},
			":guardsman_tone5:": {unicode: ["1f482-1f3ff"], fname: "1f482-1f3ff", uc: "1f482-1f3ff", isCanonical: !0},
			":guardsman_tone4:": {unicode: ["1f482-1f3fe"], fname: "1f482-1f3fe", uc: "1f482-1f3fe", isCanonical: !0},
			":guardsman_tone3:": {unicode: ["1f482-1f3fd"], fname: "1f482-1f3fd", uc: "1f482-1f3fd", isCanonical: !0},
			":guardsman_tone2:": {
				unicode: ["1f482-1f3fc"],
				fname: "1f482-1f3fc", uc: "1f482-1f3fc", isCanonical: !0
			},
			":guardsman_tone1:": {unicode: ["1f482-1f3fb"], fname: "1f482-1f3fb", uc: "1f482-1f3fb", isCanonical: !0},
			":information_desk_person_tone5:": {
				unicode: ["1f481-1f3ff"],
				fname: "1f481-1f3ff",
				uc: "1f481-1f3ff",
				isCanonical: !0
			},
			":information_desk_person_tone4:": {
				unicode: ["1f481-1f3fe"],
				fname: "1f481-1f3fe",
				uc: "1f481-1f3fe",
				isCanonical: !0
			},
			":information_desk_person_tone3:": {
				unicode: ["1f481-1f3fd"],
				fname: "1f481-1f3fd",
				uc: "1f481-1f3fd",
				isCanonical: !0
			},
			":information_desk_person_tone2:": {
				unicode: ["1f481-1f3fc"],
				fname: "1f481-1f3fc", uc: "1f481-1f3fc", isCanonical: !0
			},
			":information_desk_person_tone1:": {
				unicode: ["1f481-1f3fb"],
				fname: "1f481-1f3fb",
				uc: "1f481-1f3fb",
				isCanonical: !0
			},
			":angel_tone5:": {unicode: ["1f47c-1f3ff"], fname: "1f47c-1f3ff", uc: "1f47c-1f3ff", isCanonical: !0},
			":angel_tone4:": {unicode: ["1f47c-1f3fe"], fname: "1f47c-1f3fe", uc: "1f47c-1f3fe", isCanonical: !0},
			":angel_tone3:": {unicode: ["1f47c-1f3fd"], fname: "1f47c-1f3fd", uc: "1f47c-1f3fd", isCanonical: !0},
			":angel_tone2:": {
				unicode: ["1f47c-1f3fc"], fname: "1f47c-1f3fc",
				uc: "1f47c-1f3fc", isCanonical: !0
			},
			":angel_tone1:": {unicode: ["1f47c-1f3fb"], fname: "1f47c-1f3fb", uc: "1f47c-1f3fb", isCanonical: !0},
			":princess_tone5:": {unicode: ["1f478-1f3ff"], fname: "1f478-1f3ff", uc: "1f478-1f3ff", isCanonical: !0},
			":princess_tone4:": {unicode: ["1f478-1f3fe"], fname: "1f478-1f3fe", uc: "1f478-1f3fe", isCanonical: !0},
			":princess_tone3:": {unicode: ["1f478-1f3fd"], fname: "1f478-1f3fd", uc: "1f478-1f3fd", isCanonical: !0},
			":princess_tone2:": {unicode: ["1f478-1f3fc"], fname: "1f478-1f3fc", uc: "1f478-1f3fc", isCanonical: !0},
			":princess_tone1:": {unicode: ["1f478-1f3fb"], fname: "1f478-1f3fb", uc: "1f478-1f3fb", isCanonical: !0},
			":construction_worker_tone5:": {
				unicode: ["1f477-1f3ff"],
				fname: "1f477-1f3ff",
				uc: "1f477-1f3ff",
				isCanonical: !0
			},
			":construction_worker_tone4:": {
				unicode: ["1f477-1f3fe"],
				fname: "1f477-1f3fe",
				uc: "1f477-1f3fe",
				isCanonical: !0
			},
			":construction_worker_tone3:": {
				unicode: ["1f477-1f3fd"],
				fname: "1f477-1f3fd",
				uc: "1f477-1f3fd",
				isCanonical: !0
			},
			":construction_worker_tone2:": {
				unicode: ["1f477-1f3fc"], fname: "1f477-1f3fc", uc: "1f477-1f3fc",
				isCanonical: !0
			},
			":construction_worker_tone1:": {
				unicode: ["1f477-1f3fb"],
				fname: "1f477-1f3fb",
				uc: "1f477-1f3fb",
				isCanonical: !0
			},
			":baby_tone5:": {unicode: ["1f476-1f3ff"], fname: "1f476-1f3ff", uc: "1f476-1f3ff", isCanonical: !0},
			":baby_tone4:": {unicode: ["1f476-1f3fe"], fname: "1f476-1f3fe", uc: "1f476-1f3fe", isCanonical: !0},
			":baby_tone3:": {unicode: ["1f476-1f3fd"], fname: "1f476-1f3fd", uc: "1f476-1f3fd", isCanonical: !0},
			":baby_tone2:": {unicode: ["1f476-1f3fc"], fname: "1f476-1f3fc", uc: "1f476-1f3fc", isCanonical: !0},
			":baby_tone1:": {
				unicode: ["1f476-1f3fb"],
				fname: "1f476-1f3fb", uc: "1f476-1f3fb", isCanonical: !0
			},
			":older_woman_tone5:": {unicode: ["1f475-1f3ff"], fname: "1f475-1f3ff", uc: "1f475-1f3ff", isCanonical: !0},
			":grandma_tone5:": {unicode: ["1f475-1f3ff"], fname: "1f475-1f3ff", uc: "1f475-1f3ff", isCanonical: !1},
			":older_woman_tone4:": {unicode: ["1f475-1f3fe"], fname: "1f475-1f3fe", uc: "1f475-1f3fe", isCanonical: !0},
			":grandma_tone4:": {unicode: ["1f475-1f3fe"], fname: "1f475-1f3fe", uc: "1f475-1f3fe", isCanonical: !1},
			":older_woman_tone3:": {
				unicode: ["1f475-1f3fd"], fname: "1f475-1f3fd",
				uc: "1f475-1f3fd", isCanonical: !0
			},
			":grandma_tone3:": {unicode: ["1f475-1f3fd"], fname: "1f475-1f3fd", uc: "1f475-1f3fd", isCanonical: !1},
			":older_woman_tone2:": {unicode: ["1f475-1f3fc"], fname: "1f475-1f3fc", uc: "1f475-1f3fc", isCanonical: !0},
			":grandma_tone2:": {unicode: ["1f475-1f3fc"], fname: "1f475-1f3fc", uc: "1f475-1f3fc", isCanonical: !1},
			":older_woman_tone1:": {unicode: ["1f475-1f3fb"], fname: "1f475-1f3fb", uc: "1f475-1f3fb", isCanonical: !0},
			":grandma_tone1:": {
				unicode: ["1f475-1f3fb"], fname: "1f475-1f3fb", uc: "1f475-1f3fb",
				isCanonical: !1
			},
			":older_man_tone5:": {unicode: ["1f474-1f3ff"], fname: "1f474-1f3ff", uc: "1f474-1f3ff", isCanonical: !0},
			":older_man_tone4:": {unicode: ["1f474-1f3fe"], fname: "1f474-1f3fe", uc: "1f474-1f3fe", isCanonical: !0},
			":older_man_tone3:": {unicode: ["1f474-1f3fd"], fname: "1f474-1f3fd", uc: "1f474-1f3fd", isCanonical: !0},
			":older_man_tone2:": {unicode: ["1f474-1f3fc"], fname: "1f474-1f3fc", uc: "1f474-1f3fc", isCanonical: !0},
			":older_man_tone1:": {unicode: ["1f474-1f3fb"], fname: "1f474-1f3fb", uc: "1f474-1f3fb", isCanonical: !0},
			":man_with_turban_tone5:": {
				unicode: ["1f473-1f3ff"],
				fname: "1f473-1f3ff",
				uc: "1f473-1f3ff",
				isCanonical: !0
			},
			":man_with_turban_tone4:": {
				unicode: ["1f473-1f3fe"],
				fname: "1f473-1f3fe",
				uc: "1f473-1f3fe",
				isCanonical: !0
			},
			":man_with_turban_tone3:": {
				unicode: ["1f473-1f3fd"],
				fname: "1f473-1f3fd",
				uc: "1f473-1f3fd",
				isCanonical: !0
			},
			":man_with_turban_tone2:": {
				unicode: ["1f473-1f3fc"],
				fname: "1f473-1f3fc",
				uc: "1f473-1f3fc",
				isCanonical: !0
			},
			":man_with_turban_tone1:": {
				unicode: ["1f473-1f3fb"], fname: "1f473-1f3fb", uc: "1f473-1f3fb",
				isCanonical: !0
			},
			":man_with_gua_pi_mao_tone5:": {
				unicode: ["1f472-1f3ff"],
				fname: "1f472-1f3ff",
				uc: "1f472-1f3ff",
				isCanonical: !0
			},
			":man_with_gua_pi_mao_tone4:": {
				unicode: ["1f472-1f3fe"],
				fname: "1f472-1f3fe",
				uc: "1f472-1f3fe",
				isCanonical: !0
			},
			":man_with_gua_pi_mao_tone3:": {
				unicode: ["1f472-1f3fd"],
				fname: "1f472-1f3fd",
				uc: "1f472-1f3fd",
				isCanonical: !0
			},
			":man_with_gua_pi_mao_tone2:": {
				unicode: ["1f472-1f3fc"],
				fname: "1f472-1f3fc",
				uc: "1f472-1f3fc",
				isCanonical: !0
			},
			":man_with_gua_pi_mao_tone1:": {
				unicode: ["1f472-1f3fb"],
				fname: "1f472-1f3fb", uc: "1f472-1f3fb", isCanonical: !0
			},
			":person_with_blond_hair_tone5:": {
				unicode: ["1f471-1f3ff"],
				fname: "1f471-1f3ff",
				uc: "1f471-1f3ff",
				isCanonical: !0
			},
			":person_with_blond_hair_tone4:": {
				unicode: ["1f471-1f3fe"],
				fname: "1f471-1f3fe",
				uc: "1f471-1f3fe",
				isCanonical: !0
			},
			":person_with_blond_hair_tone3:": {
				unicode: ["1f471-1f3fd"],
				fname: "1f471-1f3fd",
				uc: "1f471-1f3fd",
				isCanonical: !0
			},
			":person_with_blond_hair_tone2:": {
				unicode: ["1f471-1f3fc"],
				fname: "1f471-1f3fc",
				uc: "1f471-1f3fc",
				isCanonical: !0
			},
			":person_with_blond_hair_tone1:": {
				unicode: ["1f471-1f3fb"],
				fname: "1f471-1f3fb", uc: "1f471-1f3fb", isCanonical: !0
			},
			":bride_with_veil_tone5:": {
				unicode: ["1f470-1f3ff"],
				fname: "1f470-1f3ff",
				uc: "1f470-1f3ff",
				isCanonical: !0
			},
			":bride_with_veil_tone4:": {
				unicode: ["1f470-1f3fe"],
				fname: "1f470-1f3fe",
				uc: "1f470-1f3fe",
				isCanonical: !0
			},
			":bride_with_veil_tone3:": {
				unicode: ["1f470-1f3fd"],
				fname: "1f470-1f3fd",
				uc: "1f470-1f3fd",
				isCanonical: !0
			},
			":bride_with_veil_tone2:": {
				unicode: ["1f470-1f3fc"],
				fname: "1f470-1f3fc",
				uc: "1f470-1f3fc",
				isCanonical: !0
			},
			":bride_with_veil_tone1:": {
				unicode: ["1f470-1f3fb"],
				fname: "1f470-1f3fb", uc: "1f470-1f3fb", isCanonical: !0
			},
			":cop_tone5:": {unicode: ["1f46e-1f3ff"], fname: "1f46e-1f3ff", uc: "1f46e-1f3ff", isCanonical: !0},
			":cop_tone4:": {unicode: ["1f46e-1f3fe"], fname: "1f46e-1f3fe", uc: "1f46e-1f3fe", isCanonical: !0},
			":cop_tone3:": {unicode: ["1f46e-1f3fd"], fname: "1f46e-1f3fd", uc: "1f46e-1f3fd", isCanonical: !0},
			":cop_tone2:": {unicode: ["1f46e-1f3fc"], fname: "1f46e-1f3fc", uc: "1f46e-1f3fc", isCanonical: !0},
			":cop_tone1:": {unicode: ["1f46e-1f3fb"], fname: "1f46e-1f3fb", uc: "1f46e-1f3fb", isCanonical: !0},
			":woman_tone5:": {unicode: ["1f469-1f3ff"], fname: "1f469-1f3ff", uc: "1f469-1f3ff", isCanonical: !0},
			":woman_tone4:": {unicode: ["1f469-1f3fe"], fname: "1f469-1f3fe", uc: "1f469-1f3fe", isCanonical: !0},
			":woman_tone3:": {unicode: ["1f469-1f3fd"], fname: "1f469-1f3fd", uc: "1f469-1f3fd", isCanonical: !0},
			":woman_tone2:": {unicode: ["1f469-1f3fc"], fname: "1f469-1f3fc", uc: "1f469-1f3fc", isCanonical: !0},
			":woman_tone1:": {unicode: ["1f469-1f3fb"], fname: "1f469-1f3fb", uc: "1f469-1f3fb", isCanonical: !0},
			":man_tone5:": {
				unicode: ["1f468-1f3ff"],
				fname: "1f468-1f3ff", uc: "1f468-1f3ff", isCanonical: !0
			},
			":man_tone4:": {unicode: ["1f468-1f3fe"], fname: "1f468-1f3fe", uc: "1f468-1f3fe", isCanonical: !0},
			":man_tone3:": {unicode: ["1f468-1f3fd"], fname: "1f468-1f3fd", uc: "1f468-1f3fd", isCanonical: !0},
			":man_tone2:": {unicode: ["1f468-1f3fc"], fname: "1f468-1f3fc", uc: "1f468-1f3fc", isCanonical: !0},
			":man_tone1:": {unicode: ["1f468-1f3fb"], fname: "1f468-1f3fb", uc: "1f468-1f3fb", isCanonical: !0},
			":girl_tone5:": {unicode: ["1f467-1f3ff"], fname: "1f467-1f3ff", uc: "1f467-1f3ff", isCanonical: !0},
			":girl_tone4:": {unicode: ["1f467-1f3fe"], fname: "1f467-1f3fe", uc: "1f467-1f3fe", isCanonical: !0},
			":girl_tone3:": {unicode: ["1f467-1f3fd"], fname: "1f467-1f3fd", uc: "1f467-1f3fd", isCanonical: !0},
			":girl_tone2:": {unicode: ["1f467-1f3fc"], fname: "1f467-1f3fc", uc: "1f467-1f3fc", isCanonical: !0},
			":girl_tone1:": {unicode: ["1f467-1f3fb"], fname: "1f467-1f3fb", uc: "1f467-1f3fb", isCanonical: !0},
			":boy_tone5:": {unicode: ["1f466-1f3ff"], fname: "1f466-1f3ff", uc: "1f466-1f3ff", isCanonical: !0},
			":boy_tone4:": {
				unicode: ["1f466-1f3fe"],
				fname: "1f466-1f3fe", uc: "1f466-1f3fe", isCanonical: !0
			},
			":boy_tone3:": {unicode: ["1f466-1f3fd"], fname: "1f466-1f3fd", uc: "1f466-1f3fd", isCanonical: !0},
			":boy_tone2:": {unicode: ["1f466-1f3fc"], fname: "1f466-1f3fc", uc: "1f466-1f3fc", isCanonical: !0},
			":boy_tone1:": {unicode: ["1f466-1f3fb"], fname: "1f466-1f3fb", uc: "1f466-1f3fb", isCanonical: !0},
			":open_hands_tone5:": {unicode: ["1f450-1f3ff"], fname: "1f450-1f3ff", uc: "1f450-1f3ff", isCanonical: !0},
			":open_hands_tone4:": {
				unicode: ["1f450-1f3fe"], fname: "1f450-1f3fe", uc: "1f450-1f3fe",
				isCanonical: !0
			},
			":open_hands_tone3:": {unicode: ["1f450-1f3fd"], fname: "1f450-1f3fd", uc: "1f450-1f3fd", isCanonical: !0},
			":open_hands_tone2:": {unicode: ["1f450-1f3fc"], fname: "1f450-1f3fc", uc: "1f450-1f3fc", isCanonical: !0},
			":open_hands_tone1:": {unicode: ["1f450-1f3fb"], fname: "1f450-1f3fb", uc: "1f450-1f3fb", isCanonical: !0},
			":clap_tone5:": {unicode: ["1f44f-1f3ff"], fname: "1f44f-1f3ff", uc: "1f44f-1f3ff", isCanonical: !0},
			":clap_tone4:": {unicode: ["1f44f-1f3fe"], fname: "1f44f-1f3fe", uc: "1f44f-1f3fe", isCanonical: !0},
			":clap_tone3:": {
				unicode: ["1f44f-1f3fd"],
				fname: "1f44f-1f3fd", uc: "1f44f-1f3fd", isCanonical: !0
			},
			":clap_tone2:": {unicode: ["1f44f-1f3fc"], fname: "1f44f-1f3fc", uc: "1f44f-1f3fc", isCanonical: !0},
			":clap_tone1:": {unicode: ["1f44f-1f3fb"], fname: "1f44f-1f3fb", uc: "1f44f-1f3fb", isCanonical: !0},
			":thumbsdown_tone5:": {unicode: ["1f44e-1f3ff"], fname: "1f44e-1f3ff", uc: "1f44e-1f3ff", isCanonical: !0},
			":-1_tone5:": {unicode: ["1f44e-1f3ff"], fname: "1f44e-1f3ff", uc: "1f44e-1f3ff", isCanonical: !1},
			":thumbdown_tone5:": {
				unicode: ["1f44e-1f3ff"], fname: "1f44e-1f3ff", uc: "1f44e-1f3ff",
				isCanonical: !1
			},
			":thumbsdown_tone4:": {unicode: ["1f44e-1f3fe"], fname: "1f44e-1f3fe", uc: "1f44e-1f3fe", isCanonical: !0},
			":-1_tone4:": {unicode: ["1f44e-1f3fe"], fname: "1f44e-1f3fe", uc: "1f44e-1f3fe", isCanonical: !1},
			":thumbdown_tone4:": {unicode: ["1f44e-1f3fe"], fname: "1f44e-1f3fe", uc: "1f44e-1f3fe", isCanonical: !1},
			":thumbsdown_tone3:": {unicode: ["1f44e-1f3fd"], fname: "1f44e-1f3fd", uc: "1f44e-1f3fd", isCanonical: !0},
			":-1_tone3:": {unicode: ["1f44e-1f3fd"], fname: "1f44e-1f3fd", uc: "1f44e-1f3fd", isCanonical: !1},
			":thumbdown_tone3:": {
				unicode: ["1f44e-1f3fd"],
				fname: "1f44e-1f3fd", uc: "1f44e-1f3fd", isCanonical: !1
			},
			":thumbsdown_tone2:": {unicode: ["1f44e-1f3fc"], fname: "1f44e-1f3fc", uc: "1f44e-1f3fc", isCanonical: !0},
			":-1_tone2:": {unicode: ["1f44e-1f3fc"], fname: "1f44e-1f3fc", uc: "1f44e-1f3fc", isCanonical: !1},
			":thumbdown_tone2:": {unicode: ["1f44e-1f3fc"], fname: "1f44e-1f3fc", uc: "1f44e-1f3fc", isCanonical: !1},
			":thumbsdown_tone1:": {unicode: ["1f44e-1f3fb"], fname: "1f44e-1f3fb", uc: "1f44e-1f3fb", isCanonical: !0},
			":-1_tone1:": {
				unicode: ["1f44e-1f3fb"], fname: "1f44e-1f3fb", uc: "1f44e-1f3fb",
				isCanonical: !1
			},
			":thumbdown_tone1:": {unicode: ["1f44e-1f3fb"], fname: "1f44e-1f3fb", uc: "1f44e-1f3fb", isCanonical: !1},
			":thumbsup_tone5:": {unicode: ["1f44d-1f3ff"], fname: "1f44d-1f3ff", uc: "1f44d-1f3ff", isCanonical: !0},
			":+1_tone5:": {unicode: ["1f44d-1f3ff"], fname: "1f44d-1f3ff", uc: "1f44d-1f3ff", isCanonical: !1},
			":thumbup_tone5:": {unicode: ["1f44d-1f3ff"], fname: "1f44d-1f3ff", uc: "1f44d-1f3ff", isCanonical: !1},
			":thumbsup_tone4:": {unicode: ["1f44d-1f3fe"], fname: "1f44d-1f3fe", uc: "1f44d-1f3fe", isCanonical: !0},
			":+1_tone4:": {
				unicode: ["1f44d-1f3fe"],
				fname: "1f44d-1f3fe", uc: "1f44d-1f3fe", isCanonical: !1
			},
			":thumbup_tone4:": {unicode: ["1f44d-1f3fe"], fname: "1f44d-1f3fe", uc: "1f44d-1f3fe", isCanonical: !1},
			":thumbsup_tone3:": {unicode: ["1f44d-1f3fd"], fname: "1f44d-1f3fd", uc: "1f44d-1f3fd", isCanonical: !0},
			":+1_tone3:": {unicode: ["1f44d-1f3fd"], fname: "1f44d-1f3fd", uc: "1f44d-1f3fd", isCanonical: !1},
			":thumbup_tone3:": {unicode: ["1f44d-1f3fd"], fname: "1f44d-1f3fd", uc: "1f44d-1f3fd", isCanonical: !1},
			":thumbsup_tone2:": {
				unicode: ["1f44d-1f3fc"], fname: "1f44d-1f3fc", uc: "1f44d-1f3fc",
				isCanonical: !0
			},
			":+1_tone2:": {unicode: ["1f44d-1f3fc"], fname: "1f44d-1f3fc", uc: "1f44d-1f3fc", isCanonical: !1},
			":thumbup_tone2:": {unicode: ["1f44d-1f3fc"], fname: "1f44d-1f3fc", uc: "1f44d-1f3fc", isCanonical: !1},
			":thumbsup_tone1:": {unicode: ["1f44d-1f3fb"], fname: "1f44d-1f3fb", uc: "1f44d-1f3fb", isCanonical: !0},
			":+1_tone1:": {unicode: ["1f44d-1f3fb"], fname: "1f44d-1f3fb", uc: "1f44d-1f3fb", isCanonical: !1},
			":thumbup_tone1:": {unicode: ["1f44d-1f3fb"], fname: "1f44d-1f3fb", uc: "1f44d-1f3fb", isCanonical: !1},
			":ok_hand_tone5:": {
				unicode: ["1f44c-1f3ff"],
				fname: "1f44c-1f3ff", uc: "1f44c-1f3ff", isCanonical: !0
			},
			":ok_hand_tone4:": {unicode: ["1f44c-1f3fe"], fname: "1f44c-1f3fe", uc: "1f44c-1f3fe", isCanonical: !0},
			":ok_hand_tone3:": {unicode: ["1f44c-1f3fd"], fname: "1f44c-1f3fd", uc: "1f44c-1f3fd", isCanonical: !0},
			":ok_hand_tone2:": {unicode: ["1f44c-1f3fc"], fname: "1f44c-1f3fc", uc: "1f44c-1f3fc", isCanonical: !0},
			":ok_hand_tone1:": {unicode: ["1f44c-1f3fb"], fname: "1f44c-1f3fb", uc: "1f44c-1f3fb", isCanonical: !0},
			":wave_tone5:": {
				unicode: ["1f44b-1f3ff"], fname: "1f44b-1f3ff", uc: "1f44b-1f3ff",
				isCanonical: !0
			},
			":wave_tone4:": {unicode: ["1f44b-1f3fe"], fname: "1f44b-1f3fe", uc: "1f44b-1f3fe", isCanonical: !0},
			":wave_tone3:": {unicode: ["1f44b-1f3fd"], fname: "1f44b-1f3fd", uc: "1f44b-1f3fd", isCanonical: !0},
			":wave_tone2:": {unicode: ["1f44b-1f3fc"], fname: "1f44b-1f3fc", uc: "1f44b-1f3fc", isCanonical: !0},
			":wave_tone1:": {unicode: ["1f44b-1f3fb"], fname: "1f44b-1f3fb", uc: "1f44b-1f3fb", isCanonical: !0},
			":punch_tone5:": {unicode: ["1f44a-1f3ff"], fname: "1f44a-1f3ff", uc: "1f44a-1f3ff", isCanonical: !0},
			":punch_tone4:": {
				unicode: ["1f44a-1f3fe"],
				fname: "1f44a-1f3fe", uc: "1f44a-1f3fe", isCanonical: !0
			},
			":punch_tone3:": {unicode: ["1f44a-1f3fd"], fname: "1f44a-1f3fd", uc: "1f44a-1f3fd", isCanonical: !0},
			":punch_tone2:": {unicode: ["1f44a-1f3fc"], fname: "1f44a-1f3fc", uc: "1f44a-1f3fc", isCanonical: !0},
			":punch_tone1:": {unicode: ["1f44a-1f3fb"], fname: "1f44a-1f3fb", uc: "1f44a-1f3fb", isCanonical: !0},
			":point_right_tone5:": {unicode: ["1f449-1f3ff"], fname: "1f449-1f3ff", uc: "1f449-1f3ff", isCanonical: !0},
			":point_right_tone4:": {
				unicode: ["1f449-1f3fe"], fname: "1f449-1f3fe",
				uc: "1f449-1f3fe", isCanonical: !0
			},
			":point_right_tone3:": {unicode: ["1f449-1f3fd"], fname: "1f449-1f3fd", uc: "1f449-1f3fd", isCanonical: !0},
			":point_right_tone2:": {unicode: ["1f449-1f3fc"], fname: "1f449-1f3fc", uc: "1f449-1f3fc", isCanonical: !0},
			":point_right_tone1:": {unicode: ["1f449-1f3fb"], fname: "1f449-1f3fb", uc: "1f449-1f3fb", isCanonical: !0},
			":point_left_tone5:": {unicode: ["1f448-1f3ff"], fname: "1f448-1f3ff", uc: "1f448-1f3ff", isCanonical: !0},
			":point_left_tone4:": {
				unicode: ["1f448-1f3fe"], fname: "1f448-1f3fe", uc: "1f448-1f3fe",
				isCanonical: !0
			},
			":point_left_tone3:": {unicode: ["1f448-1f3fd"], fname: "1f448-1f3fd", uc: "1f448-1f3fd", isCanonical: !0},
			":point_left_tone2:": {unicode: ["1f448-1f3fc"], fname: "1f448-1f3fc", uc: "1f448-1f3fc", isCanonical: !0},
			":point_left_tone1:": {unicode: ["1f448-1f3fb"], fname: "1f448-1f3fb", uc: "1f448-1f3fb", isCanonical: !0},
			":point_down_tone5:": {unicode: ["1f447-1f3ff"], fname: "1f447-1f3ff", uc: "1f447-1f3ff", isCanonical: !0},
			":point_down_tone4:": {unicode: ["1f447-1f3fe"], fname: "1f447-1f3fe", uc: "1f447-1f3fe", isCanonical: !0},
			":point_down_tone3:": {unicode: ["1f447-1f3fd"], fname: "1f447-1f3fd", uc: "1f447-1f3fd", isCanonical: !0},
			":point_down_tone2:": {unicode: ["1f447-1f3fc"], fname: "1f447-1f3fc", uc: "1f447-1f3fc", isCanonical: !0},
			":point_down_tone1:": {unicode: ["1f447-1f3fb"], fname: "1f447-1f3fb", uc: "1f447-1f3fb", isCanonical: !0},
			":point_up_2_tone5:": {unicode: ["1f446-1f3ff"], fname: "1f446-1f3ff", uc: "1f446-1f3ff", isCanonical: !0},
			":point_up_2_tone4:": {unicode: ["1f446-1f3fe"], fname: "1f446-1f3fe", uc: "1f446-1f3fe", isCanonical: !0},
			":point_up_2_tone3:": {
				unicode: ["1f446-1f3fd"],
				fname: "1f446-1f3fd", uc: "1f446-1f3fd", isCanonical: !0
			},
			":point_up_2_tone2:": {unicode: ["1f446-1f3fc"], fname: "1f446-1f3fc", uc: "1f446-1f3fc", isCanonical: !0},
			":point_up_2_tone1:": {unicode: ["1f446-1f3fb"], fname: "1f446-1f3fb", uc: "1f446-1f3fb", isCanonical: !0},
			":nose_tone5:": {unicode: ["1f443-1f3ff"], fname: "1f443-1f3ff", uc: "1f443-1f3ff", isCanonical: !0},
			":nose_tone4:": {unicode: ["1f443-1f3fe"], fname: "1f443-1f3fe", uc: "1f443-1f3fe", isCanonical: !0},
			":nose_tone3:": {
				unicode: ["1f443-1f3fd"], fname: "1f443-1f3fd", uc: "1f443-1f3fd",
				isCanonical: !0
			},
			":nose_tone2:": {unicode: ["1f443-1f3fc"], fname: "1f443-1f3fc", uc: "1f443-1f3fc", isCanonical: !0},
			":nose_tone1:": {unicode: ["1f443-1f3fb"], fname: "1f443-1f3fb", uc: "1f443-1f3fb", isCanonical: !0},
			":ear_tone5:": {unicode: ["1f442-1f3ff"], fname: "1f442-1f3ff", uc: "1f442-1f3ff", isCanonical: !0},
			":ear_tone4:": {unicode: ["1f442-1f3fe"], fname: "1f442-1f3fe", uc: "1f442-1f3fe", isCanonical: !0},
			":ear_tone3:": {unicode: ["1f442-1f3fd"], fname: "1f442-1f3fd", uc: "1f442-1f3fd", isCanonical: !0},
			":ear_tone2:": {
				unicode: ["1f442-1f3fc"],
				fname: "1f442-1f3fc", uc: "1f442-1f3fc", isCanonical: !0
			},
			":ear_tone1:": {unicode: ["1f442-1f3fb"], fname: "1f442-1f3fb", uc: "1f442-1f3fb", isCanonical: !0},
			":lifter_tone5:": {unicode: ["1f3cb-1f3ff"], fname: "1f3cb-1f3ff", uc: "1f3cb-1f3ff", isCanonical: !0},
			":weight_lifter_tone5:": {
				unicode: ["1f3cb-1f3ff"],
				fname: "1f3cb-1f3ff",
				uc: "1f3cb-1f3ff",
				isCanonical: !1
			},
			":lifter_tone4:": {unicode: ["1f3cb-1f3fe"], fname: "1f3cb-1f3fe", uc: "1f3cb-1f3fe", isCanonical: !0},
			":weight_lifter_tone4:": {
				unicode: ["1f3cb-1f3fe"], fname: "1f3cb-1f3fe",
				uc: "1f3cb-1f3fe", isCanonical: !1
			},
			":lifter_tone3:": {unicode: ["1f3cb-1f3fd"], fname: "1f3cb-1f3fd", uc: "1f3cb-1f3fd", isCanonical: !0},
			":weight_lifter_tone3:": {
				unicode: ["1f3cb-1f3fd"],
				fname: "1f3cb-1f3fd",
				uc: "1f3cb-1f3fd",
				isCanonical: !1
			},
			":lifter_tone2:": {unicode: ["1f3cb-1f3fc"], fname: "1f3cb-1f3fc", uc: "1f3cb-1f3fc", isCanonical: !0},
			":weight_lifter_tone2:": {
				unicode: ["1f3cb-1f3fc"],
				fname: "1f3cb-1f3fc",
				uc: "1f3cb-1f3fc",
				isCanonical: !1
			},
			":lifter_tone1:": {
				unicode: ["1f3cb-1f3fb"], fname: "1f3cb-1f3fb", uc: "1f3cb-1f3fb",
				isCanonical: !0
			},
			":weight_lifter_tone1:": {
				unicode: ["1f3cb-1f3fb"],
				fname: "1f3cb-1f3fb",
				uc: "1f3cb-1f3fb",
				isCanonical: !1
			},
			":swimmer_tone5:": {unicode: ["1f3ca-1f3ff"], fname: "1f3ca-1f3ff", uc: "1f3ca-1f3ff", isCanonical: !0},
			":swimmer_tone4:": {unicode: ["1f3ca-1f3fe"], fname: "1f3ca-1f3fe", uc: "1f3ca-1f3fe", isCanonical: !0},
			":swimmer_tone3:": {unicode: ["1f3ca-1f3fd"], fname: "1f3ca-1f3fd", uc: "1f3ca-1f3fd", isCanonical: !0},
			":swimmer_tone2:": {unicode: ["1f3ca-1f3fc"], fname: "1f3ca-1f3fc", uc: "1f3ca-1f3fc", isCanonical: !0},
			":swimmer_tone1:": {unicode: ["1f3ca-1f3fb"], fname: "1f3ca-1f3fb", uc: "1f3ca-1f3fb", isCanonical: !0},
			":horse_racing_tone5:": {
				unicode: ["1f3c7-1f3ff"],
				fname: "1f3c7-1f3ff",
				uc: "1f3c7-1f3ff",
				isCanonical: !0
			},
			":horse_racing_tone4:": {
				unicode: ["1f3c7-1f3fe"],
				fname: "1f3c7-1f3fe",
				uc: "1f3c7-1f3fe",
				isCanonical: !0
			},
			":horse_racing_tone3:": {
				unicode: ["1f3c7-1f3fd"],
				fname: "1f3c7-1f3fd",
				uc: "1f3c7-1f3fd",
				isCanonical: !0
			},
			":horse_racing_tone2:": {
				unicode: ["1f3c7-1f3fc"],
				fname: "1f3c7-1f3fc",
				uc: "1f3c7-1f3fc",
				isCanonical: !0
			},
			":horse_racing_tone1:": {
				unicode: ["1f3c7-1f3fb"],
				fname: "1f3c7-1f3fb", uc: "1f3c7-1f3fb", isCanonical: !0
			},
			":surfer_tone5:": {unicode: ["1f3c4-1f3ff"], fname: "1f3c4-1f3ff", uc: "1f3c4-1f3ff", isCanonical: !0},
			":surfer_tone4:": {unicode: ["1f3c4-1f3fe"], fname: "1f3c4-1f3fe", uc: "1f3c4-1f3fe", isCanonical: !0},
			":surfer_tone3:": {unicode: ["1f3c4-1f3fd"], fname: "1f3c4-1f3fd", uc: "1f3c4-1f3fd", isCanonical: !0},
			":surfer_tone2:": {unicode: ["1f3c4-1f3fc"], fname: "1f3c4-1f3fc", uc: "1f3c4-1f3fc", isCanonical: !0},
			":surfer_tone1:": {
				unicode: ["1f3c4-1f3fb"], fname: "1f3c4-1f3fb", uc: "1f3c4-1f3fb",
				isCanonical: !0
			},
			":runner_tone5:": {unicode: ["1f3c3-1f3ff"], fname: "1f3c3-1f3ff", uc: "1f3c3-1f3ff", isCanonical: !0},
			":runner_tone4:": {unicode: ["1f3c3-1f3fe"], fname: "1f3c3-1f3fe", uc: "1f3c3-1f3fe", isCanonical: !0},
			":runner_tone3:": {unicode: ["1f3c3-1f3fd"], fname: "1f3c3-1f3fd", uc: "1f3c3-1f3fd", isCanonical: !0},
			":runner_tone2:": {unicode: ["1f3c3-1f3fc"], fname: "1f3c3-1f3fc", uc: "1f3c3-1f3fc", isCanonical: !0},
			":runner_tone1:": {unicode: ["1f3c3-1f3fb"], fname: "1f3c3-1f3fb", uc: "1f3c3-1f3fb", isCanonical: !0},
			":santa_tone5:": {
				unicode: ["1f385-1f3ff"],
				fname: "1f385-1f3ff", uc: "1f385-1f3ff", isCanonical: !0
			},
			":santa_tone4:": {unicode: ["1f385-1f3fe"], fname: "1f385-1f3fe", uc: "1f385-1f3fe", isCanonical: !0},
			":santa_tone3:": {unicode: ["1f385-1f3fd"], fname: "1f385-1f3fd", uc: "1f385-1f3fd", isCanonical: !0},
			":santa_tone2:": {unicode: ["1f385-1f3fc"], fname: "1f385-1f3fc", uc: "1f385-1f3fc", isCanonical: !0},
			":santa_tone1:": {unicode: ["1f385-1f3fb"], fname: "1f385-1f3fb", uc: "1f385-1f3fb", isCanonical: !0},
			":flag_zw:": {
				unicode: ["1f1ff-1f1fc"], fname: "1f1ff-1f1fc", uc: "1f1ff-1f1fc",
				isCanonical: !0
			},
			":zw:": {unicode: ["1f1ff-1f1fc"], fname: "1f1ff-1f1fc", uc: "1f1ff-1f1fc", isCanonical: !1},
			":flag_zm:": {unicode: ["1f1ff-1f1f2"], fname: "1f1ff-1f1f2", uc: "1f1ff-1f1f2", isCanonical: !0},
			":zm:": {unicode: ["1f1ff-1f1f2"], fname: "1f1ff-1f1f2", uc: "1f1ff-1f1f2", isCanonical: !1},
			":flag_za:": {unicode: ["1f1ff-1f1e6"], fname: "1f1ff-1f1e6", uc: "1f1ff-1f1e6", isCanonical: !0},
			":za:": {unicode: ["1f1ff-1f1e6"], fname: "1f1ff-1f1e6", uc: "1f1ff-1f1e6", isCanonical: !1},
			":flag_yt:": {
				unicode: ["1f1fe-1f1f9"], fname: "1f1fe-1f1f9",
				uc: "1f1fe-1f1f9", isCanonical: !0
			},
			":yt:": {unicode: ["1f1fe-1f1f9"], fname: "1f1fe-1f1f9", uc: "1f1fe-1f1f9", isCanonical: !1},
			":flag_ye:": {unicode: ["1f1fe-1f1ea"], fname: "1f1fe-1f1ea", uc: "1f1fe-1f1ea", isCanonical: !0},
			":ye:": {unicode: ["1f1fe-1f1ea"], fname: "1f1fe-1f1ea", uc: "1f1fe-1f1ea", isCanonical: !1},
			":flag_xk:": {unicode: ["1f1fd-1f1f0"], fname: "1f1fd-1f1f0", uc: "1f1fd-1f1f0", isCanonical: !0},
			":xk:": {unicode: ["1f1fd-1f1f0"], fname: "1f1fd-1f1f0", uc: "1f1fd-1f1f0", isCanonical: !1},
			":flag_ws:": {
				unicode: ["1f1fc-1f1f8"],
				fname: "1f1fc-1f1f8", uc: "1f1fc-1f1f8", isCanonical: !0
			},
			":ws:": {unicode: ["1f1fc-1f1f8"], fname: "1f1fc-1f1f8", uc: "1f1fc-1f1f8", isCanonical: !1},
			":flag_wf:": {unicode: ["1f1fc-1f1eb"], fname: "1f1fc-1f1eb", uc: "1f1fc-1f1eb", isCanonical: !0},
			":wf:": {unicode: ["1f1fc-1f1eb"], fname: "1f1fc-1f1eb", uc: "1f1fc-1f1eb", isCanonical: !1},
			":flag_vu:": {unicode: ["1f1fb-1f1fa"], fname: "1f1fb-1f1fa", uc: "1f1fb-1f1fa", isCanonical: !0},
			":vu:": {unicode: ["1f1fb-1f1fa"], fname: "1f1fb-1f1fa", uc: "1f1fb-1f1fa", isCanonical: !1},
			":flag_vn:": {
				unicode: ["1f1fb-1f1f3"],
				fname: "1f1fb-1f1f3", uc: "1f1fb-1f1f3", isCanonical: !0
			},
			":vn:": {unicode: ["1f1fb-1f1f3"], fname: "1f1fb-1f1f3", uc: "1f1fb-1f1f3", isCanonical: !1},
			":flag_vi:": {unicode: ["1f1fb-1f1ee"], fname: "1f1fb-1f1ee", uc: "1f1fb-1f1ee", isCanonical: !0},
			":vi:": {unicode: ["1f1fb-1f1ee"], fname: "1f1fb-1f1ee", uc: "1f1fb-1f1ee", isCanonical: !1},
			":flag_vg:": {unicode: ["1f1fb-1f1ec"], fname: "1f1fb-1f1ec", uc: "1f1fb-1f1ec", isCanonical: !0},
			":vg:": {unicode: ["1f1fb-1f1ec"], fname: "1f1fb-1f1ec", uc: "1f1fb-1f1ec", isCanonical: !1},
			":flag_ve:": {
				unicode: ["1f1fb-1f1ea"],
				fname: "1f1fb-1f1ea", uc: "1f1fb-1f1ea", isCanonical: !0
			},
			":ve:": {unicode: ["1f1fb-1f1ea"], fname: "1f1fb-1f1ea", uc: "1f1fb-1f1ea", isCanonical: !1},
			":flag_vc:": {unicode: ["1f1fb-1f1e8"], fname: "1f1fb-1f1e8", uc: "1f1fb-1f1e8", isCanonical: !0},
			":vc:": {unicode: ["1f1fb-1f1e8"], fname: "1f1fb-1f1e8", uc: "1f1fb-1f1e8", isCanonical: !1},
			":flag_va:": {unicode: ["1f1fb-1f1e6"], fname: "1f1fb-1f1e6", uc: "1f1fb-1f1e6", isCanonical: !0},
			":va:": {unicode: ["1f1fb-1f1e6"], fname: "1f1fb-1f1e6", uc: "1f1fb-1f1e6", isCanonical: !1},
			":flag_uz:": {
				unicode: ["1f1fa-1f1ff"],
				fname: "1f1fa-1f1ff", uc: "1f1fa-1f1ff", isCanonical: !0
			},
			":uz:": {unicode: ["1f1fa-1f1ff"], fname: "1f1fa-1f1ff", uc: "1f1fa-1f1ff", isCanonical: !1},
			":flag_uy:": {unicode: ["1f1fa-1f1fe"], fname: "1f1fa-1f1fe", uc: "1f1fa-1f1fe", isCanonical: !0},
			":uy:": {unicode: ["1f1fa-1f1fe"], fname: "1f1fa-1f1fe", uc: "1f1fa-1f1fe", isCanonical: !1},
			":flag_us:": {unicode: ["1f1fa-1f1f8"], fname: "1f1fa-1f1f8", uc: "1f1fa-1f1f8", isCanonical: !0},
			":us:": {unicode: ["1f1fa-1f1f8"], fname: "1f1fa-1f1f8", uc: "1f1fa-1f1f8", isCanonical: !1},
			":flag_um:": {
				unicode: ["1f1fa-1f1f2"],
				fname: "1f1fa-1f1f2", uc: "1f1fa-1f1f2", isCanonical: !0
			},
			":um:": {unicode: ["1f1fa-1f1f2"], fname: "1f1fa-1f1f2", uc: "1f1fa-1f1f2", isCanonical: !1},
			":flag_ug:": {unicode: ["1f1fa-1f1ec"], fname: "1f1fa-1f1ec", uc: "1f1fa-1f1ec", isCanonical: !0},
			":ug:": {unicode: ["1f1fa-1f1ec"], fname: "1f1fa-1f1ec", uc: "1f1fa-1f1ec", isCanonical: !1},
			":flag_ua:": {unicode: ["1f1fa-1f1e6"], fname: "1f1fa-1f1e6", uc: "1f1fa-1f1e6", isCanonical: !0},
			":ua:": {unicode: ["1f1fa-1f1e6"], fname: "1f1fa-1f1e6", uc: "1f1fa-1f1e6", isCanonical: !1},
			":flag_tz:": {
				unicode: ["1f1f9-1f1ff"],
				fname: "1f1f9-1f1ff", uc: "1f1f9-1f1ff", isCanonical: !0
			},
			":tz:": {unicode: ["1f1f9-1f1ff"], fname: "1f1f9-1f1ff", uc: "1f1f9-1f1ff", isCanonical: !1},
			":flag_tw:": {unicode: ["1f1f9-1f1fc"], fname: "1f1f9-1f1fc", uc: "1f1f9-1f1fc", isCanonical: !0},
			":tw:": {unicode: ["1f1f9-1f1fc"], fname: "1f1f9-1f1fc", uc: "1f1f9-1f1fc", isCanonical: !1},
			":flag_tv:": {unicode: ["1f1f9-1f1fb"], fname: "1f1f9-1f1fb", uc: "1f1f9-1f1fb", isCanonical: !0},
			":tuvalu:": {unicode: ["1f1f9-1f1fb"], fname: "1f1f9-1f1fb", uc: "1f1f9-1f1fb", isCanonical: !1},
			":flag_tt:": {
				unicode: ["1f1f9-1f1f9"],
				fname: "1f1f9-1f1f9", uc: "1f1f9-1f1f9", isCanonical: !0
			},
			":tt:": {unicode: ["1f1f9-1f1f9"], fname: "1f1f9-1f1f9", uc: "1f1f9-1f1f9", isCanonical: !1},
			":flag_tr:": {unicode: ["1f1f9-1f1f7"], fname: "1f1f9-1f1f7", uc: "1f1f9-1f1f7", isCanonical: !0},
			":tr:": {unicode: ["1f1f9-1f1f7"], fname: "1f1f9-1f1f7", uc: "1f1f9-1f1f7", isCanonical: !1},
			":flag_to:": {unicode: ["1f1f9-1f1f4"], fname: "1f1f9-1f1f4", uc: "1f1f9-1f1f4", isCanonical: !0},
			":to:": {unicode: ["1f1f9-1f1f4"], fname: "1f1f9-1f1f4", uc: "1f1f9-1f1f4", isCanonical: !1},
			":flag_tn:": {
				unicode: ["1f1f9-1f1f3"],
				fname: "1f1f9-1f1f3", uc: "1f1f9-1f1f3", isCanonical: !0
			},
			":tn:": {unicode: ["1f1f9-1f1f3"], fname: "1f1f9-1f1f3", uc: "1f1f9-1f1f3", isCanonical: !1},
			":flag_tm:": {unicode: ["1f1f9-1f1f2"], fname: "1f1f9-1f1f2", uc: "1f1f9-1f1f2", isCanonical: !0},
			":turkmenistan:": {unicode: ["1f1f9-1f1f2"], fname: "1f1f9-1f1f2", uc: "1f1f9-1f1f2", isCanonical: !1},
			":flag_tl:": {unicode: ["1f1f9-1f1f1"], fname: "1f1f9-1f1f1", uc: "1f1f9-1f1f1", isCanonical: !0},
			":tl:": {unicode: ["1f1f9-1f1f1"], fname: "1f1f9-1f1f1", uc: "1f1f9-1f1f1", isCanonical: !1},
			":flag_tk:": {
				unicode: ["1f1f9-1f1f0"],
				fname: "1f1f9-1f1f0", uc: "1f1f9-1f1f0", isCanonical: !0
			},
			":tk:": {unicode: ["1f1f9-1f1f0"], fname: "1f1f9-1f1f0", uc: "1f1f9-1f1f0", isCanonical: !1},
			":flag_tj:": {unicode: ["1f1f9-1f1ef"], fname: "1f1f9-1f1ef", uc: "1f1f9-1f1ef", isCanonical: !0},
			":tj:": {unicode: ["1f1f9-1f1ef"], fname: "1f1f9-1f1ef", uc: "1f1f9-1f1ef", isCanonical: !1},
			":flag_th:": {unicode: ["1f1f9-1f1ed"], fname: "1f1f9-1f1ed", uc: "1f1f9-1f1ed", isCanonical: !0},
			":th:": {unicode: ["1f1f9-1f1ed"], fname: "1f1f9-1f1ed", uc: "1f1f9-1f1ed", isCanonical: !1},
			":flag_tg:": {
				unicode: ["1f1f9-1f1ec"],
				fname: "1f1f9-1f1ec", uc: "1f1f9-1f1ec", isCanonical: !0
			},
			":tg:": {unicode: ["1f1f9-1f1ec"], fname: "1f1f9-1f1ec", uc: "1f1f9-1f1ec", isCanonical: !1},
			":flag_tf:": {unicode: ["1f1f9-1f1eb"], fname: "1f1f9-1f1eb", uc: "1f1f9-1f1eb", isCanonical: !0},
			":tf:": {unicode: ["1f1f9-1f1eb"], fname: "1f1f9-1f1eb", uc: "1f1f9-1f1eb", isCanonical: !1},
			":flag_td:": {unicode: ["1f1f9-1f1e9"], fname: "1f1f9-1f1e9", uc: "1f1f9-1f1e9", isCanonical: !0},
			":td:": {unicode: ["1f1f9-1f1e9"], fname: "1f1f9-1f1e9", uc: "1f1f9-1f1e9", isCanonical: !1},
			":flag_tc:": {
				unicode: ["1f1f9-1f1e8"],
				fname: "1f1f9-1f1e8", uc: "1f1f9-1f1e8", isCanonical: !0
			},
			":tc:": {unicode: ["1f1f9-1f1e8"], fname: "1f1f9-1f1e8", uc: "1f1f9-1f1e8", isCanonical: !1},
			":flag_ta:": {unicode: ["1f1f9-1f1e6"], fname: "1f1f9-1f1e6", uc: "1f1f9-1f1e6", isCanonical: !0},
			":ta:": {unicode: ["1f1f9-1f1e6"], fname: "1f1f9-1f1e6", uc: "1f1f9-1f1e6", isCanonical: !1},
			":flag_sz:": {unicode: ["1f1f8-1f1ff"], fname: "1f1f8-1f1ff", uc: "1f1f8-1f1ff", isCanonical: !0},
			":sz:": {unicode: ["1f1f8-1f1ff"], fname: "1f1f8-1f1ff", uc: "1f1f8-1f1ff", isCanonical: !1},
			":flag_sy:": {
				unicode: ["1f1f8-1f1fe"],
				fname: "1f1f8-1f1fe", uc: "1f1f8-1f1fe", isCanonical: !0
			},
			":sy:": {unicode: ["1f1f8-1f1fe"], fname: "1f1f8-1f1fe", uc: "1f1f8-1f1fe", isCanonical: !1},
			":flag_sx:": {unicode: ["1f1f8-1f1fd"], fname: "1f1f8-1f1fd", uc: "1f1f8-1f1fd", isCanonical: !0},
			":sx:": {unicode: ["1f1f8-1f1fd"], fname: "1f1f8-1f1fd", uc: "1f1f8-1f1fd", isCanonical: !1},
			":flag_sv:": {unicode: ["1f1f8-1f1fb"], fname: "1f1f8-1f1fb", uc: "1f1f8-1f1fb", isCanonical: !0},
			":sv:": {unicode: ["1f1f8-1f1fb"], fname: "1f1f8-1f1fb", uc: "1f1f8-1f1fb", isCanonical: !1},
			":flag_st:": {
				unicode: ["1f1f8-1f1f9"],
				fname: "1f1f8-1f1f9", uc: "1f1f8-1f1f9", isCanonical: !0
			},
			":st:": {unicode: ["1f1f8-1f1f9"], fname: "1f1f8-1f1f9", uc: "1f1f8-1f1f9", isCanonical: !1},
			":flag_ss:": {unicode: ["1f1f8-1f1f8"], fname: "1f1f8-1f1f8", uc: "1f1f8-1f1f8", isCanonical: !0},
			":ss:": {unicode: ["1f1f8-1f1f8"], fname: "1f1f8-1f1f8", uc: "1f1f8-1f1f8", isCanonical: !1},
			":flag_sr:": {unicode: ["1f1f8-1f1f7"], fname: "1f1f8-1f1f7", uc: "1f1f8-1f1f7", isCanonical: !0},
			":sr:": {unicode: ["1f1f8-1f1f7"], fname: "1f1f8-1f1f7", uc: "1f1f8-1f1f7", isCanonical: !1},
			":flag_so:": {
				unicode: ["1f1f8-1f1f4"],
				fname: "1f1f8-1f1f4", uc: "1f1f8-1f1f4", isCanonical: !0
			},
			":so:": {unicode: ["1f1f8-1f1f4"], fname: "1f1f8-1f1f4", uc: "1f1f8-1f1f4", isCanonical: !1},
			":flag_sn:": {unicode: ["1f1f8-1f1f3"], fname: "1f1f8-1f1f3", uc: "1f1f8-1f1f3", isCanonical: !0},
			":sn:": {unicode: ["1f1f8-1f1f3"], fname: "1f1f8-1f1f3", uc: "1f1f8-1f1f3", isCanonical: !1},
			":flag_sm:": {unicode: ["1f1f8-1f1f2"], fname: "1f1f8-1f1f2", uc: "1f1f8-1f1f2", isCanonical: !0},
			":sm:": {unicode: ["1f1f8-1f1f2"], fname: "1f1f8-1f1f2", uc: "1f1f8-1f1f2", isCanonical: !1},
			":flag_sl:": {
				unicode: ["1f1f8-1f1f1"],
				fname: "1f1f8-1f1f1", uc: "1f1f8-1f1f1", isCanonical: !0
			},
			":sl:": {unicode: ["1f1f8-1f1f1"], fname: "1f1f8-1f1f1", uc: "1f1f8-1f1f1", isCanonical: !1},
			":flag_sk:": {unicode: ["1f1f8-1f1f0"], fname: "1f1f8-1f1f0", uc: "1f1f8-1f1f0", isCanonical: !0},
			":sk:": {unicode: ["1f1f8-1f1f0"], fname: "1f1f8-1f1f0", uc: "1f1f8-1f1f0", isCanonical: !1},
			":flag_sj:": {unicode: ["1f1f8-1f1ef"], fname: "1f1f8-1f1ef", uc: "1f1f8-1f1ef", isCanonical: !0},
			":sj:": {unicode: ["1f1f8-1f1ef"], fname: "1f1f8-1f1ef", uc: "1f1f8-1f1ef", isCanonical: !1},
			":flag_si:": {
				unicode: ["1f1f8-1f1ee"],
				fname: "1f1f8-1f1ee", uc: "1f1f8-1f1ee", isCanonical: !0
			},
			":si:": {unicode: ["1f1f8-1f1ee"], fname: "1f1f8-1f1ee", uc: "1f1f8-1f1ee", isCanonical: !1},
			":flag_sh:": {unicode: ["1f1f8-1f1ed"], fname: "1f1f8-1f1ed", uc: "1f1f8-1f1ed", isCanonical: !0},
			":sh:": {unicode: ["1f1f8-1f1ed"], fname: "1f1f8-1f1ed", uc: "1f1f8-1f1ed", isCanonical: !1},
			":flag_sg:": {unicode: ["1f1f8-1f1ec"], fname: "1f1f8-1f1ec", uc: "1f1f8-1f1ec", isCanonical: !0},
			":sg:": {unicode: ["1f1f8-1f1ec"], fname: "1f1f8-1f1ec", uc: "1f1f8-1f1ec", isCanonical: !1},
			":flag_se:": {
				unicode: ["1f1f8-1f1ea"],
				fname: "1f1f8-1f1ea", uc: "1f1f8-1f1ea", isCanonical: !0
			},
			":se:": {unicode: ["1f1f8-1f1ea"], fname: "1f1f8-1f1ea", uc: "1f1f8-1f1ea", isCanonical: !1},
			":flag_sd:": {unicode: ["1f1f8-1f1e9"], fname: "1f1f8-1f1e9", uc: "1f1f8-1f1e9", isCanonical: !0},
			":sd:": {unicode: ["1f1f8-1f1e9"], fname: "1f1f8-1f1e9", uc: "1f1f8-1f1e9", isCanonical: !1},
			":flag_sc:": {unicode: ["1f1f8-1f1e8"], fname: "1f1f8-1f1e8", uc: "1f1f8-1f1e8", isCanonical: !0},
			":sc:": {unicode: ["1f1f8-1f1e8"], fname: "1f1f8-1f1e8", uc: "1f1f8-1f1e8", isCanonical: !1},
			":flag_sb:": {
				unicode: ["1f1f8-1f1e7"],
				fname: "1f1f8-1f1e7", uc: "1f1f8-1f1e7", isCanonical: !0
			},
			":sb:": {unicode: ["1f1f8-1f1e7"], fname: "1f1f8-1f1e7", uc: "1f1f8-1f1e7", isCanonical: !1},
			":flag_sa:": {unicode: ["1f1f8-1f1e6"], fname: "1f1f8-1f1e6", uc: "1f1f8-1f1e6", isCanonical: !0},
			":saudiarabia:": {unicode: ["1f1f8-1f1e6"], fname: "1f1f8-1f1e6", uc: "1f1f8-1f1e6", isCanonical: !1},
			":saudi:": {unicode: ["1f1f8-1f1e6"], fname: "1f1f8-1f1e6", uc: "1f1f8-1f1e6", isCanonical: !1},
			":flag_rw:": {unicode: ["1f1f7-1f1fc"], fname: "1f1f7-1f1fc", uc: "1f1f7-1f1fc", isCanonical: !0},
			":rw:": {
				unicode: ["1f1f7-1f1fc"],
				fname: "1f1f7-1f1fc", uc: "1f1f7-1f1fc", isCanonical: !1
			},
			":flag_ru:": {unicode: ["1f1f7-1f1fa"], fname: "1f1f7-1f1fa", uc: "1f1f7-1f1fa", isCanonical: !0},
			":ru:": {unicode: ["1f1f7-1f1fa"], fname: "1f1f7-1f1fa", uc: "1f1f7-1f1fa", isCanonical: !1},
			":flag_rs:": {unicode: ["1f1f7-1f1f8"], fname: "1f1f7-1f1f8", uc: "1f1f7-1f1f8", isCanonical: !0},
			":rs:": {unicode: ["1f1f7-1f1f8"], fname: "1f1f7-1f1f8", uc: "1f1f7-1f1f8", isCanonical: !1},
			":flag_ro:": {unicode: ["1f1f7-1f1f4"], fname: "1f1f7-1f1f4", uc: "1f1f7-1f1f4", isCanonical: !0},
			":ro:": {
				unicode: ["1f1f7-1f1f4"],
				fname: "1f1f7-1f1f4", uc: "1f1f7-1f1f4", isCanonical: !1
			},
			":flag_re:": {unicode: ["1f1f7-1f1ea"], fname: "1f1f7-1f1ea", uc: "1f1f7-1f1ea", isCanonical: !0},
			":re:": {unicode: ["1f1f7-1f1ea"], fname: "1f1f7-1f1ea", uc: "1f1f7-1f1ea", isCanonical: !1},
			":flag_qa:": {unicode: ["1f1f6-1f1e6"], fname: "1f1f6-1f1e6", uc: "1f1f6-1f1e6", isCanonical: !0},
			":qa:": {unicode: ["1f1f6-1f1e6"], fname: "1f1f6-1f1e6", uc: "1f1f6-1f1e6", isCanonical: !1},
			":flag_py:": {unicode: ["1f1f5-1f1fe"], fname: "1f1f5-1f1fe", uc: "1f1f5-1f1fe", isCanonical: !0},
			":py:": {
				unicode: ["1f1f5-1f1fe"],
				fname: "1f1f5-1f1fe", uc: "1f1f5-1f1fe", isCanonical: !1
			},
			":flag_pw:": {unicode: ["1f1f5-1f1fc"], fname: "1f1f5-1f1fc", uc: "1f1f5-1f1fc", isCanonical: !0},
			":pw:": {unicode: ["1f1f5-1f1fc"], fname: "1f1f5-1f1fc", uc: "1f1f5-1f1fc", isCanonical: !1},
			":flag_pt:": {unicode: ["1f1f5-1f1f9"], fname: "1f1f5-1f1f9", uc: "1f1f5-1f1f9", isCanonical: !0},
			":pt:": {unicode: ["1f1f5-1f1f9"], fname: "1f1f5-1f1f9", uc: "1f1f5-1f1f9", isCanonical: !1},
			":flag_ps:": {unicode: ["1f1f5-1f1f8"], fname: "1f1f5-1f1f8", uc: "1f1f5-1f1f8", isCanonical: !0},
			":ps:": {
				unicode: ["1f1f5-1f1f8"],
				fname: "1f1f5-1f1f8", uc: "1f1f5-1f1f8", isCanonical: !1
			},
			":flag_pr:": {unicode: ["1f1f5-1f1f7"], fname: "1f1f5-1f1f7", uc: "1f1f5-1f1f7", isCanonical: !0},
			":pr:": {unicode: ["1f1f5-1f1f7"], fname: "1f1f5-1f1f7", uc: "1f1f5-1f1f7", isCanonical: !1},
			":flag_pn:": {unicode: ["1f1f5-1f1f3"], fname: "1f1f5-1f1f3", uc: "1f1f5-1f1f3", isCanonical: !0},
			":pn:": {unicode: ["1f1f5-1f1f3"], fname: "1f1f5-1f1f3", uc: "1f1f5-1f1f3", isCanonical: !1},
			":flag_pm:": {unicode: ["1f1f5-1f1f2"], fname: "1f1f5-1f1f2", uc: "1f1f5-1f1f2", isCanonical: !0},
			":pm:": {
				unicode: ["1f1f5-1f1f2"],
				fname: "1f1f5-1f1f2", uc: "1f1f5-1f1f2", isCanonical: !1
			},
			":flag_pl:": {unicode: ["1f1f5-1f1f1"], fname: "1f1f5-1f1f1", uc: "1f1f5-1f1f1", isCanonical: !0},
			":pl:": {unicode: ["1f1f5-1f1f1"], fname: "1f1f5-1f1f1", uc: "1f1f5-1f1f1", isCanonical: !1},
			":flag_pk:": {unicode: ["1f1f5-1f1f0"], fname: "1f1f5-1f1f0", uc: "1f1f5-1f1f0", isCanonical: !0},
			":pk:": {unicode: ["1f1f5-1f1f0"], fname: "1f1f5-1f1f0", uc: "1f1f5-1f1f0", isCanonical: !1},
			":flag_ph:": {unicode: ["1f1f5-1f1ed"], fname: "1f1f5-1f1ed", uc: "1f1f5-1f1ed", isCanonical: !0},
			":ph:": {
				unicode: ["1f1f5-1f1ed"],
				fname: "1f1f5-1f1ed", uc: "1f1f5-1f1ed", isCanonical: !1
			},
			":flag_pg:": {unicode: ["1f1f5-1f1ec"], fname: "1f1f5-1f1ec", uc: "1f1f5-1f1ec", isCanonical: !0},
			":pg:": {unicode: ["1f1f5-1f1ec"], fname: "1f1f5-1f1ec", uc: "1f1f5-1f1ec", isCanonical: !1},
			":flag_pf:": {unicode: ["1f1f5-1f1eb"], fname: "1f1f5-1f1eb", uc: "1f1f5-1f1eb", isCanonical: !0},
			":pf:": {unicode: ["1f1f5-1f1eb"], fname: "1f1f5-1f1eb", uc: "1f1f5-1f1eb", isCanonical: !1},
			":flag_pe:": {unicode: ["1f1f5-1f1ea"], fname: "1f1f5-1f1ea", uc: "1f1f5-1f1ea", isCanonical: !0},
			":pe:": {
				unicode: ["1f1f5-1f1ea"],
				fname: "1f1f5-1f1ea", uc: "1f1f5-1f1ea", isCanonical: !1
			},
			":flag_pa:": {unicode: ["1f1f5-1f1e6"], fname: "1f1f5-1f1e6", uc: "1f1f5-1f1e6", isCanonical: !0},
			":pa:": {unicode: ["1f1f5-1f1e6"], fname: "1f1f5-1f1e6", uc: "1f1f5-1f1e6", isCanonical: !1},
			":flag_om:": {unicode: ["1f1f4-1f1f2"], fname: "1f1f4-1f1f2", uc: "1f1f4-1f1f2", isCanonical: !0},
			":om:": {unicode: ["1f1f4-1f1f2"], fname: "1f1f4-1f1f2", uc: "1f1f4-1f1f2", isCanonical: !1},
			":flag_nz:": {unicode: ["1f1f3-1f1ff"], fname: "1f1f3-1f1ff", uc: "1f1f3-1f1ff", isCanonical: !0},
			":nz:": {
				unicode: ["1f1f3-1f1ff"],
				fname: "1f1f3-1f1ff", uc: "1f1f3-1f1ff", isCanonical: !1
			},
			":flag_nu:": {unicode: ["1f1f3-1f1fa"], fname: "1f1f3-1f1fa", uc: "1f1f3-1f1fa", isCanonical: !0},
			":nu:": {unicode: ["1f1f3-1f1fa"], fname: "1f1f3-1f1fa", uc: "1f1f3-1f1fa", isCanonical: !1},
			":flag_nr:": {unicode: ["1f1f3-1f1f7"], fname: "1f1f3-1f1f7", uc: "1f1f3-1f1f7", isCanonical: !0},
			":nr:": {unicode: ["1f1f3-1f1f7"], fname: "1f1f3-1f1f7", uc: "1f1f3-1f1f7", isCanonical: !1},
			":flag_np:": {unicode: ["1f1f3-1f1f5"], fname: "1f1f3-1f1f5", uc: "1f1f3-1f1f5", isCanonical: !0},
			":np:": {
				unicode: ["1f1f3-1f1f5"],
				fname: "1f1f3-1f1f5", uc: "1f1f3-1f1f5", isCanonical: !1
			},
			":flag_no:": {unicode: ["1f1f3-1f1f4"], fname: "1f1f3-1f1f4", uc: "1f1f3-1f1f4", isCanonical: !0},
			":no:": {unicode: ["1f1f3-1f1f4"], fname: "1f1f3-1f1f4", uc: "1f1f3-1f1f4", isCanonical: !1},
			":flag_nl:": {unicode: ["1f1f3-1f1f1"], fname: "1f1f3-1f1f1", uc: "1f1f3-1f1f1", isCanonical: !0},
			":nl:": {unicode: ["1f1f3-1f1f1"], fname: "1f1f3-1f1f1", uc: "1f1f3-1f1f1", isCanonical: !1},
			":flag_ni:": {unicode: ["1f1f3-1f1ee"], fname: "1f1f3-1f1ee", uc: "1f1f3-1f1ee", isCanonical: !0},
			":ni:": {
				unicode: ["1f1f3-1f1ee"],
				fname: "1f1f3-1f1ee", uc: "1f1f3-1f1ee", isCanonical: !1
			},
			":flag_ng:": {unicode: ["1f1f3-1f1ec"], fname: "1f1f3-1f1ec", uc: "1f1f3-1f1ec", isCanonical: !0},
			":nigeria:": {unicode: ["1f1f3-1f1ec"], fname: "1f1f3-1f1ec", uc: "1f1f3-1f1ec", isCanonical: !1},
			":flag_nf:": {unicode: ["1f1f3-1f1eb"], fname: "1f1f3-1f1eb", uc: "1f1f3-1f1eb", isCanonical: !0},
			":nf:": {unicode: ["1f1f3-1f1eb"], fname: "1f1f3-1f1eb", uc: "1f1f3-1f1eb", isCanonical: !1},
			":flag_ne:": {unicode: ["1f1f3-1f1ea"], fname: "1f1f3-1f1ea", uc: "1f1f3-1f1ea", isCanonical: !0},
			":ne:": {
				unicode: ["1f1f3-1f1ea"],
				fname: "1f1f3-1f1ea", uc: "1f1f3-1f1ea", isCanonical: !1
			},
			":flag_nc:": {unicode: ["1f1f3-1f1e8"], fname: "1f1f3-1f1e8", uc: "1f1f3-1f1e8", isCanonical: !0},
			":nc:": {unicode: ["1f1f3-1f1e8"], fname: "1f1f3-1f1e8", uc: "1f1f3-1f1e8", isCanonical: !1},
			":flag_na:": {unicode: ["1f1f3-1f1e6"], fname: "1f1f3-1f1e6", uc: "1f1f3-1f1e6", isCanonical: !0},
			":na:": {unicode: ["1f1f3-1f1e6"], fname: "1f1f3-1f1e6", uc: "1f1f3-1f1e6", isCanonical: !1},
			":flag_mz:": {unicode: ["1f1f2-1f1ff"], fname: "1f1f2-1f1ff", uc: "1f1f2-1f1ff", isCanonical: !0},
			":mz:": {
				unicode: ["1f1f2-1f1ff"],
				fname: "1f1f2-1f1ff", uc: "1f1f2-1f1ff", isCanonical: !1
			},
			":flag_my:": {unicode: ["1f1f2-1f1fe"], fname: "1f1f2-1f1fe", uc: "1f1f2-1f1fe", isCanonical: !0},
			":my:": {unicode: ["1f1f2-1f1fe"], fname: "1f1f2-1f1fe", uc: "1f1f2-1f1fe", isCanonical: !1},
			":flag_mx:": {unicode: ["1f1f2-1f1fd"], fname: "1f1f2-1f1fd", uc: "1f1f2-1f1fd", isCanonical: !0},
			":mx:": {unicode: ["1f1f2-1f1fd"], fname: "1f1f2-1f1fd", uc: "1f1f2-1f1fd", isCanonical: !1},
			":flag_mw:": {unicode: ["1f1f2-1f1fc"], fname: "1f1f2-1f1fc", uc: "1f1f2-1f1fc", isCanonical: !0},
			":mw:": {
				unicode: ["1f1f2-1f1fc"],
				fname: "1f1f2-1f1fc", uc: "1f1f2-1f1fc", isCanonical: !1
			},
			":flag_mv:": {unicode: ["1f1f2-1f1fb"], fname: "1f1f2-1f1fb", uc: "1f1f2-1f1fb", isCanonical: !0},
			":mv:": {unicode: ["1f1f2-1f1fb"], fname: "1f1f2-1f1fb", uc: "1f1f2-1f1fb", isCanonical: !1},
			":flag_mu:": {unicode: ["1f1f2-1f1fa"], fname: "1f1f2-1f1fa", uc: "1f1f2-1f1fa", isCanonical: !0},
			":mu:": {unicode: ["1f1f2-1f1fa"], fname: "1f1f2-1f1fa", uc: "1f1f2-1f1fa", isCanonical: !1},
			":flag_mt:": {unicode: ["1f1f2-1f1f9"], fname: "1f1f2-1f1f9", uc: "1f1f2-1f1f9", isCanonical: !0},
			":mt:": {
				unicode: ["1f1f2-1f1f9"],
				fname: "1f1f2-1f1f9", uc: "1f1f2-1f1f9", isCanonical: !1
			},
			":flag_ms:": {unicode: ["1f1f2-1f1f8"], fname: "1f1f2-1f1f8", uc: "1f1f2-1f1f8", isCanonical: !0},
			":ms:": {unicode: ["1f1f2-1f1f8"], fname: "1f1f2-1f1f8", uc: "1f1f2-1f1f8", isCanonical: !1},
			":flag_mr:": {unicode: ["1f1f2-1f1f7"], fname: "1f1f2-1f1f7", uc: "1f1f2-1f1f7", isCanonical: !0},
			":mr:": {unicode: ["1f1f2-1f1f7"], fname: "1f1f2-1f1f7", uc: "1f1f2-1f1f7", isCanonical: !1},
			":flag_mq:": {unicode: ["1f1f2-1f1f6"], fname: "1f1f2-1f1f6", uc: "1f1f2-1f1f6", isCanonical: !0},
			":mq:": {
				unicode: ["1f1f2-1f1f6"],
				fname: "1f1f2-1f1f6", uc: "1f1f2-1f1f6", isCanonical: !1
			},
			":flag_mp:": {unicode: ["1f1f2-1f1f5"], fname: "1f1f2-1f1f5", uc: "1f1f2-1f1f5", isCanonical: !0},
			":mp:": {unicode: ["1f1f2-1f1f5"], fname: "1f1f2-1f1f5", uc: "1f1f2-1f1f5", isCanonical: !1},
			":flag_mo:": {unicode: ["1f1f2-1f1f4"], fname: "1f1f2-1f1f4", uc: "1f1f2-1f1f4", isCanonical: !0},
			":mo:": {unicode: ["1f1f2-1f1f4"], fname: "1f1f2-1f1f4", uc: "1f1f2-1f1f4", isCanonical: !1},
			":flag_mn:": {unicode: ["1f1f2-1f1f3"], fname: "1f1f2-1f1f3", uc: "1f1f2-1f1f3", isCanonical: !0},
			":mn:": {
				unicode: ["1f1f2-1f1f3"],
				fname: "1f1f2-1f1f3", uc: "1f1f2-1f1f3", isCanonical: !1
			},
			":flag_mm:": {unicode: ["1f1f2-1f1f2"], fname: "1f1f2-1f1f2", uc: "1f1f2-1f1f2", isCanonical: !0},
			":mm:": {unicode: ["1f1f2-1f1f2"], fname: "1f1f2-1f1f2", uc: "1f1f2-1f1f2", isCanonical: !1},
			":flag_ml:": {unicode: ["1f1f2-1f1f1"], fname: "1f1f2-1f1f1", uc: "1f1f2-1f1f1", isCanonical: !0},
			":ml:": {unicode: ["1f1f2-1f1f1"], fname: "1f1f2-1f1f1", uc: "1f1f2-1f1f1", isCanonical: !1},
			":flag_mk:": {unicode: ["1f1f2-1f1f0"], fname: "1f1f2-1f1f0", uc: "1f1f2-1f1f0", isCanonical: !0},
			":mk:": {
				unicode: ["1f1f2-1f1f0"],
				fname: "1f1f2-1f1f0", uc: "1f1f2-1f1f0", isCanonical: !1
			},
			":flag_mh:": {unicode: ["1f1f2-1f1ed"], fname: "1f1f2-1f1ed", uc: "1f1f2-1f1ed", isCanonical: !0},
			":mh:": {unicode: ["1f1f2-1f1ed"], fname: "1f1f2-1f1ed", uc: "1f1f2-1f1ed", isCanonical: !1},
			":flag_mg:": {unicode: ["1f1f2-1f1ec"], fname: "1f1f2-1f1ec", uc: "1f1f2-1f1ec", isCanonical: !0},
			":mg:": {unicode: ["1f1f2-1f1ec"], fname: "1f1f2-1f1ec", uc: "1f1f2-1f1ec", isCanonical: !1},
			":flag_mf:": {unicode: ["1f1f2-1f1eb"], fname: "1f1f2-1f1eb", uc: "1f1f2-1f1eb", isCanonical: !0},
			":mf:": {
				unicode: ["1f1f2-1f1eb"],
				fname: "1f1f2-1f1eb", uc: "1f1f2-1f1eb", isCanonical: !1
			},
			":flag_me:": {unicode: ["1f1f2-1f1ea"], fname: "1f1f2-1f1ea", uc: "1f1f2-1f1ea", isCanonical: !0},
			":me:": {unicode: ["1f1f2-1f1ea"], fname: "1f1f2-1f1ea", uc: "1f1f2-1f1ea", isCanonical: !1},
			":flag_md:": {unicode: ["1f1f2-1f1e9"], fname: "1f1f2-1f1e9", uc: "1f1f2-1f1e9", isCanonical: !0},
			":md:": {unicode: ["1f1f2-1f1e9"], fname: "1f1f2-1f1e9", uc: "1f1f2-1f1e9", isCanonical: !1},
			":flag_mc:": {unicode: ["1f1f2-1f1e8"], fname: "1f1f2-1f1e8", uc: "1f1f2-1f1e8", isCanonical: !0},
			":mc:": {
				unicode: ["1f1f2-1f1e8"],
				fname: "1f1f2-1f1e8", uc: "1f1f2-1f1e8", isCanonical: !1
			},
			":flag_ma:": {unicode: ["1f1f2-1f1e6"], fname: "1f1f2-1f1e6", uc: "1f1f2-1f1e6", isCanonical: !0},
			":ma:": {unicode: ["1f1f2-1f1e6"], fname: "1f1f2-1f1e6", uc: "1f1f2-1f1e6", isCanonical: !1},
			":flag_ly:": {unicode: ["1f1f1-1f1fe"], fname: "1f1f1-1f1fe", uc: "1f1f1-1f1fe", isCanonical: !0},
			":ly:": {unicode: ["1f1f1-1f1fe"], fname: "1f1f1-1f1fe", uc: "1f1f1-1f1fe", isCanonical: !1},
			":flag_lv:": {unicode: ["1f1f1-1f1fb"], fname: "1f1f1-1f1fb", uc: "1f1f1-1f1fb", isCanonical: !0},
			":lv:": {
				unicode: ["1f1f1-1f1fb"],
				fname: "1f1f1-1f1fb", uc: "1f1f1-1f1fb", isCanonical: !1
			},
			":flag_lu:": {unicode: ["1f1f1-1f1fa"], fname: "1f1f1-1f1fa", uc: "1f1f1-1f1fa", isCanonical: !0},
			":lu:": {unicode: ["1f1f1-1f1fa"], fname: "1f1f1-1f1fa", uc: "1f1f1-1f1fa", isCanonical: !1},
			":flag_lt:": {unicode: ["1f1f1-1f1f9"], fname: "1f1f1-1f1f9", uc: "1f1f1-1f1f9", isCanonical: !0},
			":lt:": {unicode: ["1f1f1-1f1f9"], fname: "1f1f1-1f1f9", uc: "1f1f1-1f1f9", isCanonical: !1},
			":flag_ls:": {unicode: ["1f1f1-1f1f8"], fname: "1f1f1-1f1f8", uc: "1f1f1-1f1f8", isCanonical: !0},
			":ls:": {
				unicode: ["1f1f1-1f1f8"],
				fname: "1f1f1-1f1f8", uc: "1f1f1-1f1f8", isCanonical: !1
			},
			":flag_lr:": {unicode: ["1f1f1-1f1f7"], fname: "1f1f1-1f1f7", uc: "1f1f1-1f1f7", isCanonical: !0},
			":lr:": {unicode: ["1f1f1-1f1f7"], fname: "1f1f1-1f1f7", uc: "1f1f1-1f1f7", isCanonical: !1},
			":flag_lk:": {unicode: ["1f1f1-1f1f0"], fname: "1f1f1-1f1f0", uc: "1f1f1-1f1f0", isCanonical: !0},
			":lk:": {unicode: ["1f1f1-1f1f0"], fname: "1f1f1-1f1f0", uc: "1f1f1-1f1f0", isCanonical: !1},
			":flag_li:": {unicode: ["1f1f1-1f1ee"], fname: "1f1f1-1f1ee", uc: "1f1f1-1f1ee", isCanonical: !0},
			":li:": {
				unicode: ["1f1f1-1f1ee"],
				fname: "1f1f1-1f1ee", uc: "1f1f1-1f1ee", isCanonical: !1
			},
			":flag_lc:": {unicode: ["1f1f1-1f1e8"], fname: "1f1f1-1f1e8", uc: "1f1f1-1f1e8", isCanonical: !0},
			":lc:": {unicode: ["1f1f1-1f1e8"], fname: "1f1f1-1f1e8", uc: "1f1f1-1f1e8", isCanonical: !1},
			":flag_lb:": {unicode: ["1f1f1-1f1e7"], fname: "1f1f1-1f1e7", uc: "1f1f1-1f1e7", isCanonical: !0},
			":lb:": {unicode: ["1f1f1-1f1e7"], fname: "1f1f1-1f1e7", uc: "1f1f1-1f1e7", isCanonical: !1},
			":flag_la:": {unicode: ["1f1f1-1f1e6"], fname: "1f1f1-1f1e6", uc: "1f1f1-1f1e6", isCanonical: !0},
			":la:": {
				unicode: ["1f1f1-1f1e6"],
				fname: "1f1f1-1f1e6", uc: "1f1f1-1f1e6", isCanonical: !1
			},
			":flag_kz:": {unicode: ["1f1f0-1f1ff"], fname: "1f1f0-1f1ff", uc: "1f1f0-1f1ff", isCanonical: !0},
			":kz:": {unicode: ["1f1f0-1f1ff"], fname: "1f1f0-1f1ff", uc: "1f1f0-1f1ff", isCanonical: !1},
			":flag_ky:": {unicode: ["1f1f0-1f1fe"], fname: "1f1f0-1f1fe", uc: "1f1f0-1f1fe", isCanonical: !0},
			":ky:": {unicode: ["1f1f0-1f1fe"], fname: "1f1f0-1f1fe", uc: "1f1f0-1f1fe", isCanonical: !1},
			":flag_kw:": {unicode: ["1f1f0-1f1fc"], fname: "1f1f0-1f1fc", uc: "1f1f0-1f1fc", isCanonical: !0},
			":kw:": {
				unicode: ["1f1f0-1f1fc"],
				fname: "1f1f0-1f1fc", uc: "1f1f0-1f1fc", isCanonical: !1
			},
			":flag_kr:": {unicode: ["1f1f0-1f1f7"], fname: "1f1f0-1f1f7", uc: "1f1f0-1f1f7", isCanonical: !0},
			":kr:": {unicode: ["1f1f0-1f1f7"], fname: "1f1f0-1f1f7", uc: "1f1f0-1f1f7", isCanonical: !1},
			":flag_kp:": {unicode: ["1f1f0-1f1f5"], fname: "1f1f0-1f1f5", uc: "1f1f0-1f1f5", isCanonical: !0},
			":kp:": {unicode: ["1f1f0-1f1f5"], fname: "1f1f0-1f1f5", uc: "1f1f0-1f1f5", isCanonical: !1},
			":flag_kn:": {unicode: ["1f1f0-1f1f3"], fname: "1f1f0-1f1f3", uc: "1f1f0-1f1f3", isCanonical: !0},
			":kn:": {
				unicode: ["1f1f0-1f1f3"],
				fname: "1f1f0-1f1f3", uc: "1f1f0-1f1f3", isCanonical: !1
			},
			":flag_km:": {unicode: ["1f1f0-1f1f2"], fname: "1f1f0-1f1f2", uc: "1f1f0-1f1f2", isCanonical: !0},
			":km:": {unicode: ["1f1f0-1f1f2"], fname: "1f1f0-1f1f2", uc: "1f1f0-1f1f2", isCanonical: !1},
			":flag_ki:": {unicode: ["1f1f0-1f1ee"], fname: "1f1f0-1f1ee", uc: "1f1f0-1f1ee", isCanonical: !0},
			":ki:": {unicode: ["1f1f0-1f1ee"], fname: "1f1f0-1f1ee", uc: "1f1f0-1f1ee", isCanonical: !1},
			":flag_kh:": {unicode: ["1f1f0-1f1ed"], fname: "1f1f0-1f1ed", uc: "1f1f0-1f1ed", isCanonical: !0},
			":kh:": {
				unicode: ["1f1f0-1f1ed"],
				fname: "1f1f0-1f1ed", uc: "1f1f0-1f1ed", isCanonical: !1
			},
			":flag_kg:": {unicode: ["1f1f0-1f1ec"], fname: "1f1f0-1f1ec", uc: "1f1f0-1f1ec", isCanonical: !0},
			":kg:": {unicode: ["1f1f0-1f1ec"], fname: "1f1f0-1f1ec", uc: "1f1f0-1f1ec", isCanonical: !1},
			":flag_ke:": {unicode: ["1f1f0-1f1ea"], fname: "1f1f0-1f1ea", uc: "1f1f0-1f1ea", isCanonical: !0},
			":ke:": {unicode: ["1f1f0-1f1ea"], fname: "1f1f0-1f1ea", uc: "1f1f0-1f1ea", isCanonical: !1},
			":flag_jp:": {unicode: ["1f1ef-1f1f5"], fname: "1f1ef-1f1f5", uc: "1f1ef-1f1f5", isCanonical: !0},
			":jp:": {
				unicode: ["1f1ef-1f1f5"],
				fname: "1f1ef-1f1f5", uc: "1f1ef-1f1f5", isCanonical: !1
			},
			":flag_jo:": {unicode: ["1f1ef-1f1f4"], fname: "1f1ef-1f1f4", uc: "1f1ef-1f1f4", isCanonical: !0},
			":jo:": {unicode: ["1f1ef-1f1f4"], fname: "1f1ef-1f1f4", uc: "1f1ef-1f1f4", isCanonical: !1},
			":flag_jm:": {unicode: ["1f1ef-1f1f2"], fname: "1f1ef-1f1f2", uc: "1f1ef-1f1f2", isCanonical: !0},
			":jm:": {unicode: ["1f1ef-1f1f2"], fname: "1f1ef-1f1f2", uc: "1f1ef-1f1f2", isCanonical: !1},
			":flag_je:": {unicode: ["1f1ef-1f1ea"], fname: "1f1ef-1f1ea", uc: "1f1ef-1f1ea", isCanonical: !0},
			":je:": {
				unicode: ["1f1ef-1f1ea"],
				fname: "1f1ef-1f1ea", uc: "1f1ef-1f1ea", isCanonical: !1
			},
			":flag_it:": {unicode: ["1f1ee-1f1f9"], fname: "1f1ee-1f1f9", uc: "1f1ee-1f1f9", isCanonical: !0},
			":it:": {unicode: ["1f1ee-1f1f9"], fname: "1f1ee-1f1f9", uc: "1f1ee-1f1f9", isCanonical: !1},
			":flag_is:": {unicode: ["1f1ee-1f1f8"], fname: "1f1ee-1f1f8", uc: "1f1ee-1f1f8", isCanonical: !0},
			":is:": {unicode: ["1f1ee-1f1f8"], fname: "1f1ee-1f1f8", uc: "1f1ee-1f1f8", isCanonical: !1},
			":flag_ir:": {unicode: ["1f1ee-1f1f7"], fname: "1f1ee-1f1f7", uc: "1f1ee-1f1f7", isCanonical: !0},
			":ir:": {
				unicode: ["1f1ee-1f1f7"],
				fname: "1f1ee-1f1f7", uc: "1f1ee-1f1f7", isCanonical: !1
			},
			":flag_iq:": {unicode: ["1f1ee-1f1f6"], fname: "1f1ee-1f1f6", uc: "1f1ee-1f1f6", isCanonical: !0},
			":iq:": {unicode: ["1f1ee-1f1f6"], fname: "1f1ee-1f1f6", uc: "1f1ee-1f1f6", isCanonical: !1},
			":flag_io:": {unicode: ["1f1ee-1f1f4"], fname: "1f1ee-1f1f4", uc: "1f1ee-1f1f4", isCanonical: !0},
			":io:": {unicode: ["1f1ee-1f1f4"], fname: "1f1ee-1f1f4", uc: "1f1ee-1f1f4", isCanonical: !1},
			":flag_in:": {unicode: ["1f1ee-1f1f3"], fname: "1f1ee-1f1f3", uc: "1f1ee-1f1f3", isCanonical: !0},
			":in:": {
				unicode: ["1f1ee-1f1f3"],
				fname: "1f1ee-1f1f3", uc: "1f1ee-1f1f3", isCanonical: !1
			},
			":flag_im:": {unicode: ["1f1ee-1f1f2"], fname: "1f1ee-1f1f2", uc: "1f1ee-1f1f2", isCanonical: !0},
			":im:": {unicode: ["1f1ee-1f1f2"], fname: "1f1ee-1f1f2", uc: "1f1ee-1f1f2", isCanonical: !1},
			":flag_il:": {unicode: ["1f1ee-1f1f1"], fname: "1f1ee-1f1f1", uc: "1f1ee-1f1f1", isCanonical: !0},
			":il:": {unicode: ["1f1ee-1f1f1"], fname: "1f1ee-1f1f1", uc: "1f1ee-1f1f1", isCanonical: !1},
			":flag_ie:": {unicode: ["1f1ee-1f1ea"], fname: "1f1ee-1f1ea", uc: "1f1ee-1f1ea", isCanonical: !0},
			":ie:": {
				unicode: ["1f1ee-1f1ea"],
				fname: "1f1ee-1f1ea", uc: "1f1ee-1f1ea", isCanonical: !1
			},
			":flag_id:": {unicode: ["1f1ee-1f1e9"], fname: "1f1ee-1f1e9", uc: "1f1ee-1f1e9", isCanonical: !0},
			":indonesia:": {unicode: ["1f1ee-1f1e9"], fname: "1f1ee-1f1e9", uc: "1f1ee-1f1e9", isCanonical: !1},
			":flag_ic:": {unicode: ["1f1ee-1f1e8"], fname: "1f1ee-1f1e8", uc: "1f1ee-1f1e8", isCanonical: !0},
			":ic:": {unicode: ["1f1ee-1f1e8"], fname: "1f1ee-1f1e8", uc: "1f1ee-1f1e8", isCanonical: !1},
			":flag_hu:": {unicode: ["1f1ed-1f1fa"], fname: "1f1ed-1f1fa", uc: "1f1ed-1f1fa", isCanonical: !0},
			":hu:": {
				unicode: ["1f1ed-1f1fa"],
				fname: "1f1ed-1f1fa", uc: "1f1ed-1f1fa", isCanonical: !1
			},
			":flag_ht:": {unicode: ["1f1ed-1f1f9"], fname: "1f1ed-1f1f9", uc: "1f1ed-1f1f9", isCanonical: !0},
			":ht:": {unicode: ["1f1ed-1f1f9"], fname: "1f1ed-1f1f9", uc: "1f1ed-1f1f9", isCanonical: !1},
			":flag_hr:": {unicode: ["1f1ed-1f1f7"], fname: "1f1ed-1f1f7", uc: "1f1ed-1f1f7", isCanonical: !0},
			":hr:": {unicode: ["1f1ed-1f1f7"], fname: "1f1ed-1f1f7", uc: "1f1ed-1f1f7", isCanonical: !1},
			":flag_hn:": {unicode: ["1f1ed-1f1f3"], fname: "1f1ed-1f1f3", uc: "1f1ed-1f1f3", isCanonical: !0},
			":hn:": {
				unicode: ["1f1ed-1f1f3"],
				fname: "1f1ed-1f1f3", uc: "1f1ed-1f1f3", isCanonical: !1
			},
			":flag_hm:": {unicode: ["1f1ed-1f1f2"], fname: "1f1ed-1f1f2", uc: "1f1ed-1f1f2", isCanonical: !0},
			":hm:": {unicode: ["1f1ed-1f1f2"], fname: "1f1ed-1f1f2", uc: "1f1ed-1f1f2", isCanonical: !1},
			":flag_hk:": {unicode: ["1f1ed-1f1f0"], fname: "1f1ed-1f1f0", uc: "1f1ed-1f1f0", isCanonical: !0},
			":hk:": {unicode: ["1f1ed-1f1f0"], fname: "1f1ed-1f1f0", uc: "1f1ed-1f1f0", isCanonical: !1},
			":flag_gy:": {unicode: ["1f1ec-1f1fe"], fname: "1f1ec-1f1fe", uc: "1f1ec-1f1fe", isCanonical: !0},
			":gy:": {
				unicode: ["1f1ec-1f1fe"],
				fname: "1f1ec-1f1fe", uc: "1f1ec-1f1fe", isCanonical: !1
			},
			":flag_gw:": {unicode: ["1f1ec-1f1fc"], fname: "1f1ec-1f1fc", uc: "1f1ec-1f1fc", isCanonical: !0},
			":gw:": {unicode: ["1f1ec-1f1fc"], fname: "1f1ec-1f1fc", uc: "1f1ec-1f1fc", isCanonical: !1},
			":flag_gu:": {unicode: ["1f1ec-1f1fa"], fname: "1f1ec-1f1fa", uc: "1f1ec-1f1fa", isCanonical: !0},
			":gu:": {unicode: ["1f1ec-1f1fa"], fname: "1f1ec-1f1fa", uc: "1f1ec-1f1fa", isCanonical: !1},
			":flag_gt:": {unicode: ["1f1ec-1f1f9"], fname: "1f1ec-1f1f9", uc: "1f1ec-1f1f9", isCanonical: !0},
			":gt:": {
				unicode: ["1f1ec-1f1f9"],
				fname: "1f1ec-1f1f9", uc: "1f1ec-1f1f9", isCanonical: !1
			},
			":flag_gs:": {unicode: ["1f1ec-1f1f8"], fname: "1f1ec-1f1f8", uc: "1f1ec-1f1f8", isCanonical: !0},
			":gs:": {unicode: ["1f1ec-1f1f8"], fname: "1f1ec-1f1f8", uc: "1f1ec-1f1f8", isCanonical: !1},
			":flag_gr:": {unicode: ["1f1ec-1f1f7"], fname: "1f1ec-1f1f7", uc: "1f1ec-1f1f7", isCanonical: !0},
			":gr:": {unicode: ["1f1ec-1f1f7"], fname: "1f1ec-1f1f7", uc: "1f1ec-1f1f7", isCanonical: !1},
			":flag_gq:": {unicode: ["1f1ec-1f1f6"], fname: "1f1ec-1f1f6", uc: "1f1ec-1f1f6", isCanonical: !0},
			":gq:": {
				unicode: ["1f1ec-1f1f6"],
				fname: "1f1ec-1f1f6", uc: "1f1ec-1f1f6", isCanonical: !1
			},
			":flag_gp:": {unicode: ["1f1ec-1f1f5"], fname: "1f1ec-1f1f5", uc: "1f1ec-1f1f5", isCanonical: !0},
			":gp:": {unicode: ["1f1ec-1f1f5"], fname: "1f1ec-1f1f5", uc: "1f1ec-1f1f5", isCanonical: !1},
			":flag_gn:": {unicode: ["1f1ec-1f1f3"], fname: "1f1ec-1f1f3", uc: "1f1ec-1f1f3", isCanonical: !0},
			":gn:": {unicode: ["1f1ec-1f1f3"], fname: "1f1ec-1f1f3", uc: "1f1ec-1f1f3", isCanonical: !1},
			":flag_gm:": {unicode: ["1f1ec-1f1f2"], fname: "1f1ec-1f1f2", uc: "1f1ec-1f1f2", isCanonical: !0},
			":gm:": {
				unicode: ["1f1ec-1f1f2"],
				fname: "1f1ec-1f1f2", uc: "1f1ec-1f1f2", isCanonical: !1
			},
			":flag_gl:": {unicode: ["1f1ec-1f1f1"], fname: "1f1ec-1f1f1", uc: "1f1ec-1f1f1", isCanonical: !0},
			":gl:": {unicode: ["1f1ec-1f1f1"], fname: "1f1ec-1f1f1", uc: "1f1ec-1f1f1", isCanonical: !1},
			":flag_gi:": {unicode: ["1f1ec-1f1ee"], fname: "1f1ec-1f1ee", uc: "1f1ec-1f1ee", isCanonical: !0},
			":gi:": {unicode: ["1f1ec-1f1ee"], fname: "1f1ec-1f1ee", uc: "1f1ec-1f1ee", isCanonical: !1},
			":flag_gh:": {unicode: ["1f1ec-1f1ed"], fname: "1f1ec-1f1ed", uc: "1f1ec-1f1ed", isCanonical: !0},
			":gh:": {
				unicode: ["1f1ec-1f1ed"],
				fname: "1f1ec-1f1ed", uc: "1f1ec-1f1ed", isCanonical: !1
			},
			":flag_gg:": {unicode: ["1f1ec-1f1ec"], fname: "1f1ec-1f1ec", uc: "1f1ec-1f1ec", isCanonical: !0},
			":gg:": {unicode: ["1f1ec-1f1ec"], fname: "1f1ec-1f1ec", uc: "1f1ec-1f1ec", isCanonical: !1},
			":flag_gf:": {unicode: ["1f1ec-1f1eb"], fname: "1f1ec-1f1eb", uc: "1f1ec-1f1eb", isCanonical: !0},
			":gf:": {unicode: ["1f1ec-1f1eb"], fname: "1f1ec-1f1eb", uc: "1f1ec-1f1eb", isCanonical: !1},
			":flag_ge:": {unicode: ["1f1ec-1f1ea"], fname: "1f1ec-1f1ea", uc: "1f1ec-1f1ea", isCanonical: !0},
			":ge:": {
				unicode: ["1f1ec-1f1ea"],
				fname: "1f1ec-1f1ea", uc: "1f1ec-1f1ea", isCanonical: !1
			},
			":flag_gd:": {unicode: ["1f1ec-1f1e9"], fname: "1f1ec-1f1e9", uc: "1f1ec-1f1e9", isCanonical: !0},
			":gd:": {unicode: ["1f1ec-1f1e9"], fname: "1f1ec-1f1e9", uc: "1f1ec-1f1e9", isCanonical: !1},
			":flag_gb:": {unicode: ["1f1ec-1f1e7"], fname: "1f1ec-1f1e7", uc: "1f1ec-1f1e7", isCanonical: !0},
			":gb:": {unicode: ["1f1ec-1f1e7"], fname: "1f1ec-1f1e7", uc: "1f1ec-1f1e7", isCanonical: !1},
			":flag_ga:": {unicode: ["1f1ec-1f1e6"], fname: "1f1ec-1f1e6", uc: "1f1ec-1f1e6", isCanonical: !0},
			":ga:": {
				unicode: ["1f1ec-1f1e6"],
				fname: "1f1ec-1f1e6", uc: "1f1ec-1f1e6", isCanonical: !1
			},
			":flag_fr:": {unicode: ["1f1eb-1f1f7"], fname: "1f1eb-1f1f7", uc: "1f1eb-1f1f7", isCanonical: !0},
			":fr:": {unicode: ["1f1eb-1f1f7"], fname: "1f1eb-1f1f7", uc: "1f1eb-1f1f7", isCanonical: !1},
			":flag_fo:": {unicode: ["1f1eb-1f1f4"], fname: "1f1eb-1f1f4", uc: "1f1eb-1f1f4", isCanonical: !0},
			":fo:": {unicode: ["1f1eb-1f1f4"], fname: "1f1eb-1f1f4", uc: "1f1eb-1f1f4", isCanonical: !1},
			":flag_fm:": {unicode: ["1f1eb-1f1f2"], fname: "1f1eb-1f1f2", uc: "1f1eb-1f1f2", isCanonical: !0},
			":fm:": {
				unicode: ["1f1eb-1f1f2"],
				fname: "1f1eb-1f1f2", uc: "1f1eb-1f1f2", isCanonical: !1
			},
			":flag_fk:": {unicode: ["1f1eb-1f1f0"], fname: "1f1eb-1f1f0", uc: "1f1eb-1f1f0", isCanonical: !0},
			":fk:": {unicode: ["1f1eb-1f1f0"], fname: "1f1eb-1f1f0", uc: "1f1eb-1f1f0", isCanonical: !1},
			":flag_fj:": {unicode: ["1f1eb-1f1ef"], fname: "1f1eb-1f1ef", uc: "1f1eb-1f1ef", isCanonical: !0},
			":fj:": {unicode: ["1f1eb-1f1ef"], fname: "1f1eb-1f1ef", uc: "1f1eb-1f1ef", isCanonical: !1},
			":flag_fi:": {unicode: ["1f1eb-1f1ee"], fname: "1f1eb-1f1ee", uc: "1f1eb-1f1ee", isCanonical: !0},
			":fi:": {
				unicode: ["1f1eb-1f1ee"],
				fname: "1f1eb-1f1ee", uc: "1f1eb-1f1ee", isCanonical: !1
			},
			":flag_eu:": {unicode: ["1f1ea-1f1fa"], fname: "1f1ea-1f1fa", uc: "1f1ea-1f1fa", isCanonical: !0},
			":eu:": {unicode: ["1f1ea-1f1fa"], fname: "1f1ea-1f1fa", uc: "1f1ea-1f1fa", isCanonical: !1},
			":flag_et:": {unicode: ["1f1ea-1f1f9"], fname: "1f1ea-1f1f9", uc: "1f1ea-1f1f9", isCanonical: !0},
			":et:": {unicode: ["1f1ea-1f1f9"], fname: "1f1ea-1f1f9", uc: "1f1ea-1f1f9", isCanonical: !1},
			":flag_es:": {unicode: ["1f1ea-1f1f8"], fname: "1f1ea-1f1f8", uc: "1f1ea-1f1f8", isCanonical: !0},
			":es:": {
				unicode: ["1f1ea-1f1f8"],
				fname: "1f1ea-1f1f8", uc: "1f1ea-1f1f8", isCanonical: !1
			},
			":flag_er:": {unicode: ["1f1ea-1f1f7"], fname: "1f1ea-1f1f7", uc: "1f1ea-1f1f7", isCanonical: !0},
			":er:": {unicode: ["1f1ea-1f1f7"], fname: "1f1ea-1f1f7", uc: "1f1ea-1f1f7", isCanonical: !1},
			":flag_eh:": {unicode: ["1f1ea-1f1ed"], fname: "1f1ea-1f1ed", uc: "1f1ea-1f1ed", isCanonical: !0},
			":eh:": {unicode: ["1f1ea-1f1ed"], fname: "1f1ea-1f1ed", uc: "1f1ea-1f1ed", isCanonical: !1},
			":flag_eg:": {unicode: ["1f1ea-1f1ec"], fname: "1f1ea-1f1ec", uc: "1f1ea-1f1ec", isCanonical: !0},
			":eg:": {
				unicode: ["1f1ea-1f1ec"],
				fname: "1f1ea-1f1ec", uc: "1f1ea-1f1ec", isCanonical: !1
			},
			":flag_ee:": {unicode: ["1f1ea-1f1ea"], fname: "1f1ea-1f1ea", uc: "1f1ea-1f1ea", isCanonical: !0},
			":ee:": {unicode: ["1f1ea-1f1ea"], fname: "1f1ea-1f1ea", uc: "1f1ea-1f1ea", isCanonical: !1},
			":flag_ec:": {unicode: ["1f1ea-1f1e8"], fname: "1f1ea-1f1e8", uc: "1f1ea-1f1e8", isCanonical: !0},
			":ec:": {unicode: ["1f1ea-1f1e8"], fname: "1f1ea-1f1e8", uc: "1f1ea-1f1e8", isCanonical: !1},
			":flag_ea:": {unicode: ["1f1ea-1f1e6"], fname: "1f1ea-1f1e6", uc: "1f1ea-1f1e6", isCanonical: !0},
			":ea:": {
				unicode: ["1f1ea-1f1e6"],
				fname: "1f1ea-1f1e6", uc: "1f1ea-1f1e6", isCanonical: !1
			},
			":flag_dz:": {unicode: ["1f1e9-1f1ff"], fname: "1f1e9-1f1ff", uc: "1f1e9-1f1ff", isCanonical: !0},
			":dz:": {unicode: ["1f1e9-1f1ff"], fname: "1f1e9-1f1ff", uc: "1f1e9-1f1ff", isCanonical: !1},
			":flag_do:": {unicode: ["1f1e9-1f1f4"], fname: "1f1e9-1f1f4", uc: "1f1e9-1f1f4", isCanonical: !0},
			":do:": {unicode: ["1f1e9-1f1f4"], fname: "1f1e9-1f1f4", uc: "1f1e9-1f1f4", isCanonical: !1},
			":flag_dm:": {unicode: ["1f1e9-1f1f2"], fname: "1f1e9-1f1f2", uc: "1f1e9-1f1f2", isCanonical: !0},
			":dm:": {
				unicode: ["1f1e9-1f1f2"],
				fname: "1f1e9-1f1f2", uc: "1f1e9-1f1f2", isCanonical: !1
			},
			":flag_dk:": {unicode: ["1f1e9-1f1f0"], fname: "1f1e9-1f1f0", uc: "1f1e9-1f1f0", isCanonical: !0},
			":dk:": {unicode: ["1f1e9-1f1f0"], fname: "1f1e9-1f1f0", uc: "1f1e9-1f1f0", isCanonical: !1},
			":flag_dj:": {unicode: ["1f1e9-1f1ef"], fname: "1f1e9-1f1ef", uc: "1f1e9-1f1ef", isCanonical: !0},
			":dj:": {unicode: ["1f1e9-1f1ef"], fname: "1f1e9-1f1ef", uc: "1f1e9-1f1ef", isCanonical: !1},
			":flag_dg:": {unicode: ["1f1e9-1f1ec"], fname: "1f1e9-1f1ec", uc: "1f1e9-1f1ec", isCanonical: !0},
			":dg:": {
				unicode: ["1f1e9-1f1ec"],
				fname: "1f1e9-1f1ec", uc: "1f1e9-1f1ec", isCanonical: !1
			},
			":flag_de:": {unicode: ["1f1e9-1f1ea"], fname: "1f1e9-1f1ea", uc: "1f1e9-1f1ea", isCanonical: !0},
			":de:": {unicode: ["1f1e9-1f1ea"], fname: "1f1e9-1f1ea", uc: "1f1e9-1f1ea", isCanonical: !1},
			":flag_cz:": {unicode: ["1f1e8-1f1ff"], fname: "1f1e8-1f1ff", uc: "1f1e8-1f1ff", isCanonical: !0},
			":cz:": {unicode: ["1f1e8-1f1ff"], fname: "1f1e8-1f1ff", uc: "1f1e8-1f1ff", isCanonical: !1},
			":flag_cy:": {unicode: ["1f1e8-1f1fe"], fname: "1f1e8-1f1fe", uc: "1f1e8-1f1fe", isCanonical: !0},
			":cy:": {
				unicode: ["1f1e8-1f1fe"],
				fname: "1f1e8-1f1fe", uc: "1f1e8-1f1fe", isCanonical: !1
			},
			":flag_cx:": {unicode: ["1f1e8-1f1fd"], fname: "1f1e8-1f1fd", uc: "1f1e8-1f1fd", isCanonical: !0},
			":cx:": {unicode: ["1f1e8-1f1fd"], fname: "1f1e8-1f1fd", uc: "1f1e8-1f1fd", isCanonical: !1},
			":flag_cw:": {unicode: ["1f1e8-1f1fc"], fname: "1f1e8-1f1fc", uc: "1f1e8-1f1fc", isCanonical: !0},
			":cw:": {unicode: ["1f1e8-1f1fc"], fname: "1f1e8-1f1fc", uc: "1f1e8-1f1fc", isCanonical: !1},
			":flag_cv:": {unicode: ["1f1e8-1f1fb"], fname: "1f1e8-1f1fb", uc: "1f1e8-1f1fb", isCanonical: !0},
			":cv:": {
				unicode: ["1f1e8-1f1fb"],
				fname: "1f1e8-1f1fb", uc: "1f1e8-1f1fb", isCanonical: !1
			},
			":flag_cu:": {unicode: ["1f1e8-1f1fa"], fname: "1f1e8-1f1fa", uc: "1f1e8-1f1fa", isCanonical: !0},
			":cu:": {unicode: ["1f1e8-1f1fa"], fname: "1f1e8-1f1fa", uc: "1f1e8-1f1fa", isCanonical: !1},
			":flag_cr:": {unicode: ["1f1e8-1f1f7"], fname: "1f1e8-1f1f7", uc: "1f1e8-1f1f7", isCanonical: !0},
			":cr:": {unicode: ["1f1e8-1f1f7"], fname: "1f1e8-1f1f7", uc: "1f1e8-1f1f7", isCanonical: !1},
			":flag_cp:": {unicode: ["1f1e8-1f1f5"], fname: "1f1e8-1f1f5", uc: "1f1e8-1f1f5", isCanonical: !0},
			":cp:": {
				unicode: ["1f1e8-1f1f5"],
				fname: "1f1e8-1f1f5", uc: "1f1e8-1f1f5", isCanonical: !1
			},
			":flag_co:": {unicode: ["1f1e8-1f1f4"], fname: "1f1e8-1f1f4", uc: "1f1e8-1f1f4", isCanonical: !0},
			":co:": {unicode: ["1f1e8-1f1f4"], fname: "1f1e8-1f1f4", uc: "1f1e8-1f1f4", isCanonical: !1},
			":flag_cn:": {unicode: ["1f1e8-1f1f3"], fname: "1f1e8-1f1f3", uc: "1f1e8-1f1f3", isCanonical: !0},
			":cn:": {unicode: ["1f1e8-1f1f3"], fname: "1f1e8-1f1f3", uc: "1f1e8-1f1f3", isCanonical: !1},
			":flag_cm:": {unicode: ["1f1e8-1f1f2"], fname: "1f1e8-1f1f2", uc: "1f1e8-1f1f2", isCanonical: !0},
			":cm:": {
				unicode: ["1f1e8-1f1f2"],
				fname: "1f1e8-1f1f2", uc: "1f1e8-1f1f2", isCanonical: !1
			},
			":flag_cl:": {unicode: ["1f1e8-1f1f1"], fname: "1f1e8-1f1f1", uc: "1f1e8-1f1f1", isCanonical: !0},
			":chile:": {unicode: ["1f1e8-1f1f1"], fname: "1f1e8-1f1f1", uc: "1f1e8-1f1f1", isCanonical: !1},
			":flag_ck:": {unicode: ["1f1e8-1f1f0"], fname: "1f1e8-1f1f0", uc: "1f1e8-1f1f0", isCanonical: !0},
			":ck:": {unicode: ["1f1e8-1f1f0"], fname: "1f1e8-1f1f0", uc: "1f1e8-1f1f0", isCanonical: !1},
			":flag_ci:": {unicode: ["1f1e8-1f1ee"], fname: "1f1e8-1f1ee", uc: "1f1e8-1f1ee", isCanonical: !0},
			":ci:": {
				unicode: ["1f1e8-1f1ee"],
				fname: "1f1e8-1f1ee", uc: "1f1e8-1f1ee", isCanonical: !1
			},
			":flag_ch:": {unicode: ["1f1e8-1f1ed"], fname: "1f1e8-1f1ed", uc: "1f1e8-1f1ed", isCanonical: !0},
			":ch:": {unicode: ["1f1e8-1f1ed"], fname: "1f1e8-1f1ed", uc: "1f1e8-1f1ed", isCanonical: !1},
			":flag_cg:": {unicode: ["1f1e8-1f1ec"], fname: "1f1e8-1f1ec", uc: "1f1e8-1f1ec", isCanonical: !0},
			":cg:": {unicode: ["1f1e8-1f1ec"], fname: "1f1e8-1f1ec", uc: "1f1e8-1f1ec", isCanonical: !1},
			":flag_cf:": {unicode: ["1f1e8-1f1eb"], fname: "1f1e8-1f1eb", uc: "1f1e8-1f1eb", isCanonical: !0},
			":cf:": {
				unicode: ["1f1e8-1f1eb"],
				fname: "1f1e8-1f1eb", uc: "1f1e8-1f1eb", isCanonical: !1
			},
			":flag_cd:": {unicode: ["1f1e8-1f1e9"], fname: "1f1e8-1f1e9", uc: "1f1e8-1f1e9", isCanonical: !0},
			":congo:": {unicode: ["1f1e8-1f1e9"], fname: "1f1e8-1f1e9", uc: "1f1e8-1f1e9", isCanonical: !1},
			":flag_cc:": {unicode: ["1f1e8-1f1e8"], fname: "1f1e8-1f1e8", uc: "1f1e8-1f1e8", isCanonical: !0},
			":cc:": {unicode: ["1f1e8-1f1e8"], fname: "1f1e8-1f1e8", uc: "1f1e8-1f1e8", isCanonical: !1},
			":flag_ca:": {unicode: ["1f1e8-1f1e6"], fname: "1f1e8-1f1e6", uc: "1f1e8-1f1e6", isCanonical: !0},
			":ca:": {
				unicode: ["1f1e8-1f1e6"],
				fname: "1f1e8-1f1e6", uc: "1f1e8-1f1e6", isCanonical: !1
			},
			":flag_bz:": {unicode: ["1f1e7-1f1ff"], fname: "1f1e7-1f1ff", uc: "1f1e7-1f1ff", isCanonical: !0},
			":bz:": {unicode: ["1f1e7-1f1ff"], fname: "1f1e7-1f1ff", uc: "1f1e7-1f1ff", isCanonical: !1},
			":flag_by:": {unicode: ["1f1e7-1f1fe"], fname: "1f1e7-1f1fe", uc: "1f1e7-1f1fe", isCanonical: !0},
			":by:": {unicode: ["1f1e7-1f1fe"], fname: "1f1e7-1f1fe", uc: "1f1e7-1f1fe", isCanonical: !1},
			":flag_bw:": {unicode: ["1f1e7-1f1fc"], fname: "1f1e7-1f1fc", uc: "1f1e7-1f1fc", isCanonical: !0},
			":bw:": {
				unicode: ["1f1e7-1f1fc"],
				fname: "1f1e7-1f1fc", uc: "1f1e7-1f1fc", isCanonical: !1
			},
			":flag_bv:": {unicode: ["1f1e7-1f1fb"], fname: "1f1e7-1f1fb", uc: "1f1e7-1f1fb", isCanonical: !0},
			":bv:": {unicode: ["1f1e7-1f1fb"], fname: "1f1e7-1f1fb", uc: "1f1e7-1f1fb", isCanonical: !1},
			":flag_bt:": {unicode: ["1f1e7-1f1f9"], fname: "1f1e7-1f1f9", uc: "1f1e7-1f1f9", isCanonical: !0},
			":bt:": {unicode: ["1f1e7-1f1f9"], fname: "1f1e7-1f1f9", uc: "1f1e7-1f1f9", isCanonical: !1},
			":flag_bs:": {unicode: ["1f1e7-1f1f8"], fname: "1f1e7-1f1f8", uc: "1f1e7-1f1f8", isCanonical: !0},
			":bs:": {
				unicode: ["1f1e7-1f1f8"],
				fname: "1f1e7-1f1f8", uc: "1f1e7-1f1f8", isCanonical: !1
			},
			":flag_br:": {unicode: ["1f1e7-1f1f7"], fname: "1f1e7-1f1f7", uc: "1f1e7-1f1f7", isCanonical: !0},
			":br:": {unicode: ["1f1e7-1f1f7"], fname: "1f1e7-1f1f7", uc: "1f1e7-1f1f7", isCanonical: !1},
			":flag_bq:": {unicode: ["1f1e7-1f1f6"], fname: "1f1e7-1f1f6", uc: "1f1e7-1f1f6", isCanonical: !0},
			":bq:": {unicode: ["1f1e7-1f1f6"], fname: "1f1e7-1f1f6", uc: "1f1e7-1f1f6", isCanonical: !1},
			":flag_bo:": {unicode: ["1f1e7-1f1f4"], fname: "1f1e7-1f1f4", uc: "1f1e7-1f1f4", isCanonical: !0},
			":bo:": {
				unicode: ["1f1e7-1f1f4"],
				fname: "1f1e7-1f1f4", uc: "1f1e7-1f1f4", isCanonical: !1
			},
			":flag_bn:": {unicode: ["1f1e7-1f1f3"], fname: "1f1e7-1f1f3", uc: "1f1e7-1f1f3", isCanonical: !0},
			":bn:": {unicode: ["1f1e7-1f1f3"], fname: "1f1e7-1f1f3", uc: "1f1e7-1f1f3", isCanonical: !1},
			":flag_bm:": {unicode: ["1f1e7-1f1f2"], fname: "1f1e7-1f1f2", uc: "1f1e7-1f1f2", isCanonical: !0},
			":bm:": {unicode: ["1f1e7-1f1f2"], fname: "1f1e7-1f1f2", uc: "1f1e7-1f1f2", isCanonical: !1},
			":flag_bl:": {unicode: ["1f1e7-1f1f1"], fname: "1f1e7-1f1f1", uc: "1f1e7-1f1f1", isCanonical: !0},
			":bl:": {
				unicode: ["1f1e7-1f1f1"],
				fname: "1f1e7-1f1f1", uc: "1f1e7-1f1f1", isCanonical: !1
			},
			":flag_bj:": {unicode: ["1f1e7-1f1ef"], fname: "1f1e7-1f1ef", uc: "1f1e7-1f1ef", isCanonical: !0},
			":bj:": {unicode: ["1f1e7-1f1ef"], fname: "1f1e7-1f1ef", uc: "1f1e7-1f1ef", isCanonical: !1},
			":flag_bi:": {unicode: ["1f1e7-1f1ee"], fname: "1f1e7-1f1ee", uc: "1f1e7-1f1ee", isCanonical: !0},
			":bi:": {unicode: ["1f1e7-1f1ee"], fname: "1f1e7-1f1ee", uc: "1f1e7-1f1ee", isCanonical: !1},
			":flag_bh:": {unicode: ["1f1e7-1f1ed"], fname: "1f1e7-1f1ed", uc: "1f1e7-1f1ed", isCanonical: !0},
			":bh:": {
				unicode: ["1f1e7-1f1ed"],
				fname: "1f1e7-1f1ed", uc: "1f1e7-1f1ed", isCanonical: !1
			},
			":flag_bg:": {unicode: ["1f1e7-1f1ec"], fname: "1f1e7-1f1ec", uc: "1f1e7-1f1ec", isCanonical: !0},
			":bg:": {unicode: ["1f1e7-1f1ec"], fname: "1f1e7-1f1ec", uc: "1f1e7-1f1ec", isCanonical: !1},
			":flag_bf:": {unicode: ["1f1e7-1f1eb"], fname: "1f1e7-1f1eb", uc: "1f1e7-1f1eb", isCanonical: !0},
			":bf:": {unicode: ["1f1e7-1f1eb"], fname: "1f1e7-1f1eb", uc: "1f1e7-1f1eb", isCanonical: !1},
			":flag_be:": {unicode: ["1f1e7-1f1ea"], fname: "1f1e7-1f1ea", uc: "1f1e7-1f1ea", isCanonical: !0},
			":be:": {
				unicode: ["1f1e7-1f1ea"],
				fname: "1f1e7-1f1ea", uc: "1f1e7-1f1ea", isCanonical: !1
			},
			":flag_bd:": {unicode: ["1f1e7-1f1e9"], fname: "1f1e7-1f1e9", uc: "1f1e7-1f1e9", isCanonical: !0},
			":bd:": {unicode: ["1f1e7-1f1e9"], fname: "1f1e7-1f1e9", uc: "1f1e7-1f1e9", isCanonical: !1},
			":flag_bb:": {unicode: ["1f1e7-1f1e7"], fname: "1f1e7-1f1e7", uc: "1f1e7-1f1e7", isCanonical: !0},
			":bb:": {unicode: ["1f1e7-1f1e7"], fname: "1f1e7-1f1e7", uc: "1f1e7-1f1e7", isCanonical: !1},
			":flag_ba:": {unicode: ["1f1e7-1f1e6"], fname: "1f1e7-1f1e6", uc: "1f1e7-1f1e6", isCanonical: !0},
			":ba:": {
				unicode: ["1f1e7-1f1e6"],
				fname: "1f1e7-1f1e6", uc: "1f1e7-1f1e6", isCanonical: !1
			},
			":flag_az:": {unicode: ["1f1e6-1f1ff"], fname: "1f1e6-1f1ff", uc: "1f1e6-1f1ff", isCanonical: !0},
			":az:": {unicode: ["1f1e6-1f1ff"], fname: "1f1e6-1f1ff", uc: "1f1e6-1f1ff", isCanonical: !1},
			":flag_ax:": {unicode: ["1f1e6-1f1fd"], fname: "1f1e6-1f1fd", uc: "1f1e6-1f1fd", isCanonical: !0},
			":ax:": {unicode: ["1f1e6-1f1fd"], fname: "1f1e6-1f1fd", uc: "1f1e6-1f1fd", isCanonical: !1},
			":flag_aw:": {unicode: ["1f1e6-1f1fc"], fname: "1f1e6-1f1fc", uc: "1f1e6-1f1fc", isCanonical: !0},
			":aw:": {
				unicode: ["1f1e6-1f1fc"],
				fname: "1f1e6-1f1fc", uc: "1f1e6-1f1fc", isCanonical: !1
			},
			":flag_au:": {unicode: ["1f1e6-1f1fa"], fname: "1f1e6-1f1fa", uc: "1f1e6-1f1fa", isCanonical: !0},
			":au:": {unicode: ["1f1e6-1f1fa"], fname: "1f1e6-1f1fa", uc: "1f1e6-1f1fa", isCanonical: !1},
			":flag_at:": {unicode: ["1f1e6-1f1f9"], fname: "1f1e6-1f1f9", uc: "1f1e6-1f1f9", isCanonical: !0},
			":at:": {unicode: ["1f1e6-1f1f9"], fname: "1f1e6-1f1f9", uc: "1f1e6-1f1f9", isCanonical: !1},
			":flag_as:": {unicode: ["1f1e6-1f1f8"], fname: "1f1e6-1f1f8", uc: "1f1e6-1f1f8", isCanonical: !0},
			":as:": {
				unicode: ["1f1e6-1f1f8"],
				fname: "1f1e6-1f1f8", uc: "1f1e6-1f1f8", isCanonical: !1
			},
			":flag_ar:": {unicode: ["1f1e6-1f1f7"], fname: "1f1e6-1f1f7", uc: "1f1e6-1f1f7", isCanonical: !0},
			":ar:": {unicode: ["1f1e6-1f1f7"], fname: "1f1e6-1f1f7", uc: "1f1e6-1f1f7", isCanonical: !1},
			":flag_aq:": {unicode: ["1f1e6-1f1f6"], fname: "1f1e6-1f1f6", uc: "1f1e6-1f1f6", isCanonical: !0},
			":aq:": {unicode: ["1f1e6-1f1f6"], fname: "1f1e6-1f1f6", uc: "1f1e6-1f1f6", isCanonical: !1},
			":flag_ao:": {unicode: ["1f1e6-1f1f4"], fname: "1f1e6-1f1f4", uc: "1f1e6-1f1f4", isCanonical: !0},
			":ao:": {
				unicode: ["1f1e6-1f1f4"],
				fname: "1f1e6-1f1f4", uc: "1f1e6-1f1f4", isCanonical: !1
			},
			":flag_am:": {unicode: ["1f1e6-1f1f2"], fname: "1f1e6-1f1f2", uc: "1f1e6-1f1f2", isCanonical: !0},
			":am:": {unicode: ["1f1e6-1f1f2"], fname: "1f1e6-1f1f2", uc: "1f1e6-1f1f2", isCanonical: !1},
			":flag_al:": {unicode: ["1f1e6-1f1f1"], fname: "1f1e6-1f1f1", uc: "1f1e6-1f1f1", isCanonical: !0},
			":al:": {unicode: ["1f1e6-1f1f1"], fname: "1f1e6-1f1f1", uc: "1f1e6-1f1f1", isCanonical: !1},
			":flag_ai:": {unicode: ["1f1e6-1f1ee"], fname: "1f1e6-1f1ee", uc: "1f1e6-1f1ee", isCanonical: !0},
			":ai:": {
				unicode: ["1f1e6-1f1ee"],
				fname: "1f1e6-1f1ee", uc: "1f1e6-1f1ee", isCanonical: !1
			},
			":flag_ag:": {unicode: ["1f1e6-1f1ec"], fname: "1f1e6-1f1ec", uc: "1f1e6-1f1ec", isCanonical: !0},
			":ag:": {unicode: ["1f1e6-1f1ec"], fname: "1f1e6-1f1ec", uc: "1f1e6-1f1ec", isCanonical: !1},
			":flag_af:": {unicode: ["1f1e6-1f1eb"], fname: "1f1e6-1f1eb", uc: "1f1e6-1f1eb", isCanonical: !0},
			":af:": {unicode: ["1f1e6-1f1eb"], fname: "1f1e6-1f1eb", uc: "1f1e6-1f1eb", isCanonical: !1},
			":flag_ae:": {unicode: ["1f1e6-1f1ea"], fname: "1f1e6-1f1ea", uc: "1f1e6-1f1ea", isCanonical: !0},
			":ae:": {
				unicode: ["1f1e6-1f1ea"],
				fname: "1f1e6-1f1ea", uc: "1f1e6-1f1ea", isCanonical: !1
			},
			":flag_ad:": {unicode: ["1f1e6-1f1e9"], fname: "1f1e6-1f1e9", uc: "1f1e6-1f1e9", isCanonical: !0},
			":ad:": {unicode: ["1f1e6-1f1e9"], fname: "1f1e6-1f1e9", uc: "1f1e6-1f1e9", isCanonical: !1},
			":flag_ac:": {unicode: ["1f1e6-1f1e8"], fname: "1f1e6-1f1e8", uc: "1f1e6-1f1e8", isCanonical: !0},
			":ac:": {unicode: ["1f1e6-1f1e8"], fname: "1f1e6-1f1e8", uc: "1f1e6-1f1e8", isCanonical: !1},
			":mahjong:": {unicode: ["1f004-fe0f", "1f004"], fname: "1f004", uc: "1f004", isCanonical: !0},
			":parking:": {
				unicode: ["1f17f-fe0f",
					"1f17f"], fname: "1f17f", uc: "1f17f", isCanonical: !0
			},
			":sa:": {unicode: ["1f202-fe0f", "1f202"], fname: "1f202", uc: "1f202", isCanonical: !0},
			":u7121:": {unicode: ["1f21a-fe0f", "1f21a"], fname: "1f21a", uc: "1f21a", isCanonical: !0},
			":u6307:": {unicode: ["1f22f-fe0f", "1f22f"], fname: "1f22f", uc: "1f22f", isCanonical: !0},
			":u6708:": {unicode: ["1f237-fe0f", "1f237"], fname: "1f237", uc: "1f237", isCanonical: !0},
			":film_frames:": {unicode: ["1f39e-fe0f", "1f39e"], fname: "1f39e", uc: "1f39e", isCanonical: !0},
			":tickets:": {
				unicode: ["1f39f-fe0f",
					"1f39f"], fname: "1f39f", uc: "1f39f", isCanonical: !0
			},
			":admission_tickets:": {unicode: ["1f39f-fe0f", "1f39f"], fname: "1f39f", uc: "1f39f", isCanonical: !1},
			":lifter:": {unicode: ["1f3cb-fe0f", "1f3cb"], fname: "1f3cb", uc: "1f3cb", isCanonical: !0},
			":weight_lifter:": {unicode: ["1f3cb-fe0f", "1f3cb"], fname: "1f3cb", uc: "1f3cb", isCanonical: !1},
			":golfer:": {unicode: ["1f3cc-fe0f", "1f3cc"], fname: "1f3cc", uc: "1f3cc", isCanonical: !0},
			":motorcycle:": {unicode: ["1f3cd-fe0f", "1f3cd"], fname: "1f3cd", uc: "1f3cd", isCanonical: !0},
			":racing_motorcycle:": {
				unicode: ["1f3cd-fe0f",
					"1f3cd"], fname: "1f3cd", uc: "1f3cd", isCanonical: !1
			},
			":race_car:": {unicode: ["1f3ce-fe0f", "1f3ce"], fname: "1f3ce", uc: "1f3ce", isCanonical: !0},
			":racing_car:": {unicode: ["1f3ce-fe0f", "1f3ce"], fname: "1f3ce", uc: "1f3ce", isCanonical: !1},
			":military_medal:": {unicode: ["1f396-fe0f", "1f396"], fname: "1f396", uc: "1f396", isCanonical: !0},
			":reminder_ribbon:": {unicode: ["1f397-fe0f", "1f397"], fname: "1f397", uc: "1f397", isCanonical: !0},
			":hot_pepper:": {unicode: ["1f336-fe0f", "1f336"], fname: "1f336", uc: "1f336", isCanonical: !0},
			":cloud_rain:": {
				unicode: ["1f327-fe0f",
					"1f327"], fname: "1f327", uc: "1f327", isCanonical: !0
			},
			":cloud_with_rain:": {unicode: ["1f327-fe0f", "1f327"], fname: "1f327", uc: "1f327", isCanonical: !1},
			":cloud_snow:": {unicode: ["1f328-fe0f", "1f328"], fname: "1f328", uc: "1f328", isCanonical: !0},
			":cloud_with_snow:": {unicode: ["1f328-fe0f", "1f328"], fname: "1f328", uc: "1f328", isCanonical: !1},
			":cloud_lightning:": {unicode: ["1f329-fe0f", "1f329"], fname: "1f329", uc: "1f329", isCanonical: !0},
			":cloud_with_lightning:": {unicode: ["1f329-fe0f", "1f329"], fname: "1f329", uc: "1f329", isCanonical: !1},
			":cloud_tornado:": {unicode: ["1f32a-fe0f", "1f32a"], fname: "1f32a", uc: "1f32a", isCanonical: !0},
			":cloud_with_tornado:": {unicode: ["1f32a-fe0f", "1f32a"], fname: "1f32a", uc: "1f32a", isCanonical: !1},
			":fog:": {unicode: ["1f32b-fe0f", "1f32b"], fname: "1f32b", uc: "1f32b", isCanonical: !0},
			":wind_blowing_face:": {unicode: ["1f32c-fe0f", "1f32c"], fname: "1f32c", uc: "1f32c", isCanonical: !0},
			":chipmunk:": {unicode: ["1f43f-fe0f", "1f43f"], fname: "1f43f", uc: "1f43f", isCanonical: !0},
			":spider:": {
				unicode: ["1f577-fe0f", "1f577"], fname: "1f577",
				uc: "1f577", isCanonical: !0
			},
			":spider_web:": {unicode: ["1f578-fe0f", "1f578"], fname: "1f578", uc: "1f578", isCanonical: !0},
			":thermometer:": {unicode: ["1f321-fe0f", "1f321"], fname: "1f321", uc: "1f321", isCanonical: !0},
			":microphone2:": {unicode: ["1f399-fe0f", "1f399"], fname: "1f399", uc: "1f399", isCanonical: !0},
			":studio_microphone:": {unicode: ["1f399-fe0f", "1f399"], fname: "1f399", uc: "1f399", isCanonical: !1},
			":level_slider:": {unicode: ["1f39a-fe0f", "1f39a"], fname: "1f39a", uc: "1f39a", isCanonical: !0},
			":control_knobs:": {
				unicode: ["1f39b-fe0f",
					"1f39b"], fname: "1f39b", uc: "1f39b", isCanonical: !0
			},
			":flag_white:": {unicode: ["1f3f3-fe0f", "1f3f3"], fname: "1f3f3", uc: "1f3f3", isCanonical: !0},
			":waving_white_flag:": {unicode: ["1f3f3-fe0f", "1f3f3"], fname: "1f3f3", uc: "1f3f3", isCanonical: !1},
			":rosette:": {unicode: ["1f3f5-fe0f", "1f3f5"], fname: "1f3f5", uc: "1f3f5", isCanonical: !0},
			":label:": {unicode: ["1f3f7-fe0f", "1f3f7"], fname: "1f3f7", uc: "1f3f7", isCanonical: !0},
			":projector:": {unicode: ["1f4fd-fe0f", "1f4fd"], fname: "1f4fd", uc: "1f4fd", isCanonical: !0},
			":film_projector:": {
				unicode: ["1f4fd-fe0f",
					"1f4fd"], fname: "1f4fd", uc: "1f4fd", isCanonical: !1
			},
			":om_symbol:": {unicode: ["1f549-fe0f", "1f549"], fname: "1f549", uc: "1f549", isCanonical: !0},
			":dove:": {unicode: ["1f54a-fe0f", "1f54a"], fname: "1f54a", uc: "1f54a", isCanonical: !0},
			":dove_of_peace:": {unicode: ["1f54a-fe0f", "1f54a"], fname: "1f54a", uc: "1f54a", isCanonical: !1},
			":candle:": {unicode: ["1f56f-fe0f", "1f56f"], fname: "1f56f", uc: "1f56f", isCanonical: !0},
			":clock:": {unicode: ["1f570-fe0f", "1f570"], fname: "1f570", uc: "1f570", isCanonical: !0},
			":mantlepiece_clock:": {
				unicode: ["1f570-fe0f",
					"1f570"], fname: "1f570", uc: "1f570", isCanonical: !1
			},
			":hole:": {unicode: ["1f573-fe0f", "1f573"], fname: "1f573", uc: "1f573", isCanonical: !0},
			":dark_sunglasses:": {unicode: ["1f576-fe0f", "1f576"], fname: "1f576", uc: "1f576", isCanonical: !0},
			":joystick:": {unicode: ["1f579-fe0f", "1f579"], fname: "1f579", uc: "1f579", isCanonical: !0},
			":paperclips:": {unicode: ["1f587-fe0f", "1f587"], fname: "1f587", uc: "1f587", isCanonical: !0},
			":linked_paperclips:": {unicode: ["1f587-fe0f", "1f587"], fname: "1f587", uc: "1f587", isCanonical: !1},
			":pen_ballpoint:": {
				unicode: ["1f58a-fe0f",
					"1f58a"], fname: "1f58a", uc: "1f58a", isCanonical: !0
			},
			":lower_left_ballpoint_pen:": {
				unicode: ["1f58a-fe0f", "1f58a"],
				fname: "1f58a",
				uc: "1f58a",
				isCanonical: !1
			},
			":pen_fountain:": {unicode: ["1f58b-fe0f", "1f58b"], fname: "1f58b", uc: "1f58b", isCanonical: !0},
			":lower_left_fountain_pen:": {
				unicode: ["1f58b-fe0f", "1f58b"],
				fname: "1f58b",
				uc: "1f58b",
				isCanonical: !1
			},
			":paintbrush:": {unicode: ["1f58c-fe0f", "1f58c"], fname: "1f58c", uc: "1f58c", isCanonical: !0},
			":lower_left_paintbrush:": {
				unicode: ["1f58c-fe0f", "1f58c"], fname: "1f58c",
				uc: "1f58c", isCanonical: !1
			},
			":crayon:": {unicode: ["1f58d-fe0f", "1f58d"], fname: "1f58d", uc: "1f58d", isCanonical: !0},
			":lower_left_crayon:": {unicode: ["1f58d-fe0f", "1f58d"], fname: "1f58d", uc: "1f58d", isCanonical: !1},
			":desktop:": {unicode: ["1f5a5-fe0f", "1f5a5"], fname: "1f5a5", uc: "1f5a5", isCanonical: !0},
			":desktop_computer:": {unicode: ["1f5a5-fe0f", "1f5a5"], fname: "1f5a5", uc: "1f5a5", isCanonical: !1},
			":printer:": {unicode: ["1f5a8-fe0f", "1f5a8"], fname: "1f5a8", uc: "1f5a8", isCanonical: !0},
			":trackball:": {
				unicode: ["1f5b2-fe0f",
					"1f5b2"], fname: "1f5b2", uc: "1f5b2", isCanonical: !0
			},
			":frame_photo:": {unicode: ["1f5bc-fe0f", "1f5bc"], fname: "1f5bc", uc: "1f5bc", isCanonical: !0},
			":frame_with_picture:": {unicode: ["1f5bc-fe0f", "1f5bc"], fname: "1f5bc", uc: "1f5bc", isCanonical: !1},
			":dividers:": {unicode: ["1f5c2-fe0f", "1f5c2"], fname: "1f5c2", uc: "1f5c2", isCanonical: !0},
			":card_index_dividers:": {unicode: ["1f5c2-fe0f", "1f5c2"], fname: "1f5c2", uc: "1f5c2", isCanonical: !1},
			":card_box:": {unicode: ["1f5c3-fe0f", "1f5c3"], fname: "1f5c3", uc: "1f5c3", isCanonical: !0},
			":card_file_box:": {unicode: ["1f5c3-fe0f", "1f5c3"], fname: "1f5c3", uc: "1f5c3", isCanonical: !1},
			":file_cabinet:": {unicode: ["1f5c4-fe0f", "1f5c4"], fname: "1f5c4", uc: "1f5c4", isCanonical: !0},
			":wastebasket:": {unicode: ["1f5d1-fe0f", "1f5d1"], fname: "1f5d1", uc: "1f5d1", isCanonical: !0},
			":notepad_spiral:": {unicode: ["1f5d2-fe0f", "1f5d2"], fname: "1f5d2", uc: "1f5d2", isCanonical: !0},
			":spiral_note_pad:": {unicode: ["1f5d2-fe0f", "1f5d2"], fname: "1f5d2", uc: "1f5d2", isCanonical: !1},
			":calendar_spiral:": {
				unicode: ["1f5d3-fe0f", "1f5d3"],
				fname: "1f5d3", uc: "1f5d3", isCanonical: !0
			},
			":spiral_calendar_pad:": {unicode: ["1f5d3-fe0f", "1f5d3"], fname: "1f5d3", uc: "1f5d3", isCanonical: !1},
			":compression:": {unicode: ["1f5dc-fe0f", "1f5dc"], fname: "1f5dc", uc: "1f5dc", isCanonical: !0},
			":key2:": {unicode: ["1f5dd-fe0f", "1f5dd"], fname: "1f5dd", uc: "1f5dd", isCanonical: !0},
			":old_key:": {unicode: ["1f5dd-fe0f", "1f5dd"], fname: "1f5dd", uc: "1f5dd", isCanonical: !1},
			":newspaper2:": {unicode: ["1f5de-fe0f", "1f5de"], fname: "1f5de", uc: "1f5de", isCanonical: !0},
			":rolled_up_newspaper:": {
				unicode: ["1f5de-fe0f",
					"1f5de"], fname: "1f5de", uc: "1f5de", isCanonical: !1
			},
			":dagger:": {unicode: ["1f5e1-fe0f", "1f5e1"], fname: "1f5e1", uc: "1f5e1", isCanonical: !0},
			":dagger_knife:": {unicode: ["1f5e1-fe0f", "1f5e1"], fname: "1f5e1", uc: "1f5e1", isCanonical: !1},
			":speaking_head:": {unicode: ["1f5e3-fe0f", "1f5e3"], fname: "1f5e3", uc: "1f5e3", isCanonical: !0},
			":speaking_head_in_silhouette:": {
				unicode: ["1f5e3-fe0f", "1f5e3"],
				fname: "1f5e3",
				uc: "1f5e3",
				isCanonical: !1
			},
			":speech_left:": {unicode: ["1f5e8-fe0f", "1f5e8"], fname: "1f5e8", uc: "1f5e8", isCanonical: !0},
			":left_speech_bubble:": {unicode: ["1f5e8-fe0f", "1f5e8"], fname: "1f5e8", uc: "1f5e8", isCanonical: !1},
			":anger_right:": {unicode: ["1f5ef-fe0f", "1f5ef"], fname: "1f5ef", uc: "1f5ef", isCanonical: !0},
			":right_anger_bubble:": {unicode: ["1f5ef-fe0f", "1f5ef"], fname: "1f5ef", uc: "1f5ef", isCanonical: !1},
			":ballot_box:": {unicode: ["1f5f3-fe0f", "1f5f3"], fname: "1f5f3", uc: "1f5f3", isCanonical: !0},
			":ballot_box_with_ballot:": {
				unicode: ["1f5f3-fe0f", "1f5f3"],
				fname: "1f5f3",
				uc: "1f5f3",
				isCanonical: !1
			},
			":map:": {
				unicode: ["1f5fa-fe0f", "1f5fa"],
				fname: "1f5fa", uc: "1f5fa", isCanonical: !0
			},
			":world_map:": {unicode: ["1f5fa-fe0f", "1f5fa"], fname: "1f5fa", uc: "1f5fa", isCanonical: !1},
			":tools:": {unicode: ["1f6e0-fe0f", "1f6e0"], fname: "1f6e0", uc: "1f6e0", isCanonical: !0},
			":hammer_and_wrench:": {unicode: ["1f6e0-fe0f", "1f6e0"], fname: "1f6e0", uc: "1f6e0", isCanonical: !1},
			":shield:": {unicode: ["1f6e1-fe0f", "1f6e1"], fname: "1f6e1", uc: "1f6e1", isCanonical: !0},
			":oil:": {unicode: ["1f6e2-fe0f", "1f6e2"], fname: "1f6e2", uc: "1f6e2", isCanonical: !0},
			":oil_drum:": {
				unicode: ["1f6e2-fe0f",
					"1f6e2"], fname: "1f6e2", uc: "1f6e2", isCanonical: !1
			},
			":satellite_orbital:": {unicode: ["1f6f0-fe0f", "1f6f0"], fname: "1f6f0", uc: "1f6f0", isCanonical: !0},
			":fork_knife_plate:": {unicode: ["1f37d-fe0f", "1f37d"], fname: "1f37d", uc: "1f37d", isCanonical: !0},
			":fork_and_knife_with_plate:": {
				unicode: ["1f37d-fe0f", "1f37d"],
				fname: "1f37d",
				uc: "1f37d",
				isCanonical: !1
			},
			":eye:": {unicode: ["1f441-fe0f", "1f441"], fname: "1f441", uc: "1f441", isCanonical: !0},
			":levitate:": {unicode: ["1f574-fe0f", "1f574"], fname: "1f574", uc: "1f574", isCanonical: !0},
			":man_in_business_suit_levitating:": {
				unicode: ["1f574-fe0f", "1f574"],
				fname: "1f574",
				uc: "1f574",
				isCanonical: !1
			},
			":spy:": {unicode: ["1f575-fe0f", "1f575"], fname: "1f575", uc: "1f575", isCanonical: !0},
			":sleuth_or_spy:": {unicode: ["1f575-fe0f", "1f575"], fname: "1f575", uc: "1f575", isCanonical: !1},
			":hand_splayed:": {unicode: ["1f590-fe0f", "1f590"], fname: "1f590", uc: "1f590", isCanonical: !0},
			":raised_hand_with_fingers_splayed:": {
				unicode: ["1f590-fe0f", "1f590"],
				fname: "1f590",
				uc: "1f590",
				isCanonical: !1
			},
			":mountain_snow:": {
				unicode: ["1f3d4-fe0f",
					"1f3d4"], fname: "1f3d4", uc: "1f3d4", isCanonical: !0
			},
			":snow_capped_mountain:": {unicode: ["1f3d4-fe0f", "1f3d4"], fname: "1f3d4", uc: "1f3d4", isCanonical: !1},
			":camping:": {unicode: ["1f3d5-fe0f", "1f3d5"], fname: "1f3d5", uc: "1f3d5", isCanonical: !0},
			":beach:": {unicode: ["1f3d6-fe0f", "1f3d6"], fname: "1f3d6", uc: "1f3d6", isCanonical: !0},
			":beach_with_umbrella:": {unicode: ["1f3d6-fe0f", "1f3d6"], fname: "1f3d6", uc: "1f3d6", isCanonical: !1},
			":construction_site:": {unicode: ["1f3d7-fe0f", "1f3d7"], fname: "1f3d7", uc: "1f3d7", isCanonical: !0},
			":building_construction:": {unicode: ["1f3d7-fe0f", "1f3d7"], fname: "1f3d7", uc: "1f3d7", isCanonical: !1},
			":homes:": {unicode: ["1f3d8-fe0f", "1f3d8"], fname: "1f3d8", uc: "1f3d8", isCanonical: !0},
			":house_buildings:": {unicode: ["1f3d8-fe0f", "1f3d8"], fname: "1f3d8", uc: "1f3d8", isCanonical: !1},
			":cityscape:": {unicode: ["1f3d9-fe0f", "1f3d9"], fname: "1f3d9", uc: "1f3d9", isCanonical: !0},
			":house_abandoned:": {unicode: ["1f3da-fe0f", "1f3da"], fname: "1f3da", uc: "1f3da", isCanonical: !0},
			":derelict_house_building:": {
				unicode: ["1f3da-fe0f",
					"1f3da"], fname: "1f3da", uc: "1f3da", isCanonical: !1
			},
			":classical_building:": {unicode: ["1f3db-fe0f", "1f3db"], fname: "1f3db", uc: "1f3db", isCanonical: !0},
			":desert:": {unicode: ["1f3dc-fe0f", "1f3dc"], fname: "1f3dc", uc: "1f3dc", isCanonical: !0},
			":island:": {unicode: ["1f3dd-fe0f", "1f3dd"], fname: "1f3dd", uc: "1f3dd", isCanonical: !0},
			":desert_island:": {unicode: ["1f3dd-fe0f", "1f3dd"], fname: "1f3dd", uc: "1f3dd", isCanonical: !1},
			":park:": {unicode: ["1f3de-fe0f", "1f3de"], fname: "1f3de", uc: "1f3de", isCanonical: !0},
			":national_park:": {
				unicode: ["1f3de-fe0f",
					"1f3de"], fname: "1f3de", uc: "1f3de", isCanonical: !1
			},
			":stadium:": {unicode: ["1f3df-fe0f", "1f3df"], fname: "1f3df", uc: "1f3df", isCanonical: !0},
			":couch:": {unicode: ["1f6cb-fe0f", "1f6cb"], fname: "1f6cb", uc: "1f6cb", isCanonical: !0},
			":couch_and_lamp:": {unicode: ["1f6cb-fe0f", "1f6cb"], fname: "1f6cb", uc: "1f6cb", isCanonical: !1},
			":shopping_bags:": {unicode: ["1f6cd-fe0f", "1f6cd"], fname: "1f6cd", uc: "1f6cd", isCanonical: !0},
			":bellhop:": {unicode: ["1f6ce-fe0f", "1f6ce"], fname: "1f6ce", uc: "1f6ce", isCanonical: !0},
			":bellhop_bell:": {
				unicode: ["1f6ce-fe0f",
					"1f6ce"], fname: "1f6ce", uc: "1f6ce", isCanonical: !1
			},
			":bed:": {unicode: ["1f6cf-fe0f", "1f6cf"], fname: "1f6cf", uc: "1f6cf", isCanonical: !0},
			":motorway:": {unicode: ["1f6e3-fe0f", "1f6e3"], fname: "1f6e3", uc: "1f6e3", isCanonical: !0},
			":railway_track:": {unicode: ["1f6e4-fe0f", "1f6e4"], fname: "1f6e4", uc: "1f6e4", isCanonical: !0},
			":railroad_track:": {unicode: ["1f6e4-fe0f", "1f6e4"], fname: "1f6e4", uc: "1f6e4", isCanonical: !1},
			":motorboat:": {unicode: ["1f6e5-fe0f", "1f6e5"], fname: "1f6e5", uc: "1f6e5", isCanonical: !0},
			":airplane_small:": {
				unicode: ["1f6e9-fe0f",
					"1f6e9"], fname: "1f6e9", uc: "1f6e9", isCanonical: !0
			},
			":small_airplane:": {unicode: ["1f6e9-fe0f", "1f6e9"], fname: "1f6e9", uc: "1f6e9", isCanonical: !1},
			":cruise_ship:": {unicode: ["1f6f3-fe0f", "1f6f3"], fname: "1f6f3", uc: "1f6f3", isCanonical: !0},
			":passenger_ship:": {unicode: ["1f6f3-fe0f", "1f6f3"], fname: "1f6f3", uc: "1f6f3", isCanonical: !1},
			":white_sun_small_cloud:": {unicode: ["1f324-fe0f", "1f324"], fname: "1f324", uc: "1f324", isCanonical: !0},
			":white_sun_with_small_cloud:": {
				unicode: ["1f324-fe0f", "1f324"], fname: "1f324", uc: "1f324",
				isCanonical: !1
			},
			":white_sun_cloud:": {unicode: ["1f325-fe0f", "1f325"], fname: "1f325", uc: "1f325", isCanonical: !0},
			":white_sun_behind_cloud:": {
				unicode: ["1f325-fe0f", "1f325"],
				fname: "1f325",
				uc: "1f325",
				isCanonical: !1
			},
			":white_sun_rain_cloud:": {unicode: ["1f326-fe0f", "1f326"], fname: "1f326", uc: "1f326", isCanonical: !0},
			":white_sun_behind_cloud_with_rain:": {
				unicode: ["1f326-fe0f", "1f326"],
				fname: "1f326",
				uc: "1f326",
				isCanonical: !1
			},
			":mouse_three_button:": {unicode: ["1f5b1-fe0f", "1f5b1"], fname: "1f5b1", uc: "1f5b1", isCanonical: !0},
			":three_button_mouse:": {unicode: ["1f5b1-fe0f", "1f5b1"], fname: "1f5b1", uc: "1f5b1", isCanonical: !1},
			":point_up_tone1:": {unicode: ["261d-1f3fb"], fname: "261d-1f3fb", uc: "261d-1f3fb", isCanonical: !0},
			":point_up_tone2:": {unicode: ["261d-1f3fc"], fname: "261d-1f3fc", uc: "261d-1f3fc", isCanonical: !0},
			":point_up_tone3:": {unicode: ["261d-1f3fd"], fname: "261d-1f3fd", uc: "261d-1f3fd", isCanonical: !0},
			":point_up_tone4:": {unicode: ["261d-1f3fe"], fname: "261d-1f3fe", uc: "261d-1f3fe", isCanonical: !0},
			":point_up_tone5:": {
				unicode: ["261d-1f3ff"],
				fname: "261d-1f3ff", uc: "261d-1f3ff", isCanonical: !0
			},
			":v_tone1:": {unicode: ["270c-1f3fb"], fname: "270c-1f3fb", uc: "270c-1f3fb", isCanonical: !0},
			":v_tone2:": {unicode: ["270c-1f3fc"], fname: "270c-1f3fc", uc: "270c-1f3fc", isCanonical: !0},
			":v_tone3:": {unicode: ["270c-1f3fd"], fname: "270c-1f3fd", uc: "270c-1f3fd", isCanonical: !0},
			":v_tone4:": {unicode: ["270c-1f3fe"], fname: "270c-1f3fe", uc: "270c-1f3fe", isCanonical: !0},
			":v_tone5:": {unicode: ["270c-1f3ff"], fname: "270c-1f3ff", uc: "270c-1f3ff", isCanonical: !0},
			":fist_tone1:": {
				unicode: ["270a-1f3fb"],
				fname: "270a-1f3fb", uc: "270a-1f3fb", isCanonical: !0
			},
			":fist_tone2:": {unicode: ["270a-1f3fc"], fname: "270a-1f3fc", uc: "270a-1f3fc", isCanonical: !0},
			":fist_tone3:": {unicode: ["270a-1f3fd"], fname: "270a-1f3fd", uc: "270a-1f3fd", isCanonical: !0},
			":fist_tone4:": {unicode: ["270a-1f3fe"], fname: "270a-1f3fe", uc: "270a-1f3fe", isCanonical: !0},
			":fist_tone5:": {unicode: ["270a-1f3ff"], fname: "270a-1f3ff", uc: "270a-1f3ff", isCanonical: !0},
			":raised_hand_tone1:": {unicode: ["270b-1f3fb"], fname: "270b-1f3fb", uc: "270b-1f3fb", isCanonical: !0},
			":raised_hand_tone2:": {unicode: ["270b-1f3fc"], fname: "270b-1f3fc", uc: "270b-1f3fc", isCanonical: !0},
			":raised_hand_tone3:": {unicode: ["270b-1f3fd"], fname: "270b-1f3fd", uc: "270b-1f3fd", isCanonical: !0},
			":raised_hand_tone4:": {unicode: ["270b-1f3fe"], fname: "270b-1f3fe", uc: "270b-1f3fe", isCanonical: !0},
			":raised_hand_tone5:": {unicode: ["270b-1f3ff"], fname: "270b-1f3ff", uc: "270b-1f3ff", isCanonical: !0},
			":writing_hand_tone1:": {unicode: ["270d-1f3fb"], fname: "270d-1f3fb", uc: "270d-1f3fb", isCanonical: !0},
			":writing_hand_tone2:": {
				unicode: ["270d-1f3fc"],
				fname: "270d-1f3fc", uc: "270d-1f3fc", isCanonical: !0
			},
			":writing_hand_tone3:": {unicode: ["270d-1f3fd"], fname: "270d-1f3fd", uc: "270d-1f3fd", isCanonical: !0},
			":writing_hand_tone4:": {unicode: ["270d-1f3fe"], fname: "270d-1f3fe", uc: "270d-1f3fe", isCanonical: !0},
			":writing_hand_tone5:": {unicode: ["270d-1f3ff"], fname: "270d-1f3ff", uc: "270d-1f3ff", isCanonical: !0},
			":basketball_player_tone1:": {
				unicode: ["26f9-1f3fb"],
				fname: "26f9-1f3fb",
				uc: "26f9-1f3fb",
				isCanonical: !0
			},
			":person_with_ball_tone1:": {
				unicode: ["26f9-1f3fb"], fname: "26f9-1f3fb",
				uc: "26f9-1f3fb", isCanonical: !1
			},
			":basketball_player_tone2:": {
				unicode: ["26f9-1f3fc"],
				fname: "26f9-1f3fc",
				uc: "26f9-1f3fc",
				isCanonical: !0
			},
			":person_with_ball_tone2:": {
				unicode: ["26f9-1f3fc"],
				fname: "26f9-1f3fc",
				uc: "26f9-1f3fc",
				isCanonical: !1
			},
			":basketball_player_tone3:": {
				unicode: ["26f9-1f3fd"],
				fname: "26f9-1f3fd",
				uc: "26f9-1f3fd",
				isCanonical: !0
			},
			":person_with_ball_tone3:": {
				unicode: ["26f9-1f3fd"],
				fname: "26f9-1f3fd",
				uc: "26f9-1f3fd",
				isCanonical: !1
			},
			":basketball_player_tone4:": {
				unicode: ["26f9-1f3fe"], fname: "26f9-1f3fe",
				uc: "26f9-1f3fe", isCanonical: !0
			},
			":person_with_ball_tone4:": {
				unicode: ["26f9-1f3fe"],
				fname: "26f9-1f3fe",
				uc: "26f9-1f3fe",
				isCanonical: !1
			},
			":basketball_player_tone5:": {
				unicode: ["26f9-1f3ff"],
				fname: "26f9-1f3ff",
				uc: "26f9-1f3ff",
				isCanonical: !0
			},
			":person_with_ball_tone5:": {
				unicode: ["26f9-1f3ff"],
				fname: "26f9-1f3ff",
				uc: "26f9-1f3ff",
				isCanonical: !1
			},
			":copyright:": {unicode: ["00a9-fe0f", "00a9"], fname: "00a9", uc: "00a9", isCanonical: !0},
			":registered:": {unicode: ["00ae-fe0f", "00ae"], fname: "00ae", uc: "00ae", isCanonical: !0},
			":bangbang:": {unicode: ["203c-fe0f", "203c"], fname: "203c", uc: "203c", isCanonical: !0},
			":interrobang:": {unicode: ["2049-fe0f", "2049"], fname: "2049", uc: "2049", isCanonical: !0},
			":tm:": {unicode: ["2122-fe0f", "2122"], fname: "2122", uc: "2122", isCanonical: !0},
			":information_source:": {unicode: ["2139-fe0f", "2139"], fname: "2139", uc: "2139", isCanonical: !0},
			":left_right_arrow:": {unicode: ["2194-fe0f", "2194"], fname: "2194", uc: "2194", isCanonical: !0},
			":arrow_up_down:": {unicode: ["2195-fe0f", "2195"], fname: "2195", uc: "2195", isCanonical: !0},
			":arrow_upper_left:": {unicode: ["2196-fe0f", "2196"], fname: "2196", uc: "2196", isCanonical: !0},
			":arrow_upper_right:": {unicode: ["2197-fe0f", "2197"], fname: "2197", uc: "2197", isCanonical: !0},
			":arrow_lower_right:": {unicode: ["2198-fe0f", "2198"], fname: "2198", uc: "2198", isCanonical: !0},
			":arrow_lower_left:": {unicode: ["2199-fe0f", "2199"], fname: "2199", uc: "2199", isCanonical: !0},
			":leftwards_arrow_with_hook:": {unicode: ["21a9-fe0f", "21a9"], fname: "21a9", uc: "21a9", isCanonical: !0},
			":arrow_right_hook:": {
				unicode: ["21aa-fe0f",
					"21aa"], fname: "21aa", uc: "21aa", isCanonical: !0
			},
			":watch:": {unicode: ["231a-fe0f", "231a"], fname: "231a", uc: "231a", isCanonical: !0},
			":hourglass:": {unicode: ["231b-fe0f", "231b"], fname: "231b", uc: "231b", isCanonical: !0},
			":m:": {unicode: ["24c2-fe0f", "24c2"], fname: "24c2", uc: "24c2", isCanonical: !0},
			":black_small_square:": {unicode: ["25aa-fe0f", "25aa"], fname: "25aa", uc: "25aa", isCanonical: !0},
			":white_small_square:": {unicode: ["25ab-fe0f", "25ab"], fname: "25ab", uc: "25ab", isCanonical: !0},
			":arrow_forward:": {
				unicode: ["25b6-fe0f",
					"25b6"], fname: "25b6", uc: "25b6", isCanonical: !0
			},
			":arrow_backward:": {unicode: ["25c0-fe0f", "25c0"], fname: "25c0", uc: "25c0", isCanonical: !0},
			":white_medium_square:": {unicode: ["25fb-fe0f", "25fb"], fname: "25fb", uc: "25fb", isCanonical: !0},
			":black_medium_square:": {unicode: ["25fc-fe0f", "25fc"], fname: "25fc", uc: "25fc", isCanonical: !0},
			":white_medium_small_square:": {unicode: ["25fd-fe0f", "25fd"], fname: "25fd", uc: "25fd", isCanonical: !0},
			":black_medium_small_square:": {
				unicode: ["25fe-fe0f", "25fe"], fname: "25fe", uc: "25fe",
				isCanonical: !0
			},
			":sunny:": {unicode: ["2600-fe0f", "2600"], fname: "2600", uc: "2600", isCanonical: !0},
			":cloud:": {unicode: ["2601-fe0f", "2601"], fname: "2601", uc: "2601", isCanonical: !0},
			":telephone:": {unicode: ["260e-fe0f", "260e"], fname: "260e", uc: "260e", isCanonical: !0},
			":ballot_box_with_check:": {unicode: ["2611-fe0f", "2611"], fname: "2611", uc: "2611", isCanonical: !0},
			":umbrella:": {unicode: ["2614-fe0f", "2614"], fname: "2614", uc: "2614", isCanonical: !0},
			":coffee:": {unicode: ["2615-fe0f", "2615"], fname: "2615", uc: "2615", isCanonical: !0},
			":point_up:": {unicode: ["261d-fe0f", "261d"], fname: "261d", uc: "261d", isCanonical: !0},
			":relaxed:": {unicode: ["263a-fe0f", "263a"], fname: "263a", uc: "263a", isCanonical: !0},
			":aries:": {unicode: ["2648-fe0f", "2648"], fname: "2648", uc: "2648", isCanonical: !0},
			":taurus:": {unicode: ["2649-fe0f", "2649"], fname: "2649", uc: "2649", isCanonical: !0},
			":gemini:": {unicode: ["264a-fe0f", "264a"], fname: "264a", uc: "264a", isCanonical: !0},
			":cancer:": {unicode: ["264b-fe0f", "264b"], fname: "264b", uc: "264b", isCanonical: !0},
			":leo:": {
				unicode: ["264c-fe0f",
					"264c"], fname: "264c", uc: "264c", isCanonical: !0
			},
			":virgo:": {unicode: ["264d-fe0f", "264d"], fname: "264d", uc: "264d", isCanonical: !0},
			":libra:": {unicode: ["264e-fe0f", "264e"], fname: "264e", uc: "264e", isCanonical: !0},
			":scorpius:": {unicode: ["264f-fe0f", "264f"], fname: "264f", uc: "264f", isCanonical: !0},
			":sagittarius:": {unicode: ["2650-fe0f", "2650"], fname: "2650", uc: "2650", isCanonical: !0},
			":capricorn:": {unicode: ["2651-fe0f", "2651"], fname: "2651", uc: "2651", isCanonical: !0},
			":aquarius:": {
				unicode: ["2652-fe0f", "2652"], fname: "2652",
				uc: "2652", isCanonical: !0
			},
			":pisces:": {unicode: ["2653-fe0f", "2653"], fname: "2653", uc: "2653", isCanonical: !0},
			":spades:": {unicode: ["2660-fe0f", "2660"], fname: "2660", uc: "2660", isCanonical: !0},
			":clubs:": {unicode: ["2663-fe0f", "2663"], fname: "2663", uc: "2663", isCanonical: !0},
			":hearts:": {unicode: ["2665-fe0f", "2665"], fname: "2665", uc: "2665", isCanonical: !0},
			":diamonds:": {unicode: ["2666-fe0f", "2666"], fname: "2666", uc: "2666", isCanonical: !0},
			":hotsprings:": {unicode: ["2668-fe0f", "2668"], fname: "2668", uc: "2668", isCanonical: !0},
			":recycle:": {unicode: ["267b-fe0f", "267b"], fname: "267b", uc: "267b", isCanonical: !0},
			":wheelchair:": {unicode: ["267f-fe0f", "267f"], fname: "267f", uc: "267f", isCanonical: !0},
			":anchor:": {unicode: ["2693-fe0f", "2693"], fname: "2693", uc: "2693", isCanonical: !0},
			":warning:": {unicode: ["26a0-fe0f", "26a0"], fname: "26a0", uc: "26a0", isCanonical: !0},
			":zap:": {unicode: ["26a1-fe0f", "26a1"], fname: "26a1", uc: "26a1", isCanonical: !0},
			":white_circle:": {unicode: ["26aa-fe0f", "26aa"], fname: "26aa", uc: "26aa", isCanonical: !0},
			":black_circle:": {
				unicode: ["26ab-fe0f",
					"26ab"], fname: "26ab", uc: "26ab", isCanonical: !0
			},
			":soccer:": {unicode: ["26bd-fe0f", "26bd"], fname: "26bd", uc: "26bd", isCanonical: !0},
			":baseball:": {unicode: ["26be-fe0f", "26be"], fname: "26be", uc: "26be", isCanonical: !0},
			":snowman:": {unicode: ["26c4-fe0f", "26c4"], fname: "26c4", uc: "26c4", isCanonical: !0},
			":partly_sunny:": {unicode: ["26c5-fe0f", "26c5"], fname: "26c5", uc: "26c5", isCanonical: !0},
			":no_entry:": {unicode: ["26d4-fe0f", "26d4"], fname: "26d4", uc: "26d4", isCanonical: !0},
			":church:": {
				unicode: ["26ea-fe0f", "26ea"], fname: "26ea",
				uc: "26ea", isCanonical: !0
			},
			":fountain:": {unicode: ["26f2-fe0f", "26f2"], fname: "26f2", uc: "26f2", isCanonical: !0},
			":golf:": {unicode: ["26f3-fe0f", "26f3"], fname: "26f3", uc: "26f3", isCanonical: !0},
			":sailboat:": {unicode: ["26f5-fe0f", "26f5"], fname: "26f5", uc: "26f5", isCanonical: !0},
			":tent:": {unicode: ["26fa-fe0f", "26fa"], fname: "26fa", uc: "26fa", isCanonical: !0},
			":fuelpump:": {unicode: ["26fd-fe0f", "26fd"], fname: "26fd", uc: "26fd", isCanonical: !0},
			":scissors:": {unicode: ["2702-fe0f", "2702"], fname: "2702", uc: "2702", isCanonical: !0},
			":airplane:": {unicode: ["2708-fe0f", "2708"], fname: "2708", uc: "2708", isCanonical: !0},
			":envelope:": {unicode: ["2709-fe0f", "2709"], fname: "2709", uc: "2709", isCanonical: !0},
			":v:": {unicode: ["270c-fe0f", "270c"], fname: "270c", uc: "270c", isCanonical: !0},
			":pencil2:": {unicode: ["270f-fe0f", "270f"], fname: "270f", uc: "270f", isCanonical: !0},
			":black_nib:": {unicode: ["2712-fe0f", "2712"], fname: "2712", uc: "2712", isCanonical: !0},
			":heavy_check_mark:": {unicode: ["2714-fe0f", "2714"], fname: "2714", uc: "2714", isCanonical: !0},
			":heavy_multiplication_x:": {
				unicode: ["2716-fe0f",
					"2716"], fname: "2716", uc: "2716", isCanonical: !0
			},
			":eight_spoked_asterisk:": {unicode: ["2733-fe0f", "2733"], fname: "2733", uc: "2733", isCanonical: !0},
			":eight_pointed_black_star:": {unicode: ["2734-fe0f", "2734"], fname: "2734", uc: "2734", isCanonical: !0},
			":snowflake:": {unicode: ["2744-fe0f", "2744"], fname: "2744", uc: "2744", isCanonical: !0},
			":sparkle:": {unicode: ["2747-fe0f", "2747"], fname: "2747", uc: "2747", isCanonical: !0},
			":exclamation:": {unicode: ["2757-fe0f", "2757"], fname: "2757", uc: "2757", isCanonical: !0},
			":heart:": {
				unicode: ["2764-fe0f",
					"2764"], fname: "2764", uc: "2764", isCanonical: !0
			},
			":arrow_right:": {unicode: ["27a1-fe0f", "27a1"], fname: "27a1", uc: "27a1", isCanonical: !0},
			":arrow_heading_up:": {unicode: ["2934-fe0f", "2934"], fname: "2934", uc: "2934", isCanonical: !0},
			":arrow_heading_down:": {unicode: ["2935-fe0f", "2935"], fname: "2935", uc: "2935", isCanonical: !0},
			":arrow_left:": {unicode: ["2b05-fe0f", "2b05"], fname: "2b05", uc: "2b05", isCanonical: !0},
			":arrow_up:": {unicode: ["2b06-fe0f", "2b06"], fname: "2b06", uc: "2b06", isCanonical: !0},
			":arrow_down:": {
				unicode: ["2b07-fe0f",
					"2b07"], fname: "2b07", uc: "2b07", isCanonical: !0
			},
			":black_large_square:": {unicode: ["2b1b-fe0f", "2b1b"], fname: "2b1b", uc: "2b1b", isCanonical: !0},
			":white_large_square:": {unicode: ["2b1c-fe0f", "2b1c"], fname: "2b1c", uc: "2b1c", isCanonical: !0},
			":star:": {unicode: ["2b50-fe0f", "2b50"], fname: "2b50", uc: "2b50", isCanonical: !0},
			":o:": {unicode: ["2b55-fe0f", "2b55"], fname: "2b55", uc: "2b55", isCanonical: !0},
			":wavy_dash:": {unicode: ["3030-fe0f", "3030"], fname: "3030", uc: "3030", isCanonical: !0},
			":part_alternation_mark:": {
				unicode: ["303d-fe0f",
					"303d"], fname: "303d", uc: "303d", isCanonical: !0
			},
			":congratulations:": {unicode: ["3297-fe0f", "3297"], fname: "3297", uc: "3297", isCanonical: !0},
			":secret:": {unicode: ["3299-fe0f", "3299"], fname: "3299", uc: "3299", isCanonical: !0},
			":cross:": {unicode: ["271d-fe0f", "271d"], fname: "271d", uc: "271d", isCanonical: !0},
			":latin_cross:": {unicode: ["271d-fe0f", "271d"], fname: "271d", uc: "271d", isCanonical: !1},
			":keyboard:": {unicode: ["2328-fe0f", "2328"], fname: "2328", uc: "2328", isCanonical: !0},
			":writing_hand:": {
				unicode: ["270d-fe0f",
					"270d"], fname: "270d", uc: "270d", isCanonical: !0
			},
			":eject:": {unicode: ["23cf-fe0f", "23cf"], fname: "23cf", uc: "23cf", isCanonical: !0},
			":eject_symbol:": {unicode: ["23cf-fe0f", "23cf"], fname: "23cf", uc: "23cf", isCanonical: !1},
			":track_next:": {unicode: ["23ed-fe0f", "23ed"], fname: "23ed", uc: "23ed", isCanonical: !0},
			":next_track:": {unicode: ["23ed-fe0f", "23ed"], fname: "23ed", uc: "23ed", isCanonical: !1},
			":track_previous:": {unicode: ["23ee-fe0f", "23ee"], fname: "23ee", uc: "23ee", isCanonical: !0},
			":previous_track:": {
				unicode: ["23ee-fe0f",
					"23ee"], fname: "23ee", uc: "23ee", isCanonical: !1
			},
			":play_pause:": {unicode: ["23ef-fe0f", "23ef"], fname: "23ef", uc: "23ef", isCanonical: !0},
			":stopwatch:": {unicode: ["23f1-fe0f", "23f1"], fname: "23f1", uc: "23f1", isCanonical: !0},
			":timer:": {unicode: ["23f2-fe0f", "23f2"], fname: "23f2", uc: "23f2", isCanonical: !0},
			":timer_clock:": {unicode: ["23f2-fe0f", "23f2"], fname: "23f2", uc: "23f2", isCanonical: !1},
			":pause_button:": {unicode: ["23f8-fe0f", "23f8"], fname: "23f8", uc: "23f8", isCanonical: !0},
			":double_vertical_bar:": {
				unicode: ["23f8-fe0f",
					"23f8"], fname: "23f8", uc: "23f8", isCanonical: !1
			},
			":stop_button:": {unicode: ["23f9-fe0f", "23f9"], fname: "23f9", uc: "23f9", isCanonical: !0},
			":record_button:": {unicode: ["23fa-fe0f", "23fa"], fname: "23fa", uc: "23fa", isCanonical: !0},
			":umbrella2:": {unicode: ["2602-fe0f", "2602"], fname: "2602", uc: "2602", isCanonical: !0},
			":snowman2:": {unicode: ["2603-fe0f", "2603"], fname: "2603", uc: "2603", isCanonical: !0},
			":comet:": {unicode: ["2604-fe0f", "2604"], fname: "2604", uc: "2604", isCanonical: !0},
			":shamrock:": {
				unicode: ["2618-fe0f", "2618"],
				fname: "2618", uc: "2618", isCanonical: !0
			},
			":skull_crossbones:": {unicode: ["2620-fe0f", "2620"], fname: "2620", uc: "2620", isCanonical: !0},
			":skull_and_crossbones:": {unicode: ["2620-fe0f", "2620"], fname: "2620", uc: "2620", isCanonical: !1},
			":radioactive:": {unicode: ["2622-fe0f", "2622"], fname: "2622", uc: "2622", isCanonical: !0},
			":radioactive_sign:": {unicode: ["2622-fe0f", "2622"], fname: "2622", uc: "2622", isCanonical: !1},
			":biohazard:": {unicode: ["2623-fe0f", "2623"], fname: "2623", uc: "2623", isCanonical: !0},
			":biohazard_sign:": {
				unicode: ["2623-fe0f",
					"2623"], fname: "2623", uc: "2623", isCanonical: !1
			},
			":orthodox_cross:": {unicode: ["2626-fe0f", "2626"], fname: "2626", uc: "2626", isCanonical: !0},
			":star_and_crescent:": {unicode: ["262a-fe0f", "262a"], fname: "262a", uc: "262a", isCanonical: !0},
			":peace:": {unicode: ["262e-fe0f", "262e"], fname: "262e", uc: "262e", isCanonical: !0},
			":peace_symbol:": {unicode: ["262e-fe0f", "262e"], fname: "262e", uc: "262e", isCanonical: !1},
			":yin_yang:": {unicode: ["262f-fe0f", "262f"], fname: "262f", uc: "262f", isCanonical: !0},
			":wheel_of_dharma:": {
				unicode: ["2638-fe0f",
					"2638"], fname: "2638", uc: "2638", isCanonical: !0
			},
			":frowning2:": {unicode: ["2639-fe0f", "2639"], fname: "2639", uc: "2639", isCanonical: !0},
			":white_frowning_face:": {unicode: ["2639-fe0f", "2639"], fname: "2639", uc: "2639", isCanonical: !1},
			":hammer_pick:": {unicode: ["2692-fe0f", "2692"], fname: "2692", uc: "2692", isCanonical: !0},
			":hammer_and_pick:": {unicode: ["2692-fe0f", "2692"], fname: "2692", uc: "2692", isCanonical: !1},
			":crossed_swords:": {unicode: ["2694-fe0f", "2694"], fname: "2694", uc: "2694", isCanonical: !0},
			":scales:": {
				unicode: ["2696-fe0f",
					"2696"], fname: "2696", uc: "2696", isCanonical: !0
			},
			":alembic:": {unicode: ["2697-fe0f", "2697"], fname: "2697", uc: "2697", isCanonical: !0},
			":gear:": {unicode: ["2699-fe0f", "2699"], fname: "2699", uc: "2699", isCanonical: !0},
			":atom:": {unicode: ["269b-fe0f", "269b"], fname: "269b", uc: "269b", isCanonical: !0},
			":atom_symbol:": {unicode: ["269b-fe0f", "269b"], fname: "269b", uc: "269b", isCanonical: !1},
			":fleur-de-lis:": {unicode: ["269c-fe0f", "269c"], fname: "269c", uc: "269c", isCanonical: !0},
			":coffin:": {
				unicode: ["26b0-fe0f", "26b0"], fname: "26b0",
				uc: "26b0", isCanonical: !0
			},
			":urn:": {unicode: ["26b1-fe0f", "26b1"], fname: "26b1", uc: "26b1", isCanonical: !0},
			":funeral_urn:": {unicode: ["26b1-fe0f", "26b1"], fname: "26b1", uc: "26b1", isCanonical: !1},
			":thunder_cloud_rain:": {unicode: ["26c8-fe0f", "26c8"], fname: "26c8", uc: "26c8", isCanonical: !0},
			":thunder_cloud_and_rain:": {unicode: ["26c8-fe0f", "26c8"], fname: "26c8", uc: "26c8", isCanonical: !1},
			":pick:": {unicode: ["26cf-fe0f", "26cf"], fname: "26cf", uc: "26cf", isCanonical: !0},
			":helmet_with_cross:": {
				unicode: ["26d1-fe0f", "26d1"],
				fname: "26d1", uc: "26d1", isCanonical: !0
			},
			":helmet_with_white_cross:": {unicode: ["26d1-fe0f", "26d1"], fname: "26d1", uc: "26d1", isCanonical: !1},
			":chains:": {unicode: ["26d3-fe0f", "26d3"], fname: "26d3", uc: "26d3", isCanonical: !0},
			":shinto_shrine:": {unicode: ["26e9-fe0f", "26e9"], fname: "26e9", uc: "26e9", isCanonical: !0},
			":mountain:": {unicode: ["26f0-fe0f", "26f0"], fname: "26f0", uc: "26f0", isCanonical: !0},
			":beach_umbrella:": {unicode: ["26f1-fe0f", "26f1"], fname: "26f1", uc: "26f1", isCanonical: !0},
			":umbrella_on_ground:": {
				unicode: ["26f1-fe0f",
					"26f1"], fname: "26f1", uc: "26f1", isCanonical: !1
			},
			":ferry:": {unicode: ["26f4-fe0f", "26f4"], fname: "26f4", uc: "26f4", isCanonical: !0},
			":skier:": {unicode: ["26f7-fe0f", "26f7"], fname: "26f7", uc: "26f7", isCanonical: !0},
			":ice_skate:": {unicode: ["26f8-fe0f", "26f8"], fname: "26f8", uc: "26f8", isCanonical: !0},
			":basketball_player:": {unicode: ["26f9-fe0f", "26f9"], fname: "26f9", uc: "26f9", isCanonical: !0},
			":person_with_ball:": {unicode: ["26f9-fe0f", "26f9"], fname: "26f9", uc: "26f9", isCanonical: !1},
			":star_of_david:": {
				unicode: ["2721-fe0f",
					"2721"], fname: "2721", uc: "2721", isCanonical: !0
			},
			":heart_exclamation:": {unicode: ["2763-fe0f", "2763"], fname: "2763", uc: "2763", isCanonical: !0},
			":heavy_heart_exclamation_mark_ornament:": {
				unicode: ["2763-fe0f", "2763"],
				fname: "2763",
				uc: "2763",
				isCanonical: !1
			},
			":third_place:": {unicode: ["1f949"], fname: "1f949", uc: "1f949", isCanonical: !0},
			":third_place_medal:": {unicode: ["1f949"], fname: "1f949", uc: "1f949", isCanonical: !1},
			":second_place:": {unicode: ["1f948"], fname: "1f948", uc: "1f948", isCanonical: !0},
			":second_place_medal:": {
				unicode: ["1f948"],
				fname: "1f948", uc: "1f948", isCanonical: !1
			},
			":first_place:": {unicode: ["1f947"], fname: "1f947", uc: "1f947", isCanonical: !0},
			":first_place_medal:": {unicode: ["1f947"], fname: "1f947", uc: "1f947", isCanonical: !1},
			":fencer:": {unicode: ["1f93a"], fname: "1f93a", uc: "1f93a", isCanonical: !0},
			":fencing:": {unicode: ["1f93a"], fname: "1f93a", uc: "1f93a", isCanonical: !1},
			":goal:": {unicode: ["1f945"], fname: "1f945", uc: "1f945", isCanonical: !0},
			":goal_net:": {unicode: ["1f945"], fname: "1f945", uc: "1f945", isCanonical: !1},
			":handball:": {
				unicode: ["1f93e"],
				fname: "1f93e", uc: "1f93e", isCanonical: !0
			},
			":regional_indicator_z:": {unicode: ["1f1ff"], fname: "1f1ff", uc: "1f1ff", isCanonical: !0},
			":water_polo:": {unicode: ["1f93d"], fname: "1f93d", uc: "1f93d", isCanonical: !0},
			":martial_arts_uniform:": {unicode: ["1f94b"], fname: "1f94b", uc: "1f94b", isCanonical: !0},
			":karate_uniform:": {unicode: ["1f94b"], fname: "1f94b", uc: "1f94b", isCanonical: !1},
			":boxing_glove:": {unicode: ["1f94a"], fname: "1f94a", uc: "1f94a", isCanonical: !0},
			":boxing_gloves:": {
				unicode: ["1f94a"], fname: "1f94a", uc: "1f94a",
				isCanonical: !1
			},
			":wrestlers:": {unicode: ["1f93c"], fname: "1f93c", uc: "1f93c", isCanonical: !0},
			":wrestling:": {unicode: ["1f93c"], fname: "1f93c", uc: "1f93c", isCanonical: !1},
			":juggling:": {unicode: ["1f939"], fname: "1f939", uc: "1f939", isCanonical: !0},
			":juggler:": {unicode: ["1f939"], fname: "1f939", uc: "1f939", isCanonical: !1},
			":cartwheel:": {unicode: ["1f938"], fname: "1f938", uc: "1f938", isCanonical: !0},
			":person_doing_cartwheel:": {unicode: ["1f938"], fname: "1f938", uc: "1f938", isCanonical: !1},
			":canoe:": {
				unicode: ["1f6f6"], fname: "1f6f6",
				uc: "1f6f6", isCanonical: !0
			},
			":kayak:": {unicode: ["1f6f6"], fname: "1f6f6", uc: "1f6f6", isCanonical: !1},
			":motor_scooter:": {unicode: ["1f6f5"], fname: "1f6f5", uc: "1f6f5", isCanonical: !0},
			":motorbike:": {unicode: ["1f6f5"], fname: "1f6f5", uc: "1f6f5", isCanonical: !1},
			":scooter:": {unicode: ["1f6f4"], fname: "1f6f4", uc: "1f6f4", isCanonical: !0},
			":shopping_cart:": {unicode: ["1f6d2"], fname: "1f6d2", uc: "1f6d2", isCanonical: !0},
			":shopping_trolley:": {unicode: ["1f6d2"], fname: "1f6d2", uc: "1f6d2", isCanonical: !1},
			":black_joker:": {
				unicode: ["1f0cf"],
				fname: "1f0cf", uc: "1f0cf", isCanonical: !0
			},
			":a:": {unicode: ["1f170"], fname: "1f170", uc: "1f170", isCanonical: !0},
			":b:": {unicode: ["1f171"], fname: "1f171", uc: "1f171", isCanonical: !0},
			":o2:": {unicode: ["1f17e"], fname: "1f17e", uc: "1f17e", isCanonical: !0},
			":octagonal_sign:": {unicode: ["1f6d1"], fname: "1f6d1", uc: "1f6d1", isCanonical: !0},
			":stop_sign:": {unicode: ["1f6d1"], fname: "1f6d1", uc: "1f6d1", isCanonical: !1},
			":ab:": {unicode: ["1f18e"], fname: "1f18e", uc: "1f18e", isCanonical: !0},
			":cl:": {
				unicode: ["1f191"], fname: "1f191", uc: "1f191",
				isCanonical: !0
			},
			":regional_indicator_y:": {unicode: ["1f1fe"], fname: "1f1fe", uc: "1f1fe", isCanonical: !0},
			":cool:": {unicode: ["1f192"], fname: "1f192", uc: "1f192", isCanonical: !0},
			":free:": {unicode: ["1f193"], fname: "1f193", uc: "1f193", isCanonical: !0},
			":id:": {unicode: ["1f194"], fname: "1f194", uc: "1f194", isCanonical: !0},
			":new:": {unicode: ["1f195"], fname: "1f195", uc: "1f195", isCanonical: !0},
			":ng:": {unicode: ["1f196"], fname: "1f196", uc: "1f196", isCanonical: !0},
			":ok:": {unicode: ["1f197"], fname: "1f197", uc: "1f197", isCanonical: !0},
			":sos:": {unicode: ["1f198"], fname: "1f198", uc: "1f198", isCanonical: !0},
			":spoon:": {unicode: ["1f944"], fname: "1f944", uc: "1f944", isCanonical: !0},
			":up:": {unicode: ["1f199"], fname: "1f199", uc: "1f199", isCanonical: !0},
			":vs:": {unicode: ["1f19a"], fname: "1f19a", uc: "1f19a", isCanonical: !0},
			":champagne_glass:": {unicode: ["1f942"], fname: "1f942", uc: "1f942", isCanonical: !0},
			":clinking_glass:": {unicode: ["1f942"], fname: "1f942", uc: "1f942", isCanonical: !1},
			":tumbler_glass:": {unicode: ["1f943"], fname: "1f943", uc: "1f943", isCanonical: !0},
			":whisky:": {unicode: ["1f943"], fname: "1f943", uc: "1f943", isCanonical: !1},
			":koko:": {unicode: ["1f201"], fname: "1f201", uc: "1f201", isCanonical: !0},
			":stuffed_flatbread:": {unicode: ["1f959"], fname: "1f959", uc: "1f959", isCanonical: !0},
			":stuffed_pita:": {unicode: ["1f959"], fname: "1f959", uc: "1f959", isCanonical: !1},
			":u7981:": {unicode: ["1f232"], fname: "1f232", uc: "1f232", isCanonical: !0},
			":u7a7a:": {unicode: ["1f233"], fname: "1f233", uc: "1f233", isCanonical: !0},
			":u5408:": {unicode: ["1f234"], fname: "1f234", uc: "1f234", isCanonical: !0},
			":u6e80:": {unicode: ["1f235"], fname: "1f235", uc: "1f235", isCanonical: !0},
			":u6709:": {unicode: ["1f236"], fname: "1f236", uc: "1f236", isCanonical: !0},
			":shallow_pan_of_food:": {unicode: ["1f958"], fname: "1f958", uc: "1f958", isCanonical: !0},
			":paella:": {unicode: ["1f958"], fname: "1f958", uc: "1f958", isCanonical: !1},
			":u7533:": {unicode: ["1f238"], fname: "1f238", uc: "1f238", isCanonical: !0},
			":u5272:": {unicode: ["1f239"], fname: "1f239", uc: "1f239", isCanonical: !0},
			":salad:": {unicode: ["1f957"], fname: "1f957", uc: "1f957", isCanonical: !0},
			":green_salad:": {unicode: ["1f957"], fname: "1f957", uc: "1f957", isCanonical: !1},
			":u55b6:": {unicode: ["1f23a"], fname: "1f23a", uc: "1f23a", isCanonical: !0},
			":ideograph_advantage:": {unicode: ["1f250"], fname: "1f250", uc: "1f250", isCanonical: !0},
			":accept:": {unicode: ["1f251"], fname: "1f251", uc: "1f251", isCanonical: !0},
			":cyclone:": {unicode: ["1f300"], fname: "1f300", uc: "1f300", isCanonical: !0},
			":french_bread:": {unicode: ["1f956"], fname: "1f956", uc: "1f956", isCanonical: !0},
			":baguette_bread:": {
				unicode: ["1f956"], fname: "1f956",
				uc: "1f956", isCanonical: !1
			},
			":foggy:": {unicode: ["1f301"], fname: "1f301", uc: "1f301", isCanonical: !0},
			":closed_umbrella:": {unicode: ["1f302"], fname: "1f302", uc: "1f302", isCanonical: !0},
			":night_with_stars:": {unicode: ["1f303"], fname: "1f303", uc: "1f303", isCanonical: !0},
			":sunrise_over_mountains:": {unicode: ["1f304"], fname: "1f304", uc: "1f304", isCanonical: !0},
			":sunrise:": {unicode: ["1f305"], fname: "1f305", uc: "1f305", isCanonical: !0},
			":city_dusk:": {unicode: ["1f306"], fname: "1f306", uc: "1f306", isCanonical: !0},
			":carrot:": {
				unicode: ["1f955"],
				fname: "1f955", uc: "1f955", isCanonical: !0
			},
			":city_sunset:": {unicode: ["1f307"], fname: "1f307", uc: "1f307", isCanonical: !0},
			":city_sunrise:": {unicode: ["1f307"], fname: "1f307", uc: "1f307", isCanonical: !1},
			":rainbow:": {unicode: ["1f308"], fname: "1f308", uc: "1f308", isCanonical: !0},
			":potato:": {unicode: ["1f954"], fname: "1f954", uc: "1f954", isCanonical: !0},
			":bridge_at_night:": {unicode: ["1f309"], fname: "1f309", uc: "1f309", isCanonical: !0},
			":ocean:": {unicode: ["1f30a"], fname: "1f30a", uc: "1f30a", isCanonical: !0},
			":volcano:": {
				unicode: ["1f30b"],
				fname: "1f30b", uc: "1f30b", isCanonical: !0
			},
			":milky_way:": {unicode: ["1f30c"], fname: "1f30c", uc: "1f30c", isCanonical: !0},
			":earth_asia:": {unicode: ["1f30f"], fname: "1f30f", uc: "1f30f", isCanonical: !0},
			":new_moon:": {unicode: ["1f311"], fname: "1f311", uc: "1f311", isCanonical: !0},
			":bacon:": {unicode: ["1f953"], fname: "1f953", uc: "1f953", isCanonical: !0},
			":first_quarter_moon:": {unicode: ["1f313"], fname: "1f313", uc: "1f313", isCanonical: !0},
			":waxing_gibbous_moon:": {unicode: ["1f314"], fname: "1f314", uc: "1f314", isCanonical: !0},
			":full_moon:": {
				unicode: ["1f315"],
				fname: "1f315", uc: "1f315", isCanonical: !0
			},
			":crescent_moon:": {unicode: ["1f319"], fname: "1f319", uc: "1f319", isCanonical: !0},
			":first_quarter_moon_with_face:": {unicode: ["1f31b"], fname: "1f31b", uc: "1f31b", isCanonical: !0},
			":star2:": {unicode: ["1f31f"], fname: "1f31f", uc: "1f31f", isCanonical: !0},
			":cucumber:": {unicode: ["1f952"], fname: "1f952", uc: "1f952", isCanonical: !0},
			":stars:": {unicode: ["1f320"], fname: "1f320", uc: "1f320", isCanonical: !0},
			":chestnut:": {unicode: ["1f330"], fname: "1f330", uc: "1f330", isCanonical: !0},
			":avocado:": {
				unicode: ["1f951"],
				fname: "1f951", uc: "1f951", isCanonical: !0
			},
			":seedling:": {unicode: ["1f331"], fname: "1f331", uc: "1f331", isCanonical: !0},
			":palm_tree:": {unicode: ["1f334"], fname: "1f334", uc: "1f334", isCanonical: !0},
			":cactus:": {unicode: ["1f335"], fname: "1f335", uc: "1f335", isCanonical: !0},
			":tulip:": {unicode: ["1f337"], fname: "1f337", uc: "1f337", isCanonical: !0},
			":cherry_blossom:": {unicode: ["1f338"], fname: "1f338", uc: "1f338", isCanonical: !0},
			":rose:": {unicode: ["1f339"], fname: "1f339", uc: "1f339", isCanonical: !0},
			":hibiscus:": {
				unicode: ["1f33a"],
				fname: "1f33a", uc: "1f33a", isCanonical: !0
			},
			":sunflower:": {unicode: ["1f33b"], fname: "1f33b", uc: "1f33b", isCanonical: !0},
			":blossom:": {unicode: ["1f33c"], fname: "1f33c", uc: "1f33c", isCanonical: !0},
			":corn:": {unicode: ["1f33d"], fname: "1f33d", uc: "1f33d", isCanonical: !0},
			":croissant:": {unicode: ["1f950"], fname: "1f950", uc: "1f950", isCanonical: !0},
			":ear_of_rice:": {unicode: ["1f33e"], fname: "1f33e", uc: "1f33e", isCanonical: !0},
			":herb:": {unicode: ["1f33f"], fname: "1f33f", uc: "1f33f", isCanonical: !0},
			":four_leaf_clover:": {
				unicode: ["1f340"],
				fname: "1f340", uc: "1f340", isCanonical: !0
			},
			":maple_leaf:": {unicode: ["1f341"], fname: "1f341", uc: "1f341", isCanonical: !0},
			":fallen_leaf:": {unicode: ["1f342"], fname: "1f342", uc: "1f342", isCanonical: !0},
			":leaves:": {unicode: ["1f343"], fname: "1f343", uc: "1f343", isCanonical: !0},
			":mushroom:": {unicode: ["1f344"], fname: "1f344", uc: "1f344", isCanonical: !0},
			":tomato:": {unicode: ["1f345"], fname: "1f345", uc: "1f345", isCanonical: !0},
			":eggplant:": {unicode: ["1f346"], fname: "1f346", uc: "1f346", isCanonical: !0},
			":grapes:": {
				unicode: ["1f347"],
				fname: "1f347", uc: "1f347", isCanonical: !0
			},
			":melon:": {unicode: ["1f348"], fname: "1f348", uc: "1f348", isCanonical: !0},
			":watermelon:": {unicode: ["1f349"], fname: "1f349", uc: "1f349", isCanonical: !0},
			":tangerine:": {unicode: ["1f34a"], fname: "1f34a", uc: "1f34a", isCanonical: !0},
			":wilted_rose:": {unicode: ["1f940"], fname: "1f940", uc: "1f940", isCanonical: !0},
			":wilted_flower:": {unicode: ["1f940"], fname: "1f940", uc: "1f940", isCanonical: !1},
			":banana:": {unicode: ["1f34c"], fname: "1f34c", uc: "1f34c", isCanonical: !0},
			":pineapple:": {
				unicode: ["1f34d"],
				fname: "1f34d", uc: "1f34d", isCanonical: !0
			},
			":apple:": {unicode: ["1f34e"], fname: "1f34e", uc: "1f34e", isCanonical: !0},
			":green_apple:": {unicode: ["1f34f"], fname: "1f34f", uc: "1f34f", isCanonical: !0},
			":peach:": {unicode: ["1f351"], fname: "1f351", uc: "1f351", isCanonical: !0},
			":cherries:": {unicode: ["1f352"], fname: "1f352", uc: "1f352", isCanonical: !0},
			":strawberry:": {unicode: ["1f353"], fname: "1f353", uc: "1f353", isCanonical: !0},
			":rhino:": {unicode: ["1f98f"], fname: "1f98f", uc: "1f98f", isCanonical: !0},
			":rhinoceros:": {
				unicode: ["1f98f"],
				fname: "1f98f", uc: "1f98f", isCanonical: !1
			},
			":hamburger:": {unicode: ["1f354"], fname: "1f354", uc: "1f354", isCanonical: !0},
			":pizza:": {unicode: ["1f355"], fname: "1f355", uc: "1f355", isCanonical: !0},
			":meat_on_bone:": {unicode: ["1f356"], fname: "1f356", uc: "1f356", isCanonical: !0},
			":lizard:": {unicode: ["1f98e"], fname: "1f98e", uc: "1f98e", isCanonical: !0},
			":poultry_leg:": {unicode: ["1f357"], fname: "1f357", uc: "1f357", isCanonical: !0},
			":rice_cracker:": {unicode: ["1f358"], fname: "1f358", uc: "1f358", isCanonical: !0},
			":rice_ball:": {
				unicode: ["1f359"],
				fname: "1f359", uc: "1f359", isCanonical: !0
			},
			":gorilla:": {unicode: ["1f98d"], fname: "1f98d", uc: "1f98d", isCanonical: !0},
			":rice:": {unicode: ["1f35a"], fname: "1f35a", uc: "1f35a", isCanonical: !0},
			":curry:": {unicode: ["1f35b"], fname: "1f35b", uc: "1f35b", isCanonical: !0},
			":deer:": {unicode: ["1f98c"], fname: "1f98c", uc: "1f98c", isCanonical: !0},
			":ramen:": {unicode: ["1f35c"], fname: "1f35c", uc: "1f35c", isCanonical: !0},
			":spaghetti:": {unicode: ["1f35d"], fname: "1f35d", uc: "1f35d", isCanonical: !0},
			":bread:": {
				unicode: ["1f35e"], fname: "1f35e",
				uc: "1f35e", isCanonical: !0
			},
			":fries:": {unicode: ["1f35f"], fname: "1f35f", uc: "1f35f", isCanonical: !0},
			":butterfly:": {unicode: ["1f98b"], fname: "1f98b", uc: "1f98b", isCanonical: !0},
			":sweet_potato:": {unicode: ["1f360"], fname: "1f360", uc: "1f360", isCanonical: !0},
			":dango:": {unicode: ["1f361"], fname: "1f361", uc: "1f361", isCanonical: !0},
			":fox:": {unicode: ["1f98a"], fname: "1f98a", uc: "1f98a", isCanonical: !0},
			":fox_face:": {unicode: ["1f98a"], fname: "1f98a", uc: "1f98a", isCanonical: !1},
			":oden:": {
				unicode: ["1f362"], fname: "1f362",
				uc: "1f362", isCanonical: !0
			},
			":sushi:": {unicode: ["1f363"], fname: "1f363", uc: "1f363", isCanonical: !0},
			":owl:": {unicode: ["1f989"], fname: "1f989", uc: "1f989", isCanonical: !0},
			":fried_shrimp:": {unicode: ["1f364"], fname: "1f364", uc: "1f364", isCanonical: !0},
			":fish_cake:": {unicode: ["1f365"], fname: "1f365", uc: "1f365", isCanonical: !0},
			":shark:": {unicode: ["1f988"], fname: "1f988", uc: "1f988", isCanonical: !0},
			":icecream:": {unicode: ["1f366"], fname: "1f366", uc: "1f366", isCanonical: !0},
			":bat:": {
				unicode: ["1f987"], fname: "1f987", uc: "1f987",
				isCanonical: !0
			},
			":shaved_ice:": {unicode: ["1f367"], fname: "1f367", uc: "1f367", isCanonical: !0},
			":regional_indicator_x:": {unicode: ["1f1fd"], fname: "1f1fd", uc: "1f1fd", isCanonical: !0},
			":ice_cream:": {unicode: ["1f368"], fname: "1f368", uc: "1f368", isCanonical: !0},
			":duck:": {unicode: ["1f986"], fname: "1f986", uc: "1f986", isCanonical: !0},
			":doughnut:": {unicode: ["1f369"], fname: "1f369", uc: "1f369", isCanonical: !0},
			":eagle:": {unicode: ["1f985"], fname: "1f985", uc: "1f985", isCanonical: !0},
			":cookie:": {
				unicode: ["1f36a"], fname: "1f36a",
				uc: "1f36a", isCanonical: !0
			},
			":black_heart:": {unicode: ["1f5a4"], fname: "1f5a4", uc: "1f5a4", isCanonical: !0},
			":chocolate_bar:": {unicode: ["1f36b"], fname: "1f36b", uc: "1f36b", isCanonical: !0},
			":candy:": {unicode: ["1f36c"], fname: "1f36c", uc: "1f36c", isCanonical: !0},
			":lollipop:": {unicode: ["1f36d"], fname: "1f36d", uc: "1f36d", isCanonical: !0},
			":custard:": {unicode: ["1f36e"], fname: "1f36e", uc: "1f36e", isCanonical: !0},
			":pudding:": {unicode: ["1f36e"], fname: "1f36e", uc: "1f36e", isCanonical: !1},
			":flan:": {
				unicode: ["1f36e"], fname: "1f36e",
				uc: "1f36e", isCanonical: !1
			},
			":honey_pot:": {unicode: ["1f36f"], fname: "1f36f", uc: "1f36f", isCanonical: !0},
			":fingers_crossed:": {unicode: ["1f91e"], fname: "1f91e", uc: "1f91e", isCanonical: !0},
			":hand_with_index_and_middle_finger_crossed:": {
				unicode: ["1f91e"],
				fname: "1f91e",
				uc: "1f91e",
				isCanonical: !1
			},
			":cake:": {unicode: ["1f370"], fname: "1f370", uc: "1f370", isCanonical: !0},
			":bento:": {unicode: ["1f371"], fname: "1f371", uc: "1f371", isCanonical: !0},
			":stew:": {unicode: ["1f372"], fname: "1f372", uc: "1f372", isCanonical: !0},
			":handshake:": {
				unicode: ["1f91d"],
				fname: "1f91d", uc: "1f91d", isCanonical: !0
			},
			":shaking_hands:": {unicode: ["1f91d"], fname: "1f91d", uc: "1f91d", isCanonical: !1},
			":cooking:": {unicode: ["1f373"], fname: "1f373", uc: "1f373", isCanonical: !0},
			":fork_and_knife:": {unicode: ["1f374"], fname: "1f374", uc: "1f374", isCanonical: !0},
			":tea:": {unicode: ["1f375"], fname: "1f375", uc: "1f375", isCanonical: !0},
			":sake:": {unicode: ["1f376"], fname: "1f376", uc: "1f376", isCanonical: !0},
			":wine_glass:": {unicode: ["1f377"], fname: "1f377", uc: "1f377", isCanonical: !0},
			":cocktail:": {
				unicode: ["1f378"],
				fname: "1f378", uc: "1f378", isCanonical: !0
			},
			":tropical_drink:": {unicode: ["1f379"], fname: "1f379", uc: "1f379", isCanonical: !0},
			":beer:": {unicode: ["1f37a"], fname: "1f37a", uc: "1f37a", isCanonical: !0},
			":beers:": {unicode: ["1f37b"], fname: "1f37b", uc: "1f37b", isCanonical: !0},
			":ribbon:": {unicode: ["1f380"], fname: "1f380", uc: "1f380", isCanonical: !0},
			":gift:": {unicode: ["1f381"], fname: "1f381", uc: "1f381", isCanonical: !0},
			":birthday:": {unicode: ["1f382"], fname: "1f382", uc: "1f382", isCanonical: !0},
			":jack_o_lantern:": {
				unicode: ["1f383"],
				fname: "1f383", uc: "1f383", isCanonical: !0
			},
			":left_facing_fist:": {unicode: ["1f91b"], fname: "1f91b", uc: "1f91b", isCanonical: !0},
			":left_fist:": {unicode: ["1f91b"], fname: "1f91b", uc: "1f91b", isCanonical: !1},
			":right_facing_fist:": {unicode: ["1f91c"], fname: "1f91c", uc: "1f91c", isCanonical: !0},
			":right_fist:": {unicode: ["1f91c"], fname: "1f91c", uc: "1f91c", isCanonical: !1},
			":christmas_tree:": {unicode: ["1f384"], fname: "1f384", uc: "1f384", isCanonical: !0},
			":santa:": {unicode: ["1f385"], fname: "1f385", uc: "1f385", isCanonical: !0},
			":fireworks:": {unicode: ["1f386"], fname: "1f386", uc: "1f386", isCanonical: !0},
			":raised_back_of_hand:": {unicode: ["1f91a"], fname: "1f91a", uc: "1f91a", isCanonical: !0},
			":back_of_hand:": {unicode: ["1f91a"], fname: "1f91a", uc: "1f91a", isCanonical: !1},
			":sparkler:": {unicode: ["1f387"], fname: "1f387", uc: "1f387", isCanonical: !0},
			":balloon:": {unicode: ["1f388"], fname: "1f388", uc: "1f388", isCanonical: !0},
			":tada:": {unicode: ["1f389"], fname: "1f389", uc: "1f389", isCanonical: !0},
			":confetti_ball:": {
				unicode: ["1f38a"], fname: "1f38a", uc: "1f38a",
				isCanonical: !0
			},
			":tanabata_tree:": {unicode: ["1f38b"], fname: "1f38b", uc: "1f38b", isCanonical: !0},
			":crossed_flags:": {unicode: ["1f38c"], fname: "1f38c", uc: "1f38c", isCanonical: !0},
			":call_me:": {unicode: ["1f919"], fname: "1f919", uc: "1f919", isCanonical: !0},
			":call_me_hand:": {unicode: ["1f919"], fname: "1f919", uc: "1f919", isCanonical: !1},
			":bamboo:": {unicode: ["1f38d"], fname: "1f38d", uc: "1f38d", isCanonical: !0},
			":man_dancing:": {unicode: ["1f57a"], fname: "1f57a", uc: "1f57a", isCanonical: !0},
			":male_dancer:": {
				unicode: ["1f57a"],
				fname: "1f57a", uc: "1f57a", isCanonical: !1
			},
			":dolls:": {unicode: ["1f38e"], fname: "1f38e", uc: "1f38e", isCanonical: !0},
			":selfie:": {unicode: ["1f933"], fname: "1f933", uc: "1f933", isCanonical: !0},
			":flags:": {unicode: ["1f38f"], fname: "1f38f", uc: "1f38f", isCanonical: !0},
			":pregnant_woman:": {unicode: ["1f930"], fname: "1f930", uc: "1f930", isCanonical: !0},
			":expecting_woman:": {unicode: ["1f930"], fname: "1f930", uc: "1f930", isCanonical: !1},
			":wind_chime:": {unicode: ["1f390"], fname: "1f390", uc: "1f390", isCanonical: !0},
			":face_palm:": {
				unicode: ["1f926"],
				fname: "1f926", uc: "1f926", isCanonical: !0
			},
			":facepalm:": {unicode: ["1f926"], fname: "1f926", uc: "1f926", isCanonical: !1},
			":shrug:": {unicode: ["1f937"], fname: "1f937", uc: "1f937", isCanonical: !0},
			":rice_scene:": {unicode: ["1f391"], fname: "1f391", uc: "1f391", isCanonical: !0},
			":school_satchel:": {unicode: ["1f392"], fname: "1f392", uc: "1f392", isCanonical: !0},
			":mortar_board:": {unicode: ["1f393"], fname: "1f393", uc: "1f393", isCanonical: !0},
			":carousel_horse:": {unicode: ["1f3a0"], fname: "1f3a0", uc: "1f3a0", isCanonical: !0},
			":ferris_wheel:": {
				unicode: ["1f3a1"],
				fname: "1f3a1", uc: "1f3a1", isCanonical: !0
			},
			":roller_coaster:": {unicode: ["1f3a2"], fname: "1f3a2", uc: "1f3a2", isCanonical: !0},
			":fishing_pole_and_fish:": {unicode: ["1f3a3"], fname: "1f3a3", uc: "1f3a3", isCanonical: !0},
			":microphone:": {unicode: ["1f3a4"], fname: "1f3a4", uc: "1f3a4", isCanonical: !0},
			":movie_camera:": {unicode: ["1f3a5"], fname: "1f3a5", uc: "1f3a5", isCanonical: !0},
			":cinema:": {unicode: ["1f3a6"], fname: "1f3a6", uc: "1f3a6", isCanonical: !0},
			":headphones:": {unicode: ["1f3a7"], fname: "1f3a7", uc: "1f3a7", isCanonical: !0},
			":mrs_claus:": {unicode: ["1f936"], fname: "1f936", uc: "1f936", isCanonical: !0},
			":mother_christmas:": {unicode: ["1f936"], fname: "1f936", uc: "1f936", isCanonical: !1},
			":art:": {unicode: ["1f3a8"], fname: "1f3a8", uc: "1f3a8", isCanonical: !0},
			":man_in_tuxedo:": {unicode: ["1f935"], fname: "1f935", uc: "1f935", isCanonical: !0},
			":tophat:": {unicode: ["1f3a9"], fname: "1f3a9", uc: "1f3a9", isCanonical: !0},
			":circus_tent:": {unicode: ["1f3aa"], fname: "1f3aa", uc: "1f3aa", isCanonical: !0},
			":prince:": {
				unicode: ["1f934"], fname: "1f934", uc: "1f934",
				isCanonical: !0
			},
			":ticket:": {unicode: ["1f3ab"], fname: "1f3ab", uc: "1f3ab", isCanonical: !0},
			":clapper:": {unicode: ["1f3ac"], fname: "1f3ac", uc: "1f3ac", isCanonical: !0},
			":performing_arts:": {unicode: ["1f3ad"], fname: "1f3ad", uc: "1f3ad", isCanonical: !0},
			":sneezing_face:": {unicode: ["1f927"], fname: "1f927", uc: "1f927", isCanonical: !0},
			":sneeze:": {unicode: ["1f927"], fname: "1f927", uc: "1f927", isCanonical: !1},
			":video_game:": {unicode: ["1f3ae"], fname: "1f3ae", uc: "1f3ae", isCanonical: !0},
			":dart:": {
				unicode: ["1f3af"], fname: "1f3af",
				uc: "1f3af", isCanonical: !0
			},
			":slot_machine:": {unicode: ["1f3b0"], fname: "1f3b0", uc: "1f3b0", isCanonical: !0},
			":8ball:": {unicode: ["1f3b1"], fname: "1f3b1", uc: "1f3b1", isCanonical: !0},
			":game_die:": {unicode: ["1f3b2"], fname: "1f3b2", uc: "1f3b2", isCanonical: !0},
			":bowling:": {unicode: ["1f3b3"], fname: "1f3b3", uc: "1f3b3", isCanonical: !0},
			":flower_playing_cards:": {unicode: ["1f3b4"], fname: "1f3b4", uc: "1f3b4", isCanonical: !0},
			":lying_face:": {unicode: ["1f925"], fname: "1f925", uc: "1f925", isCanonical: !0},
			":liar:": {
				unicode: ["1f925"],
				fname: "1f925", uc: "1f925", isCanonical: !1
			},
			":musical_note:": {unicode: ["1f3b5"], fname: "1f3b5", uc: "1f3b5", isCanonical: !0},
			":notes:": {unicode: ["1f3b6"], fname: "1f3b6", uc: "1f3b6", isCanonical: !0},
			":saxophone:": {unicode: ["1f3b7"], fname: "1f3b7", uc: "1f3b7", isCanonical: !0},
			":drooling_face:": {unicode: ["1f924"], fname: "1f924", uc: "1f924", isCanonical: !0},
			":drool:": {unicode: ["1f924"], fname: "1f924", uc: "1f924", isCanonical: !1},
			":guitar:": {unicode: ["1f3b8"], fname: "1f3b8", uc: "1f3b8", isCanonical: !0},
			":musical_keyboard:": {
				unicode: ["1f3b9"],
				fname: "1f3b9", uc: "1f3b9", isCanonical: !0
			},
			":trumpet:": {unicode: ["1f3ba"], fname: "1f3ba", uc: "1f3ba", isCanonical: !0},
			":rofl:": {unicode: ["1f923"], fname: "1f923", uc: "1f923", isCanonical: !0},
			":rolling_on_the_floor_laughing:": {unicode: ["1f923"], fname: "1f923", uc: "1f923", isCanonical: !1},
			":violin:": {unicode: ["1f3bb"], fname: "1f3bb", uc: "1f3bb", isCanonical: !0},
			":musical_score:": {unicode: ["1f3bc"], fname: "1f3bc", uc: "1f3bc", isCanonical: !0},
			":running_shirt_with_sash:": {unicode: ["1f3bd"], fname: "1f3bd", uc: "1f3bd", isCanonical: !0},
			":nauseated_face:": {unicode: ["1f922"], fname: "1f922", uc: "1f922", isCanonical: !0},
			":sick:": {unicode: ["1f922"], fname: "1f922", uc: "1f922", isCanonical: !1},
			":tennis:": {unicode: ["1f3be"], fname: "1f3be", uc: "1f3be", isCanonical: !0},
			":ski:": {unicode: ["1f3bf"], fname: "1f3bf", uc: "1f3bf", isCanonical: !0},
			":basketball:": {unicode: ["1f3c0"], fname: "1f3c0", uc: "1f3c0", isCanonical: !0},
			":checkered_flag:": {unicode: ["1f3c1"], fname: "1f3c1", uc: "1f3c1", isCanonical: !0},
			":clown:": {unicode: ["1f921"], fname: "1f921", uc: "1f921", isCanonical: !0},
			":clown_face:": {unicode: ["1f921"], fname: "1f921", uc: "1f921", isCanonical: !1},
			":snowboarder:": {unicode: ["1f3c2"], fname: "1f3c2", uc: "1f3c2", isCanonical: !0},
			":runner:": {unicode: ["1f3c3"], fname: "1f3c3", uc: "1f3c3", isCanonical: !0},
			":surfer:": {unicode: ["1f3c4"], fname: "1f3c4", uc: "1f3c4", isCanonical: !0},
			":trophy:": {unicode: ["1f3c6"], fname: "1f3c6", uc: "1f3c6", isCanonical: !0},
			":football:": {unicode: ["1f3c8"], fname: "1f3c8", uc: "1f3c8", isCanonical: !0},
			":swimmer:": {unicode: ["1f3ca"], fname: "1f3ca", uc: "1f3ca", isCanonical: !0},
			":house:": {unicode: ["1f3e0"], fname: "1f3e0", uc: "1f3e0", isCanonical: !0},
			":house_with_garden:": {unicode: ["1f3e1"], fname: "1f3e1", uc: "1f3e1", isCanonical: !0},
			":office:": {unicode: ["1f3e2"], fname: "1f3e2", uc: "1f3e2", isCanonical: !0},
			":post_office:": {unicode: ["1f3e3"], fname: "1f3e3", uc: "1f3e3", isCanonical: !0},
			":hospital:": {unicode: ["1f3e5"], fname: "1f3e5", uc: "1f3e5", isCanonical: !0},
			":bank:": {unicode: ["1f3e6"], fname: "1f3e6", uc: "1f3e6", isCanonical: !0},
			":atm:": {unicode: ["1f3e7"], fname: "1f3e7", uc: "1f3e7", isCanonical: !0},
			":hotel:": {unicode: ["1f3e8"], fname: "1f3e8", uc: "1f3e8", isCanonical: !0},
			":love_hotel:": {unicode: ["1f3e9"], fname: "1f3e9", uc: "1f3e9", isCanonical: !0},
			":convenience_store:": {unicode: ["1f3ea"], fname: "1f3ea", uc: "1f3ea", isCanonical: !0},
			":school:": {unicode: ["1f3eb"], fname: "1f3eb", uc: "1f3eb", isCanonical: !0},
			":department_store:": {unicode: ["1f3ec"], fname: "1f3ec", uc: "1f3ec", isCanonical: !0},
			":cowboy:": {unicode: ["1f920"], fname: "1f920", uc: "1f920", isCanonical: !0},
			":face_with_cowboy_hat:": {
				unicode: ["1f920"], fname: "1f920",
				uc: "1f920", isCanonical: !1
			},
			":factory:": {unicode: ["1f3ed"], fname: "1f3ed", uc: "1f3ed", isCanonical: !0},
			":izakaya_lantern:": {unicode: ["1f3ee"], fname: "1f3ee", uc: "1f3ee", isCanonical: !0},
			":japanese_castle:": {unicode: ["1f3ef"], fname: "1f3ef", uc: "1f3ef", isCanonical: !0},
			":european_castle:": {unicode: ["1f3f0"], fname: "1f3f0", uc: "1f3f0", isCanonical: !0},
			":snail:": {unicode: ["1f40c"], fname: "1f40c", uc: "1f40c", isCanonical: !0},
			":snake:": {unicode: ["1f40d"], fname: "1f40d", uc: "1f40d", isCanonical: !0},
			":racehorse:": {
				unicode: ["1f40e"],
				fname: "1f40e", uc: "1f40e", isCanonical: !0
			},
			":sheep:": {unicode: ["1f411"], fname: "1f411", uc: "1f411", isCanonical: !0},
			":monkey:": {unicode: ["1f412"], fname: "1f412", uc: "1f412", isCanonical: !0},
			":chicken:": {unicode: ["1f414"], fname: "1f414", uc: "1f414", isCanonical: !0},
			":boar:": {unicode: ["1f417"], fname: "1f417", uc: "1f417", isCanonical: !0},
			":elephant:": {unicode: ["1f418"], fname: "1f418", uc: "1f418", isCanonical: !0},
			":octopus:": {unicode: ["1f419"], fname: "1f419", uc: "1f419", isCanonical: !0},
			":shell:": {
				unicode: ["1f41a"], fname: "1f41a",
				uc: "1f41a", isCanonical: !0
			},
			":bug:": {unicode: ["1f41b"], fname: "1f41b", uc: "1f41b", isCanonical: !0},
			":ant:": {unicode: ["1f41c"], fname: "1f41c", uc: "1f41c", isCanonical: !0},
			":bee:": {unicode: ["1f41d"], fname: "1f41d", uc: "1f41d", isCanonical: !0},
			":beetle:": {unicode: ["1f41e"], fname: "1f41e", uc: "1f41e", isCanonical: !0},
			":fish:": {unicode: ["1f41f"], fname: "1f41f", uc: "1f41f", isCanonical: !0},
			":tropical_fish:": {unicode: ["1f420"], fname: "1f420", uc: "1f420", isCanonical: !0},
			":blowfish:": {
				unicode: ["1f421"], fname: "1f421", uc: "1f421",
				isCanonical: !0
			},
			":turtle:": {unicode: ["1f422"], fname: "1f422", uc: "1f422", isCanonical: !0},
			":hatching_chick:": {unicode: ["1f423"], fname: "1f423", uc: "1f423", isCanonical: !0},
			":baby_chick:": {unicode: ["1f424"], fname: "1f424", uc: "1f424", isCanonical: !0},
			":hatched_chick:": {unicode: ["1f425"], fname: "1f425", uc: "1f425", isCanonical: !0},
			":bird:": {unicode: ["1f426"], fname: "1f426", uc: "1f426", isCanonical: !0},
			":penguin:": {unicode: ["1f427"], fname: "1f427", uc: "1f427", isCanonical: !0},
			":koala:": {
				unicode: ["1f428"], fname: "1f428",
				uc: "1f428", isCanonical: !0
			},
			":poodle:": {unicode: ["1f429"], fname: "1f429", uc: "1f429", isCanonical: !0},
			":camel:": {unicode: ["1f42b"], fname: "1f42b", uc: "1f42b", isCanonical: !0},
			":dolphin:": {unicode: ["1f42c"], fname: "1f42c", uc: "1f42c", isCanonical: !0},
			":mouse:": {unicode: ["1f42d"], fname: "1f42d", uc: "1f42d", isCanonical: !0},
			":cow:": {unicode: ["1f42e"], fname: "1f42e", uc: "1f42e", isCanonical: !0},
			":tiger:": {unicode: ["1f42f"], fname: "1f42f", uc: "1f42f", isCanonical: !0},
			":rabbit:": {
				unicode: ["1f430"], fname: "1f430", uc: "1f430",
				isCanonical: !0
			},
			":cat:": {unicode: ["1f431"], fname: "1f431", uc: "1f431", isCanonical: !0},
			":dragon_face:": {unicode: ["1f432"], fname: "1f432", uc: "1f432", isCanonical: !0},
			":whale:": {unicode: ["1f433"], fname: "1f433", uc: "1f433", isCanonical: !0},
			":horse:": {unicode: ["1f434"], fname: "1f434", uc: "1f434", isCanonical: !0},
			":monkey_face:": {unicode: ["1f435"], fname: "1f435", uc: "1f435", isCanonical: !0},
			":dog:": {unicode: ["1f436"], fname: "1f436", uc: "1f436", isCanonical: !0},
			":pig:": {unicode: ["1f437"], fname: "1f437", uc: "1f437", isCanonical: !0},
			":frog:": {unicode: ["1f438"], fname: "1f438", uc: "1f438", isCanonical: !0},
			":hamster:": {unicode: ["1f439"], fname: "1f439", uc: "1f439", isCanonical: !0},
			":wolf:": {unicode: ["1f43a"], fname: "1f43a", uc: "1f43a", isCanonical: !0},
			":bear:": {unicode: ["1f43b"], fname: "1f43b", uc: "1f43b", isCanonical: !0},
			":panda_face:": {unicode: ["1f43c"], fname: "1f43c", uc: "1f43c", isCanonical: !0},
			":pig_nose:": {unicode: ["1f43d"], fname: "1f43d", uc: "1f43d", isCanonical: !0},
			":feet:": {unicode: ["1f43e"], fname: "1f43e", uc: "1f43e", isCanonical: !0},
			":paw_prints:": {
				unicode: ["1f43e"],
				fname: "1f43e", uc: "1f43e", isCanonical: !1
			},
			":eyes:": {unicode: ["1f440"], fname: "1f440", uc: "1f440", isCanonical: !0},
			":ear:": {unicode: ["1f442"], fname: "1f442", uc: "1f442", isCanonical: !0},
			":nose:": {unicode: ["1f443"], fname: "1f443", uc: "1f443", isCanonical: !0},
			":lips:": {unicode: ["1f444"], fname: "1f444", uc: "1f444", isCanonical: !0},
			":tongue:": {unicode: ["1f445"], fname: "1f445", uc: "1f445", isCanonical: !0},
			":point_up_2:": {unicode: ["1f446"], fname: "1f446", uc: "1f446", isCanonical: !0},
			":point_down:": {
				unicode: ["1f447"], fname: "1f447",
				uc: "1f447", isCanonical: !0
			},
			":point_left:": {unicode: ["1f448"], fname: "1f448", uc: "1f448", isCanonical: !0},
			":point_right:": {unicode: ["1f449"], fname: "1f449", uc: "1f449", isCanonical: !0},
			":punch:": {unicode: ["1f44a"], fname: "1f44a", uc: "1f44a", isCanonical: !0},
			":wave:": {unicode: ["1f44b"], fname: "1f44b", uc: "1f44b", isCanonical: !0},
			":ok_hand:": {unicode: ["1f44c"], fname: "1f44c", uc: "1f44c", isCanonical: !0},
			":thumbsup:": {unicode: ["1f44d"], fname: "1f44d", uc: "1f44d", isCanonical: !0},
			":+1:": {
				unicode: ["1f44d"], fname: "1f44d",
				uc: "1f44d", isCanonical: !1
			},
			":thumbup:": {unicode: ["1f44d"], fname: "1f44d", uc: "1f44d", isCanonical: !1},
			":thumbsdown:": {unicode: ["1f44e"], fname: "1f44e", uc: "1f44e", isCanonical: !0},
			":-1:": {unicode: ["1f44e"], fname: "1f44e", uc: "1f44e", isCanonical: !1},
			":thumbdown:": {unicode: ["1f44e"], fname: "1f44e", uc: "1f44e", isCanonical: !1},
			":clap:": {unicode: ["1f44f"], fname: "1f44f", uc: "1f44f", isCanonical: !0},
			":open_hands:": {unicode: ["1f450"], fname: "1f450", uc: "1f450", isCanonical: !0},
			":crown:": {
				unicode: ["1f451"], fname: "1f451",
				uc: "1f451", isCanonical: !0
			},
			":womans_hat:": {unicode: ["1f452"], fname: "1f452", uc: "1f452", isCanonical: !0},
			":eyeglasses:": {unicode: ["1f453"], fname: "1f453", uc: "1f453", isCanonical: !0},
			":necktie:": {unicode: ["1f454"], fname: "1f454", uc: "1f454", isCanonical: !0},
			":shirt:": {unicode: ["1f455"], fname: "1f455", uc: "1f455", isCanonical: !0},
			":jeans:": {unicode: ["1f456"], fname: "1f456", uc: "1f456", isCanonical: !0},
			":dress:": {unicode: ["1f457"], fname: "1f457", uc: "1f457", isCanonical: !0},
			":kimono:": {
				unicode: ["1f458"], fname: "1f458",
				uc: "1f458", isCanonical: !0
			},
			":bikini:": {unicode: ["1f459"], fname: "1f459", uc: "1f459", isCanonical: !0},
			":womans_clothes:": {unicode: ["1f45a"], fname: "1f45a", uc: "1f45a", isCanonical: !0},
			":purse:": {unicode: ["1f45b"], fname: "1f45b", uc: "1f45b", isCanonical: !0},
			":handbag:": {unicode: ["1f45c"], fname: "1f45c", uc: "1f45c", isCanonical: !0},
			":pouch:": {unicode: ["1f45d"], fname: "1f45d", uc: "1f45d", isCanonical: !0},
			":mans_shoe:": {unicode: ["1f45e"], fname: "1f45e", uc: "1f45e", isCanonical: !0},
			":athletic_shoe:": {
				unicode: ["1f45f"], fname: "1f45f",
				uc: "1f45f", isCanonical: !0
			},
			":high_heel:": {unicode: ["1f460"], fname: "1f460", uc: "1f460", isCanonical: !0},
			":sandal:": {unicode: ["1f461"], fname: "1f461", uc: "1f461", isCanonical: !0},
			":boot:": {unicode: ["1f462"], fname: "1f462", uc: "1f462", isCanonical: !0},
			":footprints:": {unicode: ["1f463"], fname: "1f463", uc: "1f463", isCanonical: !0},
			":bust_in_silhouette:": {unicode: ["1f464"], fname: "1f464", uc: "1f464", isCanonical: !0},
			":boy:": {unicode: ["1f466"], fname: "1f466", uc: "1f466", isCanonical: !0},
			":girl:": {
				unicode: ["1f467"], fname: "1f467",
				uc: "1f467", isCanonical: !0
			},
			":man:": {unicode: ["1f468"], fname: "1f468", uc: "1f468", isCanonical: !0},
			":woman:": {unicode: ["1f469"], fname: "1f469", uc: "1f469", isCanonical: !0},
			":family:": {unicode: ["1f46a"], fname: "1f46a", uc: "1f46a", isCanonical: !0},
			":couple:": {unicode: ["1f46b"], fname: "1f46b", uc: "1f46b", isCanonical: !0},
			":cop:": {unicode: ["1f46e"], fname: "1f46e", uc: "1f46e", isCanonical: !0},
			":dancers:": {unicode: ["1f46f"], fname: "1f46f", uc: "1f46f", isCanonical: !0},
			":bride_with_veil:": {
				unicode: ["1f470"], fname: "1f470", uc: "1f470",
				isCanonical: !0
			},
			":person_with_blond_hair:": {unicode: ["1f471"], fname: "1f471", uc: "1f471", isCanonical: !0},
			":man_with_gua_pi_mao:": {unicode: ["1f472"], fname: "1f472", uc: "1f472", isCanonical: !0},
			":man_with_turban:": {unicode: ["1f473"], fname: "1f473", uc: "1f473", isCanonical: !0},
			":older_man:": {unicode: ["1f474"], fname: "1f474", uc: "1f474", isCanonical: !0},
			":older_woman:": {unicode: ["1f475"], fname: "1f475", uc: "1f475", isCanonical: !0},
			":grandma:": {unicode: ["1f475"], fname: "1f475", uc: "1f475", isCanonical: !1},
			":baby:": {
				unicode: ["1f476"],
				fname: "1f476", uc: "1f476", isCanonical: !0
			},
			":construction_worker:": {unicode: ["1f477"], fname: "1f477", uc: "1f477", isCanonical: !0},
			":princess:": {unicode: ["1f478"], fname: "1f478", uc: "1f478", isCanonical: !0},
			":japanese_ogre:": {unicode: ["1f479"], fname: "1f479", uc: "1f479", isCanonical: !0},
			":japanese_goblin:": {unicode: ["1f47a"], fname: "1f47a", uc: "1f47a", isCanonical: !0},
			":ghost:": {unicode: ["1f47b"], fname: "1f47b", uc: "1f47b", isCanonical: !0},
			":angel:": {unicode: ["1f47c"], fname: "1f47c", uc: "1f47c", isCanonical: !0},
			":alien:": {
				unicode: ["1f47d"],
				fname: "1f47d", uc: "1f47d", isCanonical: !0
			},
			":space_invader:": {unicode: ["1f47e"], fname: "1f47e", uc: "1f47e", isCanonical: !0},
			":imp:": {unicode: ["1f47f"], fname: "1f47f", uc: "1f47f", isCanonical: !0},
			":skull:": {unicode: ["1f480"], fname: "1f480", uc: "1f480", isCanonical: !0},
			":skeleton:": {unicode: ["1f480"], fname: "1f480", uc: "1f480", isCanonical: !1},
			":card_index:": {unicode: ["1f4c7"], fname: "1f4c7", uc: "1f4c7", isCanonical: !0},
			":information_desk_person:": {unicode: ["1f481"], fname: "1f481", uc: "1f481", isCanonical: !0},
			":guardsman:": {
				unicode: ["1f482"],
				fname: "1f482", uc: "1f482", isCanonical: !0
			},
			":dancer:": {unicode: ["1f483"], fname: "1f483", uc: "1f483", isCanonical: !0},
			":lipstick:": {unicode: ["1f484"], fname: "1f484", uc: "1f484", isCanonical: !0},
			":nail_care:": {unicode: ["1f485"], fname: "1f485", uc: "1f485", isCanonical: !0},
			":ledger:": {unicode: ["1f4d2"], fname: "1f4d2", uc: "1f4d2", isCanonical: !0},
			":massage:": {unicode: ["1f486"], fname: "1f486", uc: "1f486", isCanonical: !0},
			":notebook:": {unicode: ["1f4d3"], fname: "1f4d3", uc: "1f4d3", isCanonical: !0},
			":haircut:": {
				unicode: ["1f487"],
				fname: "1f487", uc: "1f487", isCanonical: !0
			},
			":notebook_with_decorative_cover:": {unicode: ["1f4d4"], fname: "1f4d4", uc: "1f4d4", isCanonical: !0},
			":barber:": {unicode: ["1f488"], fname: "1f488", uc: "1f488", isCanonical: !0},
			":closed_book:": {unicode: ["1f4d5"], fname: "1f4d5", uc: "1f4d5", isCanonical: !0},
			":syringe:": {unicode: ["1f489"], fname: "1f489", uc: "1f489", isCanonical: !0},
			":book:": {unicode: ["1f4d6"], fname: "1f4d6", uc: "1f4d6", isCanonical: !0},
			":pill:": {unicode: ["1f48a"], fname: "1f48a", uc: "1f48a", isCanonical: !0},
			":green_book:": {
				unicode: ["1f4d7"],
				fname: "1f4d7", uc: "1f4d7", isCanonical: !0
			},
			":kiss:": {unicode: ["1f48b"], fname: "1f48b", uc: "1f48b", isCanonical: !0},
			":blue_book:": {unicode: ["1f4d8"], fname: "1f4d8", uc: "1f4d8", isCanonical: !0},
			":love_letter:": {unicode: ["1f48c"], fname: "1f48c", uc: "1f48c", isCanonical: !0},
			":orange_book:": {unicode: ["1f4d9"], fname: "1f4d9", uc: "1f4d9", isCanonical: !0},
			":ring:": {unicode: ["1f48d"], fname: "1f48d", uc: "1f48d", isCanonical: !0},
			":books:": {unicode: ["1f4da"], fname: "1f4da", uc: "1f4da", isCanonical: !0},
			":gem:": {
				unicode: ["1f48e"],
				fname: "1f48e", uc: "1f48e", isCanonical: !0
			},
			":name_badge:": {unicode: ["1f4db"], fname: "1f4db", uc: "1f4db", isCanonical: !0},
			":couplekiss:": {unicode: ["1f48f"], fname: "1f48f", uc: "1f48f", isCanonical: !0},
			":scroll:": {unicode: ["1f4dc"], fname: "1f4dc", uc: "1f4dc", isCanonical: !0},
			":bouquet:": {unicode: ["1f490"], fname: "1f490", uc: "1f490", isCanonical: !0},
			":pencil:": {unicode: ["1f4dd"], fname: "1f4dd", uc: "1f4dd", isCanonical: !0},
			":couple_with_heart:": {unicode: ["1f491"], fname: "1f491", uc: "1f491", isCanonical: !0},
			":telephone_receiver:": {
				unicode: ["1f4de"],
				fname: "1f4de", uc: "1f4de", isCanonical: !0
			},
			":wedding:": {unicode: ["1f492"], fname: "1f492", uc: "1f492", isCanonical: !0},
			":pager:": {unicode: ["1f4df"], fname: "1f4df", uc: "1f4df", isCanonical: !0},
			":fax:": {unicode: ["1f4e0"], fname: "1f4e0", uc: "1f4e0", isCanonical: !0},
			":heartbeat:": {unicode: ["1f493"], fname: "1f493", uc: "1f493", isCanonical: !0},
			":satellite:": {unicode: ["1f4e1"], fname: "1f4e1", uc: "1f4e1", isCanonical: !0},
			":loudspeaker:": {unicode: ["1f4e2"], fname: "1f4e2", uc: "1f4e2", isCanonical: !0},
			":broken_heart:": {
				unicode: ["1f494"],
				fname: "1f494", uc: "1f494", isCanonical: !0
			},
			":mega:": {unicode: ["1f4e3"], fname: "1f4e3", uc: "1f4e3", isCanonical: !0},
			":outbox_tray:": {unicode: ["1f4e4"], fname: "1f4e4", uc: "1f4e4", isCanonical: !0},
			":two_hearts:": {unicode: ["1f495"], fname: "1f495", uc: "1f495", isCanonical: !0},
			":inbox_tray:": {unicode: ["1f4e5"], fname: "1f4e5", uc: "1f4e5", isCanonical: !0},
			":package:": {unicode: ["1f4e6"], fname: "1f4e6", uc: "1f4e6", isCanonical: !0},
			":sparkling_heart:": {unicode: ["1f496"], fname: "1f496", uc: "1f496", isCanonical: !0},
			":e-mail:": {
				unicode: ["1f4e7"],
				fname: "1f4e7", uc: "1f4e7", isCanonical: !0
			},
			":email:": {unicode: ["1f4e7"], fname: "1f4e7", uc: "1f4e7", isCanonical: !1},
			":incoming_envelope:": {unicode: ["1f4e8"], fname: "1f4e8", uc: "1f4e8", isCanonical: !0},
			":heartpulse:": {unicode: ["1f497"], fname: "1f497", uc: "1f497", isCanonical: !0},
			":envelope_with_arrow:": {unicode: ["1f4e9"], fname: "1f4e9", uc: "1f4e9", isCanonical: !0},
			":mailbox_closed:": {unicode: ["1f4ea"], fname: "1f4ea", uc: "1f4ea", isCanonical: !0},
			":cupid:": {unicode: ["1f498"], fname: "1f498", uc: "1f498", isCanonical: !0},
			":mailbox:": {unicode: ["1f4eb"], fname: "1f4eb", uc: "1f4eb", isCanonical: !0},
			":postbox:": {unicode: ["1f4ee"], fname: "1f4ee", uc: "1f4ee", isCanonical: !0},
			":blue_heart:": {unicode: ["1f499"], fname: "1f499", uc: "1f499", isCanonical: !0},
			":newspaper:": {unicode: ["1f4f0"], fname: "1f4f0", uc: "1f4f0", isCanonical: !0},
			":iphone:": {unicode: ["1f4f1"], fname: "1f4f1", uc: "1f4f1", isCanonical: !0},
			":green_heart:": {unicode: ["1f49a"], fname: "1f49a", uc: "1f49a", isCanonical: !0},
			":calling:": {unicode: ["1f4f2"], fname: "1f4f2", uc: "1f4f2", isCanonical: !0},
			":vibration_mode:": {unicode: ["1f4f3"], fname: "1f4f3", uc: "1f4f3", isCanonical: !0},
			":yellow_heart:": {unicode: ["1f49b"], fname: "1f49b", uc: "1f49b", isCanonical: !0},
			":mobile_phone_off:": {unicode: ["1f4f4"], fname: "1f4f4", uc: "1f4f4", isCanonical: !0},
			":signal_strength:": {unicode: ["1f4f6"], fname: "1f4f6", uc: "1f4f6", isCanonical: !0},
			":purple_heart:": {unicode: ["1f49c"], fname: "1f49c", uc: "1f49c", isCanonical: !0},
			":camera:": {unicode: ["1f4f7"], fname: "1f4f7", uc: "1f4f7", isCanonical: !0},
			":video_camera:": {
				unicode: ["1f4f9"],
				fname: "1f4f9", uc: "1f4f9", isCanonical: !0
			},
			":gift_heart:": {unicode: ["1f49d"], fname: "1f49d", uc: "1f49d", isCanonical: !0},
			":tv:": {unicode: ["1f4fa"], fname: "1f4fa", uc: "1f4fa", isCanonical: !0},
			":radio:": {unicode: ["1f4fb"], fname: "1f4fb", uc: "1f4fb", isCanonical: !0},
			":revolving_hearts:": {unicode: ["1f49e"], fname: "1f49e", uc: "1f49e", isCanonical: !0},
			":vhs:": {unicode: ["1f4fc"], fname: "1f4fc", uc: "1f4fc", isCanonical: !0},
			":arrows_clockwise:": {unicode: ["1f503"], fname: "1f503", uc: "1f503", isCanonical: !0},
			":heart_decoration:": {
				unicode: ["1f49f"],
				fname: "1f49f", uc: "1f49f", isCanonical: !0
			},
			":loud_sound:": {unicode: ["1f50a"], fname: "1f50a", uc: "1f50a", isCanonical: !0},
			":battery:": {unicode: ["1f50b"], fname: "1f50b", uc: "1f50b", isCanonical: !0},
			":diamond_shape_with_a_dot_inside:": {unicode: ["1f4a0"], fname: "1f4a0", uc: "1f4a0", isCanonical: !0},
			":electric_plug:": {unicode: ["1f50c"], fname: "1f50c", uc: "1f50c", isCanonical: !0},
			":mag:": {unicode: ["1f50d"], fname: "1f50d", uc: "1f50d", isCanonical: !0},
			":bulb:": {unicode: ["1f4a1"], fname: "1f4a1", uc: "1f4a1", isCanonical: !0},
			":mag_right:": {
				unicode: ["1f50e"],
				fname: "1f50e", uc: "1f50e", isCanonical: !0
			},
			":lock_with_ink_pen:": {unicode: ["1f50f"], fname: "1f50f", uc: "1f50f", isCanonical: !0},
			":anger:": {unicode: ["1f4a2"], fname: "1f4a2", uc: "1f4a2", isCanonical: !0},
			":closed_lock_with_key:": {unicode: ["1f510"], fname: "1f510", uc: "1f510", isCanonical: !0},
			":key:": {unicode: ["1f511"], fname: "1f511", uc: "1f511", isCanonical: !0},
			":bomb:": {unicode: ["1f4a3"], fname: "1f4a3", uc: "1f4a3", isCanonical: !0},
			":lock:": {unicode: ["1f512"], fname: "1f512", uc: "1f512", isCanonical: !0},
			":unlock:": {
				unicode: ["1f513"],
				fname: "1f513", uc: "1f513", isCanonical: !0
			},
			":zzz:": {unicode: ["1f4a4"], fname: "1f4a4", uc: "1f4a4", isCanonical: !0},
			":bell:": {unicode: ["1f514"], fname: "1f514", uc: "1f514", isCanonical: !0},
			":bookmark:": {unicode: ["1f516"], fname: "1f516", uc: "1f516", isCanonical: !0},
			":boom:": {unicode: ["1f4a5"], fname: "1f4a5", uc: "1f4a5", isCanonical: !0},
			":link:": {unicode: ["1f517"], fname: "1f517", uc: "1f517", isCanonical: !0},
			":radio_button:": {unicode: ["1f518"], fname: "1f518", uc: "1f518", isCanonical: !0},
			":sweat_drops:": {
				unicode: ["1f4a6"],
				fname: "1f4a6", uc: "1f4a6", isCanonical: !0
			},
			":back:": {unicode: ["1f519"], fname: "1f519", uc: "1f519", isCanonical: !0},
			":end:": {unicode: ["1f51a"], fname: "1f51a", uc: "1f51a", isCanonical: !0},
			":droplet:": {unicode: ["1f4a7"], fname: "1f4a7", uc: "1f4a7", isCanonical: !0},
			":on:": {unicode: ["1f51b"], fname: "1f51b", uc: "1f51b", isCanonical: !0},
			":soon:": {unicode: ["1f51c"], fname: "1f51c", uc: "1f51c", isCanonical: !0},
			":dash:": {unicode: ["1f4a8"], fname: "1f4a8", uc: "1f4a8", isCanonical: !0},
			":top:": {
				unicode: ["1f51d"], fname: "1f51d", uc: "1f51d",
				isCanonical: !0
			},
			":underage:": {unicode: ["1f51e"], fname: "1f51e", uc: "1f51e", isCanonical: !0},
			":poop:": {unicode: ["1f4a9"], fname: "1f4a9", uc: "1f4a9", isCanonical: !0},
			":shit:": {unicode: ["1f4a9"], fname: "1f4a9", uc: "1f4a9", isCanonical: !1},
			":hankey:": {unicode: ["1f4a9"], fname: "1f4a9", uc: "1f4a9", isCanonical: !1},
			":poo:": {unicode: ["1f4a9"], fname: "1f4a9", uc: "1f4a9", isCanonical: !1},
			":keycap_ten:": {unicode: ["1f51f"], fname: "1f51f", uc: "1f51f", isCanonical: !0},
			":muscle:": {unicode: ["1f4aa"], fname: "1f4aa", uc: "1f4aa", isCanonical: !0},
			":capital_abcd:": {unicode: ["1f520"], fname: "1f520", uc: "1f520", isCanonical: !0},
			":abcd:": {unicode: ["1f521"], fname: "1f521", uc: "1f521", isCanonical: !0},
			":dizzy:": {unicode: ["1f4ab"], fname: "1f4ab", uc: "1f4ab", isCanonical: !0},
			":1234:": {unicode: ["1f522"], fname: "1f522", uc: "1f522", isCanonical: !0},
			":symbols:": {unicode: ["1f523"], fname: "1f523", uc: "1f523", isCanonical: !0},
			":speech_balloon:": {unicode: ["1f4ac"], fname: "1f4ac", uc: "1f4ac", isCanonical: !0},
			":abc:": {unicode: ["1f524"], fname: "1f524", uc: "1f524", isCanonical: !0},
			":fire:": {unicode: ["1f525"], fname: "1f525", uc: "1f525", isCanonical: !0},
			":flame:": {unicode: ["1f525"], fname: "1f525", uc: "1f525", isCanonical: !1},
			":white_flower:": {unicode: ["1f4ae"], fname: "1f4ae", uc: "1f4ae", isCanonical: !0},
			":flashlight:": {unicode: ["1f526"], fname: "1f526", uc: "1f526", isCanonical: !0},
			":wrench:": {unicode: ["1f527"], fname: "1f527", uc: "1f527", isCanonical: !0},
			":100:": {unicode: ["1f4af"], fname: "1f4af", uc: "1f4af", isCanonical: !0},
			":hammer:": {unicode: ["1f528"], fname: "1f528", uc: "1f528", isCanonical: !0},
			":nut_and_bolt:": {unicode: ["1f529"], fname: "1f529", uc: "1f529", isCanonical: !0},
			":moneybag:": {unicode: ["1f4b0"], fname: "1f4b0", uc: "1f4b0", isCanonical: !0},
			":knife:": {unicode: ["1f52a"], fname: "1f52a", uc: "1f52a", isCanonical: !0},
			":gun:": {unicode: ["1f52b"], fname: "1f52b", uc: "1f52b", isCanonical: !0},
			":currency_exchange:": {unicode: ["1f4b1"], fname: "1f4b1", uc: "1f4b1", isCanonical: !0},
			":crystal_ball:": {unicode: ["1f52e"], fname: "1f52e", uc: "1f52e", isCanonical: !0},
			":heavy_dollar_sign:": {
				unicode: ["1f4b2"], fname: "1f4b2",
				uc: "1f4b2", isCanonical: !0
			},
			":six_pointed_star:": {unicode: ["1f52f"], fname: "1f52f", uc: "1f52f", isCanonical: !0},
			":credit_card:": {unicode: ["1f4b3"], fname: "1f4b3", uc: "1f4b3", isCanonical: !0},
			":beginner:": {unicode: ["1f530"], fname: "1f530", uc: "1f530", isCanonical: !0},
			":trident:": {unicode: ["1f531"], fname: "1f531", uc: "1f531", isCanonical: !0},
			":yen:": {unicode: ["1f4b4"], fname: "1f4b4", uc: "1f4b4", isCanonical: !0},
			":black_square_button:": {unicode: ["1f532"], fname: "1f532", uc: "1f532", isCanonical: !0},
			":white_square_button:": {
				unicode: ["1f533"],
				fname: "1f533", uc: "1f533", isCanonical: !0
			},
			":dollar:": {unicode: ["1f4b5"], fname: "1f4b5", uc: "1f4b5", isCanonical: !0},
			":red_circle:": {unicode: ["1f534"], fname: "1f534", uc: "1f534", isCanonical: !0},
			":blue_circle:": {unicode: ["1f535"], fname: "1f535", uc: "1f535", isCanonical: !0},
			":money_with_wings:": {unicode: ["1f4b8"], fname: "1f4b8", uc: "1f4b8", isCanonical: !0},
			":large_orange_diamond:": {unicode: ["1f536"], fname: "1f536", uc: "1f536", isCanonical: !0},
			":large_blue_diamond:": {unicode: ["1f537"], fname: "1f537", uc: "1f537", isCanonical: !0},
			":chart:": {unicode: ["1f4b9"], fname: "1f4b9", uc: "1f4b9", isCanonical: !0},
			":small_orange_diamond:": {unicode: ["1f538"], fname: "1f538", uc: "1f538", isCanonical: !0},
			":small_blue_diamond:": {unicode: ["1f539"], fname: "1f539", uc: "1f539", isCanonical: !0},
			":seat:": {unicode: ["1f4ba"], fname: "1f4ba", uc: "1f4ba", isCanonical: !0},
			":small_red_triangle:": {unicode: ["1f53a"], fname: "1f53a", uc: "1f53a", isCanonical: !0},
			":small_red_triangle_down:": {unicode: ["1f53b"], fname: "1f53b", uc: "1f53b", isCanonical: !0},
			":computer:": {
				unicode: ["1f4bb"],
				fname: "1f4bb", uc: "1f4bb", isCanonical: !0
			},
			":arrow_up_small:": {unicode: ["1f53c"], fname: "1f53c", uc: "1f53c", isCanonical: !0},
			":briefcase:": {unicode: ["1f4bc"], fname: "1f4bc", uc: "1f4bc", isCanonical: !0},
			":arrow_down_small:": {unicode: ["1f53d"], fname: "1f53d", uc: "1f53d", isCanonical: !0},
			":clock1:": {unicode: ["1f550"], fname: "1f550", uc: "1f550", isCanonical: !0},
			":minidisc:": {unicode: ["1f4bd"], fname: "1f4bd", uc: "1f4bd", isCanonical: !0},
			":clock2:": {unicode: ["1f551"], fname: "1f551", uc: "1f551", isCanonical: !0},
			":floppy_disk:": {
				unicode: ["1f4be"],
				fname: "1f4be", uc: "1f4be", isCanonical: !0
			},
			":clock3:": {unicode: ["1f552"], fname: "1f552", uc: "1f552", isCanonical: !0},
			":cd:": {unicode: ["1f4bf"], fname: "1f4bf", uc: "1f4bf", isCanonical: !0},
			":clock4:": {unicode: ["1f553"], fname: "1f553", uc: "1f553", isCanonical: !0},
			":dvd:": {unicode: ["1f4c0"], fname: "1f4c0", uc: "1f4c0", isCanonical: !0},
			":clock5:": {unicode: ["1f554"], fname: "1f554", uc: "1f554", isCanonical: !0},
			":clock6:": {unicode: ["1f555"], fname: "1f555", uc: "1f555", isCanonical: !0},
			":file_folder:": {
				unicode: ["1f4c1"], fname: "1f4c1",
				uc: "1f4c1", isCanonical: !0
			},
			":clock7:": {unicode: ["1f556"], fname: "1f556", uc: "1f556", isCanonical: !0},
			":clock8:": {unicode: ["1f557"], fname: "1f557", uc: "1f557", isCanonical: !0},
			":open_file_folder:": {unicode: ["1f4c2"], fname: "1f4c2", uc: "1f4c2", isCanonical: !0},
			":clock9:": {unicode: ["1f558"], fname: "1f558", uc: "1f558", isCanonical: !0},
			":clock10:": {unicode: ["1f559"], fname: "1f559", uc: "1f559", isCanonical: !0},
			":page_with_curl:": {unicode: ["1f4c3"], fname: "1f4c3", uc: "1f4c3", isCanonical: !0},
			":clock11:": {
				unicode: ["1f55a"],
				fname: "1f55a", uc: "1f55a", isCanonical: !0
			},
			":clock12:": {unicode: ["1f55b"], fname: "1f55b", uc: "1f55b", isCanonical: !0},
			":page_facing_up:": {unicode: ["1f4c4"], fname: "1f4c4", uc: "1f4c4", isCanonical: !0},
			":mount_fuji:": {unicode: ["1f5fb"], fname: "1f5fb", uc: "1f5fb", isCanonical: !0},
			":tokyo_tower:": {unicode: ["1f5fc"], fname: "1f5fc", uc: "1f5fc", isCanonical: !0},
			":date:": {unicode: ["1f4c5"], fname: "1f4c5", uc: "1f4c5", isCanonical: !0},
			":statue_of_liberty:": {unicode: ["1f5fd"], fname: "1f5fd", uc: "1f5fd", isCanonical: !0},
			":japan:": {
				unicode: ["1f5fe"],
				fname: "1f5fe", uc: "1f5fe", isCanonical: !0
			},
			":calendar:": {unicode: ["1f4c6"], fname: "1f4c6", uc: "1f4c6", isCanonical: !0},
			":moyai:": {unicode: ["1f5ff"], fname: "1f5ff", uc: "1f5ff", isCanonical: !0},
			":grin:": {unicode: ["1f601"], fname: "1f601", uc: "1f601", isCanonical: !0},
			":joy:": {unicode: ["1f602"], fname: "1f602", uc: "1f602", isCanonical: !0},
			":smiley:": {unicode: ["1f603"], fname: "1f603", uc: "1f603", isCanonical: !0},
			":chart_with_upwards_trend:": {unicode: ["1f4c8"], fname: "1f4c8", uc: "1f4c8", isCanonical: !0},
			":smile:": {
				unicode: ["1f604"],
				fname: "1f604", uc: "1f604", isCanonical: !0
			},
			":sweat_smile:": {unicode: ["1f605"], fname: "1f605", uc: "1f605", isCanonical: !0},
			":chart_with_downwards_trend:": {unicode: ["1f4c9"], fname: "1f4c9", uc: "1f4c9", isCanonical: !0},
			":laughing:": {unicode: ["1f606"], fname: "1f606", uc: "1f606", isCanonical: !0},
			":satisfied:": {unicode: ["1f606"], fname: "1f606", uc: "1f606", isCanonical: !1},
			":wink:": {unicode: ["1f609"], fname: "1f609", uc: "1f609", isCanonical: !0},
			":bar_chart:": {unicode: ["1f4ca"], fname: "1f4ca", uc: "1f4ca", isCanonical: !0},
			":blush:": {
				unicode: ["1f60a"],
				fname: "1f60a", uc: "1f60a", isCanonical: !0
			},
			":yum:": {unicode: ["1f60b"], fname: "1f60b", uc: "1f60b", isCanonical: !0},
			":clipboard:": {unicode: ["1f4cb"], fname: "1f4cb", uc: "1f4cb", isCanonical: !0},
			":relieved:": {unicode: ["1f60c"], fname: "1f60c", uc: "1f60c", isCanonical: !0},
			":heart_eyes:": {unicode: ["1f60d"], fname: "1f60d", uc: "1f60d", isCanonical: !0},
			":pushpin:": {unicode: ["1f4cc"], fname: "1f4cc", uc: "1f4cc", isCanonical: !0},
			":smirk:": {unicode: ["1f60f"], fname: "1f60f", uc: "1f60f", isCanonical: !0},
			":unamused:": {
				unicode: ["1f612"],
				fname: "1f612", uc: "1f612", isCanonical: !0
			},
			":round_pushpin:": {unicode: ["1f4cd"], fname: "1f4cd", uc: "1f4cd", isCanonical: !0},
			":sweat:": {unicode: ["1f613"], fname: "1f613", uc: "1f613", isCanonical: !0},
			":pensive:": {unicode: ["1f614"], fname: "1f614", uc: "1f614", isCanonical: !0},
			":paperclip:": {unicode: ["1f4ce"], fname: "1f4ce", uc: "1f4ce", isCanonical: !0},
			":confounded:": {unicode: ["1f616"], fname: "1f616", uc: "1f616", isCanonical: !0},
			":kissing_heart:": {unicode: ["1f618"], fname: "1f618", uc: "1f618", isCanonical: !0},
			":straight_ruler:": {
				unicode: ["1f4cf"],
				fname: "1f4cf", uc: "1f4cf", isCanonical: !0
			},
			":kissing_closed_eyes:": {unicode: ["1f61a"], fname: "1f61a", uc: "1f61a", isCanonical: !0},
			":stuck_out_tongue_winking_eye:": {unicode: ["1f61c"], fname: "1f61c", uc: "1f61c", isCanonical: !0},
			":triangular_ruler:": {unicode: ["1f4d0"], fname: "1f4d0", uc: "1f4d0", isCanonical: !0},
			":stuck_out_tongue_closed_eyes:": {unicode: ["1f61d"], fname: "1f61d", uc: "1f61d", isCanonical: !0},
			":disappointed:": {unicode: ["1f61e"], fname: "1f61e", uc: "1f61e", isCanonical: !0},
			":bookmark_tabs:": {
				unicode: ["1f4d1"],
				fname: "1f4d1", uc: "1f4d1", isCanonical: !0
			},
			":angry:": {unicode: ["1f620"], fname: "1f620", uc: "1f620", isCanonical: !0},
			":rage:": {unicode: ["1f621"], fname: "1f621", uc: "1f621", isCanonical: !0},
			":cry:": {unicode: ["1f622"], fname: "1f622", uc: "1f622", isCanonical: !0},
			":persevere:": {unicode: ["1f623"], fname: "1f623", uc: "1f623", isCanonical: !0},
			":triumph:": {unicode: ["1f624"], fname: "1f624", uc: "1f624", isCanonical: !0},
			":disappointed_relieved:": {unicode: ["1f625"], fname: "1f625", uc: "1f625", isCanonical: !0},
			":fearful:": {
				unicode: ["1f628"],
				fname: "1f628", uc: "1f628", isCanonical: !0
			},
			":weary:": {unicode: ["1f629"], fname: "1f629", uc: "1f629", isCanonical: !0},
			":sleepy:": {unicode: ["1f62a"], fname: "1f62a", uc: "1f62a", isCanonical: !0},
			":tired_face:": {unicode: ["1f62b"], fname: "1f62b", uc: "1f62b", isCanonical: !0},
			":sob:": {unicode: ["1f62d"], fname: "1f62d", uc: "1f62d", isCanonical: !0},
			":cold_sweat:": {unicode: ["1f630"], fname: "1f630", uc: "1f630", isCanonical: !0},
			":scream:": {unicode: ["1f631"], fname: "1f631", uc: "1f631", isCanonical: !0},
			":astonished:": {
				unicode: ["1f632"],
				fname: "1f632", uc: "1f632", isCanonical: !0
			},
			":flushed:": {unicode: ["1f633"], fname: "1f633", uc: "1f633", isCanonical: !0},
			":dizzy_face:": {unicode: ["1f635"], fname: "1f635", uc: "1f635", isCanonical: !0},
			":mask:": {unicode: ["1f637"], fname: "1f637", uc: "1f637", isCanonical: !0},
			":smile_cat:": {unicode: ["1f638"], fname: "1f638", uc: "1f638", isCanonical: !0},
			":joy_cat:": {unicode: ["1f639"], fname: "1f639", uc: "1f639", isCanonical: !0},
			":smiley_cat:": {unicode: ["1f63a"], fname: "1f63a", uc: "1f63a", isCanonical: !0},
			":heart_eyes_cat:": {
				unicode: ["1f63b"],
				fname: "1f63b", uc: "1f63b", isCanonical: !0
			},
			":smirk_cat:": {unicode: ["1f63c"], fname: "1f63c", uc: "1f63c", isCanonical: !0},
			":kissing_cat:": {unicode: ["1f63d"], fname: "1f63d", uc: "1f63d", isCanonical: !0},
			":pouting_cat:": {unicode: ["1f63e"], fname: "1f63e", uc: "1f63e", isCanonical: !0},
			":crying_cat_face:": {unicode: ["1f63f"], fname: "1f63f", uc: "1f63f", isCanonical: !0},
			":scream_cat:": {unicode: ["1f640"], fname: "1f640", uc: "1f640", isCanonical: !0},
			":no_good:": {unicode: ["1f645"], fname: "1f645", uc: "1f645", isCanonical: !0},
			":ok_woman:": {
				unicode: ["1f646"],
				fname: "1f646", uc: "1f646", isCanonical: !0
			},
			":bow:": {unicode: ["1f647"], fname: "1f647", uc: "1f647", isCanonical: !0},
			":see_no_evil:": {unicode: ["1f648"], fname: "1f648", uc: "1f648", isCanonical: !0},
			":hear_no_evil:": {unicode: ["1f649"], fname: "1f649", uc: "1f649", isCanonical: !0},
			":speak_no_evil:": {unicode: ["1f64a"], fname: "1f64a", uc: "1f64a", isCanonical: !0},
			":raising_hand:": {unicode: ["1f64b"], fname: "1f64b", uc: "1f64b", isCanonical: !0},
			":raised_hands:": {unicode: ["1f64c"], fname: "1f64c", uc: "1f64c", isCanonical: !0},
			":person_frowning:": {
				unicode: ["1f64d"],
				fname: "1f64d", uc: "1f64d", isCanonical: !0
			},
			":person_with_pouting_face:": {unicode: ["1f64e"], fname: "1f64e", uc: "1f64e", isCanonical: !0},
			":pray:": {unicode: ["1f64f"], fname: "1f64f", uc: "1f64f", isCanonical: !0},
			":rocket:": {unicode: ["1f680"], fname: "1f680", uc: "1f680", isCanonical: !0},
			":railway_car:": {unicode: ["1f683"], fname: "1f683", uc: "1f683", isCanonical: !0},
			":bullettrain_side:": {unicode: ["1f684"], fname: "1f684", uc: "1f684", isCanonical: !0},
			":bullettrain_front:": {unicode: ["1f685"], fname: "1f685", uc: "1f685", isCanonical: !0},
			":metro:": {unicode: ["1f687"], fname: "1f687", uc: "1f687", isCanonical: !0},
			":station:": {unicode: ["1f689"], fname: "1f689", uc: "1f689", isCanonical: !0},
			":bus:": {unicode: ["1f68c"], fname: "1f68c", uc: "1f68c", isCanonical: !0},
			":busstop:": {unicode: ["1f68f"], fname: "1f68f", uc: "1f68f", isCanonical: !0},
			":ambulance:": {unicode: ["1f691"], fname: "1f691", uc: "1f691", isCanonical: !0},
			":fire_engine:": {unicode: ["1f692"], fname: "1f692", uc: "1f692", isCanonical: !0},
			":police_car:": {unicode: ["1f693"], fname: "1f693", uc: "1f693", isCanonical: !0},
			":taxi:": {unicode: ["1f695"], fname: "1f695", uc: "1f695", isCanonical: !0},
			":red_car:": {unicode: ["1f697"], fname: "1f697", uc: "1f697", isCanonical: !0},
			":blue_car:": {unicode: ["1f699"], fname: "1f699", uc: "1f699", isCanonical: !0},
			":truck:": {unicode: ["1f69a"], fname: "1f69a", uc: "1f69a", isCanonical: !0},
			":ship:": {unicode: ["1f6a2"], fname: "1f6a2", uc: "1f6a2", isCanonical: !0},
			":speedboat:": {unicode: ["1f6a4"], fname: "1f6a4", uc: "1f6a4", isCanonical: !0},
			":traffic_light:": {unicode: ["1f6a5"], fname: "1f6a5", uc: "1f6a5", isCanonical: !0},
			":construction:": {unicode: ["1f6a7"], fname: "1f6a7", uc: "1f6a7", isCanonical: !0},
			":rotating_light:": {unicode: ["1f6a8"], fname: "1f6a8", uc: "1f6a8", isCanonical: !0},
			":triangular_flag_on_post:": {unicode: ["1f6a9"], fname: "1f6a9", uc: "1f6a9", isCanonical: !0},
			":door:": {unicode: ["1f6aa"], fname: "1f6aa", uc: "1f6aa", isCanonical: !0},
			":no_entry_sign:": {unicode: ["1f6ab"], fname: "1f6ab", uc: "1f6ab", isCanonical: !0},
			":smoking:": {unicode: ["1f6ac"], fname: "1f6ac", uc: "1f6ac", isCanonical: !0},
			":no_smoking:": {
				unicode: ["1f6ad"], fname: "1f6ad",
				uc: "1f6ad", isCanonical: !0
			},
			":bike:": {unicode: ["1f6b2"], fname: "1f6b2", uc: "1f6b2", isCanonical: !0},
			":walking:": {unicode: ["1f6b6"], fname: "1f6b6", uc: "1f6b6", isCanonical: !0},
			":mens:": {unicode: ["1f6b9"], fname: "1f6b9", uc: "1f6b9", isCanonical: !0},
			":womens:": {unicode: ["1f6ba"], fname: "1f6ba", uc: "1f6ba", isCanonical: !0},
			":restroom:": {unicode: ["1f6bb"], fname: "1f6bb", uc: "1f6bb", isCanonical: !0},
			":baby_symbol:": {unicode: ["1f6bc"], fname: "1f6bc", uc: "1f6bc", isCanonical: !0},
			":toilet:": {
				unicode: ["1f6bd"], fname: "1f6bd",
				uc: "1f6bd", isCanonical: !0
			},
			":wc:": {unicode: ["1f6be"], fname: "1f6be", uc: "1f6be", isCanonical: !0},
			":bath:": {unicode: ["1f6c0"], fname: "1f6c0", uc: "1f6c0", isCanonical: !0},
			":metal:": {unicode: ["1f918"], fname: "1f918", uc: "1f918", isCanonical: !0},
			":sign_of_the_horns:": {unicode: ["1f918"], fname: "1f918", uc: "1f918", isCanonical: !1},
			":grinning:": {unicode: ["1f600"], fname: "1f600", uc: "1f600", isCanonical: !0},
			":innocent:": {unicode: ["1f607"], fname: "1f607", uc: "1f607", isCanonical: !0},
			":smiling_imp:": {
				unicode: ["1f608"], fname: "1f608",
				uc: "1f608", isCanonical: !0
			},
			":sunglasses:": {unicode: ["1f60e"], fname: "1f60e", uc: "1f60e", isCanonical: !0},
			":neutral_face:": {unicode: ["1f610"], fname: "1f610", uc: "1f610", isCanonical: !0},
			":expressionless:": {unicode: ["1f611"], fname: "1f611", uc: "1f611", isCanonical: !0},
			":confused:": {unicode: ["1f615"], fname: "1f615", uc: "1f615", isCanonical: !0},
			":kissing:": {unicode: ["1f617"], fname: "1f617", uc: "1f617", isCanonical: !0},
			":kissing_smiling_eyes:": {unicode: ["1f619"], fname: "1f619", uc: "1f619", isCanonical: !0},
			":stuck_out_tongue:": {
				unicode: ["1f61b"],
				fname: "1f61b", uc: "1f61b", isCanonical: !0
			},
			":worried:": {unicode: ["1f61f"], fname: "1f61f", uc: "1f61f", isCanonical: !0},
			":frowning:": {unicode: ["1f626"], fname: "1f626", uc: "1f626", isCanonical: !0},
			":anguished:": {unicode: ["1f627"], fname: "1f627", uc: "1f627", isCanonical: !0},
			":grimacing:": {unicode: ["1f62c"], fname: "1f62c", uc: "1f62c", isCanonical: !0},
			":open_mouth:": {unicode: ["1f62e"], fname: "1f62e", uc: "1f62e", isCanonical: !0},
			":hushed:": {unicode: ["1f62f"], fname: "1f62f", uc: "1f62f", isCanonical: !0},
			":sleeping:": {
				unicode: ["1f634"],
				fname: "1f634", uc: "1f634", isCanonical: !0
			},
			":no_mouth:": {unicode: ["1f636"], fname: "1f636", uc: "1f636", isCanonical: !0},
			":helicopter:": {unicode: ["1f681"], fname: "1f681", uc: "1f681", isCanonical: !0},
			":steam_locomotive:": {unicode: ["1f682"], fname: "1f682", uc: "1f682", isCanonical: !0},
			":train2:": {unicode: ["1f686"], fname: "1f686", uc: "1f686", isCanonical: !0},
			":light_rail:": {unicode: ["1f688"], fname: "1f688", uc: "1f688", isCanonical: !0},
			":tram:": {unicode: ["1f68a"], fname: "1f68a", uc: "1f68a", isCanonical: !0},
			":oncoming_bus:": {
				unicode: ["1f68d"],
				fname: "1f68d", uc: "1f68d", isCanonical: !0
			},
			":trolleybus:": {unicode: ["1f68e"], fname: "1f68e", uc: "1f68e", isCanonical: !0},
			":minibus:": {unicode: ["1f690"], fname: "1f690", uc: "1f690", isCanonical: !0},
			":oncoming_police_car:": {unicode: ["1f694"], fname: "1f694", uc: "1f694", isCanonical: !0},
			":oncoming_taxi:": {unicode: ["1f696"], fname: "1f696", uc: "1f696", isCanonical: !0},
			":oncoming_automobile:": {unicode: ["1f698"], fname: "1f698", uc: "1f698", isCanonical: !0},
			":articulated_lorry:": {unicode: ["1f69b"], fname: "1f69b", uc: "1f69b", isCanonical: !0},
			":tractor:": {unicode: ["1f69c"], fname: "1f69c", uc: "1f69c", isCanonical: !0},
			":monorail:": {unicode: ["1f69d"], fname: "1f69d", uc: "1f69d", isCanonical: !0},
			":mountain_railway:": {unicode: ["1f69e"], fname: "1f69e", uc: "1f69e", isCanonical: !0},
			":suspension_railway:": {unicode: ["1f69f"], fname: "1f69f", uc: "1f69f", isCanonical: !0},
			":mountain_cableway:": {unicode: ["1f6a0"], fname: "1f6a0", uc: "1f6a0", isCanonical: !0},
			":aerial_tramway:": {unicode: ["1f6a1"], fname: "1f6a1", uc: "1f6a1", isCanonical: !0},
			":rowboat:": {
				unicode: ["1f6a3"],
				fname: "1f6a3", uc: "1f6a3", isCanonical: !0
			},
			":vertical_traffic_light:": {unicode: ["1f6a6"], fname: "1f6a6", uc: "1f6a6", isCanonical: !0},
			":put_litter_in_its_place:": {unicode: ["1f6ae"], fname: "1f6ae", uc: "1f6ae", isCanonical: !0},
			":do_not_litter:": {unicode: ["1f6af"], fname: "1f6af", uc: "1f6af", isCanonical: !0},
			":potable_water:": {unicode: ["1f6b0"], fname: "1f6b0", uc: "1f6b0", isCanonical: !0},
			":non-potable_water:": {unicode: ["1f6b1"], fname: "1f6b1", uc: "1f6b1", isCanonical: !0},
			":no_bicycles:": {
				unicode: ["1f6b3"], fname: "1f6b3",
				uc: "1f6b3", isCanonical: !0
			},
			":bicyclist:": {unicode: ["1f6b4"], fname: "1f6b4", uc: "1f6b4", isCanonical: !0},
			":mountain_bicyclist:": {unicode: ["1f6b5"], fname: "1f6b5", uc: "1f6b5", isCanonical: !0},
			":no_pedestrians:": {unicode: ["1f6b7"], fname: "1f6b7", uc: "1f6b7", isCanonical: !0},
			":children_crossing:": {unicode: ["1f6b8"], fname: "1f6b8", uc: "1f6b8", isCanonical: !0},
			":shower:": {unicode: ["1f6bf"], fname: "1f6bf", uc: "1f6bf", isCanonical: !0},
			":bathtub:": {unicode: ["1f6c1"], fname: "1f6c1", uc: "1f6c1", isCanonical: !0},
			":passport_control:": {
				unicode: ["1f6c2"],
				fname: "1f6c2", uc: "1f6c2", isCanonical: !0
			},
			":customs:": {unicode: ["1f6c3"], fname: "1f6c3", uc: "1f6c3", isCanonical: !0},
			":baggage_claim:": {unicode: ["1f6c4"], fname: "1f6c4", uc: "1f6c4", isCanonical: !0},
			":left_luggage:": {unicode: ["1f6c5"], fname: "1f6c5", uc: "1f6c5", isCanonical: !0},
			":earth_africa:": {unicode: ["1f30d"], fname: "1f30d", uc: "1f30d", isCanonical: !0},
			":earth_americas:": {unicode: ["1f30e"], fname: "1f30e", uc: "1f30e", isCanonical: !0},
			":globe_with_meridians:": {unicode: ["1f310"], fname: "1f310", uc: "1f310", isCanonical: !0},
			":waxing_crescent_moon:": {unicode: ["1f312"], fname: "1f312", uc: "1f312", isCanonical: !0},
			":waning_gibbous_moon:": {unicode: ["1f316"], fname: "1f316", uc: "1f316", isCanonical: !0},
			":last_quarter_moon:": {unicode: ["1f317"], fname: "1f317", uc: "1f317", isCanonical: !0},
			":waning_crescent_moon:": {unicode: ["1f318"], fname: "1f318", uc: "1f318", isCanonical: !0},
			":new_moon_with_face:": {unicode: ["1f31a"], fname: "1f31a", uc: "1f31a", isCanonical: !0},
			":last_quarter_moon_with_face:": {unicode: ["1f31c"], fname: "1f31c", uc: "1f31c", isCanonical: !0},
			":full_moon_with_face:": {unicode: ["1f31d"], fname: "1f31d", uc: "1f31d", isCanonical: !0},
			":sun_with_face:": {unicode: ["1f31e"], fname: "1f31e", uc: "1f31e", isCanonical: !0},
			":evergreen_tree:": {unicode: ["1f332"], fname: "1f332", uc: "1f332", isCanonical: !0},
			":deciduous_tree:": {unicode: ["1f333"], fname: "1f333", uc: "1f333", isCanonical: !0},
			":lemon:": {unicode: ["1f34b"], fname: "1f34b", uc: "1f34b", isCanonical: !0},
			":pear:": {unicode: ["1f350"], fname: "1f350", uc: "1f350", isCanonical: !0},
			":baby_bottle:": {
				unicode: ["1f37c"], fname: "1f37c",
				uc: "1f37c", isCanonical: !0
			},
			":horse_racing:": {unicode: ["1f3c7"], fname: "1f3c7", uc: "1f3c7", isCanonical: !0},
			":rugby_football:": {unicode: ["1f3c9"], fname: "1f3c9", uc: "1f3c9", isCanonical: !0},
			":european_post_office:": {unicode: ["1f3e4"], fname: "1f3e4", uc: "1f3e4", isCanonical: !0},
			":rat:": {unicode: ["1f400"], fname: "1f400", uc: "1f400", isCanonical: !0},
			":mouse2:": {unicode: ["1f401"], fname: "1f401", uc: "1f401", isCanonical: !0},
			":ox:": {unicode: ["1f402"], fname: "1f402", uc: "1f402", isCanonical: !0},
			":water_buffalo:": {
				unicode: ["1f403"],
				fname: "1f403", uc: "1f403", isCanonical: !0
			},
			":cow2:": {unicode: ["1f404"], fname: "1f404", uc: "1f404", isCanonical: !0},
			":tiger2:": {unicode: ["1f405"], fname: "1f405", uc: "1f405", isCanonical: !0},
			":leopard:": {unicode: ["1f406"], fname: "1f406", uc: "1f406", isCanonical: !0},
			":rabbit2:": {unicode: ["1f407"], fname: "1f407", uc: "1f407", isCanonical: !0},
			":cat2:": {unicode: ["1f408"], fname: "1f408", uc: "1f408", isCanonical: !0},
			":dragon:": {unicode: ["1f409"], fname: "1f409", uc: "1f409", isCanonical: !0},
			":crocodile:": {
				unicode: ["1f40a"], fname: "1f40a",
				uc: "1f40a", isCanonical: !0
			},
			":whale2:": {unicode: ["1f40b"], fname: "1f40b", uc: "1f40b", isCanonical: !0},
			":ram:": {unicode: ["1f40f"], fname: "1f40f", uc: "1f40f", isCanonical: !0},
			":goat:": {unicode: ["1f410"], fname: "1f410", uc: "1f410", isCanonical: !0},
			":rooster:": {unicode: ["1f413"], fname: "1f413", uc: "1f413", isCanonical: !0},
			":dog2:": {unicode: ["1f415"], fname: "1f415", uc: "1f415", isCanonical: !0},
			":pig2:": {unicode: ["1f416"], fname: "1f416", uc: "1f416", isCanonical: !0},
			":dromedary_camel:": {
				unicode: ["1f42a"], fname: "1f42a", uc: "1f42a",
				isCanonical: !0
			},
			":busts_in_silhouette:": {unicode: ["1f465"], fname: "1f465", uc: "1f465", isCanonical: !0},
			":two_men_holding_hands:": {unicode: ["1f46c"], fname: "1f46c", uc: "1f46c", isCanonical: !0},
			":two_women_holding_hands:": {unicode: ["1f46d"], fname: "1f46d", uc: "1f46d", isCanonical: !0},
			":thought_balloon:": {unicode: ["1f4ad"], fname: "1f4ad", uc: "1f4ad", isCanonical: !0},
			":euro:": {unicode: ["1f4b6"], fname: "1f4b6", uc: "1f4b6", isCanonical: !0},
			":pound:": {unicode: ["1f4b7"], fname: "1f4b7", uc: "1f4b7", isCanonical: !0},
			":mailbox_with_mail:": {
				unicode: ["1f4ec"],
				fname: "1f4ec", uc: "1f4ec", isCanonical: !0
			},
			":mailbox_with_no_mail:": {unicode: ["1f4ed"], fname: "1f4ed", uc: "1f4ed", isCanonical: !0},
			":postal_horn:": {unicode: ["1f4ef"], fname: "1f4ef", uc: "1f4ef", isCanonical: !0},
			":no_mobile_phones:": {unicode: ["1f4f5"], fname: "1f4f5", uc: "1f4f5", isCanonical: !0},
			":twisted_rightwards_arrows:": {unicode: ["1f500"], fname: "1f500", uc: "1f500", isCanonical: !0},
			":repeat:": {unicode: ["1f501"], fname: "1f501", uc: "1f501", isCanonical: !0},
			":repeat_one:": {
				unicode: ["1f502"], fname: "1f502", uc: "1f502",
				isCanonical: !0
			},
			":arrows_counterclockwise:": {unicode: ["1f504"], fname: "1f504", uc: "1f504", isCanonical: !0},
			":low_brightness:": {unicode: ["1f505"], fname: "1f505", uc: "1f505", isCanonical: !0},
			":high_brightness:": {unicode: ["1f506"], fname: "1f506", uc: "1f506", isCanonical: !0},
			":mute:": {unicode: ["1f507"], fname: "1f507", uc: "1f507", isCanonical: !0},
			":sound:": {unicode: ["1f509"], fname: "1f509", uc: "1f509", isCanonical: !0},
			":no_bell:": {unicode: ["1f515"], fname: "1f515", uc: "1f515", isCanonical: !0},
			":microscope:": {
				unicode: ["1f52c"],
				fname: "1f52c", uc: "1f52c", isCanonical: !0
			},
			":telescope:": {unicode: ["1f52d"], fname: "1f52d", uc: "1f52d", isCanonical: !0},
			":clock130:": {unicode: ["1f55c"], fname: "1f55c", uc: "1f55c", isCanonical: !0},
			":clock230:": {unicode: ["1f55d"], fname: "1f55d", uc: "1f55d", isCanonical: !0},
			":clock330:": {unicode: ["1f55e"], fname: "1f55e", uc: "1f55e", isCanonical: !0},
			":clock430:": {unicode: ["1f55f"], fname: "1f55f", uc: "1f55f", isCanonical: !0},
			":clock530:": {unicode: ["1f560"], fname: "1f560", uc: "1f560", isCanonical: !0},
			":clock630:": {
				unicode: ["1f561"],
				fname: "1f561", uc: "1f561", isCanonical: !0
			},
			":clock730:": {unicode: ["1f562"], fname: "1f562", uc: "1f562", isCanonical: !0},
			":clock830:": {unicode: ["1f563"], fname: "1f563", uc: "1f563", isCanonical: !0},
			":clock930:": {unicode: ["1f564"], fname: "1f564", uc: "1f564", isCanonical: !0},
			":clock1030:": {unicode: ["1f565"], fname: "1f565", uc: "1f565", isCanonical: !0},
			":clock1130:": {unicode: ["1f566"], fname: "1f566", uc: "1f566", isCanonical: !0},
			":clock1230:": {unicode: ["1f567"], fname: "1f567", uc: "1f567", isCanonical: !0},
			":speaker:": {
				unicode: ["1f508"],
				fname: "1f508", uc: "1f508", isCanonical: !0
			},
			":train:": {unicode: ["1f68b"], fname: "1f68b", uc: "1f68b", isCanonical: !0},
			":medal:": {unicode: ["1f3c5"], fname: "1f3c5", uc: "1f3c5", isCanonical: !0},
			":sports_medal:": {unicode: ["1f3c5"], fname: "1f3c5", uc: "1f3c5", isCanonical: !1},
			":flag_black:": {unicode: ["1f3f4"], fname: "1f3f4", uc: "1f3f4", isCanonical: !0},
			":waving_black_flag:": {unicode: ["1f3f4"], fname: "1f3f4", uc: "1f3f4", isCanonical: !1},
			":camera_with_flash:": {unicode: ["1f4f8"], fname: "1f4f8", uc: "1f4f8", isCanonical: !0},
			":sleeping_accommodation:": {
				unicode: ["1f6cc"],
				fname: "1f6cc", uc: "1f6cc", isCanonical: !0
			},
			":middle_finger:": {unicode: ["1f595"], fname: "1f595", uc: "1f595", isCanonical: !0},
			":reversed_hand_with_middle_finger_extended:": {
				unicode: ["1f595"],
				fname: "1f595",
				uc: "1f595",
				isCanonical: !1
			},
			":vulcan:": {unicode: ["1f596"], fname: "1f596", uc: "1f596", isCanonical: !0},
			":raised_hand_with_part_between_middle_and_ring_fingers:": {
				unicode: ["1f596"],
				fname: "1f596",
				uc: "1f596",
				isCanonical: !1
			},
			":slight_frown:": {unicode: ["1f641"], fname: "1f641", uc: "1f641", isCanonical: !0},
			":slightly_frowning_face:": {
				unicode: ["1f641"],
				fname: "1f641", uc: "1f641", isCanonical: !1
			},
			":slight_smile:": {unicode: ["1f642"], fname: "1f642", uc: "1f642", isCanonical: !0},
			":slightly_smiling_face:": {unicode: ["1f642"], fname: "1f642", uc: "1f642", isCanonical: !1},
			":airplane_departure:": {unicode: ["1f6eb"], fname: "1f6eb", uc: "1f6eb", isCanonical: !0},
			":airplane_arriving:": {unicode: ["1f6ec"], fname: "1f6ec", uc: "1f6ec", isCanonical: !0},
			":tone1:": {unicode: ["1f3fb"], fname: "1f3fb", uc: "1f3fb", isCanonical: !0},
			":tone2:": {unicode: ["1f3fc"], fname: "1f3fc", uc: "1f3fc", isCanonical: !0},
			":tone3:": {unicode: ["1f3fd"], fname: "1f3fd", uc: "1f3fd", isCanonical: !0},
			":tone4:": {unicode: ["1f3fe"], fname: "1f3fe", uc: "1f3fe", isCanonical: !0},
			":tone5:": {unicode: ["1f3ff"], fname: "1f3ff", uc: "1f3ff", isCanonical: !0},
			":upside_down:": {unicode: ["1f643"], fname: "1f643", uc: "1f643", isCanonical: !0},
			":upside_down_face:": {unicode: ["1f643"], fname: "1f643", uc: "1f643", isCanonical: !1},
			":money_mouth:": {unicode: ["1f911"], fname: "1f911", uc: "1f911", isCanonical: !0},
			":money_mouth_face:": {
				unicode: ["1f911"], fname: "1f911", uc: "1f911",
				isCanonical: !1
			},
			":nerd:": {unicode: ["1f913"], fname: "1f913", uc: "1f913", isCanonical: !0},
			":nerd_face:": {unicode: ["1f913"], fname: "1f913", uc: "1f913", isCanonical: !1},
			":hugging:": {unicode: ["1f917"], fname: "1f917", uc: "1f917", isCanonical: !0},
			":hugging_face:": {unicode: ["1f917"], fname: "1f917", uc: "1f917", isCanonical: !1},
			":rolling_eyes:": {unicode: ["1f644"], fname: "1f644", uc: "1f644", isCanonical: !0},
			":face_with_rolling_eyes:": {unicode: ["1f644"], fname: "1f644", uc: "1f644", isCanonical: !1},
			":thinking:": {
				unicode: ["1f914"],
				fname: "1f914", uc: "1f914", isCanonical: !0
			},
			":thinking_face:": {unicode: ["1f914"], fname: "1f914", uc: "1f914", isCanonical: !1},
			":zipper_mouth:": {unicode: ["1f910"], fname: "1f910", uc: "1f910", isCanonical: !0},
			":zipper_mouth_face:": {unicode: ["1f910"], fname: "1f910", uc: "1f910", isCanonical: !1},
			":thermometer_face:": {unicode: ["1f912"], fname: "1f912", uc: "1f912", isCanonical: !0},
			":face_with_thermometer:": {unicode: ["1f912"], fname: "1f912", uc: "1f912", isCanonical: !1},
			":head_bandage:": {
				unicode: ["1f915"], fname: "1f915", uc: "1f915",
				isCanonical: !0
			},
			":face_with_head_bandage:": {unicode: ["1f915"], fname: "1f915", uc: "1f915", isCanonical: !1},
			":robot:": {unicode: ["1f916"], fname: "1f916", uc: "1f916", isCanonical: !0},
			":robot_face:": {unicode: ["1f916"], fname: "1f916", uc: "1f916", isCanonical: !1},
			":lion_face:": {unicode: ["1f981"], fname: "1f981", uc: "1f981", isCanonical: !0},
			":lion:": {unicode: ["1f981"], fname: "1f981", uc: "1f981", isCanonical: !1},
			":unicorn:": {unicode: ["1f984"], fname: "1f984", uc: "1f984", isCanonical: !0},
			":unicorn_face:": {
				unicode: ["1f984"], fname: "1f984",
				uc: "1f984", isCanonical: !1
			},
			":scorpion:": {unicode: ["1f982"], fname: "1f982", uc: "1f982", isCanonical: !0},
			":crab:": {unicode: ["1f980"], fname: "1f980", uc: "1f980", isCanonical: !0},
			":turkey:": {unicode: ["1f983"], fname: "1f983", uc: "1f983", isCanonical: !0},
			":cheese:": {unicode: ["1f9c0"], fname: "1f9c0", uc: "1f9c0", isCanonical: !0},
			":cheese_wedge:": {unicode: ["1f9c0"], fname: "1f9c0", uc: "1f9c0", isCanonical: !1},
			":hotdog:": {unicode: ["1f32d"], fname: "1f32d", uc: "1f32d", isCanonical: !0},
			":hot_dog:": {
				unicode: ["1f32d"], fname: "1f32d",
				uc: "1f32d", isCanonical: !1
			},
			":taco:": {unicode: ["1f32e"], fname: "1f32e", uc: "1f32e", isCanonical: !0},
			":burrito:": {unicode: ["1f32f"], fname: "1f32f", uc: "1f32f", isCanonical: !0},
			":popcorn:": {unicode: ["1f37f"], fname: "1f37f", uc: "1f37f", isCanonical: !0},
			":champagne:": {unicode: ["1f37e"], fname: "1f37e", uc: "1f37e", isCanonical: !0},
			":bottle_with_popping_cork:": {unicode: ["1f37e"], fname: "1f37e", uc: "1f37e", isCanonical: !1},
			":bow_and_arrow:": {unicode: ["1f3f9"], fname: "1f3f9", uc: "1f3f9", isCanonical: !0},
			":archery:": {
				unicode: ["1f3f9"],
				fname: "1f3f9", uc: "1f3f9", isCanonical: !1
			},
			":amphora:": {unicode: ["1f3fa"], fname: "1f3fa", uc: "1f3fa", isCanonical: !0},
			":place_of_worship:": {unicode: ["1f6d0"], fname: "1f6d0", uc: "1f6d0", isCanonical: !0},
			":worship_symbol:": {unicode: ["1f6d0"], fname: "1f6d0", uc: "1f6d0", isCanonical: !1},
			":kaaba:": {unicode: ["1f54b"], fname: "1f54b", uc: "1f54b", isCanonical: !0},
			":mosque:": {unicode: ["1f54c"], fname: "1f54c", uc: "1f54c", isCanonical: !0},
			":synagogue:": {unicode: ["1f54d"], fname: "1f54d", uc: "1f54d", isCanonical: !0},
			":menorah:": {
				unicode: ["1f54e"],
				fname: "1f54e", uc: "1f54e", isCanonical: !0
			},
			":prayer_beads:": {unicode: ["1f4ff"], fname: "1f4ff", uc: "1f4ff", isCanonical: !0},
			":cricket:": {unicode: ["1f3cf"], fname: "1f3cf", uc: "1f3cf", isCanonical: !0},
			":cricket_bat_ball:": {unicode: ["1f3cf"], fname: "1f3cf", uc: "1f3cf", isCanonical: !1},
			":volleyball:": {unicode: ["1f3d0"], fname: "1f3d0", uc: "1f3d0", isCanonical: !0},
			":field_hockey:": {unicode: ["1f3d1"], fname: "1f3d1", uc: "1f3d1", isCanonical: !0},
			":hockey:": {unicode: ["1f3d2"], fname: "1f3d2", uc: "1f3d2", isCanonical: !0},
			":ping_pong:": {
				unicode: ["1f3d3"],
				fname: "1f3d3", uc: "1f3d3", isCanonical: !0
			},
			":table_tennis:": {unicode: ["1f3d3"], fname: "1f3d3", uc: "1f3d3", isCanonical: !1},
			":badminton:": {unicode: ["1f3f8"], fname: "1f3f8", uc: "1f3f8", isCanonical: !0},
			":drum:": {unicode: ["1f941"], fname: "1f941", uc: "1f941", isCanonical: !0},
			":drum_with_drumsticks:": {unicode: ["1f941"], fname: "1f941", uc: "1f941", isCanonical: !1},
			":shrimp:": {unicode: ["1f990"], fname: "1f990", uc: "1f990", isCanonical: !0},
			":squid:": {unicode: ["1f991"], fname: "1f991", uc: "1f991", isCanonical: !0},
			":egg:": {
				unicode: ["1f95a"],
				fname: "1f95a", uc: "1f95a", isCanonical: !0
			},
			":milk:": {unicode: ["1f95b"], fname: "1f95b", uc: "1f95b", isCanonical: !0},
			":glass_of_milk:": {unicode: ["1f95b"], fname: "1f95b", uc: "1f95b", isCanonical: !1},
			":peanuts:": {unicode: ["1f95c"], fname: "1f95c", uc: "1f95c", isCanonical: !0},
			":shelled_peanut:": {unicode: ["1f95c"], fname: "1f95c", uc: "1f95c", isCanonical: !1},
			":kiwi:": {unicode: ["1f95d"], fname: "1f95d", uc: "1f95d", isCanonical: !0},
			":kiwifruit:": {unicode: ["1f95d"], fname: "1f95d", uc: "1f95d", isCanonical: !1},
			":pancakes:": {
				unicode: ["1f95e"],
				fname: "1f95e", uc: "1f95e", isCanonical: !0
			},
			":regional_indicator_w:": {unicode: ["1f1fc"], fname: "1f1fc", uc: "1f1fc", isCanonical: !0},
			":regional_indicator_v:": {unicode: ["1f1fb"], fname: "1f1fb", uc: "1f1fb", isCanonical: !0},
			":regional_indicator_u:": {unicode: ["1f1fa"], fname: "1f1fa", uc: "1f1fa", isCanonical: !0},
			":regional_indicator_t:": {unicode: ["1f1f9"], fname: "1f1f9", uc: "1f1f9", isCanonical: !0},
			":regional_indicator_s:": {unicode: ["1f1f8"], fname: "1f1f8", uc: "1f1f8", isCanonical: !0},
			":regional_indicator_r:": {
				unicode: ["1f1f7"],
				fname: "1f1f7", uc: "1f1f7", isCanonical: !0
			},
			":regional_indicator_q:": {unicode: ["1f1f6"], fname: "1f1f6", uc: "1f1f6", isCanonical: !0},
			":regional_indicator_p:": {unicode: ["1f1f5"], fname: "1f1f5", uc: "1f1f5", isCanonical: !0},
			":regional_indicator_o:": {unicode: ["1f1f4"], fname: "1f1f4", uc: "1f1f4", isCanonical: !0},
			":regional_indicator_n:": {unicode: ["1f1f3"], fname: "1f1f3", uc: "1f1f3", isCanonical: !0},
			":regional_indicator_m:": {unicode: ["1f1f2"], fname: "1f1f2", uc: "1f1f2", isCanonical: !0},
			":regional_indicator_l:": {
				unicode: ["1f1f1"],
				fname: "1f1f1", uc: "1f1f1", isCanonical: !0
			},
			":regional_indicator_k:": {unicode: ["1f1f0"], fname: "1f1f0", uc: "1f1f0", isCanonical: !0},
			":regional_indicator_j:": {unicode: ["1f1ef"], fname: "1f1ef", uc: "1f1ef", isCanonical: !0},
			":regional_indicator_i:": {unicode: ["1f1ee"], fname: "1f1ee", uc: "1f1ee", isCanonical: !0},
			":regional_indicator_h:": {unicode: ["1f1ed"], fname: "1f1ed", uc: "1f1ed", isCanonical: !0},
			":regional_indicator_g:": {unicode: ["1f1ec"], fname: "1f1ec", uc: "1f1ec", isCanonical: !0},
			":regional_indicator_f:": {
				unicode: ["1f1eb"],
				fname: "1f1eb", uc: "1f1eb", isCanonical: !0
			},
			":regional_indicator_e:": {unicode: ["1f1ea"], fname: "1f1ea", uc: "1f1ea", isCanonical: !0},
			":regional_indicator_d:": {unicode: ["1f1e9"], fname: "1f1e9", uc: "1f1e9", isCanonical: !0},
			":regional_indicator_c:": {unicode: ["1f1e8"], fname: "1f1e8", uc: "1f1e8", isCanonical: !0},
			":regional_indicator_b:": {unicode: ["1f1e7"], fname: "1f1e7", uc: "1f1e7", isCanonical: !0},
			":regional_indicator_a:": {unicode: ["1f1e6"], fname: "1f1e6", uc: "1f1e6", isCanonical: !0},
			":fast_forward:": {
				unicode: ["23e9"],
				fname: "23e9", uc: "23e9", isCanonical: !0
			},
			":rewind:": {unicode: ["23ea"], fname: "23ea", uc: "23ea", isCanonical: !0},
			":arrow_double_up:": {unicode: ["23eb"], fname: "23eb", uc: "23eb", isCanonical: !0},
			":arrow_double_down:": {unicode: ["23ec"], fname: "23ec", uc: "23ec", isCanonical: !0},
			":alarm_clock:": {unicode: ["23f0"], fname: "23f0", uc: "23f0", isCanonical: !0},
			":hourglass_flowing_sand:": {unicode: ["23f3"], fname: "23f3", uc: "23f3", isCanonical: !0},
			":ophiuchus:": {unicode: ["26ce"], fname: "26ce", uc: "26ce", isCanonical: !0},
			":white_check_mark:": {
				unicode: ["2705"],
				fname: "2705", uc: "2705", isCanonical: !0
			},
			":fist:": {unicode: ["270a"], fname: "270a", uc: "270a", isCanonical: !0},
			":raised_hand:": {unicode: ["270b"], fname: "270b", uc: "270b", isCanonical: !0},
			":sparkles:": {unicode: ["2728"], fname: "2728", uc: "2728", isCanonical: !0},
			":x:": {unicode: ["274c"], fname: "274c", uc: "274c", isCanonical: !0},
			":negative_squared_cross_mark:": {unicode: ["274e"], fname: "274e", uc: "274e", isCanonical: !0},
			":question:": {unicode: ["2753"], fname: "2753", uc: "2753", isCanonical: !0},
			":grey_question:": {
				unicode: ["2754"],
				fname: "2754", uc: "2754", isCanonical: !0
			},
			":grey_exclamation:": {unicode: ["2755"], fname: "2755", uc: "2755", isCanonical: !0},
			":heavy_plus_sign:": {unicode: ["2795"], fname: "2795", uc: "2795", isCanonical: !0},
			":heavy_minus_sign:": {unicode: ["2796"], fname: "2796", uc: "2796", isCanonical: !0},
			":heavy_division_sign:": {unicode: ["2797"], fname: "2797", uc: "2797", isCanonical: !0},
			":curly_loop:": {unicode: ["27b0"], fname: "27b0", uc: "27b0", isCanonical: !0},
			":loop:": {unicode: ["27bf"], fname: "27bf", uc: "27bf", isCanonical: !0}
		};
		var c = [],
			d;
		for (d in a.emojioneList) a.emojioneList.hasOwnProperty(d) && c.push(d.replace(/[+]/g, "\\$&"));
		a.shortnames = c.join("|");
		a.asciiList = {
			"<3": "2764",
			"</3": "1f494",
			":')": "1f602",
			":'-)": "1f602",
			":D": "1f603",
			":-D": "1f603",
			"=D": "1f603",
			":)": "1f642",
			":-)": "1f642",
			"=]": "1f642",
			"=)": "1f642",
			":]": "1f642",
			"':)": "1f605",
			"':-)": "1f605",
			"'=)": "1f605",
			"':D": "1f605",
			"':-D": "1f605",
			"'=D": "1f605",
			">:)": "1f606",
			">;)": "1f606",
			">:-)": "1f606",
			">=)": "1f606",
			";)": "1f609",
			";-)": "1f609",
			"*-)": "1f609",
			"*)": "1f609",
			";-]": "1f609",
			";]": "1f609",
			";D": "1f609",
			";^)": "1f609",
			"':(": "1f613",
			"':-(": "1f613",
			"'=(": "1f613",
			":*": "1f618",
			":-*": "1f618",
			"=*": "1f618",
			":^*": "1f618",
			">:P": "1f61c",
			"X-P": "1f61c",
			"x-p": "1f61c",
			">:[": "1f61e",
			":-(": "1f61e",
			":(": "1f61e",
			":-[": "1f61e",
			":[": "1f61e",
			"=(": "1f61e",
			">:(": "1f620",
			">:-(": "1f620",
			":@": "1f620",
			":'(": "1f622",
			":'-(": "1f622",
			";(": "1f622",
			";-(": "1f622",
			">.<": "1f623",
			"D:": "1f628",
			":$": "1f633",
			"=$": "1f633",
			"#-)": "1f635",
			"#)": "1f635",
			"%-)": "1f635",
			"%)": "1f635",
			"X)": "1f635",
			"X-)": "1f635",
			"*\\0/*": "1f646",
			"\\0/": "1f646",
			"*\\O/*": "1f646",
			"\\O/": "1f646",
			"O:-)": "1f607",
			"0:-3": "1f607",
			"0:3": "1f607",
			"0:-)": "1f607",
			"0:)": "1f607",
			"0;^)": "1f607",
			"O:)": "1f607",
			"O;-)": "1f607",
			"O=)": "1f607",
			"0;-)": "1f607",
			"O:-3": "1f607",
			"O:3": "1f607",
			"B-)": "1f60e",
			"B)": "1f60e",
			"8)": "1f60e",
			"8-)": "1f60e",
			"B-D": "1f60e",
			"8-D": "1f60e",
			"-_-": "1f611",
			"-__-": "1f611",
			"-___-": "1f611",
			">:\\": "1f615",
			">:/": "1f615",
			":-/": "1f615",
			":-.": "1f615",
			":/": "1f615",
			":\\": "1f615",
			"=/": "1f615",
			"=\\": "1f615",
			":L": "1f615",
			"=L": "1f615",
			":P": "1f61b",
			":-P": "1f61b",
			"=P": "1f61b",
			":-p": "1f61b",
			":p": "1f61b",
			"=p": "1f61b",
			":-\u00de": "1f61b",
			":\u00de": "1f61b",
			":\u00fe": "1f61b",
			":-\u00fe": "1f61b",
			":-b": "1f61b",
			":b": "1f61b",
			"d:": "1f61b",
			":-O": "1f62e",
			":O": "1f62e",
			":-o": "1f62e",
			":o": "1f62e",
			O_O: "1f62e",
			">:O": "1f62e",
			":-X": "1f636",
			":X": "1f636",
			":-#": "1f636",
			":#": "1f636",
			"=X": "1f636",
			"=x": "1f636",
			":x": "1f636",
			":-x": "1f636",
			"=#": "1f636"
		};
		a.asciiRegexp = "(\\<3|&lt;3|\\<\\/3|&lt;\\/3|\\:'\\)|\\:'\\-\\)|\\:D|\\:\\-D|\\=D|\\:\\)|\\:\\-\\)|\\=\\]|\\=\\)|\\:\\]|'\\:\\)|'\\:\\-\\)|'\\=\\)|'\\:D|'\\:\\-D|'\\=D|\\>\\:\\)|&gt;\\:\\)|\\>;\\)|&gt;;\\)|\\>\\:\\-\\)|&gt;\\:\\-\\)|\\>\\=\\)|&gt;\\=\\)|;\\)|;\\-\\)|\\*\\-\\)|\\*\\)|;\\-\\]|;\\]|;D|;\\^\\)|'\\:\\(|'\\:\\-\\(|'\\=\\(|\\:\\*|\\:\\-\\*|\\=\\*|\\:\\^\\*|\\>\\:P|&gt;\\:P|X\\-P|x\\-p|\\>\\:\\[|&gt;\\:\\[|\\:\\-\\(|\\:\\(|\\:\\-\\[|\\:\\[|\\=\\(|\\>\\:\\(|&gt;\\:\\(|\\>\\:\\-\\(|&gt;\\:\\-\\(|\\:@|\\:'\\(|\\:'\\-\\(|;\\(|;\\-\\(|\\>\\.\\<|&gt;\\.&lt;|D\\:|\\:\\$|\\=\\$|#\\-\\)|#\\)|%\\-\\)|%\\)|X\\)|X\\-\\)|\\*\\\\0\\/\\*|\\\\0\\/|\\*\\\\O\\/\\*|\\\\O\\/|O\\:\\-\\)|0\\:\\-3|0\\:3|0\\:\\-\\)|0\\:\\)|0;\\^\\)|O\\:\\-\\)|O\\:\\)|O;\\-\\)|O\\=\\)|0;\\-\\)|O\\:\\-3|O\\:3|B\\-\\)|B\\)|8\\)|8\\-\\)|B\\-D|8\\-D|\\-_\\-|\\-__\\-|\\-___\\-|\\>\\:\\\\|&gt;\\:\\\\|\\>\\:\\/|&gt;\\:\\/|\\:\\-\\/|\\:\\-\\.|\\:\\/|\\:\\\\|\\=\\/|\\=\\\\|\\:L|\\=L|\\:P|\\:\\-P|\\=P|\\:\\-p|\\:p|\\=p|\\:\\-\u00de|\\:\\-&THORN;|\\:\u00de|\\:&THORN;|\\:\u00fe|\\:&thorn;|\\:\\-\u00fe|\\:\\-&thorn;|\\:\\-b|\\:b|d\\:|\\:\\-O|\\:O|\\:\\-o|\\:o|O_O|\\>\\:O|&gt;\\:O|\\:\\-X|\\:X|\\:\\-#|\\:#|\\=X|\\=x|\\:x|\\:\\-x|\\=#)";
		a.unicodeRegexp = "(\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69|\\uD83D\\uDC68\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69|\\uD83D\\uDC68\\uD83D\\uDC69\\uD83D\\uDC67\\uD83D\\uDC66|\\uD83D\\uDC68\\uD83D\\uDC69\\uD83D\\uDC66\\uD83D\\uDC66|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\\uD83D\\uDC66|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC67\\uD83D\\uDC67|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC67\\uD83D\\uDC66|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC67\\uD83D\\uDC66|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC67\\uD83D\\uDC67|\\uD83D\\uDC68\\uD83D\\uDC69\\uD83D\\uDC67\\uD83D\\uDC67|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC66\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u2764\\uD83D\\uDC8B\\uD83D\\uDC69|\\uD83D\\uDC68\\u2764\\uD83D\\uDC8B\\uD83D\\uDC68|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC67|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC66|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC67|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC68\\uD83D\\uDC69\\uD83D\\uDC67|\\uD83D\\uDC68\\u2764\\uD83D\\uDC68|\\uD83D\\uDC41\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69\\u2764\\uD83D\\uDC69|\\uD83D\\uDC41\\uD83D\\uDDE8|\\uD83C\\uDDE6\\uD83C\\uDDE8|\\uD83C\\uDDE6\\uD83C\\uDDE9|\\uD83C\\uDDE6\\uD83C\\uDDEA|\\uD83C\\uDDE6\\uD83C\\uDDEB|\\uD83C\\uDDE6\\uD83C\\uDDEC|\\uD83C\\uDDE6\\uD83C\\uDDEE|\\uD83C\\uDDE6\\uD83C\\uDDF1|\\uD83C\\uDDE6\\uD83C\\uDDF2|\\uD83C\\uDDE6\\uD83C\\uDDF4|\\uD83C\\uDDE6\\uD83C\\uDDF6|\\uD83C\\uDDE6\\uD83C\\uDDF7|\\uD83C\\uDDE6\\uD83C\\uDDF8|\\uD83E\\uDD3E\\uD83C\\uDFFF|\\uD83E\\uDD3E\\uD83C\\uDFFE|\\uD83E\\uDD3E\\uD83C\\uDFFD|\\uD83E\\uDD3E\\uD83C\\uDFFC|\\uD83E\\uDD3E\\uD83C\\uDFFB|\\uD83E\\uDD3D\\uD83C\\uDFFF|\\uD83E\\uDD3D\\uD83C\\uDFFE|\\uD83E\\uDD3D\\uD83C\\uDFFD|\\uD83E\\uDD3D\\uD83C\\uDFFC|\\uD83E\\uDD3D\\uD83C\\uDFFB|\\uD83E\\uDD3C\\uD83C\\uDFFF|\\uD83E\\uDD3C\\uD83C\\uDFFE|\\uD83E\\uDD3C\\uD83C\\uDFFD|\\uD83E\\uDD3C\\uD83C\\uDFFC|\\uD83E\\uDD3C\\uD83C\\uDFFB|\\uD83E\\uDD39\\uD83C\\uDFFF|\\uD83E\\uDD39\\uD83C\\uDFFE|\\uD83E\\uDD39\\uD83C\\uDFFD|\\uD83E\\uDD39\\uD83C\\uDFFC|\\uD83E\\uDD39\\uD83C\\uDFFB|\\uD83E\\uDD38\\uD83C\\uDFFF|\\uD83E\\uDD38\\uD83C\\uDFFE|\\uD83E\\uDD38\\uD83C\\uDFFD|\\uD83E\\uDD38\\uD83C\\uDFFC|\\uD83E\\uDD38\\uD83C\\uDFFB|\\uD83E\\uDD37\\uD83C\\uDFFF|\\uD83E\\uDD37\\uD83C\\uDFFE|\\uD83E\\uDD37\\uD83C\\uDFFD|\\uD83E\\uDD37\\uD83C\\uDFFC|\\uD83E\\uDD37\\uD83C\\uDFFB|\\uD83E\\uDD36\\uD83C\\uDFFF|\\uD83E\\uDD36\\uD83C\\uDFFE|\\uD83E\\uDD36\\uD83C\\uDFFD|\\uD83E\\uDD36\\uD83C\\uDFFC|\\uD83E\\uDD36\\uD83C\\uDFFB|\\uD83E\\uDD35\\uD83C\\uDFFF|\\uD83E\\uDD35\\uD83C\\uDFFE|\\uD83E\\uDD35\\uD83C\\uDFFD|\\uD83E\\uDD35\\uD83C\\uDFFC|\\uD83E\\uDD35\\uD83C\\uDFFB|\\uD83E\\uDD34\\uD83C\\uDFFF|\\uD83E\\uDD34\\uD83C\\uDFFE|\\uD83E\\uDD34\\uD83C\\uDFFD|\\uD83E\\uDD34\\uD83C\\uDFFC|\\uD83E\\uDD34\\uD83C\\uDFFB|\\uD83E\\uDD33\\uD83C\\uDFFF|\\uD83E\\uDD33\\uD83C\\uDFFE|\\uD83E\\uDD33\\uD83C\\uDFFD|\\uD83E\\uDD33\\uD83C\\uDFFC|\\uD83E\\uDD33\\uD83C\\uDFFB|\\uD83E\\uDD30\\uD83C\\uDFFF|\\uD83E\\uDD30\\uD83C\\uDFFE|\\uD83E\\uDD30\\uD83C\\uDFFD|\\uD83E\\uDD30\\uD83C\\uDFFC|\\uD83E\\uDD30\\uD83C\\uDFFB|\\uD83E\\uDD26\\uD83C\\uDFFF|\\uD83E\\uDD26\\uD83C\\uDFFE|\\uD83E\\uDD26\\uD83C\\uDFFD|\\uD83E\\uDD26\\uD83C\\uDFFC|\\uD83E\\uDD26\\uD83C\\uDFFB|\\uD83E\\uDD1E\\uD83C\\uDFFF|\\uD83E\\uDD1E\\uD83C\\uDFFE|\\uD83E\\uDD1E\\uD83C\\uDFFD|\\uD83E\\uDD1E\\uD83C\\uDFFC|\\uD83E\\uDD1E\\uD83C\\uDFFB|\\uD83E\\uDD1D\\uD83C\\uDFFF|\\uD83E\\uDD1D\\uD83C\\uDFFE|\\uD83E\\uDD1D\\uD83C\\uDFFD|\\uD83E\\uDD1D\\uD83C\\uDFFC|\\uD83E\\uDD1D\\uD83C\\uDFFB|\\uD83E\\uDD1C\\uD83C\\uDFFF|\\uD83E\\uDD1C\\uD83C\\uDFFE|\\uD83E\\uDD1C\\uD83C\\uDFFD|\\uD83E\\uDD1C\\uD83C\\uDFFC|\\uD83E\\uDD1C\\uD83C\\uDFFB|\\uD83E\\uDD1B\\uD83C\\uDFFF|\\uD83E\\uDD1B\\uD83C\\uDFFE|\\uD83E\\uDD1B\\uD83C\\uDFFD|\\uD83E\\uDD1B\\uD83C\\uDFFC|\\uD83E\\uDD1B\\uD83C\\uDFFB|\\uD83E\\uDD1A\\uD83C\\uDFFF|\\uD83E\\uDD1A\\uD83C\\uDFFE|\\uD83E\\uDD1A\\uD83C\\uDFFD|\\uD83E\\uDD1A\\uD83C\\uDFFC|\\uD83E\\uDD1A\\uD83C\\uDFFB|\\uD83E\\uDD19\\uD83C\\uDFFF|\\uD83E\\uDD19\\uD83C\\uDFFE|\\uD83E\\uDD19\\uD83C\\uDFFD|\\uD83E\\uDD19\\uD83C\\uDFFC|\\uD83E\\uDD19\\uD83C\\uDFFB|\\uD83E\\uDD18\\uD83C\\uDFFF|\\uD83E\\uDD18\\uD83C\\uDFFE|\\uD83E\\uDD18\\uD83C\\uDFFD|\\uD83E\\uDD18\\uD83C\\uDFFC|\\uD83E\\uDD18\\uD83C\\uDFFB|\\uD83D\\uDEC0\\uD83C\\uDFFF|\\uD83D\\uDEC0\\uD83C\\uDFFE|\\uD83D\\uDEC0\\uD83C\\uDFFD|\\uD83D\\uDEC0\\uD83C\\uDFFC|\\uD83D\\uDEC0\\uD83C\\uDFFB|\\uD83D\\uDEB6\\uD83C\\uDFFF|\\uD83D\\uDEB6\\uD83C\\uDFFE|\\uD83D\\uDEB6\\uD83C\\uDFFD|\\uD83D\\uDEB6\\uD83C\\uDFFC|\\uD83D\\uDEB6\\uD83C\\uDFFB|\\uD83D\\uDEB5\\uD83C\\uDFFF|\\uD83D\\uDEB5\\uD83C\\uDFFE|\\uD83D\\uDEB5\\uD83C\\uDFFD|\\uD83D\\uDEB5\\uD83C\\uDFFC|\\uD83D\\uDEB5\\uD83C\\uDFFB|\\uD83D\\uDEB4\\uD83C\\uDFFF|\\uD83D\\uDEB4\\uD83C\\uDFFE|\\uD83D\\uDEB4\\uD83C\\uDFFD|\\uD83D\\uDEB4\\uD83C\\uDFFC|\\uD83D\\uDEB4\\uD83C\\uDFFB|\\uD83D\\uDEA3\\uD83C\\uDFFF|\\uD83D\\uDEA3\\uD83C\\uDFFE|\\uD83D\\uDEA3\\uD83C\\uDFFD|\\uD83D\\uDEA3\\uD83C\\uDFFC|\\uD83D\\uDEA3\\uD83C\\uDFFB|\\uD83D\\uDE4F\\uD83C\\uDFFF|\\uD83D\\uDE4F\\uD83C\\uDFFE|\\uD83D\\uDE4F\\uD83C\\uDFFD|\\uD83D\\uDE4F\\uD83C\\uDFFC|\\uD83D\\uDE4F\\uD83C\\uDFFB|\\uD83D\\uDE4E\\uD83C\\uDFFF|\\uD83D\\uDE4E\\uD83C\\uDFFE|\\uD83D\\uDE4E\\uD83C\\uDFFD|\\uD83D\\uDE4E\\uD83C\\uDFFC|\\uD83D\\uDE4E\\uD83C\\uDFFB|\\uD83D\\uDE4D\\uD83C\\uDFFF|\\uD83D\\uDE4D\\uD83C\\uDFFE|\\uD83D\\uDE4D\\uD83C\\uDFFD|\\uD83D\\uDE4D\\uD83C\\uDFFC|\\uD83D\\uDE4D\\uD83C\\uDFFB|\\uD83D\\uDE4C\\uD83C\\uDFFF|\\uD83D\\uDE4C\\uD83C\\uDFFE|\\uD83D\\uDE4C\\uD83C\\uDFFD|\\uD83D\\uDE4C\\uD83C\\uDFFC|\\uD83D\\uDE4C\\uD83C\\uDFFB|\\uD83D\\uDE4B\\uD83C\\uDFFF|\\uD83D\\uDE4B\\uD83C\\uDFFE|\\uD83D\\uDE4B\\uD83C\\uDFFD|\\uD83D\\uDE4B\\uD83C\\uDFFC|\\uD83D\\uDE4B\\uD83C\\uDFFB|\\uD83D\\uDE47\\uD83C\\uDFFF|\\uD83D\\uDE47\\uD83C\\uDFFE|\\uD83D\\uDE47\\uD83C\\uDFFD|\\uD83D\\uDE47\\uD83C\\uDFFC|\\uD83D\\uDE47\\uD83C\\uDFFB|\\uD83D\\uDE46\\uD83C\\uDFFF|\\uD83D\\uDE46\\uD83C\\uDFFE|\\uD83D\\uDE46\\uD83C\\uDFFD|\\uD83D\\uDE46\\uD83C\\uDFFC|\\uD83D\\uDE46\\uD83C\\uDFFB|\\uD83D\\uDE45\\uD83C\\uDFFF|\\uD83D\\uDE45\\uD83C\\uDFFE|\\uD83D\\uDE45\\uD83C\\uDFFD|\\uD83D\\uDE45\\uD83C\\uDFFC|\\uD83D\\uDE45\\uD83C\\uDFFB|\\uD83D\\uDD96\\uD83C\\uDFFF|\\uD83D\\uDD96\\uD83C\\uDFFE|\\uD83D\\uDD96\\uD83C\\uDFFD|\\uD83D\\uDD96\\uD83C\\uDFFC|\\uD83D\\uDD96\\uD83C\\uDFFB|\\uD83D\\uDD95\\uD83C\\uDFFF|\\uD83D\\uDD95\\uD83C\\uDFFE|\\uD83D\\uDD95\\uD83C\\uDFFD|\\uD83D\\uDD95\\uD83C\\uDFFC|\\uD83D\\uDD95\\uD83C\\uDFFB|\\uD83D\\uDD90\\uD83C\\uDFFF|\\uD83D\\uDD90\\uD83C\\uDFFE|\\uD83D\\uDD90\\uD83C\\uDFFD|\\uD83D\\uDD90\\uD83C\\uDFFC|\\uD83D\\uDD90\\uD83C\\uDFFB|\\uD83D\\uDD7A\\uD83C\\uDFFF|\\uD83D\\uDD7A\\uD83C\\uDFFE|\\uD83D\\uDD7A\\uD83C\\uDFFD|\\uD83D\\uDD7A\\uD83C\\uDFFC|\\uD83D\\uDD7A\\uD83C\\uDFFB|\\uD83D\\uDD75\\uD83C\\uDFFF|\\uD83D\\uDD75\\uD83C\\uDFFE|\\uD83D\\uDD75\\uD83C\\uDFFD|\\uD83D\\uDD75\\uD83C\\uDFFC|\\uD83D\\uDD75\\uD83C\\uDFFB|\\uD83D\\uDCAA\\uD83C\\uDFFF|\\uD83D\\uDCAA\\uD83C\\uDFFE|\\uD83D\\uDCAA\\uD83C\\uDFFD|\\uD83D\\uDCAA\\uD83C\\uDFFC|\\uD83D\\uDCAA\\uD83C\\uDFFB|\\uD83D\\uDC87\\uD83C\\uDFFF|\\uD83D\\uDC87\\uD83C\\uDFFE|\\uD83D\\uDC87\\uD83C\\uDFFD|\\uD83D\\uDC87\\uD83C\\uDFFC|\\uD83D\\uDC87\\uD83C\\uDFFB|\\uD83D\\uDC86\\uD83C\\uDFFF|\\uD83D\\uDC86\\uD83C\\uDFFE|\\uD83D\\uDC86\\uD83C\\uDFFD|\\uD83D\\uDC86\\uD83C\\uDFFC|\\uD83D\\uDC86\\uD83C\\uDFFB|\\uD83D\\uDC85\\uD83C\\uDFFF|\\uD83D\\uDC85\\uD83C\\uDFFE|\\uD83D\\uDC85\\uD83C\\uDFFD|\\uD83D\\uDC85\\uD83C\\uDFFC|\\uD83D\\uDC85\\uD83C\\uDFFB|\\uD83D\\uDC83\\uD83C\\uDFFF|\\uD83D\\uDC83\\uD83C\\uDFFE|\\uD83D\\uDC83\\uD83C\\uDFFD|\\uD83D\\uDC83\\uD83C\\uDFFC|\\uD83D\\uDC83\\uD83C\\uDFFB|\\uD83D\\uDC82\\uD83C\\uDFFF|\\uD83D\\uDC82\\uD83C\\uDFFE|\\uD83D\\uDC82\\uD83C\\uDFFD|\\uD83D\\uDC82\\uD83C\\uDFFC|\\uD83D\\uDC82\\uD83C\\uDFFB|\\uD83D\\uDC81\\uD83C\\uDFFF|\\uD83D\\uDC81\\uD83C\\uDFFE|\\uD83D\\uDC81\\uD83C\\uDFFD|\\uD83D\\uDC81\\uD83C\\uDFFC|\\uD83D\\uDC81\\uD83C\\uDFFB|\\uD83D\\uDC7C\\uD83C\\uDFFF|\\uD83D\\uDC7C\\uD83C\\uDFFE|\\uD83D\\uDC7C\\uD83C\\uDFFD|\\uD83D\\uDC7C\\uD83C\\uDFFC|\\uD83D\\uDC7C\\uD83C\\uDFFB|\\uD83D\\uDC78\\uD83C\\uDFFF|\\uD83D\\uDC78\\uD83C\\uDFFE|\\uD83D\\uDC78\\uD83C\\uDFFD|\\uD83D\\uDC78\\uD83C\\uDFFC|\\uD83D\\uDC78\\uD83C\\uDFFB|\\uD83D\\uDC77\\uD83C\\uDFFF|\\uD83D\\uDC77\\uD83C\\uDFFE|\\uD83D\\uDC77\\uD83C\\uDFFD|\\uD83D\\uDC77\\uD83C\\uDFFC|\\uD83D\\uDC77\\uD83C\\uDFFB|\\uD83D\\uDC76\\uD83C\\uDFFF|\\uD83D\\uDC76\\uD83C\\uDFFE|\\uD83D\\uDC76\\uD83C\\uDFFD|\\uD83D\\uDC76\\uD83C\\uDFFC|\\uD83D\\uDC76\\uD83C\\uDFFB|\\uD83D\\uDC75\\uD83C\\uDFFF|\\uD83D\\uDC75\\uD83C\\uDFFE|\\uD83D\\uDC75\\uD83C\\uDFFD|\\uD83D\\uDC75\\uD83C\\uDFFC|\\uD83D\\uDC75\\uD83C\\uDFFB|\\uD83D\\uDC74\\uD83C\\uDFFF|\\uD83D\\uDC74\\uD83C\\uDFFE|\\uD83D\\uDC74\\uD83C\\uDFFD|\\uD83D\\uDC74\\uD83C\\uDFFC|\\uD83D\\uDC74\\uD83C\\uDFFB|\\uD83D\\uDC73\\uD83C\\uDFFF|\\uD83D\\uDC73\\uD83C\\uDFFE|\\uD83D\\uDC73\\uD83C\\uDFFD|\\uD83D\\uDC73\\uD83C\\uDFFC|\\uD83D\\uDC73\\uD83C\\uDFFB|\\uD83D\\uDC72\\uD83C\\uDFFF|\\uD83D\\uDC72\\uD83C\\uDFFE|\\uD83D\\uDC72\\uD83C\\uDFFD|\\uD83D\\uDC72\\uD83C\\uDFFC|\\uD83D\\uDC72\\uD83C\\uDFFB|\\uD83D\\uDC71\\uD83C\\uDFFF|\\uD83D\\uDC71\\uD83C\\uDFFE|\\uD83D\\uDC71\\uD83C\\uDFFD|\\uD83D\\uDC71\\uD83C\\uDFFC|\\uD83D\\uDC71\\uD83C\\uDFFB|\\uD83D\\uDC70\\uD83C\\uDFFF|\\uD83D\\uDC70\\uD83C\\uDFFE|\\uD83D\\uDC70\\uD83C\\uDFFD|\\uD83D\\uDC70\\uD83C\\uDFFC|\\uD83D\\uDC70\\uD83C\\uDFFB|\\uD83D\\uDC6E\\uD83C\\uDFFF|\\uD83D\\uDC6E\\uD83C\\uDFFE|\\uD83D\\uDC6E\\uD83C\\uDFFD|\\uD83D\\uDC6E\\uD83C\\uDFFC|\\uD83D\\uDC6E\\uD83C\\uDFFB|\\uD83D\\uDC69\\uD83C\\uDFFF|\\uD83D\\uDC69\\uD83C\\uDFFE|\\uD83D\\uDC69\\uD83C\\uDFFD|\\uD83D\\uDC69\\uD83C\\uDFFC|\\uD83D\\uDC69\\uD83C\\uDFFB|\\uD83D\\uDC68\\uD83C\\uDFFF|\\uD83D\\uDC68\\uD83C\\uDFFE|\\uD83D\\uDC68\\uD83C\\uDFFD|\\uD83D\\uDC68\\uD83C\\uDFFC|\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83D\\uDC67\\uD83C\\uDFFF|\\uD83D\\uDC67\\uD83C\\uDFFE|\\uD83D\\uDC67\\uD83C\\uDFFD|\\uD83D\\uDC67\\uD83C\\uDFFC|\\uD83D\\uDC67\\uD83C\\uDFFB|\\uD83D\\uDC66\\uD83C\\uDFFF|\\uD83D\\uDC66\\uD83C\\uDFFE|\\uD83D\\uDC66\\uD83C\\uDFFD|\\uD83D\\uDC66\\uD83C\\uDFFC|\\uD83D\\uDC66\\uD83C\\uDFFB|\\uD83D\\uDC50\\uD83C\\uDFFF|\\uD83D\\uDC50\\uD83C\\uDFFE|\\uD83D\\uDC50\\uD83C\\uDFFD|\\uD83D\\uDC50\\uD83C\\uDFFC|\\uD83D\\uDC50\\uD83C\\uDFFB|\\uD83D\\uDC4F\\uD83C\\uDFFF|\\uD83D\\uDC4F\\uD83C\\uDFFE|\\uD83D\\uDC4F\\uD83C\\uDFFD|\\uD83D\\uDC4F\\uD83C\\uDFFC|\\uD83D\\uDC4F\\uD83C\\uDFFB|\\uD83D\\uDC4E\\uD83C\\uDFFF|\\uD83D\\uDC4E\\uD83C\\uDFFE|\\uD83D\\uDC4E\\uD83C\\uDFFD|\\uD83D\\uDC4E\\uD83C\\uDFFC|\\uD83D\\uDC4E\\uD83C\\uDFFB|\\uD83D\\uDC4D\\uD83C\\uDFFF|\\uD83D\\uDC4D\\uD83C\\uDFFE|\\uD83D\\uDC4D\\uD83C\\uDFFD|\\uD83D\\uDC4D\\uD83C\\uDFFC|\\uD83D\\uDC4D\\uD83C\\uDFFB|\\uD83D\\uDC4C\\uD83C\\uDFFF|\\uD83D\\uDC4C\\uD83C\\uDFFE|\\uD83D\\uDC4C\\uD83C\\uDFFD|\\uD83D\\uDC4C\\uD83C\\uDFFC|\\uD83D\\uDC4C\\uD83C\\uDFFB|\\uD83D\\uDC4B\\uD83C\\uDFFF|\\uD83D\\uDC4B\\uD83C\\uDFFE|\\uD83D\\uDC4B\\uD83C\\uDFFD|\\uD83D\\uDC4B\\uD83C\\uDFFC|\\uD83D\\uDC4B\\uD83C\\uDFFB|\\uD83D\\uDC4A\\uD83C\\uDFFF|\\uD83D\\uDC4A\\uD83C\\uDFFE|\\uD83D\\uDC4A\\uD83C\\uDFFD|\\uD83D\\uDC4A\\uD83C\\uDFFC|\\uD83D\\uDC4A\\uD83C\\uDFFB|\\uD83D\\uDC49\\uD83C\\uDFFF|\\uD83D\\uDC49\\uD83C\\uDFFE|\\uD83D\\uDC49\\uD83C\\uDFFD|\\uD83D\\uDC49\\uD83C\\uDFFC|\\uD83D\\uDC49\\uD83C\\uDFFB|\\uD83D\\uDC48\\uD83C\\uDFFF|\\uD83D\\uDC48\\uD83C\\uDFFE|\\uD83D\\uDC48\\uD83C\\uDFFD|\\uD83D\\uDC48\\uD83C\\uDFFC|\\uD83D\\uDC48\\uD83C\\uDFFB|\\uD83D\\uDC47\\uD83C\\uDFFF|\\uD83D\\uDC47\\uD83C\\uDFFE|\\uD83D\\uDC47\\uD83C\\uDFFD|\\uD83D\\uDC47\\uD83C\\uDFFC|\\uD83D\\uDC47\\uD83C\\uDFFB|\\uD83D\\uDC46\\uD83C\\uDFFF|\\uD83D\\uDC46\\uD83C\\uDFFE|\\uD83D\\uDC46\\uD83C\\uDFFD|\\uD83D\\uDC46\\uD83C\\uDFFC|\\uD83D\\uDC46\\uD83C\\uDFFB|\\uD83D\\uDC43\\uD83C\\uDFFF|\\uD83D\\uDC43\\uD83C\\uDFFE|\\uD83D\\uDC43\\uD83C\\uDFFD|\\uD83D\\uDC43\\uD83C\\uDFFC|\\uD83D\\uDC43\\uD83C\\uDFFB|\\uD83D\\uDC42\\uD83C\\uDFFF|\\uD83D\\uDC42\\uD83C\\uDFFE|\\uD83D\\uDC42\\uD83C\\uDFFD|\\uD83D\\uDC42\\uD83C\\uDFFC|\\uD83D\\uDC42\\uD83C\\uDFFB|\\uD83C\\uDFCB\\uD83C\\uDFFF|\\uD83C\\uDFCB\\uD83C\\uDFFE|\\uD83C\\uDFF3\\uD83C\\uDF08|\\uD83C\\uDFCB\\uD83C\\uDFFC|\\uD83C\\uDFCB\\uD83C\\uDFFB|\\uD83C\\uDFCA\\uD83C\\uDFFF|\\uD83C\\uDFCA\\uD83C\\uDFFE|\\uD83C\\uDFCA\\uD83C\\uDFFD|\\uD83C\\uDFCA\\uD83C\\uDFFC|\\uD83C\\uDFCA\\uD83C\\uDFFB|\\uD83C\\uDFC7\\uD83C\\uDFFF|\\uD83C\\uDFC7\\uD83C\\uDFFE|\\uD83C\\uDFC7\\uD83C\\uDFFD|\\uD83C\\uDFC7\\uD83C\\uDFFC|\\uD83C\\uDFC7\\uD83C\\uDFFB|\\uD83C\\uDFC4\\uD83C\\uDFFF|\\uD83C\\uDFCB\\uD83C\\uDFFD|\\uD83C\\uDFC4\\uD83C\\uDFFD|\\uD83C\\uDFC4\\uD83C\\uDFFC|\\uD83C\\uDFC4\\uD83C\\uDFFB|\\uD83C\\uDFC3\\uD83C\\uDFFF|\\uD83C\\uDFC3\\uD83C\\uDFFE|\\uD83C\\uDFC3\\uD83C\\uDFFD|\\uD83C\\uDFC3\\uD83C\\uDFFC|\\uD83C\\uDFC3\\uD83C\\uDFFB|\\uD83C\\uDF85\\uD83C\\uDFFF|\\uD83C\\uDF85\\uD83C\\uDFFE|\\uD83C\\uDF85\\uD83C\\uDFFD|\\uD83C\\uDF85\\uD83C\\uDFFC|\\uD83C\\uDF85\\uD83C\\uDFFB|\\uD83C\\uDDFF\\uD83C\\uDDFC|\\uD83C\\uDDFF\\uD83C\\uDDF2|\\uD83C\\uDDFF\\uD83C\\uDDE6|\\uD83C\\uDDFE\\uD83C\\uDDF9|\\uD83C\\uDDFE\\uD83C\\uDDEA|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDFC\\uD83C\\uDDF8|\\uD83C\\uDDFC\\uD83C\\uDDEB|\\uD83C\\uDDFB\\uD83C\\uDDFA|\\uD83C\\uDDFB\\uD83C\\uDDF3|\\uD83C\\uDDFB\\uD83C\\uDDEE|\\uD83C\\uDDFB\\uD83C\\uDDEC|\\uD83C\\uDDFB\\uD83C\\uDDEA|\\uD83C\\uDDFB\\uD83C\\uDDE8|\\uD83C\\uDDFB\\uD83C\\uDDE6|\\uD83C\\uDDFA\\uD83C\\uDDFF|\\uD83C\\uDDFA\\uD83C\\uDDFE|\\uD83C\\uDDFA\\uD83C\\uDDF8|\\uD83C\\uDDFA\\uD83C\\uDDF2|\\uD83C\\uDDFA\\uD83C\\uDDEC|\\uD83C\\uDDFA\\uD83C\\uDDE6|\\uD83C\\uDDF9\\uD83C\\uDDFF|\\uD83C\\uDDF9\\uD83C\\uDDFC|\\uD83C\\uDDF9\\uD83C\\uDDFB|\\uD83C\\uDDF9\\uD83C\\uDDF9|\\uD83C\\uDDF9\\uD83C\\uDDF7|\\uD83C\\uDDF9\\uD83C\\uDDF4|\\uD83C\\uDDF9\\uD83C\\uDDF3|\\uD83C\\uDDF9\\uD83C\\uDDF2|\\uD83C\\uDDF9\\uD83C\\uDDF1|\\uD83C\\uDDF9\\uD83C\\uDDF0|\\uD83C\\uDDF9\\uD83C\\uDDEF|\\uD83C\\uDDF9\\uD83C\\uDDED|\\uD83C\\uDDF9\\uD83C\\uDDEC|\\uD83C\\uDDF9\\uD83C\\uDDEB|\\uD83C\\uDDF9\\uD83C\\uDDE9|\\uD83C\\uDDF9\\uD83C\\uDDE8|\\uD83C\\uDDF9\\uD83C\\uDDE6|\\uD83C\\uDDF8\\uD83C\\uDDFF|\\uD83C\\uDDF8\\uD83C\\uDDFE|\\uD83C\\uDDF8\\uD83C\\uDDFD|\\uD83C\\uDDF8\\uD83C\\uDDFB|\\uD83C\\uDDF8\\uD83C\\uDDF9|\\uD83C\\uDDF8\\uD83C\\uDDF8|\\uD83C\\uDDF8\\uD83C\\uDDF7|\\uD83C\\uDDF8\\uD83C\\uDDF4|\\uD83C\\uDDF8\\uD83C\\uDDF3|\\uD83C\\uDDF8\\uD83C\\uDDF2|\\uD83C\\uDDF8\\uD83C\\uDDF1|\\uD83C\\uDDF8\\uD83C\\uDDF0|\\uD83C\\uDDF8\\uD83C\\uDDEF|\\uD83C\\uDDF8\\uD83C\\uDDEE|\\uD83C\\uDDF8\\uD83C\\uDDED|\\uD83C\\uDDF8\\uD83C\\uDDEC|\\uD83C\\uDDF8\\uD83C\\uDDEA|\\uD83C\\uDDF8\\uD83C\\uDDE9|\\uD83C\\uDDF8\\uD83C\\uDDE8|\\uD83C\\uDDF8\\uD83C\\uDDE7|\\uD83C\\uDDF8\\uD83C\\uDDE6|\\uD83C\\uDDF7\\uD83C\\uDDFC|\\uD83C\\uDDF7\\uD83C\\uDDFA|\\uD83C\\uDDF7\\uD83C\\uDDF8|\\uD83C\\uDDF7\\uD83C\\uDDF4|\\uD83C\\uDDF7\\uD83C\\uDDEA|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C\\uDDFE|\\uD83C\\uDDF5\\uD83C\\uDDFC|\\uD83C\\uDDF5\\uD83C\\uDDF9|\\uD83C\\uDDF5\\uD83C\\uDDF8|\\uD83C\\uDDF5\\uD83C\\uDDF7|\\uD83C\\uDDF5\\uD83C\\uDDF3|\\uD83C\\uDDF5\\uD83C\\uDDF2|\\uD83C\\uDDF5\\uD83C\\uDDF1|\\uD83C\\uDDF5\\uD83C\\uDDF0|\\uD83C\\uDDF5\\uD83C\\uDDED|\\uD83C\\uDDF5\\uD83C\\uDDEC|\\uD83C\\uDDF5\\uD83C\\uDDEB|\\uD83C\\uDDF5\\uD83C\\uDDEA|\\uD83C\\uDDF5\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF3\\uD83C\\uDDFF|\\uD83C\\uDDF3\\uD83C\\uDDFA|\\uD83C\\uDDF3\\uD83C\\uDDF7|\\uD83C\\uDDF3\\uD83C\\uDDF5|\\uD83C\\uDDF3\\uD83C\\uDDF4|\\uD83C\\uDDF3\\uD83C\\uDDF1|\\uD83C\\uDDF3\\uD83C\\uDDEE|\\uD83C\\uDDF3\\uD83C\\uDDEC|\\uD83C\\uDDF3\\uD83C\\uDDEB|\\uD83C\\uDDF3\\uD83C\\uDDEA|\\uD83C\\uDDF3\\uD83C\\uDDE8|\\uD83C\\uDDF3\\uD83C\\uDDE6|\\uD83C\\uDDF2\\uD83C\\uDDFF|\\uD83C\\uDDF2\\uD83C\\uDDFE|\\uD83C\\uDDF2\\uD83C\\uDDFD|\\uD83C\\uDDF2\\uD83C\\uDDFC|\\uD83C\\uDDF2\\uD83C\\uDDFB|\\uD83C\\uDDF2\\uD83C\\uDDFA|\\uD83C\\uDDF2\\uD83C\\uDDF9|\\uD83C\\uDDF2\\uD83C\\uDDF8|\\uD83C\\uDDF2\\uD83C\\uDDF7|\\uD83C\\uDDF2\\uD83C\\uDDF6|\\uD83C\\uDDF2\\uD83C\\uDDF5|\\uD83C\\uDDF2\\uD83C\\uDDF4|\\uD83C\\uDDF2\\uD83C\\uDDF3|\\uD83C\\uDDF2\\uD83C\\uDDF2|\\uD83C\\uDDF2\\uD83C\\uDDF1|\\uD83C\\uDDF2\\uD83C\\uDDF0|\\uD83C\\uDDF2\\uD83C\\uDDED|\\uD83C\\uDDF2\\uD83C\\uDDEC|\\uD83C\\uDDF2\\uD83C\\uDDEB|\\uD83C\\uDDF2\\uD83C\\uDDEA|\\uD83C\\uDDF2\\uD83C\\uDDE9|\\uD83C\\uDDF2\\uD83C\\uDDE8|\\uD83C\\uDDF2\\uD83C\\uDDE6|\\uD83C\\uDDF1\\uD83C\\uDDFE|\\uD83C\\uDDF1\\uD83C\\uDDFB|\\uD83C\\uDDF1\\uD83C\\uDDFA|\\uD83C\\uDDF1\\uD83C\\uDDF9|\\uD83C\\uDDF1\\uD83C\\uDDF8|\\uD83C\\uDDF1\\uD83C\\uDDF7|\\uD83C\\uDDF1\\uD83C\\uDDF0|\\uD83C\\uDDF1\\uD83C\\uDDEE|\\uD83C\\uDDF1\\uD83C\\uDDE8|\\uD83C\\uDDF1\\uD83C\\uDDE7|\\uD83C\\uDDF1\\uD83C\\uDDE6|\\uD83C\\uDDF0\\uD83C\\uDDFF|\\uD83C\\uDDF0\\uD83C\\uDDFE|\\uD83C\\uDDF0\\uD83C\\uDDFC|\\uD83C\\uDDF0\\uD83C\\uDDF7|\\uD83C\\uDDF0\\uD83C\\uDDF5|\\uD83C\\uDDF0\\uD83C\\uDDF3|\\uD83C\\uDDF0\\uD83C\\uDDF2|\\uD83C\\uDDF0\\uD83C\\uDDEE|\\uD83C\\uDDF0\\uD83C\\uDDED|\\uD83C\\uDDF0\\uD83C\\uDDEC|\\uD83C\\uDDF0\\uD83C\\uDDEA|\\uD83C\\uDDEF\\uD83C\\uDDF5|\\uD83C\\uDDEF\\uD83C\\uDDF4|\\uD83C\\uDDEF\\uD83C\\uDDF2|\\uD83C\\uDDEF\\uD83C\\uDDEA|\\uD83C\\uDDEE\\uD83C\\uDDF9|\\uD83C\\uDDEE\\uD83C\\uDDF8|\\uD83C\\uDDEE\\uD83C\\uDDF7|\\uD83C\\uDDEE\\uD83C\\uDDF6|\\uD83C\\uDDEE\\uD83C\\uDDF4|\\uD83C\\uDDEE\\uD83C\\uDDF3|\\uD83C\\uDDEE\\uD83C\\uDDF2|\\uD83C\\uDDEE\\uD83C\\uDDF1|\\uD83C\\uDDEE\\uD83C\\uDDEA|\\uD83C\\uDDEE\\uD83C\\uDDE9|\\uD83C\\uDDEE\\uD83C\\uDDE8|\\uD83C\\uDDED\\uD83C\\uDDFA|\\uD83C\\uDDED\\uD83C\\uDDF9|\\uD83C\\uDDED\\uD83C\\uDDF7|\\uD83C\\uDDED\\uD83C\\uDDF3|\\uD83C\\uDDED\\uD83C\\uDDF2|\\uD83C\\uDDED\\uD83C\\uDDF0|\\uD83C\\uDDEC\\uD83C\\uDDFE|\\uD83C\\uDDEC\\uD83C\\uDDFC|\\uD83C\\uDDEC\\uD83C\\uDDFA|\\uD83C\\uDDEC\\uD83C\\uDDF9|\\uD83C\\uDDEC\\uD83C\\uDDF8|\\uD83C\\uDDEC\\uD83C\\uDDF7|\\uD83C\\uDDEC\\uD83C\\uDDF6|\\uD83C\\uDDEC\\uD83C\\uDDF5|\\uD83C\\uDDEC\\uD83C\\uDDF3|\\uD83C\\uDDEC\\uD83C\\uDDF2|\\uD83C\\uDDEC\\uD83C\\uDDF1|\\uD83C\\uDDEC\\uD83C\\uDDEE|\\uD83C\\uDDEC\\uD83C\\uDDED|\\uD83C\\uDDEC\\uD83C\\uDDEC|\\uD83C\\uDDEC\\uD83C\\uDDEB|\\uD83C\\uDDEC\\uD83C\\uDDEA|\\uD83C\\uDDEC\\uD83C\\uDDE9|\\uD83C\\uDDEC\\uD83C\\uDDE7|\\uD83C\\uDDEC\\uD83C\\uDDE6|\\uD83C\\uDDEB\\uD83C\\uDDF7|\\uD83C\\uDDEB\\uD83C\\uDDF4|\\uD83C\\uDDEB\\uD83C\\uDDF2|\\uD83C\\uDDEB\\uD83C\\uDDF0|\\uD83C\\uDDEB\\uD83C\\uDDEF|\\uD83C\\uDDEB\\uD83C\\uDDEE|\\uD83C\\uDDEA\\uD83C\\uDDFA|\\uD83C\\uDDEA\\uD83C\\uDDF9|\\uD83C\\uDDEA\\uD83C\\uDDF8|\\uD83C\\uDDEA\\uD83C\\uDDF7|\\uD83C\\uDDEA\\uD83C\\uDDED|\\uD83C\\uDDEA\\uD83C\\uDDEC|\\uD83C\\uDDEA\\uD83C\\uDDEA|\\uD83C\\uDDEA\\uD83C\\uDDE8|\\uD83C\\uDDEA\\uD83C\\uDDE6|\\uD83C\\uDDE9\\uD83C\\uDDFF|\\uD83C\\uDDE9\\uD83C\\uDDF4|\\uD83C\\uDDE9\\uD83C\\uDDF2|\\uD83C\\uDDE9\\uD83C\\uDDF0|\\uD83C\\uDDE9\\uD83C\\uDDEF|\\uD83C\\uDDE9\\uD83C\\uDDEC|\\uD83C\\uDDE9\\uD83C\\uDDEA|\\uD83C\\uDDE8\\uD83C\\uDDFF|\\uD83C\\uDDE8\\uD83C\\uDDFE|\\uD83C\\uDDE8\\uD83C\\uDDFD|\\uD83C\\uDDE8\\uD83C\\uDDFC|\\uD83C\\uDDE8\\uD83C\\uDDFB|\\uD83C\\uDDE8\\uD83C\\uDDFA|\\uD83C\\uDDE8\\uD83C\\uDDF7|\\uD83C\\uDDE8\\uD83C\\uDDF5|\\uD83C\\uDDE8\\uD83C\\uDDF4|\\uD83C\\uDDE8\\uD83C\\uDDF3|\\uD83C\\uDDE8\\uD83C\\uDDF2|\\uD83C\\uDDE8\\uD83C\\uDDF1|\\uD83C\\uDDE8\\uD83C\\uDDF0|\\uD83C\\uDDE8\\uD83C\\uDDEE|\\uD83C\\uDDE8\\uD83C\\uDDED|\\uD83C\\uDDE8\\uD83C\\uDDEC|\\uD83C\\uDDE8\\uD83C\\uDDEB|\\uD83C\\uDDE8\\uD83C\\uDDE9|\\uD83C\\uDDE8\\uD83C\\uDDE8|\\uD83C\\uDDE8\\uD83C\\uDDE6|\\uD83C\\uDDE7\\uD83C\\uDDFF|\\uD83C\\uDDE7\\uD83C\\uDDFE|\\uD83C\\uDDE7\\uD83C\\uDDFC|\\uD83C\\uDDE7\\uD83C\\uDDFB|\\uD83C\\uDDE7\\uD83C\\uDDF9|\\uD83C\\uDDE7\\uD83C\\uDDF8|\\uD83C\\uDDE7\\uD83C\\uDDF7|\\uD83C\\uDDE7\\uD83C\\uDDF6|\\uD83C\\uDDE7\\uD83C\\uDDF4|\\uD83C\\uDDE7\\uD83C\\uDDF3|\\uD83C\\uDDE7\\uD83C\\uDDF2|\\uD83C\\uDDE7\\uD83C\\uDDF1|\\uD83C\\uDDE7\\uD83C\\uDDEF|\\uD83C\\uDDE7\\uD83C\\uDDEE|\\uD83C\\uDDE7\\uD83C\\uDDED|\\uD83C\\uDDE7\\uD83C\\uDDEC|\\uD83C\\uDDE7\\uD83C\\uDDEB|\\uD83C\\uDDE7\\uD83C\\uDDEA|\\uD83C\\uDDE7\\uD83C\\uDDE9|\\uD83C\\uDDE7\\uD83C\\uDDE7|\\uD83C\\uDDE7\\uD83C\\uDDE6|\\uD83C\\uDDE6\\uD83C\\uDDFF|\\uD83C\\uDDE6\\uD83C\\uDDFD|\\uD83C\\uDDE6\\uD83C\\uDDFC|\\uD83C\\uDDE6\\uD83C\\uDDFA|\\uD83C\\uDDE6\\uD83C\\uDDF9|\\uD83C\\uDFC4\\uD83C\\uDFFE|\\uD83D\\uDDE3\\uFE0F|\\u26F9\\uD83C\\uDFFF|\\u26F9\\uD83C\\uDFFE|\\u26F9\\uD83C\\uDFFD|\\u26F9\\uD83C\\uDFFC|\\u26F9\\uD83C\\uDFFB|\\u270D\\uD83C\\uDFFF|\\u270D\\uD83C\\uDFFE|\\u270D\\uD83C\\uDFFD|\\u270D\\uD83C\\uDFFC|\\u270D\\uD83C\\uDFFB|\\uD83C\\uDC04\\uFE0F|\\uD83C\\uDD7F\\uFE0F|\\uD83C\\uDE02\\uFE0F|\\uD83C\\uDE1A\\uFE0F|\\uD83C\\uDE2F\\uFE0F|\\uD83C\\uDE37\\uFE0F|\\uD83C\\uDF9E\\uFE0F|\\uD83C\\uDF9F\\uFE0F|\\uD83C\\uDFCB\\uFE0F|\\uD83C\\uDFCC\\uFE0F|\\uD83C\\uDFCD\\uFE0F|\\uD83C\\uDFCE\\uFE0F|\\uD83C\\uDF96\\uFE0F|\\uD83C\\uDF97\\uFE0F|\\uD83C\\uDF36\\uFE0F|\\uD83C\\uDF27\\uFE0F|\\uD83C\\uDF28\\uFE0F|\\uD83C\\uDF29\\uFE0F|\\uD83C\\uDF2A\\uFE0F|\\uD83C\\uDF2B\\uFE0F|\\uD83C\\uDF2C\\uFE0F|\\uD83D\\uDC3F\\uFE0F|\\uD83D\\uDD77\\uFE0F|\\uD83D\\uDD78\\uFE0F|\\uD83C\\uDF21\\uFE0F|\\uD83C\\uDF99\\uFE0F|\\uD83C\\uDF9A\\uFE0F|\\uD83C\\uDF9B\\uFE0F|\\uD83C\\uDFF3\\uFE0F|\\uD83C\\uDFF5\\uFE0F|\\uD83C\\uDFF7\\uFE0F|\\uD83D\\uDCFD\\uFE0F|\\uD83D\\uDD49\\uFE0F|\\uD83D\\uDD4A\\uFE0F|\\uD83D\\uDD6F\\uFE0F|\\uD83D\\uDD70\\uFE0F|\\uD83D\\uDD73\\uFE0F|\\uD83D\\uDD76\\uFE0F|\\uD83D\\uDD79\\uFE0F|\\uD83D\\uDD87\\uFE0F|\\uD83D\\uDD8A\\uFE0F|\\uD83D\\uDD8B\\uFE0F|\\uD83D\\uDD8C\\uFE0F|\\uD83D\\uDD8D\\uFE0F|\\uD83D\\uDDA5\\uFE0F|\\uD83D\\uDDA8\\uFE0F|\\uD83D\\uDDB2\\uFE0F|\\uD83D\\uDDBC\\uFE0F|\\uD83D\\uDDC2\\uFE0F|\\uD83D\\uDDC3\\uFE0F|\\uD83D\\uDDC4\\uFE0F|\\uD83D\\uDDD1\\uFE0F|\\uD83D\\uDDD2\\uFE0F|\\uD83D\\uDDD3\\uFE0F|\\uD83D\\uDDDC\\uFE0F|\\uD83D\\uDDDD\\uFE0F|\\uD83D\\uDDDE\\uFE0F|\\uD83D\\uDDE1\\uFE0F|\\u270B\\uD83C\\uDFFF|\\uD83D\\uDDE8\\uFE0F|\\uD83D\\uDDEF\\uFE0F|\\uD83D\\uDDF3\\uFE0F|\\uD83D\\uDDFA\\uFE0F|\\uD83D\\uDEE0\\uFE0F|\\uD83D\\uDEE1\\uFE0F|\\uD83D\\uDEE2\\uFE0F|\\uD83D\\uDEF0\\uFE0F|\\uD83C\\uDF7D\\uFE0F|\\uD83D\\uDC41\\uFE0F|\\uD83D\\uDD74\\uFE0F|\\uD83D\\uDD75\\uFE0F|\\uD83D\\uDD90\\uFE0F|\\uD83C\\uDFD4\\uFE0F|\\uD83C\\uDFD5\\uFE0F|\\uD83C\\uDFD6\\uFE0F|\\uD83C\\uDFD7\\uFE0F|\\uD83C\\uDFD8\\uFE0F|\\uD83C\\uDFD9\\uFE0F|\\uD83C\\uDFDA\\uFE0F|\\uD83C\\uDFDB\\uFE0F|\\uD83C\\uDFDC\\uFE0F|\\uD83C\\uDFDD\\uFE0F|\\uD83C\\uDFDE\\uFE0F|\\uD83C\\uDFDF\\uFE0F|\\uD83D\\uDECB\\uFE0F|\\uD83D\\uDECD\\uFE0F|\\uD83D\\uDECE\\uFE0F|\\uD83D\\uDECF\\uFE0F|\\uD83D\\uDEE3\\uFE0F|\\uD83D\\uDEE4\\uFE0F|\\uD83D\\uDEE5\\uFE0F|\\uD83D\\uDEE9\\uFE0F|\\uD83D\\uDEF3\\uFE0F|\\uD83C\\uDF24\\uFE0F|\\uD83C\\uDF25\\uFE0F|\\uD83C\\uDF26\\uFE0F|\\uD83D\\uDDB1\\uFE0F|\\u261D\\uD83C\\uDFFB|\\u261D\\uD83C\\uDFFC|\\u261D\\uD83C\\uDFFD|\\u261D\\uD83C\\uDFFE|\\u261D\\uD83C\\uDFFF|\\u270C\\uD83C\\uDFFB|\\u270C\\uD83C\\uDFFC|\\u270C\\uD83C\\uDFFD|\\u270C\\uD83C\\uDFFE|\\u270C\\uD83C\\uDFFF|\\u270A\\uD83C\\uDFFB|\\u270A\\uD83C\\uDFFC|\\u270A\\uD83C\\uDFFD|\\u270A\\uD83C\\uDFFE|\\u270A\\uD83C\\uDFFF|\\u270B\\uD83C\\uDFFB|\\u270B\\uD83C\\uDFFC|\\u270B\\uD83C\\uDFFD|\\u270B\\uD83C\\uDFFE|\\4\\uFE0F\\u20E3|\\9\\uFE0F\\u20E3|\\0\\uFE0F\\u20E3|\\1\\uFE0F\\u20E3|\\2\\uFE0F\\u20E3|\\3\\uFE0F\\u20E3|\\#\\uFE0F\\u20E3|\\5\\uFE0F\\u20E3|\\6\\uFE0F\\u20E3|\\7\\uFE0F\\u20E3|\\8\\uFE0F\\u20E3|\\*\\uFE0F\\u20E3|\\uD83D\\uDDE1|\\uD83D\\uDD77|\\uD83D\\uDDE3|\\uD83D\\uDEE4|\\uD83D\\uDDE8|\\uD83D\\uDD78|\\uD83D\\uDDEF|\\uD83C\\uDE37|\\uD83D\\uDDF3|\\uD83C\\uDF21|\\uD83D\\uDDFA|\\uD83D\\uDDB1|\\uD83D\\uDEE0|\\uD83C\\uDF99|\\uD83D\\uDEE1|\\uD83C\\uDF9E|\\uD83D\\uDEE2|\\uD83C\\uDF9A|\\uD83D\\uDEF0|\\uD83D\\uDEE3|\\uD83C\\uDF7D|\\uD83C\\uDF9B|\\uD83D\\uDC41|\\uD83C\\uDF9F|\\uD83D\\uDD74|\\uD83C\\uDFF3|\\uD83D\\uDD75|\\uD83D\\uDEF3|\\uD83D\\uDD90|\\uD83C\\uDFF5|\\uD83C\\uDFD4|\\uD83C\\uDFCB|\\uD83C\\uDFD5|\\uD83C\\uDFF7|\\uD83C\\uDFD6|\\uD83D\\uDECF|\\uD83C\\uDFD7|\\uD83D\\uDCFD|\\uD83C\\uDFD8|\\uD83C\\uDFCC|\\uD83C\\uDFD9|\\uD83D\\uDD49|\\uD83C\\uDFDA|\\uD83C\\uDF25|\\uD83C\\uDFDB|\\uD83D\\uDD4A|\\uD83C\\uDFDC|\\uD83C\\uDFCD|\\uD83C\\uDFDD|\\uD83D\\uDD6F|\\uD83C\\uDFDE|\\uD83D\\uDECE|\\uD83C\\uDFDF|\\uD83D\\uDD70|\\uD83D\\uDECB|\\uD83C\\uDFCE|\\uD83D\\uDECD|\\uD83D\\uDD73|\\uD83D\\uDECE|\\uD83D\\uDEE9|\\uD83D\\uDECF|\\uD83D\\uDD76|\\uD83D\\uDEE3|\\uD83C\\uDF96|\\uD83D\\uDEE4|\\uD83D\\uDD79|\\uD83D\\uDEE5|\\uD83D\\uDECD|\\uD83D\\uDEE9|\\uD83D\\uDD87|\\uD83D\\uDEF3|\\uD83C\\uDF97|\\uD83C\\uDF24|\\uD83D\\uDD8A|\\uD83C\\uDF25|\\uD83C\\uDC04|\\uD83C\\uDF26|\\uD83D\\uDD8B|\\uD83D\\uDDB1|\\uD83C\\uDF36|\\uD83D\\uDD8C|\\uD83C\\uDF26|\\uD83D\\uDD8D|\\uD83C\\uDF27|\\uD83D\\uDDA5|\\uD83C\\uDD7F|\\uD83D\\uDDA8|\\uD83C\\uDF28|\\uD83D\\uDDB2|\\uD83D\\uDECB|\\uD83D\\uDDBC|\\uD83C\\uDF29|\\uD83D\\uDDC2|\\uD83C\\uDE02|\\uD83D\\uDDC3|\\uD83C\\uDF2A|\\uD83D\\uDDC4|\\uD83D\\uDEE5|\\uD83D\\uDDD1|\\uD83C\\uDF2B|\\uD83D\\uDDD2|\\uD83C\\uDE1A|\\uD83D\\uDDD3|\\uD83C\\uDF2C|\\uD83D\\uDDDC|\\uD83C\\uDF24|\\uD83D\\uDDDD|\\uD83D\\uDC3F|\\uD83D\\uDDDE|\\u00A9\\uFE0F|\\uD83C\\uDFDF|\\u00AE\\uFE0F|\\uD83C\\uDFDE|\\u203C\\uFE0F|\\uD83C\\uDFDD|\\u2049\\uFE0F|\\uD83C\\uDFDC|\\u2122\\uFE0F|\\uD83C\\uDFDB|\\u2139\\uFE0F|\\uD83C\\uDFDA|\\u2194\\uFE0F|\\uD83C\\uDFD9|\\u2195\\uFE0F|\\uD83C\\uDFD8|\\u2196\\uFE0F|\\uD83C\\uDFD7|\\u2197\\uFE0F|\\uD83C\\uDFD6|\\u2198\\uFE0F|\\uD83C\\uDFD5|\\u2199\\uFE0F|\\uD83C\\uDFD4|\\u21A9\\uFE0F|\\uD83D\\uDD90|\\u21AA\\uFE0F|\\uD83D\\uDD75|\\u231A\\uFE0F|\\uD83D\\uDD74|\\u231B\\uFE0F|\\uD83D\\uDC41|\\u24C2\\uFE0F|\\uD83C\\uDF7D|\\u25AA\\uFE0F|\\uD83D\\uDEF0|\\u25AB\\uFE0F|\\uD83D\\uDEE2|\\u25B6\\uFE0F|\\uD83D\\uDEE1|\\u25C0\\uFE0F|\\uD83D\\uDEE0|\\u25FB\\uFE0F|\\uD83D\\uDDFA|\\u25FC\\uFE0F|\\uD83D\\uDDF3|\\u25FD\\uFE0F|\\uD83D\\uDDEF|\\u25FE\\uFE0F|\\uD83D\\uDDE8|\\u2600\\uFE0F|\\uD83D\\uDDE3|\\u2601\\uFE0F|\\uD83D\\uDDE1|\\u260E\\uFE0F|\\uD83D\\uDDDE|\\u2611\\uFE0F|\\uD83D\\uDDDD|\\u2614\\uFE0F|\\uD83D\\uDDDC|\\u2615\\uFE0F|\\uD83D\\uDDD3|\\u261D\\uFE0F|\\uD83D\\uDDD2|\\u263A\\uFE0F|\\uD83D\\uDDD1|\\u2648\\uFE0F|\\uD83D\\uDDC4|\\u2649\\uFE0F|\\uD83D\\uDDC3|\\u264A\\uFE0F|\\uD83D\\uDDC2|\\u264B\\uFE0F|\\uD83D\\uDDBC|\\u264C\\uFE0F|\\uD83D\\uDDB2|\\u264D\\uFE0F|\\uD83D\\uDDA8|\\u264E\\uFE0F|\\uD83D\\uDDA5|\\u264F\\uFE0F|\\uD83D\\uDD8D|\\u2650\\uFE0F|\\uD83D\\uDD8C|\\u2651\\uFE0F|\\uD83D\\uDD8B|\\u2652\\uFE0F|\\uD83D\\uDD8A|\\u2653\\uFE0F|\\uD83D\\uDD87|\\u2660\\uFE0F|\\uD83D\\uDD79|\\u2663\\uFE0F|\\uD83D\\uDD76|\\u2665\\uFE0F|\\uD83D\\uDD73|\\u2666\\uFE0F|\\uD83D\\uDD70|\\u2668\\uFE0F|\\uD83D\\uDD6F|\\u267B\\uFE0F|\\uD83D\\uDD4A|\\u267F\\uFE0F|\\uD83D\\uDD49|\\u2693\\uFE0F|\\uD83D\\uDCFD|\\u26A0\\uFE0F|\\uD83C\\uDFF7|\\u26A1\\uFE0F|\\uD83C\\uDFF5|\\u26AA\\uFE0F|\\uD83C\\uDFF3|\\u26AB\\uFE0F|\\uD83C\\uDF9B|\\u26BD\\uFE0F|\\uD83C\\uDF9A|\\u26BE\\uFE0F|\\uD83C\\uDF99|\\u26C4\\uFE0F|\\uD83C\\uDF21|\\u26C5\\uFE0F|\\uD83D\\uDD78|\\u26D4\\uFE0F|\\uD83D\\uDD77|\\u26EA\\uFE0F|\\uD83D\\uDC3F|\\uD83C\\uDE2F|\\uD83C\\uDF2C|\\u26F3\\uFE0F|\\uD83C\\uDF2B|\\u26F5\\uFE0F|\\uD83C\\uDF2A|\\u26FA\\uFE0F|\\uD83C\\uDF29|\\u26FD\\uFE0F|\\uD83C\\uDF28|\\u2702\\uFE0F|\\uD83C\\uDF27|\\u2708\\uFE0F|\\uD83C\\uDF36|\\u2709\\uFE0F|\\uD83C\\uDF97|\\u270C\\uFE0F|\\uD83C\\uDF96|\\u270F\\uFE0F|\\uD83C\\uDFCE|\\u2712\\uFE0F|\\uD83C\\uDFCD|\\u2714\\uFE0F|\\uD83C\\uDFCC|\\u2716\\uFE0F|\\uD83C\\uDFCB|\\u2733\\uFE0F|\\uD83C\\uDF9F|\\u2734\\uFE0F|\\uD83C\\uDF9E|\\u2744\\uFE0F|\\uD83C\\uDE37|\\u2747\\uFE0F|\\uD83C\\uDE2F|\\u2757\\uFE0F|\\uD83C\\uDE1A|\\u2764\\uFE0F|\\uD83C\\uDE02|\\u27A1\\uFE0F|\\uD83C\\uDD7F|\\u2934\\uFE0F|\\uD83C\\uDC04|\\u2935\\uFE0F|\\uD83C\\uDDE6|\\u2B05\\uFE0F|\\uD83C\\uDDE7|\\u2B06\\uFE0F|\\uD83C\\uDDE8|\\u2B07\\uFE0F|\\uD83C\\uDDE9|\\u2B1B\\uFE0F|\\uD83C\\uDDEA|\\u2B1C\\uFE0F|\\uD83C\\uDDEB|\\u2B50\\uFE0F|\\uD83C\\uDDEC|\\u2B55\\uFE0F|\\uD83C\\uDDED|\\u3030\\uFE0F|\\uD83C\\uDDEE|\\u303D\\uFE0F|\\uD83C\\uDDEF|\\u3297\\uFE0F|\\uD83C\\uDDF0|\\u3299\\uFE0F|\\uD83C\\uDDF1|\\u271D\\uFE0F|\\uD83C\\uDDF2|\\u2328\\uFE0F|\\uD83C\\uDDF3|\\u270D\\uFE0F|\\uD83C\\uDDF4|\\u23CF\\uFE0F|\\uD83C\\uDDF5|\\u23ED\\uFE0F|\\uD83C\\uDDF6|\\u23EE\\uFE0F|\\uD83C\\uDDF7|\\u23EF\\uFE0F|\\uD83C\\uDDF8|\\u23F1\\uFE0F|\\uD83C\\uDDF9|\\u23F2\\uFE0F|\\uD83C\\uDDFA|\\u23F8\\uFE0F|\\uD83C\\uDDFB|\\u23F9\\uFE0F|\\uD83C\\uDDFC|\\u23FA\\uFE0F|\\uD83E\\uDD5E|\\u2602\\uFE0F|\\uD83E\\uDD5D|\\u2603\\uFE0F|\\uD83E\\uDD5C|\\u2604\\uFE0F|\\uD83E\\uDD5B|\\u2618\\uFE0F|\\uD83E\\uDD5A|\\u2620\\uFE0F|\\uD83E\\uDD91|\\u2622\\uFE0F|\\uD83E\\uDD90|\\u2623\\uFE0F|\\uD83E\\uDD41|\\u2626\\uFE0F|\\uD83C\\uDFF8|\\u262A\\uFE0F|\\uD83C\\uDFD3|\\u262E\\uFE0F|\\uD83C\\uDFD2|\\u262F\\uFE0F|\\uD83C\\uDFD1|\\u2638\\uFE0F|\\uD83C\\uDFD0|\\u2639\\uFE0F|\\uD83C\\uDFCF|\\u2692\\uFE0F|\\uD83D\\uDCFF|\\u2694\\uFE0F|\\uD83D\\uDD4E|\\u2696\\uFE0F|\\uD83D\\uDD4D|\\u2697\\uFE0F|\\uD83D\\uDD4C|\\u2699\\uFE0F|\\uD83D\\uDD4B|\\u269B\\uFE0F|\\uD83D\\uDED0|\\u269C\\uFE0F|\\uD83C\\uDFFA|\\u26B0\\uFE0F|\\uD83C\\uDFF9|\\u26B1\\uFE0F|\\uD83C\\uDF7E|\\u26C8\\uFE0F|\\uD83C\\uDF7F|\\u26CF\\uFE0F|\\uD83C\\uDF2F|\\u26D1\\uFE0F|\\uD83C\\uDF2E|\\u26D3\\uFE0F|\\uD83C\\uDF2D|\\u26E9\\uFE0F|\\uD83E\\uDDC0|\\u26F0\\uFE0F|\\uD83E\\uDD83|\\u26F1\\uFE0F|\\uD83E\\uDD80|\\u26F4\\uFE0F|\\uD83E\\uDD82|\\u26F7\\uFE0F|\\uD83E\\uDD84|\\u26F8\\uFE0F|\\uD83E\\uDD81|\\u26F9\\uFE0F|\\uD83E\\uDD16|\\u2721\\uFE0F|\\uD83E\\uDD15|\\u2763\\uFE0F|\\uD83E\\uDD12|\\uD83E\\uDD49|\\uD83E\\uDD48|\\uD83E\\uDD47|\\uD83E\\uDD3A|\\uD83E\\uDD45|\\uD83E\\uDD3E|\\uD83C\\uDDFF|\\uD83E\\uDD3D|\\uD83E\\uDD4B|\\uD83E\\uDD4A|\\uD83E\\uDD3C|\\uD83E\\uDD39|\\uD83E\\uDD38|\\uD83D\\uDEF6|\\uD83D\\uDEF5|\\uD83D\\uDEF4|\\uD83D\\uDED2|\\uD83C\\uDCCF|\\uD83C\\uDD70|\\uD83C\\uDD71|\\uD83C\\uDD7E|\\uD83D\\uDED1|\\uD83C\\uDD8E|\\uD83C\\uDD91|\\uD83C\\uDDFE|\\uD83C\\uDD92|\\uD83C\\uDD93|\\uD83C\\uDD94|\\uD83C\\uDD95|\\uD83C\\uDD96|\\uD83C\\uDD97|\\uD83C\\uDD98|\\uD83E\\uDD44|\\uD83C\\uDD99|\\uD83C\\uDD9A|\\uD83E\\uDD42|\\uD83E\\uDD43|\\uD83C\\uDE01|\\uD83E\\uDD59|\\uD83C\\uDE32|\\uD83C\\uDE33|\\uD83C\\uDE34|\\uD83C\\uDE35|\\uD83C\\uDE36|\\uD83E\\uDD58|\\uD83C\\uDE38|\\uD83C\\uDE39|\\uD83E\\uDD57|\\uD83C\\uDE3A|\\uD83C\\uDE50|\\uD83C\\uDE51|\\uD83C\\uDF00|\\uD83E\\uDD56|\\uD83C\\uDF01|\\uD83C\\uDF02|\\uD83C\\uDF03|\\uD83C\\uDF04|\\uD83C\\uDF05|\\uD83C\\uDF06|\\uD83E\\uDD55|\\uD83C\\uDF07|\\uD83C\\uDF08|\\uD83E\\uDD54|\\uD83C\\uDF09|\\uD83C\\uDF0A|\\uD83C\\uDF0B|\\uD83C\\uDF0C|\\uD83C\\uDF0F|\\uD83C\\uDF11|\\uD83E\\uDD53|\\uD83C\\uDF13|\\uD83C\\uDF14|\\uD83C\\uDF15|\\uD83C\\uDF19|\\uD83C\\uDF1B|\\uD83C\\uDF1F|\\uD83E\\uDD52|\\uD83C\\uDF20|\\uD83C\\uDF30|\\uD83E\\uDD51|\\uD83C\\uDF31|\\uD83C\\uDF34|\\uD83C\\uDF35|\\uD83C\\uDF37|\\uD83C\\uDF38|\\uD83C\\uDF39|\\uD83C\\uDF3A|\\uD83C\\uDF3B|\\uD83C\\uDF3C|\\uD83C\\uDF3D|\\uD83E\\uDD50|\\uD83C\\uDF3E|\\uD83C\\uDF3F|\\uD83C\\uDF40|\\uD83C\\uDF41|\\uD83C\\uDF42|\\uD83C\\uDF43|\\uD83C\\uDF44|\\uD83C\\uDF45|\\uD83C\\uDF46|\\uD83C\\uDF47|\\uD83C\\uDF48|\\uD83C\\uDF49|\\uD83C\\uDF4A|\\uD83E\\uDD40|\\uD83C\\uDF4C|\\uD83C\\uDF4D|\\uD83C\\uDF4E|\\uD83C\\uDF4F|\\uD83C\\uDF51|\\uD83C\\uDF52|\\uD83C\\uDF53|\\uD83E\\uDD8F|\\uD83C\\uDF54|\\uD83C\\uDF55|\\uD83C\\uDF56|\\uD83E\\uDD8E|\\uD83C\\uDF57|\\uD83C\\uDF58|\\uD83C\\uDF59|\\uD83E\\uDD8D|\\uD83C\\uDF5A|\\uD83C\\uDF5B|\\uD83E\\uDD8C|\\uD83C\\uDF5C|\\uD83C\\uDF5D|\\uD83C\\uDF5E|\\uD83C\\uDF5F|\\uD83E\\uDD8B|\\uD83C\\uDF60|\\uD83C\\uDF61|\\uD83E\\uDD8A|\\uD83C\\uDF62|\\uD83C\\uDF63|\\uD83E\\uDD89|\\uD83C\\uDF64|\\uD83C\\uDF65|\\uD83E\\uDD88|\\uD83C\\uDF66|\\uD83E\\uDD87|\\uD83C\\uDF67|\\uD83C\\uDDFD|\\uD83C\\uDF68|\\uD83E\\uDD86|\\uD83C\\uDF69|\\uD83E\\uDD85|\\uD83C\\uDF6A|\\uD83D\\uDDA4|\\uD83C\\uDF6B|\\uD83C\\uDF6C|\\uD83C\\uDF6D|\\uD83C\\uDF6E|\\uD83C\\uDF6F|\\uD83E\\uDD1E|\\uD83C\\uDF70|\\uD83C\\uDF71|\\uD83C\\uDF72|\\uD83E\\uDD1D|\\uD83C\\uDF73|\\uD83C\\uDF74|\\uD83C\\uDF75|\\uD83C\\uDF76|\\uD83C\\uDF77|\\uD83C\\uDF78|\\uD83C\\uDF79|\\uD83C\\uDF7A|\\uD83C\\uDF7B|\\uD83C\\uDF80|\\uD83C\\uDF81|\\uD83C\\uDF82|\\uD83C\\uDF83|\\uD83E\\uDD1B|\\uD83E\\uDD1C|\\uD83C\\uDF84|\\uD83C\\uDF85|\\uD83C\\uDF86|\\uD83E\\uDD1A|\\uD83C\\uDF87|\\uD83C\\uDF88|\\uD83C\\uDF89|\\uD83C\\uDF8A|\\uD83C\\uDF8B|\\uD83C\\uDF8C|\\uD83E\\uDD19|\\uD83C\\uDF8D|\\uD83D\\uDD7A|\\uD83C\\uDF8E|\\uD83E\\uDD33|\\uD83C\\uDF8F|\\uD83E\\uDD30|\\uD83C\\uDF90|\\uD83E\\uDD26|\\uD83E\\uDD37|\\uD83C\\uDF91|\\uD83C\\uDF92|\\uD83C\\uDF93|\\uD83C\\uDFA0|\\uD83C\\uDFA1|\\uD83C\\uDFA2|\\uD83C\\uDFA3|\\uD83C\\uDFA4|\\uD83C\\uDFA5|\\uD83C\\uDFA6|\\uD83C\\uDFA7|\\uD83E\\uDD36|\\uD83C\\uDFA8|\\uD83E\\uDD35|\\uD83C\\uDFA9|\\uD83C\\uDFAA|\\uD83E\\uDD34|\\uD83C\\uDFAB|\\uD83C\\uDFAC|\\uD83C\\uDFAD|\\uD83E\\uDD27|\\uD83C\\uDFAE|\\uD83C\\uDFAF|\\uD83C\\uDFB0|\\uD83C\\uDFB1|\\uD83C\\uDFB2|\\uD83C\\uDFB3|\\uD83C\\uDFB4|\\uD83E\\uDD25|\\uD83C\\uDFB5|\\uD83C\\uDFB6|\\uD83C\\uDFB7|\\uD83E\\uDD24|\\uD83C\\uDFB8|\\uD83C\\uDFB9|\\uD83C\\uDFBA|\\uD83E\\uDD23|\\uD83C\\uDFBB|\\uD83C\\uDFBC|\\uD83C\\uDFBD|\\uD83E\\uDD22|\\uD83C\\uDFBE|\\uD83C\\uDFBF|\\uD83C\\uDFC0|\\uD83C\\uDFC1|\\uD83E\\uDD21|\\uD83C\\uDFC2|\\uD83C\\uDFC3|\\uD83C\\uDFC4|\\uD83C\\uDFC6|\\uD83C\\uDFC8|\\uD83C\\uDFCA|\\uD83C\\uDFE0|\\uD83C\\uDFE1|\\uD83C\\uDFE2|\\uD83C\\uDFE3|\\uD83C\\uDFE5|\\uD83C\\uDFE6|\\uD83C\\uDFE7|\\uD83C\\uDFE8|\\uD83C\\uDFE9|\\uD83C\\uDFEA|\\uD83C\\uDFEB|\\uD83C\\uDFEC|\\uD83E\\uDD20|\\uD83C\\uDFED|\\uD83C\\uDFEE|\\uD83C\\uDFEF|\\uD83C\\uDFF0|\\uD83D\\uDC0C|\\uD83D\\uDC0D|\\uD83D\\uDC0E|\\uD83D\\uDC11|\\uD83D\\uDC12|\\uD83D\\uDC14|\\uD83D\\uDC17|\\uD83D\\uDC18|\\uD83D\\uDC19|\\uD83D\\uDC1A|\\uD83D\\uDC1B|\\uD83D\\uDC1C|\\uD83D\\uDC1D|\\uD83D\\uDC1E|\\uD83D\\uDC1F|\\uD83D\\uDC20|\\uD83D\\uDC21|\\uD83D\\uDC22|\\uD83D\\uDC23|\\uD83D\\uDC24|\\uD83D\\uDC25|\\uD83D\\uDC26|\\uD83D\\uDC27|\\uD83D\\uDC28|\\uD83D\\uDC29|\\uD83D\\uDC2B|\\uD83D\\uDC2C|\\uD83D\\uDC2D|\\uD83D\\uDC2E|\\uD83D\\uDC2F|\\uD83D\\uDC30|\\uD83D\\uDC31|\\uD83D\\uDC32|\\uD83D\\uDC33|\\uD83D\\uDC34|\\uD83D\\uDC35|\\uD83D\\uDC36|\\uD83D\\uDC37|\\uD83D\\uDC38|\\uD83D\\uDC39|\\uD83D\\uDC3A|\\uD83D\\uDC3B|\\uD83D\\uDC3C|\\uD83D\\uDC3D|\\uD83D\\uDC3E|\\uD83D\\uDC40|\\uD83D\\uDC42|\\uD83D\\uDC43|\\uD83D\\uDC44|\\uD83D\\uDC45|\\uD83D\\uDC46|\\uD83D\\uDC47|\\uD83D\\uDC48|\\uD83D\\uDC49|\\uD83D\\uDC4A|\\uD83D\\uDC4B|\\uD83D\\uDC4C|\\uD83D\\uDC4D|\\uD83D\\uDC4E|\\uD83D\\uDC4F|\\uD83D\\uDC50|\\uD83D\\uDC51|\\uD83D\\uDC52|\\uD83D\\uDC53|\\uD83D\\uDC54|\\uD83D\\uDC55|\\uD83D\\uDC56|\\uD83D\\uDC57|\\uD83D\\uDC58|\\uD83D\\uDC59|\\uD83D\\uDC5A|\\uD83D\\uDC5B|\\uD83D\\uDC5C|\\uD83D\\uDC5D|\\uD83D\\uDC5E|\\uD83D\\uDC5F|\\uD83D\\uDC60|\\uD83D\\uDC61|\\uD83D\\uDC62|\\uD83D\\uDC63|\\uD83D\\uDC64|\\uD83D\\uDC66|\\uD83D\\uDC67|\\uD83D\\uDC68|\\uD83D\\uDC69|\\uD83D\\uDC6A|\\uD83D\\uDC6B|\\uD83D\\uDC6E|\\uD83D\\uDC6F|\\uD83D\\uDC70|\\uD83D\\uDC71|\\uD83D\\uDC72|\\uD83D\\uDC73|\\uD83D\\uDC74|\\uD83D\\uDC75|\\uD83D\\uDC76|\\uD83D\\uDC77|\\uD83D\\uDC78|\\uD83D\\uDC79|\\uD83D\\uDC7A|\\uD83D\\uDC7B|\\uD83D\\uDC7C|\\uD83D\\uDC7D|\\uD83D\\uDC7E|\\uD83D\\uDC7F|\\uD83D\\uDC80|\\uD83D\\uDCC7|\\uD83D\\uDC81|\\uD83D\\uDC82|\\uD83D\\uDC83|\\uD83D\\uDC84|\\uD83D\\uDC85|\\uD83D\\uDCD2|\\uD83D\\uDC86|\\uD83D\\uDCD3|\\uD83D\\uDC87|\\uD83D\\uDCD4|\\uD83D\\uDC88|\\uD83D\\uDCD5|\\uD83D\\uDC89|\\uD83D\\uDCD6|\\uD83D\\uDC8A|\\uD83D\\uDCD7|\\uD83D\\uDC8B|\\uD83D\\uDCD8|\\uD83D\\uDC8C|\\uD83D\\uDCD9|\\uD83D\\uDC8D|\\uD83D\\uDCDA|\\uD83D\\uDC8E|\\uD83D\\uDCDB|\\uD83D\\uDC8F|\\uD83D\\uDCDC|\\uD83D\\uDC90|\\uD83D\\uDCDD|\\uD83D\\uDC91|\\uD83D\\uDCDE|\\uD83D\\uDC92|\\uD83D\\uDCDF|\\uD83D\\uDCE0|\\uD83D\\uDC93|\\uD83D\\uDCE1|\\uD83D\\uDCE2|\\uD83D\\uDC94|\\uD83D\\uDCE3|\\uD83D\\uDCE4|\\uD83D\\uDC95|\\uD83D\\uDCE5|\\uD83D\\uDCE6|\\uD83D\\uDC96|\\uD83D\\uDCE7|\\uD83D\\uDCE8|\\uD83D\\uDC97|\\uD83D\\uDCE9|\\uD83D\\uDCEA|\\uD83D\\uDC98|\\uD83D\\uDCEB|\\uD83D\\uDCEE|\\uD83D\\uDC99|\\uD83D\\uDCF0|\\uD83D\\uDCF1|\\uD83D\\uDC9A|\\uD83D\\uDCF2|\\uD83D\\uDCF3|\\uD83D\\uDC9B|\\uD83D\\uDCF4|\\uD83D\\uDCF6|\\uD83D\\uDC9C|\\uD83D\\uDCF7|\\uD83D\\uDCF9|\\uD83D\\uDC9D|\\uD83D\\uDCFA|\\uD83D\\uDCFB|\\uD83D\\uDC9E|\\uD83D\\uDCFC|\\uD83D\\uDD03|\\uD83D\\uDC9F|\\uD83D\\uDD0A|\\uD83D\\uDD0B|\\uD83D\\uDCA0|\\uD83D\\uDD0C|\\uD83D\\uDD0D|\\uD83D\\uDCA1|\\uD83D\\uDD0E|\\uD83D\\uDD0F|\\uD83D\\uDCA2|\\uD83D\\uDD10|\\uD83D\\uDD11|\\uD83D\\uDCA3|\\uD83D\\uDD12|\\uD83D\\uDD13|\\uD83D\\uDCA4|\\uD83D\\uDD14|\\uD83D\\uDD16|\\uD83D\\uDCA5|\\uD83D\\uDD17|\\uD83D\\uDD18|\\uD83D\\uDCA6|\\uD83D\\uDD19|\\uD83D\\uDD1A|\\uD83D\\uDCA7|\\uD83D\\uDD1B|\\uD83D\\uDD1C|\\uD83D\\uDCA8|\\uD83D\\uDD1D|\\uD83D\\uDD1E|\\uD83D\\uDCA9|\\uD83D\\uDD1F|\\uD83D\\uDCAA|\\uD83D\\uDD20|\\uD83D\\uDD21|\\uD83D\\uDCAB|\\uD83D\\uDD22|\\uD83D\\uDD23|\\uD83D\\uDCAC|\\uD83D\\uDD24|\\uD83D\\uDD25|\\uD83D\\uDCAE|\\uD83D\\uDD26|\\uD83D\\uDD27|\\uD83D\\uDCAF|\\uD83D\\uDD28|\\uD83D\\uDD29|\\uD83D\\uDCB0|\\uD83D\\uDD2A|\\uD83D\\uDD2B|\\uD83D\\uDCB1|\\uD83D\\uDD2E|\\uD83D\\uDCB2|\\uD83D\\uDD2F|\\uD83D\\uDCB3|\\uD83D\\uDD30|\\uD83D\\uDD31|\\uD83D\\uDCB4|\\uD83D\\uDD32|\\uD83D\\uDD33|\\uD83D\\uDCB5|\\uD83D\\uDD34|\\uD83D\\uDD35|\\uD83D\\uDCB8|\\uD83D\\uDD36|\\uD83D\\uDD37|\\uD83D\\uDCB9|\\uD83D\\uDD38|\\uD83D\\uDD39|\\uD83D\\uDCBA|\\uD83D\\uDD3A|\\uD83D\\uDD3B|\\uD83D\\uDCBB|\\uD83D\\uDD3C|\\uD83D\\uDCBC|\\uD83D\\uDD3D|\\uD83D\\uDD50|\\uD83D\\uDCBD|\\uD83D\\uDD51|\\uD83D\\uDCBE|\\uD83D\\uDD52|\\uD83D\\uDCBF|\\uD83D\\uDD53|\\uD83D\\uDCC0|\\uD83D\\uDD54|\\uD83D\\uDD55|\\uD83D\\uDCC1|\\uD83D\\uDD56|\\uD83D\\uDD57|\\uD83D\\uDCC2|\\uD83D\\uDD58|\\uD83D\\uDD59|\\uD83D\\uDCC3|\\uD83D\\uDD5A|\\uD83D\\uDD5B|\\uD83D\\uDCC4|\\uD83D\\uDDFB|\\uD83D\\uDDFC|\\uD83D\\uDCC5|\\uD83D\\uDDFD|\\uD83D\\uDDFE|\\uD83D\\uDCC6|\\uD83D\\uDDFF|\\uD83D\\uDE01|\\uD83D\\uDE02|\\uD83D\\uDE03|\\uD83D\\uDCC8|\\uD83D\\uDE04|\\uD83D\\uDE05|\\uD83D\\uDCC9|\\uD83D\\uDE06|\\uD83D\\uDE09|\\uD83D\\uDCCA|\\uD83D\\uDE0A|\\uD83D\\uDE0B|\\uD83D\\uDCCB|\\uD83D\\uDE0C|\\uD83D\\uDE0D|\\uD83D\\uDCCC|\\uD83D\\uDE0F|\\uD83D\\uDE12|\\uD83D\\uDCCD|\\uD83D\\uDE13|\\uD83D\\uDE14|\\uD83D\\uDCCE|\\uD83D\\uDE16|\\uD83D\\uDE18|\\uD83D\\uDCCF|\\uD83D\\uDE1A|\\uD83D\\uDE1C|\\uD83D\\uDCD0|\\uD83D\\uDE1D|\\uD83D\\uDE1E|\\uD83D\\uDCD1|\\uD83D\\uDE20|\\uD83D\\uDE21|\\uD83D\\uDE22|\\uD83D\\uDE23|\\uD83D\\uDE24|\\uD83D\\uDE25|\\uD83D\\uDE28|\\uD83D\\uDE29|\\uD83D\\uDE2A|\\uD83D\\uDE2B|\\uD83D\\uDE2D|\\uD83D\\uDE30|\\uD83D\\uDE31|\\uD83D\\uDE32|\\uD83D\\uDE33|\\uD83D\\uDE35|\\uD83D\\uDE37|\\uD83D\\uDE38|\\uD83D\\uDE39|\\uD83D\\uDE3A|\\uD83D\\uDE3B|\\uD83D\\uDE3C|\\uD83D\\uDE3D|\\uD83D\\uDE3E|\\uD83D\\uDE3F|\\uD83D\\uDE40|\\uD83D\\uDE45|\\uD83D\\uDE46|\\uD83D\\uDE47|\\uD83D\\uDE48|\\uD83D\\uDE49|\\uD83D\\uDE4A|\\uD83D\\uDE4B|\\uD83D\\uDE4C|\\uD83D\\uDE4D|\\uD83D\\uDE4E|\\uD83D\\uDE4F|\\uD83D\\uDE80|\\uD83D\\uDE83|\\uD83D\\uDE84|\\uD83D\\uDE85|\\uD83D\\uDE87|\\uD83D\\uDE89|\\uD83D\\uDE8C|\\uD83D\\uDE8F|\\uD83D\\uDE91|\\uD83D\\uDE92|\\uD83D\\uDE93|\\uD83D\\uDE95|\\uD83D\\uDE97|\\uD83D\\uDE99|\\uD83D\\uDE9A|\\uD83D\\uDEA2|\\uD83D\\uDEA4|\\uD83D\\uDEA5|\\uD83D\\uDEA7|\\uD83D\\uDEA8|\\uD83D\\uDEA9|\\uD83D\\uDEAA|\\uD83D\\uDEAB|\\uD83D\\uDEAC|\\uD83D\\uDEAD|\\uD83D\\uDEB2|\\uD83D\\uDEB6|\\uD83D\\uDEB9|\\uD83D\\uDEBA|\\uD83D\\uDEBB|\\uD83D\\uDEBC|\\uD83D\\uDEBD|\\uD83D\\uDEBE|\\uD83D\\uDEC0|\\uD83E\\uDD18|\\uD83D\\uDE00|\\uD83D\\uDE07|\\uD83D\\uDE08|\\uD83D\\uDE0E|\\uD83D\\uDE10|\\uD83D\\uDE11|\\uD83D\\uDE15|\\uD83D\\uDE17|\\uD83D\\uDE19|\\uD83D\\uDE1B|\\uD83D\\uDE1F|\\uD83D\\uDE26|\\uD83D\\uDE27|\\uD83D\\uDE2C|\\uD83D\\uDE2E|\\uD83D\\uDE2F|\\uD83D\\uDE34|\\uD83D\\uDE36|\\uD83D\\uDE81|\\uD83D\\uDE82|\\uD83D\\uDE86|\\uD83D\\uDE88|\\uD83D\\uDE8A|\\uD83D\\uDE8D|\\uD83D\\uDE8E|\\uD83D\\uDE90|\\uD83D\\uDE94|\\uD83D\\uDE96|\\uD83D\\uDE98|\\uD83D\\uDE9B|\\uD83D\\uDE9C|\\uD83D\\uDE9D|\\uD83D\\uDE9E|\\uD83D\\uDE9F|\\uD83D\\uDEA0|\\uD83D\\uDEA1|\\uD83D\\uDEA3|\\uD83D\\uDEA6|\\uD83D\\uDEAE|\\uD83D\\uDEAF|\\uD83D\\uDEB0|\\uD83D\\uDEB1|\\uD83D\\uDEB3|\\uD83D\\uDEB4|\\uD83D\\uDEB5|\\uD83D\\uDEB7|\\uD83D\\uDEB8|\\uD83D\\uDEBF|\\uD83D\\uDEC1|\\uD83D\\uDEC2|\\uD83D\\uDEC3|\\uD83D\\uDEC4|\\uD83D\\uDEC5|\\uD83C\\uDF0D|\\uD83C\\uDF0E|\\uD83C\\uDF10|\\uD83C\\uDF12|\\uD83C\\uDF16|\\uD83C\\uDF17|\\uD83C\\uDF18|\\uD83C\\uDF1A|\\uD83C\\uDF1C|\\uD83C\\uDF1D|\\uD83C\\uDF1E|\\uD83C\\uDF32|\\uD83C\\uDF33|\\uD83C\\uDF4B|\\uD83C\\uDF50|\\uD83C\\uDF7C|\\uD83C\\uDFC7|\\uD83C\\uDFC9|\\uD83C\\uDFE4|\\uD83D\\uDC00|\\uD83D\\uDC01|\\uD83D\\uDC02|\\uD83D\\uDC03|\\uD83D\\uDC04|\\uD83D\\uDC05|\\uD83D\\uDC06|\\uD83D\\uDC07|\\uD83D\\uDC08|\\uD83D\\uDC09|\\uD83D\\uDC0A|\\uD83D\\uDC0B|\\uD83D\\uDC0F|\\uD83D\\uDC10|\\uD83D\\uDC13|\\uD83D\\uDC15|\\uD83D\\uDC16|\\uD83D\\uDC2A|\\uD83D\\uDC65|\\uD83D\\uDC6C|\\uD83D\\uDC6D|\\uD83D\\uDCAD|\\uD83D\\uDCB6|\\uD83D\\uDCB7|\\uD83D\\uDCEC|\\uD83D\\uDCED|\\uD83D\\uDCEF|\\uD83D\\uDCF5|\\uD83D\\uDD00|\\uD83D\\uDD01|\\uD83D\\uDD02|\\uD83D\\uDD04|\\uD83D\\uDD05|\\uD83D\\uDD06|\\uD83D\\uDD07|\\uD83D\\uDD09|\\uD83D\\uDD15|\\uD83D\\uDD2C|\\uD83D\\uDD2D|\\uD83D\\uDD5C|\\uD83D\\uDD5D|\\uD83D\\uDD5E|\\uD83D\\uDD5F|\\uD83D\\uDD60|\\uD83D\\uDD61|\\uD83D\\uDD62|\\uD83D\\uDD63|\\uD83D\\uDD64|\\uD83D\\uDD65|\\uD83D\\uDD66|\\uD83D\\uDD67|\\uD83D\\uDD08|\\uD83D\\uDE8B|\\uD83C\\uDFC5|\\uD83C\\uDFF4|\\uD83D\\uDCF8|\\uD83D\\uDECC|\\uD83D\\uDD95|\\uD83D\\uDD96|\\uD83D\\uDE41|\\uD83D\\uDE42|\\uD83D\\uDEEB|\\uD83D\\uDEEC|\\uD83C\\uDFFB|\\uD83C\\uDFFC|\\uD83C\\uDFFD|\\uD83C\\uDFFE|\\uD83C\\uDFFF|\\uD83D\\uDE43|\\uD83E\\uDD11|\\uD83E\\uDD13|\\uD83E\\uDD17|\\uD83D\\uDE44|\\uD83E\\uDD14|\\uD83E\\uDD10|\\u26F2\\uFE0F|\\#\\u20E3|\\9\\u20E3|\\8\\u20E3|\\7\\u20E3|\\6\\u20E3|\\*\\u20E3|\\4\\u20E3|\\3\\u20E3|\\2\\u20E3|\\1\\u20E3|\\0\\u20E3|\\5\\u20E3|\\u26B1|\\u26B0|\\u269C|\\u269B|\\u2699|\\u2697|\\u2696|\\u2694|\\u2692|\\u2639|\\u2638|\\u262F|\\u262E|\\u262A|\\u2626|\\u2623|\\u2622|\\u2620|\\u2618|\\u2604|\\u2603|\\u2602|\\u23FA|\\u23F9|\\u23F8|\\u23F2|\\u23F1|\\u23EF|\\u23EE|\\u23ED|\\u23CF|\\u270D|\\u2328|\\u271D|\\u3299|\\u3297|\\u303D|\\u3030|\\u2B55|\\u2B50|\\u2B1C|\\u2B1B|\\u2B07|\\u2B06|\\u2B05|\\u2935|\\u23E9|\\u23EA|\\u23EB|\\u23EC|\\u23F0|\\u23F3|\\u26CE|\\u2705|\\u270A|\\u270B|\\u2728|\\u274C|\\u274E|\\u2753|\\u2754|\\u2755|\\u2795|\\u2796|\\u2797|\\u27B0|\\u27BF|\\u00A9|\\u00AE|\\u203C|\\u2049|\\u2122|\\u2139|\\u2194|\\u2195|\\u2196|\\u2197|\\u2198|\\u2199|\\u21A9|\\u21AA|\\u231A|\\u231B|\\u24C2|\\u25AA|\\u25AB|\\u25B6|\\u25C0|\\u25FB|\\u25FC|\\u25FD|\\u25FE|\\u2600|\\u2601|\\u260E|\\u2611|\\u2614|\\u2615|\\u261D|\\u263A|\\u2648|\\u2649|\\u264A|\\u264B|\\u264C|\\u264D|\\u264E|\\u264F|\\u2650|\\u2651|\\u2652|\\u2653|\\u2660|\\u2663|\\u2665|\\u2666|\\u2668|\\u267B|\\u267F|\\u2693|\\u26A0|\\u26A1|\\u26AA|\\u26AB|\\u26BD|\\u26BE|\\u26C4|\\u26C5|\\u26D4|\\u26EA|\\u26F2|\\u26F3|\\u26F5|\\u26FA|\\u26FD|\\u2702|\\u2708|\\u2709|\\u270C|\\u270F|\\u2712|\\u2714|\\u2716|\\u2733|\\u2734|\\u2744|\\u2747|\\u2721|\\u2764|\\u27A1|\\u2934|\\u2935|\\u2B05|\\u2B06|\\u2B07|\\u2B1B|\\u2B1C|\\u2B50|\\u2B55|\\u3030|\\u303D|\\u3297|\\u3299|\\u2934|\\u27A1|\\u2764|\\u2757|\\u2747|\\u2744|\\u2734|\\u2733|\\u2716|\\u2714|\\u2712|\\u270F|\\u270C|\\u2709|\\u2708|\\u2702|\\u26FD|\\u26FA|\\u26F5|\\u26F3|\\u26F2|\\u26EA|\\u26D4|\\u26C5|\\u26C4|\\u26BE|\\u26BD|\\u26AB|\\u26AA|\\u26A1|\\u26A0|\\u2693|\\u271D|\\u267F|\\u267B|\\u2668|\\u2666|\\u2665|\\u2663|\\u2660|\\u2653|\\u2652|\\u2651|\\u2650|\\u264F|\\u264E|\\u264D|\\u2328|\\u264C|\\u264B|\\u264A|\\u2649|\\u2648|\\u263A|\\u261D|\\u2615|\\u2614|\\u2611|\\u260E|\\u2601|\\u2600|\\u25FE|\\u25FD|\\u25FC|\\u25FB|\\u25C0|\\u25B6|\\u25AB|\\u25AA|\\u24C2|\\u231B|\\u231A|\\u21AA|\\u270D|\\u21A9|\\u2199|\\u2198|\\u2197|\\u2196|\\u2195|\\u2194|\\u2139|\\u2122|\\u2049|\\u203C|\\u00AE|\\u00A9|\\u2763|\\u26F9|\\u26F8|\\u26F7|\\u26F4|\\u26F1|\\u26F0|\\u26E9|\\u26D3|\\u23CF|\\u23ED|\\u23EE|\\u23EF|\\u23F1|\\u23F2|\\u23F8|\\u23F9|\\u23FA|\\u2602|\\u2603|\\u2604|\\u2618|\\u2620|\\u2622|\\u2623|\\u2626|\\u262A|\\u262E|\\u262F|\\u2638|\\u2639|\\u2692|\\u2694|\\u2696|\\u2697|\\u2699|\\u269B|\\u269C|\\u26B0|\\u26B1|\\u26C8|\\u26CF|\\u26D1|\\u26D3|\\u26E9|\\u26F0|\\u26F1|\\u26F4|\\u26F7|\\u26F8|\\u26F9|\\u2721|\\u2763|\\u26D1|\\u26CF|\\u26C8|\\u2757)";
		a.jsEscapeMap = {
			"\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69": "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469",
			"\ud83d\udc69\u2764\ud83d\udc8b\ud83d\udc69": "1f469-2764-1f48b-1f469",
			"\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68": "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468",
			"\ud83d\udc68\u2764\ud83d\udc8b\ud83d\udc68": "1f468-2764-1f48b-1f468",
			"\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66": "1f468-200d-1f468-200d-1f466-200d-1f466",
			"\ud83d\udc68\ud83d\udc68\ud83d\udc66\ud83d\udc66": "1f468-1f468-1f466-1f466",
			"\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc66": "1f468-200d-1f468-200d-1f467-200d-1f466",
			"\ud83d\udc68\ud83d\udc68\ud83d\udc67\ud83d\udc66": "1f468-1f468-1f467-1f466",
			"\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67": "1f468-200d-1f468-200d-1f467-200d-1f467",
			"\ud83d\udc68\ud83d\udc68\ud83d\udc67\ud83d\udc67": "1f468-1f468-1f467-1f467",
			"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66": "1f468-200d-1f469-200d-1f466-200d-1f466",
			"\ud83d\udc68\ud83d\udc69\ud83d\udc66\ud83d\udc66": "1f468-1f469-1f466-1f466",
			"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66": "1f468-200d-1f469-200d-1f467-200d-1f466",
			"\ud83d\udc68\ud83d\udc69\ud83d\udc67\ud83d\udc66": "1f468-1f469-1f467-1f466",
			"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67": "1f468-200d-1f469-200d-1f467-200d-1f467",
			"\ud83d\udc68\ud83d\udc69\ud83d\udc67\ud83d\udc67": "1f468-1f469-1f467-1f467",
			"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66": "1f469-200d-1f469-200d-1f466-200d-1f466",
			"\ud83d\udc69\ud83d\udc69\ud83d\udc66\ud83d\udc66": "1f469-1f469-1f466-1f466",
			"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66": "1f469-200d-1f469-200d-1f467-200d-1f466",
			"\ud83d\udc69\ud83d\udc69\ud83d\udc67\ud83d\udc66": "1f469-1f469-1f467-1f466",
			"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67": "1f469-200d-1f469-200d-1f467-200d-1f467",
			"\ud83d\udc69\ud83d\udc69\ud83d\udc67\ud83d\udc67": "1f469-1f469-1f467-1f467",
			"\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc69": "1f469-200d-2764-fe0f-200d-1f469",
			"\ud83d\udc69\u2764\ud83d\udc69": "1f469-2764-1f469",
			"\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc68": "1f468-200d-2764-fe0f-200d-1f468",
			"\ud83d\udc68\u2764\ud83d\udc68": "1f468-2764-1f468",
			"\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66": "1f468-200d-1f468-200d-1f466",
			"\ud83d\udc68\ud83d\udc68\ud83d\udc66": "1f468-1f468-1f466",
			"\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67": "1f468-200d-1f468-200d-1f467",
			"\ud83d\udc68\ud83d\udc68\ud83d\udc67": "1f468-1f468-1f467",
			"\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67": "1f468-200d-1f469-200d-1f467",
			"\ud83d\udc68\ud83d\udc69\ud83d\udc67": "1f468-1f469-1f467",
			"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66": "1f469-200d-1f469-200d-1f466",
			"\ud83d\udc69\ud83d\udc69\ud83d\udc66": "1f469-1f469-1f466",
			"\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67": "1f469-200d-1f469-200d-1f467",
			"\ud83d\udc69\ud83d\udc69\ud83d\udc67": "1f469-1f469-1f467",
			"\ud83c\udff3\ufe0f\u200d\ud83c\udf08": "1f3f3-fe0f-200d-1f308",
			"\ud83c\udff3\ud83c\udf08": "1f3f3-1f308",
			"\ud83d\udc41\u200d\ud83d\udde8": "1f441-200d-1f5e8",
			"\ud83d\udc41\ud83d\udde8": "1f441-1f5e8",
			"#\ufe0f\u20e3": "0023-fe0f-20e3",
			"#\u20e3": "0023-20e3",
			"0\ufe0f\u20e3": "0030-fe0f-20e3",
			"0\u20e3": "0030-20e3",
			"1\ufe0f\u20e3": "0031-fe0f-20e3",
			"1\u20e3": "0031-20e3",
			"2\ufe0f\u20e3": "0032-fe0f-20e3",
			"2\u20e3": "0032-20e3",
			"3\ufe0f\u20e3": "0033-fe0f-20e3",
			"3\u20e3": "0033-20e3",
			"4\ufe0f\u20e3": "0034-fe0f-20e3",
			"4\u20e3": "0034-20e3",
			"5\ufe0f\u20e3": "0035-fe0f-20e3",
			"5\u20e3": "0035-20e3",
			"6\ufe0f\u20e3": "0036-fe0f-20e3",
			"6\u20e3": "0036-20e3",
			"7\ufe0f\u20e3": "0037-fe0f-20e3",
			"7\u20e3": "0037-20e3",
			"8\ufe0f\u20e3": "0038-fe0f-20e3",
			"8\u20e3": "0038-20e3",
			"9\ufe0f\u20e3": "0039-fe0f-20e3",
			"9\u20e3": "0039-20e3",
			"*\ufe0f\u20e3": "002a-fe0f-20e3",
			"*\u20e3": "002a-20e3",
			"\ud83e\udd3e\ud83c\udfff": "1f93e-1f3ff",
			"\ud83e\udd3e\ud83c\udffe": "1f93e-1f3fe",
			"\ud83e\udd3e\ud83c\udffd": "1f93e-1f3fd",
			"\ud83e\udd3e\ud83c\udffc": "1f93e-1f3fc",
			"\ud83e\udd3e\ud83c\udffb": "1f93e-1f3fb",
			"\ud83e\udd3d\ud83c\udfff": "1f93d-1f3ff",
			"\ud83e\udd3d\ud83c\udffe": "1f93d-1f3fe",
			"\ud83e\udd3d\ud83c\udffd": "1f93d-1f3fd",
			"\ud83e\udd3d\ud83c\udffc": "1f93d-1f3fc",
			"\ud83e\udd3d\ud83c\udffb": "1f93d-1f3fb",
			"\ud83e\udd3c\ud83c\udfff": "1f93c-1f3ff",
			"\ud83e\udd3c\ud83c\udffe": "1f93c-1f3fe",
			"\ud83e\udd3c\ud83c\udffd": "1f93c-1f3fd",
			"\ud83e\udd3c\ud83c\udffc": "1f93c-1f3fc",
			"\ud83e\udd3c\ud83c\udffb": "1f93c-1f3fb",
			"\ud83e\udd39\ud83c\udfff": "1f939-1f3ff",
			"\ud83e\udd39\ud83c\udffe": "1f939-1f3fe",
			"\ud83e\udd39\ud83c\udffd": "1f939-1f3fd",
			"\ud83e\udd39\ud83c\udffc": "1f939-1f3fc",
			"\ud83e\udd39\ud83c\udffb": "1f939-1f3fb",
			"\ud83e\udd38\ud83c\udfff": "1f938-1f3ff",
			"\ud83e\udd38\ud83c\udffe": "1f938-1f3fe",
			"\ud83e\udd38\ud83c\udffd": "1f938-1f3fd",
			"\ud83e\udd38\ud83c\udffc": "1f938-1f3fc",
			"\ud83e\udd38\ud83c\udffb": "1f938-1f3fb",
			"\ud83e\udd37\ud83c\udfff": "1f937-1f3ff",
			"\ud83e\udd37\ud83c\udffe": "1f937-1f3fe",
			"\ud83e\udd37\ud83c\udffd": "1f937-1f3fd",
			"\ud83e\udd37\ud83c\udffc": "1f937-1f3fc",
			"\ud83e\udd37\ud83c\udffb": "1f937-1f3fb",
			"\ud83e\udd36\ud83c\udfff": "1f936-1f3ff",
			"\ud83e\udd36\ud83c\udffe": "1f936-1f3fe",
			"\ud83e\udd36\ud83c\udffd": "1f936-1f3fd",
			"\ud83e\udd36\ud83c\udffc": "1f936-1f3fc",
			"\ud83e\udd36\ud83c\udffb": "1f936-1f3fb",
			"\ud83e\udd35\ud83c\udfff": "1f935-1f3ff",
			"\ud83e\udd35\ud83c\udffe": "1f935-1f3fe",
			"\ud83e\udd35\ud83c\udffd": "1f935-1f3fd",
			"\ud83e\udd35\ud83c\udffc": "1f935-1f3fc",
			"\ud83e\udd35\ud83c\udffb": "1f935-1f3fb",
			"\ud83e\udd34\ud83c\udfff": "1f934-1f3ff",
			"\ud83e\udd34\ud83c\udffe": "1f934-1f3fe",
			"\ud83e\udd34\ud83c\udffd": "1f934-1f3fd",
			"\ud83e\udd34\ud83c\udffc": "1f934-1f3fc",
			"\ud83e\udd34\ud83c\udffb": "1f934-1f3fb",
			"\ud83e\udd33\ud83c\udfff": "1f933-1f3ff",
			"\ud83e\udd33\ud83c\udffe": "1f933-1f3fe",
			"\ud83e\udd33\ud83c\udffd": "1f933-1f3fd",
			"\ud83e\udd33\ud83c\udffc": "1f933-1f3fc",
			"\ud83e\udd33\ud83c\udffb": "1f933-1f3fb",
			"\ud83e\udd30\ud83c\udfff": "1f930-1f3ff",
			"\ud83e\udd30\ud83c\udffe": "1f930-1f3fe",
			"\ud83e\udd30\ud83c\udffd": "1f930-1f3fd",
			"\ud83e\udd30\ud83c\udffc": "1f930-1f3fc",
			"\ud83e\udd30\ud83c\udffb": "1f930-1f3fb",
			"\ud83e\udd26\ud83c\udfff": "1f926-1f3ff",
			"\ud83e\udd26\ud83c\udffe": "1f926-1f3fe",
			"\ud83e\udd26\ud83c\udffd": "1f926-1f3fd",
			"\ud83e\udd26\ud83c\udffc": "1f926-1f3fc",
			"\ud83e\udd26\ud83c\udffb": "1f926-1f3fb",
			"\ud83e\udd1e\ud83c\udfff": "1f91e-1f3ff",
			"\ud83e\udd1e\ud83c\udffe": "1f91e-1f3fe",
			"\ud83e\udd1e\ud83c\udffd": "1f91e-1f3fd",
			"\ud83e\udd1e\ud83c\udffc": "1f91e-1f3fc",
			"\ud83e\udd1e\ud83c\udffb": "1f91e-1f3fb",
			"\ud83e\udd1d\ud83c\udfff": "1f91d-1f3ff",
			"\ud83e\udd1d\ud83c\udffe": "1f91d-1f3fe",
			"\ud83e\udd1d\ud83c\udffd": "1f91d-1f3fd",
			"\ud83e\udd1d\ud83c\udffc": "1f91d-1f3fc",
			"\ud83e\udd1d\ud83c\udffb": "1f91d-1f3fb",
			"\ud83e\udd1c\ud83c\udfff": "1f91c-1f3ff",
			"\ud83e\udd1c\ud83c\udffe": "1f91c-1f3fe",
			"\ud83e\udd1c\ud83c\udffd": "1f91c-1f3fd",
			"\ud83e\udd1c\ud83c\udffc": "1f91c-1f3fc",
			"\ud83e\udd1c\ud83c\udffb": "1f91c-1f3fb",
			"\ud83e\udd1b\ud83c\udfff": "1f91b-1f3ff",
			"\ud83e\udd1b\ud83c\udffe": "1f91b-1f3fe",
			"\ud83e\udd1b\ud83c\udffd": "1f91b-1f3fd",
			"\ud83e\udd1b\ud83c\udffc": "1f91b-1f3fc",
			"\ud83e\udd1b\ud83c\udffb": "1f91b-1f3fb",
			"\ud83e\udd1a\ud83c\udfff": "1f91a-1f3ff",
			"\ud83e\udd1a\ud83c\udffe": "1f91a-1f3fe",
			"\ud83e\udd1a\ud83c\udffd": "1f91a-1f3fd",
			"\ud83e\udd1a\ud83c\udffc": "1f91a-1f3fc",
			"\ud83e\udd1a\ud83c\udffb": "1f91a-1f3fb",
			"\ud83e\udd19\ud83c\udfff": "1f919-1f3ff",
			"\ud83e\udd19\ud83c\udffe": "1f919-1f3fe",
			"\ud83e\udd19\ud83c\udffd": "1f919-1f3fd",
			"\ud83e\udd19\ud83c\udffc": "1f919-1f3fc",
			"\ud83e\udd19\ud83c\udffb": "1f919-1f3fb",
			"\ud83e\udd18\ud83c\udfff": "1f918-1f3ff",
			"\ud83e\udd18\ud83c\udffe": "1f918-1f3fe",
			"\ud83e\udd18\ud83c\udffd": "1f918-1f3fd",
			"\ud83e\udd18\ud83c\udffc": "1f918-1f3fc",
			"\ud83e\udd18\ud83c\udffb": "1f918-1f3fb",
			"\ud83d\udec0\ud83c\udfff": "1f6c0-1f3ff",
			"\ud83d\udec0\ud83c\udffe": "1f6c0-1f3fe",
			"\ud83d\udec0\ud83c\udffd": "1f6c0-1f3fd",
			"\ud83d\udec0\ud83c\udffc": "1f6c0-1f3fc",
			"\ud83d\udec0\ud83c\udffb": "1f6c0-1f3fb",
			"\ud83d\udeb6\ud83c\udfff": "1f6b6-1f3ff",
			"\ud83d\udeb6\ud83c\udffe": "1f6b6-1f3fe",
			"\ud83d\udeb6\ud83c\udffd": "1f6b6-1f3fd",
			"\ud83d\udeb6\ud83c\udffc": "1f6b6-1f3fc",
			"\ud83d\udeb6\ud83c\udffb": "1f6b6-1f3fb",
			"\ud83d\udeb5\ud83c\udfff": "1f6b5-1f3ff",
			"\ud83d\udeb5\ud83c\udffe": "1f6b5-1f3fe",
			"\ud83d\udeb5\ud83c\udffd": "1f6b5-1f3fd",
			"\ud83d\udeb5\ud83c\udffc": "1f6b5-1f3fc",
			"\ud83d\udeb5\ud83c\udffb": "1f6b5-1f3fb",
			"\ud83d\udeb4\ud83c\udfff": "1f6b4-1f3ff",
			"\ud83d\udeb4\ud83c\udffe": "1f6b4-1f3fe",
			"\ud83d\udeb4\ud83c\udffd": "1f6b4-1f3fd",
			"\ud83d\udeb4\ud83c\udffc": "1f6b4-1f3fc",
			"\ud83d\udeb4\ud83c\udffb": "1f6b4-1f3fb",
			"\ud83d\udea3\ud83c\udfff": "1f6a3-1f3ff",
			"\ud83d\udea3\ud83c\udffe": "1f6a3-1f3fe",
			"\ud83d\udea3\ud83c\udffd": "1f6a3-1f3fd",
			"\ud83d\udea3\ud83c\udffc": "1f6a3-1f3fc",
			"\ud83d\udea3\ud83c\udffb": "1f6a3-1f3fb",
			"\ud83d\ude4f\ud83c\udfff": "1f64f-1f3ff",
			"\ud83d\ude4f\ud83c\udffe": "1f64f-1f3fe",
			"\ud83d\ude4f\ud83c\udffd": "1f64f-1f3fd",
			"\ud83d\ude4f\ud83c\udffc": "1f64f-1f3fc",
			"\ud83d\ude4f\ud83c\udffb": "1f64f-1f3fb",
			"\ud83d\ude4e\ud83c\udfff": "1f64e-1f3ff",
			"\ud83d\ude4e\ud83c\udffe": "1f64e-1f3fe",
			"\ud83d\ude4e\ud83c\udffd": "1f64e-1f3fd",
			"\ud83d\ude4e\ud83c\udffc": "1f64e-1f3fc",
			"\ud83d\ude4e\ud83c\udffb": "1f64e-1f3fb",
			"\ud83d\ude4d\ud83c\udfff": "1f64d-1f3ff",
			"\ud83d\ude4d\ud83c\udffe": "1f64d-1f3fe",
			"\ud83d\ude4d\ud83c\udffd": "1f64d-1f3fd",
			"\ud83d\ude4d\ud83c\udffc": "1f64d-1f3fc",
			"\ud83d\ude4d\ud83c\udffb": "1f64d-1f3fb",
			"\ud83d\ude4c\ud83c\udfff": "1f64c-1f3ff",
			"\ud83d\ude4c\ud83c\udffe": "1f64c-1f3fe",
			"\ud83d\ude4c\ud83c\udffd": "1f64c-1f3fd",
			"\ud83d\ude4c\ud83c\udffc": "1f64c-1f3fc",
			"\ud83d\ude4c\ud83c\udffb": "1f64c-1f3fb",
			"\ud83d\ude4b\ud83c\udfff": "1f64b-1f3ff",
			"\ud83d\ude4b\ud83c\udffe": "1f64b-1f3fe",
			"\ud83d\ude4b\ud83c\udffd": "1f64b-1f3fd",
			"\ud83d\ude4b\ud83c\udffc": "1f64b-1f3fc",
			"\ud83d\ude4b\ud83c\udffb": "1f64b-1f3fb",
			"\ud83d\ude47\ud83c\udfff": "1f647-1f3ff",
			"\ud83d\ude47\ud83c\udffe": "1f647-1f3fe",
			"\ud83d\ude47\ud83c\udffd": "1f647-1f3fd",
			"\ud83d\ude47\ud83c\udffc": "1f647-1f3fc",
			"\ud83d\ude47\ud83c\udffb": "1f647-1f3fb",
			"\ud83d\ude46\ud83c\udfff": "1f646-1f3ff",
			"\ud83d\ude46\ud83c\udffe": "1f646-1f3fe",
			"\ud83d\ude46\ud83c\udffd": "1f646-1f3fd",
			"\ud83d\ude46\ud83c\udffc": "1f646-1f3fc",
			"\ud83d\ude46\ud83c\udffb": "1f646-1f3fb",
			"\ud83d\ude45\ud83c\udfff": "1f645-1f3ff",
			"\ud83d\ude45\ud83c\udffe": "1f645-1f3fe",
			"\ud83d\ude45\ud83c\udffd": "1f645-1f3fd",
			"\ud83d\ude45\ud83c\udffc": "1f645-1f3fc",
			"\ud83d\ude45\ud83c\udffb": "1f645-1f3fb",
			"\ud83d\udd96\ud83c\udfff": "1f596-1f3ff",
			"\ud83d\udd96\ud83c\udffe": "1f596-1f3fe",
			"\ud83d\udd96\ud83c\udffd": "1f596-1f3fd",
			"\ud83d\udd96\ud83c\udffc": "1f596-1f3fc",
			"\ud83d\udd96\ud83c\udffb": "1f596-1f3fb",
			"\ud83d\udd95\ud83c\udfff": "1f595-1f3ff",
			"\ud83d\udd95\ud83c\udffe": "1f595-1f3fe",
			"\ud83d\udd95\ud83c\udffd": "1f595-1f3fd",
			"\ud83d\udd95\ud83c\udffc": "1f595-1f3fc",
			"\ud83d\udd95\ud83c\udffb": "1f595-1f3fb",
			"\ud83d\udd90\ud83c\udfff": "1f590-1f3ff",
			"\ud83d\udd90\ud83c\udffe": "1f590-1f3fe",
			"\ud83d\udd90\ud83c\udffd": "1f590-1f3fd",
			"\ud83d\udd90\ud83c\udffc": "1f590-1f3fc",
			"\ud83d\udd90\ud83c\udffb": "1f590-1f3fb",
			"\ud83d\udd7a\ud83c\udfff": "1f57a-1f3ff",
			"\ud83d\udd7a\ud83c\udffe": "1f57a-1f3fe",
			"\ud83d\udd7a\ud83c\udffd": "1f57a-1f3fd",
			"\ud83d\udd7a\ud83c\udffc": "1f57a-1f3fc",
			"\ud83d\udd7a\ud83c\udffb": "1f57a-1f3fb",
			"\ud83d\udd75\ud83c\udfff": "1f575-1f3ff",
			"\ud83d\udd75\ud83c\udffe": "1f575-1f3fe",
			"\ud83d\udd75\ud83c\udffd": "1f575-1f3fd",
			"\ud83d\udd75\ud83c\udffc": "1f575-1f3fc",
			"\ud83d\udd75\ud83c\udffb": "1f575-1f3fb",
			"\ud83d\udcaa\ud83c\udfff": "1f4aa-1f3ff",
			"\ud83d\udcaa\ud83c\udffe": "1f4aa-1f3fe",
			"\ud83d\udcaa\ud83c\udffd": "1f4aa-1f3fd",
			"\ud83d\udcaa\ud83c\udffc": "1f4aa-1f3fc",
			"\ud83d\udcaa\ud83c\udffb": "1f4aa-1f3fb",
			"\ud83d\udc87\ud83c\udfff": "1f487-1f3ff",
			"\ud83d\udc87\ud83c\udffe": "1f487-1f3fe",
			"\ud83d\udc87\ud83c\udffd": "1f487-1f3fd",
			"\ud83d\udc87\ud83c\udffc": "1f487-1f3fc",
			"\ud83d\udc87\ud83c\udffb": "1f487-1f3fb",
			"\ud83d\udc86\ud83c\udfff": "1f486-1f3ff",
			"\ud83d\udc86\ud83c\udffe": "1f486-1f3fe",
			"\ud83d\udc86\ud83c\udffd": "1f486-1f3fd",
			"\ud83d\udc86\ud83c\udffc": "1f486-1f3fc",
			"\ud83d\udc86\ud83c\udffb": "1f486-1f3fb",
			"\ud83d\udc85\ud83c\udfff": "1f485-1f3ff",
			"\ud83d\udc85\ud83c\udffe": "1f485-1f3fe",
			"\ud83d\udc85\ud83c\udffd": "1f485-1f3fd",
			"\ud83d\udc85\ud83c\udffc": "1f485-1f3fc",
			"\ud83d\udc85\ud83c\udffb": "1f485-1f3fb",
			"\ud83d\udc83\ud83c\udfff": "1f483-1f3ff",
			"\ud83d\udc83\ud83c\udffe": "1f483-1f3fe",
			"\ud83d\udc83\ud83c\udffd": "1f483-1f3fd",
			"\ud83d\udc83\ud83c\udffc": "1f483-1f3fc",
			"\ud83d\udc83\ud83c\udffb": "1f483-1f3fb",
			"\ud83d\udc82\ud83c\udfff": "1f482-1f3ff",
			"\ud83d\udc82\ud83c\udffe": "1f482-1f3fe",
			"\ud83d\udc82\ud83c\udffd": "1f482-1f3fd",
			"\ud83d\udc82\ud83c\udffc": "1f482-1f3fc",
			"\ud83d\udc82\ud83c\udffb": "1f482-1f3fb",
			"\ud83d\udc81\ud83c\udfff": "1f481-1f3ff",
			"\ud83d\udc81\ud83c\udffe": "1f481-1f3fe",
			"\ud83d\udc81\ud83c\udffd": "1f481-1f3fd",
			"\ud83d\udc81\ud83c\udffc": "1f481-1f3fc",
			"\ud83d\udc81\ud83c\udffb": "1f481-1f3fb",
			"\ud83d\udc7c\ud83c\udfff": "1f47c-1f3ff",
			"\ud83d\udc7c\ud83c\udffe": "1f47c-1f3fe",
			"\ud83d\udc7c\ud83c\udffd": "1f47c-1f3fd",
			"\ud83d\udc7c\ud83c\udffc": "1f47c-1f3fc",
			"\ud83d\udc7c\ud83c\udffb": "1f47c-1f3fb",
			"\ud83d\udc78\ud83c\udfff": "1f478-1f3ff",
			"\ud83d\udc78\ud83c\udffe": "1f478-1f3fe",
			"\ud83d\udc78\ud83c\udffd": "1f478-1f3fd",
			"\ud83d\udc78\ud83c\udffc": "1f478-1f3fc",
			"\ud83d\udc78\ud83c\udffb": "1f478-1f3fb",
			"\ud83d\udc77\ud83c\udfff": "1f477-1f3ff",
			"\ud83d\udc77\ud83c\udffe": "1f477-1f3fe",
			"\ud83d\udc77\ud83c\udffd": "1f477-1f3fd",
			"\ud83d\udc77\ud83c\udffc": "1f477-1f3fc",
			"\ud83d\udc77\ud83c\udffb": "1f477-1f3fb",
			"\ud83d\udc76\ud83c\udfff": "1f476-1f3ff",
			"\ud83d\udc76\ud83c\udffe": "1f476-1f3fe",
			"\ud83d\udc76\ud83c\udffd": "1f476-1f3fd",
			"\ud83d\udc76\ud83c\udffc": "1f476-1f3fc",
			"\ud83d\udc76\ud83c\udffb": "1f476-1f3fb",
			"\ud83d\udc75\ud83c\udfff": "1f475-1f3ff",
			"\ud83d\udc75\ud83c\udffe": "1f475-1f3fe",
			"\ud83d\udc75\ud83c\udffd": "1f475-1f3fd",
			"\ud83d\udc75\ud83c\udffc": "1f475-1f3fc",
			"\ud83d\udc75\ud83c\udffb": "1f475-1f3fb",
			"\ud83d\udc74\ud83c\udfff": "1f474-1f3ff",
			"\ud83d\udc74\ud83c\udffe": "1f474-1f3fe",
			"\ud83d\udc74\ud83c\udffd": "1f474-1f3fd",
			"\ud83d\udc74\ud83c\udffc": "1f474-1f3fc",
			"\ud83d\udc74\ud83c\udffb": "1f474-1f3fb",
			"\ud83d\udc73\ud83c\udfff": "1f473-1f3ff",
			"\ud83d\udc73\ud83c\udffe": "1f473-1f3fe",
			"\ud83d\udc73\ud83c\udffd": "1f473-1f3fd",
			"\ud83d\udc73\ud83c\udffc": "1f473-1f3fc",
			"\ud83d\udc73\ud83c\udffb": "1f473-1f3fb",
			"\ud83d\udc72\ud83c\udfff": "1f472-1f3ff",
			"\ud83d\udc72\ud83c\udffe": "1f472-1f3fe",
			"\ud83d\udc72\ud83c\udffd": "1f472-1f3fd",
			"\ud83d\udc72\ud83c\udffc": "1f472-1f3fc",
			"\ud83d\udc72\ud83c\udffb": "1f472-1f3fb",
			"\ud83d\udc71\ud83c\udfff": "1f471-1f3ff",
			"\ud83d\udc71\ud83c\udffe": "1f471-1f3fe",
			"\ud83d\udc71\ud83c\udffd": "1f471-1f3fd",
			"\ud83d\udc71\ud83c\udffc": "1f471-1f3fc",
			"\ud83d\udc71\ud83c\udffb": "1f471-1f3fb",
			"\ud83d\udc70\ud83c\udfff": "1f470-1f3ff",
			"\ud83d\udc70\ud83c\udffe": "1f470-1f3fe",
			"\ud83d\udc70\ud83c\udffd": "1f470-1f3fd",
			"\ud83d\udc70\ud83c\udffc": "1f470-1f3fc",
			"\ud83d\udc70\ud83c\udffb": "1f470-1f3fb",
			"\ud83d\udc6e\ud83c\udfff": "1f46e-1f3ff",
			"\ud83d\udc6e\ud83c\udffe": "1f46e-1f3fe",
			"\ud83d\udc6e\ud83c\udffd": "1f46e-1f3fd",
			"\ud83d\udc6e\ud83c\udffc": "1f46e-1f3fc",
			"\ud83d\udc6e\ud83c\udffb": "1f46e-1f3fb",
			"\ud83d\udc69\ud83c\udfff": "1f469-1f3ff",
			"\ud83d\udc69\ud83c\udffe": "1f469-1f3fe",
			"\ud83d\udc69\ud83c\udffd": "1f469-1f3fd",
			"\ud83d\udc69\ud83c\udffc": "1f469-1f3fc",
			"\ud83d\udc69\ud83c\udffb": "1f469-1f3fb",
			"\ud83d\udc68\ud83c\udfff": "1f468-1f3ff",
			"\ud83d\udc68\ud83c\udffe": "1f468-1f3fe",
			"\ud83d\udc68\ud83c\udffd": "1f468-1f3fd",
			"\ud83d\udc68\ud83c\udffc": "1f468-1f3fc",
			"\ud83d\udc68\ud83c\udffb": "1f468-1f3fb",
			"\ud83d\udc67\ud83c\udfff": "1f467-1f3ff",
			"\ud83d\udc67\ud83c\udffe": "1f467-1f3fe",
			"\ud83d\udc67\ud83c\udffd": "1f467-1f3fd",
			"\ud83d\udc67\ud83c\udffc": "1f467-1f3fc",
			"\ud83d\udc67\ud83c\udffb": "1f467-1f3fb",
			"\ud83d\udc66\ud83c\udfff": "1f466-1f3ff",
			"\ud83d\udc66\ud83c\udffe": "1f466-1f3fe",
			"\ud83d\udc66\ud83c\udffd": "1f466-1f3fd",
			"\ud83d\udc66\ud83c\udffc": "1f466-1f3fc",
			"\ud83d\udc66\ud83c\udffb": "1f466-1f3fb",
			"\ud83d\udc50\ud83c\udfff": "1f450-1f3ff",
			"\ud83d\udc50\ud83c\udffe": "1f450-1f3fe",
			"\ud83d\udc50\ud83c\udffd": "1f450-1f3fd",
			"\ud83d\udc50\ud83c\udffc": "1f450-1f3fc",
			"\ud83d\udc50\ud83c\udffb": "1f450-1f3fb",
			"\ud83d\udc4f\ud83c\udfff": "1f44f-1f3ff",
			"\ud83d\udc4f\ud83c\udffe": "1f44f-1f3fe",
			"\ud83d\udc4f\ud83c\udffd": "1f44f-1f3fd",
			"\ud83d\udc4f\ud83c\udffc": "1f44f-1f3fc",
			"\ud83d\udc4f\ud83c\udffb": "1f44f-1f3fb",
			"\ud83d\udc4e\ud83c\udfff": "1f44e-1f3ff",
			"\ud83d\udc4e\ud83c\udffe": "1f44e-1f3fe",
			"\ud83d\udc4e\ud83c\udffd": "1f44e-1f3fd",
			"\ud83d\udc4e\ud83c\udffc": "1f44e-1f3fc",
			"\ud83d\udc4e\ud83c\udffb": "1f44e-1f3fb",
			"\ud83d\udc4d\ud83c\udfff": "1f44d-1f3ff",
			"\ud83d\udc4d\ud83c\udffe": "1f44d-1f3fe",
			"\ud83d\udc4d\ud83c\udffd": "1f44d-1f3fd",
			"\ud83d\udc4d\ud83c\udffc": "1f44d-1f3fc",
			"\ud83d\udc4d\ud83c\udffb": "1f44d-1f3fb",
			"\ud83d\udc4c\ud83c\udfff": "1f44c-1f3ff",
			"\ud83d\udc4c\ud83c\udffe": "1f44c-1f3fe",
			"\ud83d\udc4c\ud83c\udffd": "1f44c-1f3fd",
			"\ud83d\udc4c\ud83c\udffc": "1f44c-1f3fc",
			"\ud83d\udc4c\ud83c\udffb": "1f44c-1f3fb",
			"\ud83d\udc4b\ud83c\udfff": "1f44b-1f3ff",
			"\ud83d\udc4b\ud83c\udffe": "1f44b-1f3fe",
			"\ud83d\udc4b\ud83c\udffd": "1f44b-1f3fd",
			"\ud83d\udc4b\ud83c\udffc": "1f44b-1f3fc",
			"\ud83d\udc4b\ud83c\udffb": "1f44b-1f3fb",
			"\ud83d\udc4a\ud83c\udfff": "1f44a-1f3ff",
			"\ud83d\udc4a\ud83c\udffe": "1f44a-1f3fe",
			"\ud83d\udc4a\ud83c\udffd": "1f44a-1f3fd",
			"\ud83d\udc4a\ud83c\udffc": "1f44a-1f3fc",
			"\ud83d\udc4a\ud83c\udffb": "1f44a-1f3fb",
			"\ud83d\udc49\ud83c\udfff": "1f449-1f3ff",
			"\ud83d\udc49\ud83c\udffe": "1f449-1f3fe",
			"\ud83d\udc49\ud83c\udffd": "1f449-1f3fd",
			"\ud83d\udc49\ud83c\udffc": "1f449-1f3fc",
			"\ud83d\udc49\ud83c\udffb": "1f449-1f3fb",
			"\ud83d\udc48\ud83c\udfff": "1f448-1f3ff",
			"\ud83d\udc48\ud83c\udffe": "1f448-1f3fe",
			"\ud83d\udc48\ud83c\udffd": "1f448-1f3fd",
			"\ud83d\udc48\ud83c\udffc": "1f448-1f3fc",
			"\ud83d\udc48\ud83c\udffb": "1f448-1f3fb",
			"\ud83d\udc47\ud83c\udfff": "1f447-1f3ff",
			"\ud83d\udc47\ud83c\udffe": "1f447-1f3fe",
			"\ud83d\udc47\ud83c\udffd": "1f447-1f3fd",
			"\ud83d\udc47\ud83c\udffc": "1f447-1f3fc",
			"\ud83d\udc47\ud83c\udffb": "1f447-1f3fb",
			"\ud83d\udc46\ud83c\udfff": "1f446-1f3ff",
			"\ud83d\udc46\ud83c\udffe": "1f446-1f3fe",
			"\ud83d\udc46\ud83c\udffd": "1f446-1f3fd",
			"\ud83d\udc46\ud83c\udffc": "1f446-1f3fc",
			"\ud83d\udc46\ud83c\udffb": "1f446-1f3fb",
			"\ud83d\udc43\ud83c\udfff": "1f443-1f3ff",
			"\ud83d\udc43\ud83c\udffe": "1f443-1f3fe",
			"\ud83d\udc43\ud83c\udffd": "1f443-1f3fd",
			"\ud83d\udc43\ud83c\udffc": "1f443-1f3fc",
			"\ud83d\udc43\ud83c\udffb": "1f443-1f3fb",
			"\ud83d\udc42\ud83c\udfff": "1f442-1f3ff",
			"\ud83d\udc42\ud83c\udffe": "1f442-1f3fe",
			"\ud83d\udc42\ud83c\udffd": "1f442-1f3fd",
			"\ud83d\udc42\ud83c\udffc": "1f442-1f3fc",
			"\ud83d\udc42\ud83c\udffb": "1f442-1f3fb",
			"\ud83c\udfcb\ud83c\udfff": "1f3cb-1f3ff",
			"\ud83c\udfcb\ud83c\udffe": "1f3cb-1f3fe",
			"\ud83c\udfcb\ud83c\udffd": "1f3cb-1f3fd",
			"\ud83c\udfcb\ud83c\udffc": "1f3cb-1f3fc",
			"\ud83c\udfcb\ud83c\udffb": "1f3cb-1f3fb",
			"\ud83c\udfca\ud83c\udfff": "1f3ca-1f3ff",
			"\ud83c\udfca\ud83c\udffe": "1f3ca-1f3fe",
			"\ud83c\udfca\ud83c\udffd": "1f3ca-1f3fd",
			"\ud83c\udfca\ud83c\udffc": "1f3ca-1f3fc",
			"\ud83c\udfca\ud83c\udffb": "1f3ca-1f3fb",
			"\ud83c\udfc7\ud83c\udfff": "1f3c7-1f3ff",
			"\ud83c\udfc7\ud83c\udffe": "1f3c7-1f3fe",
			"\ud83c\udfc7\ud83c\udffd": "1f3c7-1f3fd",
			"\ud83c\udfc7\ud83c\udffc": "1f3c7-1f3fc",
			"\ud83c\udfc7\ud83c\udffb": "1f3c7-1f3fb",
			"\ud83c\udfc4\ud83c\udfff": "1f3c4-1f3ff",
			"\ud83c\udfc4\ud83c\udffe": "1f3c4-1f3fe",
			"\ud83c\udfc4\ud83c\udffd": "1f3c4-1f3fd",
			"\ud83c\udfc4\ud83c\udffc": "1f3c4-1f3fc",
			"\ud83c\udfc4\ud83c\udffb": "1f3c4-1f3fb",
			"\ud83c\udfc3\ud83c\udfff": "1f3c3-1f3ff",
			"\ud83c\udfc3\ud83c\udffe": "1f3c3-1f3fe",
			"\ud83c\udfc3\ud83c\udffd": "1f3c3-1f3fd",
			"\ud83c\udfc3\ud83c\udffc": "1f3c3-1f3fc",
			"\ud83c\udfc3\ud83c\udffb": "1f3c3-1f3fb",
			"\ud83c\udf85\ud83c\udfff": "1f385-1f3ff",
			"\ud83c\udf85\ud83c\udffe": "1f385-1f3fe",
			"\ud83c\udf85\ud83c\udffd": "1f385-1f3fd",
			"\ud83c\udf85\ud83c\udffc": "1f385-1f3fc",
			"\ud83c\udf85\ud83c\udffb": "1f385-1f3fb",
			"\ud83c\uddff\ud83c\uddfc": "1f1ff-1f1fc",
			"\ud83c\uddff\ud83c\uddf2": "1f1ff-1f1f2",
			"\ud83c\uddff\ud83c\udde6": "1f1ff-1f1e6",
			"\ud83c\uddfe\ud83c\uddf9": "1f1fe-1f1f9",
			"\ud83c\uddfe\ud83c\uddea": "1f1fe-1f1ea",
			"\ud83c\uddfd\ud83c\uddf0": "1f1fd-1f1f0",
			"\ud83c\uddfc\ud83c\uddf8": "1f1fc-1f1f8",
			"\ud83c\uddfc\ud83c\uddeb": "1f1fc-1f1eb",
			"\ud83c\uddfb\ud83c\uddfa": "1f1fb-1f1fa",
			"\ud83c\uddfb\ud83c\uddf3": "1f1fb-1f1f3",
			"\ud83c\uddfb\ud83c\uddee": "1f1fb-1f1ee",
			"\ud83c\uddfb\ud83c\uddec": "1f1fb-1f1ec",
			"\ud83c\uddfb\ud83c\uddea": "1f1fb-1f1ea",
			"\ud83c\uddfb\ud83c\udde8": "1f1fb-1f1e8",
			"\ud83c\uddfb\ud83c\udde6": "1f1fb-1f1e6",
			"\ud83c\uddfa\ud83c\uddff": "1f1fa-1f1ff",
			"\ud83c\uddfa\ud83c\uddfe": "1f1fa-1f1fe",
			"\ud83c\uddfa\ud83c\uddf8": "1f1fa-1f1f8",
			"\ud83c\uddfa\ud83c\uddf2": "1f1fa-1f1f2",
			"\ud83c\uddfa\ud83c\uddec": "1f1fa-1f1ec",
			"\ud83c\uddfa\ud83c\udde6": "1f1fa-1f1e6",
			"\ud83c\uddf9\ud83c\uddff": "1f1f9-1f1ff",
			"\ud83c\uddf9\ud83c\uddfc": "1f1f9-1f1fc",
			"\ud83c\uddf9\ud83c\uddfb": "1f1f9-1f1fb",
			"\ud83c\uddf9\ud83c\uddf9": "1f1f9-1f1f9",
			"\ud83c\uddf9\ud83c\uddf7": "1f1f9-1f1f7",
			"\ud83c\uddf9\ud83c\uddf4": "1f1f9-1f1f4",
			"\ud83c\uddf9\ud83c\uddf3": "1f1f9-1f1f3",
			"\ud83c\uddf9\ud83c\uddf2": "1f1f9-1f1f2",
			"\ud83c\uddf9\ud83c\uddf1": "1f1f9-1f1f1",
			"\ud83c\uddf9\ud83c\uddf0": "1f1f9-1f1f0",
			"\ud83c\uddf9\ud83c\uddef": "1f1f9-1f1ef",
			"\ud83c\uddf9\ud83c\udded": "1f1f9-1f1ed",
			"\ud83c\uddf9\ud83c\uddec": "1f1f9-1f1ec",
			"\ud83c\uddf9\ud83c\uddeb": "1f1f9-1f1eb",
			"\ud83c\uddf9\ud83c\udde9": "1f1f9-1f1e9",
			"\ud83c\uddf9\ud83c\udde8": "1f1f9-1f1e8",
			"\ud83c\uddf9\ud83c\udde6": "1f1f9-1f1e6",
			"\ud83c\uddf8\ud83c\uddff": "1f1f8-1f1ff",
			"\ud83c\uddf8\ud83c\uddfe": "1f1f8-1f1fe",
			"\ud83c\uddf8\ud83c\uddfd": "1f1f8-1f1fd",
			"\ud83c\uddf8\ud83c\uddfb": "1f1f8-1f1fb",
			"\ud83c\uddf8\ud83c\uddf9": "1f1f8-1f1f9",
			"\ud83c\uddf8\ud83c\uddf8": "1f1f8-1f1f8",
			"\ud83c\uddf8\ud83c\uddf7": "1f1f8-1f1f7",
			"\ud83c\uddf8\ud83c\uddf4": "1f1f8-1f1f4",
			"\ud83c\uddf8\ud83c\uddf3": "1f1f8-1f1f3",
			"\ud83c\uddf8\ud83c\uddf2": "1f1f8-1f1f2",
			"\ud83c\uddf8\ud83c\uddf1": "1f1f8-1f1f1",
			"\ud83c\uddf8\ud83c\uddf0": "1f1f8-1f1f0",
			"\ud83c\uddf8\ud83c\uddef": "1f1f8-1f1ef",
			"\ud83c\uddf8\ud83c\uddee": "1f1f8-1f1ee",
			"\ud83c\uddf8\ud83c\udded": "1f1f8-1f1ed",
			"\ud83c\uddf8\ud83c\uddec": "1f1f8-1f1ec",
			"\ud83c\uddf8\ud83c\uddea": "1f1f8-1f1ea",
			"\ud83c\uddf8\ud83c\udde9": "1f1f8-1f1e9",
			"\ud83c\uddf8\ud83c\udde8": "1f1f8-1f1e8",
			"\ud83c\uddf8\ud83c\udde7": "1f1f8-1f1e7",
			"\ud83c\uddf8\ud83c\udde6": "1f1f8-1f1e6",
			"\ud83c\uddf7\ud83c\uddfc": "1f1f7-1f1fc",
			"\ud83c\uddf7\ud83c\uddfa": "1f1f7-1f1fa",
			"\ud83c\uddf7\ud83c\uddf8": "1f1f7-1f1f8",
			"\ud83c\uddf7\ud83c\uddf4": "1f1f7-1f1f4",
			"\ud83c\uddf7\ud83c\uddea": "1f1f7-1f1ea",
			"\ud83c\uddf6\ud83c\udde6": "1f1f6-1f1e6",
			"\ud83c\uddf5\ud83c\uddfe": "1f1f5-1f1fe",
			"\ud83c\uddf5\ud83c\uddfc": "1f1f5-1f1fc",
			"\ud83c\uddf5\ud83c\uddf9": "1f1f5-1f1f9",
			"\ud83c\uddf5\ud83c\uddf8": "1f1f5-1f1f8",
			"\ud83c\uddf5\ud83c\uddf7": "1f1f5-1f1f7",
			"\ud83c\uddf5\ud83c\uddf3": "1f1f5-1f1f3",
			"\ud83c\uddf5\ud83c\uddf2": "1f1f5-1f1f2",
			"\ud83c\uddf5\ud83c\uddf1": "1f1f5-1f1f1",
			"\ud83c\uddf5\ud83c\uddf0": "1f1f5-1f1f0",
			"\ud83c\uddf5\ud83c\udded": "1f1f5-1f1ed",
			"\ud83c\uddf5\ud83c\uddec": "1f1f5-1f1ec",
			"\ud83c\uddf5\ud83c\uddeb": "1f1f5-1f1eb",
			"\ud83c\uddf5\ud83c\uddea": "1f1f5-1f1ea",
			"\ud83c\uddf5\ud83c\udde6": "1f1f5-1f1e6",
			"\ud83c\uddf4\ud83c\uddf2": "1f1f4-1f1f2",
			"\ud83c\uddf3\ud83c\uddff": "1f1f3-1f1ff",
			"\ud83c\uddf3\ud83c\uddfa": "1f1f3-1f1fa",
			"\ud83c\uddf3\ud83c\uddf7": "1f1f3-1f1f7",
			"\ud83c\uddf3\ud83c\uddf5": "1f1f3-1f1f5",
			"\ud83c\uddf3\ud83c\uddf4": "1f1f3-1f1f4",
			"\ud83c\uddf3\ud83c\uddf1": "1f1f3-1f1f1",
			"\ud83c\uddf3\ud83c\uddee": "1f1f3-1f1ee",
			"\ud83c\uddf3\ud83c\uddec": "1f1f3-1f1ec",
			"\ud83c\uddf3\ud83c\uddeb": "1f1f3-1f1eb",
			"\ud83c\uddf3\ud83c\uddea": "1f1f3-1f1ea",
			"\ud83c\uddf3\ud83c\udde8": "1f1f3-1f1e8",
			"\ud83c\uddf3\ud83c\udde6": "1f1f3-1f1e6",
			"\ud83c\uddf2\ud83c\uddff": "1f1f2-1f1ff",
			"\ud83c\uddf2\ud83c\uddfe": "1f1f2-1f1fe",
			"\ud83c\uddf2\ud83c\uddfd": "1f1f2-1f1fd",
			"\ud83c\uddf2\ud83c\uddfc": "1f1f2-1f1fc",
			"\ud83c\uddf2\ud83c\uddfb": "1f1f2-1f1fb",
			"\ud83c\uddf2\ud83c\uddfa": "1f1f2-1f1fa",
			"\ud83c\uddf2\ud83c\uddf9": "1f1f2-1f1f9",
			"\ud83c\uddf2\ud83c\uddf8": "1f1f2-1f1f8",
			"\ud83c\uddf2\ud83c\uddf7": "1f1f2-1f1f7",
			"\ud83c\uddf2\ud83c\uddf6": "1f1f2-1f1f6",
			"\ud83c\uddf2\ud83c\uddf5": "1f1f2-1f1f5",
			"\ud83c\uddf2\ud83c\uddf4": "1f1f2-1f1f4",
			"\ud83c\uddf2\ud83c\uddf3": "1f1f2-1f1f3",
			"\ud83c\uddf2\ud83c\uddf2": "1f1f2-1f1f2",
			"\ud83c\uddf2\ud83c\uddf1": "1f1f2-1f1f1",
			"\ud83c\uddf2\ud83c\uddf0": "1f1f2-1f1f0",
			"\ud83c\uddf2\ud83c\udded": "1f1f2-1f1ed",
			"\ud83c\uddf2\ud83c\uddec": "1f1f2-1f1ec",
			"\ud83c\uddf2\ud83c\uddeb": "1f1f2-1f1eb",
			"\ud83c\uddf2\ud83c\uddea": "1f1f2-1f1ea",
			"\ud83c\uddf2\ud83c\udde9": "1f1f2-1f1e9",
			"\ud83c\uddf2\ud83c\udde8": "1f1f2-1f1e8",
			"\ud83c\uddf2\ud83c\udde6": "1f1f2-1f1e6",
			"\ud83c\uddf1\ud83c\uddfe": "1f1f1-1f1fe",
			"\ud83c\uddf1\ud83c\uddfb": "1f1f1-1f1fb",
			"\ud83c\uddf1\ud83c\uddfa": "1f1f1-1f1fa",
			"\ud83c\uddf1\ud83c\uddf9": "1f1f1-1f1f9",
			"\ud83c\uddf1\ud83c\uddf8": "1f1f1-1f1f8",
			"\ud83c\uddf1\ud83c\uddf7": "1f1f1-1f1f7",
			"\ud83c\uddf1\ud83c\uddf0": "1f1f1-1f1f0",
			"\ud83c\uddf1\ud83c\uddee": "1f1f1-1f1ee",
			"\ud83c\uddf1\ud83c\udde8": "1f1f1-1f1e8",
			"\ud83c\uddf1\ud83c\udde7": "1f1f1-1f1e7",
			"\ud83c\uddf1\ud83c\udde6": "1f1f1-1f1e6",
			"\ud83c\uddf0\ud83c\uddff": "1f1f0-1f1ff",
			"\ud83c\uddf0\ud83c\uddfe": "1f1f0-1f1fe",
			"\ud83c\uddf0\ud83c\uddfc": "1f1f0-1f1fc",
			"\ud83c\uddf0\ud83c\uddf7": "1f1f0-1f1f7",
			"\ud83c\uddf0\ud83c\uddf5": "1f1f0-1f1f5",
			"\ud83c\uddf0\ud83c\uddf3": "1f1f0-1f1f3",
			"\ud83c\uddf0\ud83c\uddf2": "1f1f0-1f1f2",
			"\ud83c\uddf0\ud83c\uddee": "1f1f0-1f1ee",
			"\ud83c\uddf0\ud83c\udded": "1f1f0-1f1ed",
			"\ud83c\uddf0\ud83c\uddec": "1f1f0-1f1ec",
			"\ud83c\uddf0\ud83c\uddea": "1f1f0-1f1ea",
			"\ud83c\uddef\ud83c\uddf5": "1f1ef-1f1f5",
			"\ud83c\uddef\ud83c\uddf4": "1f1ef-1f1f4",
			"\ud83c\uddef\ud83c\uddf2": "1f1ef-1f1f2",
			"\ud83c\uddef\ud83c\uddea": "1f1ef-1f1ea",
			"\ud83c\uddee\ud83c\uddf9": "1f1ee-1f1f9",
			"\ud83c\uddee\ud83c\uddf8": "1f1ee-1f1f8",
			"\ud83c\uddee\ud83c\uddf7": "1f1ee-1f1f7",
			"\ud83c\uddee\ud83c\uddf6": "1f1ee-1f1f6",
			"\ud83c\uddee\ud83c\uddf4": "1f1ee-1f1f4",
			"\ud83c\uddee\ud83c\uddf3": "1f1ee-1f1f3",
			"\ud83c\uddee\ud83c\uddf2": "1f1ee-1f1f2",
			"\ud83c\uddee\ud83c\uddf1": "1f1ee-1f1f1",
			"\ud83c\uddee\ud83c\uddea": "1f1ee-1f1ea",
			"\ud83c\uddee\ud83c\udde9": "1f1ee-1f1e9",
			"\ud83c\uddee\ud83c\udde8": "1f1ee-1f1e8",
			"\ud83c\udded\ud83c\uddfa": "1f1ed-1f1fa",
			"\ud83c\udded\ud83c\uddf9": "1f1ed-1f1f9",
			"\ud83c\udded\ud83c\uddf7": "1f1ed-1f1f7",
			"\ud83c\udded\ud83c\uddf3": "1f1ed-1f1f3",
			"\ud83c\udded\ud83c\uddf2": "1f1ed-1f1f2",
			"\ud83c\udded\ud83c\uddf0": "1f1ed-1f1f0",
			"\ud83c\uddec\ud83c\uddfe": "1f1ec-1f1fe",
			"\ud83c\uddec\ud83c\uddfc": "1f1ec-1f1fc",
			"\ud83c\uddec\ud83c\uddfa": "1f1ec-1f1fa",
			"\ud83c\uddec\ud83c\uddf9": "1f1ec-1f1f9",
			"\ud83c\uddec\ud83c\uddf8": "1f1ec-1f1f8",
			"\ud83c\uddec\ud83c\uddf7": "1f1ec-1f1f7",
			"\ud83c\uddec\ud83c\uddf6": "1f1ec-1f1f6",
			"\ud83c\uddec\ud83c\uddf5": "1f1ec-1f1f5",
			"\ud83c\uddec\ud83c\uddf3": "1f1ec-1f1f3",
			"\ud83c\uddec\ud83c\uddf2": "1f1ec-1f1f2",
			"\ud83c\uddec\ud83c\uddf1": "1f1ec-1f1f1",
			"\ud83c\uddec\ud83c\uddee": "1f1ec-1f1ee",
			"\ud83c\uddec\ud83c\udded": "1f1ec-1f1ed",
			"\ud83c\uddec\ud83c\uddec": "1f1ec-1f1ec",
			"\ud83c\uddec\ud83c\uddeb": "1f1ec-1f1eb",
			"\ud83c\uddec\ud83c\uddea": "1f1ec-1f1ea",
			"\ud83c\uddec\ud83c\udde9": "1f1ec-1f1e9",
			"\ud83c\uddec\ud83c\udde7": "1f1ec-1f1e7",
			"\ud83c\uddec\ud83c\udde6": "1f1ec-1f1e6",
			"\ud83c\uddeb\ud83c\uddf7": "1f1eb-1f1f7",
			"\ud83c\uddeb\ud83c\uddf4": "1f1eb-1f1f4",
			"\ud83c\uddeb\ud83c\uddf2": "1f1eb-1f1f2",
			"\ud83c\uddeb\ud83c\uddf0": "1f1eb-1f1f0",
			"\ud83c\uddeb\ud83c\uddef": "1f1eb-1f1ef",
			"\ud83c\uddeb\ud83c\uddee": "1f1eb-1f1ee",
			"\ud83c\uddea\ud83c\uddfa": "1f1ea-1f1fa",
			"\ud83c\uddea\ud83c\uddf9": "1f1ea-1f1f9",
			"\ud83c\uddea\ud83c\uddf8": "1f1ea-1f1f8",
			"\ud83c\uddea\ud83c\uddf7": "1f1ea-1f1f7",
			"\ud83c\uddea\ud83c\udded": "1f1ea-1f1ed",
			"\ud83c\uddea\ud83c\uddec": "1f1ea-1f1ec",
			"\ud83c\uddea\ud83c\uddea": "1f1ea-1f1ea",
			"\ud83c\uddea\ud83c\udde8": "1f1ea-1f1e8",
			"\ud83c\uddea\ud83c\udde6": "1f1ea-1f1e6",
			"\ud83c\udde9\ud83c\uddff": "1f1e9-1f1ff",
			"\ud83c\udde9\ud83c\uddf4": "1f1e9-1f1f4",
			"\ud83c\udde9\ud83c\uddf2": "1f1e9-1f1f2",
			"\ud83c\udde9\ud83c\uddf0": "1f1e9-1f1f0",
			"\ud83c\udde9\ud83c\uddef": "1f1e9-1f1ef",
			"\ud83c\udde9\ud83c\uddec": "1f1e9-1f1ec",
			"\ud83c\udde9\ud83c\uddea": "1f1e9-1f1ea",
			"\ud83c\udde8\ud83c\uddff": "1f1e8-1f1ff",
			"\ud83c\udde8\ud83c\uddfe": "1f1e8-1f1fe",
			"\ud83c\udde8\ud83c\uddfd": "1f1e8-1f1fd",
			"\ud83c\udde8\ud83c\uddfc": "1f1e8-1f1fc",
			"\ud83c\udde8\ud83c\uddfb": "1f1e8-1f1fb",
			"\ud83c\udde8\ud83c\uddfa": "1f1e8-1f1fa",
			"\ud83c\udde8\ud83c\uddf7": "1f1e8-1f1f7",
			"\ud83c\udde8\ud83c\uddf5": "1f1e8-1f1f5",
			"\ud83c\udde8\ud83c\uddf4": "1f1e8-1f1f4",
			"\ud83c\udde8\ud83c\uddf3": "1f1e8-1f1f3",
			"\ud83c\udde8\ud83c\uddf2": "1f1e8-1f1f2",
			"\ud83c\udde8\ud83c\uddf1": "1f1e8-1f1f1",
			"\ud83c\udde8\ud83c\uddf0": "1f1e8-1f1f0",
			"\ud83c\udde8\ud83c\uddee": "1f1e8-1f1ee",
			"\ud83c\udde8\ud83c\udded": "1f1e8-1f1ed",
			"\ud83c\udde8\ud83c\uddec": "1f1e8-1f1ec",
			"\ud83c\udde8\ud83c\uddeb": "1f1e8-1f1eb",
			"\ud83c\udde8\ud83c\udde9": "1f1e8-1f1e9",
			"\ud83c\udde8\ud83c\udde8": "1f1e8-1f1e8",
			"\ud83c\udde8\ud83c\udde6": "1f1e8-1f1e6",
			"\ud83c\udde7\ud83c\uddff": "1f1e7-1f1ff",
			"\ud83c\udde7\ud83c\uddfe": "1f1e7-1f1fe",
			"\ud83c\udde7\ud83c\uddfc": "1f1e7-1f1fc",
			"\ud83c\udde7\ud83c\uddfb": "1f1e7-1f1fb",
			"\ud83c\udde7\ud83c\uddf9": "1f1e7-1f1f9",
			"\ud83c\udde7\ud83c\uddf8": "1f1e7-1f1f8",
			"\ud83c\udde7\ud83c\uddf7": "1f1e7-1f1f7",
			"\ud83c\udde7\ud83c\uddf6": "1f1e7-1f1f6",
			"\ud83c\udde7\ud83c\uddf4": "1f1e7-1f1f4",
			"\ud83c\udde7\ud83c\uddf3": "1f1e7-1f1f3",
			"\ud83c\udde7\ud83c\uddf2": "1f1e7-1f1f2",
			"\ud83c\udde7\ud83c\uddf1": "1f1e7-1f1f1",
			"\ud83c\udde7\ud83c\uddef": "1f1e7-1f1ef",
			"\ud83c\udde7\ud83c\uddee": "1f1e7-1f1ee",
			"\ud83c\udde7\ud83c\udded": "1f1e7-1f1ed",
			"\ud83c\udde7\ud83c\uddec": "1f1e7-1f1ec",
			"\ud83c\udde7\ud83c\uddeb": "1f1e7-1f1eb",
			"\ud83c\udde7\ud83c\uddea": "1f1e7-1f1ea",
			"\ud83c\udde7\ud83c\udde9": "1f1e7-1f1e9",
			"\ud83c\udde7\ud83c\udde7": "1f1e7-1f1e7",
			"\ud83c\udde7\ud83c\udde6": "1f1e7-1f1e6",
			"\ud83c\udde6\ud83c\uddff": "1f1e6-1f1ff",
			"\ud83c\udde6\ud83c\uddfd": "1f1e6-1f1fd",
			"\ud83c\udde6\ud83c\uddfc": "1f1e6-1f1fc",
			"\ud83c\udde6\ud83c\uddfa": "1f1e6-1f1fa",
			"\ud83c\udde6\ud83c\uddf9": "1f1e6-1f1f9",
			"\ud83c\udde6\ud83c\uddf8": "1f1e6-1f1f8",
			"\ud83c\udde6\ud83c\uddf7": "1f1e6-1f1f7",
			"\ud83c\udde6\ud83c\uddf6": "1f1e6-1f1f6",
			"\ud83c\udde6\ud83c\uddf4": "1f1e6-1f1f4",
			"\ud83c\udde6\ud83c\uddf2": "1f1e6-1f1f2",
			"\ud83c\udde6\ud83c\uddf1": "1f1e6-1f1f1",
			"\ud83c\udde6\ud83c\uddee": "1f1e6-1f1ee",
			"\ud83c\udde6\ud83c\uddec": "1f1e6-1f1ec",
			"\ud83c\udde6\ud83c\uddeb": "1f1e6-1f1eb",
			"\ud83c\udde6\ud83c\uddea": "1f1e6-1f1ea",
			"\ud83c\udde6\ud83c\udde9": "1f1e6-1f1e9",
			"\ud83c\udde6\ud83c\udde8": "1f1e6-1f1e8",
			"\ud83c\udc04\ufe0f": "1f004-fe0f",
			"\ud83c\udc04": "1f004",
			"\ud83c\udd7f\ufe0f": "1f17f-fe0f",
			"\ud83c\udd7f": "1f17f",
			"\ud83c\ude02\ufe0f": "1f202-fe0f",
			"\ud83c\ude02": "1f202",
			"\ud83c\ude1a\ufe0f": "1f21a-fe0f",
			"\ud83c\ude1a": "1f21a",
			"\ud83c\ude2f\ufe0f": "1f22f-fe0f",
			"\ud83c\ude2f": "1f22f",
			"\ud83c\ude37\ufe0f": "1f237-fe0f",
			"\ud83c\ude37": "1f237",
			"\ud83c\udf9e\ufe0f": "1f39e-fe0f",
			"\ud83c\udf9e": "1f39e",
			"\ud83c\udf9f\ufe0f": "1f39f-fe0f",
			"\ud83c\udf9f": "1f39f",
			"\ud83c\udfcb\ufe0f": "1f3cb-fe0f",
			"\ud83c\udfcb": "1f3cb",
			"\ud83c\udfcc\ufe0f": "1f3cc-fe0f",
			"\ud83c\udfcc": "1f3cc",
			"\ud83c\udfcd\ufe0f": "1f3cd-fe0f",
			"\ud83c\udfcd": "1f3cd",
			"\ud83c\udfce\ufe0f": "1f3ce-fe0f",
			"\ud83c\udfce": "1f3ce",
			"\ud83c\udf96\ufe0f": "1f396-fe0f",
			"\ud83c\udf96": "1f396",
			"\ud83c\udf97\ufe0f": "1f397-fe0f",
			"\ud83c\udf97": "1f397",
			"\ud83c\udf36\ufe0f": "1f336-fe0f",
			"\ud83c\udf36": "1f336",
			"\ud83c\udf27\ufe0f": "1f327-fe0f",
			"\ud83c\udf27": "1f327",
			"\ud83c\udf28\ufe0f": "1f328-fe0f",
			"\ud83c\udf28": "1f328",
			"\ud83c\udf29\ufe0f": "1f329-fe0f",
			"\ud83c\udf29": "1f329",
			"\ud83c\udf2a\ufe0f": "1f32a-fe0f",
			"\ud83c\udf2a": "1f32a",
			"\ud83c\udf2b\ufe0f": "1f32b-fe0f",
			"\ud83c\udf2b": "1f32b",
			"\ud83c\udf2c\ufe0f": "1f32c-fe0f",
			"\ud83c\udf2c": "1f32c",
			"\ud83d\udc3f\ufe0f": "1f43f-fe0f",
			"\ud83d\udc3f": "1f43f",
			"\ud83d\udd77\ufe0f": "1f577-fe0f",
			"\ud83d\udd77": "1f577",
			"\ud83d\udd78\ufe0f": "1f578-fe0f",
			"\ud83d\udd78": "1f578",
			"\ud83c\udf21\ufe0f": "1f321-fe0f",
			"\ud83c\udf21": "1f321",
			"\ud83c\udf99\ufe0f": "1f399-fe0f",
			"\ud83c\udf99": "1f399",
			"\ud83c\udf9a\ufe0f": "1f39a-fe0f",
			"\ud83c\udf9a": "1f39a",
			"\ud83c\udf9b\ufe0f": "1f39b-fe0f",
			"\ud83c\udf9b": "1f39b",
			"\ud83c\udff3\ufe0f": "1f3f3-fe0f",
			"\ud83c\udff3": "1f3f3",
			"\ud83c\udff5\ufe0f": "1f3f5-fe0f",
			"\ud83c\udff5": "1f3f5",
			"\ud83c\udff7\ufe0f": "1f3f7-fe0f",
			"\ud83c\udff7": "1f3f7",
			"\ud83d\udcfd\ufe0f": "1f4fd-fe0f",
			"\ud83d\udcfd": "1f4fd",
			"\ud83d\udd49\ufe0f": "1f549-fe0f",
			"\ud83d\udd49": "1f549",
			"\ud83d\udd4a\ufe0f": "1f54a-fe0f",
			"\ud83d\udd4a": "1f54a",
			"\ud83d\udd6f\ufe0f": "1f56f-fe0f",
			"\ud83d\udd6f": "1f56f",
			"\ud83d\udd70\ufe0f": "1f570-fe0f",
			"\ud83d\udd70": "1f570",
			"\ud83d\udd73\ufe0f": "1f573-fe0f",
			"\ud83d\udd73": "1f573",
			"\ud83d\udd76\ufe0f": "1f576-fe0f",
			"\ud83d\udd76": "1f576",
			"\ud83d\udd79\ufe0f": "1f579-fe0f",
			"\ud83d\udd79": "1f579",
			"\ud83d\udd87\ufe0f": "1f587-fe0f",
			"\ud83d\udd87": "1f587",
			"\ud83d\udd8a\ufe0f": "1f58a-fe0f",
			"\ud83d\udd8a": "1f58a",
			"\ud83d\udd8b\ufe0f": "1f58b-fe0f",
			"\ud83d\udd8b": "1f58b",
			"\ud83d\udd8c\ufe0f": "1f58c-fe0f",
			"\ud83d\udd8c": "1f58c",
			"\ud83d\udd8d\ufe0f": "1f58d-fe0f",
			"\ud83d\udd8d": "1f58d",
			"\ud83d\udda5\ufe0f": "1f5a5-fe0f",
			"\ud83d\udda5": "1f5a5",
			"\ud83d\udda8\ufe0f": "1f5a8-fe0f",
			"\ud83d\udda8": "1f5a8",
			"\ud83d\uddb2\ufe0f": "1f5b2-fe0f",
			"\ud83d\uddb2": "1f5b2",
			"\ud83d\uddbc\ufe0f": "1f5bc-fe0f",
			"\ud83d\uddbc": "1f5bc",
			"\ud83d\uddc2\ufe0f": "1f5c2-fe0f",
			"\ud83d\uddc2": "1f5c2",
			"\ud83d\uddc3\ufe0f": "1f5c3-fe0f",
			"\ud83d\uddc3": "1f5c3",
			"\ud83d\uddc4\ufe0f": "1f5c4-fe0f",
			"\ud83d\uddc4": "1f5c4",
			"\ud83d\uddd1\ufe0f": "1f5d1-fe0f",
			"\ud83d\uddd1": "1f5d1",
			"\ud83d\uddd2\ufe0f": "1f5d2-fe0f",
			"\ud83d\uddd2": "1f5d2",
			"\ud83d\uddd3\ufe0f": "1f5d3-fe0f",
			"\ud83d\uddd3": "1f5d3",
			"\ud83d\udddc\ufe0f": "1f5dc-fe0f",
			"\ud83d\udddc": "1f5dc",
			"\ud83d\udddd\ufe0f": "1f5dd-fe0f",
			"\ud83d\udddd": "1f5dd",
			"\ud83d\uddde\ufe0f": "1f5de-fe0f",
			"\ud83d\uddde": "1f5de",
			"\ud83d\udde1\ufe0f": "1f5e1-fe0f",
			"\ud83d\udde1": "1f5e1",
			"\ud83d\udde3\ufe0f": "1f5e3-fe0f",
			"\ud83d\udde3": "1f5e3",
			"\ud83d\udde8\ufe0f": "1f5e8-fe0f",
			"\ud83d\udde8": "1f5e8",
			"\ud83d\uddef\ufe0f": "1f5ef-fe0f",
			"\ud83d\uddef": "1f5ef",
			"\ud83d\uddf3\ufe0f": "1f5f3-fe0f",
			"\ud83d\uddf3": "1f5f3",
			"\ud83d\uddfa\ufe0f": "1f5fa-fe0f",
			"\ud83d\uddfa": "1f5fa",
			"\ud83d\udee0\ufe0f": "1f6e0-fe0f",
			"\ud83d\udee0": "1f6e0",
			"\ud83d\udee1\ufe0f": "1f6e1-fe0f",
			"\ud83d\udee1": "1f6e1",
			"\ud83d\udee2\ufe0f": "1f6e2-fe0f",
			"\ud83d\udee2": "1f6e2",
			"\ud83d\udef0\ufe0f": "1f6f0-fe0f",
			"\ud83d\udef0": "1f6f0",
			"\ud83c\udf7d\ufe0f": "1f37d-fe0f",
			"\ud83c\udf7d": "1f37d",
			"\ud83d\udc41\ufe0f": "1f441-fe0f",
			"\ud83d\udc41": "1f441",
			"\ud83d\udd74\ufe0f": "1f574-fe0f",
			"\ud83d\udd74": "1f574",
			"\ud83d\udd75\ufe0f": "1f575-fe0f",
			"\ud83d\udd75": "1f575",
			"\ud83d\udd90\ufe0f": "1f590-fe0f",
			"\ud83d\udd90": "1f590",
			"\ud83c\udfd4\ufe0f": "1f3d4-fe0f",
			"\ud83c\udfd4": "1f3d4",
			"\ud83c\udfd5\ufe0f": "1f3d5-fe0f",
			"\ud83c\udfd5": "1f3d5",
			"\ud83c\udfd6\ufe0f": "1f3d6-fe0f",
			"\ud83c\udfd6": "1f3d6",
			"\ud83c\udfd7\ufe0f": "1f3d7-fe0f",
			"\ud83c\udfd7": "1f3d7",
			"\ud83c\udfd8\ufe0f": "1f3d8-fe0f",
			"\ud83c\udfd8": "1f3d8",
			"\ud83c\udfd9\ufe0f": "1f3d9-fe0f",
			"\ud83c\udfd9": "1f3d9",
			"\ud83c\udfda\ufe0f": "1f3da-fe0f",
			"\ud83c\udfda": "1f3da",
			"\ud83c\udfdb\ufe0f": "1f3db-fe0f",
			"\ud83c\udfdb": "1f3db",
			"\ud83c\udfdc\ufe0f": "1f3dc-fe0f",
			"\ud83c\udfdc": "1f3dc",
			"\ud83c\udfdd\ufe0f": "1f3dd-fe0f",
			"\ud83c\udfdd": "1f3dd",
			"\ud83c\udfde\ufe0f": "1f3de-fe0f",
			"\ud83c\udfde": "1f3de",
			"\ud83c\udfdf\ufe0f": "1f3df-fe0f",
			"\ud83c\udfdf": "1f3df",
			"\ud83d\udecb\ufe0f": "1f6cb-fe0f",
			"\ud83d\udecb": "1f6cb",
			"\ud83d\udecd\ufe0f": "1f6cd-fe0f",
			"\ud83d\udecd": "1f6cd",
			"\ud83d\udece\ufe0f": "1f6ce-fe0f",
			"\ud83d\udece": "1f6ce",
			"\ud83d\udecf\ufe0f": "1f6cf-fe0f",
			"\ud83d\udecf": "1f6cf",
			"\ud83d\udee3\ufe0f": "1f6e3-fe0f",
			"\ud83d\udee3": "1f6e3",
			"\ud83d\udee4\ufe0f": "1f6e4-fe0f",
			"\ud83d\udee4": "1f6e4",
			"\ud83d\udee5\ufe0f": "1f6e5-fe0f",
			"\ud83d\udee5": "1f6e5",
			"\ud83d\udee9\ufe0f": "1f6e9-fe0f",
			"\ud83d\udee9": "1f6e9",
			"\ud83d\udef3\ufe0f": "1f6f3-fe0f",
			"\ud83d\udef3": "1f6f3",
			"\ud83c\udf24\ufe0f": "1f324-fe0f",
			"\ud83c\udf24": "1f324",
			"\ud83c\udf25\ufe0f": "1f325-fe0f",
			"\ud83c\udf25": "1f325",
			"\ud83c\udf26\ufe0f": "1f326-fe0f",
			"\ud83c\udf26": "1f326",
			"\ud83d\uddb1\ufe0f": "1f5b1-fe0f",
			"\ud83d\uddb1": "1f5b1",
			"\u261d\ud83c\udffb": "261d-1f3fb",
			"\u261d\ud83c\udffc": "261d-1f3fc",
			"\u261d\ud83c\udffd": "261d-1f3fd",
			"\u261d\ud83c\udffe": "261d-1f3fe",
			"\u261d\ud83c\udfff": "261d-1f3ff",
			"\u270c\ud83c\udffb": "270c-1f3fb",
			"\u270c\ud83c\udffc": "270c-1f3fc",
			"\u270c\ud83c\udffd": "270c-1f3fd",
			"\u270c\ud83c\udffe": "270c-1f3fe",
			"\u270c\ud83c\udfff": "270c-1f3ff",
			"\u270a\ud83c\udffb": "270a-1f3fb",
			"\u270a\ud83c\udffc": "270a-1f3fc",
			"\u270a\ud83c\udffd": "270a-1f3fd",
			"\u270a\ud83c\udffe": "270a-1f3fe",
			"\u270a\ud83c\udfff": "270a-1f3ff",
			"\u270b\ud83c\udffb": "270b-1f3fb",
			"\u270b\ud83c\udffc": "270b-1f3fc",
			"\u270b\ud83c\udffd": "270b-1f3fd",
			"\u270b\ud83c\udffe": "270b-1f3fe",
			"\u270b\ud83c\udfff": "270b-1f3ff",
			"\u270d\ud83c\udffb": "270d-1f3fb",
			"\u270d\ud83c\udffc": "270d-1f3fc",
			"\u270d\ud83c\udffd": "270d-1f3fd",
			"\u270d\ud83c\udffe": "270d-1f3fe",
			"\u270d\ud83c\udfff": "270d-1f3ff",
			"\u26f9\ud83c\udffb": "26f9-1f3fb",
			"\u26f9\ud83c\udffc": "26f9-1f3fc",
			"\u26f9\ud83c\udffd": "26f9-1f3fd",
			"\u26f9\ud83c\udffe": "26f9-1f3fe",
			"\u26f9\ud83c\udfff": "26f9-1f3ff",
			"\u00a9\ufe0f": "00a9-fe0f",
			"\u00a9": "00a9",
			"\u00ae\ufe0f": "00ae-fe0f",
			"\u00ae": "00ae",
			"\u203c\ufe0f": "203c-fe0f",
			"\u203c": "203c",
			"\u2049\ufe0f": "2049-fe0f",
			"\u2049": "2049",
			"\u2122\ufe0f": "2122-fe0f",
			"\u2122": "2122",
			"\u2139\ufe0f": "2139-fe0f",
			"\u2139": "2139",
			"\u2194\ufe0f": "2194-fe0f",
			"\u2194": "2194",
			"\u2195\ufe0f": "2195-fe0f",
			"\u2195": "2195",
			"\u2196\ufe0f": "2196-fe0f",
			"\u2196": "2196",
			"\u2197\ufe0f": "2197-fe0f",
			"\u2197": "2197",
			"\u2198\ufe0f": "2198-fe0f",
			"\u2198": "2198",
			"\u2199\ufe0f": "2199-fe0f",
			"\u2199": "2199",
			"\u21a9\ufe0f": "21a9-fe0f",
			"\u21a9": "21a9",
			"\u21aa\ufe0f": "21aa-fe0f",
			"\u21aa": "21aa",
			"\u231a\ufe0f": "231a-fe0f",
			"\u231a": "231a",
			"\u231b\ufe0f": "231b-fe0f",
			"\u231b": "231b",
			"\u24c2\ufe0f": "24c2-fe0f",
			"\u24c2": "24c2",
			"\u25aa\ufe0f": "25aa-fe0f",
			"\u25aa": "25aa",
			"\u25ab\ufe0f": "25ab-fe0f",
			"\u25ab": "25ab",
			"\u25b6\ufe0f": "25b6-fe0f",
			"\u25b6": "25b6",
			"\u25c0\ufe0f": "25c0-fe0f",
			"\u25c0": "25c0",
			"\u25fb\ufe0f": "25fb-fe0f",
			"\u25fb": "25fb",
			"\u25fc\ufe0f": "25fc-fe0f",
			"\u25fc": "25fc",
			"\u25fd\ufe0f": "25fd-fe0f",
			"\u25fd": "25fd",
			"\u25fe\ufe0f": "25fe-fe0f",
			"\u25fe": "25fe",
			"\u2600\ufe0f": "2600-fe0f",
			"\u2600": "2600",
			"\u2601\ufe0f": "2601-fe0f",
			"\u2601": "2601",
			"\u260e\ufe0f": "260e-fe0f",
			"\u260e": "260e",
			"\u2611\ufe0f": "2611-fe0f",
			"\u2611": "2611",
			"\u2614\ufe0f": "2614-fe0f",
			"\u2614": "2614",
			"\u2615\ufe0f": "2615-fe0f",
			"\u2615": "2615",
			"\u261d\ufe0f": "261d-fe0f",
			"\u261d": "261d",
			"\u263a\ufe0f": "263a-fe0f",
			"\u263a": "263a",
			"\u2648\ufe0f": "2648-fe0f",
			"\u2648": "2648",
			"\u2649\ufe0f": "2649-fe0f",
			"\u2649": "2649",
			"\u264a\ufe0f": "264a-fe0f",
			"\u264a": "264a",
			"\u264b\ufe0f": "264b-fe0f",
			"\u264b": "264b",
			"\u264c\ufe0f": "264c-fe0f",
			"\u264c": "264c",
			"\u264d\ufe0f": "264d-fe0f",
			"\u264d": "264d",
			"\u264e\ufe0f": "264e-fe0f",
			"\u264e": "264e",
			"\u264f\ufe0f": "264f-fe0f",
			"\u264f": "264f",
			"\u2650\ufe0f": "2650-fe0f",
			"\u2650": "2650",
			"\u2651\ufe0f": "2651-fe0f",
			"\u2651": "2651",
			"\u2652\ufe0f": "2652-fe0f",
			"\u2652": "2652",
			"\u2653\ufe0f": "2653-fe0f",
			"\u2653": "2653",
			"\u2660\ufe0f": "2660-fe0f",
			"\u2660": "2660",
			"\u2663\ufe0f": "2663-fe0f",
			"\u2663": "2663",
			"\u2665\ufe0f": "2665-fe0f",
			"\u2665": "2665",
			"\u2666\ufe0f": "2666-fe0f",
			"\u2666": "2666",
			"\u2668\ufe0f": "2668-fe0f",
			"\u2668": "2668",
			"\u267b\ufe0f": "267b-fe0f",
			"\u267b": "267b",
			"\u267f\ufe0f": "267f-fe0f",
			"\u267f": "267f",
			"\u2693\ufe0f": "2693-fe0f",
			"\u2693": "2693",
			"\u26a0\ufe0f": "26a0-fe0f",
			"\u26a0": "26a0",
			"\u26a1\ufe0f": "26a1-fe0f",
			"\u26a1": "26a1",
			"\u26aa\ufe0f": "26aa-fe0f",
			"\u26aa": "26aa",
			"\u26ab\ufe0f": "26ab-fe0f",
			"\u26ab": "26ab",
			"\u26bd\ufe0f": "26bd-fe0f",
			"\u26bd": "26bd",
			"\u26be\ufe0f": "26be-fe0f",
			"\u26be": "26be",
			"\u26c4\ufe0f": "26c4-fe0f",
			"\u26c4": "26c4",
			"\u26c5\ufe0f": "26c5-fe0f",
			"\u26c5": "26c5",
			"\u26d4\ufe0f": "26d4-fe0f",
			"\u26d4": "26d4",
			"\u26ea\ufe0f": "26ea-fe0f",
			"\u26ea": "26ea",
			"\u26f2\ufe0f": "26f2-fe0f",
			"\u26f2": "26f2",
			"\u26f3\ufe0f": "26f3-fe0f",
			"\u26f3": "26f3",
			"\u26f5\ufe0f": "26f5-fe0f",
			"\u26f5": "26f5",
			"\u26fa\ufe0f": "26fa-fe0f",
			"\u26fa": "26fa",
			"\u26fd\ufe0f": "26fd-fe0f",
			"\u26fd": "26fd",
			"\u2702\ufe0f": "2702-fe0f",
			"\u2702": "2702",
			"\u2708\ufe0f": "2708-fe0f",
			"\u2708": "2708",
			"\u2709\ufe0f": "2709-fe0f",
			"\u2709": "2709",
			"\u270c\ufe0f": "270c-fe0f",
			"\u270c": "270c",
			"\u270f\ufe0f": "270f-fe0f",
			"\u270f": "270f",
			"\u2712\ufe0f": "2712-fe0f",
			"\u2712": "2712",
			"\u2714\ufe0f": "2714-fe0f",
			"\u2714": "2714",
			"\u2716\ufe0f": "2716-fe0f",
			"\u2716": "2716",
			"\u2733\ufe0f": "2733-fe0f",
			"\u2733": "2733",
			"\u2734\ufe0f": "2734-fe0f",
			"\u2734": "2734",
			"\u2744\ufe0f": "2744-fe0f",
			"\u2744": "2744",
			"\u2747\ufe0f": "2747-fe0f",
			"\u2747": "2747",
			"\u2757\ufe0f": "2757-fe0f",
			"\u2757": "2757",
			"\u2764\ufe0f": "2764-fe0f",
			"\u2764": "2764",
			"\u27a1\ufe0f": "27a1-fe0f",
			"\u27a1": "27a1",
			"\u2934\ufe0f": "2934-fe0f",
			"\u2934": "2934",
			"\u2935\ufe0f": "2935-fe0f",
			"\u2935": "2935",
			"\u2b05\ufe0f": "2b05-fe0f",
			"\u2b05": "2b05",
			"\u2b06\ufe0f": "2b06-fe0f",
			"\u2b06": "2b06",
			"\u2b07\ufe0f": "2b07-fe0f",
			"\u2b07": "2b07",
			"\u2b1b\ufe0f": "2b1b-fe0f",
			"\u2b1b": "2b1b",
			"\u2b1c\ufe0f": "2b1c-fe0f",
			"\u2b1c": "2b1c",
			"\u2b50\ufe0f": "2b50-fe0f",
			"\u2b50": "2b50",
			"\u2b55\ufe0f": "2b55-fe0f",
			"\u2b55": "2b55",
			"\u3030\ufe0f": "3030-fe0f",
			"\u3030": "3030",
			"\u303d\ufe0f": "303d-fe0f",
			"\u303d": "303d",
			"\u3297\ufe0f": "3297-fe0f",
			"\u3297": "3297",
			"\u3299\ufe0f": "3299-fe0f",
			"\u3299": "3299",
			"\u271d\ufe0f": "271d-fe0f",
			"\u271d": "271d",
			"\u2328\ufe0f": "2328-fe0f",
			"\u2328": "2328",
			"\u270d\ufe0f": "270d-fe0f",
			"\u270d": "270d",
			"\u23cf\ufe0f": "23cf-fe0f",
			"\u23cf": "23cf",
			"\u23ed\ufe0f": "23ed-fe0f",
			"\u23ed": "23ed",
			"\u23ee\ufe0f": "23ee-fe0f",
			"\u23ee": "23ee",
			"\u23ef\ufe0f": "23ef-fe0f",
			"\u23ef": "23ef",
			"\u23f1\ufe0f": "23f1-fe0f",
			"\u23f1": "23f1",
			"\u23f2\ufe0f": "23f2-fe0f",
			"\u23f2": "23f2",
			"\u23f8\ufe0f": "23f8-fe0f",
			"\u23f8": "23f8",
			"\u23f9\ufe0f": "23f9-fe0f",
			"\u23f9": "23f9",
			"\u23fa\ufe0f": "23fa-fe0f",
			"\u23fa": "23fa",
			"\u2602\ufe0f": "2602-fe0f",
			"\u2602": "2602",
			"\u2603\ufe0f": "2603-fe0f",
			"\u2603": "2603",
			"\u2604\ufe0f": "2604-fe0f",
			"\u2604": "2604",
			"\u2618\ufe0f": "2618-fe0f",
			"\u2618": "2618",
			"\u2620\ufe0f": "2620-fe0f",
			"\u2620": "2620",
			"\u2622\ufe0f": "2622-fe0f",
			"\u2622": "2622",
			"\u2623\ufe0f": "2623-fe0f",
			"\u2623": "2623",
			"\u2626\ufe0f": "2626-fe0f",
			"\u2626": "2626",
			"\u262a\ufe0f": "262a-fe0f",
			"\u262a": "262a",
			"\u262e\ufe0f": "262e-fe0f",
			"\u262e": "262e",
			"\u262f\ufe0f": "262f-fe0f",
			"\u262f": "262f",
			"\u2638\ufe0f": "2638-fe0f",
			"\u2638": "2638",
			"\u2639\ufe0f": "2639-fe0f",
			"\u2639": "2639",
			"\u2692\ufe0f": "2692-fe0f",
			"\u2692": "2692",
			"\u2694\ufe0f": "2694-fe0f",
			"\u2694": "2694",
			"\u2696\ufe0f": "2696-fe0f",
			"\u2696": "2696",
			"\u2697\ufe0f": "2697-fe0f",
			"\u2697": "2697",
			"\u2699\ufe0f": "2699-fe0f",
			"\u2699": "2699",
			"\u269b\ufe0f": "269b-fe0f",
			"\u269b": "269b",
			"\u269c\ufe0f": "269c-fe0f",
			"\u269c": "269c",
			"\u26b0\ufe0f": "26b0-fe0f",
			"\u26b0": "26b0",
			"\u26b1\ufe0f": "26b1-fe0f",
			"\u26b1": "26b1",
			"\u26c8\ufe0f": "26c8-fe0f",
			"\u26c8": "26c8",
			"\u26cf\ufe0f": "26cf-fe0f",
			"\u26cf": "26cf",
			"\u26d1\ufe0f": "26d1-fe0f",
			"\u26d1": "26d1",
			"\u26d3\ufe0f": "26d3-fe0f",
			"\u26d3": "26d3",
			"\u26e9\ufe0f": "26e9-fe0f",
			"\u26e9": "26e9",
			"\u26f0\ufe0f": "26f0-fe0f",
			"\u26f0": "26f0",
			"\u26f1\ufe0f": "26f1-fe0f",
			"\u26f1": "26f1",
			"\u26f4\ufe0f": "26f4-fe0f",
			"\u26f4": "26f4",
			"\u26f7\ufe0f": "26f7-fe0f",
			"\u26f7": "26f7",
			"\u26f8\ufe0f": "26f8-fe0f",
			"\u26f8": "26f8",
			"\u26f9\ufe0f": "26f9-fe0f",
			"\u26f9": "26f9",
			"\u2721\ufe0f": "2721-fe0f",
			"\u2721": "2721",
			"\u2763\ufe0f": "2763-fe0f",
			"\u2763": "2763",
			"\ud83e\udd49": "1f949",
			"\ud83e\udd48": "1f948",
			"\ud83e\udd47": "1f947",
			"\ud83e\udd3a": "1f93a",
			"\ud83e\udd45": "1f945",
			"\ud83e\udd3e": "1f93e",
			"\ud83c\uddff": "1f1ff",
			"\ud83e\udd3d": "1f93d",
			"\ud83e\udd4b": "1f94b",
			"\ud83e\udd4a": "1f94a",
			"\ud83e\udd3c": "1f93c",
			"\ud83e\udd39": "1f939",
			"\ud83e\udd38": "1f938",
			"\ud83d\udef6": "1f6f6",
			"\ud83d\udef5": "1f6f5",
			"\ud83d\udef4": "1f6f4",
			"\ud83d\uded2": "1f6d2",
			"\ud83c\udccf": "1f0cf",
			"\ud83c\udd70": "1f170",
			"\ud83c\udd71": "1f171",
			"\ud83c\udd7e": "1f17e",
			"\ud83d\uded1": "1f6d1",
			"\ud83c\udd8e": "1f18e",
			"\ud83c\udd91": "1f191",
			"\ud83c\uddfe": "1f1fe",
			"\ud83c\udd92": "1f192",
			"\ud83c\udd93": "1f193",
			"\ud83c\udd94": "1f194",
			"\ud83c\udd95": "1f195",
			"\ud83c\udd96": "1f196",
			"\ud83c\udd97": "1f197",
			"\ud83c\udd98": "1f198",
			"\ud83e\udd44": "1f944",
			"\ud83c\udd99": "1f199",
			"\ud83c\udd9a": "1f19a",
			"\ud83e\udd42": "1f942",
			"\ud83e\udd43": "1f943",
			"\ud83c\ude01": "1f201",
			"\ud83e\udd59": "1f959",
			"\ud83c\ude32": "1f232",
			"\ud83c\ude33": "1f233",
			"\ud83c\ude34": "1f234",
			"\ud83c\ude35": "1f235",
			"\ud83c\ude36": "1f236",
			"\ud83e\udd58": "1f958",
			"\ud83c\ude38": "1f238",
			"\ud83c\ude39": "1f239",
			"\ud83e\udd57": "1f957",
			"\ud83c\ude3a": "1f23a",
			"\ud83c\ude50": "1f250",
			"\ud83c\ude51": "1f251",
			"\ud83c\udf00": "1f300",
			"\ud83e\udd56": "1f956",
			"\ud83c\udf01": "1f301",
			"\ud83c\udf02": "1f302",
			"\ud83c\udf03": "1f303",
			"\ud83c\udf04": "1f304",
			"\ud83c\udf05": "1f305",
			"\ud83c\udf06": "1f306",
			"\ud83e\udd55": "1f955",
			"\ud83c\udf07": "1f307",
			"\ud83c\udf08": "1f308",
			"\ud83e\udd54": "1f954",
			"\ud83c\udf09": "1f309",
			"\ud83c\udf0a": "1f30a",
			"\ud83c\udf0b": "1f30b",
			"\ud83c\udf0c": "1f30c",
			"\ud83c\udf0f": "1f30f",
			"\ud83c\udf11": "1f311",
			"\ud83e\udd53": "1f953",
			"\ud83c\udf13": "1f313",
			"\ud83c\udf14": "1f314",
			"\ud83c\udf15": "1f315",
			"\ud83c\udf19": "1f319",
			"\ud83c\udf1b": "1f31b",
			"\ud83c\udf1f": "1f31f",
			"\ud83e\udd52": "1f952",
			"\ud83c\udf20": "1f320",
			"\ud83c\udf30": "1f330",
			"\ud83e\udd51": "1f951",
			"\ud83c\udf31": "1f331",
			"\ud83c\udf34": "1f334",
			"\ud83c\udf35": "1f335",
			"\ud83c\udf37": "1f337",
			"\ud83c\udf38": "1f338",
			"\ud83c\udf39": "1f339",
			"\ud83c\udf3a": "1f33a",
			"\ud83c\udf3b": "1f33b",
			"\ud83c\udf3c": "1f33c",
			"\ud83c\udf3d": "1f33d",
			"\ud83e\udd50": "1f950",
			"\ud83c\udf3e": "1f33e",
			"\ud83c\udf3f": "1f33f",
			"\ud83c\udf40": "1f340",
			"\ud83c\udf41": "1f341",
			"\ud83c\udf42": "1f342",
			"\ud83c\udf43": "1f343",
			"\ud83c\udf44": "1f344",
			"\ud83c\udf45": "1f345",
			"\ud83c\udf46": "1f346",
			"\ud83c\udf47": "1f347",
			"\ud83c\udf48": "1f348",
			"\ud83c\udf49": "1f349",
			"\ud83c\udf4a": "1f34a",
			"\ud83e\udd40": "1f940",
			"\ud83c\udf4c": "1f34c",
			"\ud83c\udf4d": "1f34d",
			"\ud83c\udf4e": "1f34e",
			"\ud83c\udf4f": "1f34f",
			"\ud83c\udf51": "1f351",
			"\ud83c\udf52": "1f352",
			"\ud83c\udf53": "1f353",
			"\ud83e\udd8f": "1f98f",
			"\ud83c\udf54": "1f354",
			"\ud83c\udf55": "1f355",
			"\ud83c\udf56": "1f356",
			"\ud83e\udd8e": "1f98e",
			"\ud83c\udf57": "1f357",
			"\ud83c\udf58": "1f358",
			"\ud83c\udf59": "1f359",
			"\ud83e\udd8d": "1f98d",
			"\ud83c\udf5a": "1f35a",
			"\ud83c\udf5b": "1f35b",
			"\ud83e\udd8c": "1f98c",
			"\ud83c\udf5c": "1f35c",
			"\ud83c\udf5d": "1f35d",
			"\ud83c\udf5e": "1f35e",
			"\ud83c\udf5f": "1f35f",
			"\ud83e\udd8b": "1f98b",
			"\ud83c\udf60": "1f360",
			"\ud83c\udf61": "1f361",
			"\ud83e\udd8a": "1f98a",
			"\ud83c\udf62": "1f362",
			"\ud83c\udf63": "1f363",
			"\ud83e\udd89": "1f989",
			"\ud83c\udf64": "1f364",
			"\ud83c\udf65": "1f365",
			"\ud83e\udd88": "1f988",
			"\ud83c\udf66": "1f366",
			"\ud83e\udd87": "1f987",
			"\ud83c\udf67": "1f367",
			"\ud83c\uddfd": "1f1fd",
			"\ud83c\udf68": "1f368",
			"\ud83e\udd86": "1f986",
			"\ud83c\udf69": "1f369",
			"\ud83e\udd85": "1f985",
			"\ud83c\udf6a": "1f36a",
			"\ud83d\udda4": "1f5a4",
			"\ud83c\udf6b": "1f36b",
			"\ud83c\udf6c": "1f36c",
			"\ud83c\udf6d": "1f36d",
			"\ud83c\udf6e": "1f36e",
			"\ud83c\udf6f": "1f36f",
			"\ud83e\udd1e": "1f91e",
			"\ud83c\udf70": "1f370",
			"\ud83c\udf71": "1f371",
			"\ud83c\udf72": "1f372",
			"\ud83e\udd1d": "1f91d",
			"\ud83c\udf73": "1f373",
			"\ud83c\udf74": "1f374",
			"\ud83c\udf75": "1f375",
			"\ud83c\udf76": "1f376",
			"\ud83c\udf77": "1f377",
			"\ud83c\udf78": "1f378",
			"\ud83c\udf79": "1f379",
			"\ud83c\udf7a": "1f37a",
			"\ud83c\udf7b": "1f37b",
			"\ud83c\udf80": "1f380",
			"\ud83c\udf81": "1f381",
			"\ud83c\udf82": "1f382",
			"\ud83c\udf83": "1f383",
			"\ud83e\udd1b": "1f91b",
			"\ud83e\udd1c": "1f91c",
			"\ud83c\udf84": "1f384",
			"\ud83c\udf85": "1f385",
			"\ud83c\udf86": "1f386",
			"\ud83e\udd1a": "1f91a",
			"\ud83c\udf87": "1f387",
			"\ud83c\udf88": "1f388",
			"\ud83c\udf89": "1f389",
			"\ud83c\udf8a": "1f38a",
			"\ud83c\udf8b": "1f38b",
			"\ud83c\udf8c": "1f38c",
			"\ud83e\udd19": "1f919",
			"\ud83c\udf8d": "1f38d",
			"\ud83d\udd7a": "1f57a",
			"\ud83c\udf8e": "1f38e",
			"\ud83e\udd33": "1f933",
			"\ud83c\udf8f": "1f38f",
			"\ud83e\udd30": "1f930",
			"\ud83c\udf90": "1f390",
			"\ud83e\udd26": "1f926",
			"\ud83e\udd37": "1f937",
			"\ud83c\udf91": "1f391",
			"\ud83c\udf92": "1f392",
			"\ud83c\udf93": "1f393",
			"\ud83c\udfa0": "1f3a0",
			"\ud83c\udfa1": "1f3a1",
			"\ud83c\udfa2": "1f3a2",
			"\ud83c\udfa3": "1f3a3",
			"\ud83c\udfa4": "1f3a4",
			"\ud83c\udfa5": "1f3a5",
			"\ud83c\udfa6": "1f3a6",
			"\ud83c\udfa7": "1f3a7",
			"\ud83e\udd36": "1f936",
			"\ud83c\udfa8": "1f3a8",
			"\ud83e\udd35": "1f935",
			"\ud83c\udfa9": "1f3a9",
			"\ud83c\udfaa": "1f3aa",
			"\ud83e\udd34": "1f934",
			"\ud83c\udfab": "1f3ab",
			"\ud83c\udfac": "1f3ac",
			"\ud83c\udfad": "1f3ad",
			"\ud83e\udd27": "1f927",
			"\ud83c\udfae": "1f3ae",
			"\ud83c\udfaf": "1f3af",
			"\ud83c\udfb0": "1f3b0",
			"\ud83c\udfb1": "1f3b1",
			"\ud83c\udfb2": "1f3b2",
			"\ud83c\udfb3": "1f3b3",
			"\ud83c\udfb4": "1f3b4",
			"\ud83e\udd25": "1f925",
			"\ud83c\udfb5": "1f3b5",
			"\ud83c\udfb6": "1f3b6",
			"\ud83c\udfb7": "1f3b7",
			"\ud83e\udd24": "1f924",
			"\ud83c\udfb8": "1f3b8",
			"\ud83c\udfb9": "1f3b9",
			"\ud83c\udfba": "1f3ba",
			"\ud83e\udd23": "1f923",
			"\ud83c\udfbb": "1f3bb",
			"\ud83c\udfbc": "1f3bc",
			"\ud83c\udfbd": "1f3bd",
			"\ud83e\udd22": "1f922",
			"\ud83c\udfbe": "1f3be",
			"\ud83c\udfbf": "1f3bf",
			"\ud83c\udfc0": "1f3c0",
			"\ud83c\udfc1": "1f3c1",
			"\ud83e\udd21": "1f921",
			"\ud83c\udfc2": "1f3c2",
			"\ud83c\udfc3": "1f3c3",
			"\ud83c\udfc4": "1f3c4",
			"\ud83c\udfc6": "1f3c6",
			"\ud83c\udfc8": "1f3c8",
			"\ud83c\udfca": "1f3ca",
			"\ud83c\udfe0": "1f3e0",
			"\ud83c\udfe1": "1f3e1",
			"\ud83c\udfe2": "1f3e2",
			"\ud83c\udfe3": "1f3e3",
			"\ud83c\udfe5": "1f3e5",
			"\ud83c\udfe6": "1f3e6",
			"\ud83c\udfe7": "1f3e7",
			"\ud83c\udfe8": "1f3e8",
			"\ud83c\udfe9": "1f3e9",
			"\ud83c\udfea": "1f3ea",
			"\ud83c\udfeb": "1f3eb",
			"\ud83c\udfec": "1f3ec",
			"\ud83e\udd20": "1f920",
			"\ud83c\udfed": "1f3ed",
			"\ud83c\udfee": "1f3ee",
			"\ud83c\udfef": "1f3ef",
			"\ud83c\udff0": "1f3f0",
			"\ud83d\udc0c": "1f40c",
			"\ud83d\udc0d": "1f40d",
			"\ud83d\udc0e": "1f40e",
			"\ud83d\udc11": "1f411",
			"\ud83d\udc12": "1f412",
			"\ud83d\udc14": "1f414",
			"\ud83d\udc17": "1f417",
			"\ud83d\udc18": "1f418",
			"\ud83d\udc19": "1f419",
			"\ud83d\udc1a": "1f41a",
			"\ud83d\udc1b": "1f41b",
			"\ud83d\udc1c": "1f41c",
			"\ud83d\udc1d": "1f41d",
			"\ud83d\udc1e": "1f41e",
			"\ud83d\udc1f": "1f41f",
			"\ud83d\udc20": "1f420",
			"\ud83d\udc21": "1f421",
			"\ud83d\udc22": "1f422",
			"\ud83d\udc23": "1f423",
			"\ud83d\udc24": "1f424",
			"\ud83d\udc25": "1f425",
			"\ud83d\udc26": "1f426",
			"\ud83d\udc27": "1f427",
			"\ud83d\udc28": "1f428",
			"\ud83d\udc29": "1f429",
			"\ud83d\udc2b": "1f42b",
			"\ud83d\udc2c": "1f42c",
			"\ud83d\udc2d": "1f42d",
			"\ud83d\udc2e": "1f42e",
			"\ud83d\udc2f": "1f42f",
			"\ud83d\udc30": "1f430",
			"\ud83d\udc31": "1f431",
			"\ud83d\udc32": "1f432",
			"\ud83d\udc33": "1f433",
			"\ud83d\udc34": "1f434",
			"\ud83d\udc35": "1f435",
			"\ud83d\udc36": "1f436",
			"\ud83d\udc37": "1f437",
			"\ud83d\udc38": "1f438",
			"\ud83d\udc39": "1f439",
			"\ud83d\udc3a": "1f43a",
			"\ud83d\udc3b": "1f43b",
			"\ud83d\udc3c": "1f43c",
			"\ud83d\udc3d": "1f43d",
			"\ud83d\udc3e": "1f43e",
			"\ud83d\udc40": "1f440",
			"\ud83d\udc42": "1f442",
			"\ud83d\udc43": "1f443",
			"\ud83d\udc44": "1f444",
			"\ud83d\udc45": "1f445",
			"\ud83d\udc46": "1f446",
			"\ud83d\udc47": "1f447",
			"\ud83d\udc48": "1f448",
			"\ud83d\udc49": "1f449",
			"\ud83d\udc4a": "1f44a",
			"\ud83d\udc4b": "1f44b",
			"\ud83d\udc4c": "1f44c",
			"\ud83d\udc4d": "1f44d",
			"\ud83d\udc4e": "1f44e",
			"\ud83d\udc4f": "1f44f",
			"\ud83d\udc50": "1f450",
			"\ud83d\udc51": "1f451",
			"\ud83d\udc52": "1f452",
			"\ud83d\udc53": "1f453",
			"\ud83d\udc54": "1f454",
			"\ud83d\udc55": "1f455",
			"\ud83d\udc56": "1f456",
			"\ud83d\udc57": "1f457",
			"\ud83d\udc58": "1f458",
			"\ud83d\udc59": "1f459",
			"\ud83d\udc5a": "1f45a",
			"\ud83d\udc5b": "1f45b",
			"\ud83d\udc5c": "1f45c",
			"\ud83d\udc5d": "1f45d",
			"\ud83d\udc5e": "1f45e",
			"\ud83d\udc5f": "1f45f",
			"\ud83d\udc60": "1f460",
			"\ud83d\udc61": "1f461",
			"\ud83d\udc62": "1f462",
			"\ud83d\udc63": "1f463",
			"\ud83d\udc64": "1f464",
			"\ud83d\udc66": "1f466",
			"\ud83d\udc67": "1f467",
			"\ud83d\udc68": "1f468",
			"\ud83d\udc69": "1f469",
			"\ud83d\udc6a": "1f46a",
			"\ud83d\udc6b": "1f46b",
			"\ud83d\udc6e": "1f46e",
			"\ud83d\udc6f": "1f46f",
			"\ud83d\udc70": "1f470",
			"\ud83d\udc71": "1f471",
			"\ud83d\udc72": "1f472",
			"\ud83d\udc73": "1f473",
			"\ud83d\udc74": "1f474",
			"\ud83d\udc75": "1f475",
			"\ud83d\udc76": "1f476",
			"\ud83d\udc77": "1f477",
			"\ud83d\udc78": "1f478",
			"\ud83d\udc79": "1f479",
			"\ud83d\udc7a": "1f47a",
			"\ud83d\udc7b": "1f47b",
			"\ud83d\udc7c": "1f47c",
			"\ud83d\udc7d": "1f47d",
			"\ud83d\udc7e": "1f47e",
			"\ud83d\udc7f": "1f47f",
			"\ud83d\udc80": "1f480",
			"\ud83d\udcc7": "1f4c7",
			"\ud83d\udc81": "1f481",
			"\ud83d\udc82": "1f482",
			"\ud83d\udc83": "1f483",
			"\ud83d\udc84": "1f484",
			"\ud83d\udc85": "1f485",
			"\ud83d\udcd2": "1f4d2",
			"\ud83d\udc86": "1f486",
			"\ud83d\udcd3": "1f4d3",
			"\ud83d\udc87": "1f487",
			"\ud83d\udcd4": "1f4d4",
			"\ud83d\udc88": "1f488",
			"\ud83d\udcd5": "1f4d5",
			"\ud83d\udc89": "1f489",
			"\ud83d\udcd6": "1f4d6",
			"\ud83d\udc8a": "1f48a",
			"\ud83d\udcd7": "1f4d7",
			"\ud83d\udc8b": "1f48b",
			"\ud83d\udcd8": "1f4d8",
			"\ud83d\udc8c": "1f48c",
			"\ud83d\udcd9": "1f4d9",
			"\ud83d\udc8d": "1f48d",
			"\ud83d\udcda": "1f4da",
			"\ud83d\udc8e": "1f48e",
			"\ud83d\udcdb": "1f4db",
			"\ud83d\udc8f": "1f48f",
			"\ud83d\udcdc": "1f4dc",
			"\ud83d\udc90": "1f490",
			"\ud83d\udcdd": "1f4dd",
			"\ud83d\udc91": "1f491",
			"\ud83d\udcde": "1f4de",
			"\ud83d\udc92": "1f492",
			"\ud83d\udcdf": "1f4df",
			"\ud83d\udce0": "1f4e0",
			"\ud83d\udc93": "1f493",
			"\ud83d\udce1": "1f4e1",
			"\ud83d\udce2": "1f4e2",
			"\ud83d\udc94": "1f494",
			"\ud83d\udce3": "1f4e3",
			"\ud83d\udce4": "1f4e4",
			"\ud83d\udc95": "1f495",
			"\ud83d\udce5": "1f4e5",
			"\ud83d\udce6": "1f4e6",
			"\ud83d\udc96": "1f496",
			"\ud83d\udce7": "1f4e7",
			"\ud83d\udce8": "1f4e8",
			"\ud83d\udc97": "1f497",
			"\ud83d\udce9": "1f4e9",
			"\ud83d\udcea": "1f4ea",
			"\ud83d\udc98": "1f498",
			"\ud83d\udceb": "1f4eb",
			"\ud83d\udcee": "1f4ee",
			"\ud83d\udc99": "1f499",
			"\ud83d\udcf0": "1f4f0",
			"\ud83d\udcf1": "1f4f1",
			"\ud83d\udc9a": "1f49a",
			"\ud83d\udcf2": "1f4f2",
			"\ud83d\udcf3": "1f4f3",
			"\ud83d\udc9b": "1f49b",
			"\ud83d\udcf4": "1f4f4",
			"\ud83d\udcf6": "1f4f6",
			"\ud83d\udc9c": "1f49c",
			"\ud83d\udcf7": "1f4f7",
			"\ud83d\udcf9": "1f4f9",
			"\ud83d\udc9d": "1f49d",
			"\ud83d\udcfa": "1f4fa",
			"\ud83d\udcfb": "1f4fb",
			"\ud83d\udc9e": "1f49e",
			"\ud83d\udcfc": "1f4fc",
			"\ud83d\udd03": "1f503",
			"\ud83d\udc9f": "1f49f",
			"\ud83d\udd0a": "1f50a",
			"\ud83d\udd0b": "1f50b",
			"\ud83d\udca0": "1f4a0",
			"\ud83d\udd0c": "1f50c",
			"\ud83d\udd0d": "1f50d",
			"\ud83d\udca1": "1f4a1",
			"\ud83d\udd0e": "1f50e",
			"\ud83d\udd0f": "1f50f",
			"\ud83d\udca2": "1f4a2",
			"\ud83d\udd10": "1f510",
			"\ud83d\udd11": "1f511",
			"\ud83d\udca3": "1f4a3",
			"\ud83d\udd12": "1f512",
			"\ud83d\udd13": "1f513",
			"\ud83d\udca4": "1f4a4",
			"\ud83d\udd14": "1f514",
			"\ud83d\udd16": "1f516",
			"\ud83d\udca5": "1f4a5",
			"\ud83d\udd17": "1f517",
			"\ud83d\udd18": "1f518",
			"\ud83d\udca6": "1f4a6",
			"\ud83d\udd19": "1f519",
			"\ud83d\udd1a": "1f51a",
			"\ud83d\udca7": "1f4a7",
			"\ud83d\udd1b": "1f51b",
			"\ud83d\udd1c": "1f51c",
			"\ud83d\udca8": "1f4a8",
			"\ud83d\udd1d": "1f51d",
			"\ud83d\udd1e": "1f51e",
			"\ud83d\udca9": "1f4a9",
			"\ud83d\udd1f": "1f51f",
			"\ud83d\udcaa": "1f4aa",
			"\ud83d\udd20": "1f520",
			"\ud83d\udd21": "1f521",
			"\ud83d\udcab": "1f4ab",
			"\ud83d\udd22": "1f522",
			"\ud83d\udd23": "1f523",
			"\ud83d\udcac": "1f4ac",
			"\ud83d\udd24": "1f524",
			"\ud83d\udd25": "1f525",
			"\ud83d\udcae": "1f4ae",
			"\ud83d\udd26": "1f526",
			"\ud83d\udd27": "1f527",
			"\ud83d\udcaf": "1f4af",
			"\ud83d\udd28": "1f528",
			"\ud83d\udd29": "1f529",
			"\ud83d\udcb0": "1f4b0",
			"\ud83d\udd2a": "1f52a",
			"\ud83d\udd2b": "1f52b",
			"\ud83d\udcb1": "1f4b1",
			"\ud83d\udd2e": "1f52e",
			"\ud83d\udcb2": "1f4b2",
			"\ud83d\udd2f": "1f52f",
			"\ud83d\udcb3": "1f4b3",
			"\ud83d\udd30": "1f530",
			"\ud83d\udd31": "1f531",
			"\ud83d\udcb4": "1f4b4",
			"\ud83d\udd32": "1f532",
			"\ud83d\udd33": "1f533",
			"\ud83d\udcb5": "1f4b5",
			"\ud83d\udd34": "1f534",
			"\ud83d\udd35": "1f535",
			"\ud83d\udcb8": "1f4b8",
			"\ud83d\udd36": "1f536",
			"\ud83d\udd37": "1f537",
			"\ud83d\udcb9": "1f4b9",
			"\ud83d\udd38": "1f538",
			"\ud83d\udd39": "1f539",
			"\ud83d\udcba": "1f4ba",
			"\ud83d\udd3a": "1f53a",
			"\ud83d\udd3b": "1f53b",
			"\ud83d\udcbb": "1f4bb",
			"\ud83d\udd3c": "1f53c",
			"\ud83d\udcbc": "1f4bc",
			"\ud83d\udd3d": "1f53d",
			"\ud83d\udd50": "1f550",
			"\ud83d\udcbd": "1f4bd",
			"\ud83d\udd51": "1f551",
			"\ud83d\udcbe": "1f4be",
			"\ud83d\udd52": "1f552",
			"\ud83d\udcbf": "1f4bf",
			"\ud83d\udd53": "1f553",
			"\ud83d\udcc0": "1f4c0",
			"\ud83d\udd54": "1f554",
			"\ud83d\udd55": "1f555",
			"\ud83d\udcc1": "1f4c1",
			"\ud83d\udd56": "1f556",
			"\ud83d\udd57": "1f557",
			"\ud83d\udcc2": "1f4c2",
			"\ud83d\udd58": "1f558",
			"\ud83d\udd59": "1f559",
			"\ud83d\udcc3": "1f4c3",
			"\ud83d\udd5a": "1f55a",
			"\ud83d\udd5b": "1f55b",
			"\ud83d\udcc4": "1f4c4",
			"\ud83d\uddfb": "1f5fb",
			"\ud83d\uddfc": "1f5fc",
			"\ud83d\udcc5": "1f4c5",
			"\ud83d\uddfd": "1f5fd",
			"\ud83d\uddfe": "1f5fe",
			"\ud83d\udcc6": "1f4c6",
			"\ud83d\uddff": "1f5ff",
			"\ud83d\ude01": "1f601",
			"\ud83d\ude02": "1f602",
			"\ud83d\ude03": "1f603",
			"\ud83d\udcc8": "1f4c8",
			"\ud83d\ude04": "1f604",
			"\ud83d\ude05": "1f605",
			"\ud83d\udcc9": "1f4c9",
			"\ud83d\ude06": "1f606",
			"\ud83d\ude09": "1f609",
			"\ud83d\udcca": "1f4ca",
			"\ud83d\ude0a": "1f60a",
			"\ud83d\ude0b": "1f60b",
			"\ud83d\udccb": "1f4cb",
			"\ud83d\ude0c": "1f60c",
			"\ud83d\ude0d": "1f60d",
			"\ud83d\udccc": "1f4cc",
			"\ud83d\ude0f": "1f60f",
			"\ud83d\ude12": "1f612",
			"\ud83d\udccd": "1f4cd",
			"\ud83d\ude13": "1f613",
			"\ud83d\ude14": "1f614",
			"\ud83d\udcce": "1f4ce",
			"\ud83d\ude16": "1f616",
			"\ud83d\ude18": "1f618",
			"\ud83d\udccf": "1f4cf",
			"\ud83d\ude1a": "1f61a",
			"\ud83d\ude1c": "1f61c",
			"\ud83d\udcd0": "1f4d0",
			"\ud83d\ude1d": "1f61d",
			"\ud83d\ude1e": "1f61e",
			"\ud83d\udcd1": "1f4d1",
			"\ud83d\ude20": "1f620",
			"\ud83d\ude21": "1f621",
			"\ud83d\ude22": "1f622",
			"\ud83d\ude23": "1f623",
			"\ud83d\ude24": "1f624",
			"\ud83d\ude25": "1f625",
			"\ud83d\ude28": "1f628",
			"\ud83d\ude29": "1f629",
			"\ud83d\ude2a": "1f62a",
			"\ud83d\ude2b": "1f62b",
			"\ud83d\ude2d": "1f62d",
			"\ud83d\ude30": "1f630",
			"\ud83d\ude31": "1f631",
			"\ud83d\ude32": "1f632",
			"\ud83d\ude33": "1f633",
			"\ud83d\ude35": "1f635",
			"\ud83d\ude37": "1f637",
			"\ud83d\ude38": "1f638",
			"\ud83d\ude39": "1f639",
			"\ud83d\ude3a": "1f63a",
			"\ud83d\ude3b": "1f63b",
			"\ud83d\ude3c": "1f63c",
			"\ud83d\ude3d": "1f63d",
			"\ud83d\ude3e": "1f63e",
			"\ud83d\ude3f": "1f63f",
			"\ud83d\ude40": "1f640",
			"\ud83d\ude45": "1f645",
			"\ud83d\ude46": "1f646",
			"\ud83d\ude47": "1f647",
			"\ud83d\ude48": "1f648",
			"\ud83d\ude49": "1f649",
			"\ud83d\ude4a": "1f64a",
			"\ud83d\ude4b": "1f64b",
			"\ud83d\ude4c": "1f64c",
			"\ud83d\ude4d": "1f64d",
			"\ud83d\ude4e": "1f64e",
			"\ud83d\ude4f": "1f64f",
			"\ud83d\ude80": "1f680",
			"\ud83d\ude83": "1f683",
			"\ud83d\ude84": "1f684",
			"\ud83d\ude85": "1f685",
			"\ud83d\ude87": "1f687",
			"\ud83d\ude89": "1f689",
			"\ud83d\ude8c": "1f68c",
			"\ud83d\ude8f": "1f68f",
			"\ud83d\ude91": "1f691",
			"\ud83d\ude92": "1f692",
			"\ud83d\ude93": "1f693",
			"\ud83d\ude95": "1f695",
			"\ud83d\ude97": "1f697",
			"\ud83d\ude99": "1f699",
			"\ud83d\ude9a": "1f69a",
			"\ud83d\udea2": "1f6a2",
			"\ud83d\udea4": "1f6a4",
			"\ud83d\udea5": "1f6a5",
			"\ud83d\udea7": "1f6a7",
			"\ud83d\udea8": "1f6a8",
			"\ud83d\udea9": "1f6a9",
			"\ud83d\udeaa": "1f6aa",
			"\ud83d\udeab": "1f6ab",
			"\ud83d\udeac": "1f6ac",
			"\ud83d\udead": "1f6ad",
			"\ud83d\udeb2": "1f6b2",
			"\ud83d\udeb6": "1f6b6",
			"\ud83d\udeb9": "1f6b9",
			"\ud83d\udeba": "1f6ba",
			"\ud83d\udebb": "1f6bb",
			"\ud83d\udebc": "1f6bc",
			"\ud83d\udebd": "1f6bd",
			"\ud83d\udebe": "1f6be",
			"\ud83d\udec0": "1f6c0",
			"\ud83e\udd18": "1f918",
			"\ud83d\ude00": "1f600",
			"\ud83d\ude07": "1f607",
			"\ud83d\ude08": "1f608",
			"\ud83d\ude0e": "1f60e",
			"\ud83d\ude10": "1f610",
			"\ud83d\ude11": "1f611",
			"\ud83d\ude15": "1f615",
			"\ud83d\ude17": "1f617",
			"\ud83d\ude19": "1f619",
			"\ud83d\ude1b": "1f61b",
			"\ud83d\ude1f": "1f61f",
			"\ud83d\ude26": "1f626",
			"\ud83d\ude27": "1f627",
			"\ud83d\ude2c": "1f62c",
			"\ud83d\ude2e": "1f62e",
			"\ud83d\ude2f": "1f62f",
			"\ud83d\ude34": "1f634",
			"\ud83d\ude36": "1f636",
			"\ud83d\ude81": "1f681",
			"\ud83d\ude82": "1f682",
			"\ud83d\ude86": "1f686",
			"\ud83d\ude88": "1f688",
			"\ud83d\ude8a": "1f68a",
			"\ud83d\ude8d": "1f68d",
			"\ud83d\ude8e": "1f68e",
			"\ud83d\ude90": "1f690",
			"\ud83d\ude94": "1f694",
			"\ud83d\ude96": "1f696",
			"\ud83d\ude98": "1f698",
			"\ud83d\ude9b": "1f69b",
			"\ud83d\ude9c": "1f69c",
			"\ud83d\ude9d": "1f69d",
			"\ud83d\ude9e": "1f69e",
			"\ud83d\ude9f": "1f69f",
			"\ud83d\udea0": "1f6a0",
			"\ud83d\udea1": "1f6a1",
			"\ud83d\udea3": "1f6a3",
			"\ud83d\udea6": "1f6a6",
			"\ud83d\udeae": "1f6ae",
			"\ud83d\udeaf": "1f6af",
			"\ud83d\udeb0": "1f6b0",
			"\ud83d\udeb1": "1f6b1",
			"\ud83d\udeb3": "1f6b3",
			"\ud83d\udeb4": "1f6b4",
			"\ud83d\udeb5": "1f6b5",
			"\ud83d\udeb7": "1f6b7",
			"\ud83d\udeb8": "1f6b8",
			"\ud83d\udebf": "1f6bf",
			"\ud83d\udec1": "1f6c1",
			"\ud83d\udec2": "1f6c2",
			"\ud83d\udec3": "1f6c3",
			"\ud83d\udec4": "1f6c4",
			"\ud83d\udec5": "1f6c5",
			"\ud83c\udf0d": "1f30d",
			"\ud83c\udf0e": "1f30e",
			"\ud83c\udf10": "1f310",
			"\ud83c\udf12": "1f312",
			"\ud83c\udf16": "1f316",
			"\ud83c\udf17": "1f317",
			"\ud83c\udf18": "1f318",
			"\ud83c\udf1a": "1f31a",
			"\ud83c\udf1c": "1f31c",
			"\ud83c\udf1d": "1f31d",
			"\ud83c\udf1e": "1f31e",
			"\ud83c\udf32": "1f332",
			"\ud83c\udf33": "1f333",
			"\ud83c\udf4b": "1f34b",
			"\ud83c\udf50": "1f350",
			"\ud83c\udf7c": "1f37c",
			"\ud83c\udfc7": "1f3c7",
			"\ud83c\udfc9": "1f3c9",
			"\ud83c\udfe4": "1f3e4",
			"\ud83d\udc00": "1f400",
			"\ud83d\udc01": "1f401",
			"\ud83d\udc02": "1f402",
			"\ud83d\udc03": "1f403",
			"\ud83d\udc04": "1f404",
			"\ud83d\udc05": "1f405",
			"\ud83d\udc06": "1f406",
			"\ud83d\udc07": "1f407",
			"\ud83d\udc08": "1f408",
			"\ud83d\udc09": "1f409",
			"\ud83d\udc0a": "1f40a",
			"\ud83d\udc0b": "1f40b",
			"\ud83d\udc0f": "1f40f",
			"\ud83d\udc10": "1f410",
			"\ud83d\udc13": "1f413",
			"\ud83d\udc15": "1f415",
			"\ud83d\udc16": "1f416",
			"\ud83d\udc2a": "1f42a",
			"\ud83d\udc65": "1f465",
			"\ud83d\udc6c": "1f46c",
			"\ud83d\udc6d": "1f46d",
			"\ud83d\udcad": "1f4ad",
			"\ud83d\udcb6": "1f4b6",
			"\ud83d\udcb7": "1f4b7",
			"\ud83d\udcec": "1f4ec",
			"\ud83d\udced": "1f4ed",
			"\ud83d\udcef": "1f4ef",
			"\ud83d\udcf5": "1f4f5",
			"\ud83d\udd00": "1f500",
			"\ud83d\udd01": "1f501",
			"\ud83d\udd02": "1f502",
			"\ud83d\udd04": "1f504",
			"\ud83d\udd05": "1f505",
			"\ud83d\udd06": "1f506",
			"\ud83d\udd07": "1f507",
			"\ud83d\udd09": "1f509",
			"\ud83d\udd15": "1f515",
			"\ud83d\udd2c": "1f52c",
			"\ud83d\udd2d": "1f52d",
			"\ud83d\udd5c": "1f55c",
			"\ud83d\udd5d": "1f55d",
			"\ud83d\udd5e": "1f55e",
			"\ud83d\udd5f": "1f55f",
			"\ud83d\udd60": "1f560",
			"\ud83d\udd61": "1f561",
			"\ud83d\udd62": "1f562",
			"\ud83d\udd63": "1f563",
			"\ud83d\udd64": "1f564",
			"\ud83d\udd65": "1f565",
			"\ud83d\udd66": "1f566",
			"\ud83d\udd67": "1f567",
			"\ud83d\udd08": "1f508",
			"\ud83d\ude8b": "1f68b",
			"\ud83c\udfc5": "1f3c5",
			"\ud83c\udff4": "1f3f4",
			"\ud83d\udcf8": "1f4f8",
			"\ud83d\udecc": "1f6cc",
			"\ud83d\udd95": "1f595",
			"\ud83d\udd96": "1f596",
			"\ud83d\ude41": "1f641",
			"\ud83d\ude42": "1f642",
			"\ud83d\udeeb": "1f6eb",
			"\ud83d\udeec": "1f6ec",
			"\ud83c\udffb": "1f3fb",
			"\ud83c\udffc": "1f3fc",
			"\ud83c\udffd": "1f3fd",
			"\ud83c\udffe": "1f3fe",
			"\ud83c\udfff": "1f3ff",
			"\ud83d\ude43": "1f643",
			"\ud83e\udd11": "1f911",
			"\ud83e\udd13": "1f913",
			"\ud83e\udd17": "1f917",
			"\ud83d\ude44": "1f644",
			"\ud83e\udd14": "1f914",
			"\ud83e\udd10": "1f910",
			"\ud83e\udd12": "1f912",
			"\ud83e\udd15": "1f915",
			"\ud83e\udd16": "1f916",
			"\ud83e\udd81": "1f981",
			"\ud83e\udd84": "1f984",
			"\ud83e\udd82": "1f982",
			"\ud83e\udd80": "1f980",
			"\ud83e\udd83": "1f983",
			"\ud83e\uddc0": "1f9c0",
			"\ud83c\udf2d": "1f32d",
			"\ud83c\udf2e": "1f32e",
			"\ud83c\udf2f": "1f32f",
			"\ud83c\udf7f": "1f37f",
			"\ud83c\udf7e": "1f37e",
			"\ud83c\udff9": "1f3f9",
			"\ud83c\udffa": "1f3fa",
			"\ud83d\uded0": "1f6d0",
			"\ud83d\udd4b": "1f54b",
			"\ud83d\udd4c": "1f54c",
			"\ud83d\udd4d": "1f54d",
			"\ud83d\udd4e": "1f54e",
			"\ud83d\udcff": "1f4ff",
			"\ud83c\udfcf": "1f3cf",
			"\ud83c\udfd0": "1f3d0",
			"\ud83c\udfd1": "1f3d1",
			"\ud83c\udfd2": "1f3d2",
			"\ud83c\udfd3": "1f3d3",
			"\ud83c\udff8": "1f3f8",
			"\ud83e\udd41": "1f941",
			"\ud83e\udd90": "1f990",
			"\ud83e\udd91": "1f991",
			"\ud83e\udd5a": "1f95a",
			"\ud83e\udd5b": "1f95b",
			"\ud83e\udd5c": "1f95c",
			"\ud83e\udd5d": "1f95d",
			"\ud83e\udd5e": "1f95e",
			"\ud83c\uddfc": "1f1fc",
			"\ud83c\uddfb": "1f1fb",
			"\ud83c\uddfa": "1f1fa",
			"\ud83c\uddf9": "1f1f9",
			"\ud83c\uddf8": "1f1f8",
			"\ud83c\uddf7": "1f1f7",
			"\ud83c\uddf6": "1f1f6",
			"\ud83c\uddf5": "1f1f5",
			"\ud83c\uddf4": "1f1f4",
			"\ud83c\uddf3": "1f1f3",
			"\ud83c\uddf2": "1f1f2",
			"\ud83c\uddf1": "1f1f1",
			"\ud83c\uddf0": "1f1f0",
			"\ud83c\uddef": "1f1ef",
			"\ud83c\uddee": "1f1ee",
			"\ud83c\udded": "1f1ed",
			"\ud83c\uddec": "1f1ec",
			"\ud83c\uddeb": "1f1eb",
			"\ud83c\uddea": "1f1ea",
			"\ud83c\udde9": "1f1e9",
			"\ud83c\udde8": "1f1e8",
			"\ud83c\udde7": "1f1e7",
			"\ud83c\udde6": "1f1e6",
			"\u23e9": "23e9",
			"\u23ea": "23ea",
			"\u23eb": "23eb",
			"\u23ec": "23ec",
			"\u23f0": "23f0",
			"\u23f3": "23f3",
			"\u26ce": "26ce",
			"\u2705": "2705",
			"\u270a": "270a",
			"\u270b": "270b",
			"\u2728": "2728",
			"\u274c": "274c",
			"\u274e": "274e",
			"\u2753": "2753",
			"\u2754": "2754",
			"\u2755": "2755",
			"\u2795": "2795",
			"\u2796": "2796",
			"\u2797": "2797",
			"\u27b0": "27b0",
			"\u27bf": "27bf",
			"\u00a9": "00a9",
			"\u00ae": "00ae",
			"\u203c": "203c",
			"\u2049": "2049",
			"\u2122": "2122",
			"\u2139": "2139",
			"\u2194": "2194",
			"\u2195": "2195",
			"\u2196": "2196",
			"\u2197": "2197",
			"\u2198": "2198",
			"\u2199": "2199",
			"\u21a9": "21a9",
			"\u21aa": "21aa",
			"\u231a": "231a",
			"\u231b": "231b",
			"\u24c2": "24c2",
			"\u25aa": "25aa",
			"\u25ab": "25ab",
			"\u25b6": "25b6",
			"\u25c0": "25c0",
			"\u25fb": "25fb",
			"\u25fc": "25fc",
			"\u25fd": "25fd",
			"\u25fe": "25fe",
			"\u2600": "2600",
			"\u2601": "2601",
			"\u260e": "260e",
			"\u2611": "2611",
			"\u2614": "2614",
			"\u2615": "2615",
			"\u261d": "261d",
			"\u263a": "263a",
			"\u2648": "2648",
			"\u2649": "2649",
			"\u264a": "264a",
			"\u264b": "264b",
			"\u264c": "264c",
			"\u264d": "264d",
			"\u264e": "264e",
			"\u264f": "264f",
			"\u2650": "2650",
			"\u2651": "2651",
			"\u2652": "2652",
			"\u2653": "2653",
			"\u2660": "2660",
			"\u2663": "2663",
			"\u2665": "2665",
			"\u2666": "2666",
			"\u2668": "2668",
			"\u267b": "267b",
			"\u267f": "267f",
			"\u2693": "2693",
			"\u26a0": "26a0",
			"\u26a1": "26a1",
			"\u26aa": "26aa",
			"\u26ab": "26ab",
			"\u26bd": "26bd",
			"\u26be": "26be",
			"\u26c4": "26c4",
			"\u26c5": "26c5",
			"\u26d4": "26d4",
			"\u26ea": "26ea",
			"\u26f2": "26f2",
			"\u26f3": "26f3",
			"\u26f5": "26f5",
			"\u26fa": "26fa",
			"\u26fd": "26fd",
			"\u2702": "2702",
			"\u2708": "2708",
			"\u2709": "2709",
			"\u270c": "270c",
			"\u270f": "270f",
			"\u2712": "2712",
			"\u2714": "2714",
			"\u2716": "2716",
			"\u2733": "2733",
			"\u2734": "2734",
			"\u2744": "2744",
			"\u2747": "2747",
			"\u2757": "2757",
			"\u2764": "2764",
			"\u27a1": "27a1",
			"\u2934": "2934",
			"\u2935": "2935",
			"\u2b05": "2b05",
			"\u2b06": "2b06",
			"\u2b07": "2b07",
			"\u2b1b": "2b1b",
			"\u2b1c": "2b1c",
			"\u2b50": "2b50",
			"\u2b55": "2b55",
			"\u3030": "3030",
			"\u303d": "303d",
			"\u3297": "3297",
			"\u3299": "3299",
			"\ud83c\udc04": "1f004",
			"\ud83c\udd7f": "1f17f",
			"\ud83c\ude02": "1f202",
			"\ud83c\ude1a": "1f21a",
			"\ud83c\ude2f": "1f22f",
			"\ud83c\ude37": "1f237",
			"\ud83c\udf9e": "1f39e",
			"\ud83c\udf9f": "1f39f",
			"\ud83c\udfcb": "1f3cb",
			"\ud83c\udfcc": "1f3cc",
			"\ud83c\udfcd": "1f3cd",
			"\ud83c\udfce": "1f3ce",
			"\ud83c\udf96": "1f396",
			"\ud83c\udf97": "1f397",
			"\ud83c\udf36": "1f336",
			"\ud83c\udf27": "1f327",
			"\ud83c\udf28": "1f328",
			"\ud83c\udf29": "1f329",
			"\ud83c\udf2a": "1f32a",
			"\ud83c\udf2b": "1f32b",
			"\ud83c\udf2c": "1f32c",
			"\ud83d\udc3f": "1f43f",
			"\ud83d\udd77": "1f577",
			"\ud83d\udd78": "1f578",
			"\ud83c\udf21": "1f321",
			"\ud83c\udf99": "1f399",
			"\ud83c\udf9a": "1f39a",
			"\ud83c\udf9b": "1f39b",
			"\ud83c\udff3": "1f3f3",
			"\ud83c\udff5": "1f3f5",
			"\ud83c\udff7": "1f3f7",
			"\ud83d\udcfd": "1f4fd",
			"\u271d": "271d",
			"\ud83d\udd49": "1f549",
			"\ud83d\udd4a": "1f54a",
			"\ud83d\udd6f": "1f56f",
			"\ud83d\udd70": "1f570",
			"\ud83d\udd73": "1f573",
			"\ud83d\udd76": "1f576",
			"\ud83d\udd79": "1f579",
			"\ud83d\udd87": "1f587",
			"\ud83d\udd8a": "1f58a",
			"\ud83d\udd8b": "1f58b",
			"\ud83d\udd8c": "1f58c",
			"\ud83d\udd8d": "1f58d",
			"\ud83d\udda5": "1f5a5",
			"\ud83d\udda8": "1f5a8",
			"\u2328": "2328",
			"\ud83d\uddb2": "1f5b2",
			"\ud83d\uddbc": "1f5bc",
			"\ud83d\uddc2": "1f5c2",
			"\ud83d\uddc3": "1f5c3",
			"\ud83d\uddc4": "1f5c4",
			"\ud83d\uddd1": "1f5d1",
			"\ud83d\uddd2": "1f5d2",
			"\ud83d\uddd3": "1f5d3",
			"\ud83d\udddc": "1f5dc",
			"\ud83d\udddd": "1f5dd",
			"\ud83d\uddde": "1f5de",
			"\ud83d\udde1": "1f5e1",
			"\ud83d\udde3": "1f5e3",
			"\ud83d\udde8": "1f5e8",
			"\ud83d\uddef": "1f5ef",
			"\ud83d\uddf3": "1f5f3",
			"\ud83d\uddfa": "1f5fa",
			"\ud83d\udee0": "1f6e0",
			"\ud83d\udee1": "1f6e1",
			"\ud83d\udee2": "1f6e2",
			"\ud83d\udef0": "1f6f0",
			"\ud83c\udf7d": "1f37d",
			"\ud83d\udc41": "1f441",
			"\ud83d\udd74": "1f574",
			"\ud83d\udd75": "1f575",
			"\u270d": "270d",
			"\ud83d\udd90": "1f590",
			"\ud83c\udfd4": "1f3d4",
			"\ud83c\udfd5": "1f3d5",
			"\ud83c\udfd6": "1f3d6",
			"\ud83c\udfd7": "1f3d7",
			"\ud83c\udfd8": "1f3d8",
			"\ud83c\udfd9": "1f3d9",
			"\ud83c\udfda": "1f3da",
			"\ud83c\udfdb": "1f3db",
			"\ud83c\udfdc": "1f3dc",
			"\ud83c\udfdd": "1f3dd",
			"\ud83c\udfde": "1f3de",
			"\ud83c\udfdf": "1f3df",
			"\ud83d\udecb": "1f6cb",
			"\ud83d\udecd": "1f6cd",
			"\ud83d\udece": "1f6ce",
			"\ud83d\udecf": "1f6cf",
			"\ud83d\udee3": "1f6e3",
			"\ud83d\udee4": "1f6e4",
			"\ud83d\udee5": "1f6e5",
			"\ud83d\udee9": "1f6e9",
			"\ud83d\udef3": "1f6f3",
			"\u23cf": "23cf",
			"\u23ed": "23ed",
			"\u23ee": "23ee",
			"\u23ef": "23ef",
			"\u23f1": "23f1",
			"\u23f2": "23f2",
			"\u23f8": "23f8",
			"\u23f9": "23f9",
			"\u23fa": "23fa",
			"\u2602": "2602",
			"\u2603": "2603",
			"\u2604": "2604",
			"\u2618": "2618",
			"\u2620": "2620",
			"\u2622": "2622",
			"\u2623": "2623",
			"\u2626": "2626",
			"\u262a": "262a",
			"\u262e": "262e",
			"\u262f": "262f",
			"\u2638": "2638",
			"\u2639": "2639",
			"\u2692": "2692",
			"\u2694": "2694",
			"\u2696": "2696",
			"\u2697": "2697",
			"\u2699": "2699",
			"\u269b": "269b",
			"\u269c": "269c",
			"\u26b0": "26b0",
			"\u26b1": "26b1",
			"\u26c8": "26c8",
			"\u26cf": "26cf",
			"\u26d1": "26d1",
			"\u26d3": "26d3",
			"\u26e9": "26e9",
			"\u26f0": "26f0",
			"\u26f1": "26f1",
			"\u26f4": "26f4",
			"\u26f7": "26f7",
			"\u26f8": "26f8",
			"\u26f9": "26f9",
			"\u2721": "2721",
			"\u2763": "2763",
			"\ud83c\udf24": "1f324",
			"\ud83c\udf25": "1f325",
			"\ud83c\udf26": "1f326",
			"\ud83d\uddb1": "1f5b1"
		};
		a.imagePathPNG = "https://cdn.jsdelivr.net/emojione/assets/png/";
		a.imagePathSVG = "https://cdn.jsdelivr.net/emojione/assets/svg/";
		a.imagePathSVGSprites = "./../assets/sprites/emojione.sprites.svg";
		a.imageType = "png";
		a.imageTitleTag = !0;
		a.sprites = !1;
		a.unicodeAlt = !0;
		a.ascii = !1;
		a.cacheBustParam = "?v=2.2.7";
		a.regShortNames = RegExp("<object[^>]*>.*?</object>|<span[^>]*>.*?</span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|(" + a.shortnames + ")", "gi");
		a.regAscii = RegExp("<object[^>]*>.*?</object>|<span[^>]*>.*?</span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|((\\s|^)" + a.asciiRegexp + "(?=\\s|$|[!,.?]))", "g");
		a.regUnicode = RegExp("<object[^>]*>.*?</object>|<span[^>]*>.*?</span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|(" +
			a.unicodeRegexp + ")", "gi");
		a.toImage = function (b) {
			b = a.unicodeToImage(b);
			return b = a.shortnameToImage(b)
		};
		a.unifyUnicode = function (b) {
			b = a.toShort(b);
			return b = a.shortnameToUnicode(b)
		};
		a.shortnameToAscii = function (b) {
			var c, d = a.objectFlip(a.asciiList);
			return b = b.replace(a.regShortNames, function (b) {
				return "undefined" !== typeof b && "" !== b && b in a.emojioneList ? (c = a.emojioneList[b].unicode[a.emojioneList[b].unicode.length - 1], "undefined" !== typeof d[c] ? d[c] : b) : b
			})
		};
		a.shortnameToUnicode = function (b) {
			var c, d;
			b = b.replace(a.regShortNames,
				function (b) {
					if ("undefined" === typeof b || "" === b || !(b in a.emojioneList)) return b;
					c = a.emojioneList[b].unicode[0].toUpperCase();
					d = a.emojioneList[b].uc;
					return a.convert(d)
				});
			a.ascii && (b = b.replace(a.regAscii, function (b, d, f, l) {
				if ("undefined" === typeof l || "" === l || !(a.unescapeHTML(l) in a.asciiList)) return b;
				l = a.unescapeHTML(l);
				c = a.asciiList[l].toUpperCase();
				return f + a.convert(c)
			}));
			return b
		};
		a.shortnameToImage = function (b) {
			var c, d, g, h, k = "";
			b.replace(a.regShortNames, "").replace(a.regAscii, "").trim() || (k = "only-emoji");
			b = b.replace(a.regShortNames, function (b) {
				return "undefined" !== typeof b && "" !== b && b in a.emojioneList ? (d = a.emojioneList[b].unicode[a.emojioneList[b].unicode.length - 1], h = a.imageTitleTag ? 'title="' + b + '"' : "", g = a.unicodeAlt ? a.convert(d.toUpperCase()) : b, c = "png" === a.imageType ? a.sprites ? '<span class="emojione emojione-' + d + " " + k + '" ' + h + ">" + g + "</span>" : '<img class="emojione ' + k + '" alt="' + g + '" ' + h + ' src="' + a.imagePathPNG + d + ".png" + a.cacheBustParam + '"/>' : a.sprites ? '<svg class="emojione"><description>' + g + '</description><use xlink:href="' +
					a.imagePathSVGSprites + "#emoji-" + d + '"></use></svg>' : '<object class="emojione" data="' + a.imagePathSVG + d + ".svg" + a.cacheBustParam + '" type="image/svg+xml" standby="' + g + '">' + g + "</object>") : b
			});
			a.ascii && (b = b.replace(a.regAscii, function (b, m, n, p) {
				if ("undefined" === typeof p || "" === p || !(a.unescapeHTML(p) in a.asciiList)) return b;
				p = a.unescapeHTML(p);
				d = a.asciiList[p];
				h = a.imageTitleTag ? 'title="' + a.escapeHTML(p) + '"' : "";
				g = a.unicodeAlt ? a.convert(d.toUpperCase()) : a.escapeHTML(p);
				return c = "png" === a.imageType ? a.sprites ?
					n + '<span class="emojione emojione-' + d + " " + k + '" ' + h + ">" + g + "</span>" : n + '<img class="emojione ' + k + '" alt="' + g + '" ' + h + ' src="' + a.imagePathPNG + d + ".png" + a.cacheBustParam + '"/>' : a.sprites ? '<svg class="emojione"><description>' + g + '</description><use xlink:href="' + a.imagePathSVGSprites + "#emoji-" + d + '"></use></svg>' : n + '<object class="emojione" data="' + a.imagePathSVG + d + ".svg" + a.cacheBustParam + '" type="image/svg+xml" standby="' + g + '">' + g + "</object>"
			}));
			return b
		};
		a.unicodeToImage = function (b) {
			var c, d, g, h, k, l, m = a.mapUnicodeToShort(),
				n = "";
			b.replace(a.regUnicode, "").trim() || (n = "only-emoji");
			return b = b.replace(a.regUnicode, function (b) {
				return "undefined" !== typeof b && "" !== b && b in a.jsEscapeMap ? (d = a.jsEscapeMap[b], g = m[d], h = a.emojioneList[g].fname, k = a.unicodeAlt ? a.convert(d.toUpperCase()) : g, l = a.imageTitleTag ? 'title="' + g + '"' : "", c = "png" === a.imageType ? a.sprites ? '<span class="emojione emojione-' + d + " " + n + '" ' + l + ">" + k + "</span>" : '<img class="emojione ' + n + '" alt="' + k + '" ' + l + ' src="' + a.imagePathPNG + h + ".png" + a.cacheBustParam + '"/>' : a.sprites ? '<svg class="emojione"><description>' +
					k + '</description><use xlink:href="' + a.imagePathSVGSprites + "#emoji-" + d + '"></use></svg>' : '<img class="emojione" alt="' + k + '" ' + l + ' src="' + a.imagePathSVG + h + ".svg" + a.cacheBustParam + '"/>') : b
			})
		};
		a.toShort = function (b) {
			var c = a.getUnicodeReplacementRegEx(), d = a.mapUnicodeCharactersToShort();
			return a.replaceAll(b, c, d)
		};
		a.convert = function (a) {
			if (-1 < a.indexOf("-")) {
				var c = [];
				a = a.split("-");
				for (var d = 0; d < a.length; d++) {
					var g = parseInt(a[d], 16);
					if (65536 <= g && 1114111 >= g) var h = Math.floor((g - 65536) / 1024) + 55296, g = (g - 65536) %
						1024 + 56320,
						g = String.fromCharCode(h) + String.fromCharCode(g); else g = String.fromCharCode(g);
					c.push(g)
				}
				return c.join("")
			}
			a = parseInt(a, 16);
			return 65536 <= a && 1114111 >= a ? (h = Math.floor((a - 65536) / 1024) + 55296, g = (a - 65536) % 1024 + 56320, String.fromCharCode(h) + String.fromCharCode(g)) : String.fromCharCode(a)
		};
		a.escapeHTML = function (a) {
			var c = {"&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#039;"};
			return a.replace(/[&<>"']/g, function (a) {
				return c[a]
			})
		};
		a.unescapeHTML = function (a) {
			var c = {
				"&amp;": "&",
				"&#38;": "&",
				"&#x26;": "&",
				"&lt;": "<",
				"&#60;": "<",
				"&#x3C;": "<",
				"&gt;": ">",
				"&#62;": ">",
				"&#x3E;": ">",
				"&quot;": '"',
				"&#34;": '"',
				"&#x22;": '"',
				"&apos;": "'",
				"&#39;": "'",
				"&#x27;": "'"
			};
			return a.replace(/&(?:amp|#38|#x26|lt|#60|#x3C|gt|#62|#x3E|apos|#39|#x27|quot|#34|#x22);/ig, function (a) {
				return c[a]
			})
		};
		a.mapEmojioneList = function (b) {
			for (var c in a.emojioneList) if (a.emojioneList.hasOwnProperty(c)) for (var d = 0, g = a.emojioneList[c].unicode.length; d < g; d++) b(a.emojioneList[c].unicode[d], c)
		};
		a.mapUnicodeToShort = function () {
			a.memMapShortToUnicode ||
			(a.memMapShortToUnicode = {}, a.mapEmojioneList(function (b, c) {
				a.memMapShortToUnicode[b] = c
			}));
			return a.memMapShortToUnicode
		};
		a.memoizeReplacement = function () {
			if (!a.unicodeReplacementRegEx || !a.memMapShortToUnicodeCharacters) {
				var b = [];
				a.memMapShortToUnicodeCharacters = {};
				a.mapEmojioneList(function (c, d) {
					var g = a.convert(c);
					a.emojioneList[d].isCanonical && (a.memMapShortToUnicodeCharacters[g] = d);
					b.push(g)
				});
				a.unicodeReplacementRegEx = b.join("|")
			}
		};
		a.mapUnicodeCharactersToShort = function () {
			a.memoizeReplacement();
			return a.memMapShortToUnicodeCharacters
		};
		a.getUnicodeReplacementRegEx = function () {
			a.memoizeReplacement();
			return a.unicodeReplacementRegEx
		};
		a.objectFlip = function (a) {
			var c, d = {};
			for (c in a) a.hasOwnProperty(c) && (d[a[c]] = c);
			return d
		};
		a.escapeRegExp = function (a) {
			return a.replace(/[-[\]{}()*+?.,;:&\\^$#\s]/g, "\\$&")
		};
		a.replaceAll = function (b, c, d) {
			c = a.escapeRegExp(c);
			return b.replace(RegExp("<object[^>]*>.*?</object>|<span[^>]*>.*?</span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|(" + c + ")", "gi"), function (a,
			                                                                                                                                                     b) {
				return "undefined" === typeof b || "" === b ? a : d[b]
			})
		}
	})(this.emojione = this.emojione || {});
	"object" === typeof module && (module.exports = this.emojione);
	Ember.TEMPLATES.aliasList = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<span id="second-title"><i class="fa fa-angle-right"></i>');
			a = c["if"].call(a, "activeAlias.aliasId", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.program(4, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 2: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeAlias.displayName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_alias", {
				name: "I18n",
				hash: {context: "alias"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<tr ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":open-view isDefault:default-alias"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "aliasId"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><td>");
			d = c._triageMustache.call(a, "displayName", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isDefault", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td><td>");
			d = c._triageMustache.call(a, "positionTitle", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "enabled",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(9, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="delete-cell">');
			d = c.unless.call(a, "isDefault", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 7: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("&nbsp;(");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "default_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(")&nbsp;");
			return ""
		}, 9: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-check txt-color-tawk-pink"></i>')
		}, 11: function (a, c, d, b) {
			b.buffer.push('<div class="smart-form"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></div>')
		}, 13: function (a, c, d,
		                 b) {
			a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 15: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="photo-placeholder" style="background-image: url(\'');
			b.buffer.push(d(c.unbound.call(a, "", {
				name: "unbound",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("')\"></div>");
			return ""
		}, 17: function (a, c, d,
		                 b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a class="image-action" href="javascript:void(0);" id="capture">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "take_photo", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 19: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a class="image-action" href="javascript:void(0);" id="remove">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "remove_photo", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 21: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><div class="inline-group" ><label class="checkbox"><input type="checkbox" id="set-default" name="set-default" /><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "set_default", {
				name: "I18n",
				hash: {context: "alias"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div></section><section id="alias-status-container"><label class="label" for="alias-status" style="display: inline-block;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "alias_status", {
				name: "I18n",
				hash: {context: "alias"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</label><label class="toggle" style="display: inline-block; width : 200px; position: relative; height : 30px;"><input type="checkbox" name="alias-status" id="alias-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAlias.enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text",
				{
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('" style="left: 0; right: auto;"></i></label></section>');
			return ""
		}, 23: function (a, c, d, b) {
			b.buffer.push('<div id="widget-min-preview-container" class="has-image"><div class="inner-preview-container"><div id="tawkchat-status-middle"><div class="header-container change-background-color change-text-color"><div class="headerBoxControlsContainer"><div class="maximize pull-right"></div></div><div id="tawkchat-minified-agent-container" class="theme-text-color">');
			d = c["with"].call(a, "activeAlias.imagePreview", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="profileDetail" class=""><div class="agentContainer"><div class="agentInformationContainer">');
			d = c["if"].call(a, "activeAlias.positionTitle", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b),
				inverse: this.program(28, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d &&
			b.buffer.push(d);
			b.buffer.push("</div></div></div></div></div></div></div></div>");
			return ""
		}, 24: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="alias-image" style="background-image: url(\'');
			b.buffer.push(d(c.unbound.call(a, "", {
				name: "unbound",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("');\"></div>");
			return ""
		}, 26: function (a, c, d, b) {
			b.buffer.push('<p class="agentName">');
			d = c._triageMustache.call(a, "activeAlias.displayName", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p><p>");
			d = c._triageMustache.call(a, "activeAlias.positionTitle", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p>");
			return ""
		}, 28: function (a, c, d, b) {
			b.buffer.push('<p class="agentName" style="line-height : 41px;">');
			a = c._triageMustache.call(a, "activeAlias.displayName", {
				name: "_triageMustache", hash: {},
				hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</p>");
			return ""
		}, 30: function (a, c, d, b) {
			b.buffer.push('<div id="widget-min-preview-container"><div class="inner-preview-container"><div id="tawkchat-status-middle"><div class="headerBoxControlsContainer"><div class="header-control"><div class="maximize pull-right"></div></div><div class="clearfix"></div></div><div id="tawkchat-minified-agent-container" class="theme-text-color" style="display: block;">');
			d = c["with"].call(a, "activeAlias.imagePreview", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="profileDetail" class=""><div class="agentContainer"><div class="agentInformationContainer"><p class="agentName">');
			d = c._triageMustache.call(a, "activeAlias.displayName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeAlias.positionTitle", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(31, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div><div class="clearfix"></div></div></div></div></div></div></div>');
			return ""
		}, 31: function (a, c, d, b) {
			b.buffer.push("&nbsp;-&nbsp;");
			a = c._triageMustache.call(a, "activeAlias.positionTitle", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			a && b.buffer.push(a);
			return ""
		}, 33: function (a, c, d, b) {
			a = c.unless.call(a, "activeAlias.isDefault", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(34, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 34: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button id="delete" type="button" class="btn btn-danger ">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, 36: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.ImageCropView || a && a.ImageCropView || d).call(a, {
				name: "ImageCropView",
				hash: {controllerBinding: "view.controller"},
				hashTypes: {controllerBinding: "STRING"},
				hashContexts: {controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing,
				f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "alias"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeAlias", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAlias:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div style="height: 40px;"><div class="text-right"><button id="add-alias" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_alias", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div><div class="scrollable-list"><table class="table"><thead><tr role="row"><th>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "display_name", {
				name: "I18n",
				hash: {context: "alias"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</th><th>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "position_title", {
				name: "I18n",
				hash: {context: "alias"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_enabled", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center delete-cell"><div class="smart-form" style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
			d = c.each.call(a, "pagedList.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div id="bulk-action-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.bulkMarkedTotal::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
			d = c["if"].call(a, "view.bulkMarkedTotal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></ul></div></div></div><form id="alias-form" name="alias-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAlias::hidden :smart-form :admin-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div id="alias-form-container"><div id="alias-form-wrapper"><div id="form-scrollable-container" style="width: 100%; height: 100%; position: relative; overflow: auto;"><fieldset><section><div class="form-table"><div class="form-table-row"><div class="form-table-cell padding-5 image-placeholder-container"><div class="image-placeholder"><i class="fa fa-camera"></i>');
			d = c["with"].call(a, "activeAlias.imagePreview", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div class="form-table-cell padding-5" style="vertical-align: middle;"><div class="btn-group"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "action_text", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push(' <span class="caret"></span></button><ul class="dropdown-menu"><li id="upload-container"><a class="image-action" href="javascript:void(0);" id="upload">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "upload_photo", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			d = c["if"].call(a, "view.takePhotoEnabled",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(17, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeAlias.imagePreview", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div></div><input type="file" class="hidden" id="alias-image" /></div></div></section><section><label class="label">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "display_name", {
				name: "I18n",
				hash: {context: "alias"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					placeholderKey: "enter_display_name",
					value: "activeAlias.displayName",
					name: "display-name",
					id: "display-name",
					"class": "required",
					type: "text"
				},
				hashTypes: {
					placeholderKey: "STRING", value: "ID", name: "STRING", id: "STRING", "class": "STRING",
					type: "STRING"
				},
				hashContexts: {placeholderKey: a, value: a, name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "position_title", {
				name: "I18n",
				hash: {context: "alias"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					placeholderKey: "enter_position",
					value: "activeAlias.positionTitle", name: "position-title", id: "position-title", type: "text"
				},
				hashTypes: {placeholderKey: "STRING", value: "ID", name: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {placeholderKey: a, value: a, name: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section>");
			d = c.unless.call(a, "activeAlias.isDefault", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset></div></div></div><div id="widget-preview" class="hidden-mobile hidden-tablet">');
			d = c["if"].call(a, "activeAlias.imagePreview", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.program(30, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			d = c["if"].call(a, "activeAlias.aliasId", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(33, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</footer></form>");
			d = c["if"].call(a, "imageData", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(36, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.accountForm = Ember.Handlebars.template({
		compiler: [6,
			">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><p id="main-title" class="pull-left">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "settings", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="account-settings-form" name="account-settings-form" class="smart-form admin-form"><div id="form-scrollable-container"><section><label class="label" for="user-name">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "your_name", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required" id="user-name" name="user-name" maxlength="75" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_your_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "user.decodedName"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section><section><label class="label" for="user-email">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "your_email", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required email" id="user-email" name="user-email" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_your_email", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "user.email"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section><section><label class="label" for="user-password">');
			b.buffer.push(e((c.I18n || a && a.I18n ||
				d).call(a, "change_password", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="password" id="user-password" name="user-password" class="passwordStrength notRequired"placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_password", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" style="padding-right : 90px" /><div class="password-meter bar-holder" style="width: 80px; padding: 0; position: absolute; top: 5px; right: 5px;"><div class="password-meter-bg progress"><div class="password-meter-bar progress-bar"></div></div></div></label><em id="password-error" for="user-password" autogenerated="true" class="error password-meter-message"></em></section><section><label class="label" for="user-password-retype">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"retype_password", {
					name: "I18n",
					hash: {context: "account"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</label><label class="input"><input type="password" id="user-password-retype" name="user-password-retype" equalTo="#user-password"placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_password", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.accountMain = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<li class="open-view" id="rest-api"><a href="javascript:void(0);"><i class="fa fa-cloud"></i><span class="label">Rest API Keys</span></a></li>')
		},
		3: function (a, c, d, b) {
			b.buffer.push('<div class="new-label"> </div>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push(' <div id="breadcrumb" class="hidden-md hidden-lg"><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "my_profile", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><div class="content"><div class="row view-header"><div class="col-xs-12 col-sm-4 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "my_profile", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h1></div></div><div class="innerContent"><div id="property-container" class="list-container"><div class="smart-form" style="max-width: 450px;margin: 0px auto;"><section><p style="text-transform: uppercase; font-size : 12px">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "account_settings", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></section><section><ul class="list"><li class="open-view" id="settings"><a href="javascript:void(0);"><i class="fa fa-cog"></i><span class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "settings", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li class="open-view" id="aliases"><a href="javascript:void(0);"><i class="fa fa-group"></i><span class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "alias"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li class="open-view" id="global-shortcuts"><a href="javascript:void(0);"><i class="fa fa-cut"></i><span class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "global_shortcuts", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></a></li>");
			d = c["if"].call(a, "Tawk.userController.canCreateApiKey", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></section></div></div><div id="asset-container"  class="list-container"><div class="list-container-divider"><i class="fa fa-chevron-right"></i></div><div style="max-width: 450px;margin: 0px auto;"><section><p style="text-transform: uppercase; font-size : 12px">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "profile_page", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><div style="font-size: 16px;line-height: 32px; margin: 0 0 8px 0; white-space: pre-wrap;word-wrap: break-word;"><div id="tawkid-text"><a ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "activeProperty.siteLink"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank" style="vertical-align: middle; display:inline; white-space : pre-line; word-wrap : break-word;">https://tawk.to/');
			d = c._triageMustache.call(a, "activeProperty.tawkId", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a>&nbsp;<button id="edit-profile-tawkid" class="btn btn-default btn-xs"><i class="fa fa-pencil"></i></button></div><div id="tawkid-input" class="hidden"><span style="display : inline-block; vertical-align: middle" >https://tawk.to/</span><form id="tawkid-form" name="tawkid-form" class="smart-form" style="display : inline-block; vertical-align: middle"><label class="input" style="display : inline-block; vertical-align: middle"><span class="small-transparent-spinner hidden" style="position: absolute;right: 3px;top: 8px;"></span><input type="input" class="alphaNumericWithDot required isTawkIdAvailable" id="page-tawkid" name="page-tawkid"');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeProperty.tawkId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="width : auto; padding-right : 30px;" /></label>&nbsp;<span class="btn-group"><button id="save-profile-tawkid" type="submit" class="btn btn-primary btn-xs"><i class="fa fa-save"></i></button><button id="cancel-profile-tawkid" type="button" class="btn btn-default btn-xs"><i class="fa fa-close"></i></button></span></form></div></div></section><section class="smart-form"><ul class="list"><li class="open-view" id="page-content"><a href="javascript:void(0);"><i class="fa fa-align-justify"></i><span class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_content", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li class="open-view" id="widget-settings"><a href="javascript:void(0);"><i class="fa fa-cog"></i><span class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_settings", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li class="open-view" id="widget-appearance"><a href="javascript:void(0);"><i class="fa fa-picture-o"></i><span class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_appearance", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li class="open-view"id="widget-content"><a href="javascript:void(0);"><i class="fa fa-font"></i><span class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_content", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li class="open-view" id="shortcuts"><a href="javascript:void(0);"><i class="fa fa-cut"></i><span class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_shortcuts", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li class="open-view" id="ban-list"><a href="javascript:void(0);"><i class="fa fa-ban"></i><span class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li class="open-view" id="tabs"><a href="javascript:void(0);"><i class="fa fa-folder"></i><span class="label" style="position: relative;">Tabs');
			d = c.unless.call(a, "view.isTabsSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></a></li></ul></section></div></div><div class="clear"></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.restApikView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<tr><td>");
			d = c._triageMustache.call(a, "key", {
				name: "_triageMustache", hash: {},
				hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td><td>");
			d = c._triageMustache.call(a, "formattedDate", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td><button class="btn btn-danger delete-key" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "key"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-trash-o"></i></button></td></tr>');
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">Rest API Keys</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "activeAlias:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><div style="height: 40px;"><div class="text-right"><button id="create-key" class="btn btn-primary">Create Key</button></div></div><div class="scrollable-list"><table class="table"><thead><tr role="row"><th>Key</th><th>Created On</th><th class="delete-cell"></th></tr></thead><tbody>');
			a = c.each.call(a, "list", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(1, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</tbody></table></div></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES["action-view"] = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "value"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {selected: "isSelected"},
					hashTypes: {selected: "STRING"},
					hashContexts: {selected: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "text", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push('<div style="margin-bottom: 5px;"><label class="select" style="margin-bottom: 5px;"><i></i><select class="action-input">');
			a = c.each.call(a, "view.valueSelection", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select></label></div>");
			return ""
		}, 4: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "index"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {selected: "isSelected"},
					hashTypes: {selected: "STRING"},
					hashContexts: {selected: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "value", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 6: function (a, c, d, b) {
			a = c.each.call(a, "view.inputFields", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 7: function (a, c, d, b) {
			a = c["if"].call(a, "isInput", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.program(10, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div style="margin-bottom: 5px;"><label class="input" style="margin-bottom: 5px;"><input type="text" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "classNames"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "name"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "value"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("  ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {placeholder: "placeholder"},
				hashTypes: {placeholder: "STRING"},
				hashContexts: {placeholder: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {maxlength: "maxlength"},
				hashTypes: {maxlength: "STRING"},
				hashContexts: {maxlength: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /></label></div>");
			return ""
		}, 10: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div style="margin-bottom: 5px;"><label class="textarea" style="margin-bottom: 5px;">');
			b.buffer.push(e((c.textarea || a && a.textarea || d).call(a, {
				name: "textarea",
				hash: {
					maxlengthBinding: "maxlength",
					valueBinding: "value",
					nameBinding: "name",
					idBinding: "id",
					rows: "3",
					classBinding: "classNames",
					placeholderBinding: "placeholder"
				},
				hashTypes: {
					maxlengthBinding: "STRING", valueBinding: "STRING", nameBinding: "STRING", idBinding: "STRING",
					rows: "STRING", classBinding: "STRING", placeholderBinding: "STRING"
				},
				hashContexts: {
					maxlengthBinding: a,
					valueBinding: a,
					nameBinding: a,
					idBinding: a,
					rows: a,
					classBinding: a,
					placeholderBinding: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div style="margin-bottom: 5px;"><label class="select"><i></i><select class="action-type-select">');
			d = c.each.call(a, "view.actionSelectOptions",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</select></label></div>");
			d = c["if"].call(a, "view.isSelect", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(6, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<a href="javascript:void(0);" class="button-icon delete-action" data-placement="top" data-original-title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_action", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a><input type="hidden" class="action-item" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.action.valueId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" />");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.addOnDetail =
		Ember.Handlebars.template({
			1: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<option ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {value: "id"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(">$ ");
				a = c._triageMustache.call(a, "pricePretify", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</option>");
				return ""
			}, 3: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<li><section><label class="label" style="font-weight: bold; font-size: 15px;">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_payment_method", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select id="payment-method"><option value="pp">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "paypal", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</option><option value="cc">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "credit_card", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</option></select><i></i></label></section></li>");
				return ""
			}, 5: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<section><label class="label" style="font-weight: bold; font-size: 15px;">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_existing_card", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select id="card-selection"><option value="new-card">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_card", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</option>");
				a = c.each.call(a, "Tawk.userController.existingCards", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(6, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</select><i></i></label></section>");
				return ""
			}, 6: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<option ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {value: "customerId"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(" ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {selected: "selected"},
					hashTypes: {selected: "STRING"},
					hashContexts: {selected: a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(">");
				d = c._triageMustache.call(a, "cardBrand", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push(" x-");
				d = c._triageMustache.call(a, "cardNumber", {
					name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
					types: ["ID"], contexts: [a], data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</option>");
				return ""
			}, 8: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<section><label class="label" style="font-weight: bold; font-size: 15px;">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "card_details", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</label></section>");
				return ""
			}, 10: function (a,
			                 c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<section><label id="terms-check-label" class="checkbox"><input type="checkbox" class="required" id="terms-check" name="terms-check" /><i></i>');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "live_answering_agreement", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</label></section>");
				return ""
			}, 12: function (a, c, d, b) {
				b.buffer.push("<p>You will need admin privileges to edit settings.</p><br>")
			},
			14: function (a, c, d, b) {
				b.buffer.push("<p>You will need admin privileges to purchase Add-ons.</p><br>")
			}, 16: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push('<li style="margin : 2px 0"><a href="javascript:void(0);" class="dm-agent" ');
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {id: "id"},
					hashTypes: {id: "STRING"},
					hashContexts: {id: a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(">");
				b.buffer.push(d(c._triageMustache.call(a, "name", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</a></li>");
				return ""
			}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
				var e = this.escapeExpression, f = c.helperMissing;
				b.buffer.push('<div id="addon-details-wrapper"><div id="addon-details" style="font-size: 14px;"><div style="float : left; width : 100%; min-height : 100px;"><div style="margin-left : 120px;"><h3 style="margin : 0 0 10px 0;">');
				d = c._triageMustache.call(a, "activeAddOn.name",
					{
						name: "_triageMustache",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != d && b.buffer.push(d);
				b.buffer.push("</h3><p>");
				b.buffer.push(e(c._triageMustache.call(a, "activeAddOn.shortDescription", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</p></div></div><div style="float : left; width : 100px; margin-left: -100%; min-height : 100px;"><img ');
				b.buffer.push(e(c["bind-attr"].call(a,
					{
						name: "bind-attr",
						hash: {src: "activeAddOn.addOnLogo"},
						hashTypes: {src: "STRING"},
						hashContexts: {src: a},
						types: [],
						contexts: [],
						data: b
					})));
				b.buffer.push(' /></div><div class="clearfix"></div><div id="content-description-view"></div></div><div id="payment-container"><form id="payment-form" name="payment-form" ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": ":smart-form activeAddOn.isSubscribed:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('><div style="padding:20px 15px; position : absolute; top : 0; bottom : 63px; overflow: auto;"><fieldset style="background: inherit;"><ol id="payment-steps"><li><section><label class="label" style="font-weight: bold; font-size: 15px;">');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "select_package", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select id="plan">');
				d = c.each.call(a, "activeAddOn.plans", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</select><i></i></label></section></li>");
				d = c["if"].call(a, "canUsePaypal", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(3, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push(' <li id="card-details"  ');
				b.buffer.push(e(c["bind-attr"].call(a,
					{
						name: "bind-attr",
						hash: {"class": "canUsePaypal:hidden"},
						hashTypes: {"class": "STRING"},
						hashContexts: {"class": a},
						types: [],
						contexts: [],
						data: b
					})));
				b.buffer.push(">");
				d = c["if"].call(a, "Tawk.userController.existingCards.length", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(5, b),
					inverse: this.program(8, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('<div id="new-card-details" ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr", hash: {"class": "Tawk.userController.existingCards.length:hidden"},
					hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
				})));
				b.buffer.push(' style="margin-left: -16px;"><section><label class="input"><i class="icon-prepend fa fa-user" style="z-index:1;"></i><input id="cardholder-name" name="cardholder-name" type="text" class="input required" placeholder="Name on card" /></label></section><section><label class="input"><i class="icon-prepend fa fa-credit-card" style="z-index:1;"></i><i class="card-type icon-append"></i><input id="card-number" name="card-number" type="text" class="input required ccNumber" placeholder="Card number" /></label></section><div class="row"><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-calendar" style="z-index:1;"></i><input id="card-expiry" name="card-expiry" type="text" class="input required ccExpiryFormat ccExpiryDate" placeholder="MM/YY" /></label></section><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-lock" style="z-index:1;"></i><input id="card-cvc" name="card-cvc" type="text" class="input required digits cvcCheck" placeholder="CVV" minlength="3" maxlength="4" /></label></section></div><section><label class="input"><i class="icon-prepend fa fa-map-marker" style="z-index:1;"></i><input id="zip-code" name="zip-code" type="text" class="input required" placeholder="Zip code" /></label></section></div></li></ol>');
				d = c["if"].call(a, "activeAddOn.checkTerm", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(10, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</fieldset><div class="text-center"><p id="total-price" style="font-weight : bold; font-size : 15px;"></p><br/><button id="submit" type="submit" class="btn btn-primary last-step">');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "activate_now", {
					name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
					hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('</button></div></div><div class="text-center" style="position: absolute; bottom : 0px; left : 15px; right : 15px;"><div class="sprite-background secure-seal"></div></div></form><div id="addon-settings-button-container" ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "activeAddOn.isSubscribed::hidden :text-center"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' style="padding: 20px 15px;"><div ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "view.paymentSuccess::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('><div id="success-check-container"><i class="fa fa-check"></i></div><h1 style="color: #71a06a; font-weight: 500;">');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "thank_you", {
					name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
					types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('</h1><h5 style="color: #71a06a; font-weight: 500;">');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "purchase_success", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</h5><p style="margin : 30px 0;">');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "configure_addon", {
					name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
					types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('</p></div><button class="addon-settings btn btn-primary" ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"data-id": "activeAddOn.id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(">");
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "settings", {
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</button></div><div ");
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "activeProperty.isAdmin:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' style="text-align: center; position: absolute; top : 0; bottom :0; width : 100%; z-index: 1;"><div style="width: 100%; height : 100%; background : #fafafa; opacity : 0.7"></div><div style="position: absolute; top : 80px; width : auto; left : 15px; right : 15px; background : #fff; padding : 5px; font-size: 15px; bottom : 80px; overflow: auto;"><p style="font-size: 18px; color : red;">Sorry <i class="fa fa-frown-o"></i></p>');
				d = c["if"].call(a, "activeAddOn.isSubscribed", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(12, b),
					inverse: this.program(14, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('<p>Please contact an admin for this property :</p><ul style="list-style : none; padding : 0px;">');
				d = c.each.call(a, "contactAdmins", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(16, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</ul></div></div><div ");
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "activeProperty.isAdmin::hidden view.needBetaCode::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('  style="text-align: center; position: absolute; top : 0; bottom :0; width : auto; padding : 20px 10px; background : #eee; left :0; right:0; z-index : 10;"><div class="smart-form" style="font-size: 15px; width : 100%; height : 100%"><section><p style="margin-bottom : 5px;">Please enter your beta code :</p><label class="input"><input type="text" id="beta-code" /></label><em id="beta-invalid" class="hidden">Invalid beta code.</em></section><section><button id="beta-unlock" class="btn btn-default">Unlock</button></section><section><p>Don\'t have a beta code?<br/>Request one <a ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {href: "activeAddOn.betaCodeLink"},
					hashTypes: {href: "STRING"},
					hashContexts: {href: a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' target="_blank">here</a>.</p></section></div></div></div><div ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": ":more-below view.showMore::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' style="position: absolute; bottom: 0; right: 250px; cursor : pointer;">More below <i class="fa fa-arrow-down"></i></div></div>');
				return ""
			}, useData: !0
		});
	Ember.TEMPLATES.addOnSettings = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div style="margin : 20px 0;"><label style="margin: 5px 0;font-size: 14px;" class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "support_details", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><table class="table no-border"><tr><td>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</td><td>:</td><td><b>");
			d = c._triageMustache.call(a, "activeAddOn.settings.address.address", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</b></td><td><a id="change-support" style="margin : 0 5px;text-decoration: underline; display: inline-block;" href="javascript:void(0);">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "change", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a><a id="remove-support" style="margin : 0 5px;text-decoration: underline; display: inline-block;" href="javascript:void(0);">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "remove", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></td></tr><tr><td>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "sender_name", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td>:</td><td><b id="address-name-label">');
			d = c._triageMustache.call(a, "activeAddOn.settings.address.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</b><label id="address-name-input" class="input hidden"><input id="address-name" type="text" class="input-text" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.address.name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td><td><a id="edit-address-name" style="margin : 0 5px;text-decoration: underline;" href="javascript:void(0);">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "change", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a><div id="edit-address-container" class="hidden"><a id="cancel-address-name" style="margin : 0 5px;text-decoration: underline; display: inline-block;" href="javascript:void(0);">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a><a id="save-address-name" style="margin : 0 5px;text-decoration: underline; display: inline-block;" href="javascript:void(0);">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></div></td></tr></table></div><div style="margin : 20px 0;"><label style="font-size: 14px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "verfication_status", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><table class="table"><thead><tr><td>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "type", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"last_verified", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</td></tr></thead><tbody><tr><td>Forwarding</td><td class="text-center">');
			d = c["if"].call(a, "activeAddOn.settings.address.newFwdVerified", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.program(4, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d =
				c["if"].call(a, "activeAddOn.settings.address.fwdLastVerified", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(9, b),
					inverse: this.program(11, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center"><a href="javascript:void(0);" id="verify-forwarding" style="text-decoration: underline;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "verify", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></td></tr><tr><td>SPF</td><td class="text-center">');
			d = c["if"].call(a, "activeAddOn.settings.address.spfVerified", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "activeAddOn.settings.address.spfVerified", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.program(11,
					b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center"><a id="verify-spf" href="javascript:void(0);" style="text-decoration: underline;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "verify", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></td></tr><tr><td>DKIM</td><td class="text-center">');
			d = c["if"].call(a, "activeAddOn.settings.address.dkimVerified",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(2, b),
					inverse: this.program(7, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "activeAddOn.settings.address.dkimVerified", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.program(11, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center"><a href="javascript:void(0);" id="verify-dkim" style="text-decoration: underline;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "verify", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></td></tr></tbody></table></div><div style="margin : 20px 0;"><label class="label" style="font-size: 14px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "spf_record", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="input-text" readonly value=\'"v=spf1 include:mta.tawk.to ~all"\' /></label></div><div style="margin : 20px 0;"><label class="label" style="font-size: 14px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "dkim_record", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><table class="table no-border"><tbody><tr><td>CNAME</td><td><label class="input"><input type="text" class="input-text" readonly ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.address.dkim1"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td><td><label class="input"><input type="text" class="input-text" readonly ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.address.dkim2"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td></tr><tr><td>CNAME</td><td><label class="input"><input type="text" class="input-text" readonly ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.address.dkim3"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td><td><label class="input"><input type="text" class="input-text" readonly ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.address.dkim4"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td></tr></tbody></table></div><div style="margin : 20px 0;"><label class="label" style="font-size: 14px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_record_1", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><p style="margin : 10px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_record_2", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><p><a href="https://support.google.com/a/answer/178723?hl=en" target="_blank">Google Domains</a>,&nbsp;<a href="https://uk.godaddy.com/help/manage-dns-680#spfrecs" target="_blank">GoDaddy</a>,&nbsp;<a href="https://www.namecheap.com/support/knowledgebase/article.aspx/317" target="_blank">Namecheap</a>,&nbsp;<a href="https://my.bluehost.com/cgi/help/spf" target="_blank">BlueHost</a>,&nbsp;<a href="http://support.hostgator.com/articles/spf-records" target="_blank">HostGator</a>, and&nbsp;<a href="http://www.networksolutions.com/support/how-to-manage-advanced-dns-records/" target="_blank">Network Solutions</a>.</p></div>');
			return ""
		}, 2: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span style="color : green; font-weight : 700;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "verified", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 4: function (a, c, d, b) {
			a = c["if"].call(a, "activeAddOn.settings.address.pendingFwdVerified", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(5,
					b), inverse: this.program(7, b), types: ["ID"], contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span style="color : orange; font-weight : 700;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "pending", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 7: function (a, c, d, b) {
			d = c.helperMissing;
			var e =
				this.escapeExpression;
			b.buffer.push('<span style="color : red; font-weight : 700;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "not_verified", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 9: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeAddOn.settings.address.fwdLastVerified", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			a ? b.buffer.push(a) : b.buffer.push("")
		}, 11: function (a, c, d, b) {
			b.buffer.push("-")
		}, 13: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeAddOn.settings.address.spfLastVerified", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 15: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeAddOn.settings.address.dkimLastVerified", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 17: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "support_email", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><button id="add-support-email" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_support_email", {
				name: "I18n", hash: {context: "admin"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, 19: function (a, c, d, b) {
			a = c["if"].call(a, "activeAddOn.settings.widget.url", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.program(22, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 20: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {href: "activeAddOn.settings.widget.url"},
				hashTypes: {href: "STRING"}, hashContexts: {href: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' target="_blank" style="text-decoration: none; color: inherit;"><span>');
			b.buffer.push(d(c._triageMustache.call(a, "view.parsedWidgetFooterTitle", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></a>");
			return ""
		}, 22: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<span>");
			b.buffer.push(d(c._triageMustache.call(a,
				"view.parsedWidgetFooterTitle", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</span>");
			return ""
		}, 24: function (a, c, d, b) {
			b.buffer.push('<span style="font-size: 11px; font-weight: 100;">Powered by <span style="font-size: 13px; font-weight: 700">tawk.to</span></span>')
		}, 26: function (a, c, d, b) {
			a = c["if"].call(a, "activeAddOn.settings.email.url", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(27,
					b), inverse: this.program(29, b), types: ["ID"], contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 27: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "activeAddOn.settings.email.url"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank" style="text-decoration: underline; color: inherit;">');
			b.buffer.push(d(c._triageMustache.call(a, "view.parsedEmailFooterTitle",
				{
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</a>");
			return ""
		}, 29: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "view.parsedEmailFooterTitle", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 31: function (a, c, d, b) {
			b.buffer.push('No <span style="text-decoration:underline; color: #ec008c;">tawk.to</span> live chat account? Create one for free <span style="text-decoration:underline;">here</span>!')
		},
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<form id="addon-settings-form" name="addon-settings-form" class="smart-form admin-form"><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left" style="width: 50%;height: 100%; position: relative;"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><div style="margin-bottom : 10px;"><div style="float : left; width : 100%;"><div style="margin-left : 120px;"><h3 style="margin : 0 0 10px 0;">');
			d = c._triageMustache.call(a, "activeAddOn.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</h3><p>");
			d = c._triageMustache.call(a, "activeAddOn.shortDescription", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div></div><div style="float : left; width : 100px; margin-left: -100%;"><img ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {src: "activeAddOn.addOnLogo"},
					hashTypes: {src: "STRING"},
					hashContexts: {src: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' /></div><div class="clearfix"></div></div><div class="form-table" style="width: 100%;table-layout: fixed;"><div class="form-table-row"><label class="label inline-label text-left" for="addon-status" style="width: 100%; padding-left: 0;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "addon_status", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label><div class="inline-group" style="width: auto;"><label class="toggle"><input type="checkbox" name="addon-status" id="addon-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAddOn.settings.enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text",
				{
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i></label></div></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "activeAddOn.settings.enabled::hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><div style="margin : 20px 0;"><table class="table no-border branding-settings"><tr><td colspan="3" style="padding : 0;"><h5>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_footer_branding", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5></td></tr><tr><td style="padding-left : 0;"><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			b.buffer.push(e((c.input || a && a.input || f).call(a, {
				name: "input",
				hash: {
					value: "activeAddOn.settings.widget.label",
					placeholder: "Enter branding text",
					"class": "input-text",
					type: "text",
					id: "widget-label"
				},
				hashTypes: {value: "ID", placeholder: "STRING", "class": "STRING", type: "STRING", id: "STRING"},
				hashContexts: {value: a, placeholder: a, "class": a, type: a, id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label><p class="font-xs pull-left" style="opacity: 0.6;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "format_eg", {
				name: "I18n",
				hash: {
					variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
					context: "admin"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></td><td><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "link_url", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			b.buffer.push(e((c.input || a && a.input || f).call(a, {
				name: "input",
				hash: {
					value: "activeAddOn.settings.widget.url",
					placeholder: "Enter branding link url",
					"class": "input-text url",
					type: "text",
					id: "widget-url"
				},
				hashTypes: {
					value: "ID", placeholder: "STRING", "class": "STRING", type: "STRING",
					id: "STRING"
				},
				hashContexts: {value: a, placeholder: a, "class": a, type: a, id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></td><td style="width : 60px; padding-right : 0;"><label class="label">Color</label><label class="input"><input type="text" id="widget-text-color" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.widget.textColor"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></td></tr></table></div><div style="margin : 20px 0;"><table class="table no-border branding-settings"><tr><td colspan="3" style="padding : 0;"><h5>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "email_footer_branding", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5></td></tr><tr><td style="padding-left : 0;"><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			b.buffer.push(e((c.input || a && a.input || f).call(a, {
				name: "input",
				hash: {
					value: "activeAddOn.settings.email.label",
					placeholder: "Enter branding text",
					"class": "input-text",
					type: "text",
					id: "email-label"
				},
				hashTypes: {value: "ID", placeholder: "STRING", "class": "STRING", type: "STRING", id: "STRING"},
				hashContexts: {value: a, placeholder: a, "class": a, type: a, id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label><p class="font-xs pull-left" style="opacity: 0.6;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "format_eg",
				{
					name: "I18n",
					hash: {
						variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
						context: "admin"
					},
					hashTypes: {variables: "STRING", context: "STRING"},
					hashContexts: {variables: a, context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</p></td><td style="padding-right : 0;"><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "link_url", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			b.buffer.push(e((c.input || a && a.input || f).call(a, {
				name: "input",
				hash: {
					value: "activeAddOn.settings.email.url",
					placeholder: "Enter branding link url",
					"class": "input-text url",
					type: "text",
					id: "email-url"
				},
				hashTypes: {value: "ID", placeholder: "STRING", "class": "STRING", type: "STRING", id: "STRING"},
				hashContexts: {value: a, placeholder: a, "class": a, type: a, id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></td></tr></table></div><div style="margin : 20px 0;"><h5 style="margin : 10px 0;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "spf_dkim_settings", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h5>");
			d = c["if"].call(a, "activeAddOn.settings.address", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(17, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div></div></div><div class="pull-left" style="width: 50%; height: 100%; position: relative;"><div style="left: 0;right: 0;width: auto;max-width: 400px; border-left: 1px solid #e5e5e5; position: absolute; top : 0; bottom : 0; padding : 0 15px"><div><h4>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_footer_preview", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h4><div id="widget-max-preview-container" style="top : 0; margin: 20px 0;border: 2px solid rgba(0,0,0,0.0980392); border-top: none; position: relative;height: 131px;"><div style="position: absolute; bottom: 107px; top: 0; width: 100%; background-color: #fcfcfc; height: 30px; margin: 0; padding: 0; "></div><div id="actionsContainer" style="z-index: 99998; height: 107px; background-color: #fff; border-top: 2px solid #e1e1e1; position: absolute; bottom: 0; width: 100%;"><div id="ratingContainer" style="display: block;"></div><div id="textareaContainer" style="height: 53px; padding: 10px;"><div style="padding: 0; margin: 0; height: 63px; width: 100%; overflow: hidden; resize: none; border: 0; vertical-align: top; font-size: 14px !important; background-color: #fff;color: #bdbdbd; font-style: italic;">Type here and press enter...</div></div><div id="options" style="height: 32px; margin-left: 84px;"><div id="openMenu" style="position: absolute; left: 10px; bottom: 0; color: #bdbdbd; font-size: 13px; font-weight: 700; line-height: 28px; text-transform: lowercase;">options</div></div><div id="footer-container" style="position: absolute; bottom: 0; right: 6px; left: 84px; text-align: right; height: 30px; line-height: 30px; color: #000000; font-size: 13px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-right : 3px;">');
			d = c["if"].call(a, "activeAddOn.settings.enabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.program(24, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div></div><div class="margin-10"><h4>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "email_footer_preview", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h4><div style="background-color: #f5f5f5;width: 100%; padding: 0 20px; margin : 20px; 0"><div style="width: 100%; height: 40px; background-color: #fff"></div><div style="text-align: center;padding: 20px;color: #8b8b8b;text-align: center;">');
			d = c["if"].call(a, "activeAddOn.settings.enabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b),
				inverse: this.program(31, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div></div></div><div class="clearfix"></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.addOnStore = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeAddOn.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			d = c["if"].call(a, "view.showAddonSettings", {
				name: "if", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(2, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 2: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span><i class="fa fa-angle-right"></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "settings", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 4: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="width: 100%; height: 100%;"><div id="addons-list" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAddOn:hidden :row"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c.each.call(a, "addOnList",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(5, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a, "activeAddOn", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="list-loading" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isLoading::hidden"}, hashTypes: {"class": "STRING"},
				hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div>');
			return ""
		}, 5: function (a, c, d, b) {
			var e;
			d = this.escapeExpression;
			e = c.helperMissing;
			b.buffer.push('<div class="col-lg-4 col-md-4 col-sm-6 col-xs-12" style="padding: 0px"><div ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":selection-container isAvailable:active:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div style="position: relative; text-align : center; border : 1px solid #ddd; background : #f3f3f3;"><img class="addon-preview-image" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {src: "previewImage"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /><div class="learn-more-container"><h3>');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "learn_more", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h3></div></div><div class="padding-10"><h5 style="font-weight: 500; color: #333;">');
			e = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push('</h5><p style="color: #777; height: 65px;">');
			b.buffer.push(d(c._triageMustache.call(a, "shortDescription", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p>");
			e = c["if"].call(a, "isAvailable", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(12, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push('<div class="clearfix"></div></div></div></div>');
			return ""
		}, 6: function (a, c,
		                d, b) {
			a = c["if"].call(a, "isActive", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.program(10, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 7: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			d = c.unless.call(a, "isSubscribed", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<button class="addon-settings btn btn-primary pull-right addon-select-btn" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "settings", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, 8: function (a, c, d, b) {
			b.buffer.push('<button class="btn btn-primary pull-right addon-select-btn">Renew</button>')
		},
		10: function (a, c, d, b) {
			b.buffer.push('<button class="btn btn-primary pull-right addon-select-btn">$ ');
			a = c._triageMustache.call(a, "mainPrice", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</button>");
			return ""
		}, 12: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button class="btn btn-default pull-right addon-select-btn" disabled>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "coming_soon",
				{
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</button>");
			return ""
		}, 14: function (a, c, d, b) {
			a = c["if"].call(a, "view.showAddonSettings", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.program(17, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 15: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.AddOnSettingsView ||
				a && a.AddOnSettingsView || d).call(a, {
				name: "AddOnSettingsView",
				hash: {parentViewBinding: "view", controllerBinding: "view.controller"},
				hashTypes: {parentViewBinding: "STRING", controllerBinding: "STRING"},
				hashContexts: {parentViewBinding: a, controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 17: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.AddOnDetailView || a && a.AddOnDetailView || d).call(a, {
				name: "AddOnDetailView",
				hash: {parentViewBinding: "view", controllerBinding: "view.controller"},
				hashTypes: {parentViewBinding: "STRING", controllerBinding: "STRING"},
				hashContexts: {parentViewBinding: a, controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 19: function (a, c, d, b) {
			b.buffer.push('<h2 class="text-center">Add-Ons are not available for this property. Please choose another property.</h2>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-puzzle-piece"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_on_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeAddOn", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container">');
			d = c["if"].call(a, "activeProperty.isSite", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.program(19, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.alertsMain = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button id="clear" type="submit" class="btn btn-danger pull-right" style="margin-right: 5px">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-bell"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "alert_title",
				{
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAlert:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><form id="alert-form" name="alert-form" class="smart-form"> <fieldset> <section> <label class="label"> ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "alerts_description", {
				name: "I18n",
				hash: {variables: '{"lineBreak" : "<br \\/>"}', context: "admin"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' </label> </section> <section><label class="textarea" style="width: 100%; max-width: 100%;"><textarea id="alert-content" name="alert-content" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enter_content", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" rows="5" maxlength="500"></textarea></label></section><section><label class="note text-left">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "alert_max_characters", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><button id="submit" type="submit" class="btn btn-primary pull-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			d = c["if"].call(a, "alert", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></section></fieldset></form></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.banView =
		Ember.Handlebars.template({
			1: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('<i class="fa fa-angle-right"></i>');
				return ""
			}, 3: function (a, c, d, b) {
				b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
				a = c["if"].call(a, "activeBan.id", {
					name: "if", hash: {}, hashTypes: {}, hashContexts: {},
					fn: this.program(4, b), inverse: this.program(6, b), types: ["ID"], contexts: [a], data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</span>");
				return ""
			}, 4: function (a, c, d, b) {
				a = c._triageMustache.call(a, "activeBan.displayText", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a ? b.buffer.push(a) : b.buffer.push("")
			}, 6: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_ban", {
					name: "I18n", hash: {context: "ban_list"},
					hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})))
			}, 8: function (a, c, d, b) {
				b.buffer.push('<th class="text-center delete-cell"><div class="smart-form" style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th>')
			}, 10: function (a, c, d, b) {
				var e = this.escapeExpression;
				b.buffer.push('<tr class="open-view" ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr", hash: {id: "id"}, hashTypes: {id: "STRING"},
					hashContexts: {id: a}, types: [], contexts: [], data: b
				})));
				b.buffer.push('><td class="text-center">');
				d = c._triageMustache.call(a, "displayText", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</td><td class="text-center">');
				d = c["if"].call(a, "country", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(11, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</td><td>");
				d = c._triageMustache.call(a, "reason", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</td><td class="text-center">');
				b.buffer.push(e(c._triageMustache.call(a, "bannedBy", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</td><td class="text-center">');
				d = c._triageMustache.call(a, "createdOn", {
					name: "_triageMustache",
					hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</td>");
				d = c["if"].call(a, "isAdmin", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(14, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</tr>");
				return ""
			}, 11: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<div ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr", hash: {"class": "country"}, hashTypes: {"class": "STRING"},
					hashContexts: {"class": a}, types: [], contexts: [], data: b
				})));
				b.buffer.push("></div>");
				a = c["if"].call(a, "city", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(12, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				return ""
			}, 12: function (a, c, d, b) {
				b.buffer.push('<span class="city">(');
				a = c._triageMustache.call(a, "city", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push(")</span>");
				return ""
			}, 14: function (a, c, d, b) {
				b.buffer.push('<td class="text-center delete-cell"><div class="smart-form"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></div></td>')
			}, 16: function (a, c, d, b) {
				d = this.escapeExpression;
				var e = c.helperMissing;
				b.buffer.push("<tr ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "isLoading:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('><td colspan="6" class="text-center"><h1>');
				b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "empty_ban_list", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</h1></td></tr>");
				return ""
			}, 18: function (a, c, d, b) {
				a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a ? b.buffer.push(a) : b.buffer.push("")
			}, 20: function (a, c, d, b) {
				d = this.escapeExpression;
				var e = c.helperMissing;
				b.buffer.push('<input type="hidden" id="ban-entry" ');
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {value: "activeBan.entry"},
					hashTypes: {value: "ID"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' /><label class="label">');
				b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "ban_entry", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</label><label class="input">');
				a = c._triageMustache.call(a,
					"activeBan.displayText", {
						name: "_triageMustache",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != a && b.buffer.push(a);
				b.buffer.push("</label>");
				return ""
			}, 22: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<label class="label" for="ban-entry">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ip_address", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</label><label class="input"><input type="text" class="ipAddress required" id="ban-entry" name="ban-entry" placeholder="');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_ip_address", {
					name: "I18n",
					hash: {context: "placeholders"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('" /></label>');
				return ""
			}, 24: function (a, c, d, b) {
				b.buffer.push('<div class="transcript-divider"></div>')
			}, 26: function (a, c, d, b) {
				b.buffer.push('<div class="transcript-view">');
				a = c["if"].call(a, "activeBan.transcript.isLoaded", {
					name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(27,
						b), inverse: this.program(35, b), types: ["ID"], contexts: [a], data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</div>");
				return ""
			}, 27: function (a, c, d, b) {
				b.buffer.push('<div id="transcriptBody">');
				d = c.each.call(a, "activeBan.transcript.content", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(28, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				d = c.unless.call(a, "activeBan.transcript.content.length", {
					name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(30,
						b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</div>");
				return ""
			}, 28: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push(d(c._triageMustache.call(a, "", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('<div class="clear"></div>');
				return ""
			}, 30: function (a, c, d, b) {
				a = c["if"].call(a, "activeBan.isVisitor", {
					name: "if", hash: {}, hashTypes: {}, hashContexts: {},
					fn: this.program(31, b), inverse: this.program(33, b), types: ["ID"], contexts: [a], data: b
				});
				null != a ? b.buffer.push(a) : b.buffer.push("")
			}, 31: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_transcript_visitor", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})))
			}, 33: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
					"no_transcript_ip", {
						name: "I18n",
						hash: {context: "ban_list"},
						hashTypes: {context: "STRING"},
						hashContexts: {context: a},
						types: ["ID"],
						contexts: [a],
						data: b
					})))
			}, 35: function (a, c, d, b) {
				a = c["if"].call(a, "activeBan.transcript.isError", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(36, b),
					inverse: this.program(38, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a ? b.buffer.push(a) : b.buffer.push("")
			}, 36: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<div class="load-container text-center"><button class="btn btn-danger reload-view">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "transcript_error", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</button></div>");
				return ""
			}, 38: function (a, c, d, b) {
				b.buffer.push('<div class="load-container text-center"><img src="images/ajax-loader-big.gif" /></div>')
			}, 40: function (a, c, d, b) {
				d = this.escapeExpression;
				var e = c.helperMissing;
				b.buffer.push('<button type="button" ');
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": ":btn :btn-danger activeBan.id::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' id="delete">');
				b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "delete_text", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</button>");
				return ""
			}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a,
			                                                     c, d, b) {
				var e = c.helperMissing, f = this.escapeExpression;
				b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
				d = c.unless.call(a, "activeProperty.isPersonal", {
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				d = c._triageMustache.call(a, "activeProperty.name", {
					name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
					contexts: [a], data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-ban"></i>&nbsp;');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</span>");
				d = c["if"].call(a, "activeBan", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(3, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
				b.buffer.push(f(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "activeBan:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('><div class="text-right" style="height: 40px;"><div class="pull-left" style="width: 450px"><form id="search-form"><input id="search-text" class="form-control" type="text" placeholder="Search" /></form></div><div class="pull-right"><button id="add-item" class="btn btn-primary">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_ip", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</button></div><div class="clearfix"></div></div><div id="scrollable-list" style="position: absolute;top: 40px; width: 100%;bottom: 0; overflow: auto;" class="smart-form"><table class="table"><thead><tr><th class="text-center">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_entry", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</th><th class="text-center">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "location", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</th><th class="text-center">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_reason", {
					name: "I18n", hash: {context: "ban_list"}, hashTypes: {context: "STRING"},
					hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('</th><th class="text-center">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "banned_by", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</th><th class="text-center">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "banned_on", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</th>");
				d = c["if"].call(a, "activeProperty.isAdmin", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(8, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</tr></thead><tbody>");
				d = c.each.call(a, "pagedList.currentData", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(10, b),
					inverse: this.program(16, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</tbody></table></div><div id="list-loading" ');
				b.buffer.push(f(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "isLoading::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><div id="bulk-action-container" ');
				b.buffer.push(f(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "view.bulkMarkedTotal::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
				d = c["if"].call(a, "view.bulkMarkedTotal", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(18, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white" id="bulk-conversations-purge">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</button></li></ul></div></div></div><form id="ban-form" name="ban-form" ');
				b.buffer.push(f(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "activeBan::hidden :smart-form :admin-form"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('><div id="form-scrollable-container"><fieldset><section>');
				d = c["if"].call(a, "activeBan.id", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(20, b),
					inverse: this.program(22, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</section><section><label class="label" for="ban-reason">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_reason", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</label><label class="textarea">');
				b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
					name: "textarea",
					hash: {
						valueBinding: "activeBan.reason",
						name: "ban-reason",
						id: "ban-reason",
						rows: "3",
						"class": "required",
						placeholderKey: "enter_ban_reason"
					},
					hashTypes: {
						valueBinding: "STRING",
						name: "STRING",
						id: "STRING",
						rows: "STRING",
						"class": "STRING",
						placeholderKey: "STRING"
					},
					hashContexts: {valueBinding: a, name: a, id: a, rows: a, "class": a, placeholderKey: a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push("</label></section></fieldset>");
				d = c["if"].call(a, "activeBan.transcript.content.length",
					{
						name: "if",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						fn: this.program(24, b),
						inverse: this.noop,
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != d && b.buffer.push(d);
				d = c["if"].call(a, "activeBan.id", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(26, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</div><footer><button id="submit" type="submit" class="btn btn-primary">');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
					name: "I18n", hash: {context: "buttons"},
					hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push("</button>");
				d = c["if"].call(a, "activeProperty.isAdmin", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(40, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</footer></form></div></div>");
				return ""
			}, useData: !0
		});
	Ember.TEMPLATES.billingMain = Ember.Handlebars.template({
		1: function (a, c, d, b, e) {
			var f = this.escapeExpression, g = c.helperMissing;
			b.buffer.push('<div class="billing-list-container" style="width: 100%; height: auto; border-bottom: 1px solid #ddd; position: relative; padding-bottom : 10px;"><div style="display: table; width : 100%"><div style="display: table-row"><div style="table-cell; border-right: 1px solid #ddd; padding-right : 15px;"><div style="width : 100%; height : 100%; overflow : auto; position: relative; padding : 5px 0;"><div style="float : left; width : 100%;"><div style="margin-left : 120px; color : #777;"><h3 style="margin : 0 0 10px 0; float: left;">');
			d = c._triageMustache.call(a, "subscription.addOnName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</h3>");
			d = c["if"].call(a, "subscription.isCanceled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div><p style="margin-right : 80px">');
			b.buffer.push(f(c._triageMustache.call(a,
				"subscription.addOnShortDescription", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</p></div></div><div style="float : left; width : 100px; margin-left: -100%;"><img ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {src: "subscription.addOnLogo"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></div><div class="clearfix"></div><div style="margin : 20px 0;"><h4 style="margin : 10px 0; font-weight : 500;">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "plan_billing_details", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h4><table style="width: 100%"><tr><td style="padding: 5px 5px 5px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "plan", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>');
			d = c._triageMustache.call(a, "subscription.plan.subscriptionType", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</strong></td><td style="padding: 5px 5px 5px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "plan_price", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>$ ');
			d = c._triageMustache.call(a, "subscription.plan.pricePretify", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</strong></td></tr><tr><td style="padding: 5px 5px 5px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "purchased_on", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>');
			d = c._triageMustache.call(a, "subscription.purchasedDate", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</strong></td>");
			d = c["if"].call(a, "subscription.isCanceled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b, e),
				inverse: this.program(6, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tr><tr><td style="padding: 5px 5px 5px 0;">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || g).call(a, "billing_admin", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>');
			b.buffer.push(f(c._triageMustache.call(a, "subscription.subscribedBy", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</strong></td>");
			d = c["if"].call(a, "subscription.isCanceled",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(8, b, e),
					inverse: this.program(10, b, e),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</tr><tr><td style="padding: 5px 5px 5px 0; vertical-align: top;">Billing Address</td><td style="padding: 5px 5px 5px 0;"><p class="address" style="margin : 0;">');
			b.buffer.push(f(c._triageMustache.call(a, "subscription.billingAddressRich", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p>");
			d = c["if"].call(a, "subscription.billingAddress", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b, e),
				inverse: this.program(14, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<form class="change-billing-address-form smart-form hidden" name="change-billing-address-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-id": "subscription.id"}, hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><div><fieldset style="background: inherit;"><section><label class="textarea">');
			b.buffer.push(f((c.textarea || a && a.textarea || g).call(a, {
				name: "textarea",
				hash: {valueBinding: "subscription.billingAddress", rows: "5", "class": "billing-address"},
				hashTypes: {valueBinding: "STRING", rows: "STRING", "class": "STRING"},
				hashContexts: {valueBinding: a, rows: a, "class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></section></fieldset><div class="text-center"><button class="cancel-change-billing-address btn btn-default" style="margin : 0 5px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-primary submit-change-billing-address" style="margin : 0 5px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div></form></td></tr></table></div></div></div><div style="display: table-cell; width : 250px; vertical-align: top; padding-left : 15px; height : 100%;"><div style="width : 100%; height : 100%; position: relative;"><div id="receipt-list" style="width : 100%;"><h3 style="margin : 0 0 10px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "invoices", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h3><ul class="receipts-list">');
			d = c.each.call(a, "subscription.paymentReceipts", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<li class="clearfix"></li></ul><p ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":text-center hasMoreReceipts::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><a href="javascript:void(0);">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "view_more", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></p></div><div style="width : 100%; margin-top : 10px;"><form class="smart-form receipt-email"><p class="text-center hidden"><a href="javascript:void(0);">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "view_all_receipts", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></p>");
			d = c["if"].call(a, "subscription.isAvailable", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<input type="hidden" class="subscription-id" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {value: "subscription.id"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' /></form></div></div></div></div><div style="display: table-row"><div class="payment-details smart-form hidden pull-right" style="display : table-cell; border-right: 1px solid #ddd; padding-right : 5px; width : 46%;"><form class="change-payment-form" name="change-payment-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-id": "subscription.id"},
				hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><div style="padding:20px 15px;"><fieldset style="background: inherit;"><ol id="payment-steps">');
			d = c["if"].call(a, "subscription.isCanceled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "canUsePaypal", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(30, b, e),
				inverse: this.noop, types: ["ID"], contexts: [e[1]], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" <li ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "controller.canUsePaypal:hidden :card-details"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a, "Tawk.userController.existingCards.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(32, b, e),
				inverse: this.program(35, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("<div ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "Tawk.userController.existingCards.length:hidden :new-card-details"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="margin-left: -16px;"><section><label class="input"><i class="icon-prepend fa fa-user" style="z-index:1;"></i><input id="cardholder-name" name="cardholder-name" type="text" class="input required" placeholder="Name on card" /></label></section><section><label class="input"><i class="icon-prepend fa fa-credit-card" style="z-index:1;"></i><i class="card-type icon-append"></i><input id="card-number" name="card-number" type="text" class="input required ccNumber" placeholder="Card number" /></label></section><div class="row"><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-calendar" style="z-index:1;"></i><input id="card-expiry" name="card-expiry" type="text" class="input required ccExpiryFormat ccExpiryDate" placeholder="MM/YY" /></label></section><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-lock" style="z-index:1;"></i><input id="card-cvc" name="card-cvc" type="text" class="input required digits cvcCheck" placeholder="CVV" minlength="3" maxlength="4" /></label></section></div><section><label class="input"><i class="icon-prepend fa fa-map-marker" style="z-index:1;"></i><input id="zip-code" name="zip-code" type="text" class="input required" placeholder="Zip code" /></label></section></div></li></ol></fieldset><div class="text-center"><button class="cancel-payment-change btn btn-default" style="margin : 0 5px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			d = c["if"].call(a, "subscription.isCanceled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(37, b, e),
				inverse: this.program(39, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div class="text-center"><div class="sprite-background secure-seal"></div></div></form></div></div></div></div>');
			return ""
		}, 2: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<h3 style="margin : 0 0 10px 0; float: right; color : red">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "canceled", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h3>");
			return ""
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<td style="padding: 5px 5px 5px 0;">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "expires_on", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 5px 5px 5px 0;" colspan="2"><strong>');
			a = c._triageMustache.call(a, "subscription.expiryDate", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</strong></td>");
			return ""
		}, 6: function (a, c, d, b) {
			var e = c.helperMissing, f =
				this.escapeExpression;
			b.buffer.push('<td style="padding: 5px 5px 5px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "next_billing", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>');
			d = c._triageMustache.call(a, "subscription.nextBillingDate", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</strong></td><td style="padding: 5px 5px 5px 0;"><a class="cancel-subscription" href="javascript:void(0);" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "subscription.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="text-decoration: underline;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></td>");
			return ""
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<td style="padding: 5px 5px 5px 0;" colspan="3"><button class="btn btn-primary renew-subscription" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "subscription.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a,
				"renew_subscription", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</button></td>");
			return ""
		}, 10: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<td style="padding: 5px 5px 5px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "payment_method", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><span ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":card-type subscription.paymentMethod :card-display"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span><span style="vertical-align : middle;">');
			d = c._triageMustache.call(a, "subscription.source", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></td><td style="padding: 5px 5px 5px 0;"><a class="change-payment-method" href="javascript:void(0);" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "subscription.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="text-decoration: underline;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "modify", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></td>");
			return ""
		}, 12: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<p><a class="change-billing-address" href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "subscription.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="text-decoration: underline;">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a,
				"modify", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</a></p>");
			return ""
		}, 14: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<a class="change-billing-address" href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "subscription.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="text-decoration: underline;">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a>");
			return ""
		}, 16: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<li class="receipt-item"><span class="receipt-amount">$');
			d = c._triageMustache.call(a, "amountPretify", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
				contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="receipt-date"><a class="view-receipt" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "paymentId"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "downloadLink"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank">');
			d = c._triageMustache.call(a,
				"transactionDate", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</a></span></li>");
			return ""
		}, 18: function (a, c, d, b) {
			var e;
			d = this.escapeExpression;
			e = c.helperMissing;
			b.buffer.push('<div style="float : left; width : 100%;"><div style="margin-right : 35px;"><label class="checkbox" style="margin-bottom : 5px;"><input type="checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {id: "subscription.id"},
				hashTypes: {id: "STRING"}, hashContexts: {id: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' class="toggle-email-receipts" name="email-receipts-select" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "subscription.billingEmailEnabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "email_receipts", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</label><div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "subscription.billingEmailEnabled::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: relative"><label class="select"><select class="select-email">');
			e = c["if"].call(a, "subscription.isSubscribedByMe", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(19,
					b), inverse: this.program(21, b), types: ["ID"], contexts: [a], data: b
			});
			null != e && b.buffer.push(e);
			e = c["if"].call(a, "subscription.billingEmailAddress", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.program(25, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push("</select><i></i></label><label ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":input subscription.billingEmailAddress::hidden :custom-email-field"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute; left: 2px; top: 2px; right: 22px; height: 28px;"><input name="email-input" type="text" class="input-text email" placeholder="Enter email address" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "subscription.billingEmailAddress"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="border: 0; height: 28px;"/></label><em for="email-input" class="invalid" generated="true"></em></div></div></div><div style="float: left; margin-left : -28px;"><button class="btn btn-primary btn-sm save-email" style="padding : 3px 7px;"><i class="fa fa-save"></i></button></div><div class="clearfix"></div>');
			return ""
		}, 19: function (a, c, d, b) {
			b.buffer.push('<option value="default-email">');
			a = c._triageMustache.call(a, "Tawk.userController.user.email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 21: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<option value="billing-admin" selected>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "billing_admin", {
				name: "I18n", hash: {context: "admin"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 23: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<option value="custom-email" selected>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "another_email", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 25: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<option value="custom-email">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "another_email", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 27: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><section><label class="label" style="font-weight: bold; font-size: 15px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"select_package", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select class="plan">');
			a = c.each.call(a, "subscription.plans", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(28, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select><i></i></label></section></li>");
			return ""
		}, 28: function (a,
		                 c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {selected: "selected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">$ ");
			a = c._triageMustache.call(a, "pricePretify", {
				name: "_triageMustache", hash: {}, hashTypes: {},
				hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 30: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><section><label class="label" style="font-weight: bold; font-size: 15px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_payment_method", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select class="payment-method"><option value="pp">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "paypal", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="cc">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "credit_card", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option></select><i></i></label></section></li>");
			return ""
		}, 32: function (a,
		                 c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="label" style="font-weight: bold; font-size: 15px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_existing_card", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select class="card-selection"><option value="new-card">');
			b.buffer.push(e((c.I18n || a &&
				a.I18n || d).call(a, "add_card", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			a = c.each.call(a, "Tawk.userController.existingCards", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(33, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select><i></i></label></section>");
			return ""
		}, 33: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "customerId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {selected: "selected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c._triageMustache.call(a, "cardBrand", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" x-");
			d = c._triageMustache.call(a, "cardNumber", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</option>");
			return ""
		}, 35: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="label" style="font-weight: bold; font-size: 15px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "card_details", {
				name: "I18n", hash: {context: "admin"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</label></section>");
			return ""
		}, 37: function (a, c, d, b) {
			b.buffer.push('<button class="btn btn-primary submit-payment-change" style="margin : 0 5px;">Renew</button>')
		}, 39: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button class="btn btn-primary submit-payment-change" style="margin : 0 5px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, 41: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="well text-center"><div><h5>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_addons_purchased", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h5><p>");
			b.buffer.push(e((c.I18n || a &&
				a.I18n || d).call(a, "add_on_redirect", {
				name: "I18n",
				hash: {
					variables: '{"linkStart" : "<a id=\'addon-store\' href=\'javascript:void(0);\'>", "linkEnd" : "<\\/a>"}',
					context: "admin"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div></div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
			var f = c.helperMissing, g = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-dollar"></i>&nbsp;');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "billing", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div id="billing-list" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute;top: 0; width: auto; bottom: 0; overflow: auto; left : -13px; right : -13px;">');
			d = c.each.call(a, "subscription", "as", "subscriptionList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b, e),
				inverse: this.program(41, b, e),
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="list-loading" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isLoading::hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div></div>');
			return ""
		}, useData: !0, useDepths: !0
	});
	Ember.TEMPLATES.widgetBubblesGallery = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":superbox-list this.rotatable::non-rotatable"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "this.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><img class="bubble" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {src: "this.link"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /></div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a,
		                                                     c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div id="bubbles-container" style="bottom : 73px;"><div class="superbox col-sm-12">');
			d = c.each.call(a, "view.bubblesList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="bubble-more-below" class="hidden">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "more_bubble", {
				name: "I18n", hash: {context: "widgets"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push(' <i class="fa fa-arrow-down"></i></div></div><div class="modal-footer" style="position: absolute;width: 100%; bottom: 0;"> <button type="button" class="btn btn-default" id="close-bubble-gallery">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES["condition-view"] = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "groupKey", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></optgroup>');
			a = c.each.call(a, "keySelection", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 2: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "index"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {selected: "isSelected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "value", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 4: function (a, c, d, b) {
			b.buffer.push('<div class="form-table-cell" style="padding: 0 0 0 5px; vertical-align: top;width : 33.3%;"><label class="select"><i></i><select class="operation">');
			a = c.each.call(a, "view.selectTypes", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select></label></div>");
			return ""
		}, 6: function (a, c, d, b) {
			b.buffer.push('<div class="form-table-cell" style="padding: 0 0 0 5px; vertical-align: top; width : 33.3%;"><label class="select" ><i></i><select class="condition-input" style="text-transform: capitalize;">');
			a = c.each.call(a, "view.valueSelection", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select></label></div>");
			return ""
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="form-table-cell" style="padding: 0 0 0 5px; vertical-align: top;"><label class="input"><input type="text" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.valueInput.classNames"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {id: "view.valueInput.id"},
					hashTypes: {id: "STRING"},
					hashContexts: {id: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "view.valueInput.name"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.valueInput.value"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("  ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {placeholder: "view.valueInput.placeholder"},
				hashTypes: {placeholder: "STRING"},
				hashContexts: {placeholder: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {maxlength: "view.valueInput.maxlength"},
				hashTypes: {maxlength: "STRING"},
				hashContexts: {maxlength: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /></label></div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a,
		                                                     c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="form-table"><div class="form-table-row"><div class="form-table-cell" style="padding: 0; vertical-align: top;width : 33.3%;"><label class="select"><i></i><select class="condition">');
			d = c.each.call(a, "view.mainConditons", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</select></label></div>");
			d = c["if"].call(a,
				"view.condition.operation", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(4, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.isSelect", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div></div><p class="note" style="position : absolute;">');
			d = c._triageMustache.call(a, "view.condition.hint",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</p><a href="javascript:void(0);" class="button-icon delete-condition" data-placement="top" data-original-title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_condition", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a><input type="hidden" class="condition-item" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.condition.valueId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" />");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.departmentSettings = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa  fa-angle-right"></i>');
			a = c["if"].call(a, "activeDepartment.id", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2, b), inverse: this.program(4,
					b), types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 2: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeDepartment.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_department", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})))
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<tr class="open-view" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><td>");
			d = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td><td>");
			d =
				c._triageMustache.call(a, "description", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "assignedAgents.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.program(9, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "isEnabled", {
				name: "if", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(11, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center delete-cell"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></td></tr>');
			return ""
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<a class="name-popover" href="javascript:void(0);" rel="popover-hover" data-placement="top" data-html="true" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-content": "agentNames"},
					hashTypes: {"data-content": "STRING"},
					hashContexts: {"data-content": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "totalAssignedText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a>");
			return ""
		}, 9: function (a, c, d, b) {
			b.buffer.push("-")
		}, 11: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-check txt-color-tawk-pink"></i>')
		}, 13: function (a,
		                 c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td colspan="5" class="text-center"><h1>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_departments", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h1></td></tr>");
			return ""
		}, 15: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 17: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="department-status">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "status", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="department-status" id="department-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeDepartment.isEnabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"disabled_text", {
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('"></i></label></div></div></div></section>');
			return ""
		}, 19: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<label class="col col-6 checkbox"><input type="checkbox" name="assigned-agents" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "aid"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /><i></i><span style="margin-left : 10px">');
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span></label>");
			return ""
		}, 21: function (a, c, d, b) {
			d = c.helperMissing;
			var e =
				this.escapeExpression;
			b.buffer.push('<button type="button" class="btn btn-danger" id="delete">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-sitemap"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "departments", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeDepartment", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeDepartment:hidden :smart-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="width : 100%; height : 100%;"><div style="height: 40px;"><div class="pull-left"><label class="input"><input type="text" id="search" placeholder="Search" style="width: 450px"/></label></div><div class="pull-right"><button id="add-department" class="btn btn-primary">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "add_department", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div><div class="clearfix"></div></div><div class="scrollable-list" style="bottom : 60px;"><table class="table"><thead><tr><th>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "department", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</th><th>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "description", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "members", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "is_enabled", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
			d = c.each.call(a, "pagedList.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(13,
					b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div id="bulk-action-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.bulkMarkedTotal::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
			d = c["if"].call(a, "view.bulkMarkedTotal", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(15,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white" id="bulk-conversations-purge">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></ul></div></div><p style="position: absolute; width: 100%;bottom: 0; border-top: 1px solid #ddd; padding : 5px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "prechat_department", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</p></div><form id="department-form" name="department-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeDepartment::hidden :smart-form :admin-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="form-scrollable-container"><fieldset><section><label class="label" for="department-name">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required" id="department-name" name="department-name" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "department_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {value: "activeDepartment.name"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' /></label></section><section><label class="label" for="department-description">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "description", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea">');
			b.buffer.push(f((c.textarea ||
				a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {
					value: "activeDepartment.description",
					name: "department-description",
					id: "department-description",
					rows: "3",
					"class": "required",
					placeholderKey: "department_description"
				},
				hashTypes: {
					value: "ID",
					name: "STRING",
					id: "STRING",
					rows: "STRING",
					"class": "STRING",
					placeholderKey: "STRING"
				},
				hashContexts: {value: a, name: a, id: a, rows: a, "class": a, placeholderKey: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section>");
			d = c["if"].call(a, "activeDepartment.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "members", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			d = c.each.call(a, "activeDepartment.agentList", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(19,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></section></fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			d = c["if"].call(a, "activeDepartment.id", {
				name: "if", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(21, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</footer></form></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.forwardingSetup = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-body"><div class="form-bootstrapWizard"><ul class="bootstrapWizard form-wizard"><li class="active" data-target="#step1"><a class="change-tab" href="#tab1" data-toggle="tab"><span class="step pending">1</span><span class="step done hidden"></span><span class="title">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "support_email", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li data-target="#step2"><a class="change-tab" href="#tab2" data-toggle="tab"><span class="step pending">2</span><span class="step done hidden"></span><span class="title">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forwarding_email", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</span></a></li><li data-target="#step3"><a class="change-tab" href="#tab3" data-toggle="tab"><span class="step pending">3</span><span class="step done hidden"></span><span class="title">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "verify_setup", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li></ul><div class="clearfix"></div></div><br /><div class="tab-content" style="margin : 20px 10px;"><div class="tab-pane active" id="tab1"><form id="support-email-form" class="smart-form"><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_support_email", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input id="support-email" type="email" class="input text required" placeholder="eg. support@your-domain.com" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.candidate.address"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></form></div><div class="tab-pane" id="tab2"><ol><li class="padding-5">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_1", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="padding-5">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_2", {
				name: "I18n",
				hash: {
					variables: '{"emailAddress" : "activeProperty.settings.forwardingEmail", "strongStart" : "<span style=\'font-size: 14px; font-weight : 700;\'>", "strongEnd" : "</span>"}',
					replaceVar: "true", context: "admin"
				},
				hashTypes: {variables: "STRING", replaceVar: "STRING", context: "STRING"},
				hashContexts: {variables: a, replaceVar: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="padding-5"><div class="checkbox"><label><input id="finished-check" type="checkbox" /> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_3", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div></li></ol></div><div class="tab-pane text-center" id="tab3"><div id="verifying"><h5>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_checking_1", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h5><h5>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_checking_2", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><img src="https://static-a.tawk.to/v2/a34/images/default.gif" /></div><div id="fail" class="hidden"><h3 class="txt-color-red">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_fail_1", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h3><p style="font-size:14px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_fail_2", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><p style="font-size:14px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_fail_3", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><div id="success" class="hidden"><h3 class="txt-color-green">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_success",
				{
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</h3><p id="success-message"></p><div id="success-check-container"><i class="fa fa-check"></i></div></div></div></div></div><div class="modal-footer"><button id="cancel" type="button" class="btn btn-default pull-left" data-dismiss="modal">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "cancel", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button><button id="next" type="button" class="btn btn-primary next-step pull-right">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "next_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="verify" type="button" class="btn btn-primary hidden next-step  pull-right" disabled>');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "verify", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="done" type="button" class="btn btn-primary hidden next-step  pull-right" data-dismiss="modal" disabled>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "done", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="previous" type="button" class="btn btn-default pull-right hidden">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "previous_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="start-over" type="button" class="btn btn-primary hidden pull-right">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "start_over", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><div class="clearfix"></div></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.knowledgebase = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			a = c["if"].call(a, "activeKnowledgebase.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.program(4, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 2: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeKnowledgebase.title", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_content", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})))
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "categories", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 8: function (a, c, d, b) {
			a = c.unless.call(a, "isDeleted", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 9: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 11: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="pull-right"><button id="add-item" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_content", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="manage-categories" class="btn btn-default" style="margin-left : 5px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "manage_categories", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div>");
			return ""
		}, 13: function (a, c, d, b, e) {
			var f = this.escapeExpression;
			b.buffer.push("<tr ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "content.id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="open-view"><td style="vertical-align: middle; width : 60%;"><p><b>');
			d = c._triageMustache.call(a, "content.title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</b></p><p>");
			b.buffer.push(f(c._triageMustache.call(a, "content.snippet", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('...</p></td><td style="vertical-align: middle"  class="text-center">');
			d = c._triageMustache.call(a, "content.categoryName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td style="vertical-align: middle"  class="text-center">');
			d = c._triageMustache.call(a, "content.createdOnStr", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center" style="vertical-align: middle">');
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 14: function (a, c, d,
		                 b) {
			d = this.escapeExpression;
			b.buffer.push('<button class="btn btn-danger delete-content" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "content.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-trash-o"></i></button>');
			return ""
		}, 16: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<tr><td colspan="4" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isLoading:hidden :text-center"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("><h3>");
			a = c["if"].call(a, "loadingError", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.program(19, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</h3></td></tr>");
			return ""
		}, 17: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "load_list_error", {
				name: "I18n", hash: {context: "admin"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})))
		}, 19: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "content_unavailable", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})))
		}, 21: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<form id="knowledgebase-form" name="knowledgebase-form" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeKnowledgebase::hidden :admin-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="form-scrollable-container"><fieldset><div style=" display: inline-block; vertical-align: top; width: 65%;"><section class="smart-form" style="margin-bottom: 15px;"><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "title", {
				name: "I18n", hash: {context: "admin"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label class="input" style="max-width : 100%"><input type="text"  class="required" id="kb-title" name="kb-title" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeKnowledgebase.title"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section><section style="margin-bottom: 15px;"><div class="smart-form"><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "content_text", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><label id="kb-content-container" class="textarea" style="width : 100%; max-width : 100%;"><textarea id="editor" maxlength="5000" name="kb-content"></textarea></label><em id="kb-content-error" for="kb-content" class="invalid hidden">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"required", {
					name: "I18n",
					hash: {context: "form_validation_messages"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</em></section></div><div class="smart-form" style="display: inline-block; vertical-align: text-bottom; width: 30%; margin-left: 4%; margin-right : 1%;"><section><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "status", {
				name: "I18n", hash: {context: "header"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label class="select"><select id="status-select"><option value="draft">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "draft_status", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option id="published-option" value="published" disabled="disabled">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "published_status", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option id="outdated-option" value="outdated" disabled="disabled">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "outdated_status", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option></select><i></i></label></section><section><label class="label">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "category", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><select id="category-select" name="category-select" class="required"><option selected="true" disabled="disabled"></option><option value="new">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "new_category", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push("</option>");
			d = c.each.call(a, "kbCategories", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></section><section><label id="new-category-field" class="input hidden"><input type="text" name="category-name" id="category-name" class="required" maxlength="50" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n ||
				f).call(a, "enter_category", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section></div></fieldset></div><div class="smart-form" style="position: absolute;bottom: 0;width: auto;left: 0;right: 0;"><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button><button type="button" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-danger activeKnowledgebase.id::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="delete">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></div></form>");
			return ""
		}, 23: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div id="form-scrollable-container" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeKnowledgebase::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="kb-content-container"></div></div>');
			return ""
		}, 25: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="pull-right smart-form"><form id="add-category-form" name="add-category-form"><label class="input" style="display: inline-block; vertical-align: middle;"><input type="text" class="input"id="new-category-input"  name="category-name" maxlength="50" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_category", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label><button id="add-category" class="btn btn-primary"><i class="fa fa-save"></i></button></form></div>');
			return ""
		}, 27: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<tr><td class="smart-form" style="vertical-align: middle"><span class="display-category">');
			d = c._triageMustache.call(a,
				"name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><label class="input edit-category-input hidden"><input type="text" class="input" name="category-name" maxlength="50" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></td><td class="text-right">');
			d = c["if"].call(a,
				"controller.activeProperty.isAdmin", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(28, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 28: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="edit-buttons-container hidden"><button class="btn btn-primary save-edit" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="margin-right : 5px;"><i class="fa fa-save"></i></button><button class="btn btn-default cancel-edit" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-times"></i></button></div><div class="action-buttons-container"><button class="btn btn-default edit-category" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' style="margin-right : 5px;"><i class="fa fa-edit"></i></button><button class="btn btn-danger delete-category" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-trash-o"></i></button></div>');
			return ""
		}, 30: function (a,
		                 c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td class="text-center"><h3>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_categories", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h3></td></tr>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
			var f = c.helperMissing, g = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-book"></i>&nbsp;');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "knowledge_base", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeKnowledgebase", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.manageCategories", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(6,
					b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.manageCategories:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: relative; width : 100%; height: 100%;"><div ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeKnowledgebase:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="text-right" style="height: 80px;"><div class="pull-left" style="width: 350px"><form id="search-kb-content"><div class="input-group"><input id="content-text" class="form-control" type="text" placeholder="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('" /><div class="input-group-btn" style="position: static;"><button id="openFilter" type="button" class="btn btn-default dropdown-toggle" style="margin-left: -1px;"><span class="caret"></span></button><div class="dropdown-menu pull-right smart-form" role="menu" id="shortcuts-filter" style="position:absolute; width : 100%"><fieldset class="padding-10"><section><label class="label">');
			b.buffer.push(g((c.I18n ||
				a && a.I18n || f).call(a, "category", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><select class="category-select"><option selected="true"></option>');
			d = c.each.call(a, "kbCategories", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></section><section><label class="label">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "status", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><select class="status-select"><option selected="true"></option><option value="draft">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "draft_status", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="published">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "published_status", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="outdated">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "outdated_status", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option></select><i></i></label></section></fieldset><footer style="position: static; width : auto;"><button type="submit" class="btn btn-primary search">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn bg-color-teal txt-color-white" id="reset-filter">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "reset",
				{
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</button><button class="btn btn-default" id="close-filter">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></div></div><div class="clearfix"></div></div></form></div>');
			d = c["if"].call(a,
				"activeProperty.isAdmin", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(11, b, e),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><div id="content-scrollable" class="scrollable-list" style="position: absolute;top: 85px; width: 100%;bottom: 0; overflow: auto;"><table class="table"><thead><tr><th>');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "content_text", {
				name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "category", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center"');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "created_on", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</th><th></th></tr></thead><tbody>");
			d = c.each.call(a, "content", "as", "pagedList.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b, e),
				inverse: this.program(16, b, e),
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</table></table></div><div id="list-loading" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isLoading::hidden"}, hashTypes: {"class": "STRING"},
				hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div>');
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b, e),
				inverse: this.program(23, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div><div ");
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.manageCategories::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="width: 100%; height : 100%; position : relative;"><div class="text-right" style="height: 40px;"><div class="pull-left" style="width: 450px"><form id="search-form"><input id="search-category" class="form-control" type="text" placeholder="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></form></div>');
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(25, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><div class="scrollable-list" style="position: absolute;top: 40px; width: 100%;bottom: 0; overflow: auto;"><table class="table"><tbody>');
			d = c.each.call(a, "filteredCategoryList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b, e),
				inverse: this.program(30,
					b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tbody></table></div></div></div></div>");
			return ""
		}, useData: !0, useDepths: !0
	});
	Ember.TEMPLATES.liveAnswerSettings = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<div class="done setting-status"><i class="fa fa-check"></i></div>')
		}, 3: function (a, c, d, b) {
			b.buffer.push('<div class="not-done setting-status"></div>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div id="main-view"><div style="margin-bottom : 10px;"><div style="float : left; width : 100%;"><div style="margin-left : 120px;"><h3 style="margin : 0 0 10px 0;">');
			d = c._triageMustache.call(a, "activeAddOn.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</h3><p>");
			b.buffer.push(e(c._triageMustache.call(a, "activeAddOn.shortDescription", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</p><div class="smart-form" ><label class="toggle" style="margin: 0;"><input type="checkbox" name="addon-status" id="addon-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAddOn.settings.enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text",
				{
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" style="left:0;"></i></label></div></div></div><div style="float : left; width : 100px; margin-left: -100%;"><img ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {src: "activeAddOn.addOnLogo"},
					hashTypes: {src: "STRING"},
					hashContexts: {src: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' /></div><div class="clearfix"></div></div><div><h5>Getting Started</h5><p>Prior to allocating agents to your project, we undertake a full audit of your requirements & any required systems or processes to ensure we best represent you and your company.</p><p>We have developed a process to help us collate all the information agents will need to answer the queries of your website\'s visitors correctly and efficiently; please do take some time to go through each of the below sections to arm agents with all the tools & information they need to be effective in chat.</p><p>The more information we have, the better equipped we will be of service.</p><p>A key concept, is to always remember the following statement :</p><p>"An agent is not expected to remember everything about your business, nor are they expected to be able to memorize answers to every possible question. Agents are expected however to know "where" to find the answers."</p><ul id="live-answering-settings"><li class="setting-selection"><a href="javascript:void(0);" class="wrapper open-wizard" data-id=0><i class="fa fa-bank"></i><h5>About your business</h5></a>');
			d = c["if"].call(a, "activeAddOn.settings.isWizardSetup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</li><li class="setting-selection"><a href="javascript:void(0);" class="wrapper open-knowledgebase"><i class="fa fa-book"></i><h5>Knowledge Base</h5></a>');
			d = c["if"].call(a, "activeAddOn.settings.isKBSetup", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.program(3,
					b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</li><li class="setting-selection"><a href="javascript:void(0);" class="wrapper open-shortcuts"><i class="fa fa-cut"></i><h5>Shortcuts</h5></a>');
			d = c["if"].call(a, "activeAddOn.settings.isShortcutsSetup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</li><li class="setting-selection"><a href="javascript:void(0);" class="wrapper" id="set-scheduler"><i class="fa fa-clock-o"></i><h5>Agent Scheduler</h5></a>');
			d = c["if"].call(a, "activeAddOn.settings.isSchedulerSetup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</li><li class="setting-selection"><a href="javascript:void(0);" class="wrapper open-alert"><i class="fa fa-bell"></i><h5>Agent Alert</h5></a>');
			d = c["if"].call(a, "activeAddOn.settings.isAlertSetup", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.program(3,
					b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</li></ul></div></div><div id="subview" style="height : 100%;"></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.liveAnswerSettingsWizard = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<span class="step done"><i class="fa fa-check"></i></span>')
		}, 3: function (a, c, d, b) {
			b.buffer.push('<span class="step pending">1</span>')
		}, 5: function (a, c, d, b) {
			b.buffer.push('<span class="step pending">2</span>')
		}, 7: function (a, c,
		                d, b) {
			b.buffer.push('<span class="step pending">3</span>')
		}, 9: function (a, c, d, b) {
			b.buffer.push('<span class="step pending">4</span>')
		}, 11: function (a, c, d, b) {
			b.buffer.push('<span class="step pending">5</span>')
		}, 13: function (a, c, d, b) {
			b.buffer.push('<span class="step pending">6</span>')
		}, 15: function (a, c, d, b) {
			b.buffer.push('<span class="step pending">7</span>')
		}, 17: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<li class="padding-5 faq-data" style="position: relative;"><section style="margin-right: 15px;"><label class="input" style="display: inline-block; width : 100%;max-width : 100%;"><input type="text" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "qId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="required question" placeholder="Question" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "q"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' maxlength="500"/></label></section><section style="margin-right: 15px;"><label class="textarea" style="max-width : 100%;">');
			b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {
					name: "aId",
					maxlength: "5000",
					value: "a",
					placeholder: "Answer",
					rows: "3",
					"class": "required answer"
				},
				hashTypes: {
					name: "ID",
					maxlength: "STRING",
					value: "ID",
					placeholder: "STRING",
					rows: "STRING",
					"class": "STRING"
				},
				hashContexts: {name: a, maxlength: a, value: a, placeholder: a, rows: a, "class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section>");
			a = c["if"].call(a, "canDelete", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(18,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</li>");
			return ""
		}, 18: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<a class="remove-faq" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);" style="color: red; position: absolute; top: 10px; right: 0px;"><i class="fa fa-times" class="fa-2-x" style="font-size: 20px"></i></a>');
			return ""
		}, 20: function (a, c, d, b) {
			b.buffer.push('<div class="text-right" style="margin-right: 15px;"><a href="javascript:void(0);" class="add-faq-question">+ Add Question</a></div>')
		}, 22: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li class="padding-5 emergency-data" style="position: relative;"><div style="margin-right : 15px; margin-top: -18px;"><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-user"></i><input type="text" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {name: "nId"},
					hashTypes: {name: "STRING"},
					hashContexts: {name: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' class="required contact-name" placeholder="Contact Name"');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' maxlength="100" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {name: "nId"}, hashTypes: {name: "STRING"}, hashContexts: {name: a},
				types: [], contexts: [], data: b
			})));
			b.buffer.push(' /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-black-tie"></i><input type="text" placeholder="Contact Title" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "title"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="contact-title" maxlength="100" /></label></section></div><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-phone"></i><input type="text" placeholder="Contact Number" class="required validPhoneNumber contact-number" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "phone"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "pId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-envelope"></i><input type="text" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {name: "eId"},
					hashTypes: {name: "STRING"},
					hashContexts: {name: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' class="required email contact-email" placeholder="Contact Email"');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "email"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("  ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {name: "eId"}, hashTypes: {name: "STRING"}, hashContexts: {name: a}, types: [],
				contexts: [], data: b
			})));
			b.buffer.push(" /></label></section></div></div>");
			a = c["if"].call(a, "canDelete", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</li>");
			return ""
		}, 23: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<a class="remove-contact" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);" style="color: red; position: absolute; top: 10px; right: 0px;"><i class="fa fa-times" class="fa-2-x" style="font-size: 20px"></i></a>');
			return ""
		}, 25: function (a, c, d, b) {
			b.buffer.push('<div class="text-right" style="margin-right: 15px;"><a href="javascript:void(0);" class="add-contact">+ Add Another Contact</a></div>')
		}, 27: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<li class="padding-5 reputation-data" style="position: relative;"><section style="margin-right: 15px;"><label class="input" style="display: inline-block; width : 100%;max-width : 100%;"><input type="text" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "qId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="required question" placeholder="Question" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "q"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' maxlength="500"/></label></section><section style="margin-right: 15px;"><label class="textarea" style="max-width : 100%;">');
			b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {
					name: "aId",
					maxlength: "5000",
					value: "a",
					placeholder: "Answer",
					rows: "3",
					"class": "required answer"
				},
				hashTypes: {
					name: "ID",
					maxlength: "STRING",
					value: "ID",
					placeholder: "STRING",
					rows: "STRING",
					"class": "STRING"
				},
				hashContexts: {name: a, maxlength: a, value: a, placeholder: a, rows: a, "class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section>");
			a = c["if"].call(a, "canDelete", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(28,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</li>");
			return ""
		}, 28: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<a class="remove-reputation" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);" style="color: red; position: absolute; top: 10px; right: 0px;"><i class="fa fa-times" class="fa-2-x" style="font-size: 20px"></i></a>');
			return ""
		}, 30: function (a, c, d, b) {
			b.buffer.push('<div class="text-right" style="margin-right: 15px;"><a href="javascript:void(0);" class="add-reputation-question">+ Add Question</a></div>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="form-bootstrapWizard"><ul class="bootstrapWizard form-wizard"><li ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": ":active activeAddOn.settings.hiredContent.business:complete"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' data-target="#step1" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab1" data-toggle="tab">');
			d = c["if"].call(a, "activeAddOn.settings.hiredContent.business", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "activeAddOn.settings.hiredContent.offering:complete"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' data-target="#step2" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab2" data-toggle="tab">');
			d = c["if"].call(a, "activeAddOn.settings.hiredContent.offering", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			b.buffer.push("</a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAddOn.settings.hiredContent.culture:complete"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-target="#step3" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab3" data-toggle="tab">');
			d = c["if"].call(a, "activeAddOn.settings.hiredContent.culture", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(1, b), inverse: this.program(7, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAddOn.settings.hiredContent.faqs.length:complete"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-target="#step4" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab4" data-toggle="tab">');
			d = c["if"].call(a,
				"activeAddOn.settings.hiredContent.faqs.length", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.program(9, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAddOn.settings.hiredContent.emergency.length:complete"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-target="#step5" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab5" data-toggle="tab">');
			d = c["if"].call(a, "activeAddOn.settings.hiredContent.emergency.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(11, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAddOn.settings.hiredContent.objectives.length:complete"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-target="#step6" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab6" data-toggle="tab">');
			d = c["if"].call(a, "activeAddOn.settings.hiredContent.objectives.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAddOn.settings.hiredContent.reputation:complete"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' ndata-target="#step7" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab7" data-toggle="tab">');
			d = c["if"].call(a, "activeAddOn.settings.hiredContent.reputation.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(15, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a></li></ul><div class="clearfix"></div></div><br /><div class="tab-content" style="margin : 0px auto; position: absolute; top: 50px;bottom: 0; height: auto; overflow : hidden; overflow-y: auto; left: 10px; right: 10px; bottom : 55px; max-width : 800px; padding : 0 15px;"><div class="tab-pane active" id="tab1"><h5 class="text-center"><b>Tell us about you and your business</b></h5><p>The more information we have, the better equipped we will be to deliver fantastic customer service on your behalf.</p><form id="liveAnswer-business" class="smart-form"><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-briefcase"></i><input type="text" class="required" id="business-name" name="business-name" placeholder="Business Name" maxlength="100"');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.business.name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-globe"></i><input type="text" class="required url_prefix" id="business-website" name="business-website" placeholder="Business Website" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "activeAddOn.settings.business.url"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('/></label></section></div><section><label class="textarea" style="max-width : 100%;"><i class="icon-append fa fa-map-marker"></i>');
			b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
				name: "textarea",
				hash: {
					value: "activeAddOn.settings.business.address",
					maxlength: "255",
					rows: "3",
					placeholder: "Business Address",
					id: "business-address",
					name: "address"
				},
				hashTypes: {
					value: "ID", maxlength: "STRING", rows: "STRING",
					placeholder: "STRING", id: "STRING", name: "STRING"
				},
				hashContexts: {value: a, maxlength: a, rows: a, placeholder: a, id: a, name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></section><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-phone"></i><input type="text" name="number" class="validPhoneNumber" id="business-number" placeholder="Contact Number"  ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "activeAddOn.settings.business.phone"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('/></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-envelope"></i><input type="email" class="required email" name="business-email" id="business-email" placeholder="Contact Email"  ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.business.email"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></section></div><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-facebook"></i><input type="text" id="business-facebook" placeholder="Facebook" class="facebookFormat" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.business.fb"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-twitter"></i><input type="text" id="business-twitter" placeholder="Twitter" class="twitterFormat" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.business.twitter"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section></div><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-user"></i><input type="text" class="required" id="business-contact-name" name="business-contact-name" placeholder="Contact Person" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.business.contactPerson.name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-envelope"></i><input type="email" class="required email" id="business-contact-email" name="business-contact-email" placeholder="Contact Person\'s Email" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "activeAddOn.settings.business.contactPerson.email"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('/></label></section></div><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-phone"></i><input type="text" class="required validPhoneNumber" id="business-contact-number" name="business-contact-number" placeholder="Contact Person\'s Number" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "activeAddOn.settings.business.contactPerson.phone"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('/></label></section></div></form></div><div class="tab-pane" id="tab2"><h5 class="text-center"><b>Your Product &/or Service offering</b></h5><p>Please describe your products and / service offerings.</p><form id="liveAnswer-offering" class="smart-form"><label class="textarea" style="max-width : 100%;">');
			b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
				name: "textarea",
				hash: {
					value: "activeAddOn.settings.offering",
					"class": "required", id: "offering", maxlength: "5000", rows: "10"
				},
				hashTypes: {value: "ID", "class": "STRING", id: "STRING", maxlength: "STRING", rows: "STRING"},
				hashContexts: {value: a, "class": a, id: a, maxlength: a, rows: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></form></div><div class="tab-pane" id="tab3"><h5 class="text-center"><b>Your Culture</b></h5><p>Please describe your company\u2019s culture. What about your company makes you stand out  from your competition? Why do your customers choose you?</p><form id="liveAnswer-culture" class="smart-form"><label class="textarea" style="max-width : 100%;">');
			b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
				name: "textarea",
				hash: {
					value: "activeAddOn.settings.culture",
					"class": "required",
					id: "culture",
					maxlength: "5000",
					rows: "10"
				},
				hashTypes: {value: "ID", "class": "STRING", id: "STRING", maxlength: "STRING", rows: "STRING"},
				hashContexts: {value: a, "class": a, id: a, maxlength: a, rows: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></form></div><div class="tab-pane" id="tab4"><h5 class="text-center"><b>Frequently Asked Questions</b></h5><p>Please list the Frequently Asked Questions we are likely to encounter, and please provide your preferred response.</p><form id="liveAnswer-faq" class="smart-form"><ol style="padding-left : 30px;">');
			d = c.each.call(a, "activeAddOn.settings.faqs", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ol>");
			d = c["if"].call(a, "activeAddOn.settings.canAddFAQ", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</form></div><div class="tab-pane" id="tab5"><h5 class="text-center"><b>Emergency Contacts</b></h5><p>In business, sometimes things go wrong. It\u2019s inevitable, and when it does.. we need to know who to contact?</p><form id="liveAnswer-emergency" class="smart-form"><ol style="padding-left : 30px;">');
			d = c.each.call(a, "activeAddOn.settings.emergency", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ol>");
			d = c["if"].call(a, "activeAddOn.settings.canAddEContact", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(25, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</form></div><div class="tab-pane" id="tab6"><h5 class="text-center"><b>Primary Objectives</b></h5><p>What are you aiming to accomplish by having Live Chat on your website?</p><form id="liveAnswer-objective" class="smart-form"><section><label class="label">Primary</label><label class="select"><select id="0-objective" class="objective-select"><option value="capture_leads">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "capture_leads", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="answer_faqs">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "answer_faqs", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="product_service_info">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "product_service_info", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="give_pricing_info">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "give_pricing_info", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="give_shipping_info">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "give_shipping_info", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="sales">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "sales", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="technical_support">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"technical_support", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</option><option value="other">Other</option></select><i></i></label><br /><label id="0-other-container" class="input hidden"><input type="text" class="required" id="0-other" name="1-other" placeholder="Specify objective" /></label></section><section><label class="label">Secondary</label><label class="select"><select id="1-objective" class="objective-select"><option value="capture_leads">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "capture_leads", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="answer_faqs">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "answer_faqs", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="product_service_info">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "product_service_info", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="give_pricing_info">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "give_pricing_info", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="give_shipping_info">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "give_shipping_info", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="sales">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "sales", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="technical_support">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"technical_support", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</option><option value="other">Other</option></select><i></i></label><br /><label id="1-other-container" class="input hidden"><input type="text" class="required" id="1-other" name="1-other" placeholder="Specify objective" /></label></section><section><label class="label">Tertiary</label><label class="select"><select id="2-objective" class="objective-select"><option value="capture_leads">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "capture_leads", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="answer_faqs">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "answer_faqs", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="product_service_info">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "product_service_info", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="give_pricing_info">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "give_pricing_info", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="give_shipping_info">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "give_shipping_info", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="sales">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "sales", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="technical_support">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"technical_support", {
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</option><option value="other">Other</option></select><i></i></label><br /><label id="2-other-container" class="input hidden"><input type="text" class="required" id="2-other" name="2-other" placeholder="Specify objective" /></label></section></form></div><div class="tab-pane" id="tab7"><h5 class="text-center"><b>Reputation Management</b></h5><p>What are examples of more common complaints / concerns of your customers? How would you like them addressed? Please include relevant contact details if different to company contact details.</p><form id="liveAnswer-reputation" class="smart-form"><ol style="padding-left : 30px;">');
			d = c.each.call(a, "activeAddOn.settings.reputation", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ol>");
			d = c["if"].call(a, "activeAddOn.settings.canAddReputation", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</form></div></div><footer><button id="done" type="button" class="btn btn-primary hidden next-step pull-right">Done</button><button id="next" type="button" class="btn btn-primary next-step pull-right">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "next_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="previous" type="button" class="btn btn-default pull-right" style="margin-right : 5px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "previous_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="skip" type="button" class="btn btn-warning pull-right hidden" style="margin-right : 5px;">Skip this step</button><div class="clearfix"></div></footer>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.liveAnswerScheduler = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li class="city-select select2-result select2-result-selectable" role="presentation" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-id": "index"},
				hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' ><div class="select2-result-label" role="option"><span>');
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span></div></li>");
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push("&nbsp;(24/7)")
		}, 5: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div style="border-bottom: 1px solid #ddd; padding: 10px 0;"><div class="col-xs-12 col-sm-3 col-md-3 col-lg-3"><label class="checkbox">');
			d = c["if"].call(a, "schedule.isOn", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("<i></i>");
			d = c._triageMustache.call(a, "schedule.label", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</label></div><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": ":col-xs-9 :col-sm-7 :col-md-7 :col-lg-7 schedule.isOn::hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			d = c.each.call(a, "time", "in", "schedule.time", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":col-xs-3 :col-sm-2 :col-md-2 :col-lg-2 schedule.isOn::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><button ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "schedule.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="add-time btn btn-default" style="margin : 0 5px;"><i class="fa fa-plus"></i></button></div><div class="clearfix"></div></div>');
			return ""
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.input ||
				a && a.input || d).call(a, {
				name: "input",
				hash: {checked: "checked", name: "schedule.id", id: "schedule.id", "class": "day-on", type: "checkbox"},
				hashTypes: {checked: "STRING", name: "ID", id: "ID", "class": "STRING", type: "STRING"},
				hashContexts: {checked: a, name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 8: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {name: "schedule.id", id: "schedule.id", "class": "day-on", type: "checkbox"},
				hashTypes: {
					name: "ID",
					id: "ID", "class": "STRING", type: "STRING"
				},
				hashContexts: {name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 10: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "time.id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="schedule-container" style="margin-bottom : 10px;"><div class="form-group hidden pull-left" style="width : 90%"><input ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {id: "time.rangeId"},
					hashTypes: {id: "STRING"},
					hashContexts: {id: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' type="text" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "time.rangeId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' value=""></div>');
			a = c["if"].call(a, "time.canDelete", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push('<div class="clearfix"></div><p class="error hidden" style="display: block; margin-top: 6px; padding: 0 1px; font-style: normal; font-size: 11px; line-height: 15px;color: #D56161;"></p></div>');
			return ""
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<a href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "time.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("  ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-parent": "schedule.id"},
				hashTypes: {"data-parent": "STRING"},
				hashContexts: {"data-parent": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="    color: red;    margin-top: 7px;    vertical-align: middle;    display: block;    margin-left: 5px;" class="pull-left remove-schedule"><i class="fa fa-times" style="    font-size: 16px;"></i></a>');
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e =
				c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<form id="liveAnswer-scheduler-form" name="liveAnswer-scheduler-form" class="admin-form smart-form"><div id="form-scrollable-container"><fieldset style="max-width : 1000px;"><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "operating_city", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section><section><label class="select custom-select" style="max-width: 500px"><div id="schedule-city-list" class="select2-drop select2-display-none"><ul class="select2-results" role="listbox">');
			d = c.each.call(a, "view.cityList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><label class="input">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					autocomplete: "off",
					valueBinding: "activeAddOn.settings.city",
					placeholderKey: "enter_text",
					name: "schedule-city",
					id: "schedule-city",
					"class": "required",
					type: "text"
				},
				hashTypes: {
					autocomplete: "STRING", valueBinding: "STRING",
					placeholderKey: "STRING", name: "STRING", id: "STRING", "class": "STRING", type: "STRING"
				},
				hashContexts: {
					autocomplete: a,
					valueBinding: a,
					placeholderKey: a,
					name: a,
					id: a,
					"class": a,
					type: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label><i></i></label></section><section><label class="label">Hours purchased : ');
			d = c._triageMustache.call(a, "activeAddOn.settings.entitlements.hours", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a,
				"activeAddOn.settings.fulltime", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(3, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</label></section><section><label class="label">Time available to be scheduled : ');
			d = c._triageMustache.call(a, "activeAddOn.settings.availableEntitlement.hours", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("hr ");
			d =
				c._triageMustache.call(a, "activeAddOn.settings.availableEntitlement.minutes", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("m</label></section>");
			d = c.each.call(a, "schedule", "in", "view.schedule", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.mailSettings = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-envelope-o"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "mail_notification", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="mail-settings-form" name="mail-settings-form" class="smart-form admin-form"><div id="form-scrollable-container"><fieldset><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_all_chat_transcript_to", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "sites"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><i></i><select id="all-email-select"><option value="none">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_none", {
				name: "I18n", hash: {context: "sites"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</option><option value="all">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_all", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="admin">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_admin", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</option><option value="department">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_department_chat", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option></select></label><div class="clearfix"></div></section><section id="all-chats-additional-email"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "other_agent_or_email",
				{
					name: "I18n",
					hash: {context: "sites"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</label><label class="input"><input type="text" class="email-tags" data-role="tagsinput" maxlength="255"/></label><label class="error-msg"></label><div class="clearfix"></div></section><br /><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_info_new_tickets_to", {
				name: "I18n",
				hash: {
					variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}',
					context: "sites"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><i></i><select id="new-email-select"><option value="all">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_all", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="none">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "email_none", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="admin">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_admin", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option></select></label><div class="clearfix"></div></section><section id="new-ticket-additional-email"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "select_agent", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="email-tags" data-role="tagsinput" maxlength="255"/></label><label class="error-msg"></label><div class="clearfix"></div></section><br /><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_offline_form_messages_to",
				{
					name: "I18n",
					hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "sites"},
					hashTypes: {variables: "STRING", context: "STRING"},
					hashContexts: {variables: a, context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</label><label class="select"><i></i><select id="offline-email-select"><option value="all">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_all", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="none">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_none", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="admin">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_admin", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="department">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_department_offline", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option></select></label><div class="clearfix"></div></section><section id="offline-message-additional-email"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "other_agent_or_email", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="email-tags" data-role="tagsinput" maxlength="255"/></label><label class="error-msg"></label><div class="clearfix"></div></section><br /><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_info_unanswered_chats_to", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "sites"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><i></i><select id="missed-email-select"><option value="admin">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_admin", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="all">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_all", {
				name: "I18n", hash: {context: "sites"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</option><option value="none">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_none", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="department">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_department_chat", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</option></select></label><div class="clearfix"></div></section><section id="missed-additional-email"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "other_agent_or_email", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="email-tags" data-role="tagsinput" maxlength="255"/></label><label class="error-msg"></label><div class="clearfix"></div></section></fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.adminMain = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('&nbsp;<i class="fa fa-angle-right" style="display:inline-block;"></i>&nbsp;');
			a = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache", hash: {},
				hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.PropertySelectView || a && a.PropertySelectView || d).call(a, {
				name: "PropertySelectView",
				hash: {controllerBinding: "view.controller"},
				hashTypes: {controllerBinding: "STRING"},
				hashContexts: {controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 5: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div id="property-container" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading:hidden :list-container"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="smart-form" style="max-width: 450px;margin: 0px auto; height : 100%;"><section style="min-height: 49px;"><p style="text-transform: uppercase; font-size : 12px">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "property", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</p><div style="display:table; width: 100%; height: 32px;"><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "noProperties:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="display:table-cell; width: 100%; max-width: 300px;vertical-align: middle;">');
			d = c["if"].call(a, "hasMoreProperties", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(6, b), inverse: this.program(13, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a, "noProperties", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<button id="add-property" class="btn btn-primary" style="display:table-cell; margin-left : -2px; height: 32px;">+ ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "add", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></section><section ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "noProperties:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute; top: 64px;bottom: 15px;width: 100%;overflow: auto;"><ul class="list"><li ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' id="settings"><a href="javascript:void(0);"><i class="fa fa-cog"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "property_settings", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin",
				{
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(17, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="members"><a href="javascript:void(0);"><i class="fa fa-group"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "property_members", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></a></li><li class="open-view" id="shortcuts"><a href="javascript:void(0);"><i class="fa fa-cut"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="triggers"><a href="javascript:void(0);"><i class="fa fa-flash"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "triggers", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></a></li><li class="open-view" id="ban-list"><a href="javascript:void(0);"><i class="fa fa-ban"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="department"><a href="javascript:void(0);"><i class="fa fa-sitemap"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "departments", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' id="mail-settings"><a href="javascript:void(0);"><i class="fa fa-envelope-o"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "mail_notification", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(17,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isSite::hidden :open-view"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="addon-store"><a href="javascript:void(0);"><i class="fa fa-puzzle-piece"></i><span class="label" style="position: relative;">');
			b.buffer.push(e((c.I18n || a && a.I18n ||
				f).call(a, "add_on_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "view.isAddOnSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isSite::hidden activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="billing"><a href="javascript:void(0);"><i class="fa fa-dollar"></i><span class="label" style="position: relative;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "billing", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(17, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "view.isBillingSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="tabs"><a href="javascript:void(0);"><i class="fa fa-folder"></i><span class="label" style="position: relative;">Tabs');
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "view.isTabsSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="alerts"><a href="javascript:void(0);"><i class="fa fa-bell"></i><span class="label" style="position: relative;">Agent Alerts');
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(17, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "view.isAlertsSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></a></li><li class="open-view" id="knowledgebase"><a href="javascript:void(0);"><i class="fa fa-book"></i><span class="label" style="position: relative;">Knowledge Base');
			d = c.unless.call(a,
				"view.isKnowledgebaseSeen", {
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(19, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li></ul></section></div>");
			d = c["if"].call(a, "activeProperty.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="asset-container" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":list-container isLoading:hidden noProperties:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><div class="list-container-divider"><i class="fa fa-chevron-right"></i></div><div class="smart-form" style="max-width: 450px;margin: 0px auto;"><section style="min-height: 49px;"><p style="text-transform: uppercase; font-size : 12px">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "asset", {
				name: "I18n", hash: {context: "admin"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</p>");
			d = c["if"].call(a, "activeProperty.isSite", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</section><section><ul class="list"><li ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isSite::hidden activeProperty.isAdmin::hide"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);"><i class="fa fa-code"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_code", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a><label class="textarea">');
			b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
				name: "textarea",
				hash: {
					id: "widget-code-textarea", readonly: "true",
					valueBinding: "widgetsController.activeWidget.widgetCode", rows: "7"
				},
				hashTypes: {id: "STRING", readonly: "STRING", valueBinding: "STRING", rows: "STRING"},
				hashContexts: {id: a, readonly: a, valueBinding: a, rows: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></li>");
			d = c["if"].call(a, "activeProperty.isSite", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("<li ");
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "activeProperty.isSite:hidden activeProperty.isAdmin:open-view:disabled"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' id="page-content"><a href="javascript:void(0);"><i class="fa fa-align-justify"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "page_content", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="widget-settings"><a href="javascript:void(0);"><i class="fa fa-cog"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_settings", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' id="widget-appearance"><a href="javascript:void(0);"><i class="fa fa-picture-o"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_appearance", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(17,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="widget-content"><a href="javascript:void(0);"><i class="fa fa-font"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_content", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled  activeProperty.isSite::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="widget-domains"><a href="javascript:void(0);"><i class="fa fa-link"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "domain_restriction", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(17, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled  activeProperty.isSite::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="widget-scheduler"><a href="javascript:void(0);"><i class="fa fa-clock-o"></i><span class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "scheduler",
				{
					name: "I18n",
					hash: {context: "widgets"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			d = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a></li></ul></section></div></div>");
			return ""
		}, 6: function (a, c, d, b) {
			b.buffer.push('<label class="select"><select id="property-select">');
			d = c["if"].call(a,
				"siteList.length", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(7, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "pageList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</select><i></i></label>");
			return ""
		}, 7: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a, "siteList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {value: "id"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' data-type="site" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {selected: "isSelected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 10: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a, "pageList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-type="page" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {selected: "isSelected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 13: function (a, c, d, b) {
			b.buffer.push('<label class="label" style="font-size: 16px; margin: 0;">');
			a = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label>");
			return ""
		}, 15: function (a,
		                 c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div style="display:table-cell; width: 100%; max-width: 300px;vertical-align: middle;"><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_properties", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></div>");
			return ""
		}, 17: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("&nbsp;(");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_access", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(")");
			return ""
		}, 19: function (a, c, d, b) {
			b.buffer.push('<div class="new-label"> </div>')
		}, 21: function (a, c, d, b) {
			a = c.unless.call(a, "activeProperty.isAdmin", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		},
		22: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="remove-access-button-container"><a id="remove-own-access" href="javascript:void(0)" class="btn btn-default btn-sm">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "remove_own_access", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></div>");
			return ""
		}, 24: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div style="display:table; width: 100%; height: 32px;"><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="display:table-cell; width: 100%; max-width: 300px;vertical-align: middle;">');
			d = c["if"].call(a, "widgetsController.hasMoreWidgets", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(25, b),
				inverse: this.program(28,
					b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div><button ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-primary activeProperty.isAdmin::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="add-widget" style="display:table-cell; margin-left : -2px;  height: 32px;">+ ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "add", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button></div>");
			return ""
		}, 25: function (a, c, d, b) {
			b.buffer.push('<label class="select"><select id="widget-select">');
			a = c.each.call(a, "activeProperty.widgetList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select><i></i></label>");
			return ""
		}, 26: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 28: function (a, c, d, b) {
			b.buffer.push('<label class="label" style="font-size: 16px; margin: 0;">');
			a = c._triageMustache.call(a, "widgetsController.activeWidget.name",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</label>");
			return ""
		}, 30: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin::hide"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="popout-widget-code-tooltip"><i class="fa fa-link"></i><span class="label">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "popout_widget_code", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span>&nbsp;&nbsp;<a class="label" href="https://www.tawk.to/knowledgebase/chat-widget/direct-chat-link" target="blank" style="text-decoration: underline;color: #71a06a; font-size : 11px;">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "learn_more", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</a></div><label class="input">');
			b.buffer.push(d((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					id: "popout-widget-code-textarea",
					readonly: "true",
					valueBinding: "widgetsController.popoutWidgetCode",
					rows: "7",
					type: "text"
				},
				hashTypes: {id: "STRING", readonly: "STRING", valueBinding: "STRING", rows: "STRING", type: "STRING"},
				hashContexts: {id: a, readonly: a, valueBinding: a, rows: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></li>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e;
			e = c.helperMissing;
			d = this.escapeExpression;
			b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><h1 class="page-title txt-color-blueDark"><i class="fa fa-gear"></i> ');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			e = c["if"].call(a,
				"activeProperty.name", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != e && b.buffer.push(e);
			b.buffer.push('</h1></div></div><div class="innerContent"><div ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="main-container-loading"><h5><i class="fa fa-refresh fa-spin"></i></h5></div>');
			e = c["if"].call(a, "requestProperty", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push('<div class="clearfix"></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.membersSettings = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			b.buffer.push(e((c.I18n || a && a.I18n ||
				d).call(a, "invite", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			a = c["if"].call(a, "activeAgent.isInvitation", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.program(6, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 4: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeAgent.email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 6: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeAgent.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<tr ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "isCurrentAgent::open-view"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td style="vertical-align: middle"><span ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "country"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span><span class="name">');
			d = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></td><td class="text-center">');
			d = c["if"].call(a, "isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "isEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="delete-cell">');
			d = c["if"].call(a, "canBeDeleted", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 9: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-check txt-color-tawk-pink"></i>')
		},
		11: function (a, c, d, b) {
			b.buffer.push('<label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label>')
		}, 13: function (a, c, d, b) {
			a = c.unless.call(a, "isLoading", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 14: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td colspan="3"><h1>');
			b.buffer.push(e((c.I18n || a &&
				a.I18n || d).call(a, "no_current_members", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h1></td></tr>");
			return ""
		}, 16: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<tr class="open-invitation" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td style="vertical-align: middle">');
			d = c["if"].call(a, "tawkId", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.program(19, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="delete-cell"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></td></tr>');
			return ""
		}, 17: function (a, c, d, b) {
			b.buffer.push("http://tawk.to/");
			a = c._triageMustache.call(a, "tawkId", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 19: function (a, c, d, b) {
			a = c._triageMustache.call(a, "email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 21: function (a, c, d, b) {
			a = c.unless.call(a, "isLoading", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 22: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td colspan="3" class="text-center"><h1>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_pending_invitations", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h1></td></tr>");
			return ""
		}, 24: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 26: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<tr class="new-invitation-field"><td style="border: 0; vertical-align: top"><label class="input"><input type="text" class="required email invited-email" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {name: "id"},
				hashTypes: {name: "STRING"}, hashContexts: {name: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' placeholder="Enter Email" /></label></td><td style="border: 0; vertical-align: top"><label class="select"> ');
			b.buffer.push(d(c.view.call(a, "Ember.Select", {
				name: "view",
				hash: {
					"class": "invited-role",
					value: "role",
					optionLabelPath: "content.value",
					optionValuePath: "content.id",
					content: "view.roles"
				},
				hashTypes: {
					"class": "STRING",
					value: "ID",
					optionLabelPath: "STRING",
					optionValuePath: "STRING",
					content: "ID"
				},
				hashContexts: {
					"class": a,
					value: a, optionLabelPath: a, optionValuePath: a, content: a
				},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i></i></label></td><td style="border: 0; width : 20px; vertical-align: top"><a ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":delete-field view.canDelete::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);"><i class="fa fa-times" style="font-size : 20px;"></i></a></td></tr>');
			return ""
		},
		28: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="form-table-row"><label class="label inline-label" for="agent-status">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agent_status", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><div class="form-table-cell"><label class="radio"><input type="radio" id="agent-enabled" name="agent-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAgent.isEnabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "activeAgent.isCurrentAgent"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="agent-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAgent.isDisabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {disabled: "activeAgent.isCurrentAgent"},
				hashTypes: {disabled: "STRING"}, hashContexts: {disabled: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></div></div></div>");
			return ""
		}, 30: function (a, c, d, b) {
			a = c.unless.call(a, "activeAgent.isExisting", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(31, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 31: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<section><a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "activeAgent.id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript: void(0);" class="resend-invitation">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "resend_invitation", {
				name: "I18n", hash: {context: "sites"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></section>");
			return ""
		}, 33: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<footer><button id="submit-edit" type="submit" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a,
				"activeProperty.name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-group"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "members_settings", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "view.inviteMember",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeAgent", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div style="width: 100%; height : 100%;" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":smart-form view.inviteMember:hidden activeAgent:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div style="height: 40px;"><div class="pull-left"><label class="input"><input type="text" id="search" placeholder="Search" style="width: 450px"/></label></div><div class="pull-right"><button id="invite-member" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				e).call(a, "invite_agent", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div><div class="clearfix"></div></div><div style="position: absolute;top: 40px; width: 100%;bottom: 0;"><ul class="nav nav-tabs"><li class="open-tab-pane active" data-id="current-tab"><a href="javascript:void(0);">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "current_text", {
				name: "I18n", hash: {context: "visitors"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push(" (");
			d = c._triageMustache.call(a, "agentPagedList.totalItems", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(')</a></li><li class="open-tab-pane" data-id="pending-tab"><a href="javascript:void(0);">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "pending", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push(" (");
			d = c._triageMustache.call(a, "invitedPagedList.totalItems", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(')</a></li></ul><div class="tab-content"><div id="current-tab" class="tab-pane active"><div class="scrollable-list"><table class="table"><thead><tr><th>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_admin", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_enabled", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
			d = c.each.call(a, "agentPagedList.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div></div></div><div id="pending-tab" class="tab-pane"><div class="scrollable-list"><table class="table"><thead><tr><th>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_admin", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
			d = c.each.call(a, "invitedPagedList.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.program(21, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div></div></div><div id="list-loading" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><div id="bulk-action-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.bulkMarkedTotal::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
			d = c["if"].call(a, "view.bulkMarkedTotal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></ul></div></div></div></div><form id="add-member-form" name="add-member-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":smart-form view.inviteMember::hidden :admin-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="form-scrollable-container"><h5>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent_description", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</h5><table class="table"><thead><tr><th style="border: 0">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th style="border: 0">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "role", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</th><th style="border: 0"></th></tr></thead><tbody>');
			d = c.each.call(a, "view.newInvitations", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table><div style="margin: 10px;"><button id="add-field" class="btn btn-default "><i class="fa fa-plus"></i> ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_another", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div><footer><button type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_invitation", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></form><form id="edit-member-form" name="edit-member-form" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":smart-form activeAgent::hidden :admin-form"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><fieldset><section><div class="form-table">');
			d = c.unless.call(a, "activeAgent.isInvitation", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(28, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="form-table-row"><label class="label inline-label" for="agent-role">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "role", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="agent-role" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAgent.isAdmin"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "activeAgent.isCurrentAgent"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' value="admin" /><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "admin", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="agent-role" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAgent.isAgent"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "activeAgent.isCurrentAgent"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' value="agent" /><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</label></div></div></div></div></section>");
			d = c["if"].call(a, "activeAgent.isInvitation", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</fieldset>");
			d = c.unless.call(a, "activeAgent.isCurrentAgent", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(33, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.newProperty = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><p id="main-title">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n", hash: {context: "admin"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "create_property", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><p>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_property", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><div class="scrollable-list" style="bottom : 80px;"><div style="position: absolute; left : 0; width : 50%; top: 00px; bottom: 80px; height: auto;"><div class="padding-10" style="border-right: 1px solid #ddd;cursor : pointer;" id="site-type"><form id="new-site-form" name="new-site-form" class="smart-form admin-form"><fieldset style="width: 100%; height: 100%;" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isPage:form-disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><section><img src="https://static-a.tawk.to/v2/a34/images/site.png" /></section><section><label class="radio"><input type="radio" name="property-type" value="site" id="site" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "view.isSite"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section><div id="site-form-fields"><section><div style="margin : 0 0 0 23px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_explanation", {
				name: "I18n",
				hash: {
					variables: '{"lineBreak" : "<br />", "lineStart" : "<p>", "lineEnd" : "</p>"}',
					context: "admin"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div></section><section><label class="label" for="site-name">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_name", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required" id="site-name" maxlength="75" name="site-name" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "view.isPage"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section><section><label class="label" for="site-domain">');
			b.buffer.push(e((c.I18n || a &&
				a.I18n || d).call(a, "site_url", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="url_prefix" id="site-domain" name="site-domain" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_url", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "view.isPage"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section></div></fieldset></form></div></div><div style="position: absolute; left : 50%; width : 50%; top: 00px; bottom: 80px; height: auto;"><div class="padding-10" style="cursor : pointer;" id="page-type"><form id="new-page-form" name="new-page-form" class="smart-form admin-form"><fieldset ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "view.isSite:form-disabled"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><section><img src="https://static-a.tawk.to/v2/a34/images/page.png" /></section><section><label class="radio"><input type="radio" id="page" name="property-type" value="page" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "view.isPage"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section><div id="page-form-fields"><section><div style="margin : 0 0 0 23px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_explanation", {
				name: "I18n",
				hash: {
					variables: '{"lineBreak" : "<br />", "lineStart" : "<p>", "lineEnd" : "</p>", "strongStart" : "<strong>", "strongEnd" : "</strong>"}',
					context: "admin"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div></section><section><label class="label" for="page-name">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_name", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required" id="page-name" maxlength="75" name="page-name" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "view.isSite"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></section><section><label class="label" for="page-tawkid">');
			b.buffer.push(e((c.I18n || a && a.I18n ||
				d).call(a, "page_tawk_id", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><span class="small-transparent-spinner hidden"></span><span class="text-prepend">http://tawk.to/</span><input type="text" class="alphaNumericWithDot required isTawkIdAvailable" maxlength="50" id="page-tawkid" name="page-tawkid" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_tawk_id",
				{
					name: "I18n",
					hash: {context: "placeholders"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "view.isSite"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section></div></fieldset></form></div></div></div><footer class="text-right"><button id="submit" class="btn btn-primary">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "create", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.pageContent = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="page-status">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_status", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><div class="form-table-cell"><label class="toggle"><input type="checkbox" name="page-status" id="page-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeProperty.enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text",
				{
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('"></i></label></div></div></div></div></section>');
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a class="page-photo-select" href="javascript:void(0);" id="capture">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "take_photo", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 7: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a class="page-photo-select" href="javascript:void(0);" id="remove">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "remove_photo", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 9: function (a, c, d, b) {
			var e = this.escapeExpression,
				f = c.helperMissing;
			b.buffer.push('<section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell padding-5 image-placeholder-container"><div class="image-placeholder"><i class="fa fa-camera"></i><div class="photo-placeholder header" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {style: "customization.headerBackgroundStyle"},
				hashTypes: {style: "STRING"},
				hashContexts: {style: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></div></div></div><div class="form-table-cell padding-5" style="vertical-align: top;"><div class="btn-group"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "action_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' <span class="caret"></span></button><ul class="dropdown-menu"><li id="upload-container"><a class="page-header-select" href="javascript:void(0);" id="upload-header">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "upload_header", {
				name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></li>");
			d = c["if"].call(a, "customization.header", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><label class="note">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "profile_header_explanation", {
				name: "I18n",
				hash: {variables: '{"lineBreak" : "<br />"}', context: "pages"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {
					variables: a,
					context: a
				},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><input type="file" class="hidden" id="header-image" /></div></div></section>');
			return ""
		}, 10: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a class="page-header-select" href="javascript:void(0);" id="remove-header">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "remove_header", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 12: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<label class="select custom-select"><div class="select2-drop select2-display-none"><ul class="select2-results" role="listbox">');
			d = c.each.call(a, "cityList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div style="display: table;float: none;"><span style="display: table-cell; line-height: 30px; padding-left: 5px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "city", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</span><span style="width: 100%; display: table-cell; padding-right: 25px;"><input type="text" class="selected-value" id="search-city" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "customization.location.locationInfo"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("  /></span><i></i></div></label>");
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li class="city-select select2-result select2-result-selectable" role="presentation" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "index"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' ><div class="select2-result-label" role="option"><span>');
			a = c._triageMustache.call(a,
				"name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</span></div></li>");
			return ""
		}, 15: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="clearfix"></div><section><label class="input"><a href="javascript:void(0);" class="button-icon icon-append delete-link" data-placement="top" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_link", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a>');
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					placeholderKey: "enter_link",
					nameBinding: "this.id",
					idBinding: "this.id",
					value: "value",
					"class": "required url external-link",
					type: "text"
				},
				hashTypes: {
					placeholderKey: "STRING",
					nameBinding: "STRING",
					idBinding: "STRING",
					value: "ID",
					"class": "STRING",
					type: "STRING"
				},
				hashContexts: {
					placeholderKey: a,
					nameBinding: a, idBinding: a, value: a, "class": a, type: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section>");
			return ""
		}, 17: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "activeProperty.shareFbLink"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank" class="facebook-share-button pull-right"><i class="sprite-background"></i><span class="label">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "share", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></a><a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "activeProperty.shareTwLink"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="twitter-share-button pull-right" target="_blank"><i class="sprite-background"></i><span class="label">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "tweet", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></a>");
			return ""
		}, 19: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<img ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {src: "customization.logo"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" />");
			return ""
		}, 21: function (a, c,
		                 d, b) {
			a = c["if"].call(a, "customization.logo", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.program(24, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 22: function (a, c, d, b) {
			b.buffer.push('<div id="title-container"><h1>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</h1><p class="profile-category-text">');
			d = c._triageMustache.call(a, "customization.slogan", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div>");
			return ""
		}, 24: function (a, c, d, b) {
			b.buffer.push('<div id="title-container" class="no-logo"><h1>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</h1><p class="profile-category-text">');
			d = c._triageMustache.call(a, "customization.slogan", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div>");
			return ""
		}, 26: function (a, c, d, b) {
			a = c["if"].call(a, "customization.logo", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.program(29, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 27: function (a, c, d, b) {
			b.buffer.push('<div id="title-container" class="big-title"><h1>');
			a = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</h1></div>");
			return ""
		}, 29: function (a, c, d, b) {
			b.buffer.push('<div id="title-container" class="big-title no-logo"><h1>');
			a = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</h1></div>");
			return ""
		}, 31: function (a, c, d, b) {
			b.buffer.push('<div id="top-description-container"><div id="category">');
			d = c._triageMustache.call(a, "activeProperty.categoryName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div><p>");
			d = c._triageMustache.call(a, "customization.summary", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div>");
			return ""
		}, 33: function (a, c, d, b) {
			b.buffer.push('<div id="top-description-container" class="no-image"><div id="category">');
			d = c._triageMustache.call(a, "activeProperty.categoryName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div><p>");
			d = c._triageMustache.call(a, "customization.summary", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div>");
			return ""
		}, 35: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<img ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {src: "customization.header"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="banner-image" style="border-top: 5px solid #fff" />');
			return ""
		}, 37: function (a, c, d, b) {
			b.buffer.push('<div id="banner-replacement"></div>')
		}, 39: function (a, c, d, b) {
			b.buffer.push('<div id="profile-content-wrapper"><div id="profile-description">');
			a = c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div></div>");
			return ""
		}, 41: function (a, c, d, b) {
			b.buffer.push('<div id="places-icon"></div><a href="javascript:void(0);">');
			d = c._triageMustache.call(a, "customization.location.city", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "customization.location.state",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(42, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</a><div class="clearfix"></div>');
			return ""
		}, 42: function (a, c, d, b) {
			b.buffer.push("&nbsp;, ");
			a = c._triageMustache.call(a, "customization.location.state", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 44: function (a, c, d, b) {
			b.buffer.push('<div class="location-tag-container"><div id="tag-icon"></div>');
			a = c.each.call(a, "customization.tagList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(45, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push('<div class="clearfix"></div></div>');
			return ""
		}, 45: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<a href="javascript:void(0);">');
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a>");
			return ""
		}, 47: function (a, c, d, b) {
			b.buffer.push('<a href="javsascript:void(0);" class="facebook-icon"></a>')
		}, 49: function (a, c, d, b) {
			b.buffer.push('<a href="javsascript:void(0);" class="flickr-icon"></a>')
		}, 51: function (a, c, d, b) {
			b.buffer.push('<a href="javsascript:void(0);" class="instagram-icon"></a>')
		}, 53: function (a, c, d, b) {
			b.buffer.push('<a href="javsascript:void(0);" class="twitter-icon"></a>')
		}, 55: function (a, c, d, b) {
			b.buffer.push('<a href="javsascript:void(0);" class="youtube-icon"></a>')
		},
		57: function (a, c, d, b) {
			b.buffer.push('<a href="javsascript:void(0);" class="vimeo-icon"></a>')
		}, 59: function (a, c, d, b) {
			b.buffer.push('<a href="javsascript:void(0);" class="linkedin-icon"></a>')
		}, 61: function (a, c, d, b) {
			b.buffer.push('<a href="javsascript:void(0);" class="gplus-icon"></a>')
		}, 63: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);">');
			a = c._triageMustache.call(a, "value", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a><br/>");
			return ""
		}, 65: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.ImageCropView || a && a.ImageCropView || d).call(a, {
				name: "ImageCropView",
				hash: {controllerBinding: "view.controller"},
				hashTypes: {controllerBinding: "STRING"},
				hashContexts: {controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			d = c.unless.call(a, "activeProperty.isPersonal", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-align-justify"></i>&nbsp;');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "page_content", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span> <div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="page-content-form" name="page-content-form" class="smart-form admin-form"><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left" style="position: absolute; left: 0; right: 541px; width: auto; height : 100%;"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><fieldset>');
			d = c["if"].call(a, "activeProperty.isPersonal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell padding-5 image-placeholder-container"><div class="image-placeholder"><i class="fa fa-camera"></i><div class="photo-placeholder" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {style: "customization.logoBackgroundStyle"},
				hashTypes: {style: "STRING"},
				hashContexts: {style: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></div></div></div><div class="form-table-cell padding-5" style="vertical-align: top;"><div class="btn-group"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "action_text", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push(' <span class="caret"></span></button><ul class="dropdown-menu"><li id="upload-container"><a class="page-photo-select" href="javascript:void(0);" id="upload">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "upload_photo", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			d = c["if"].call(a, "view.takePhotoEnabled", {
				name: "if", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(5, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "customization.logo", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><label class="note">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "profile_photo_explanation", {
				name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label></div><input type="file" class="hidden" id="photo-image" /></div></div></section>');
			d = c.unless.call(a, "activeProperty.isPersonal", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "slogan", {
				name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label class="input">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					placeholderKey: "enter_slogan",
					value: "customization.slogan",
					name: "slogan",
					id: "slogan",
					type: "text"
				},
				hashTypes: {placeholderKey: "STRING", value: "ID", name: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {placeholderKey: a, value: a, name: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "summary", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea">');
			b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {
					placeholderKey: "enter_summary",
					value: "customization.summary",
					name: "summary",
					rows: "3",
					maxlength: "255",
					id: "summary"
				},
				hashTypes: {
					placeholderKey: "STRING", value: "ID", name: "STRING", rows: "STRING", maxlength: "STRING",
					id: "STRING"
				},
				hashContexts: {placeholderKey: a, value: a, name: a, rows: a, maxlength: a, id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "description", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea">');
			b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {
					placeholderKey: "enter_description",
					value: "customization.description",
					name: "description",
					rows: "5",
					maxlength: "10000",
					id: "description"
				},
				hashTypes: {
					placeholderKey: "STRING",
					value: "ID",
					name: "STRING",
					rows: "STRING",
					maxlength: "STRING",
					id: "STRING"
				},
				hashContexts: {placeholderKey: a, value: a, name: a, rows: a, maxlength: a, id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></section><section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell location-label-container"><label class="label text-center"><i class="fa fa-map-marker"></i></label></div><div class="form-table-cell"><div style="padding : 0 0 5px 0;">');
			b.buffer.push(f((c.countrySelect || a && a.countrySelect || e).call(a, {
				name: "countrySelect",
				hash: {noAll: "true", selectedValue: "customization.location.country"},
				hashTypes: {noAll: "STRING", selectedValue: "ID"},
				hashContexts: {noAll: a, selectedValue: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</div><div>");
			d = c["if"].call(a, "countryCode", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div></div></section><section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell tags-label-container"><label class="label text-center"><i class="fa fa-tag"></i></label></div><div class="form-table-cell"><label class="input">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {placeholderKey: "tags", "class": "tagLength tagTotal", name: "tags", id: "tags", type: "text"},
				hashTypes: {placeholderKey: "STRING", "class": "STRING", name: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {placeholderKey: a, "class": a, name: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></div></div></div></section><section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell links-label-container"><label class="label text-center"><i class="fa fa-link"></i></label></div><div class="form-table-cell"><label class="label pull-left">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "links", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			d = c.each.call(a, "customization.links", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="pull-right"><a href="javascript:void(0);" class="btn btn-default" id="add-link"');
			b.buffer.push(f(c.action.call(a, "addLink", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_link", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></div><div class="clearfix"></div></div></div></div></section></fieldset></div></div><a ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "activeProperty.siteLink"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank" class="btn btn-default pull-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_page", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a>");
			d = c["if"].call(a, "activeProperty.isPersonal", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(17,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="page-preview"><div id="preview-header-container"><div id="preview-logo-container">');
			d = c["if"].call(a, "customization.logo", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "customization.slogan.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b),
				inverse: this.program(26,
					b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div id="inner-container"><div id="left-content-container">');
			d = c["if"].call(a, "customization.logo", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(31, b),
				inverse: this.program(33, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "customization.header", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(35, b),
				inverse: this.program(37, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["with"].call(a, "customization.description", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(39, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="location-tag-container">');
			d = c["if"].call(a, "customization.location.city", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(41, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a, "customization.tagList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(44, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="social-icon-container">');
			d = c.each.call(a, "customization.facebook", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(47, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "customization.flickr", {
				name: "each", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(49, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "customization.instagram", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(51, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "customization.twitter", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(53, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "customization.youtube", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(55, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "customization.vimeo", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(57, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "customization.linkedin", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(59, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "customization.gplus", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(61, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><div id="other-link-container">');
			d = c.each.call(a, "customization.otherLinks", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(63, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div></div><div class="clearfix"></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form>");
			d = c["if"].call(a, "imageData", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(65, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.propertySettings = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(" <option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "value"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {selected: "isSelected"},
				hashTypes: {selected: "STRING"}, hashContexts: {selected: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "text", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-gear"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "property_settings", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="site-settings-form" name="site-settings-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": ":smart-form :admin-form activeProperty.isSite::hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><div id="form-scrollable-container"><fieldset><section><label class="label" for="site-name">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required" id="site-name" maxlength="75" name="site-name" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeProperty.name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section><section><label class="label" for="site-domain">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				e).call(a, "site_url", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="url_prefix" id="site-domain" name="site-domain" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {value: "activeProperty.settings.domain"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' /></label></section><section><label class="label" for="site-id">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_id", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" id="site-id" name="site-id" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeProperty.id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' readonly /></label></section><section><label class="label" for="site-apikey">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "api_key", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" id="site-apikey" name="site-apikey" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeProperty.settings.apiKey"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' readonly /></label></section><section><label class="label" for="site-forwardingEmail">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_forwarding", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" id="site-forwardingEmail" name="site-forwardingEmail"');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeProperty.settings.forwardingEmail"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' readonly /></label></section><section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="site-status">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "secure_api_text", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="radio-toggle" id="secure-api-enabled" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeProperty.settings.secureJSAPI"},
				hashTypes: {checked: "ID"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enabled_text", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i></label></div></div><div class="form-table-row"><label class="label inline-label" for="site-status">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_status",
				{
					name: "I18n",
					hash: {context: "sites"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="radio-toggle" id="site-status" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeProperty.enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "enabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i></label></div></div></div></section></fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="delete" type="button" class="btn btn-danger">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></form><form id="page-settings-form" name="page-settings-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":smart-form :admin-form activeProperty.isSite:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="form-scrollable-container"><fieldset><section><label class="label" for="page-name">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_name", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required" id="page-name" maxlength="75" name="page-name" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeProperty.name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section><section><label class="label" for="page-tawkid">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_tawk_id", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input" style="height : 32px; border : 1px solid #BDBDBD;"><span class="small-transparent-spinner hidden"></span><span class="text-prepend">https://tawk.to/</span><input type="text" class="alphaNumericWithDot required isTawkIdAvailable" maxlength="50" id="page-tawkid" name="page-tawkid" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_tawk_id", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeProperty.tawkId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute; left: 102px; right: 0; width: auto; padding-left: 0; background: inherit; border: 0" /></label></section><section><label class="label" for="site-forwardingEmail">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_forwarding", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" id="site-forwardingEmail" name="site-forwardingEmail"');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeProperty.settings.forwardingEmail"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" disabled /></label></section><section><h4>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_category", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h4><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_category_description", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_category", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.categoriesSelectClass",
					selectedValueBinding: "view.categoriesSelectValue",
					optionsBinding: "view.categoriesSelectOptions"
				},
				hashTypes: {
					selectClassBinding: "STRING", selectedValueBinding: "STRING",
					optionsBinding: "STRING"
				},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "subpage_category", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><select class="subcategories-type-select required">');
			d = c.each.call(a, "view.subcategoriesSelectOptions",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></section><section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="page-status">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_status", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="page-status" id="page-status" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeProperty.enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enabled_text", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i></label></div></div></div></section></fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button><button id="delete" type="button" class="btn btn-danger">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.shortcutsCSVView = Ember.Handlebars.template({
		1: function (a,
		             c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<tr ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td style="vertical-align:middle; width: 200px;"><label class="input">');
			b.buffer.push(d((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {valueBinding: "key", type: "text"},
				hashTypes: {valueBinding: "STRING", type: "STRING"},
				hashContexts: {valueBinding: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></td><td style="vertical-align:middle;"><label class="textarea">  ');
			b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {valueBinding: "message"},
				hashTypes: {valueBinding: "STRING"},
				hashContexts: {valueBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('  </label></td><td class="text-right" style="vertical-align:middle; width : 40px;">');
			a = c["if"].call(a, "view.isLoading", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
					b), inverse: this.program(4, b), types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</td></tr>");
			return ""
		}, 2: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-refresh fa-spin"></i>')
		}, 4: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<button class="btn btn-danger remove-shortcut" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-trash-o"></i></button>');
			return ""
		}, 6: function (a, c, d, b) {
			b.buffer.push("Saving : ");
			d = c._triageMustache.call(a, "view.totalSave", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" / ");
			d = c._triageMustache.call(a, "view.list.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div style="position: absolute;top: 0;bottom: 110px;width: 100%;overflow: auto;"><div><label class="label inline-label" style="display: inline-block; vertical-align: middle;">Import as : </label><div class="inline-group" style="display: inline-block; vertical-align: middle; margin-left : 5px;"><label class="radio"><input type="radio" name="access-type" id="is-public" value="public" checked="checked"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "public", {
				name: "I18n", hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label class="radio"><input type="radio" name="access-type" id="is-personal" value="personal"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "personal", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div></div><table class="table"><thead><tr><th>');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "shortcut_key", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "message", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</th><th></th></tr></thead><tbody>");
			d = c.each.call(a, "view.list", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div style="position: absolute; bottom: 65px; width : 100%;"><h5><span class="pull-left">Total : ');
			d = c._triageMustache.call(a, "view.list.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="pull-right">');
			d = c["if"].call(a,
				"view.totalSave", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(6, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></h5></div><footer><button id="submit-upload" type="submit" class="btn btn-primary">Save</button><button id="cancel-upload" type="submit" class="btn btn-default">Cancel</button></footer>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.propertyShortcutsView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span id="main-title"><i class="fa fa-cut">&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "global_shortcuts", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			a = c["if"].call(a, "activeShortcut", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			return ""
		},
		2: function (a, c, d, b) {
			b.buffer.push('<span id="second-title"><i class="fa fa-angle-right"></i>');
			a = c["if"].call(a, "activeShortcut.shortcutId", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 3: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeShortcut.key", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			a ? b.buffer.push(a) : b.buffer.push("")
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_shortcut", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 7: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<span id="main-title">');
			d = c.unless.call(a, "activeProperty.isPersonal", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(8, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-cut"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n", hash: {context: "shortcuts"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeShortcut", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 8: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			return ""
		}, 10: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			a = c["if"].call(a, "activeShortcut.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 12: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="form-table-row"><label class="label inline-label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "access", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="checkbox"><input type="checkbox" name="access-type[]" checked="true" id="is-public"value="publics"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "public", {
				name: "I18n", hash: {context: "shortcuts"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label></div><div class="form-table-cell"><label class="checkbox"><input type="checkbox" name="access-type[]" checked="true" id="is-personal" value="personal"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "personal", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></div></div></div>");
			return ""
		}, 14: function (a,
		                 c, d, b) {
			b.buffer.push('<button id="upload-csv" class="btn btn-default" rel="popover-hover" data-placement="bottom" data-html="true" data-content="The data format should be : <br/>shortcut1,message1<br/>shortcut2,message2">Import from CSV</button>')
		}, 16: function (a, c, d, b) {
			b.buffer.push('<th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th>')
		}, 18: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<th class="text-center">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "access", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th>');
			return ""
		}, 20: function (a, c, d, b, e) {
			d = this.escapeExpression;
			b.buffer.push('<tr class="open-view" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "item.id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td style="max-width : 300px; white-space:pre-wrap; word-wrap : break-word;">/');
			d = c._triageMustache.call(a, "item.key", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a,
				"item.shortcutTypeText", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</td><td>");
			d = c._triageMustache.call(a, "item.message", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td>");
			d = c.unless.call(a, "isGlobalShortcut", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<td class="text-center delete-cell"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></td></tr>');
			return ""
		}, 21: function (a, c, d, b) {
			b.buffer.push('<td class="text-center">');
			a = c._triageMustache.call(a, "item.dataTypeText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</td>");
			return ""
		}, 23: function (a,
		                 c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td colspan="4" class="text-center"><h1>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_shortcuts", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h1></td></tr>");
			return ""
		}, 25: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 27: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section style="max-width : 500px"><label class="label" for="message">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "multiple_choice", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			d = c.each.call(a, "option", "in", "activeShortcut.options", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(28, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "showAddoptionButton", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></section>');
			return ""
		}, 28: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="input"><a href="javascript:void(0);" class="button-icon icon-append tooltip-hover delete-option" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_option", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a><input type="text" class="shortcut-option required" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_answer", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "option.val"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {readonly: "../activeShortcut.noEdit"},
				hashTypes: {readonly: "STRING"},
				hashContexts: {readonly: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /></label><em ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"for": "option.id"}, hashTypes: {"for": "STRING"},
				hashContexts: {"for": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' class="invalid"></em></section>');
			return ""
		}, 30: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><button type="button" class="btn btn-default" id="add-shortcut-option">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_option", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></section>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
			var f = this.escapeExpression, g = c.helperMissing;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container">');
			d = c["if"].call(a, "isGlobalShortcut", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b, e),
				inverse: this.program(7, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.csvListView:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="width : 100%; height : 100%;"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeShortcut:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div style="height: 40px;"><div class="pull-left" style="width: 450px"><form id="search-form"><div class="input-group"><input id="search-text" class="form-control" type="text" placeholder="Search"/><div class="input-group-btn" style="position: static;"><button id="openFilter" type="button" class="btn btn-default dropdown-toggle" style="margin-left: -1px;"><span class="caret"></span></button><div class="dropdown-menu pull-right smart-form" role="menu" id="shortcuts-filter" style="position:absolute; width : 100%"><fieldset class="padding-10"><section class="form-table">');
			d = c.unless.call(a, "isGlobalShortcut", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="form-table-row"><label class="label inline-label">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "type", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="checkbox"><input type="checkbox" name="shortcut-type[]" checked="true" id="is-message"value="message"><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "message", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="form-table-cell"><label class="checkbox"><input type="checkbox" name="shortcut-type[]" checked="true" id="is-survey" value="survey"><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "survey", {
				name: "I18n", hash: {context: "shortcuts"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label></div></div></div></section></fieldset><footer style="position: static; width : auto;"><button type="submit" class="btn btn-primary search">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "search", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn bg-color-teal txt-color-white" id="reset-filter">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || g).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-default" id="close-filter">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></div></div><div class="clearfix"></div></div></form></div><div class="pull-right"><button id="add-shortcut" class="btn btn-primary" style="margin-right: 5px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "add_shortcut", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			d = c.unless.call(a, "isGlobalShortcut", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<input type="file" class="hidden" id="csv-file" accept=".csv,text/csv" /></div><div class="clearfix"></div></div><div id="scrollable-list" style="position: absolute;top: 40px; width: 100%;bottom: 0; overflow: auto;" class="smart-form"><table class="table"><thead><tr><th>');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "shortcut_key", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "type", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				g).call(a, "message", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</th>");
			d = c["if"].call(a, "isGlobalShortcut", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b, e),
				inverse: this.program(18, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tr></thead><tbody>");
			d = c.each.call(a, "item", "as", "pagedList.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b, e),
				inverse: this.program(23, b, e),
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div id="list-loading" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><div id="bulk-action-container" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "view.bulkMarkedTotal::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
			d = c["if"].call(a, "view.bulkMarkedTotal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(25, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "delete_items", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "clear_selection", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></ul></div></div></div><form id="shortcut-form" name="shortcut-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeShortcut::hidden :smart-form :admin-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="form-scrollable-container"><fieldset><section><label class="label" for="shortcutKey">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "shortcut_key", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required mdb_syntax" id="shortcutKey" name="shortcutKey" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "enter_shortcut", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {value: "activeShortcut.key"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' maxlength="100" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {readonly: "activeShortcut.noEdit"},
				hashTypes: {readonly: "STRING"},
				hashContexts: {readonly: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></section><section id="message-section"><label class="label" for="message">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a,
				"message", {
					name: "I18n",
					hash: {context: "shortcuts"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</label><label class="textarea">');
			b.buffer.push(f((c.textarea || a && a.textarea || g).call(a, {
				name: "textarea",
				hash: {
					name: "message",
					readonly: "activeShortcut.noEdit",
					id: "message",
					rows: "5",
					"class": "required",
					placeholderKey: "enter_message",
					valueBinding: "activeShortcut.message"
				},
				hashTypes: {
					name: "STRING", readonly: "ID", id: "STRING", rows: "STRING", "class": "STRING",
					placeholderKey: "STRING", valueBinding: "STRING"
				},
				hashContexts: {name: a, readonly: a, id: a, rows: a, "class": a, placeholderKey: a, valueBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></section><section class="form-table"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":form-table-row isGlobalShortcut:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="label inline-label">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || g).call(a, "access", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="access-type" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeShortcut.isPublicAccess"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="is-public" value="public" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "activeShortcut.noEdit"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "public", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="access-type" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeShortcut.isPersonalAccess"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="is-personal" value="personal" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "activeShortcut.noEdit"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "personal",
				{
					name: "I18n",
					hash: {context: "shortcuts"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</label></div></div></div><div class="form-table-row"><label class="label inline-label">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "type", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="shortcut-type" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeShortcut.isMessageType"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="is-message" value="m" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "activeShortcut.noEdit"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "message", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="shortcut-type" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeShortcut.isSurveyType"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="is-survey" value="s" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {disabled: "activeShortcut.noEdit"},
					hashTypes: {disabled: "STRING"},
					hashContexts: {disabled: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push("><i></i>");
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "survey", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></div></div></div></section>");
			d = c["if"].call(a, "activeShortcut.showOptions", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(27, b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-danger" id="delete">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				g).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div></div></div>");
			return ""
		}, useData: !0, useDepths: !0
	});
	Ember.TEMPLATES.tabItem = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div class="list-item-container"><div class="list-item">');
			d = c["if"].call(a, "isInternal", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(2, b), inverse: this.program(4, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div class="reorder-icon"><i class="fa fa-reorder"></i></div><div class="action-container">');
			d = c["if"].call(a, "canDelete", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<label class="checkbox"><input type="checkbox" class="tab-status" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {checked: "enabled"},
					hashTypes: {checked: "STRING"},
					hashContexts: {checked: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push("  ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("/><i></i></label>");
			d = c["if"].call(a, "isIntegration", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="clearfix"></div>');
			return ""
		}, 2: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa fontClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i> ");
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 4: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<label class="input title-container"><input type="text" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "title"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' maxlength="20" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "noMenu:item-title:main-title enabled:required"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "titleId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' placeholder="Title" /></label><label class="select select-container"><select class="tab-type" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><option value="url">URL</option><option value="text">Text</option>');
			d = c.unless.call(a, "noMenu", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</select><i></i></label>");
			d = c["if"].call(a, "isMenu", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(7, b), inverse: this.program(10, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 5: function (a, c, d, b) {
			b.buffer.push('<option value="menu">Menu</option>')
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<ul class="sortable-list inner-list" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><li class="dummy-holder" style="margin:0; padding : 0;"></li></ul>');
			a = c["if"].call(a, "canAddItems", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div style="padding: 5px; border-radius: 3px; margin: 10px 0; border: 2px dashed #aaa; text-align: center;"><p style="font-weight: bold; font-size : 14px;"><a href="javascript:void(0);" style="color: #333;  display: block" class="add-menu-item" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><i class="fa fa-plus"></i> Add Menu Item</a></p><div>');
			return ""
		}, 10: function (a, c, d, b) {
			a = c["if"].call(a, "isURL", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<label class="input" style="display : block; width : 100%; margin : 8px 0;"><input type="text" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "enabled:required :secureUrl :content"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "urlId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' placeholder="URL" maxlength="1024"');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "content"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("/></label>");
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<label class="textarea" style="display : block; width : 100%; margin : 8px 0;"><textarea rows="5" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":content enabled:required"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("  ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {name: "textId"},
					hashTypes: {name: "STRING"},
					hashContexts: {name: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' maxlength="5000"></textarea></label><em for="kb-content" class="invalid hidden content-error">This field is required.</em>');
			return ""
		}, 15: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.content.noMenu:remove-menu-item:remove-tab :remove"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-trash-o fa-lg"></i></a>');
			return ""
		}, 17: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<button class="btn btn-xs btn-default configure-integration" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "label"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="padding : 3px 6px;"><i class="fa fa-gear"></i></button>');
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			a = c["with"].call(a, "view.content", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, useData: !0
	});
	Ember.TEMPLATES.tabs = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<section class="text-center" style="padding: 10px 5px; background: #f9f9f9; border-radius: 3px; margin: 10px 0; border: 2px dashed #aaa;"><h5 style="font-weight: bold;"><a href="javascript:void(0);" style="color: #333; display: block" id="add-tab"><i class="fa fa-plus"></i> Add Tab</a></h5></section>')
		},
		3: function (a, c, d, b) {
			a = c["if"].call(a, "enabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 4: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isMenu:dropdown:not-dropdown :preview-item"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><a href="javascript:void(0);" class="tab" style="height: 36px;">');
			d = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isMenu", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(9, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a>");
			d = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</li>");
			return ""
		}, 5: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa fontClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>");
			return ""
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<span class="menu-selection">');
			b.buffer.push(d(c.unbound.call(a, "title", {
				name: "unbound",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 9: function (a, c, d, b) {
			b.buffer.push('&nbsp;<b class="caret"></b>')
		}, 11: function (a, c, d, b) {
			b.buffer.push('<ul class="dropdown-menu">');
			a = c.each.call(a, "items", {
				name: "each", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(12, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, 12: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li class="menu-item" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);" class="inner-tab" style="padding : 10px 20px;">');
			d =
				c["if"].call(a, "isInternal", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(13, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a></li>");
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": ":fa fontClass"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("></i>&nbsp;");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-folder"></i>&nbsp;Tabs</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="tabs-content-form" name="tabs-content-form" class="admin-form"><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left smart-form" style="width : 50%; height : 100%; position: relative;"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><fieldset><section><label class="label">Click and drag a tab to rearrange the order. The tab order determines what agents will first see when a visitor chat is open.</label></section><ul class="sortable-list outer-list"></ul>');
			d = c["if"].call(a, "canAddTabs", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset></div></div><div class="pull-left" style="width : 50%; height : 100%; position : relative;"><div style="border-left: 1px solid #e5e5e5; width: 100%; direction: rtl; left: 10px; right : 0px; top: 0; bottom: 0; overflow-y: hidden!important; overflow-x: auto!important; white-space: nowrap; position: absolute; height: auto;"><div style=\'direction: ltr;\'><h4 class="text-center" style="margin-bottom : 5px;">Preview</h4></div><div style="color: #333; background: #fafafa; height: 38px; direction: ltr; border: 1px solid #ddd;"><div class="pull-right" style="width: 30px; text-align: center;height: 37px;border-left: 1px solid #ddd;position: absolute;right: 0;"><i class="fa fa-times" style="font-size: 14px; margin-top: 11px;"></i></div><ul class="nav nav-tabs" style="float: right; min-width: 270px; background: #fafafa; margin-right : 28px; border : 0; text-align: right;">');
			d = c.each.call(a, "tabList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div class="tab-content" style="white-space: normal; position: absolute; top: 69px; bottom: 0; overflow: hidden; right: 0; border-right: 1px solid #ddd; left: 15px; direction: ltr;"><div class="tab-pane active" style="position: absolute; top: 0; bottom: 90px; right: 0; width : 299px; overflow-x: hidden;">');
			b.buffer.push(f(c._triageMustache.call(a, "view.beautifiedContent", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div style="position: absolute; right: 299px; top: -89px; border-right: 1px solid #ddd; border-bottom: 1px solid #ddd;"><img src="https://static-a.tawk.to/v2/a34/images/tab-left.png" /></div><div style="position: absolute; bottom: 0; right: 0px;"><img src="https://static-a.tawk.to/v2/a34/images/tab-bottom.png" /></div></div></div></div><div class="clearfix"></div></div><footer class="text-right"><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.tabsIntegrationSettings = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><div><h4 class="modal-title" id="myModalLabel"><i class="fa fa-shopping-bag" alt="test"></i><span class="modal-title-tawk">Shopify Sidebar Customization</span></h4></div></div><div class="modal-body" style="overflow:auto;"><form class="smart-form shopify-edit-container"><section id="customer-select" class="config-type"><label class="checkbox" style="display: inline-block;vertical-align: middle;margin-bottom: 0;"><input type="checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "view.customerSettings.enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="customer-select" /><i></i>Show Customer Details</label><a href="javascript:void(0);" data-id="customer-select" class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
			b.buffer.push(d((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || e).call(a, {
				name: "ShopifyEditSettingsView",
				hash: {content: "view.customerSettings"},
				hashTypes: {content: "ID"},
				hashContexts: {content: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section id="order-select" class="config-type"><label class="checkbox" style="display: inline-block;vertical-align: middle;margin-bottom: 0;"><input type="checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {checked: "view.orderSettings.enabled"},
				hashTypes: {checked: "STRING"}, hashContexts: {checked: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' class="order-select" /><i></i>Show Orders Details</label><a href="javascript:void(0);" data-id="order-select" class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
			b.buffer.push(d((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || e).call(a, {
				name: "ShopifyEditSettingsView",
				hash: {content: "view.orderSettings"},
				hashTypes: {content: "ID"},
				hashContexts: {content: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section></form></div><div class="modal-footer"><button type="button" class="btn btn-default" id="close-settings">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-primary" id="save-settings">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.triggerForm = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<section><p>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "type", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("&nbsp;:&nbsp;");
			d = c._triageMustache.call(a, "activeTrigger.typeName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p><p>");
			d = c._triageMustache.call(a, "activeTrigger.description", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></section>");
			return ""
		}, 3: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<section><label class="label" for="trigger-type">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "type", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><i></i><select id="trigger-type"><option value="basic_page">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "basic_page", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="basic_chat_rescue">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "basic_chat_rescue", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			d = c.unless.call(a, "disableBasicSite", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(4,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<option value="advanced">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "advanced", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option></select></label></section>");
			return ""
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<option value="basic_site">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "basic_site", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="label" for="trigger-description">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "trigger_description", {
				name: "I18n", hash: {context: "triggers"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label class="textarea">');
			b.buffer.push(e((c.textarea || a && a.textarea || d).call(a, {
				name: "textarea",
				hash: {
					valueBinding: "activeTrigger.description",
					name: "trigger-description",
					id: "trigger-description",
					rows: "3",
					maxlength: "500",
					"class": "required",
					placeholderKey: "trigger_description"
				},
				hashTypes: {
					valueBinding: "STRING",
					name: "STRING",
					id: "STRING",
					rows: "STRING",
					maxlength: "STRING",
					"class": "STRING",
					placeholderKey: "STRING"
				},
				hashContexts: {
					valueBinding: a,
					name: a, id: a, rows: a, maxlength: a, "class": a, placeholderKey: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></section><section><div class="inline-group" ><label class="checkbox"><input type="checkbox" id="trigger-execute" name="trigger-execute" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeTrigger.execute"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"execute_once", {
					name: "I18n",
					hash: {context: "triggers"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</label></div></section>");
			return ""
		}, 8: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delay", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.delaySelectClass",
					selectedValueBinding: "view.delaySelectValue",
					optionsBinding: "view.delaySelectOptions"
				},
				hashTypes: {selectClassBinding: "STRING", selectedValueBinding: "STRING", optionsBinding: "STRING"},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</section>");
			d = c["if"].call(a, "activeTrigger.isPageTrigger", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<section><label class="label" for="trigger-agent">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent_name", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required" id="trigger-agent" name="trigger-agent" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"  ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeTrigger.senderName"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></section><section><label class="label" for="trigger-message">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "trigger_message", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea">');
			b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {
					valueBinding: "activeTrigger.message",
					name: "trigger-message",
					id: "trigger-message",
					rows: "3",
					"class": "required",
					placeholderKey: "trigger_message"
				},
				hashTypes: {
					valueBinding: "STRING", name: "STRING", id: "STRING", rows: "STRING",
					"class": "STRING", placeholderKey: "STRING"
				},
				hashContexts: {valueBinding: a, name: a, id: a, rows: a, "class": a, placeholderKey: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section>");
			return ""
		}, 9: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="label" for="trigger-url">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_url", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required url" id="trigger-url" name="trigger-url" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_url", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"  ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeTrigger.pageUrl"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("/></label></section>");
			return ""
		}, 11: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="trigger-status">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "status", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="trigger-status" id="trigger-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeTrigger.isEnabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text",
				{
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('"></i></label></div></div></div></section>');
			return ""
		}, 13: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<section><h4 style="margin : 5px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "conditions", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h4><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "conditions_description", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "run_trigger", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.runSelectClass",
					selectedValueBinding: "view.runSelectValue",
					optionsBinding: "view.runSelectOptions"
				},
				hashTypes: {selectClassBinding: "STRING", selectedValueBinding: "STRING", optionsBinding: "STRING"},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "check", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.matchSelectClass",
					selectedValueBinding: "view.matchSelectValue",
					optionsBinding: "view.matchSelectOptions"
				},
				hashTypes: {
					selectClassBinding: "STRING", selectedValueBinding: "STRING",
					optionsBinding: "STRING"
				},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section><ol style="padding-left : 20px;">');
			d = c.each.call(a, "condition", "in", "activeTrigger.conditions", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ol></section><section>");
			d = c["if"].call(a, "activeTrigger.isAdvanced",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(16, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></section><section><h4 style="margin : 5px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "actions", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h4><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				e).call(a, "actions_description", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section> <section><ol style="padding-left : 20px;">');
			d = c.each.call(a, "activeTrigger.actions", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ol></section><section>");
			d = c["if"].call(a, "activeTrigger.isAdvanced",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(20, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></section>');
			return ""
		}, 14: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li style="margin-bottom : 20px; min-height : 50px;">');
			b.buffer.push(e((c.TriggerConditionView || a && a.TriggerConditionView || d).call(a, {
				name: "TriggerConditionView",
				hash: {
					propertyIdBinding: "activeProperty.id",
					conditionBinding: "condition"
				},
				hashTypes: {propertyIdBinding: "STRING", conditionBinding: "STRING"},
				hashContexts: {propertyIdBinding: a, conditionBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</li>");
			return ""
		}, 16: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<button type="button" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default activeTrigger.conditionsLimit:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="add-condition">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add_condition", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, 18: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li style="margin-bottom : 20px;">');
			b.buffer.push(e((c.TriggerActionView || a && a.TriggerActionView || d).call(a, {
				name: "TriggerActionView",
				hash: {actionBinding: "this"},
				hashTypes: {actionBinding: "STRING"},
				hashContexts: {actionBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</li>");
			return ""
		}, 20: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<button type="button" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default activeTrigger.actionsLimit:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="add-action">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add_action", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, 22: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button type="button" class="btn btn-danger" id="delete">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div id="form-scrollable-container"><fieldset>');
			d = c["if"].call(a, "activeTrigger.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<section><label class="label" for="trigger-name">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "trigger_name", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required" id="trigger-name" trigger="trigger-name" maxlength="50" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "trigger_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeTrigger.name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /></label></section>");
			d = c["if"].call(a, "activeTrigger.isAdvanced", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeTrigger.id", {
				name: "if", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(11, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeTrigger.isAdvanced", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button>");
			d = c["if"].call(a, "activeTrigger.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</footer>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.triggersView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			a = c["if"].call(a, "activeTrigger.id", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(2, b), inverse: this.program(4, b), types: ["ID"], contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 2: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			a = c._triageMustache.call(a, "activeTrigger.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_trigger", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<tr class="open-view" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "_id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><td>");
			d = c._triageMustache.call(a,
				"name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</td><td>");
			d = c._triageMustache.call(a, "description", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "typeName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "isEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></div></td></tr>');
			return ""
		}, 7: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-check txt-color-tawk-pink"></i>')
		},
		9: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td colspan="4" class="text-center"><h1>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_triggers", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h1></td></tr>");
			return ""
		}, 11: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
				contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-flash"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "triggers", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a,
				"activeTrigger", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeTrigger:hidden :smart-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="width : 100%; height : 100%;"><div class="text-right" style="height: 40px;"><button id="add-item" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "canAddTrigger::hidden :btn :btn-primary"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_trigger", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button></div><div class="scrollable-list" style="bottom : 60px;"><table class="table"><thead><tr><th>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "description", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "type", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_enabled", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
			d = c.each.call(a, "pagedList.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(9, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div id="list-loading" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "isLoading::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><div id="bulk-action-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.bulkMarkedTotal::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
			d = c["if"].call(a, "view.bulkMarkedTotal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white" id="bulk-conversations-purge">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></ul></div></div><p style="position: absolute; width: 100%;bottom: 0; border-top: 1px solid #ddd; padding : 5px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "triggers_limit", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div>");
			b.buffer.push(f((c.TriggerFromView || a && a.TriggerFromView || e).call(a, {
				name: "TriggerFromView",
				hash: {controllerBinding: "view.controller"},
				hashTypes: {controllerBinding: "STRING"},
				hashContexts: {controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.webrtcSettings = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<form id="addon-settings-form" name="addon-settings-form" class="smart-form admin-form"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><div style="margin-bottom : 10px;"><div style="float : left; width : 100%;"><div style="margin-left : 120px;"><h3 style="margin : 0 0 10px 0;">');
			d = c._triageMustache.call(a, "activeAddOn.name", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</h3><p>");
			d = c._triageMustache.call(a, "activeAddOn.shortDescription", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div></div><div style="float : left; width : 100px; margin-left: -100%;"><img ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {src: "activeAddOn.addOnLogo"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></div><div class="clearfix"></div></div><div class="form-table" style="width: 100%;table-layout: fixed; max-width : 400px;"><div class="form-table-row"><label class="label inline-label text-left" for="addon-status" style="width: 100%; padding-left: 0;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "addon_status", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="inline-group" style="width: auto;"><label class="toggle"><input type="checkbox" name="addon-status" id="addon-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAddOn.settings.enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"disabled_text", {
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('"></i></label></div></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":form-table-row :allowed-actions-container activeAddOn.settings.enabled::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="label inline-label text-left" for="video-call" style="width: 100%;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "video_call", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="inline-group" style="width: auto;"><label class="toggle"><input type="checkbox" name="video-call" id="video-call" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAddOn.settings.video"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i></label></div></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":form-table-row :allowed-actions-container activeAddOn.settings.enabled::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="label inline-label text-left" for="screen-share" style="width: 100%;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "screen_share", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="inline-group" style="width: auto;"><label class="toggle"><input type="checkbox" name="screen-share" id="screen-share" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeAddOn.settings.screen"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i></label></div></div></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.whitelabelCustomization = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td colspan="3" class="text-center"><button id="activate-add-on" type="submit" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "activate_addon",
				{
					name: "I18n",
					hash: {context: "admin"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</button></td></tr>");
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">$ ");
			a = c._triageMustache.call(a, "pricePretify", {
				name: "_triageMustache", hash: {}, hashTypes: {},
				hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td><label class="label text-right" style="margin-top:4px"> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "payment_method", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td><label class="select" style="width: 100%"><select id="payment-method"><option value="pp">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "paypal", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="cc">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "credit_card", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option></select><i></i></label></td></tr>");
			return ""
		}, 7: function (a,
		                c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="select" style="width: 100%"><select id="card-selection"><option value="new-card">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_card", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			a = c.each.call(a, "Tawk.userController.existingCards", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(8,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select><i></i></label>");
			return ""
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "customerId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {selected: "selected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c._triageMustache.call(a, "cardBrand", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" x-");
			d = c._triageMustache.call(a, "cardNumber", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</option>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing,
				f = this.escapeExpression;
			b.buffer.push('<br /><hr /><br /><h6 style="font-weight: normal"><strong>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_on", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" : ");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_main_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</strong> - <span style="font-size: 14px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "whitelabel_deescription_widget", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "admin"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></h6><p class="small">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "whitelabel_save_notification", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</small><div id="whitelabel-settings"><table class="table no-border"><tr><td colspan="3"><h6 style="font-weight: normal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_footer_branding", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h6></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "title", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td colspan="2"><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-label" type="text" class="input-text" placeholder="Enter branding text" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "whitelabelAddOn.settings.widget.label"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('/></label><p class="font-xs pull-left" style="opacity: 0.6;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "format_eg", {
				name: "I18n",
				hash: {
					variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
					context: "wizard"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_url", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td colspan="2"><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-url" type="text" class="input-text url" placeholder="Enter branding link url" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "whitelabelAddOn.settings.widget.url"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "color", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td colspan="2"><label class="input"><input type="text" id="widget-text-color" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "whitelabelAddOn.settings.widget.textColor"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></td></tr><tr><td colspan="3"><h6 style="font-weight: normal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_footer_branding", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h6></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "title", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td colspan="2"><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-label" type="text" class="input-text" placeholder="Enter branding text" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "whitelabelAddOn.settings.email.label"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('/></label><p class="font-xs pull-left" style="opacity: 0.6;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "format_eg", {
				name: "I18n",
				hash: {
					variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
					context: "wizard"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_url", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td colspan="2"><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-url" type="text" class="input-text url" placeholder="Enter branding link url" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "whitelabelAddOn.settings.email.url"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /></label></td></tr>");
			d = c.unless.call(a, "whitelabelAddOn.isSubscribed", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</table></div><div id="payment-container" class="hidden"><form id="whitelabel-payment" name="whitelabel-payment" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.paymentSuccess:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><table class="table no-border"><tr><td><label class="label text-right" style="margin-top:4px">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "select_package", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td><label class="select" style="width: 100%"><select id="plan">');
			d = c.each.call(a, "whitelabelAddOn.plans", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</select><i></i></label></td></tr>");
			d = c["if"].call(a, "canUsePaypal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<tr id="card-details" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "canUsePaypal:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td><label class="label text-right"  style="margin-top:4px">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "payment_details", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></td><td>");
			d = c["if"].call(a, "Tawk.userController.existingCards.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="new-card-details" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "Tawk.userController.existingCards.length:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><br /><section><label class="input"><i class="icon-prepend fa fa-user" style="z-index:1;"></i><input id="cardholder-name" name="cardholder-name" type="text" class="input required" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name_on_card_placeholder", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section><section><label class="input"><i class="icon-prepend fa fa-credit-card" style="z-index:1;"></i><i class="card-type icon-append"></i><input id="card-number" name="card-number" type="text" class="input required ccNumber" placeholder="');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "card_number_placeholder", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section><div class="row"><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-calendar" style="z-index:1;"></i><input id="card-expiry" name="card-expiry" type="text" class="input required ccExpiryFormat ccExpiryDate" placeholder="MM/YY" /></label></section><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-lock" style="z-index:1;"></i><input id="card-cvc" name="card-cvc" type="text" class="input required digits cvcCheck" placeholder="CVV" minlength="3" maxlength="4" /></label></section></div><section><label class="input"><i class="icon-prepend fa fa-map-marker" style="z-index:1;"></i><input id="zip-code" name="zip-code" type="text" class="input required" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "zip_code_placeholder", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section></div></td></tr><tr><td colspan="2"><p id="total-price"  style="font-size : 14px; text-align : center; margin : 0;"></p></td></tr><tr><td class="text-center" colspan="2"><button id="cancel-payment-form" class="btn btn-default" style="margin-right : 5px;">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="activate-now" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "activate_now", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></td></tr></table></form><div id="addon-settings-button-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.paymentSuccess::hidden :text-center"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="padding: 20px 15px;"><div><div id="success-check-container"><i class="fa fa-check"></i></div><h1 style="color: #71a06a; font-weight: 500;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "thank_you", {
				name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</h1><h5 style="color: #71a06a; font-weight: 500;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "purchase_success", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><p style="margin : 30px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "advanced_whitelabel_settings", {
				name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push("</p></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.widgetAppearance = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			return ""
		},
		3: function (a, c, d, b) {
			d = c["if"].call(a, "activeProperty.isSite", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.isGalleryView", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 4: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa  fa-angle-right"></i>');
			a =
				c._triageMustache.call(a, "activeWidget.name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span id="third-title"><i class="fa  fa-angle-right"></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "bubbles_gallery", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 8: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td colspan="3"><h6 style="font-weight: normal">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "desktop_widget_description", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h6></td></tr><tr class="desktop-container"><td style="height : 55px;"><div class="round" style="height : 53px;"><label class="radio"><input type="radio" id="round" name="desktop-theme"');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeWidget.isRoundDesktop"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' value="min" /><i></i></label><div class="tawkchat-status-icon change-background-color change-text-color"></div></div></td><td colspan="2"><div class="rectangle" style="height : 42px;"><label class="radio rectangle"><input type="radio" id="rectangle" name="desktop-theme"');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {checked: "activeWidget.isRectangleDesktop"},
					hashTypes: {checked: "STRING"},
					hashContexts: {checked: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' value="full" /><i></i></label><div class="tawkchat-status-icon change-background-color change-text-color"><div class="text">');
			a = c._triageMustache.call(a, "onlineGreetingsPreview.shortGreeting", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div></div></div></td></tr>");
			return ""
		}, 10: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td colspan="3"><h6 style="font-weight: normal">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_size_description", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h6></td></tr>");
			return ""
		}, 12: function (a,
		                 c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td colspan="3"><h6 style="font-weight: normal">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_size_description_embed", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h6></td></tr><tr><td colspan="3"><h6 class="widget-details">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "embed_dimensions_details", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("<h6></td></tr>");
			return ""
		}, 14: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<tr ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><td><label class="label text-right">Minimized Width</label></td><td class="fix-mid-size"><label class="input text-center" style="width : 70px; margin : 0px auto;">');
			b.buffer.push(d((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					value: "activeWidget.minimizedWidth",
					name: "widget-min-width",
					id: "widget-min-width",
					"class": "required dimension",
					type: "text"
				},
				hashTypes: {
					value: "ID", name: "STRING", id: "STRING",
					"class": "STRING", type: "STRING"
				},
				hashContexts: {value: a, name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></td><td class="fix-end-size"><button ');
			b.buffer.push(d(c.action.call(a, "resetMinWidth", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "default_text", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button></td></tr><tr ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td><label class="label text-right">Minimized Height</label></td><td class="fix-mid-size"><label class="input text-center" style="width : 70px; margin : 0px auto;">');
			b.buffer.push(d((c.input ||
				a && a.input || e).call(a, {
				name: "input",
				hash: {
					value: "activeWidget.minimizedHeight",
					name: "widget-min-height",
					id: "widget-min-height",
					"class": "required dimension",
					type: "text"
				},
				hashTypes: {value: "ID", name: "STRING", id: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {value: a, name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></td><td class="fix-end-size"><button ');
			b.buffer.push(d(c.action.call(a, "resetMinHeight", {
				name: "action", hash: {}, hashTypes: {}, hashContexts: {}, types: ["STRING"],
				contexts: [a], data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "default_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Top Corners Roundness</label></td><td class="fix-mid-size">');
			b.buffer.push(d((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					"class": "spinner top-corner",
					min: "0", type: "text"
				},
				hashTypes: {"class": "STRING", min: "STRING", type: "STRING"},
				hashContexts: {"class": a, min: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</td><td class="fix-end-size"><button id="reset-top-corner" type="button" class="btn restore-default">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "default_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></td></tr><tr ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "view.isDesktopWidgetFull::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><td><label class="label text-right">Bottom Corners Roundness</label></td><td class="fix-mid-size">');
			b.buffer.push(d((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {"class": "spinner bottom-corner", min: "0", type: "text"},
				hashTypes: {"class": "STRING", min: "STRING", type: "STRING"},
				hashContexts: {"class": a, min: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</td><td class="fix-end-size"><button id="reset-bottom-corner" type="button" class="btn restore-default">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "default_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></td></tr>");
			return ""
		}, 16: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div id="widget-min" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isRTL:rtl-direction"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="left: 0; right : 0; width : auto; max-width : 100%;"><div id="widget-min-preview-container" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopRectangle:isRectangle:isRound"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="bubble-container"><div id="default-bubble-container" class="hidden"><div id="bubble-graphics-container"><canvas id="bubble-canvas"></canvas></div><div id="bubble-text-container"><p id="bubble-text">');
			d = c._triageMustache.call(a, "bubblePreview.bubbleText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div></div><div id="preview-bubble-uploaded-limits"><img class="bubble preview-bubble uploaded hidden" /></div><img ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {src: "bubblePreview.galleryBubbleImage"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":bubble :preview-bubble :gallery :hidden bubblePreview.bubbleRotatable::non-rotatable"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /></div><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":inner-preview-container :change-background-color :change-text-color :rectangle-container activeWidget.position"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="widget-container"><div class="header-container"><div class="headerBoxControlsContainer white"><div class="maximize pull-right"></div></div><div class="headerAccountStateContainer"><p class="headerAccountState">');
			d = c._triageMustache.call(a, "onlineGreetingsPreview.shortGreeting", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div></div></div></div><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":inner-preview-container :round-container activeWidget.position"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="widget-container change-background-color change-text-color change-background-color change-text-color"></div></div></div></div>');
			return ""
		}, 18: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.WidgetBubbleGallery || a && a.WidgetBubbleGallery ||
				d).call(a, {
				name: "WidgetBubbleGallery",
				hash: {isVisibleBinding: "view.isGalleryView"},
				hashTypes: {isVisibleBinding: "STRING"},
				hashContexts: {isVisibleBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			d = c.unless.call(a, "activeProperty.isPersonal", {
				name: "unless", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(1, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-picture-o"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_appearance", {
				name: "I18n", hash: {context: "pages"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeWidget.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="widget-appearance-form" name="widget-appearance-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":smart-form :admin-form view.isGalleryView:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left" style="width : 50%; height : 100%;"><div id="form-scrollable-container" style="width: 100%; height: 100%; position: relative; overflow: auto;"><fieldset><table class="table no-border"><tr><td colspan="3"><h6 style="font-weight: normal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_color_description", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h6></td></tr><tr><td style="width: 100px;"><label class="label text-right">Header Background</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="widget-bg-color" name="widget-bg-color" /></label></td><td class="fix-end-size"><button type="button" class="btn restore-default" ');
			b.buffer.push(f(c.action.call(a, "resetHeaderBgColor", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Header Text</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="widget-txt-color" name="widget-txt-color" /></label></td><td class="fix-end-size"><button class="btn restore-default" ');
			b.buffer.push(f(c.action.call(a, "resetHeaderTxtColor", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Agent Message Background</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="agent-chat-bg-color" name="agent-chat-bg-color" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeWidget.agentBubbleBg"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td><td class="fix-end-size"><button ');
			b.buffer.push(f(c.action.call(a, "resetAgentBgColor", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset",
				{
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Agent Message Text</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="agent-chat-txt-color" name="agent-chat-txt-color" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeWidget.agentBubbleTxt"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td><td class="fix-end-size"><button  ');
			b.buffer.push(f(c.action.call(a, "resetAgentTxtColor", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Visitor Message Background</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="visitor-chat-bg-color" name="visitor-chat-bg-color" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeWidget.visitorBubbleBg"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td><td class="fix-end-size"><button ');
			b.buffer.push(f(c.action.call(a, "resetVisitorBgColor", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"reset", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Visitor Message Text</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="visitor-chat-txt-color" name="visitor-chat-txt-color" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "activeWidget.visitorBubbleTxt"}, hashTypes: {value: "STRING"},
				hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' /></label></td><td class="fix-end-size"><button ');
			b.buffer.push(f(c.action.call(a, "resetVisitorTxtColor", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></td></tr>");
			d = c["if"].call(a, "activeWidget.isInline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeWidget.isInline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.program(12, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<tr><td><label class="label text-right">Maximized Width</label></td><td class="fix-mid-size"><label class="input text-center" style="width : 70px; margin : 0px auto;">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					value: "activeWidget.width",
					name: "widget-max-width",
					id: "widget-max-width",
					"class": "required dimension",
					type: "text"
				},
				hashTypes: {value: "ID", name: "STRING", id: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {value: a, name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></td><td class="fix-end-size"><button ');
			b.buffer.push(f(c.action.call(a, "resetMaxWidth", {
				name: "action", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "default_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Maximized Height</label></td><td class="fix-mid-size"><label class="input text-center" style="width : 70px; margin : 0px auto;">');
			b.buffer.push(f((c.input ||
				a && a.input || e).call(a, {
				name: "input",
				hash: {
					value: "activeWidget.height",
					name: "widget-max-height",
					id: "widget-max-height",
					"class": "required dimension",
					type: "text"
				},
				hashTypes: {value: "ID", name: "STRING", id: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {value: a, name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></td><td class="fix-end-size"><button ');
			b.buffer.push(f(c.action.call(a, "resetMaxHeight", {
				name: "action", hash: {}, hashTypes: {}, hashContexts: {}, types: ["STRING"],
				contexts: [a], data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "default_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></td></tr>");
			d = c["if"].call(a, "activeWidget.isInline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<tr><td><label class="label text-right">Position</label></td><td class="fix-mid-size">');
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.positionSelectClass",
					selectedValue: "activeWidget.position",
					optionsBinding: "view.positionSelectOptions"
				},
				hashTypes: {selectClassBinding: "STRING", selectedValue: "ID", optionsBinding: "STRING"},
				hashContexts: {selectClassBinding: a, selectedValue: a, optionsBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</td><td class="fix-end-size"><button ');
			b.buffer.push(f(c.action.call(a, "resetPosition", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "default_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></td></tr><tr><td colspan="3"><h6 style="font-weight: normal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "mobile_widget_description", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h6></td></tr><tr class="mobile-container"><td style="height : 55px;"><div class="round" style="height : 53px;"><label class="radio"><input type="radio" id="round" name="mobile-theme"');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeWidget.isRoundMobile"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' value="round" /><i></i></label><div class="tawkchat-status-icon change-background-color change-text-color"></div></div></td><td colspan="2"><div class="rectangle" style="height : 42px;"><label class="radio rectangle"><input type="radio" id="rectangle" name="mobile-theme"');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {checked: "activeWidget.isRectangleMobile"},
					hashTypes: {checked: "STRING"},
					hashContexts: {checked: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' value="rectangle" /><i></i></label><div class="tawkchat-status-icon change-background-color change-text-color"><div class="text">Chat</div></div></div></td></tr><tr ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td colspan="3"><h6 style="font-weight: normal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "bubble_description", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h6></td></tr><tr ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><td><label class="label text-right">Show Bubble</label></td><td colspan="2"><label class="toggle" style="height : 30px; margin : 0;">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {checked: "bubblePreview.enabled", name: "bubble-status", id: "bubble-status", type: "checkbox"},
				hashTypes: {checked: "ID", name: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {checked: a, name: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i data-swchon-text="yes" data-swchoff-text="no" for="bubble-status"></i></label></td></tr><tr ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "bubblePreview.enabled::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><td ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' colspan="2"><label class="pull-left"><button id="upload-image" type="button" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "upload_image", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></label><label class=pull-right><button id="open-bubble-gallery" type="button" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				e).call(a, "open_gallery", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></label><input type="file" class="hidden" id="upload-image-input" /><div class="clearfix"></div></td><td ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden :fix-end-size"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><label><button ");
			b.buffer.push(f(c.action.call(a, "resetBubbleSettings", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' type="button" class="btn restore-default">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></label></td></tr><tr id="match-bubble-container"><td colspan="3" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "view.isDesktopWidgetFull::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><div><label class="checkbox" style="height: 22px; display: inline-block; vertical-align: middle;"><input type="checkbox" id="match-bubble" /><i></i></label><label class="label" for="match-bubble" style="display: inline-block;vertical-align: middle;height: 40px;line-height: 40px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "match_bubble",
				{
					name: "I18n",
					hash: {context: "widgets"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</label></div></td></tr><tr class="bubble-edit-container hidden"><td ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="label text-right">Content</label></td><td colspan="2" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "view.isDesktopWidgetFull::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><label class="input" style="width : 100%">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					value: "bubblePreview.bubbleText",
					name: "bubble-text",
					maxlength: "45",
					id: "bubble-text-input",
					"class": "required",
					placeholderKey: "bubble_text",
					type: "text"
				},
				hashTypes: {
					value: "ID", name: "STRING", maxlength: "STRING", id: "STRING",
					"class": "STRING", placeholderKey: "STRING", type: "STRING"
				},
				hashContexts: {value: a, name: a, maxlength: a, id: a, "class": a, placeholderKey: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></td></tr><tr class="bubble-edit-container hidden"><td ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="label text-right">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "bubble_colors", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></td><td ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden :fix-mid-size"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="input text-left"><input type="text" id="bubble-bg-color" name="bubble-bg-color" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "bubblePreview.bubbleBgColor"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /></label></td><td ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden :fix-end-size"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="input text-left"><input type="text" id="bubble-txt-color" name="bubble-txt-color" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "bubblePreview.bubbleTxColor"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></td></tr><tr class="hidden upload-image-settings"><td ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="label text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rotate_bubble", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></td><td ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden :fix-mid-size"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><button id="turn-left" class="btn btn-default"><i class="fa fa-rotate-left"></i><span class="hidden-mobile hidden-tablet">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "turn_left", {
				name: "I18n",
				hash: {variables: '{"deg" : "&deg;"}', context: "widgets"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></button></td><td ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden :fix-end-size"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><button id="turn-right" class="btn btn-default"><i class="fa fa-rotate-right"></i><span class="hidden-mobile hidden-tablet">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "turn_right", {
				name: "I18n",
				hash: {variables: '{"deg" : "&deg;"}', context: "widgets"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></button></td></tr><tr class="hidden upload-image-settings"><td colspan="3" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label id="upload-image-order" class="checkbox" style="height: 22px; display: inline-block; vertical-align: middle;">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {id: "bubble-in-front", checkedBinding: "bubblePreview.bubbleInFront", type: "checkbox"},
				hashTypes: {id: "STRING", checkedBinding: "STRING", type: "STRING"},
				hashContexts: {id: a, checkedBinding: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i></i></label><label class="label" for="bubble-in-front" style="display: inline-block;vertical-align: middle;height: 40px;line-height: 40px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "image_to_front", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td></tr><tr class="hidden upload-image-settings"><td colspan="3" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="note">* ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "image_upload_note", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td></tr><tr><td colspan="3" class="whitelabel-view"></td></tr></table></fieldset><div id="upload-image-message" class="hidden"><span class="state-error"></span><em id="upload-image-message-content"></em></div><div id="upload-image-progress" class="hidden"></div></div></div><div class="pull-left" style="width : 50%; height : 100%; position : relative"><div id="title-preview">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "desktop_preview", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			d = c["if"].call(a, "activeWidget.isInline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="widget-max" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeWidget.isInline:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="border-left: 1px solid #e5e5e5; left: 0; right: 0; width: auto; max-width: 100%; height: 100%; overflow: auto; bottom: 1px;"><div id="widget-max-preview-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isRTL:rtl-direction activeWidget.isInline::embed"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="border-wrapper"></div><div class="inner-preview-container"><div class="header-container change-background-color change-text-color"><div id="header-wrapper"><div class="headerBoxControlsContainer black"><div class="end-chat pull-right"></div><div class="popout pull-right"></div><div class="minimize pull-right"></div></div><div class="headerAccountStateContainer"><p class="headerAccountState">');
			d = c._triageMustache.call(a, "onlineGreetingsPreview.shortGreeting",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div></div></div><div id="widget-chat-container"><div id="chat-container-wrapper"><div id="sample-chat-coloring"><div class="visitorChatContainer clearfix"><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div></div><div class="agentChatContainer clearfix"><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div></div></div></div><div id="bottom-container"><div id="actionsContainer"><div id="action-message">Type here and press enter...</div><div id="ratingContainer"></div><div id="footer-container"><div id="options" style="height: 32px; margin-left: 84px;"><div id="openMenu" style="position: absolute; left: 3px; bottom: 0; background:url(https://static-a.tawk.to/v2/a34/images/widget-menu.png); height : 29px; width : 80px;"></div></div><div id="widget-brand" style="position: absolute; bottom: 0; right: 6px; left: 86px; text-align: right; height: 30px; line-height: 30px; color: #000; font-size: 13px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-right : 3px; font-weight : normal;"><a href="https://tawk.to" target="_blank" style="text-decoration: none; color: inherit;">Powered by <span style="font-size: 13px; font-weight: 700">tawk.to</span></a></div></div></div></div></div></div></div></div></div><div class="clearfix"></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer><div class="more-below hidden" style="position: absolute; bottom: 64px; right: 50%; height: 21px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "more_bubble", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' <i class="fa fa-arrow-down"></i></div></form>');
			d = c["if"].call(a, "activeWidget.isInline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.widgetContent = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			return ""
		}, 3: function (a, c, d, b) {
			a = c["if"].call(a, "activeProperty.isSite", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 4: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			a = c._triageMustache.call(a,
				"activeWidget.name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="toggle" style="margin-left: 5px;display : inline-block; height : 32px;">');
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					checked: "prechatFormPreview.enabled",
					name: "prechat-status",
					id: "prechat-status",
					type: "checkbox"
				},
				hashTypes: {checked: "ID", name: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {checked: a, name: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "on", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "off", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" for="prechat-status"></i></label>');
			return ""
		}, 8: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			d = c["if"].call(a, "view.currentForm.fieldsData.isNameAvailable", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.currentForm.fieldsData.isEmailAvailable", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(11, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "activeProperty.isPersonal", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.currentForm.fieldsData.isPhoneNumberAvailable", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d &&
			b.buffer.push(d);
			b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-question-inputText">+ ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_question_input", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></div><div class="form-setting"><a href="javascript:void(0);" id="add-question-textArea">+ ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_question_text", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></div><div class="form-setting"><a href="javascript:void(0);" id="add-multi-choice">+ ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_multiple_choice", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></div><div class="form-setting"><a href="javascript:void(0);" id="add-options">+ ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_options_choice", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></div>");
			return ""
		}, 9: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-name">+ ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_name", {
				name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></div>");
			return ""
		}, 11: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-email">+ ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_email", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></div>");
			return ""
		}, 13: function (a, c, d,
		                 b) {
			a = c["if"].call(a, "view.currentForm.fieldsData.isDepartmentAvailable", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 14: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-department">+ ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_department", {
				name: "I18n", hash: {context: "widgets"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></div>");
			return ""
		}, 16: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-phone-number">+ ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_phone_number", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></div>");
			return ""
		}, 18: function (a, c, d, b) {
			b.buffer.push('<div class="headerAccountStateContainer"><p class="headerAccountState">');
			a = c["if"].call(a, "view.isPrechat", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.program(21, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</p></div>");
			return ""
		}, 19: function (a, c, d, b) {
			a = c._triageMustache.call(a, "onlineGreetingsPreview.shortGreeting", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
				contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 21: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<span class="edit-text">');
			d = c["if"].call(a, "onlineGreetingsPreview.shortGreeting.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.program(22, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					name: "online-short-message",
					valueBinding: "onlineGreetingsPreview.shortGreeting",
					maxlength: "60",
					"class": "editable-input required",
					type: "text"
				},
				hashTypes: {
					name: "STRING",
					valueBinding: "STRING",
					maxlength: "STRING",
					"class": "STRING",
					type: "STRING"
				},
				hashContexts: {name: a, valueBinding: a, maxlength: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i class="fa fa-pencil edit-icon"></i>');
			return ""
		}, 22: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span class="empty-text">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "widget_header", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 24: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="headerAccountStateContainer"><p class="headerAccountState"><span class="edit-text">');
			d = c["if"].call(a, "awayGreetingsPreview.shortGreeting.length", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(25,
					b), inverse: this.program(22, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					name: "away-short-message",
					valueBinding: "awayGreetingsPreview.shortGreeting",
					maxlength: "60",
					"class": "editable-input required",
					type: "text"
				},
				hashTypes: {
					name: "STRING",
					valueBinding: "STRING",
					maxlength: "STRING",
					"class": "STRING",
					type: "STRING"
				},
				hashContexts: {name: a, valueBinding: a, maxlength: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i class="fa fa-pencil edit-icon"></i></p></div>');
			return ""
		}, 25: function (a, c, d, b) {
			a = c._triageMustache.call(a, "awayGreetingsPreview.shortGreeting", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 27: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="headerAccountStateContainer"><p class="headerAccountState"><span class="edit-text">');
			d = c["if"].call(a,
				"offlineFormPreview.shortGreeting.length", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(28, b),
					inverse: this.program(22, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					name: "offline-short-message",
					valueBinding: "offlineFormPreview.shortGreeting",
					maxlength: "60",
					"class": "editable-input required",
					type: "text"
				},
				hashTypes: {
					name: "STRING", valueBinding: "STRING", maxlength: "STRING", "class": "STRING",
					type: "STRING"
				},
				hashContexts: {name: a, valueBinding: a, maxlength: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i class="fa fa-pencil edit-icon"></i></p></div>');
			return ""
		}, 28: function (a, c, d, b) {
			a = c._triageMustache.call(a, "offlineFormPreview.shortGreeting", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 30: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "view.newLongGreeting",
				{
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})))
		}, 32: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span class="empty-text">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "form_header", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 34: function (a, c, d, b) {
			d =
				c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					valueBinding: "view.currentForm.text",
					"class": "editable-input form-title required",
					type: "text"
				},
				hashTypes: {valueBinding: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {valueBinding: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 36: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					valueBinding: "view.currentForm.text",
					"class": "editable-input form-title", type: "text"
				},
				hashTypes: {valueBinding: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {valueBinding: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 38: function (a, c, d, b) {
			b.buffer.push('<div class="max-length-error">');
			a = c._triageMustache.call(a, "view.errorMaxLengthMsg", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</di v>");
			return ""
		}, 40: function (a, c, d, b) {
			var e = this.escapeExpression,
				f = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="field-container" style="cursor: move; position: relative; margin: 5px 0;"><div class="field-label label" style="margin-right: 35px;"><span class="edit-text" style="cursor: text;">');
			d = c["if"].call(a, "label.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(41, b),
				inverse: this.program(43,
					b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			b.buffer.push(e((c.input || a && a.input || f).call(a, {
				name: "input",
				hash: {
					name: "name",
					valueBinding: "label",
					maxlength: "150",
					"class": "editable-input required",
					type: "text"
				},
				hashTypes: {name: "ID", valueBinding: "STRING", maxlength: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {name: a, valueBinding: a, maxlength: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i class="fa fa-pencil edit-icon"></i></div><div class="action-container" style="position: absolute; right: 0; top: 5px; width : 28px;">');
			d = c["if"].call(a, "allowRequiredToggle", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(45, b),
				inverse: this.program(46, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "canBeDeleted", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(50, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a, "isInputText", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(52, b),
				inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isName", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(52, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isEmail", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(52, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isPhone", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(52, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isMessage", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(54, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isTextArea", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(54, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isDepartment", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(56, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isMultiChoice", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(59, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isOptions", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(64, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, 41: function (a, c, d, b) {
			a = c._triageMustache.call(a, "label", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 43: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span class="empty-text">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "field_label", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 45: function (a, c, d, b) {
			b.buffer.push('<a class="action toggle-required tooltip-hover" href="javascript:void(0);" data-placement="bottom" data-original-title="Set as required">');
			a = c["if"].call(a, "isRequired", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(46, b),
				inverse: this.program(48, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a>");
			return ""
		}, 46: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-asterisk" style="color: red; font-size: 14px;"></i>')
		},
		48: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-asterisk" style="font-size: 14px;"></i>')
		}, 50: function (a, c, d, b) {
			b.buffer.push('<a class="action delete-field tooltip-hover" href="javascript:void(0);" data-placement="bottom" data-original-title="Delete field"><i class="fa fa-trash-o" style="font-size: 14px;"></i></a>')
		}, 52: function (a, c, d, b) {
			b.buffer.push('<div class="input-container"><input type="text" disabled="disabled" /></div>')
		}, 54: function (a, c, d, b) {
			b.buffer.push('<div class="input-container"><textarea disabled="disabled"></textarea></div>')
		},
		56: function (a, c, d, b) {
			a = c.unless.call(a, "activePage.isPersonal", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(57, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 57: function (a, c, d, b) {
			b.buffer.push('<div class="input-container"><select disabled></select></div>')
		}, 59: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div class="field-selections">');
			d = c.each.call(a, "selection", "in", "selections", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(60, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<input type="hidden" class="emptySelection" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "name"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" />");
			d = c["if"].call(a, "canAddSelection", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(62, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, 60: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="field-selection" style="padding: 5px;"><input type="checkbox" disabled="disabled" style="display: inline-block;width: auto;vertical-align: middle; margin-right: 3px;"><label><span class="edit-text" style="cursor: text;">');
			d = c._triageMustache.call(a, "selection.text", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					valueBinding: "selection.text",
					maxlength: "150",
					"class": "editable-input required",
					type: "text"
				},
				hashTypes: {valueBinding: "STRING", maxlength: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {valueBinding: a, maxlength: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i class="fa fa-pencil edit-icon"></i><i class="fa fa-trash-o delete-selection" style="color: #333; margin: 0 0 0 5px; font-size: 14px;  cursor: pointer;"></i></label></div>');
			return ""
		}, 62: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<a href="javascript:void(0);" class="add-choice" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">+ ");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add_choice", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a>");
			return ""
		}, 64: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div class="field-selections">');
			d = c.each.call(a, "selection", "in", "selections", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(65, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<input type="hidden" class="emptySelection" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {name: "name"}, hashTypes: {name: "STRING"},
				hashContexts: {name: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(" />");
			d = c["if"].call(a, "canAddSelection", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(62, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, 65: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="field-selection" style="padding: 5px;"><input type="radio" disabled="disabled" style="display: inline-block;width: auto;vertical-align: middle; margin-right: 3px;"><label><span class="edit-text" style="cursor: text;">');
			d = c._triageMustache.call(a, "selection.text", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					valueBinding: "selection.text",
					maxlength: "150",
					"class": "editable-input required",
					type: "text"
				},
				hashTypes: {valueBinding: "STRING", maxlength: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {valueBinding: a, maxlength: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i class="fa fa-pencil edit-icon"></i><i class="fa fa-trash-o delete-selection" style="color: #333; margin: 0 0 0 5px; font-size: 14px;  cursor: pointer;"></i></label></div>');
			return ""
		}, 67: function (a, c, d, b) {
			a = c["if"].call(a, "view.isCurrentStatusOffline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(68, b),
				inverse: this.program(70, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 68: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.langPreview || a && a.langPreview || d).call(a, "submit", {
				name: "langPreview",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 70: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.langPreview || a && a.langPreview || d).call(a, "start_chat", {
				name: "langPreview",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 72: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<span class="edit-text start-link">');
			b.buffer.push(d(c._triageMustache.call(a, "view.newLongGreeting", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {valueBinding: "onlineGreetingsPreview.longGreeting", "class": "editable-input"},
				hashTypes: {valueBinding: "STRING", "class": "STRING"},
				hashContexts: {valueBinding: a, "class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i class="fa fa-pencil edit-icon start-link"></i>');
			return ""
		}, 74: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<span class="edit-text start-link">');
			b.buffer.push(d(c._triageMustache.call(a, "view.newLongGreeting", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {
					valueBinding: "awayGreetingsPreview.longGreeting",
					"class": "editable-input"
				},
				hashTypes: {valueBinding: "STRING", "class": "STRING"},
				hashContexts: {valueBinding: a, "class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i class="fa fa-pencil edit-icon start-link"></i>');
			return ""
		}, 76: function (a, c, d, b) {
			b.buffer.push('<div id="embedArrow" class="widget-greetings-arrow"></div>')
		}, 78: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<span class="edit-text">');
			d = c._triageMustache.call(a, "onlineGreetingsPreview.actionMessage", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					maxlength: "60",
					valueBinding: "onlineGreetingsPreview.actionMessage",
					"class": "editable-input required",
					type: "text"
				},
				hashTypes: {maxlength: "STRING", valueBinding: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {maxlength: a, valueBinding: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i class="fa fa-pencil edit-icon"></i>');
			return ""
		}, 80: function (a, c, d, b) {
			a = c._triageMustache.call(a, "onlineGreetingsPreview.actionMessage", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			d = c.unless.call(a, "activeProperty.isPersonal",
				{
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-font"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_content", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeWidget.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="widget-content-form" name="widget-content-form" class="smart-form admin-form"><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left" style="width : 50%; height : 100%; position: relative;"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><fieldset><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "language_title", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClass: "language-type-select",
					selectedValue: "activeWidget.languageCode",
					optionsBinding: "view.languageSelectOptions"
				},
				hashTypes: {selectClass: "STRING", selectedValue: "ID", optionsBinding: "STRING"},
				hashContexts: {selectClass: a, selectedValue: a, optionsBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "content_description", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="radio"><input type="radio" name="edit-view" checked="checked" value="greetings-online" /><i></i>');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "when_online", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="radio"><input type="radio" name="edit-view" value="greetings-away" /><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "when_away", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="radio"><input type="radio" name="edit-view" value="offlineForm" /><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "when_offline", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div><label class="radio" style="display : inline-block"><input type="radio" name="edit-view" value="prechatForm" /><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "prechat_form", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			d = c["if"].call(a, "view.isPrechat", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="clearfix"></div></section><section class="padding-10 fields-actions">');
			d = c["if"].call(a, "view.currentForm.fieldsData.canAddFields", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</section><section class="whitelabel-view"></selection></fieldset></div></div><div class="pull-left" style="width : 50%; height : 100%; position : relative;"><div style="left: 0;right: 0;width: auto;max-width: 400px; border-left: 1px solid #e5e5e5; position: absolute; top : 0; bottom : 0; padding : 0 15px"><div><h4>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "content_editor", {
				name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</h4><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "content_editor_description", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div id="widget-max-preview-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isRTL:rtl-direction activeWidget.isInline::embed"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="border-wrapper"></div><div class="inner-preview-container"><div class="header-container change-background-color change-text-color"><div id="header-wrapper"><div class="headerBoxControlsContainer white"><div class="end-chat pull-right"></div><div class="popout pull-right"></div><div class="minimize pull-right"></div></div>');
			d = c["if"].call(a, "view.isCurrentStatusOnline", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(18, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.isCurrentStatusAway", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.isCurrentStatusOffline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div id="widget-chat-container"><div id="linkFormContainer"><div id="backLinkButton"><i class="fa fa-angle-left"></i><span>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "back", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></div><section><label class="capitalize">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_name", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><input type="text" id="link-name"><span class="warning link-name"></span></section><section><label class="uppercase">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "url", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="select-container">');
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.prefixUrlSelectClass",
					selectedValueBinding: "view.selectedPrefixValue",
					optionsBinding: "view.urlPrefixList"
				},
				hashTypes: {
					selectClassBinding: "STRING", selectedValueBinding: "STRING",
					optionsBinding: "STRING"
				},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</div><span class="input-container"><input type="text" id="link-body"></span><span class="warning link-body"></span></section><section class="save-button-container"><div id="save-url" class="link-form-button">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</div></section></div><div id="widget-form" class="form-container hidden"><div class="form-scroller"><p class="form-greetings-container"><span class="edit-text start-link">');
			d = c["if"].call(a, "view.currentForm.text.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.program(32, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			d = c["if"].call(a, "view.isPrechat", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(34, b),
				inverse: this.program(36, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i class="fa fa-pencil edit-icon start-link"></i></p>');
			d = c["if"].call(a, "view.isMaxLengthInvalid", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(38, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="addLinkButtonContainer"><div class="warning hidden">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "invalid_position", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div id="addLinkButton" class="link-form-button">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_link", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-link"></i></div></div><div class="form-fieldset"><div class="form-inner-container">');
			d = c.each.call(a, "view.currentForm.fieldsData.parsedFields", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(40, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div><div class="form-button-container"><div class="button-element change-background-color change-text-color">');
			d = c["with"].call(a, "activeWidget.languageCode", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(67, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div><div id="chat-container-wrapper"><div id="greetingsOverlay"><div id="greetingsWrapper"><div id="greetingsContainer">');
			d = c["if"].call(a, "view.isCurrentStatusOnline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(72, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.isCurrentStatusAway", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(74,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a, "view.longGreeting", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(76, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.isMaxLengthInvalid", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(38, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="addLinkButtonContainer"><div class="warning hidden">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invalid_position", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div id="addLinkButton" class="link-form-button">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_link", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-link"></i></div></div></div></div></div><div id="bottom-container"><div id="action-message">');
			d = c["if"].call(a, "view.isCurrentStatusOnline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(78, b),
				inverse: this.program(80, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="ratingContainer"></div><div id="footer-container"><div id="options" style="height: 32px; margin-left: 84px;"><div id="openMenu" style="position: absolute; left: 3px; bottom: 0; background:url(https://static-a.tawk.to/v2/a34/images/widget-menu.png); height : 29px; width : 80px;"></div></div><div id="widget-brand" style="position: absolute; bottom: 0; right: 6px; left: 86px; text-align: right; height: 30px; line-height: 30px; color: #000; font-size: 13px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-right : 3px; font-weight : normal;"><a href="https://tawk.to" target="_blank" style="text-decoration: none; color: inherit;">Powered by <span style="font-size: 13px; font-weight: 700">tawk.to</span></a></div></div></div></div></div></div></div></div><div class="clearfix"></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.widgetDomains = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			a = c["if"].call(a, "activeProperty.isSite", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			a ? b.buffer.push(a) : b.buffer.push("")
		}, 2: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa  fa-angle-right"></i>');
			a = c._triageMustache.call(a, "activeWidget.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 4: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<section><label class="checkbox">');
			d = c["if"].call(a, "activeWidget.sessionsShared",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(5, b),
					inverse: this.program(7, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("<i></i>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_restriction_share", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></section>");
			return ""
		}, 5: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" id="enable-sharing" checked="checked" />')
		},
		7: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" id="enable-sharing" />')
		}, 9: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="input"><a href="javascript:void(0);" class="button-icon icon-append delete-domain tooltip-hover" data-placement="top" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_domain", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a>');
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					placeholderKey: "add_domain",
					nameBinding: "this.id",
					idBinding: "this.id",
					value: "value",
					"class": "required validDomain domain-whitelist",
					type: "text"
				},
				hashTypes: {
					placeholderKey: "STRING",
					nameBinding: "STRING",
					idBinding: "STRING",
					value: "ID",
					"class": "STRING",
					type: "STRING"
				},
				hashContexts: {placeholderKey: a, nameBinding: a, idBinding: a, value: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section>");
			return ""
		}, 11: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button id="add-domain" type="button" class="btn btn-default">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_domain", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-link"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_restriction", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeWidget.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container" class="smart-form"><form id="widget-domain-form" name="widget-domain-form" class="admin-form"><div id="form-scrollable-container"><section><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_restriction_description", {
				name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</p></section>");
			d = c["if"].call(a, "domainWhiteList.domains.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "domainWhiteList.domains", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "domainWhiteList.disableAdd",
				{
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(11, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.widgetScheduler = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			return ""
		}, 3: function (a, c, d, b) {
			a = c["if"].call(a, "activeProperty.isSite", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(4, b),
				inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 4: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			a = c._triageMustache.call(a, "activeWidget.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li class="city-select select2-result select2-result-selectable" role="presentation" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "index"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' ><div class="select2-result-label" role="option"><span>');
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span></div></li>");
			return ""
		}, 8: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div style="margin-bottom : 10px; height : 40px;"><div class="col-xs-6 col-sm-6 col-md-6 col-lg-2"><label class="checkbox">');
			d = c["if"].call(a, "schedule.isOn", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.program(11, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("<i></i>");
			d = c._triageMustache.call(a, "schedule.label", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			b.buffer.push('</label></div><div class="col-xs-6 col-sm-6 col-md-6 col-lg-10"><div class="form-group hidden"><input ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "schedule.rangeId"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' type="text" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "schedule.rangeId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' value=""></div><p class="closed hidden" style="margin-top : 5px; color : red">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "operation_closed", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><div class="clearfix"></div></div>');
			return ""
		}, 9: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					checked: "checked",
					name: "schedule.labelIds",
					id: "schedule.labelId",
					"class": "day-on",
					type: "checkbox"
				},
				hashTypes: {
					checked: "STRING",
					name: "ID", id: "ID", "class": "STRING", type: "STRING"
				},
				hashContexts: {checked: a, name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 11: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {name: "schedule.labelIds", id: "schedule.labelId", "class": "day-on", type: "checkbox"},
				hashTypes: {name: "ID", id: "ID", "class": "STRING", type: "STRING"},
				hashContexts: {name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, compiler: [6,
			">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			d = c.unless.call(a, "activeProperty.isPersonal", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache", hash: {},
				hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-clock-o"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "scheduler", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeWidget.id", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(3, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container" class="smart-form"><form id="widget-scheduler-form" name="widget-scheduler-form" class="admin-form"><div id="form-scrollable-container"><section><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "scheduler_explanation", {
				name: "I18n", hash: {context: "admin"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</p></section><section><div class="col-xs-6 col-sm-6 col-md-6 col-lg-2"><label class="label" style="height: 30px; line-height: 30px; vertical-align: middle; margin: 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enable_scheduler", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="col-xs-6 col-sm-6 col-md-6 col-lg-10"><label class="toggle" style="height: 30px; line-height: 30px; vertical-align: middle; margin: 0;">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {name: "hours-status", id: "hours-status", type: "checkbox"},
				hashTypes: {name: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {name: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('<i data-swchon-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "yes", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "no", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" for="hours-status"></i></label></div><div class="clearfix"></div></section><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "scheduler.enabled::form-disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="margin-right : 10px;"><section><div class="col-xs-6 col-sm-6 col-md-6 col-lg-2"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "operating_city", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="col-xs-6 col-sm-6 col-md-6 col-lg-10"><label class="select custom-select" style="max-width: 500px"><div id="schedule-city-list" class="select2-drop select2-display-none"><ul class="select2-results" role="listbox">');
			d = c.each.call(a, "view.cityList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><label class="input">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					autocomplete: "off",
					valueBinding: "scheduler.settings.city",
					placeholderKey: "enter_text",
					name: "schedule-city",
					id: "schedule-city",
					"class": "required",
					type: "text"
				},
				hashTypes: {
					autocomplete: "STRING",
					valueBinding: "STRING",
					placeholderKey: "STRING",
					name: "STRING",
					id: "STRING",
					"class": "STRING",
					type: "STRING"
				},
				hashContexts: {
					autocomplete: a,
					valueBinding: a,
					placeholderKey: a,
					name: a,
					id: a,
					"class": a,
					type: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label><i></i></label></div><div class="clearfix"></div></section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "operating_hours", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			d = c.each.call(a,
				"schedule", "in", "view.scheduler", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(8, b),
					inverse: this.noop,
					types: ["ID", "ID", "ID"],
					contexts: [a, a, a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</section></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.widgetSettings = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-cog"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_settings", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			a = c["if"].call(a, "activeProperty.isSite", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 4: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			a = c._triageMustache.call(a, "activeWidget.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span id="second-title"><i class="fa fa-angle-right"></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_widget", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 8: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="label" for="site-name">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_name", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					placeholderKey: "widget_name",
					value: "activeWidget.name",
					maxlength: "75",
					name: "widget-name",
					id: "widget-name",
					"class": "required",
					type: "text"
				},
				hashTypes: {
					placeholderKey: "STRING",
					value: "ID",
					maxlength: "STRING",
					name: "STRING",
					id: "STRING",
					"class": "STRING",
					type: "STRING"
				},
				hashContexts: {placeholderKey: a, value: a, maxlength: a, name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section>");
			a = c["if"].call(a, "activeWidget.id", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(9, b), inverse: this.program(11,
					b), types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 9: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_type", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" : ");
			d = c._triageMustache.call(a, "activeWidget.type", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</label></section><section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="widget-status" style="padding-left: 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_status", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="widget-status" id="widget-status" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "activeWidget.isEnabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i data-swchon-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "disabled_text",
				{
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('"></i></label></div></div></div><div class="clearfix"></div></section>');
			return ""
		}, 11: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><div class="form-table"><div class="form-table-row"><label class="label inline-label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_type", {
				name: "I18n", hash: {context: "widgets"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('&nbsp;<button id="open-site-info" class="btn btn-info open-info"><i class="fa fa-question"></i></button>&nbsp;:&nbsp;</label><div class="inline-group" ><div class="form-table-cell"><label class="radio"><input type="radio" id="inline-type" name="widget-type" checked="checked" /><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "inline", {
				name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" id="embed-type" name="widget-type" /><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "embed", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div></div></div></div><div class="ajax-dropdown property-info" style="top: auto;"><div><h4>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_type_explained", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h4><p>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "inline_widget_explanation", {
				name: "I18n",
				hash: {
					variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u><\\/strong>", "linkStart" : "<a href=\'http:\\/\\/tawk.to\' target=\'_blank\' class=\'link\'>", "linkEnd" : "<\\/a>"}',
					context: "widgets"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p><p>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "embed_widget_explanation", {
				name: "I18n",
				hash: {
					externalLink: '{"variable" : "linkStart", "controller" : "webProperties", "property" : "personalPage.profilePageLink"}',
					replaceVar: "true",
					variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u><\\/strong>", "linkEnd" : "<\\/a>"}',
					context: "widgets"
				},
				hashTypes: {externalLink: "STRING", replaceVar: "STRING", variables: "STRING", context: "STRING"},
				hashContexts: {externalLink: a, replaceVar: a, variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div></div></section>");
			return ""
		}, 13: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push("<section><div><p>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "behavior_description", {
				name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</p></div></section>");
			d = c["if"].call(a, "activeWidget.isInline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<section><label class="checkbox">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {checkedBinding: "activeWidget.hideEstimatedWaitTime", id: "hide-wait-time", type: "checkbox"},
				hashTypes: {
					checkedBinding: "STRING",
					id: "STRING", type: "STRING"
				},
				hashContexts: {checkedBinding: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("<i></i>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "hide_estimate", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="clearfix"></div><label class="checkbox ">');
			b.buffer.push(f((c.input || a && a.input || e).call(a, {
				name: "input",
				hash: {
					checkedBinding: "activeWidget.disableSound",
					id: "disable-sound", type: "checkbox"
				},
				hashTypes: {checkedBinding: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {checkedBinding: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("<i></i>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "sound_disable", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="clearfix"></div>');
			d = c["if"].call(a, "activeWidget.isInline", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</section>");
			return ""
		}, 14: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="label pull-left" style="margin-right : 8px; margin-top : 4px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "on_click", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : </label><div class="inline-group" ><label class="radio"><input type="radio" id="maximize-onclick" name="onclick-action"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "maximize", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="radio"><input type="radio" id="popout-onclick" name="onclick-action"><i></i>');
			b.buffer.push(e((c.I18n || a &&
				a.I18n || d).call(a, "popout", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="clearfix"></div></section>');
			return ""
		}, 16: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="checkbox ">');
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {checkedBinding: "activeWidget.hideOffline", id: "hide-offline", type: "checkbox"},
				hashTypes: {
					checkedBinding: "STRING",
					id: "STRING", type: "STRING"
				},
				hashContexts: {checkedBinding: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("<i></i>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "hide_offline", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="clearfix"></div><label class="checkbox widget-settings-tooltip" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "hide_on_load_tooltip",
				{
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('">');
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {checkedBinding: "activeWidget.hideOnload", id: "hide-onload", type: "checkbox"},
				hashTypes: {checkedBinding: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {checkedBinding: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("<i></i>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"hide_load", {
					name: "I18n",
					hash: {context: "widgets"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</label><div class="clearfix"></div><label class="checkbox ">');
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {checkedBinding: "activeWidget.hideOnMobile", id: "hide-mobile", type: "checkbox"},
				hashTypes: {checkedBinding: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {checkedBinding: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("<i></i>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "hide_mobile", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			return ""
		}, 18: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button id="delete" type="button" class="btn btn-danger">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			d = c.unless.call(a, "activeProperty.isPersonal", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeWidget.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(6, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container" class="smart-form"><form id="widget-settings-form" name="widget-settings-form" class="admin-form"><fieldset>');
			d = c["if"].call(a, "activeProperty.isSite", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeWidget.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			d = c.unless.call(a, "activeWidget.isDefault", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</footer></form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.alertBox = Ember.Handlebars.template({
		compiler: [6,
			">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><i class="fa fa-exclamation-triangle"></i><span class="modal-title-tawk">');
			d = c._triageMustache.call(a, "view.title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;">');
			b.buffer.push(e(c._triageMustache.call(a, "view.message", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div class="modal-footer"><button id="cancel" type="button" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ok", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.banListView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<p class="filter-query-text">&nbsp;:&nbsp;');
			a = c._triageMustache.call(a, "searchQueryText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</p>");
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<table id="ban-list-list" class="table table-striped table-bordered table-hover dataTable no-footer" role="grid" aria-describedby="dt_basic_info"><thead><tr role="row"><th aria-controls="dt_basic" class="text-center" style="width: 15%">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_entry", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th aria-controls="dt_basic" class="text-center" style="width: 10%">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "location", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th aria-controls="dt_basic" class="text-center" style="width: 10%">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_page", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th  aria-controls="dt_basic" class="text-center">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_reason", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th aria-controls="dt_basic" class="text-center" style="width: 15%">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "banned_by", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th aria-controls="dt_basic" class="text-center" style="width: 10%">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "banned_on", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="delete-cell padding-top-0 padding-bottom-0">');
			d = c["if"].call(a, "hasBansToDelete", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</th></tr></thead><tbody>");
			d = c.each.call(a, "list", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tbody></table>");
			d = c.unless.call(a, "list.length", {
				name: "unless", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(15, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 4: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);" id="bulk-unban" class="btn btn-default txt-color-blueDark" ><i class="fa fa-trash-o fa-lg"></i></a>')
		}, 6: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<tr class="show-ban-list" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-id": "this.id"}, hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><td class="text-center">');
			d = c._triageMustache.call(a, "displayText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "country", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			b.buffer.push(e(c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</td><td>");
			d = c._triageMustache.call(a, "reason", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			b.buffer.push(e(c._triageMustache.call(a, "bannedBy", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "createdOn", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="delete-cell">');
			d = c["if"].call(a, "isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "country"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></div>");
			a = c["if"].call(a, "city", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 8: function (a, c, d, b) {
			b.buffer.push('<span class="city">(');
			a = c._triageMustache.call(a, "city", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push(")</span>");
			return ""
		}, 10: function (a, c, d, b) {
			b.buffer.push('<div class="smart-form"><label class="checkbox">');
			a = c["if"].call(a, "toBeDeleted", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push('<i class="delete-select"></i></label></div>');
			return ""
		}, 11: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" class="delete-checkbox" checked="checked"/>')
		}, 13: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" class="delete-checkbox"/>')
		}, 15: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="no-data"><p class="no-history">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "empty_ban_list", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div>");
			return ""
		}, 17: function (a, c, d, b) {
			a = c["if"].call(a, "view.error", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.program(20, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 18: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="load-container text-center"><button class="btn btn-danger reload-view">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "reload_error", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div>");
			return ""
		}, 20: function (a, c, d, b) {
			b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div id="breadcrumb" class="hidden-md hidden-lg"><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><div class="content"><div class="row view-header"><div class="col-xs-12 col-sm-6 col-md-6 col-lg-6"><h1 class="page-title txt-color-blueDark">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n", hash: {context: "ban_list"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</h1></div><div  id="add-button-container" class="col-xs-12 col-sm-2 col-md-2 col-lg-2" style="margin-top: -3px;"><button id="ban-ip" type="button" class="btn btn-primary pull-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_ip", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div><div id="search-list-container" class="col-xs-12 col-sm-4 col-md-4 col-lg-4"><form id="search-ban-list"><fieldset><div class="input-group"><input type="text" class="form-control" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search_ban_list", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" id="search-text" /><div class="input-group-btn"><button id="open-filter" type="button" class="btn btn-default" tabindex="-1" aria-expanded="false"><span class="caret"></span></button><button type="button" class="btn btn-primary search" tabindex="-1"><i class="fa fa-search"></i></button><div class="dropdown-menu pull-right smart-form" role="menu" id="ban-list-filter"><fieldset><section>');
			d = c._triageMustache.call(a, "webPropertySelect", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</section></fieldset><footer><button type="submit" class="btn btn-primary search">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn bg-color-teal txt-color-white" id="reset-filter">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-default" id="close-filter">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></div></div></div></fieldset></form></div></div><div class="innerContent" style="bottom : 50px;"><section id="widget-ban-list" class="col-sm-12"><div class="row"><div id="ban-list-section" class="view-section"><article><div class="jarviswidget" id="wid-id-0" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" style="margin: 0;"><header><span class="widget-icon"> <i class="fa fa-ban"></i> </span><h2>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h2>");
			d = c["if"].call(a, "searchQueryText", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</header><div role="content">');
			d = c["if"].call(a, "view.loaded", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(17, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></article></div></div></section></div><div class="view-footer"><div class="btn-group pull-right" style="margin-top: 8.5px;"><a id="prev-page" ');
			b.buffer.push(f(c.action.call(a, "previousPage", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :prev previousDisabled:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);" data-placement="top" data-original-title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "previous_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-page" ');
			b.buffer.push(f(c.action.call(a, "nextPage", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :next nextDisabled:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);" data-placement="top" data-original-title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"next_text", {
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('"><i class="fa fa-chevron-right"></i></a></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.banForm = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span class="modal-title-tawk">&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_ip", {
				name: "I18n", hash: {context: "ban_list"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span class="modal-title-tawk">&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "edit_ban", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="select">');
			b.buffer.push(e((c.webPropertySelect || a && a.webPropertySelect || d).call(a, {
				name: "webPropertySelect",
				hash: {adminOnly: "true", noAll: "true"},
				hashTypes: {adminOnly: "STRING", noAll: "STRING"},
				hashContexts: {adminOnly: a, noAll: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label>");
			return ""
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<input type="hidden" id="property-id" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {value: "itemInEditMode.propertyId"},
					hashTypes: {value: "ID"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' /><label class="label">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "site_page", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			a = c._triageMustache.call(a, "itemInEditMode.propertyName", {
				name: "_triageMustache", hash: {},
				hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label>");
			return ""
		}, 9: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="label" for="ban-entry">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ip_address", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="ipAddress required" id="ban-entry" name="ban-entry" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_ip_address", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label>');
			return ""
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<input type="hidden" id="ban-entry" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "itemInEditMode.entry"},
				hashTypes: {value: "ID"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /><label class="label">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "ban_entry", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			a = c._triageMustache.call(a, "itemInEditMode.displayText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label>");
			return ""
		}, 13: function (a, c, d, b) {
			b.buffer.push('<div class="transcript-divider"></div>')
		}, 15: function (a, c, d, b) {
			b.buffer.push('<div class="transcript-view">');
			a = c["if"].call(a, "itemInEditMode.transcript.isLoaded", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.program(24, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 16: function (a, c, d, b) {
			b.buffer.push('<div id="transcriptBody">');
			d = c.each.call(a, "itemInEditMode.transcript.content",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(17, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "itemInEditMode.transcript.content.length", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, 17: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<div class="clear"></div>');
			return ""
		}, 19: function (a, c, d, b) {
			a = c["if"].call(a, "itemInEditMode.isVisitor", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.program(22, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 20: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "no_transcript_visitor", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 22: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_transcript_ip", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 24: function (a, c, d, b) {
			a = c["if"].call(a, "itemInEditMode.transcript.isError",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(25, b),
					inverse: this.program(27, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 25: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="load-container text-center"><button class="btn btn-danger reload-view">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "transcript_error", {
				name: "I18n", hash: {context: "ban_list"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button></div>");
			return ""
		}, 27: function (a, c, d, b) {
			b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
		}, 29: function (a, c, d, b) {
			a = c["if"].call(a, "itemInEditMode.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 30: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<button type="button" class="btn btn-danger delete-ban" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "itemInEditMode.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-propertyId": "itemInEditMode.propertyId"},
				hashTypes: {"data-propertyId": "STRING"},
				hashContexts: {"data-propertyId": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><div><h4 class="modal-title" id="myModalLabel"><i class="fa fa-scissors" alt="test"></i>');
			d = c["if"].call(a, "itemInEditMode.newEntry", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</h4></div></div><div class="modal-body" style="overflow:auto;"><form id="ban-form" name="ban-form" class="smart-form"><input type="hidden" id="ban-id" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "itemInEditMode.id"},
				hashTypes: {value: "ID"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /><input type="hidden" id="ban-type" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "itemInEditMode.type"},
				hashTypes: {value: "ID"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><section>");
			d = c["if"].call(a, "itemInEditMode.newEntry", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</section><section>");
			d = c["if"].call(a, "itemInEditMode.newEntry", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.program(11, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</section><section><label class="label" for="ban-reason">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_reason", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea">');
			b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
				name: "textarea",
				hash: {
					valueBinding: "itemInEditMode.reason",
					name: "ban-reason",
					id: "ban-reason",
					rows: "3",
					"class": "required",
					placeholderKey: "enter_ban_reason"
				},
				hashTypes: {
					valueBinding: "STRING",
					name: "STRING",
					id: "STRING",
					rows: "STRING",
					"class": "STRING",
					placeholderKey: "STRING"
				},
				hashContexts: {valueBinding: a, name: a, id: a, rows: a, "class": a, placeholderKey: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section></form>");
			d = c["if"].call(a, "itemInEditMode.transcript.content.length",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(13, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "itemInEditMode.newEntry", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"close", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</button>");
			d = c.unless.call(a, "itemInEditMode.newEntry", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(29, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<button type="button" class="btn btn-primary" id="submit">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.browserAppSessions = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			a = c.each.call(a, "existingSessions.list", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 2: function (a, c, d, b) {
			var e =
				this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div><div class="session-info pull-left"><span ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "this.countryFlag"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></span>&nbsp;<span ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "this.browser"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></span>&nbsp;<span>");
			d = c._triageMustache.call(a, "ip", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></div><div class="pull-right">');
			d = c["if"].call(a, "removing", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "errorRemoving", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(5, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<button class="btn btn-tawk-pink btn-sm end-session" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "this.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "end_session", {
				name: "I18n",
				hash: {context: "browser_app_sessions"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div><div class="clearfix"></div>');
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push("<i class='fa fa-refresh fa-spin'></i>")
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span class="label label-danger"><i class="fa-fw fa fa-warning"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "end_session_fail", {
				name: "I18n",
				hash: {context: "browser_app_sessions"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 7: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="no-data"><p class="no-history">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "empty_session_list", {
				name: "I18n",
				hash: {context: "browser_app_sessions"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div>");
			return ""
		}, 9: function (a, c, d, b) {
			a = c["if"].call(a, "view.error", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.program(12, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 10: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="load-container text-center"><button class="btn btn-danger reload-view">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "reload_error", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div>");
			return ""
		}, 12: function (a, c, d, b) {
			b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><div><h4 class="modal-title" id="myModalLabel"><i class="fa fa-user" alt="test"></i><span class="modal-title-tawk">&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "browser_app_sessions", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></h4></div></div><div class="modal-body">');
			d = c["if"].call(a, "view.loaded", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(9, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.agentChat = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-group"></i>')
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "view.content.status :agent-status"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("></i>");
			return ""
		}, 5: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.content.groupName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "view.content.name", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})))
		}, 9: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn invite-groups" rel="tooltip" data-placement="bottom" data-original-title="Invite agent to groups"><i class="fa fa-group"></i><i class="fa fa-plus" style="font-size: 10px;"></i></a>')
		}, 11: function (a, c, d, b) {
			b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0; float: right;"><li class="open-view open-group-details active"><a href="javascript:void(0);" class="tab" rel="tooltip" data-toggle="dropdown" data-placement="bottom"><i class="fa fa-info"></i></a></li></ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown"><li><a href="javascript:void(0);" class="open-group-details text-left"><i class="fa fa-ticket"></i> Group Details</a></li>');
			a = c["if"].call(a, "view.menuFits", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul></div>");
			return ""
		}, 12: function (a, c, d, b) {
			b.buffer.push('<li><a href="javascript:void(0);" class="edit-group-name text-left"><i class="fa fa-edit"></i> Edit group name</a></li><li><a href="javascript:void(0);" class="invite-member text-left"><i class="fa fa-user fa-lg"></i><i class="fa fa-plus" style="font-size: 12px;"></i> Add Member</a></li><li><a href="javascript:void(0);" class="leave-group text-left"><i class="fa fa-sign-out fa-lg"></i> Leave group</a></li>')
		},
		14: function (a, c, d, b) {
			b.buffer.push('<div class="alert alert-danger fade in text-center" style="z-index: 1; position:absolute; top :  0; left : 0; right : 0;"><button class="close" data-dismiss="alert">\u00d7</button><a href="javascript:void(0);" style="color : #fff; text-decoration: underline;" class="reload-message">Unable to load messages. Click here to retry.</a></div>')
		}, 16: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="unseen-message-container" style="z-index: 1; top : 0;"><span class="text">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_messages", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span><i class="fa fa-arrow-up"></i><a class="mark-read" href="javascript:void(0);" style="position: absolute;right: 8px;color: #fff;border-left: 1px solid #fff;padding-left: 8px;top: 0; bottom: 0;" data-placement="bottom" data-original-title="Mark as read"><i class="fa fa-close"></i></a></div>');
			return ""
		}, 18: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":agent-chat-older view.isLoadingHistory:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><p>");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "scroll_up_to_load", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div>");
			return ""
		}, 20: function (a, c, d, b) {
			b.buffer.push('<div class="loading-old-chat"><img src="https://static-a.tawk.to/v2/a34/images/ajax-loader-small.gif" /></div>')
		}, 22: function (a, c, d, b) {
			b.buffer.push('<div class="date-container"><div class="line"></div><div class="date">');
			d = c._triageMustache.call(a, "date", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			d = c.each.call(a,
				"inner", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(23, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			return ""
		}, 23: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="conversation-block"><p class="agent-name">');
			b.buffer.push(d(c._triageMustache.call(a, "agentName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><div class="clear"></div>');
			a = c.each.call(a, "messages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push('</div><div class="clear"></div>');
			return ""
		}, 24: function (a, c, d, b) {
			var e = this.escapeExpression;
			d = c["if"].call(a, "co", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(25, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="conversation-content">');
			b.buffer.push(e(c._triageMustache.call(a, "m", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			d = c["if"].call(a, "isNew", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 25: function (a, c, d, b) {
			b.buffer.push('<div class="msg-time">');
			a = c._triageMustache.call(a, "co", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 27: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="new-message-container"><div class="left-border"><div class="border"></div></div><div class="text">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_messages", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div class="right-border"><div class="border"></div></div></div>');
			return ""
		}, 29: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="alert alert-info fade in"><button class="close" data-dismiss="alert">\u00d7</button>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "invited_group", {
				name: "I18n",
				hash: {context: "agent_chat"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 31: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="chat-details-container" style="white-space: normal;"><div class="details-container"><div class="details-view menu-content"><div class="section-header" style="display: none;"><div class="title-container"><p>');
			d = c._triageMustache.call(a, "view.sectionHeader", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div class="group-members-container" style="position : relative; width : 100%; height : 100%"><div style="position : absolute; top : 0; bottom : 0; height : auto; width : auto; overflow : auto; left : 10px; right : 10px;"><h3><i class="fa fa-group"></i> ');
			d = c._triageMustache.call(a, "view.content.participants.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(' Members</h3><ul class="list-unstyled" style="list-style: none; padding : 5px;">');
			d = c.each.call(a, "view.content.participants", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(32, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div></div><div class="hidden agents-list smart-form floating-view-container" style="width: 100%; height : 100%;"><div style="position : absolute; top : 0; bottom : 45px; height : auto; left : 0; right : 0; width : auto; padding : 0 8px;"><div class="select-group-container"><label class="select">');
			d = c._triageMustache.call(a, "webPropertySelect", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</label></div><div><label class="input"><input type="text" class="filter-agent" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "find_agent", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></div>');
			d = c["if"].call(a, "view.agentList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(34, b),
				inverse: this.program(41, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div style="position: absolute; bottom : 0; height : 40px; width : 100%; text-align : center; border-top: 1px solid #ccc;"><button type="submit" class="btn btn-default close-agent-list" style="margin: 4px 2%;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-primary select-agents" style=" margin: 4px 2%;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div><div class="group-name-form-container hidden floating-view-container" style="width: 100%; height : 100%;"><form class="group-name-form smart-form" name="group-name-form" style="width: 100%; height : 100%; padding : 10px;"><fieldset><section><label class="input"><input type="text" class="required groupNameFormat group-name" placeholder="Group Name" maxlength="21" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.content.name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section></fieldset><footer><button class="btn btn-primary save-name">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-default cancel-name-edit">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></form></div></div></div></div><div class="details-button-container"><button class="btn btn-default button-icon edit-group-name" data-placement="top"data-original-title="Edit Group Name"><i class="fa fa-edit"></i></button><button class="btn btn-primary button-icon invite-member" data-placement="top"data-original-title="Add Member"><i class="fa fa-user fa-lg"></i><i class="fa fa-plus" style="font-size: 12px;"></i></button><button class="btn btn-danger button-icon leave-group" rel="tooltip" data-placement="top"data-original-title="Leave Group" ><i class="fa fa-sign-out fa-lg"></i></button></div><i class="fa fa-ellipsis-v"></i></div>');
			return ""
		}, 32: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li style="margin-bottom : 10px;"><div><p style="margin : 0; white-space: pre-wrap; word-wrap: break-word;"><i ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "status :agent-status"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</p></div></li>");
			return ""
		}, 34: function (a, c, d, b) {
			b.buffer.push('<ul class="list-unstyled" style="position: absolute; top : 100px; bottom : 0; overflow : auto; left : 8px; right : 8px; width : auto;">');
			a = c["if"].call(a, "view.filterMatch", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(35, b),
				inverse: this.program(39, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		},
		35: function (a, c, d, b) {
			a = c.each.call(a, "view.agentList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(36, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 36: function (a, c, d, b) {
			a = c["if"].call(a, "isShown", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(37, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 37: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li class="padding-5" style="word-wrap: break-word;"><label class="checkbox"><input type="checkbox" name="checkbox" class="agent-select" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></li>");
			return ""
		}, 39: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="empty-list-message">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_agent_match_filter", {
				name: "I18n",
				hash: {context: "other_html"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 41: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="empty-list-message">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_agent_to_invite_in_current_list", {
				name: "I18n",
				hash: {context: "other_html"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 43: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="chat-details-container group-invitation-list hidden"><div class="details-container"><div class="details-view menu-content"><div class="section-header" style="display: none;"><div class="title-container"><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "details", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div class="smart-form invite-groups-form floating-view-container" style="padding : 10px;"><fieldset>');
			d = c["if"].call(a, "view.availableGroups.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(44, b),
				inverse: this.program(47, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset><footer><button class="btn btn-primary select-groups" style=" margin: 4px 2%;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-default close-groups-list" style="margin: 4px 2%;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></div></div></div></div><div class="details-button-container"></div></div>');
			return ""
		}, 44: function (a, c, d, b) {
			b.buffer.push('<p style="margin-bottom : 10px;">Select the groups you would like to invite this agent to :</p><section><label class="checkbox"><input type="checkbox" class="all-groups" name="all-groups" /><i></i>Select All</label><hr/></section>');
			a = c.each.call(a, "view.availableGroups", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(45, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push('<div class="message-container" style="position: absolute; bottom : 0; left :0; right : 0;"></div>');
			return ""
		}, 45: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<section><label class="checkbox"><input type="checkbox" class="group-participants" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "groupId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "groupName"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' name="group-list[]" /><i></i>');
			a = c._triageMustache.call(a, "groupName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label></section>");
			return ""
		}, 47: function (a, c, d, b) {
			b.buffer.push('<div class="empty-list-message">This agent is already part of all your groups.</div>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":jarviswidget view.content.inView:focus-chat newChat:unseen"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-widget-editbutton="false" data-widget-custombutton="false" data-widget-fullscreenbutton="false"><header ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":chat-header view.content.newMessage:flash-new-message"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: relative;"><ul class="header-list"><li class="name-text-container"><div class="name-container"><div class="agent-status-container">');
			d = c["if"].call(a, "view.content.isGroup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><h2 class="name-text">');
			d = c["if"].call(a, "view.content.isGroup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</h2></div></li><li class="menu-container" style="float: right; margin-left : -100%;"><div class="jarviswidget-ctrls" role="menu">');
			d = c.unless.call(a, "view.content.isGroup", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn popout-chat" rel="tooltip" data-placement="bottom" data-original-title="Popout chat window"><i class="fa fa-external-link fa-rotate-90"></i></a><a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn end-chat" rel="tooltip" title="" data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "end", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a></div>');
			d = c["if"].call(a, "view.content.isGroup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></li><ul/></header><div class="chat-message-container"><div class="chat-content-container" role="content">');
			d = c["if"].call(a, "view.content.loadError", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.content.hasMoreUnseen", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="chat-body custom-scroll scrollable-view"><div class="chat-table-wrapper"><div class="chat-row-wrapper"><div class="chat-wrapper">');
			d = c["if"].call(a, "view.content.hasOlder", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="previouschat-content padding-10">');
			d = c["if"].call(a, "view.isLoadingHistory", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "view.content.previousConversation", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="chat-content padding-10"></div>');
			d = c["if"].call(a, "view.content.invited", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(29, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a, "view.content.invited", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(29, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div><div class="chat-footer"><div class="textarea-div"><div class="drop-text"><span>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "drag_drop_text", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></div><div class="typearea"><a class="open-emoji" href="javascript:void(0);"><i class="fa fa-smile-o"></i></a><textarea class="custom-scroll chat-input message-input" style="height: 40px; min-height : auto; overflow-y: hidden;"></textarea></div></div></div></div>');
			d = c["if"].call(a, "view.content.isGroup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(31, b),
				inverse: this.program(43, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.popoutAgentChat = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<span style=" width: 120px;"><i class="fa fa-group"></i>');
			a = c._triageMustache.call(a, "groupName", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<span  style=" width: 120px;"><i ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {title: "status"},
				hashTypes: {title: "STRING"},
				hashContexts: {title: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 5: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<a href="javascript:void(0);" class="control edit-group" data-original-title="Edit Group Name" data-placement="bottom"><i class="fa fa-edit fa-lg"></i></a><a href="javascript:void(0);"  class="control invite-agents" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "view.agentTooltip"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="bottom"><i class="fa fa-user fa-lg"></i><span class="total-participants">');
			d = c._triageMustache.call(a, "participants.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></a><a href="javascript:void(0);" class="control leave-group pull-right" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "leave_group", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="bottom"><i class="fa fa-sign-out fa-lg"></i></a>');
			return ""
		}, 7: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);" class="control invite-groups" data-original-title="Invite agent to groups" data-placement="bottom"><i class="fa fa-group"></i><i class="fa fa-plus"></i></a>')
		},
		9: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="group-participants smart-form"><ul class="list-unstyled">');
			d = c.each.call(a, "participants", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul><footer><button type="submit" class="btn btn-default close-agent-list">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-primary add-agents">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></div><div class="group-name-container smart-form"><form class="group-name-form" name="group-name-form"><fieldset><section><label class="input"><input type="text" class="required groupNameFormat group-name" placeholder="Group Name" maxlength="21" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></section></fieldset><footer><button type="submit" class="btn btn-default close-group-form">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-primary save-name">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></form></div><div class="agents-list smart-form"><div class="select-group-container" style="padding : 5px;"><label class="select">');
			d = c._triageMustache.call(a, "webPropertySelect", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</label></div><div style="padding : 5px;"><label class="input"><input type="text" class="filter-agent" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "find_agent", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></div>');
			d = c["if"].call(a, "view.agentList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.program(19, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<footer><button type="submit" class="btn btn-default close-agent-list">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-primary select-agents">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button></footer></div>");
			return ""
		}, 10: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "status"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i></i><p class="agent-name">');
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache", hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"}, hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</p></li>");
			return ""
		}, 12: function (a, c, d, b) {
			b.buffer.push('<ul class="list-unstyled member-list">');
			a = c["if"].call(a, "view.filterMatch", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.program(17, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, 13: function (a, c, d, b) {
			a = c.each.call(a, "view.agentList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 14: function (a, c, d, b) {
			a = c["if"].call(a, "isShown", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 15: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li><label class="checkbox"><input type="checkbox" name="checkbox" class="agent-select" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></li>");
			return ""
		}, 17: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="empty-list-message">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_agent_match_filter", {
				name: "I18n",
				hash: {context: "other_html"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 19: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="empty-list-message">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_agent_to_invite_in_current_list", {
				name: "I18n",
				hash: {context: "other_html"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 21: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="group-invitation-list hidden smart-form"><ul class="list-unstyled">');
			d = c["if"].call(a, "view.availableGroups.length", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(22, b), inverse: this.program(25, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul><div class="message-container" style="position: absolute; bottom : 0; z-index : 1;"></div><footer><button type="submit" class="btn btn-default close-groups-list">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			d = c["if"].call(a, "view.availableGroups.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</footer></div>");
			return ""
		}, 22: function (a, c, d, b) {
			b.buffer.push('<li>Select the groups you would like to invite this agent to :</li><li><label class="checkbox"><input type="checkbox" class="all-groups" name="all-groups" /><i></i>Select All</label><hr/></li>');
			a = c.each.call(a, "view.availableGroups",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(23, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			return ""
		}, 23: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li><label class="checkbox"><input type="checkbox" class="group-participants" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "groupId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-id": "groupName"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' name="group-list[]" /><i></i>');
			a = c._triageMustache.call(a, "groupName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label></li>");
			return ""
		}, 25: function (a, c, d, b) {
			b.buffer.push("This agent is already part of all your groups.")
		}, 27: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button type="submit" class="btn btn-primary select-groups">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "invite", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, 29: function (a, c, d, b) {
			b.buffer.push('<div class="alert alert-danger fade in text-center" style="z-index: 1; position:absolute; top :  0; left : 0; right : 0;"><button class="close" data-dismiss="alert">\u00d7</button><a href="javascript:void(0);" style="color : #fff; text-decoration: underline;" class="reload-message">Unable to load messages. Click here to retry.</a></div>')
		},
		31: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="unseen-message-container" style="z-index: 1; top : 0;"><span class="text">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_messages", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span><i class="fa fa-arrow-up"></i><a class="mark-read" href="javascript:void(0);" style="position: absolute;right: 8px;color: #fff;border-left: 1px solid #fff;padding-left: 8px;top: 0; bottom: 0;" data-placement="bottom" data-original-title="Mark as read"><i class="fa fa-close"></i></a></div>');
			return ""
		}, 33: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":agent-chat-older view.isLoadingHistory:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><p>");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "scroll_up_to_load", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div>");
			return ""
		}, 35: function (a, c, d, b) {
			b.buffer.push('<div class="loading-old-chat"><img src="https://static-a.tawk.to/v2/a34/images/ajax-loader-small.gif" /></div>')
		}, 37: function (a, c, d, b) {
			b.buffer.push('<div class="date-container"><div class="line"></div><div class="date">');
			d = c._triageMustache.call(a, "date", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			d = c.each.call(a,
				"inner", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(38, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			return ""
		}, 38: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="conversation-block"><p class="agent-name">');
			b.buffer.push(d(c._triageMustache.call(a, "agentName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><div class="clear"></div>');
			a = c.each.call(a, "messages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(39, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push('</div><div class="clear"></div>');
			return ""
		}, 39: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div class="msg-time">');
			d = c._triageMustache.call(a, "co", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="conversation-content">');
			b.buffer.push(e(c._triageMustache.call(a, "m", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			d = c["if"].call(a, "isNew", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(40, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 40: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="new-message-container"><div class="left-border"><div class="border"></div></div><div class="text">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_messages", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div class="right-border"><div class="border"></div></div></div>');
			return ""
		}, 42: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="alert alert-info fade in"><button class="close" data-dismiss="alert">\u00d7</button>');
			b.buffer.push(e((c.I18n || a && a.I18n ||
				d).call(a, "invited_group", {
				name: "I18n",
				hash: {context: "agent_chat"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="ui-widget ui-chatbox"><div class="ui-widget-header ui-chatbox-titlebar ui-dialog-header" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-chat-status": "status"},
				hashTypes: {"data-chat-status": "STRING"},
				hashContexts: {"data-chat-status": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a, "isGroup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<a href="javascript:void(0);" data-placement="top" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "hide", {
				name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" class="ui-chatbox-icon close-chat" role="button"><i class="fa fa-times"></i></a><a href="javascript:void(0);" data-placement="top" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "minimize", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" class="ui-chatbox-icon minimize-chat" role="button"><i class="fa fa-minus"></i></a><a href="javascript:void(0);" data-placement="top" data-original-title="Inline chat view" class="ui-chatbox-icon popin-chat" role="button"><i class="fa fa-external-link fa-flip-horizontal"></i></a></div><div class="ui-widget-content ui-chatbox-content"><div class="agent-chat-controls pull-right">');
			d = c["if"].call(a, "isGroup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="clearfix"></div>');
			d = c["if"].call(a, "isGroup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.program(21, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.content.loadError", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(29, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.content.hasMoreUnseen", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(31, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":ui-widget-content :ui-chatbox-log isGroup::agent-view :scrollable-view"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			d = c["if"].call(a, "hasOlder", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(33, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="previouschat-content">');
			d = c["if"].call(a, "view.isLoadingHistory", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(35, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "previousConversation", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(37, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="chat-content"></div>');
			d = c["if"].call(a, "view.content.invited", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(42, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="ui-widget-content ui-chatbox-input"><textarea class="ui-widget-content ui-chatbox-input-box"></textarea><a class="open-emoji" href="javascript:void(0);"><i class="fa fa-smile-o"></i></a></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.agentChatContainer = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-groupid": "this.groupId"},
				hashTypes: {"data-groupid": "STRING"},
				hashContexts: {"data-groupid": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);" ');
			b.buffer.push(d(c.action.call(a, "showHiddenChat", "groupId", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
			b.buffer.push('><span class="name">');
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</span><span class="fa fa-times close-hidden-chat"></span></a></li>');
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.popoutAgentChat || a && a.popoutAgentChat || d).call(a, {
				name: "popoutAgentChat",
				hash: {idBinding: "this.groupId", contentBinding: "this"},
				hashTypes: {idBinding: "STRING", contentBinding: "STRING"},
				hashContexts: {idBinding: a, contentBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		},
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			b.buffer.push('<div id="hiddenChatListContainer" class="hidden"><a id="openHiddenList" href="javascript:void(0);" class="btn btn-default" data-toggle="dropdown"><i class="fa fa-comments-o fa-lg"></i><span>');
			d = c._triageMustache.call(a, "hiddenChatList.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><i class="fa fa-caret-up"></i></a><ul id="hiddenList" class="dropdown-menu" role="dropdown">');
			d = c.each.call(a, "hiddenChatList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></div>");
			d = c.each.call(a, "popoutChatList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.clientDataView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<ul style="padding-left : 15px;"><li><p><b>Primary Objective :</b></p><p>');
			d = c._triageMustache.call(a, "view.content.objectives.0.content", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></li><li><p><b>Secondary Objective :</b></p><p>");
			d = c._triageMustache.call(a, "view.content.objectives.1.content", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></li><li><p><b>Tertiary Objective :</b></p><p>");
			d = c._triageMustache.call(a, "view.content.objectives.2.content", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></li></ul>");
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push("<p>No data provided</p>")
		}, 5: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<div><p><b>Business Name :</b><br />");
			d = c._triageMustache.call(a, "view.content.business.name", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div><div><p><b>Business Website :</b><br /><a ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "view.content.business.url"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank">');
			d = c._triageMustache.call(a, "view.content.business.url", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d &&
			b.buffer.push(d);
			b.buffer.push("</a></p></div><div><p><b>Business Address :</b><br />");
			d = c._triageMustache.call(a, "view.content.business.address", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div><div><p><b>Business Number :</b><br />");
			d = c._triageMustache.call(a, "view.content.business.phone", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div><div><p><b>Business Email :</b><br />");
			d = c._triageMustache.call(a, "view.content.business.email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div><div><p><b>Business Facebook :</b><br />");
			d = c._triageMustache.call(a, "view.content.business.fb", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div><div><p><b>Business Twitter :</b><br />");
			d = c._triageMustache.call(a, "view.content.business.twitter", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div><div><p><b>Contact Person Name :</b><br />");
			d = c._triageMustache.call(a, "view.content.business.contactPerson.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div><div><p><b>Contact Person Email :</b><br />");
			d = c._triageMustache.call(a, "view.content.business.contactPerson.email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div><div><p><b>Contact Person Number :</b><br /");
			d = c._triageMustache.call(a, "view.content.business.contactPerson.phone", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></div>");
			return ""
		}, 7: function (a,
		                c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<p>");
			b.buffer.push(e((c.breaklines || a && a.breaklines || d).call(a, "", {
				name: "breaklines",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p>");
			return ""
		}, 9: function (a, c, d, b) {
			b.buffer.push('<ol style="padding-left : 15px;">');
			a = c.each.call(a, "view.content.faqs", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a &&
			b.buffer.push(a);
			b.buffer.push("</ol>");
			return ""
		}, 10: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push("<li><p><b>");
			d = c._triageMustache.call(a, "q", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</b><br />");
			b.buffer.push(f((c.breaklines || a && a.breaklines || e).call(a, "a", {
				name: "breaklines",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></li>");
			return ""
		}, 12: function (a, c, d, b) {
			b.buffer.push('<ol style="padding-left : 15px;">');
			a = c.each.call(a, "view.content.emergency", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ol>");
			return ""
		}, 13: function (a, c, d, b) {
			b.buffer.push("<li><p>Name : ");
			d = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p><p>Title : ");
			d = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p><p>Email : ");
			d = c._triageMustache.call(a, "email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p><p>Phone : ");
			d = c._triageMustache.call(a, "phone", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></li>");
			return ""
		}, 15: function (a, c, d, b) {
			b.buffer.push('<ol style="padding-left : 15px;">');
			a = c.each.call(a, "view.content.reputation", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ol>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>Client Data</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isLoading:hidden :padding-10"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="smart-form"><label class="select"><select id="client-data-select"><option value="objectives">Objectives</option><option value="business">Business</option><option value="offering">Offering</option><option value="culture">Culture</option><option value="faqs">FAQs</option><option value="emergency">Emergency Contacts</option><option value="reputation">Reputation</option></select><i></i></label></div><div id="objectives-view" class="client-data padding-10">');
			d = c["if"].call(a, "view.content.objectives", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="business-view" class="client-data hidden padding-10">');
			d = c["if"].call(a, "view.content.business", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="offering-view" class="client-data hidden padding-10"><p><b>Products and / service offerings</b></p>');
			d = c["with"].call(a, "view.content.offering", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="culture-view" class="hidden client-data padding-10"><p><b>Company\'s culture</b></p>');
			d = c["with"].call(a, "view.content.culture", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d &&
			b.buffer.push(d);
			b.buffer.push('</div><div id="faqs-view" class="client-data padding-10 hidden"><p><b>FAQs</b></p>');
			d = c["if"].call(a, "view.content.faqs.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="emergency-view" class="client-data padding-10 hidden"><p><b>Emergency Contacts</b></p>');
			d = c["if"].call(a, "view.content.emergency.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="reputation-view" class="client-data padding-10 hidden"><p><b>Business Reputation</b></p>');
			d = c["if"].call(a, "view.content.reputation.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isLoading::hidden :text-center"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 100px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorChatContainer = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "simulate_chat", {
				name: "I18n",
				hash: {
					variables: '{"lineStart" : "<h5>", "lineEnd" : "</h5>", "linkStart3" : "<a href=\'javascript:void(0);\' id=\'simulate-chat\'>", "linkEnd3" : "</a>", "linkStart1" : "<a href=\'javascript:void(0);\' id=\'view-sites\'>", "linkEnd1" : "</a>", "linkStart2" : "<a href=\'javascript:void(0);\' id=\'view-pages\'>", "linkEnd2" : "</a>"}',
					context: "visitors"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "simulate_chat_active", {
				name: "I18n",
				hash: {
					variables: '{"lineStart" : "<h5>", "lineEnd" : "</h5>", "linkStart3" : "<a href=\'javascript:void(0);\' id=\'simulate-chat\'>", "linkEnd3" : "</a>", "linkStart1" : "<a href=\'javascript:void(0);\' id=\'view-sites\'>", "linkEnd1" : "</a>", "linkStart2" : "<a href=\'javascript:void(0);\' id=\'view-pages\'>", "linkEnd2" : "</a>"}',
					context: "visitors"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3"><h1 class="page-title txt-color-blueDark"><i class="fa-fw fa fa-comments"></i><p id="view-title">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"view_title", {
					name: "I18n",
					hash: {context: "visitors"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</p></h1></div><div class="col-xs-9 col-sm-9 col-md-9 col-lg-9"><div style="display: table;"><div style="display: table-cell; width: 1%"><div id="visitor-chat-action-container"><i id="button-details-toggle" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa :fa-columns view.isChatDetailsHidden::active"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' aria-hidden="true" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "view.sidebarToggleTooltip"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="bottom"></i><div class="btn-group"><a id="prev-chat" class="btn btn-default btn-circle disabled prev" href="javascript:void(0);" data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "previous_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-chat" class="btn btn-default btn-circle disabled next" href="javascript:void(0);" data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "next_text", {
				name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-right"></i></a></div><div class="slider-container"><div id="slider"></div><div class="tooltip fade bottom" style="top: 20px;"><div class="tooltip-arrow" style="left: 0%;"></div><div class="tooltip-inner" style="width: 80px; margin-left: -40px;"></div></div></div></div></div></div></div></div><div id="inner-content" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "view.columnStyle :innerContent"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><div id="chat-scroller"><div id="no-chat-message" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":well :text-center view.chatListView.length:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="simulate-chat-text">');
			a = c.unless.call(a, "Tawk.liveMonitoringController.allServedList.length", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div></div></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.transcriptCopyView = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container" ><p>Copy Transcript</p></div><div class="icon-container"><a class="close-copy-form btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><form class="smart-form"><fieldset><label class="textarea" style="height: 100%;">');
			b.buffer.push(e((c.textarea || a && a.textarea || d).call(a, {
				name: "textarea",
				hash: {readonly: "true", "class": "copy-transcript", valueBinding: "view.copyContent"},
				hashTypes: {readonly: "STRING", "class": "STRING", valueBinding: "STRING"},
				hashContexts: {readonly: a, "class": a, valueBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></fieldset><footer><button type="button" class="btn btn-primary copy-clipboard">Copy</button><button type="button" class="btn btn-default close-copy-form">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.transcriptEmailView = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container" ><p>Email Transcript</p></div><div class="icon-container"><a class="close-notes btn btn-default btn-sm back-to-main-view" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><form class="smart-form emailTranscript"><fieldset><section><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email_recipients", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea"> <i class="icon-append fa fa-question-circle"></i><textarea id="emails" name="emails" class="emails" rows="4"></textarea><b class="tooltip tooltip-top-right "><i class="fa fa-warning txt-color-teal"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email_info",
				{
					name: "I18n",
					hash: {context: "history"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</b></label></section></fieldset><footer><button type="submit" class="btn btn-primary sendEmail">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-default close-email-form">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorChat = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0;">');
			d = c.each.call(a, "view.tabSettings", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown">');
			d = c.each.call(a, "view.tabSettings", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(15, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.menuFits", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div class="clearfix"></div>');
			return ""
		}, 2: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isMenu:dropdown:open-view"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-type": "label"},
				hashTypes: {"data-type": "STRING"},
				hashContexts: {"data-type": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":tab isMenu:main-menu"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' rel="tooltip" data-toggle="dropdown" data-placement="bottom" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "title"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a,
				"isInternal", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(3, b),
					inverse: this.program(5, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a>");
			d = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</li>");
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa fontClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>");
			return ""
		}, 5: function (a, c, d, b) {
			b.buffer.push('<span class="menu-title">');
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
				contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 7: function (a, c, d, b) {
			b.buffer.push('&nbsp;<b class="caret"></b>')
		}, 9: function (a, c, d, b) {
			b.buffer.push('<ul class="dropdown-menu" role="dropdown">');
			a = c.each.call(a, "items", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, 10: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="open-view inner-item" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-type": "label"},
				hashTypes: {"data-type": "STRING"},
				hashContexts: {"data-type": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);">');
			a = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa fontClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>&nbsp;");
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache", hash: {}, hashTypes: {},
				hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 13: function (a, c, d, b) {
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 15: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isMenu:dropdown-submenu:open-view"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.program(19, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</li>");
			return ""
		}, 16: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);" class="minimized-dropdown left text-left" data-toggle="dropdown">');
			d = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a><ul class="dropdown-menu multi-level"  style="right:100%; left : auto;">');
			d = c.each.call(a, "items", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul>");
			return ""
		}, 17: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="open-view inner-item"><a href="javascript:void(0);" class="text-left">');
			a = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, 19: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);" class="text-left">');
			a = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a>");
			return ""
		}, 21: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a href="javascript:void(0);" class="ticket-create open-subview text-left"><i class="fa fa-ticket"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "create_ticket", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="copy-select text-left"><i class="fa fa-clipboard"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "copy_transcript", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="print-select text-left"><i class="fa fa-print"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "print", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			d = c.unless.call(a, "view.content.ns", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.content.isVisitorPresent", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 22: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a href="javascript:void(0);" class="add-note text-left"><i class="fa fa-edit"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 24: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a href="javascript:void(0);" class="tag-transcript text-left"><i class="fa fa-tags"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="ban-visitor text-left"><i class="fa fa-ban"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.content.ignore:hide :ignore-current-chat :text-left"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-eye-slash"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ignore_visitor", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 26: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="preview-chat-message padding-10">');
			b.buffer.push(d(c._triageMustache.call(a, "view.content.messagePreview", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('...<img src="https://static-a.tawk.to/v2/a34/images/pencil.gif" /></div>');
			return ""
		}, 28: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="preview-chat-message padding-10">');
			b.buffer.push(d(c._triageMustache.call(a, "message", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 30: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":select2-results-dept-1 :select2-result :select2-result-selectable suggestion.selected:select2-highlighted"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' role="presentation" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "suggestion.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' ><div class="select2-result-label" role="option" style="display: table;"><span style="display: table-cell;">');
			b.buffer.push(d(c._triageMustache.call(a, "suggestion.key", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;:&nbsp;</span><span style="white-space: normal; word-wrap: break-word; display: table-cell;">');
			b.buffer.push(d(c._triageMustache.call(a, "suggestion.fullMessage",
				{
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			a = c["if"].call(a, "suggestion.options", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(31, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span></div></li>");
			return ""
		}, 31: function (a, c, d, b) {
			b.buffer.push("[+]")
		}, 33: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div style="width: 100%; height: 100%;"><div class="drop-text"><span>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "drag_drop_text", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></div><div class="typearea"><a class="open-emoji" href="javascript:void(0);"><i class="fa fa-smile-o"></i></a><form enctype="multipart/form-data" class="upload-form" method="post"><input type="file" class="hidden file-input" name="file[]" multiple="multiple" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {id: "view.content.fileId"},
					hashTypes: {id: "STRING"},
					hashContexts: {id: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' /><label class="upload-file fa fa-paperclip fa-lg fa-flip-vertical input-tooltip" title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "upload_file", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"for": "view.content.fileId"},
				hashTypes: {"for": "STRING"}, hashContexts: {"for": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "upload_file", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="left"></label></form><div style="position: absolute;right: 28px;bottom: 10px;text-align: right;"><a class="video-call-visitor padding-5  input-tooltip" href="javascript:void(0);" style="color : #ccc; display: none;" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "video_call", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-video-camera fa-lg" style="font-weight: bold"></i></a><a class="phone-call-visitor padding-5 input-tooltip" href="javascript:void(0);" style="color : #ccc; display: none;" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "voice_call", {
				name: "I18n", hash: {context: "admin"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('"><i class="fa fa-phone fa-lg" style="font-weight: bold"></i></a><a class="screen-share-visitor padding-5  input-tooltip" href="javascript:void(0);" style="color : #ccc; display: none;" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "screen_share", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-desktop fa-lg" style="font-weight: bold;"></i></a></div><textarea placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "write_reply", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" class="custom-scroll chat-input message-input" style="height: 40px; min-height : 40px; overflow-y: hidden;"></textarea></div></div>');
			return ""
		}, 35: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="join-container"><div class="profile-overlay"></div><div ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":profile-select :smart-form view.content.isVisitorPresent::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c["if"].call(a, "view.content.isPersonalPage", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(36, b),
				inverse: this.program(38, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push('<div class="clearfix"></div></div></div>');
			return ""
		}, 36: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section class="only-button"><a href="javascript:void(0);" class="btn btn-primary join-chat">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "join", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></section>");
			return ""
		}, 38: function (a,
		                 c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="warning">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "another_joined_agent", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><label class="select"><select class="profile-id">');
			d = c.each.call(a, "view.content.agentProfiles", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(39, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select> <i></i></label><a href="javascript:void(0);" class="btn btn-primary join-chat">');
			d = c["if"].call(a, "view.requireConfirmation", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(41, b),
				inverse: this.program(43, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a><div><a href="javascript:void(0);" class="cancel-join-chat">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "no_join_chat", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></div>");
			return ""
		}, 39: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "aliasId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {selected: "isDefault"}, hashTypes: {selected: "STRING"},
				hashContexts: {selected: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "displayName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 41: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "yes_join_chat", {
				name: "I18n", hash: {context: "visitors"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})))
		}, 43: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "join", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 45: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="chat-details-container" style="white-space: normal;"><div class="details-container"><div class="details-view menu-content hidden"></div><div class="shortcuts-view menu-content hidden"></div><div class="history-view menu-content hidden"></div><div class="knowledgebase-view menu-content hidden" style="white-space: normal;"></div><div class="menu-content client-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content shopify-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content custom-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="floating-view hidden" style="white-space: normal;"></div></div><div class="details-button-container"><button class="btn btn-default button-icon ticket-create open-subview" rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "create_ticket", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ><i class="fa fa-ticket"></i></button><button class="btn btn-default button-icon copy-select" rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "copy_transcript", {
				name: "I18n", hash: {context: "visitors"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" ><i class="fa fa-clipboard"></i></button><button class="btn btn-default button-icon print-select" rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "print", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ><i class="fa fa-print"></i></button>');
			d = c.unless.call(a, "view.content.ns", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(46, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("<br />");
			d = c["if"].call(a, "view.content.isVisitorPresent", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(48, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><i class="fa fa-ellipsis-v"></i></div>');
			return ""
		}, 46: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button class="btn btn-default button-icon add-note" rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ><i class="fa fa-edit"></i></button>');
			return ""
		}, 48: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button class="btn btn-primary tag-transcript button-icon" rel="tooltip"data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat",
				{
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('"><i class="fa fa-tags"></i></button><button class="btn btn-danger ban-visitor button-icon" rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-ban"></i></button><button ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.content.ignore:hide :btn :btn-default :ignore-current-chat :button-icon"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ignore_visitor", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" style="background : #ddd;"><i class="fa fa fa-eye-slash"></i></button>');
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":jarviswidget view.content.inView:focus-chat"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-widget-editbutton="false" data-widget-custombutton="false" data-widget-fullscreenbutton="false"><header ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":chat-header view.content.cr:waiting view.content.incomingCall:waiting view.content.isClientProperty:client-property"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: relative;"><ul class="header-list"><li class="name-text-container"><div class="details-flag-container"><span ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "view.content.countryFlag"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('></span></div><h2 class="name-text">');
			d = c._triageMustache.call(a, "view.content.displayName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" - ");
			d = c._triageMustache.call(a, "view.content.propertyName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</h2></li><li class="menu-container"><div class="jarviswidget-ctrls" role="menu"><a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn end-chat" rel="tooltip" title="" data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "end", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a></div>');
			d = c["if"].call(a,
				"view.tabSettings.length", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</li></ul></header><div class="chat-message-container"><div class="chat-content-container" role="content"><div class="chat-body custom-scroll" style="bottom : 145px;"><div class="chat-table-wrapper"><div class="chat-row-wrapper"><div class="chat-wrapper"><div class="chat-content padding-10"></div>');
			d = c["if"].call(a,
				"view.content.messagePreview", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(26, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "view.content.typingAgents", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(28, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div></div><div class="select2-drop select2-drop-active hidden"><ul class="select2-results" role="listbox" >');
			d = c.each.call(a, "suggestion", "in", "view.suggestions", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></div><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.requireConfirmation:confirmation-requested :chat-footer"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><ul class="nav nav-tabs" style="position:absolute; bottom : 100%;"><li data-id ="reply-tab" class="open-tab-pane active"><a href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "message", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li data-id="whisper-tab" class="open-tab-pane whisper-tab"><a href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "whisper", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li></ul><div class="textarea-div tab-content" style="height : 100%;"><div class="tab-pane active reply-tab">');
			d = c["if"].call(a, "view.content.hasJoinedConversation", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(33, b),
				inverse: this.program(35, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="tab-pane whisper-tab"><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":profile-overlay view.content.isVisitorPresent:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></div><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":typearea view.content.isVisitorPresent::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a class="open-emoji" href="javascript:void(0);"><i class="fa fa-smile-o"></i></a><textarea placeholder="Whisper to agents in the chat. The visitor will not see this message." class="custom-scroll chat-input whisper-input" style="height: 60px; min-height : auto; overflow-y: hidden;"></textarea></div></div></div></div></div>');
			d = c["if"].call(a, "view.tabSettings.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(45, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorDetailsView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			a = c["if"].call(a, "view.content.visitor", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) :
				b.buffer.push("")
		}, 2: function (a, c, d, b) {
			b.buffer.push('<button class="icon-append btn btn-primary btn-xs save-visitor-attributes"><i class="fa fa-save"></i></button>')
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="textarea"><button class="icon-append btn btn-primary btn-xs save-visitor-attributes"><i class="fa fa-save"></i></button>');
			b.buffer.push(e((c.textarea || a && a.textarea || d).call(a, {
				name: "textarea",
				hash: {
					rows: "2", valueBinding: "view.content.notesValue",
					placeholderKey: "notes", "class": "visitor-note"
				},
				hashTypes: {rows: "STRING", valueBinding: "STRING", placeholderKey: "STRING", "class": "STRING"},
				hashContexts: {rows: a, valueBinding: a, placeholderKey: a, "class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label>");
			a = c["if"].call(a, "view.notesUpdatedBy", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</section>");
			return ""
		}, 5: function (a, c, d, b) {
			b.buffer.push('<p class="note">');
			a = c._triageMustache.call(a, "view.notesUpdatedBy", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</p>");
			return ""
		}, 7: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.content.cy", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push(",&nbsp;");
			return ""
		}, 9: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="device-detail" rel="popover" data-placement="right" data-content="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "duration", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c._triageMustache.call(a, "view.content.formattedDuration", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 11: function (a, c, d, b) {
			b.buffer.push('<div class="device-detail" rel="popover" data-placement="top" data-content="Chat Duration">');
			a = c._triageMustache.call(a, "view.chatDuration", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 13: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="device-detail" rel="popover" data-placement="top" data-content="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "chats", {
				name: "I18n", hash: {context: "sidebar"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('">');
			d = c._triageMustache.call(a, "view.content.cs", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" ");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "chats", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 15: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<li class="parent_li"><div class="timeline-label"><span class="label">');
			d = c._triageMustache.call(a, "time", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span>&nbsp;</div><div class="timeline-data">');
			b.buffer.push(e(c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d =
				c.each.call(a, "data", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(16, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></li>");
			return ""
		}, 16: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<p class="no-margin">');
			d = c._triageMustache.call(a, "key", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" : ");
			b.buffer.push(e(c._triageMustache.call(a,
				"value", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</p>");
			return ""
		}, 18: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div style="padding: 0 5px;"><i class="fa fa-chevron-right"></i>&nbsp;<a ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "view.content.rf"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('  target="_blank" class="linkable">');
			b.buffer.push(d(c._triageMustache.call(a, "view.content.rf", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></div>");
			return ""
		}, 20: function (a, c, d, b) {
			b.buffer.push('<div class="fields-container"  style="border-bottom : 0; border-top: 1px solid #ccc;"><ul class="attributes-list">');
			d = c["if"].call(a, "view.content.tags", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(21, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "view.content.customAttributes.data", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></div>");
			return ""
		}, 21: function (a, c, d, b) {
			b.buffer.push('<li style="margin-bottom: 8px;"><i class="fa fa-tags"></i>&nbsp;');
			a = c.each.call(a, "view.content.tags", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(22,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</li>");
			return ""
		}, 22: function (a, c, d, b) {
			b.buffer.push('<span class="label label-info">');
			a = c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 24: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<li><i class="fa fa-dot-circle-o"></i>&nbsp;');
			d = c._triageMustache.call(a,
				"key", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<br /><span style="padding-left: 10px">');
			b.buffer.push(e(c._triageMustache.call(a, "value", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></li>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "details", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div class="fields-container"><form class="smart-form visitor-attributes"><section><label class="input visitor-name-field">');
			d = c["if"].call(a, "view.content.isHistory", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(2, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<input type="text" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.content.visitorName"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="required visitor-name-input"placeholder="');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "visitor_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" style="padding-right : 38px;" /></label></section><section><label class="input">');
			d = c["if"].call(a, "view.content.isHistory", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(2, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<input type="text" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.content.e"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="email visitor-email-input"placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor_email", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"  style="padding-right : 38px;"/></label></section>');
			d =
				c["if"].call(a, "view.content.ns", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(4, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></form><div style="position: relative; word-wrap: break-word; white-space: pre-line; border : 1px solid #BDBDBD; padding: 5px 10px; min-height: 22px; line-height: 22px;"><div class="location-details"><div class="country-name hover-location" rel="popover" title="" data-placement="right" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "view.content.htn"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a, "view.content.cy", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "view.content.cn", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="pull-right"><span class="visitor-ip hover-location" rel="popover" title="" data-placement="top" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "view.content.htn"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c._triageMustache.call(a, "view.content.ip", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="visitor-time hover-location" rel="popover" title="" data-placement="bottom" data-content="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "local_time", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			d = c._triageMustache.call(a, "view.content.visitorLocalTime", {
				name: "_triageMustache", hash: {}, hashTypes: {},
				hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></div><div class="clearfix"></div></div></div></div><div class="fields-container"><div><div class="device-detail" rel="popover" data-placement="right" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "view.content.ua"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><span ");
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "view.content.browser"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' style="margin : 0 2px; vertical-align: middle;"></span><span ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.content.operatingSystem"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="vertical-align: middle;"></span><div class="clearfix"></div></div>');
			d = c["if"].call(a, "view.content.formattedDuration", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="device-detail" rel="popover" data-placement="right" data-content="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_visit", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			d = c._triageMustache.call(a, "view.minifiedVisit", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a, "view.content.isHistory", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div class="fields-container" style="border-bottom : 0;"><div class="chat-timeline-container tree">');
			d = c.each.call(a, "view.content.timeline", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.content.rf", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			d = c["if"].call(a, "view.hasCustomData", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(20,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorHistoryListView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push(" ");
			a = c._triageMustache.call(a, "view.propertyHistory.totalItems", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push(" ");
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push(" ... ")
		}, 5: function (a,
		                c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div style="position: absolute; top: 0;  bottom: 64px;  overflow: auto;  height: auto; width : 100%;"><table class="table table-hover history-table"><tbody>');
			d = c.each.call(a, "view.currentHistoryList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div class="history-list-footer"><div class="btn-group pull-right"><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :prev :prev-visitor-history-list view.content.historyList.hasPrevious::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Newer"><i class="fa fa-chevron-left"></i></a><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :next :next-visitor-history-list view.content.historyList.hasNext::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Older"><i class="fa fa-chevron-right"></i></a></div></div></div>');
			return ""
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<tr class="open-transcript open-subview" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "this._id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td class="agent-cell">');
			b.buffer.push(d(c._triageMustache.call(a, "agentsName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="time-cell text-center">');
			d = c._triageMustache.call(a, "time", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="messages-cell text-center">');
			d = c._triageMustache.call(a, "messageCount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 8: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="padding-10 text-center"><h5>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_history", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h5></div>");
			return ""
		}, 10: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 12: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div style="position: absolute; top: 0;  bottom: 64px;  overflow: auto;  height: auto; width : 100%;"><table class="table table-hover history-table"><tbody>');
			d = c.each.call(a, "view.currentPropertyHistoryList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div class="history-list-footer"><div class="btn-group pull-right"><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :prev :prev-property-history-list view.propertyHistory..hasPrevious::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Newer"><i class="fa fa-chevron-left"></i></a><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :next :next-property-history-list view.propertyHistory..hasNext::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Older"><i class="fa fa-chevron-right"></i></a></div><div></div>');
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<tr class="open-property-transcript open-subview" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "this._id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td class="agent-cell">');
			d = c._triageMustache.call(a, "visitorName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="time-cell text-center">');
			d = c._triageMustache.call(a, "time", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="messages-cell text-center">');
			d = c._triageMustache.call(a,
				"messageCount", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="history-list"><div class="section-header" style="display: none;"><div class="title-container"><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n", hash: {context: "history"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</p></div><div class="icon-container"><a class="btn btn-default btn-sm back-to-chat" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><ul class="nav"><li role="presentation" class="history-type-select"><a href="javascript:void(0);" class="history-type-tab view-visitor-history active">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor",
				{
					name: "I18n",
					hash: {context: "history"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push(" (");
			d = c._triageMustache.call(a, "view.content.historyList.totalItems", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(')</a></li><li role="presentation" class="history-type-select"><a href="javascript:void(0);" class="history-type-tab view-property-history">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "property", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" (");
			d = c["if"].call(a, "view.propertyHistory", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(")</a></li></ul><div ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "view.isLoading:hidden :search-container"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><div class="visitor-history">');
			d = c["if"].call(a, "view.currentHistoryList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="property-history hidden"><div class="padding-5"><form class="property-history-search"><fieldset><div class="input-group"><input type="text" class="form-control search-text" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /><div class="input-group-btn dropdown-menu-container" style="position: static;"><button type="button" class="btn btn-default openPropertyHistoryFilter" tabindex="-1" aria-expanded="false"><span class="caret"></span></button><button type="button" class="btn btn-primary search" tabindex="-1"><i class="fa fa-search"></i></button><div class="dropdown-menu smart-form" style="position: absolute;width: 100%;"><fieldset class="padding-5"><section class="col col-6"><label class="input"><input type="text" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "min_num_message", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" class="min-messages" /></label></section><section class="col col-6"><label class="input"><input type="text" name="tags" class="tags" data-role="tagsinput" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags", {
				name: "I18n", hash: {context: "conversations"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" name="from-date" class="from-date" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_from", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" name="to-date" class="to-date" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_to", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section><section class="col col-lg-12"><label class="select custom-select"><div><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : <span class="selected-value">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></p></div><i></i><select class="assignee"><option value="0">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			d = c.each.call(a, "view.agentList",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(10, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</select></label></section></fieldset><footer><button type="submit" class="btn btn-primary search"><i class="fa fa-search"></i></button><button type="submit" class="btn bg-color-teal txt-color-white resetPropertyHistoryFilter"><i class="fa fa-undo"></i></button><button type="submit" class="btn btn-default closePropertyHistoryFilter"><i class="fa fa-close"></i></button></footer></div></div></div></fieldset></form></div><div style="position: absolute; top : 44px; bottom : 0; left : 0; right : 0;">');
			d = c["if"].call(a, "view.currentPropertyHistoryList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div></div><div ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isLoading::hidden :text-center"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 34px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div></div><div class="transcript-view-container hidden"></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorKBListView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.kbContent.title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "knowledgebase", {
				name: "I18n", hash: {context: "header"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["STRING"], contexts: [a], data: b
			})))
		}, 5: function (a, c, d, b) {
			a = c.unless.call(a, "isDeleted", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 8: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<li class="padding-10" style="border-bottom : 1px solid #ddd;"><p style="font-size : 14px; margin : 0; font-weight : bold;"><a href="javascript:void(0);" style="color : #71a06a;" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' class="view-kb">');
			b.buffer.push(e(c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></b></p><p class="note" style="margin-top: 0; font-size: 12px;"><span class="pull-left" style="text-transform : uppercase;">');
			d = c._triageMustache.call(a, "categoryName",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="pull-right">');
			d = c._triageMustache.call(a, "createdOn", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="clearfix"></span></p><p>');
			b.buffer.push(e(c._triageMustache.call(a, "snippet", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</p></li>");
			return ""
		}, 10: function (a, c, d, b) {
			b.buffer.push('<li class="padding-10 text-center"><h5>No content.</h5></li>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>');
			d = c["if"].call(a, "view.kbContent", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.program(3,
					b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div><div class="icon-container"><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-sm view.kbContent:back-to-main-view:back-to-chat"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div class="kb-list"><form class="smart-form padding-10 search-kb"><section><label class="input"><input type="text" class="search-kb-text" placeholder="Search" /><div class="clean-filter-kb"><i class="fa fa-times" aria-hidden="true"></i></div></label></section><section><label class="select"><select class="search-kb-category"><option value="">Select Category</option>');
			d = c.each.call(a, "view.kbCategories", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></section></form><ul style="margin : 0; list-style: none; margin : 0; padding : 0; word-wrap : break-word; position : absolute; top : 100px; bottom : 53px; overflow : auto; left :0; right : 0;" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "view.isLoading:hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			d = c.each.call(a, "view.kbContentList.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.program(10, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul><div class="paged-list-footer"><div class="btn-group pull-right"><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :prev :prev-kb view.kbContentList.hasPrevious::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Newer"><i class="fa fa-chevron-left"></i></a><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :next :next-kb view.kbContentList.hasNext::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Older"><i class="fa fa-chevron-right"></i></a></div></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isLoading::hidden :text-center"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 100px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div><div class="kb-view hidden"><div class="editor-preview">');
			b.buffer.push(e(c._triageMustache.call(a, "view.kbContent.content", {
				name: "_triageMustache", hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"}, hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorNotesView = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container" ><p>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notes", {
				name: "I18n", hash: {context: "tooltip"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</p></div><div style="float : left; margin-left : -100%;"><a class="close-notes btn btn-default btn-sm back-to-main-view" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><form class="smart-form visitor-notes"><fieldset><label class="textarea"><textarea class="visitor-note required" rows="5" placeholder="');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "notes", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></textarea></label></fieldset><footer><button type="submit" class="btn btn-primary save-details">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-default close-notes-form">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.refundOrder = Ember.Handlebars.template({
		1: function (a, c, d, b, e) {
			b.buffer.push('<tr style="height : 50px;"><td style="width : 45% vertical-align: middle;">');
			d = c._triageMustache.call(a, "name", {
				name: "_triageMustache", hash: {}, hashTypes: {},
				hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-right" style="vertical-align: middle;">');
			d = c["if"].call(a, "isRefunded", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b, e),
				inverse: this.program(4, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-right" style="width : 15%; vertical-align: middle;">');
			d = c["if"].call(a, "isRefunded", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(6, b, e), inverse: this.program(8, b, e), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 2: function (a, c, d, b) {
			b.buffer.push("Already Refunded")
		}, 4: function (a, c, d, b, e) {
			d = c.helperMissing;
			var f = this.escapeExpression;
			e = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push(" ");
			e = c._triageMustache.call(a, "price",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != e && b.buffer.push(e);
			b.buffer.push("&nbsp;x&nbsp;");
			b.buffer.push(f((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {id: "id", value: "0", "class": "spinner item-quantity", max: "quantity", min: "0", type: "text"},
				hashTypes: {id: "ID", value: "STRING", "class": "STRING", max: "ID", min: "STRING", type: "STRING"},
				hashContexts: {id: a, value: a, "class": a, max: a, min: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			return ""
		}, 6: function (a,
		                c, d, b, e) {
			a = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("&nbsp;0.00");
			return ""
		}, 8: function (a, c, d, b, e) {
			a = c["if"].call(a, "view.isCalculating", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b, e),
				inverse: this.program(11, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 9: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-refresh fa-spin"></i>')
		},
		11: function (a, c, d, b, e) {
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "refundAmount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 13: function (a, c, d, b) {
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache", hash: {}, hashTypes: {},
				hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "view.subTotal", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 15: function (a, c, d, b, e) {
			b.buffer.push('<tr><td class="text-right" style="vertical-align: middle;">Shipping (');
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
				contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "view.shippingRefund", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(' remaining)</td><td class="text-right"style="width : 15%"><label class="input" style="position: relative;"><input type="text" class="shipping-refund" style="padding-left: 37px; text-align: right;"value="0.00" /><span style="position: absolute;left: 5px;top: 7px;display: block;">');
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></label></td></tr>");
			return ""
		}, 17: function (a, c, d, b) {
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "view.totalTax", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 19: function (a, c, d, b, e) {
			var f = this.escapeExpression;
			b.buffer.push('<tr><td class="text-right" style="vertical-align: middle;">');
			d = c._triageMustache.call(a, "type", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-right" style="width : 15%; vertical-align: middle;"><label class="input" style="position: relative;"><input type="text" class="refund-amount" style="padding-left: 37px; text-align: right;"');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "amount"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /><span style="position: absolute;left: 5px;top: 7px;display: block;">');
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></label></td></tr>");
			return ""
		}, 21: function (a, c, d, b) {
			b.buffer.push('<tr><td colspan="2" class="text-right"><label class="checkbox" style="display: inline-block;"><input type="checkbox" class="restock-items" checked /><i></i>');
			a = c._triageMustache.call(a, "view.refundQuantityText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label></td></tr>");
			return ""
		}, 23: function (a, c, d, b) {
			b.buffer.push('<section><label class="label">Reason for discrepancy in refund amount</label><label class="select"><select class="discrepancy-reason"><option value="restock">Customer was charged restocking fee</option><option value="damage">Customer returned the item damaged</option><option value="customer">Customer was unhappy with the order</option><option value="other">Other</option></select><i></i></label></section>')
		},
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
			var f = c.helperMissing, g = this.escapeExpression;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><span class="modal-title-tawk">Refund Order ');
			d = c._triageMustache.call(a, "view.order.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;"><form id="confirmation" name="confirmation" class="smart-form"><div style="border-bottom : 1px solid #ddd; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody>');
			d = c.each.call(a, "view.lineItems", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div style="border-bottom : 1px solid #ddd; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody><tr><td class="text-right">Subtotal</td><td class="text-right" style="width : 15%">');
			d = c["if"].call(a, "view.isCalculating", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b, e),
				inverse: this.program(13, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			d = c["if"].call(a, "view.shippingRefund", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<tr><td class="text-right">Tax</td><td class="text-right"style="width : 15%">');
			d = c["if"].call(a, "view.isCalculating", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b, e),
				inverse: this.program(17, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">Total available to refund</td><td class="text-right" style="width : 15%">');
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "view.totalRefundValue",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr></tbody></table></div><div class="padding-5" style="background : #fafafa; border-radius : 5px; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody><tr><td class="text-right">Refund Amount</td><td class="text-right" style="width : 15%"></td></tr>');
			d = c.each.call(a, "view.gateways", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(19, b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.refundQuantity", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tbody></table></div>");
			d = c["if"].call(a, "view.hasDiscrepancy", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			b.buffer.push('<section><label class="checkbox"><input type="checkbox" class="notify-customer" checked/><i></i>Send a notification to the customer</label></section><section><label class="label">Reason for refund (optional)</label><label class="textarea"><textarea class="refund-reason"></textarea></label></section></form></div><div class="modal-footer"><button id="close" type="button" class="btn btn-default" data-dismiss="modal">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a,
				"cancel", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</button><button id="submit" type="button" class="btn btn-primary proceed-refund" disabled>Proceed</button></div></div></div>');
			return ""
		}, useData: !0, useDepths: !0
	});
	Ember.TEMPLATES.duplicateOrder = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><span class="modal-title-tawk">Duplicate Order #');
			d = c._triageMustache.call(a, "view.order_number", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;"><form class="smart-form duplicate-order-form"><section><label class="checkbox"><input type="checkbox" checked class="send-receipt" /><i></i>Send receipt to customer\'s email</label></section><section><label class="checkbox"><input type="checkbox" checked class="send-fullfillment" /><i></i>Send fulfillment receipt to customer\'s email</label></section><section><label class="label">Payment Status</label><label class="select"><select class="payment-status"><option value="same">Same as current order</option><option value="paid">Mark as Paid</option><option value="pending">Mark as Pending</option></select><i></i></label></section><section><label class="label">Inventory</label><label class="select"><select class="inventory-status"><option value="bypass">Bypass : Do not claim inventory</option><option value="decrement_ignoring_policy">Ignore : Claim inventory even if insufficient</option><option value="decrement_obeying_policy">Obey : Claim inventory according to inventory policy</option></select><i></i></label></section></form></div><div class="modal-footer"><button id="close" type="button" class="btn btn-default" data-dismiss="modal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-primary submit-form">Proceed</button></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.cancelOrder = Ember.Handlebars.template({
		1: function (a, c, d, b, e) {
			b.buffer.push('<tr style="height : 50px;"><td style="width : 45% vertical-align: middle;">');
			d = c._triageMustache.call(a,
				"name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-right" style="vertical-align: middle;">');
			d = c["if"].call(a, "isRefunded", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b, e),
				inverse: this.program(4, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-right" style="width : 15%; vertical-align: middle;">');
			d = c["if"].call(a,
				"isRefunded", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(6, b, e),
					inverse: this.program(8, b, e),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 2: function (a, c, d, b) {
			b.buffer.push("Already Refunded")
		}, 4: function (a, c, d, b, e) {
			d = c.helperMissing;
			var f = this.escapeExpression;
			e = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push(" ");
			e = c._triageMustache.call(a, "price", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push("&nbsp;x&nbsp;");
			b.buffer.push(f((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					id: "id",
					value: "quantity",
					"class": "spinner item-quantity",
					max: "quantity",
					min: "0",
					type: "text"
				},
				hashTypes: {id: "ID", value: "ID", "class": "STRING", max: "ID", min: "STRING", type: "STRING"},
				hashContexts: {
					id: a, value: a, "class": a, max: a, min: a,
					type: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			return ""
		}, 6: function (a, c, d, b, e) {
			a = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("&nbsp;0.00");
			return ""
		}, 8: function (a, c, d, b, e) {
			a = c["if"].call(a, "view.isCalculating", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b, e),
				inverse: this.program(11, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) :
				b.buffer.push("")
		}, 9: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-refresh fa-spin"></i>')
		}, 11: function (a, c, d, b, e) {
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "refundAmount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 13: function (a,
		                 c, d, b) {
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "view.subTotal", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 15: function (a, c, d, b, e) {
			b.buffer.push('<tr><td class="text-right" style="vertical-align: middle;">Shipping (');
			d = c._triageMustache.call(a,
				"view.order.currency", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "view.shippingRefund", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(' remaining)</td><td class="text-right"style="width : 15%"><label class="input" style="position: relative;"><input type="text" class="shipping-refund" style="padding-left: 37px; text-align: right;"value="0.00" /><span style="position: absolute;left: 5px;top: 7px;display: block;">');
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></label></td></tr>");
			return ""
		}, 17: function (a, c, d, b) {
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "view.totalTax", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 19: function (a, c, d, b, e) {
			b.buffer.push('<div class="padding-5" style="background : #fafafa; border-radius : 5px; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody><tr><td class="text-right">Refund Amount</td><td class="text-right" style="width : 15%"></td></tr>');
			a = c.each.call(a, "view.gateways", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(20,
					b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</tbody></table></div>");
			return ""
		}, 20: function (a, c, d, b, e) {
			var f = this.escapeExpression;
			b.buffer.push('<tr><td class="text-right" style="vertical-align: middle;">');
			d = c._triageMustache.call(a, "type", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-right" style="width : 15%; vertical-align: middle;"><label class="input" style="position: relative;"><input type="text" class="refund-amount" style="padding-left: 37px; text-align: right;"');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "amount"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /><span style="position: absolute;left: 5px;top: 7px;display: block;">');
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></label></td></tr>");
			return ""
		}, 22: function (a, c, d, b) {
			b.buffer.push('<section><label class="checkbox" style="display: inline-block;"><input type="checkbox" class="restock-items" checked /><i></i>');
			a = c._triageMustache.call(a, "view.refundQuantityText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label></section>");
			return ""
		}, 24: function (a, c, d, b) {
			b.buffer.push('<section><label class="label">Reason for discrepancy in refund amount</label><label class="select"><select class="discrepancy-reason"><option value="restock">Customer was charged restocking fee</option><option value="damage">Customer returned the item damaged</option><option value="customer">Customer was unhappy with the order</option><option value="other">Other</option></select><i></i></label></section>')
		},
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
			var f = c.helperMissing, g = this.escapeExpression;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><span class="modal-title-tawk">Cancel Order ');
			d = c._triageMustache.call(a, "view.order.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;"><form id="confirmation" name="confirmation" class="smart-form"><div><label class="label">What\u2019s the reason for canceling this order?</label><label class="select"><select class="cancel-reason"><option value="customer">Customer changed/canceled order</option><option value="inventory">Items Unavailable</option><option value="fraud">Fraudulent Order</option><option value="other">Other</option></select><i></i></label></div><div style="border-bottom : 1px solid #ddd; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody>');
			d = c.each.call(a, "view.lineItems", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div style="border-bottom : 1px solid #ddd; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody><tr><td class="text-right">Subtotal</td><td class="text-right" style="width : 15%">');
			d = c["if"].call(a, "view.isCalculating", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b, e),
				inverse: this.program(13, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			d = c["if"].call(a, "view.shippingRefund", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<tr><td class="text-right">Tax</td><td class="text-right"style="width : 15%">');
			d = c["if"].call(a, "view.isCalculating", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b, e),
				inverse: this.program(17, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">Total available to refund</td><td class="text-right" style="width : 15%">');
			d = c._triageMustache.call(a, "view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "view.totalRefundValue",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr></tbody></table></div>");
			d = c["if"].call(a, "view.gateways.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.refundQuantity", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.hasDiscrepancy", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<section><label class="checkbox"><input type="checkbox" class="notify-customer" checked/><i></i>Send a notification to the customer</label></section></form></div><div class="modal-footer"><button id="close" type="button" class="btn btn-default" data-dismiss="modal">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="submit" type="button" class="btn btn-primary proceed-cancel">Proceed</button></div></div></div>');
			return ""
		}, useData: !0, useDepths: !0
	});
	Ember.TEMPLATES.visitorShopifyView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div style="float: left;margin-left: -40px;vertical-align : middle;"><a class="edit-fields tooltip-button btn btn-default" data-placement="left" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "customize_shopify", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" style="background: #f1f1f1; color: #777; height: 38px; box-shadow: none;"><i class="fa fa-gear" style="font-size: 15px;margin-top: 4px;"></i></a></div>');
			return ""
		}, 3: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="panel-group" role="tablist" aria-multiselectable="true" style="margin : 2px 0 8px;"><div class="panel panel-default" style="border-radius: 5px;"><div class="panel-heading" role="tab" style="background : #ffffff;border-radius: 5px; padding: 5px;"><h5 class="panel-title padding-5"><a class="tab-header collapsed tab-with-button tab-with-xs-button" role="button" data-toggle="collapse" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "mainIdHref"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('> <b class="tab-header-text">');
			d = c._triageMustache.call(a, "header", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</b></a> <a class="btn btn-default btn-xs tooltip-button single-btn" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "view.customerUrl"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank" data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_customer", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" style="position: relative;"><i class="fa fa-external-link"></i></a><div class="clearfix"></div></h5></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "mainId"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="panel-collapse collapse" role="tabpanel"><div class="panel-body" style="padding : 0;">');
			d = c.each.call(a, "fields", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div></div></div>");
			return ""
		}, 4: function (a,
		                c, d, b) {
			b.buffer.push("<div>");
			a = c["if"].call(a, "isInner", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div style="padding : 5px 10px;">');
			b.buffer.push(e((c.ShopifyInnerDataView || a && a.ShopifyInnerDataView || d).call(a, {
				name: "ShopifyInnerDataView", hash: {content: ""}, hashTypes: {content: "ID"},
				hashContexts: {content: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 7: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div style="width : 32%; display: inline-block; padding : 5px; vertical-align : middle;">');
			d = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div style="width : 5px; display : inline-block;vertical-align : middle;"> : </div><div style="display : inline-block; padding : 5px; width : 60%; vertical-align : middle;">');
			b.buffer.push(e(c._triageMustache.call(a, "value", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 9: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="panel-group" role="tablist" aria-multiselectable="true" style="margin : 2px 0 8px;"><div class="panel panel-default" style="border-radius: 5px;"><div class="panel-heading" role="tab" style="background : #ffffff;border-radius: 5px; padding: 5px;"><h5 class="panel-title padding-5"><a class="tab-header collapsed tab-with-button" role="button" data-toggle="collapse" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "mainIdHref"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('> <b class="tab-header-text">');
			d = c._triageMustache.call(a, "header", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</b></a><div class="btn-group"><button class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-reorder"></i> <span class="caret"></span></button><ul class="dropdown-menu" style="left : auto; right : 0;">');
			d = c["if"].call(a, "canRefund", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<li><a href="javascript:void(0);" class="duplicate_order" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "mainId"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "duplicate_order",
				{
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</a></li>");
			d = c["if"].call(a, "canCancel", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul> <a class="btn btn-default btn-xs tooltip-button" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {href: "orderUrl"}, hashTypes: {href: "STRING"},
				hashContexts: {href: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' target="_blank" data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_order", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-external-link"></i></a></div><div class="clearfix"></div></h5></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {id: "mainId"},
				hashTypes: {id: "STRING"}, hashContexts: {id: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' class="panel-collapse collapse main-tab" role="tabpanel"><div class="panel-body" style="padding : 0;">');
			d = c.each.call(a, "fields", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div></div></div>");
			return ""
		}, 10: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<li><a href="javascript:void(0);" class="refund_order" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "mainId"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "refund_order", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 12: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<li><a href="javascript:void(0);" class="cancel_order" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "mainId"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "cancel_order", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 14: function (a, c, d, b) {
			b.buffer.push("<div>");
			a = c["if"].call(a, "isInner", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(15, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 15: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div style="width : 32%; display: inline-block; padding : 5px; vertical-align :middle;">');
			d = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div style="width : 5px; display : inline-block;vertical-align : middle;"> : </div><div style="display : inline-block; padding : 5px; width : 60%; vertical-align : middle;">');
			b.buffer.push(e(c._triageMustache.call(a, "value", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 17: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="text-center" style="margin : 10px 0;"><button class="btn btn-default load-orders">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "load_orders", {
				name: "I18n", hash: {context: "conversations"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push("</button></div>");
			return ""
		}, 19: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isEdit::hidden :shopify-edit-container :smart-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="width : 100%; height : 100%;"><div style="left : 10px; right : 10px; width : auto; position: absolute; top: 10px; bottom: 64px;overflow: auto;"><section><p>');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "customize_field", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></section><section id="customer-select" class="config-type"><label class="checkbox" style="display: inline-block;vertical-align: middle;margin-bottom: 0;"><input type="checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {checked: "view.customerSettings.enabled"},
				hashTypes: {checked: "STRING"}, hashContexts: {checked: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' class="customer-select" /><i></i>');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "show_customer_details", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><a href="javascript:void(0);" data-id="customer-select" class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
			b.buffer.push(d((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || e).call(a, {
				name: "ShopifyEditSettingsView",
				hash: {contentBinding: "view.customerSettings"},
				hashTypes: {contentBinding: "ID"},
				hashContexts: {contentBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section id="order-select" class="config-type"><label class="checkbox" style="display: inline-block;vertical-align: middle;margin-bottom: 0;"><input type="checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "view.orderSettings.enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="order-select" /><i></i>');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "show_order_details", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><a href="javascript:void(0);" data-id="order-select" class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
			b.buffer.push(d((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || e).call(a, {
				name: "ShopifyEditSettingsView",
				hash: {contentBinding: "view.orderSettings"},
				hashTypes: {contentBinding: "ID"},
				hashContexts: {contentBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section></div><footer class="form-footer" style="position: absolute; bottom : 0; left : 0; right : 0;"><button type="submit" class="btn btn-primary save-edit">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-default  cancel-edit" id="cancel-form">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing,
				f = this.escapeExpression;
			b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "shopify_details", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isLoading:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="width:100%;height:100%;"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isEdit:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><form class="search-shopify smart-form padding-10"><div ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "view.isAdminAgent:admin-access-property"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><label class="input" style="vertical-align : middle;"><i class="fa fa-search"></i><input type="search" required="required" class="search-query" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search_shopify", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /><a class="clean-filter clean-search-shopify hidden" href="javascript:void(0);"><i class="fa fa-times txt-color-red" aria-hidden="true"></i></a></label></div>');
			d = c["if"].call(a, "view.isAdminAgent", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</form><div style="left : 10px; right : 10px;width : auto; position: absolute;top: 58px;bottom: 0;overflow: auto; overflow-x:hidden"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.emptyResults:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><div>");
			d = c["with"].call(a, "view.customerValues", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "view.orderValues", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(9,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.hasMoreOrders", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div><div ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.emptyResults::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><p style="    text-align: center;    font-style: italic;    color: #999;    margin: 20px 0;"><i class="fa fa-exclamation-circle"></i> ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "no_results", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div><div ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.showImage::hidden :text-center"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><img src="https://static-a.tawk.to/v2/a34/images/shopify.png" style="background-size: contain; width: 100%; margin: 20px 0; max-width : 320px" /></div></div></div>');
			d = c["if"].call(a, "view.isAdminAgent", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div><div ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isLoading::hidden :text-center"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 100px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorShopifyInnerDataView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<a class="btn btn-default btn-xs tooltip-button single-btn edit-shipping-address" href="javascript:void(0);" data-placement="bottom" data-original-title="Edit Shipping Address" style="position: relative;" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "view.content.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-edit"></i></a>');
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push("<div>");
			a = c["if"].call(a, "isInner", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.program(6, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div style="padding : 5px 10px;">');
			b.buffer.push(e((c.ShopifyInnerDataView ||
				a && a.ShopifyInnerDataView || d).call(a, {
				name: "ShopifyInnerDataView",
				hash: {content: ""},
				hashTypes: {content: "ID"},
				hashContexts: {content: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 6: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div style="width : 32%; display: inline-block; padding : 5px; vertical-align : middle;">');
			d = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div style="width : 5px; display : inline-block;vertical-align : middle;"> : </div><div style="display : inline-block; padding : 5px; vertical-align : middle; width : 60%">');
			b.buffer.push(e(c._triageMustache.call(a, "value", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 8: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="panel-body hidden edit-view" style="padding : 0;"><form class="smart-form shipping-address-form"><fieldset><section><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "address_line_1", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" name="address1" class="address1 required" /></label></section><section><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "address_line_2", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" name="address2" class="address2" /></label></section><section><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "address_city", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" name="city" class="city required" /></label></section><section><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "address_zip", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" name="zip" class="zip required" /></label></section></fieldset><footer><button type="submit" class="btn btn-primary submit-address-edit">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button><button class="btn btn-default cancel-address-edit">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div class="panel-group" role="tablist" aria-multiselectable="true" style="margin : 2px 0 8px;"><div class="panel panel-default" style="border-radius: 5px;"><div class="panel-heading" role="tab" style="background : #ffffff;border-radius: 5px; padding: 0;"><h5 class="panel-title padding-5"><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":tab-header :collapsed view.content.isShippingAddress:tab-with-button view.content.isShippingAddress:tab-with-xs-button"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' role="button" data-toggle="collapse" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "view.content.href"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('> <span class="tab-header-text">');
			d = c._triageMustache.call(a, "view.content.header", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></a>");
			d = c["if"].call(a, "view.content.isShippingAddress", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></h5></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "view.content.id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="panel-collapse collapse inner-tab" role="tabpanel"><div class="panel-body content-view" style="padding : 0;">');
			d = c.each.call(a, "fields", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a,
				"view.content.isShippingAddress", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(8, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorShopifySettingEdit = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div style="margin-left:8px; padding : 0;"><p class="note">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "shopify_header",
				{
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</p><label ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.content.enabled::disabled :input"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					name: "view.content.label", valueBinding: "view.content.header",
					"class": "field-header", type: "text"
				},
				hashTypes: {name: "ID", valueBinding: "STRING", "class": "STRING", type: "STRING"},
				hashContexts: {name: a, valueBinding: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></div>");
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li class="field" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "label"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div><label style="display: inline-block;vertical-align: middle;margin-bottom: 0;" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.content.enabled::disabled :checkbox"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="field-selection" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "label"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			d = c._triageMustache.call(a, "label", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</label>");
			d = c["if"].call(a, "fields", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div>');
			d = c["if"].call(a, "fields", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</li>");
			return ""
		}, 4: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<a href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "label"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
			return ""
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || d).call(a, {
				name: "ShopifyEditSettingsView",
				hash: {keyId: "label", content: ""},
				hashTypes: {keyId: "ID", content: "ID"},
				hashContexts: {keyId: a, content: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression;
			d = c["if"].call(a, "view.content.header", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<ul class="sortable-list" style="list-style:none; margin-left : 5px;"><li class="dummy-holder" style="margin:0; padding : 0;"></li>');
			d = c.each.call(a, "view.content.fields", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":overlay view.content.enabled:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorShortcutsListView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			a = c["if"].call(a, "view.activeShortcut.keyPlaintext", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.program(4, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		},
		2: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.activeShortcut.keyPlaintext", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_shortcut", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 6: function (a, c, d, b) {
			d =
				c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})))
		}, 8: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<section style="max-width : 500px"><label class="label" for="message">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "multiple_choice", {
				name: "I18n", hash: {context: "shortcuts"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</label>");
			d = c.each.call(a, "option", "in", "view.activeShortcut.optionsList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<section><button type="button" class="btn btn-default" id="add-shortcut-option">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_option", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button></section><div class="clearfix"></div></section>');
			return ""
		}, 9: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="input"><a href="javascript:void(0);" class="button-icon icon-append tooltip-hover delete-option" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_option", {
				name: "I18n", hash: {context: "tooltip"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a><input type="text" class="shortcut-option required" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_answer", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "option.val"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("</label><em ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"for": "option.id"},
				hashTypes: {"for": "STRING"},
				hashContexts: {"for": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="invalid"></em></section>');
			return ""
		}, 11: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<li class="tab-select-shortcut" style="padding : 5px 10px; cursor: pointer" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><div class="details"><p style="margin-bottom :0 ;"><b>/');
			b.buffer.push(e(c._triageMustache.call(a, "key", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</b></p>");
			d = c["if"].call(a, "shortMessage", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(12,
					b), inverse: this.program(15, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="edit"><button class="btn btn-default edit-shortcut" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-pencil-square-o" aria-hidden="true"></i></button></div></li>');
			return ""
		}, 12: function (a, c, d, b) {
			var e = this.escapeExpression,
				f = c.helperMissing;
			b.buffer.push('<p class="short-message">');
			b.buffer.push(e(c._triageMustache.call(a, "shortMessage", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c["if"].call(a, "options", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i class="expand-message fa fa-chevron-down tooltip-hover" aria-hidden="true" title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "expand_shortcut_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i></p><p class="full-message hidden">');
			b.buffer.push(e(c._triageMustache.call(a, "fullMessage", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c["if"].call(a, "options", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i class="compress-message fa fa-chevron-up tooltip-hover" aria-hidden="true" title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "collapse_shortcut_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i></p>');
			return ""
		}, 13: function (a, c, d, b) {
			b.buffer.push("[+]")
		},
		15: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<p style="padding-left : 5px;">');
			b.buffer.push(d(c._triageMustache.call(a, "fullMessage", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			a = c["if"].call(a, "options", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</p>");
			return ""
		}, 17: function (a,
		                 c, d, b) {
			b.buffer.push('<li style="padding : 5px 10px;">No shortcuts found</li>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":section-header view.activeShortcut::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="title-container"><p>');
			d = c["if"].call(a, "view.activeShortcut", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(6, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div><div class="icon-container"><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-sm view.activeShortcut:back-to-main-view:back-to-chat"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":section-content view.activeShortcut:inner-view"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><form name="shortcut-form" class="smart-form admin-form shortcut-form hidden"><div class="form-scrollable-container"><fieldset><section><label class="label" for="shortcutKey">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "shortcut_key", {
				name: "I18n", hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required mdb_syntax" id="shortcutKey" name="shortcutKey" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enter_shortcut", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.activeShortcut.keyPlaintext"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' maxlength="100"/></label></section><section id="message-section"><label class="label" for="message">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "message", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea">');
			b.buffer.push(e((c.textarea ||
				a && a.textarea || f).call(a, {
				name: "textarea",
				hash: {
					name: "message",
					id: "message",
					rows: "5",
					"class": "required",
					placeholderKey: "enter_message",
					valueBinding: "view.activeShortcut.plainText"
				},
				hashTypes: {
					name: "STRING",
					id: "STRING",
					rows: "STRING",
					"class": "STRING",
					placeholderKey: "STRING",
					valueBinding: "STRING"
				},
				hashContexts: {name: a, id: a, rows: a, "class": a, placeholderKey: a, valueBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label></section><section class="form-table"><div class="form-table-row"><label class="label inline-label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "access", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="access-type" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "view.activeShortcut.isPublicShortcut"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('id="is-public" value="public"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "public", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="access-type" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "view.activeShortcut.isPersonalShortcut"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('id="is-personal" value="personal"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "personal", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div></div></div><div class="form-table-row"><label class="label inline-label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "type", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="shortcut-type" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "view.activeShortcut.isMessageShortcut"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('id="is-message" value="m"><i></i>');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "message", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="shortcut-type" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "view.activeShortcut.isSurveyShortcut"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('id="is-survey" value="s"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "survey", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></div></div></div></section>");
			d = c["if"].call(a, "view.isSurveyShortcut", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset></div><footer class="form-footer"><div ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":form-loading view.isShortcutFormLoading::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><button type="submit" class="btn btn-primary" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "view.isShortcutFormLoading"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-default back-to-main-view" id="cancel-form" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "view.isShortcutFormLoading"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a &&
				a.I18n || f).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></form><div class="shortcut-list-container"><div class="smart-form padding-10 search-shortcuts-container"><label class="input"><input type="text" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "search", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" class="filter-shortcuts"><div class="clean-filter-shortcuts"><i class="fa fa-times" aria-hidden="true"></i></div></label><div class="smart-form show-shortcut-form"><button class="btn btn-primary open-shortcut-form">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "add", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div><ul class="shortcuts-tab-list" style="">');
			d = c.each.call(a, "view.pagedShortcutsList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(17, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul><div class="paged-list-footer"><div class="btn-group pull-right"><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :prev :prev-shortcut view.propertyShortcuts.hasPrevious::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Newer"><i class="fa fa-chevron-left"></i></a><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :next :next-shortcut view.propertyShortcuts.hasNext::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Older"><i class="fa fa-chevron-right"></i></a></div></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorInnerTranscriptView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<div class="transcriptBody modal-body" style="overflow:auto; word-wrap: break-word; white-space: pre-line;"><div class="transcript transcript-pane">');
			d = c["if"].call(a, "referrer", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "messages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			return ""
		}, 2: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="conversation-participant"><div class="conversation-content italic">');
			b.buffer.push(d(c._triageMustache.call(a, "referrer", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div></div>");
			return ""
		}, 4: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<div class="clear"></div>');
			return ""
		}, 6: function (a, c, d, b) {
			a = c["if"].call(a, "view.transcriptError", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.program(9, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 7: function (a, c, d, b) {
			b.buffer.push('<h5 class="text-center padding-5"><i class="fa fa-exclamation-circle"></i> Error in loading transcript</h5>')
		}, 9: function (a, c, d, b) {
			b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="section-header" ><div class="title-container" ><p>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "transcript", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><div style="float : left; margin-left : -100%;"><a class="close-transcript btn btn-default btn-sm back-to-main-view" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content inner-view">');
			a = c["with"].call(a, "view.transcriptData",
				{
					name: "with",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.program(6, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.confirmSimpleDelete = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<label class="input"><input id="check" type="text" /></label>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><span class="modal-title-tawk">');
			d = c._triageMustache.call(a, "view.confirmationHeader", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;"><form id="confirmation" name="confirmation" class="smart-form">');
			b.buffer.push(e(c._triageMustache.call(a, "view.confirmationQuestion", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c["if"].call(a, "view.needInput", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</form></div><div class="modal-footer"><button id="close" type="button" class="btn btn-default" data-dismiss="modal">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="submit" type="button" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn view.positiveProceeed:btn-primary:btn-danger"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c._triageMustache.call(a, "view.confirmationProceedText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</button></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.contactView = Ember.Handlebars.template({
		1: function (a, c, d, b, e) {
			b.buffer.push('<div class="ticket-block"><p class="ticket-header">');
			d = c["if"].call(a, "isVisit", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isChat", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			d = c["if"].call(a, "isTicket", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="time">');
			d = c._triageMustache.call(a, "time", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span><span>");
			d = c._triageMustache.call(a, "title", {
				name: "_triageMustache", hash: {}, hashTypes: {},
				hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></p>");
			d = c["if"].call(a, "messages", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, 2: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-globe"></i>')
		}, 4: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-comments-o"></i>')
		}, 6: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-ticket"></i>')
		},
		8: function (a, c, d, b, e) {
			b.buffer.push('<div class="ticket-body">');
			d = c.each.call(a, "message", "as", "messages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b, e),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<p style="padding : 0 8px; margin-top : -8px;">...</p></div>');
			d = c["if"].call(a, "isChat", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isTicket", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 9: function (a, c, d, b, e) {
			a = c["if"].call(a, "isChat", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b, e),
				inverse: this.program(12, b, e),
				types: ["ID"],
				contexts: [e[1]],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 10: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a,
				"message", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})))
		}, 12: function (a, c, d, b) {
			a = c._triageMustache.call(a, "message", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 14: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<a href="javascript:void(0);" class="view-transcript" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "view_transcript", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a>");
			return ""
		}, 16: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<a href="javascript:void(0);" class="view-ticket" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "view_ticket", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a>");
			return ""
		}, 18: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<tr><td class="text-center" colspan="3"><strong>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_known", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</strong></td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ip_address", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.lastKnown.ip", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "hostname_text", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a,
				"contactData.lastKnown.htn", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "country", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.lastKnown.cn",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "city", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c["if"].call(a, "contactData.lastKnown.cy", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(19, b), inverse: this.program(21, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "browser", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.lastKnown.bw", {
				name: "_triageMustache", hash: {},
				hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "os", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.lastKnown.os", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 19: function (a, c, d, b) {
			a = c._triageMustache.call(a, "contactData.lastKnown.cy", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 21: function (a, c, d, b) {
			b.buffer.push("-")
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
			var f = c.helperMissing, g = this.escapeExpression;
			b.buffer.push('<div id="conversation-action-header"><button id="close-conversation" class="btn btn-default pull-left" data-placement="bottom"data-original-title="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "back_to_list", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-arrow-left"></i></button><div id="chat-with">');
			d = c._triageMustache.call(a, "contactData.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="conversation-paging" ');
			b.buffer.push(g(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":btn-group :pull-right contactData.indexNum::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><a id="prev-conversation" ');
			b.buffer.push(g(c.action.call(a, "previousContact", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' class="btn btn-default prev" href="javascript:void(0);"data-placement="bottom" data-original-title="');
			b.buffer.push(g((c.I18n ||
				a && a.I18n || f).call(a, "previous_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-conversation" ');
			b.buffer.push(g(c.action.call(a, "nextContact", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' class="btn btn-default next" href="javascript:void(0);"data-placement="bottom" data-original-title="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "next_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-right"></i></a></div><a id="open-details-view" href="javascript:void(0);"><i class="fa fa-arrow-circle-left"></i></a><div class="clearfix"></div></div><div id="conversations-messages-container" class="contacts-view"><div class="message-container"><div ');
			b.buffer.push(g(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":ticket-block :text-center contactData.timelineEnded:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><button id="loader-contact-timeline" class="btn btn-default btn-sm">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "load_old_history", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' <i class="fa fa-arrow-up"></i></button></div>');
			d = c.each.call(a, "contactData.timeline", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div id="message-opacity-block" class="opacity-block"></div><div id="conversation-details-container"><table class="side-container"><tbody><tr><td class="text-right">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "name", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "email", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "total_visits", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.visitCount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "total_chats", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.chatCount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "total_tickets", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a,
				"contactData.ticketCount", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "first_visit", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.firstVisit",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "last_activity", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "contactData.lastActive", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			d = c["if"].call(a, "contactData.lastKnown", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><a id="close-details-view" href="javascript:void(0);"><i class="fa fa-arrow-circle-right"></i></a>');
			return ""
		}, useData: !0, useDepths: !0
	});
	Ember.TEMPLATES.contactsListView =
		Ember.Handlebars.template({
			1: function (a, c, d, b) {
				var e = this.escapeExpression, f = c.helperMissing;
				b.buffer.push("<tr ");
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {id: "_id"},
					hashTypes: {id: "STRING"},
					hashContexts: {id: a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' class="open-contact"><td style="width : 150px;"><span ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "countryFlag"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push("></span>");
				d = c["if"].call(a, "lastKnown.cy", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(2, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</td><td><strong>");
				d = c._triageMustache.call(a, "name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</strong>&nbsp;<p style="word-break: break-all; display : inline-block"><');
				d = c._triageMustache.call(a,
					"email", {
						name: "_triageMustache",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != d && b.buffer.push(d);
				b.buffer.push('></p></td><td class="text-center"  style="width : 120px; max-width : 120px;">');
				d = c["if"].call(a, "lastKnown", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(4, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</td><td class="text-center last-active-cell" style="width : 150px; max-width : 150px;">');
				d = c._triageMustache.call(a, "lastActive", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</td><td class="text-center btn-cell" style="width : 60px;  min-width : 60px; max-width : 60px;"><a  href="javascript:void(0);" class="btn btn-default btn-sm create-ticket-contact" title="');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "create_ticket", {
					name: "I18n", hash: {context: "conversations"}, hashTypes: {context: "STRING"},
					hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('" ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"data-id": "_id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('><i class="fa fa-ticket"></i></a></td></tr>');
				return ""
			}, 2: function (a, c, d, b) {
				b.buffer.push("&nbsp;(");
				a = c._triageMustache.call(a, "lastKnown.cy", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push(")");
				return ""
			}, 4: function (a, c, d, b) {
				a = c._triageMustache.call(a, "lastKnown.ip", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a ? b.buffer.push(a) : b.buffer.push("")
			}, 6: function (a, c, d, b) {
				d = this.escapeExpression;
				var e = c.helperMissing;
				b.buffer.push('<div id="no-conversations" ');
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": ":well :well-light :text-center isLoading:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push("><h3>");
				b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "no_contacts", {
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</h3></div>");
				return ""
			}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<div id="contacts-list-container"><table class="table" style="position : absolute; top : 0;"><thead><tr><th style="width : 150px">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "country", {
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push(" (");
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "city", {
					name: "I18n",
					hash: {context: "pages"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push(")</th><th>");
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "details", {
					name: "I18n", hash: {context: "tooltip"},
					hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('</th><th class="text-center" style="width : 120px;">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ip_address", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</th><th class="text-center" style="width : 150px">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "last_activity", {
					name: "I18n", hash: {context: "conversations"},
					hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('</th><th style="width : 80px;"></th></tr></thead></table><div id="contacts" class="view-section"><table class="table"><tbody>');
				d = c.each.call(a, "activeProperty.list.currentData", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</tbody></table></div></div>");
				d = c.unless.call(a, "activeProperty.list.currentData.length",
					{
						name: "unless",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						fn: this.program(6, b),
						inverse: this.noop,
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != d && b.buffer.push(d);
				return ""
			}, useData: !0
		});
	Ember.TEMPLATES.imagePreview = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div id="image-container" style="position : absolute; top : 0; bottom : 73px; width: 100%; overflow: auto; height: auto;"><img id="preview" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isLoading:hidden :image"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><img  ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isLoading::hidden :image"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' src="a34/images/ajax-loader-big.gif" /></div><div ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":modal-footer view.readOnly:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute;width: 100%; bottom: 0; padding: 20px 20px 0; height : 54px;"><a target="_blank" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "view.imageSrc"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="btn btn-primary" id="close-bubble-gallery">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "download", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.conversationsProperties = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push("<li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {id: "property.id"}, hashTypes: {id: "STRING"},
				hashContexts: {id: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":get-tickets property.isSelected:open :active"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><p class="property-name"><i class="fa"></i><span class="title-section">');
			b.buffer.push(e(c._triageMustache.call(a, "property.propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "property.aggregate.all", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p><ul ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":inner-list :list-unstyled property.isSelected::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":get-contacts isContacts:active"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "contacts", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": ":get-spam isSpam:active"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "spam", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":get-trash isTrash:active"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "trash", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</li></ul></li>");
			return ""
		}, 2: function (a, c, d, b) {
			b.buffer.push('<span class="badge bg-color-red txt-color-white">');
			a = c._triageMustache.call(a, "property.aggregate.all", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div id="add-button-container"><button id="create-ticket" class="btn btn-primary"><i class="fa fa-plus"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_ticket", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div><ul class="properties-list">');
			a = c.each.call(a, "property", "as", "propertiesList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.conversationsView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push("&nbsp;assignee:me")
		}, 3: function (a, c, d, b) {
			b.buffer.push("&nbsp;label:spam")
		}, 5: function (a, c, d, b) {
			b.buffer.push("&nbsp;label:trash")
		}, 7: function (a, c,
		                d, b) {
			b.buffer.push("&nbsp;label:contacts")
		}, 9: function (a, c, d, b) {
			d = c["if"].call(a, "departments.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "agents.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 10: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "departments", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" id="department">');
			a = c.each.call(a, "departments", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 11: function (a, c, d, b) {
			d =
				this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 13: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agents", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" id="agent">');
			a = c.each.call(a, "agents", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 15: function (a, c, d, b) {
			a = c["if"].call(a,
				"isContactsList", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(16, b),
					inverse: this.program(18, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 16: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.ContactsListView || a && a.ContactsListView || d).call(a, {
				name: "ContactsListView",
				hash: {controllerBinding: "view.controller"},
				hashTypes: {controllerBinding: "STRING"},
				hashContexts: {controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		},
		18: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.ConversationsListView || a && a.ConversationsListView || d).call(a, {
				name: "ConversationsListView",
				hash: {controllerBinding: "view.controller"},
				hashTypes: {controllerBinding: "STRING"},
				hashContexts: {controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 20: function (a, c, d, b) {
			a = c["if"].call(a, "isChat", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b),
				inverse: this.program(23, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 21: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.ConversationsTranscriptView || a && a.ConversationsTranscriptView || d).call(a, {
				name: "ConversationsTranscriptView",
				hash: {contentBinding: "this", controllerBinding: "view.controller"},
				hashTypes: {contentBinding: "STRING", controllerBinding: "STRING"},
				hashContexts: {contentBinding: a, controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 23: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.TicketConversationsView || a && a.TicketConversationsView || d).call(a, {
				name: "TicketConversationsView",
				hash: {contentBinding: "this", controllerBinding: "view.controller"},
				hashTypes: {contentBinding: "STRING", controllerBinding: "STRING"},
				hashContexts: {contentBinding: a, controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 25: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.ContactView || a && a.ContactView || d).call(a, {
				name: "ContactView",
				hash: {controllerBinding: "view.controller"},
				hashTypes: {controllerBinding: "STRING"},
				hashContexts: {controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark"><i class="fa fa-inbox"></i> ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n", hash: {context: "conversations"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</h1></div><div id="search-list-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":col-xs-8 :col-sm-8 :col-md-8 :col-lg-8 activeProperty::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><form id="conversations-search" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isContactsList:hidden"}, hashTypes: {"class": "STRING"},
				hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><fieldset><div class="input-group"><div id="property-selected-name"><span id="property-label">in:');
			b.buffer.push(f(c._triageMustache.call(a, "activeProperty.propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c["if"].call(a, "isMyTickets", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isSpam", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isTrash", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isContactsList", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(7,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="chevron"></span></div><input type="text" class="form-control" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" id="search-text"/><div class="input-group-btn"><button id="openFilter" type="button" class="btn btn-default" tabindex="-1" aria-expanded="false"><span class="caret"></span></button><button type="button" class="btn btn-primary search" tabindex="-1"><i class="fa fa-search"></i></button><div class="dropdown-menu pull-right smart-form"><fieldset><section class="col col-6"><label class="input"><input type="text" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "min_num_message", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" id="min-messages" /></label></section><section class="col col-6"><label class="select custom-select"><div><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : <span class="selected-value">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></p></div><i></i><select id="search-status"><option value="0">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="1000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_open", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="2000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_awaiting", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="3000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_close", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option></select></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" name="from-date" id="from-date" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_from", {
				name: "I18n", hash: {context: "placeholders"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" name="to-date" id="to-date" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_to", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section><section class="col col-6"><label class="select custom-select"><div><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent_department", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : <span class="selected-value">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></p></div><i></i><select id="assignee"><option value="0">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="1">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "assigned_text", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="-1">');
			b.buffer.push(f((c.I18n || a &&
				a.I18n || e).call(a, "unassigned", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option><option ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "Tawk.userController.user.id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "me", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push(" (");
			b.buffer.push(f(c._triageMustache.call(a, "Tawk.userController.user.fullName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(")</option>");
			d = c["with"].call(a, "assigneeList", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select></label></section><section class="col col-6"><label class="input"><input type="text" name="tags" id="tags" data-role="tagsinput" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section></fieldset><footer><button type="submit" class="btn btn-primary search">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				e).call(a, "search", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn bg-color-teal txt-color-white" id="resetFilter">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-default" id="closeFilter">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></div></div></div></fieldset></form><form id="contacts-search" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isContactsList::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><fieldset><div class="input-group"><div id="property-selected-name"><span id="property-label">in:');
			d = c._triageMustache.call(a, "activeProperty.propertyName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isMyTickets", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isSpam", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isTrash", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isContactsList", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="chevron"></span></div><input type="text" class="form-control" placeholder="');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "search_contact", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" id="contact-query" /><div class="input-group-btn"><button type="button" class="btn btn-primary search-contact-btn" tabindex="-1"><i class="fa fa-search"></i></button></div></div></fieldset></form></div></div><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": ":innerContent conversationData:is-message-view"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><a id="open-properties-list" href="javascript:void(0);"><i class="fa fa-arrow-circle-right"></i></a><a id="close-properties-list" href="javascript:void(0);"><i class="fa fa-arrow-circle-left"></i></a><div id="list-opacity-block" class="opacity-block"></div>');
			b.buffer.push(f((c.ConversationsPropertiesView || a && a.ConversationsPropertiesView || e).call(a, {
				name: "ConversationsPropertiesView",
				hash: {controllerBinding: "view.controller"},
				hashTypes: {controllerBinding: "STRING"},
				hashContexts: {controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			d = c["if"].call(a, "activeProperty", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["with"].call(a, "conversationData", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "contactData",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(25, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="list-loading"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.conversationListView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('&nbsp;<span class="badge bg-color-red txt-color-white">');
			a = c._triageMustache.call(a, "activeProperty.aggregate.all", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 3: function (a, c, d, b) {
			d = c["if"].call(a, "departments.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "agents.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d &&
			b.buffer.push(d);
			return ""
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a href="javascript:void(0);" class="submenu submenu-title">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "departments", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a><ul class="dropdown-menu">');
			a = c.each.call(a, "departments", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(5,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul></li>");
			return ""
		}, 5: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 7: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a href="javascript:void(0);" class="submenu submenu-title">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agents", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a><ul class="dropdown-menu">');
			a = c.each.call(a, "agents",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(5, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul></li>");
			return ""
		}, 9: function (a, c, d, b) {
			b.buffer.push('&nbsp;<span class="badge bg-color-red txt-color-white">');
			a = c._triageMustache.call(a, "activeProperty.aggregate.assignee", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		},
		11: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "updated_on", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 13: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "created_on", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 15: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "priority", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 17: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "status", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 19: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-sort-numeric-asc"></i>')
		}, 21: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-sort-numeric-desc"></i>')
		}, 23: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":smart-form activeProperty.list.totalItems::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="height : 30px;"><label class="checkbox"><input class="all-bulk-check" type="checkbox" /><i class="mark-select" style="top: 6px; right: 15px; left: auto;"></i></label></div>');
			return ""
		}, 25: function (a, c, d, b) {
			a = c["if"].call(a, "requester", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b),
				inverse: this.program(35, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 26: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<tr ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "_id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":open-conversation isClosed:entry-closed isRead:entry-read"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><td class="text-center conversation-intro" style="font-style: normal;"><div class="circle">');
			d = c._triageMustache.call(a, "requester.firstLetterName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></td><td class="conversation-details"><p class="entry-info">');
			d = c._triageMustache.call(a, "requester.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('&nbsp;<span class="entry-email">');
			d = c._triageMustache.call(a, "requester.email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></p><small class="entry-metadata">[#');
			d = c._triageMustache.call(a, "humanId", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("] ");
			d = c._triageMustache.call(a, "subject", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</small>");
			d = c["if"].call(a, "hasAttach", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "assignee",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(29, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="hidden-xs text-center conversation-icon"><i class="fa fa-ticket"></i>');
			d = c["if"].call(a, "hasDraft", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(31, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="hidden-xs hidden-sm text-center conversation-status"><span ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":label :label-default statusLabel"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('  style="text-transform : uppercase;">');
			d = c._triageMustache.call(a, "currentStatus", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></td><td class="text-center conversation-sort">');
			d = c._triageMustache.call(a,
				"sorted", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center delete-cell">');
			d = c["if"].call(a, "hasAdminAccess", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(33, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 27: function (a, c, d, b) {
			b.buffer.push('<span class="has-attachment"><i class="fa fa-paperclip"></i></span>')
		},
		29: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<span class="agent-name-item">');
			b.buffer.push(d(c._triageMustache.call(a, "assignee", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 31: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('&nbsp;<br/><small class="txt-color-red">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "draft",
				{
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</small>");
			return ""
		}, 33: function (a, c, d, b) {
			b.buffer.push('<div class="smart-form"><label class="checkbox"><input class="bulk-check" type="checkbox" /><i class="mark-select"></i></label></div>')
		}, 35: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<tr ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {id: "_id"}, hashTypes: {id: "STRING"},
				hashContexts: {id: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":open-conversation isClosed:entry-closed isRead:entry-read"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td class="text-center conversation-intro" style="font-style: normal;"><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": ":circle countryFlag"}, hashTypes: {"class": "STRING"},
				hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('></div></td><td class="conversation-details"><p class="entry-info">');
			d = c._triageMustache.call(a, "visitorName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "visitorEmail", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(36, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p><small class="entry-metadata">');
			d = c["if"].call(a, "offlineForm", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(38, b),
				inverse: this.program(40, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</small>");
			d = c.each.call(a, "name", "in", "agentsNameList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(42, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="hidden-xs text-center conversation-icon"><i class="fa fa-comment-o"></i></td><td class="hidden-xs hidden-sm text-center conversation-status"><span ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":label :label-default statusLabel"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="text-transform : uppercase;">');
			d = c._triageMustache.call(a, "currentStatus", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></td><td class="text-center conversation-sort">');
			d = c._triageMustache.call(a,
				"sorted", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center delete-cell">');
			d = c["if"].call(a, "hasAdminAccess", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(33, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 36: function (a, c, d, b) {
			b.buffer.push('&nbsp;<span class="entry-email">');
			a = c._triageMustache.call(a,
				"visitorEmail", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 38: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "from_offline_form", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 40: function (a, c, d, b) {
			var e = c.helperMissing;
			d = c._triageMustache.call(a,
				"totalMessages", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push(", ");
			d = c._triageMustache.call(a, "duration", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" ");
			d = (c.rating || a && a.rating || e).call(a, "rating", {
				name: "rating",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		},
		42: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<span class="agent-name-item">');
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, 44: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) :
				b.buffer.push("")
		}, 46: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="default-greeting" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isFilter:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div style="width : 50%;vertical-align: middle;display: inline-block; padding : 20px; height : 100%;">');
			b.buffer.push(d(c._triageMustache.call(a, "view.defaultGreeting", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<div class="smart-form"><label class="input" style="display: block;margin-bottom: 9px;"><input type="input" readonly ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {value: "activeProperty.forwardingEmail"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' style="cursor : text;"/></label></div>');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "checkout_video", {
				name: "I18n",
				hash: {variables: '{"lineStart" : "<p>", "lineEnd" : "</p>"}', context: "conversations"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div style="width : 50%;vertical-align: middle;display: inline-block; border-left: 1px solid #ddd; height : 100%;"><div id="youtube-container" style="position: relative; min-height: 300px; height: 100%; display:none;"><iframe src="https://www.youtube.com/embed/f0KsdPXGzzY?ecver=2" width="640" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div></div></div><div id="no-conversations" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":well :well-light :text-center isFilter::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a, "isStatusAll", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(47, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isStatusOpen", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(49,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isStatusPending", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(51, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isStatusClosed", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(53, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			return ""
		}, 47: function (a,
		                 c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<h3>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_conversation", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h3>");
			return ""
		}, 49: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<h3>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_open_conversation", {
				name: "I18n", hash: {context: "conversations"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</h3>");
			return ""
		}, 51: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<h3>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_pending_conversation", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h3>");
			return ""
		}, 53: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<h3>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_closed_conversation", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h3>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div id="conversation-list-container"><div id="list-wrapper"><table class="table"><thead><tr><th class="column-head-details inner-wrapper smart-form"><ul ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isTrash:hidden isSpam:hide"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><li><div id="filter-assignee" class="dropdown"><a role="button" data-toggle="dropdown" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isMyMessageList:inactive"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);"><span class="filter-value">');
			d = c._triageMustache.call(a, "assigneeFilterTitle", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "displayAllMessageListNumber", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span>&nbsp;<i class="fa fa-sort"></i></a><ul class="dropdown-menu multi-level"><li id="0"><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li id="1"><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "assigned_text", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li id="-1"><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "unassigned", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			d = c["with"].call(a, "assigneeList", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div></li><li id="select-my-message" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "isMyMessageList::inactive"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "mine", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c["if"].call(a, "activeProperty.aggregate.assignee", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</li></ul></th><th class="hidden-xs column-head-icons text-right"><ul class="smart-form inline-group" style="float: right; margin: 0;"><li><label class="checkbox" style="margin-right: 15px;"><input type="checkbox" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "includeChats"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="only-chats"><i></i><span class="hidden-lg"><i class="icon fa fa-comment-o"></i>&nbsp;</span><span class="visible-lg">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "chats", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></label></li><li><label class="checkbox" style="margin-right: 15px;"><input type="checkbox" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "includeTickets"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="only-tickets"><i></i><span class="hidden-lg"><i class="icon fa fa-ticket"></i>&nbsp;</span><span class="visible-lg">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "tickets", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></label></li></ul></th><th class="hidden-xs hidden-sm column-head-assign text-center smart-form"><ul><li><div id="status-container" class="dropdown"><a role="button" data-toggle="dropdown" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isStatusOpen:inactive"}, hashTypes: {"class": "STRING"},
				hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' href="javascript:void(0);"><span class="filter-value">');
			d = c._triageMustache.call(a, "statusFilterTitle", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span>&nbsp;<i class="fa fa-sort"></i></a><ul class="dropdown-menu multi-level pull-right"><li id="0"><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n ||
				f).call(a, "any", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li id="2000"><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "status_awaiting", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li id="3000"><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "status_close", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li></ul></div></li><li id="select-open-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isStatusOpen::inactive"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n ||
				f).call(a, "status_open", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li></ul></th><th class="column-head-sort text-center"><div id="sort-container" class="dropdown"><a id="sortby" role="button" data-toggle="dropdown" class="btn btn-default btn-sm" href="javascript:void(0);"><span class="sort-value">');
			d = c["if"].call(a, "isUpdatedOnSort", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(11,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isCreatedOnSort", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isPrioritySort", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isStatusSort", {
				name: "if", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(17, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c["if"].call(a, "isAscending", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.program(21, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span>&nbsp;<span class="caret"></span></a><ul class="dropdown-menu multi-level pull-right"><li class="dropdown-submenu"><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "updated_on", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a><ul class="dropdown-menu"><li><a class="change-sort" href="javascript:void(0);" id="uo-new-old"><i class="fa fa-sort-numeric-desc"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "newest_oldest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a class="change-sort" href="javascript:void(0);" id="uo-old-new"><i class="fa fa-sort-numeric-asc"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "oldest_newest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li></ul></li><li class="dropdown-submenu"><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "created_on", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a><ul class="dropdown-menu"><li><a class="change-sort" href="javascript:void(0);" id="co-new-old"><i class="fa fa-sort-numeric-desc"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "newest_oldest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a class="change-sort" href="javascript:void(0);" id="co-old-new"><i class="fa fa-sort-numeric-asc"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "oldest_newest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li></ul></li><li class="dropdown-submenu"><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"priority", {
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</a><ul class="dropdown-menu"><li><a class="change-sort" href="javascript:void(0);" id="p-high-low"><i class="fa fa-sort-numeric-desc"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "highest_lowest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a class="change-sort" href="javascript:void(0);" id="p-low-high"><i class="fa fa-sort-numeric-asc"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "lowest_highest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li></ul></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":dropdown-submenu isStatusAll::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a class="submenu-title" href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "status", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a><ul class="dropdown-menu"><li><a class="change-sort" href="javascript:void(0);" id="st-open-closed"><i class="fa fa-sort-numeric-desc"></i> ');
			b.buffer.push(e((c.I18n || a &&
				a.I18n || f).call(a, "open_closed", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a class="change-sort" href="javascript:void(0);" id="st-closed-open"><i class="fa fa-sort-numeric-asc"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "closed_open", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li></ul></li></ul></div></th><th class="column-head-setting">');
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</th></tr><div class="clear"></div></thead></table><div id="conversation-list" class="view-section"><table class="table"><tbody>');
			d = c.each.call(a, "activeProperty.list.currentData", {
				name: "each", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(25, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tbody></table><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":alert :alert-info :text-center activeProperty.list.pendingData.length:active:fade activeProperty.list.pendingData.length::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="new-history"><button class="close" data-dismiss="alert">\u00d7</button><a id="retrieveHistory" href="javascript:void(0);" title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "retrieve_history", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><h4 class="alert-heading message">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "new_message", {
				name: "I18n",
				hash: {context: "sound_settings"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" : ");
			d = c._triageMustache.call(a, "activeProperty.list.pendingData.length",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</h4></a></div></div><div id="bulk-action-container" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.bulkMarkedTotal::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
			d = c["if"].call(a, "view.bulkMarkedTotal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(44, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p><ul id="bulk-list-container"><li ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isTrash:hidden :padding-10"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><button class="btn btn-danger" id="bulk-conversations-delete">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"delete_messages", {
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</button></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isSpam::hidden :padding-10"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><button class="btn btn-default" id="bulk-conversations-unspam">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"unspam_messages", {
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</button></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isTrash::hidden :padding-10"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><button class="btn btn-default" id="bulk-conversations-restore">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"restore_messages", {
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</button></li><li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isTrash::hidden :padding-10"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><button class="btn btn-default" id="bulk-conversations-purge">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
				"purge_messages", {
					name: "I18n",
					hash: {context: "conversations"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</button></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white" id="bulk-conversations-purge">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "clear_selection", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></li></ul></div></div></div></div>");
			d = c.unless.call(a, "activeProperty.list.currentData.length", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(46, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.newTicketView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<section>");
			b.buffer.push(e((c.webPropertySelect || a && a.webPropertySelect ||
				d).call(a, {
				name: "webPropertySelect",
				hash: {noAll: "true", selectedValueBinding: "view.currentProperty"},
				hashTypes: {noAll: "STRING", selectedValueBinding: "STRING"},
				hashContexts: {noAll: a, selectedValueBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</section>");
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "departments", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a, "view.departments", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 4: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agents", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a, "view.agents", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 7: function (a, c, d, b) {
			a = c.unless.call(a, "disabled", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 8: function (a, c, d, b) {
			d =
				this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("&nbsp;");
			a = c["if"].call(a, "isPropertyClient", {
				name: "if", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(9, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 9: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("(");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "client", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(")");
			return ""
		}, 11: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<label>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "attached_files", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			return ""
		}, 13: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<p class="element"><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "downloadUrl"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank">');
			d = c._triageMustache.call(a, "fileName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" (");
			d = c._triageMustache.call(a, "fileSize", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(')</a><a href="javascript:void(0);" class="button-icon delete-attachment" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {id: "handle"},
					hashTypes: {id: "STRING"},
					hashContexts: {id: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><i class="fa fa-times"></i></a></p><div class="clearfix"></div>');
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="section-header"><div class="title-container"><p><i class="fa fa-ticket" aria-hidden="true"></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "create_ticket", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat cancel-ticket-form btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="modal-body"><form class="ticket-form" name="ticket-form"><div class="smart-form">');
			d = c.unless.call(a, "view.fromChat", {
				name: "unless", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(1, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "recipient_name", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required requester-name" name="requester-name" placeholder="');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "enter_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.recipientName"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "recipient_email", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required email requester-email" name="requester-email"placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enter_email", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {value: "view.recipientEmail"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' /></label></section><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "subject", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="required ticket-subject" name="ticket-subject" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enter_subject", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section><section class="ticket-message-container"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "message", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea editable-message-container"><div name="ticket-message" contenteditable="true" class="editable-div ticket-message"></div><input type="text" class="hidden ticket-watchers" /><input type="text" class="hidden ticket-shortcuts" /></label><em for="ticket-message" class="invalid hidden">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "required", {
				name: "I18n",
				hash: {context: "form_validation_messages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</em><input type="text" class="hidden required" id="rich-message" /></section><section><label class="label" for="ticket-assignee">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "assign_to", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><i></i><select class="ticket-assignee"><option ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "Tawk.userController.user.id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' selected="true">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "me", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" (");
			b.buffer.push(f(c._triageMustache.call(a, "Tawk.userController.user.fullName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(')</option><option value="0"}}>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "none", {
				name: "I18n",
				hash: {context: "sound_settings"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			d = c["if"].call(a, "view.departments.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.agents.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select></label></section><section><label class="label" for="ticket-priority">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select "><i></i><select class="ticket-priority"><option value="1000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_highest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="2000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_high", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="3000" selected>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_medium", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="4000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_low", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="5000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_lowest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option></select></label></section></div><section><label>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div><input type="text" class="new-ticket-tags" data-role="tagsinput" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_tags", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></div></section></form><section class="upload-attachment-container"><div class="attachment-upload-container">');
			d = c["if"].call(a, "view.attachedFiles.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "view.attachedFiles", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div><form enctype="multipart/form-data" class="new-upload-form" method="post"><input type="file" class="hidden file-input attach-files-list" name="file[]" multiple="multiple" /><label title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "upload_file", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" class="attach-trigger-label"><span class="fa fa-paperclip fa-lg fa-flip-vertical"></span><span class="text-upload">&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_attachment", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></label></form></div></section></div><div class="modal-footer"><button type="button" class="btn btn-default cancel-ticket-form" data-dismiss="modal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-primary submit">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"create", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</button></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.newTicketViewModal = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content">');
			b.buffer.push(e((c.NewTicketView || a && a.NewTicketView || d).call(a, {
				name: "NewTicketView",
				hash: {
					parentViewBinding: "view",
					showCancelButton: "true",
					recipientEmailBinding: "view.recipientEmail",
					recipientNameBinding: "view.recipientName",
					controllerBinding: "view.controller",
					currentPropertyBinding: "view.currentProperty",
					fromHistoryBinding: "view.fromHistory"
				},
				hashTypes: {
					parentViewBinding: "STRING",
					showCancelButton: "STRING",
					recipientEmailBinding: "STRING",
					recipientNameBinding: "STRING",
					controllerBinding: "STRING",
					currentPropertyBinding: "STRING",
					fromHistoryBinding: "STRING"
				},
				hashContexts: {
					parentViewBinding: a,
					showCancelButton: a,
					recipientEmailBinding: a,
					recipientNameBinding: a,
					controllerBinding: a,
					currentPropertyBinding: a,
					fromHistoryBinding: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.tagMessageView = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "view.isLoading::hidden :text-center"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 34px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div><form ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isLoading:hidden :smart-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><fieldset><div><input type="text" class="message-tags" data-role="tagsinput" placeholder="');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add_tags", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" maxlength="255"');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.customTags.data"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></div></fieldset><footer><button type="submit" class="btn btn-primary save-tags">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-default close-tag-form">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form>");
			return ""
		},
		useData: !0
	});
	Ember.TEMPLATES.ticketDetailsView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "chat_transcript", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td><a class="open-ticket-transcript" href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "view.content.chatId"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "click_view", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></td></tr>");
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(' <label class="input">');
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {value: "view.content.visitorName", name: "convert-name", id: "convert-name", type: "text"},
				hashTypes: {value: "ID", name: "STRING", id: "STRING", type: "STRING"},
				hashContexts: {value: a, name: a, id: a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label><em id="convert-name-error" for="convert-name" autogenerated="true" class="invalid"></em>');
			return ""
		}, 5: function (a, c, d, b) {
			a = c._triageMustache.call(a,
				"view.content.req.name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 7: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="input">');
			b.buffer.push(e((c.input || a && a.input || d).call(a, {
				name: "input",
				hash: {
					value: "view.content.visitor.e",
					minlength: "1",
					name: "convert-email",
					id: "convert-email",
					"class": "email required",
					type: "text"
				},
				hashTypes: {
					value: "ID", minlength: "STRING",
					name: "STRING", id: "STRING", "class": "STRING", type: "STRING"
				},
				hashContexts: {value: a, minlength: a, name: a, id: a, "class": a, type: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label><em id="convert-email-error" for="convert-email" autogenerated="true" class="invalid"></em>');
			return ""
		}, 9: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.content.req.email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 11: function (a,
		                 c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "created_on", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td>');
			d = c._triageMustache.call(a, "view.content.startDateTime", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			d = c.unless.call(a, "view.content.cbe", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.content.watchersString", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "status", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td class="smart-form"><label class="select"><i></i><select id="current-ticket-status"><option value="1000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_open", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="2000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_awaiting", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="3000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_close", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option></select></label></td></tr>");
			return ""
		}, 12: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "created_by", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td>');
			a = c._triageMustache.call(a, "view.content.crtrN", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</td></tr>");
			return ""
		}, 14: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "watchers", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td>');
			b.buffer.push(e(c._triageMustache.call(a,
				"view.content.watchersString", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</td></tr>");
			return ""
		}, 16: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "departments", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a, "assigneeList.departments", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 17: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a,
				"name", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</option>");
			return ""
		}, 19: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agents", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a,
				"assigneeList.agents", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(20, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 20: function (a, c, d, b) {
			a = c.unless.call(a, "disabled", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 21: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("&nbsp;");
			a = c["if"].call(a, "isPropertyClient", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(22, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 22: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("(");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "client", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(")");
			return ""
		}, 24: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tags_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td><input type="text" id="ticket-tags" data-role="tagsinput" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></td></tr>');
			return ""
		}, 26: function (a, c, d, b) {
			b.buffer.push('<div class="fields-container"  style="border-bottom : 0; border-top: 1px solid #ccc;"><ul class="attributes-list"><li><i class="fa fa-tags"></i>&nbsp;');
			a = c.each.call(a, "view.content.tags", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</li></ul></div>");
			return ""
		}, 27: function (a, c, d, b) {
			b.buffer.push('<span class="label label-info">');
			a =
				c._triageMustache.call(a, "", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "details", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><form id="details-form"><table class="side-container smart-form"><tbody>');
			d = c["if"].call(a, "view.content.chatId", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td>');
			d = c["if"].call(a, "view.content.isNewConvert", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td>');
			d = c["if"].call(a, "view.content.isNewConvert", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.program(9, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			d = c.unless.call(a, "view.content.isNewConvert", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td class="smart-form"><label class="select"><i></i><select id="current-ticket-priority"><option value="1000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_highest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="2000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_high", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="3000">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "priority_medium", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="4000">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_low", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="5000">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				e).call(a, "priority_lowest", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option></select></label></td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "assignee", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="centered"> : </td><td class="smart-form"><label class="select"><i></i><select id="current-ticket-assignee"><option value="0">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_none", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option><option ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "Tawk.userController.user.id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' selected="true">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "me", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" (");
			b.buffer.push(f(c._triageMustache.call(a, "Tawk.userController.user.fullName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(")</option>");
			d = c["if"].call(a, "assigneeList.departments.length", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(16,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "assigneeList.agents.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</select></label></td></tr>");
			d = c["if"].call(a, "conversationData.isNewConvert", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d &&
			b.buffer.push(d);
			b.buffer.push("</tbody></table></form>");
			d = c["if"].call(a, "view.content.tags", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.modalTicketView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<span ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "countryFlag"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("></span>");
			return ""
		}, 3: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div id="ticket" class="transcript-pane">');
			d = c.each.call(a, "messages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="details" class="transcript-pane hidden"><table style="border-collapse: separate; border-spacing: 5px 10px;  margin: 0 1%;"><tbody><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_id", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>#');
			d = c._triageMustache.call(a, "hId", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				e).call(a, "name", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "req.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "req.email", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "created_on", {
				name: "I18n", hash: {context: "conversations"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			d = c._triageMustache.call(a, "startDateTime", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			d = c.unless.call(a, "cbe", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a,
				"watchersString", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(8, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td><div id="tags-display-container"><span style="margin-right: 5px; vertical-align: middle;">');
			b.buffer.push(f(c._triageMustache.call(a, "tagString", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></div></td></tr></tbody></table></div>");
			return ""
		}, 4: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		},
		6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "created_by", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			a = c._triageMustache.call(a, "crtrN", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</td></tr>");
			return ""
		}, 8: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<tr><td class="text-right">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "watchers", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
			a = c._triageMustache.call(a, "watchersString", {
				name: "_triageMustache", hash: {},
				hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</td></tr>");
			return ""
		}, 10: function (a, c, d, b) {
			b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content" style="width: 100%; height: 100%;"><div ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "modalTicketData::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' style="width: 100%;top: 0;position: absolute;bottom: 73px;"><div id="transcriptHeader" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":modal-header modalTicketData.isPopover:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div><div class="btn-group modal-title-tawk-nav" role="group"><a class="transcript-btn btn btn-default active" data-original-title="Ticket" href="javascript:void(0);" data-target="#ticket" data-placement="bottom"><i class="fa fa-ticket"></i></a><a class="transcript-btn btn btn-default" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "details", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" href="javascript:void(0);" data-target="#details" data-placement="bottom"><i class="fa fa-info"></i></a></div><h4 class="modal-title" id="myModalLabel">');
			d = c["if"].call(a, "modalTicketData.countryFlag", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="modal-title-tawk"> #');
			d = c._triageMustache.call(a, "modalTicketData.hId", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;:&nbsp;");
			d = c._triageMustache.call(a, "modalTicketData.subj", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(' </span></h4><div style="clear: both;"></div></div></div><div id="transcriptBody" class="modal-body" style="overflow:auto;">');
			d = c["with"].call(a, "modalTicketData", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			d = c.unless.call(a, "modalTicketData", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="transcriptFooter" class="modal-footer" style="position:absolute; bottom : 0; width: 100%;"><button type="button" class="btn btn-default" data-dismiss="modal">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.ticketConversationsView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			a = c._triageMustache.call(a, "conversationData.subj", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) :
				b.buffer.push("")
		}, 3: function (a, c, d, b) {
			b.buffer.push("#");
			d = c._triageMustache.call(a, "conversationData.hId", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;:&nbsp;");
			d = c._triageMustache.call(a, "conversationData.subj", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 5: function (a, c, d, b) {
			b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0;">');
			d = c.each.call(a, "activeProperty.tabSettings", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown">');
			d = c.each.call(a, "activeProperty.tabSettings", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div class="clearfix"></div>');
			return ""
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isMenu:dropdown:open-view"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-type": "label"},
				hashTypes: {"data-type": "STRING"},
				hashContexts: {"data-type": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": ":tab isMenu:main-menu"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' rel="tooltip" data-toggle="dropdown" data-placement="bottom" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "title"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a, "isInternal", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(7, b), inverse: this.program(9,
					b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a>");
			d = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</li>");
			return ""
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa fontClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>");
			return ""
		}, 9: function (a, c, d, b) {
			b.buffer.push('<span class="menu-title">');
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 11: function (a, c, d, b) {
			b.buffer.push('&nbsp;<b class="caret"></b>')
		},
		13: function (a, c, d, b) {
			b.buffer.push('<ul class="dropdown-menu" role="dropdown">');
			a = c.each.call(a, "items", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, 14: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="open-view inner-item" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-type": "label"},
				hashTypes: {"data-type": "STRING"},
				hashContexts: {"data-type": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);">');
			a = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.program(17, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, 15: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa fontClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>&nbsp;");
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 17: function (a, c, d, b) {
			a = c._triageMustache.call(a, "title",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 19: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isMenu:dropdown-submenu:open-view"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			a = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.program(23, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</li>");
			return ""
		}, 20: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);" class="minimized-dropdown left text-left" data-toggle="dropdown">');
			d = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a><ul class="dropdown-menu multi-level"  style="right:100%; left : auto;">');
			d = c.each.call(a, "items", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul>");
			return ""
		}, 21: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' class="open-view inner-item"><a href="javascript:void(0);" class="text-left">');
			a = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.program(17, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, 23: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);" class="text-left">');
			a = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.program(17, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a>");
			return ""
		}, 25: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0;"><li class="open-view active" data-id="id"><a href="javascript:void(0);" class="tab" rel="tooltip" data-toggle="dropdown" data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "details", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-info"></i></a></li></ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown"><li class="open-view"><a href="javascript:void(0);" class="text-left"><i class="fa fa-info"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "details", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="tag-transcript text-left"><i class="fa fa-tags"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			d = c["if"].call(a, "isSpam", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b),
				inverse: this.program(28, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></div>");
			return ""
		}, 26: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a id="single-ticket-not-spam" href="javascript:void(0);" class="text-left"><i class="fa fa-exclamation text-danger"></i><i class="fa fa-shield"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "not_spam", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 28: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a id="single-ticket-spam" href="javascript:void(0);" class="text-left"><i class="fa fa-shield"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "mark_spam", {
				name: "I18n", hash: {context: "conversations"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 30: function (a, c, d, b) {
			a = c["if"].call(a, "isTrash", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(31, b),
				inverse: this.program(33, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 31: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a id="single-ticket-restore" href="javascript:void(0);" class="text-left"><i class="fa  fa-rotate-left"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 33: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a id="single-ticket-delete" href="javascript:void(0);" class="text-left"><i class="fa fa-trash-o"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
				name: "I18n", hash: {context: "tooltip"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 35: function (a, c, d, b) {
			a = c.each.call(a, "conversationData.messages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(36, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 36: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})))
		}, 38: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a id="open-note" href="#reply-tab" data-toggle="tab">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "note", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 40: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="repliers-text-container"><p>');
			b.buffer.push(d(c._triageMustache.call(a, "conversationData.repliersText", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div>");
			return ""
		}, 42: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<p class="element"><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "downloadUrl"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank">');
			d = c._triageMustache.call(a, "fileName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" (");
			d = c._triageMustache.call(a, "fileSize", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(')</a><a href="javascript:void(0);" class="button-icon delete-attachment" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {id: "handle"},
					hashTypes: {id: "STRING"},
					hashContexts: {id: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><i class="fa fa-times"></i></a></p><div class="clearfix"></div>');
			return ""
		}, 44: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "convert_incomplete", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 46: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "required", {
				name: "I18n",
				hash: {context: "form_validation_messages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 48: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button id="discard-convert" class="btn btn-default" style="margin : 0 5px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "discard", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button");
			return ""
		}, 50: function (a, c, d, b) {
			a = c.unless.call(a, "conversationData.isClosed", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(51, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 51: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button id="single-ticket-close" class="btn btn-default" style="margin : 0 5px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, 53: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 55: function (a, c, d, b) {
			a = c["if"].call(a,
				"conversationData.isNewConvert", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(56, b),
					inverse: this.program(58, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 56: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "create", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 58: function (a, c, d, b) {
			d = c.helperMissing;
			var e =
				this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 60: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "addnote_open", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 62: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send_open", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 64: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "addnote_pending", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 66: function (a,
		                 c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send_pending", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 68: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "addnote_close", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 70: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send_close", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 72: function (a, c, d, b) {
			b.buffer.push('<div class="shortcuts-view menu-content hidden"></div><div class="history-view menu-content hidden"></div><div class="knowledgebase-view menu-content hidden" style="white-space: normal;"></div><div class="menu-content client-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content shopify-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div></div><div class="menu-content custom-view hidden" style="word-wrap: break-word; white-space : normal;"></div>')
		},
		74: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="details-button-container"><button class="btn btn-primary tag-transcript button-icon" rel="tooltip"data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-tags"></i></button>');
			d = c["if"].call(a, "isSpam",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(75, b),
					inverse: this.program(77, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(79, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, 75: function (a, c, d, b) {
			b.buffer.push('<button id="single-ticket-not-spam" class="btn btn-default" data-placement="top"data-original-title="Not Spam"><i class="fa fa-exclamation text-danger"></i><i class="fa fa-shield"></i></button>')
		},
		77: function (a, c, d, b) {
			b.buffer.push('<button id="single-ticket-spam" class="btn btn-default" data-placement="top"data-original-title="Mark as Spam"><i class="fa fa-shield"></i></button>')
		}, 79: function (a, c, d, b) {
			a = c["if"].call(a, "isTrash", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(80, b),
				inverse: this.program(82, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 80: function (a, c, d, b) {
			b.buffer.push('<button id="single-ticket-restore" class="btn btn-default" data-placement="top"data-original-title="Restore"><i class="fa  fa-rotate-left"></i></button>')
		},
		82: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button id="single-ticket-delete" class="btn btn-default" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-trash-o"></i></button>');
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e =
				this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="jarviswidget" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-fullscreenbutton="false"><header class="chat-header" style="position: relative;"><ul class="header-list"><li class="name-text-container"><h2 class="name-text">');
			d = c["if"].call(a, "conversationData.isNewConvert", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			b.buffer.push('</h2></li><li class="menu-container"><div class="jarviswidget-ctrls" role="menu"><a id="prev-conversation" ');
			b.buffer.push(e(c.action.call(a, "previousConversation", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":button-icon :jarviswidget-delete-btn :prev conversationData.indexNum::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="" href="javascript:void(0);"data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "newer", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-conversation" ');
			b.buffer.push(e(c.action.call(a, "nextConversation", {
				name: "action", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":button-icon :jarviswidget-delete-btn :next conversationData.indexNum::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);"data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "older", {
				name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-right"></i></a><a href="javascript:void(0);" id="close-conversation" class="button-icon jarviswidget-delete-btn" rel="tooltip" title="" data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "back_to_list", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a></div>');
			d = c["if"].call(a, "activeProperty.tabSettings.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(25, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</li></ul></header><div class="chat-message-container"><div class="chat-content-container" role="content" style="right: 300px; width : auto;"><div class="chat-body message-container"><div class="chat-content">');
			d = c["if"].call(a, "conversationData.hId", {
				name: "if", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(35, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div class="conversation-input-container smart-form"><ul class="nav nav-tabs"><li class="active"><a id="open-reply" href="#reply-tab" data-toggle="tab">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "message", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			d = c.unless.call(a, "conversationData.isNewConvert", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(38, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul>");
			d = c["if"].call(a, "conversationData.repliersText", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(40, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="tab-content"><div ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":tab-pane :active view.isNote:note-view"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' id="reply-tab"><div id="reply-container" class="editable-message-container"><table class="inner-reply-container"><tr><td><div id="reply-ticket-message" name="reply-ticket-message" contenteditable="true" class="editable-div chat-input"></div><div id="reply-note-message" name="reply-note-message" contenteditable="true" class="editable-div chat-input"></div></td></tr></table><div id="reply-attachments-container"><div id="reply-ticket-attachments-wrapper">');
			d = c.each.call(a, "view.ticketAttachedFiles", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(42, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="reply-note-attachments-wrapper">');
			d = c.each.call(a, "view.noteAttachedFiles", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(42, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div><div ");
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":btn-group :dropup conversationData.isNewConvert:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><form enctype="multipart/form-data" id="reply-upload-form" method="post"><input type="file" class="hidden file-input" name="file[]" id="reply-ticket-attachment" multiple="multiple" /><label title="Upload File" class="upload-file sprite-background" for="reply-ticket-attachment"></label></form></div><div class="drop-text"><span>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "drag_drop_text", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></div></div><em for="reply-ticket-message" class="invalid hidden" style="position: absolute; bottom : 10px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "required", {
				name: "I18n",
				hash: {context: "form_validation_messages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</em><input type="text" class="hidden" id="reply-ticket-watchers" /><input type="text" class="hidden" id="reply-ticket-shortcuts" /><input type="text" class="hidden" id="reply-note-watchers" /><input type="text" class="hidden" id="reply-note-shortcuts" /><em for="reply-ticket-message" class="invalid hidden" style="position: absolute; bottom : 10px;">');
			d = c["if"].call(a, "conversationData.isNewConvert", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(44,
					b), inverse: this.program(46, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</em><div class="btn-group dropup">');
			d = c["if"].call(a, "conversationData.isNewConvert", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(48, b),
				inverse: this.program(50, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<button class="btn btn-primary btn-sm submit-reply">');
			d = c["if"].call(a, "view.isNote", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(53,
					b), inverse: this.program(55, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</button><button ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-primary :dropdown-toggle :btn-sm conversationData.isNewConvert:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-toggle="dropdown" aria-expanded="false"><span class="caret"></span></button><ul class="dropdown-menu"><li><a href="javascript:void(0);" class="submit-reply" data-id="1000">');
			d = c["if"].call(a, "view.isNote", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(60, b),
				inverse: this.program(62, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="submit-reply" data-id="2000">');
			d = c["if"].call(a, "view.isNote", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(64, b),
				inverse: this.program(66, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="submit-reply" data-id="3000">');
			d = c["if"].call(a, "view.isNote", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(68, b),
				inverse: this.program(70, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a></li></ul></div></div></div><div id="error-submit" class="hidden">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "type_here", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div></div></div><div class="chat-details-container" style="white-space: normal;"><div class="details-container"><div class="details-view menu-content"></div>');
			d = c["if"].call(a, "activeProperty.tabSettings.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(72, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="floating-view hidden" style="white-space: normal;"></div></div>');
			d = c.unless.call(a, "conversationData.isNewConvert", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(74, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i class="fa fa-ellipsis-v"></i></div></div></div><div id="ticket-action-error" class="alert alert-danger fade in hidden text-center"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa fa-exclamation"></i><span class="error-message"></span></div><div id="conversation-purged-notification" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":alert :alert-warning :text-center conversationData.isPurged::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "conversation_purged_notification", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<button class="close">\u00d7</button><i class="fa-fw fa fa-warning"></i></div><div class="overlay"><div class="text-center animated"><h5>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "saving", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' <i class="fa fa-refresh fa-spin"></i></h5></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.transcript = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			d = c["if"].call(a, "modalTranscriptData.visitor", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(2, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" href="javascript:void(0);" data-target="#email" data-placement="bottom"><i class="fa fa-envelope-o"></i></a>');
			d = c["if"].call(a,
				"modalTranscriptData.visitor", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(4, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 2: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notes", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" href="javascript:void(0);" data-target="#notes" data-placement="bottom"><i class="fa fa-edit"></i></a>');
			return ""
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"ban", {
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('" href="javascript:void(0);" data-target="#ban" data-placement="bottom"><i class="fa fa-ban"></i></a>');
			return ""
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
				name: "I18n", hash: {context: "tooltip"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" href="javascript:void(0);" data-target="#delete" data-placement="bottom"><i class="fa fa-trash-o"></i></a>');
			return ""
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<span ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "countryFlag"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></span>");
			return ""
		},
		10: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div id="transcript" class="transcript-pane">');
			d = c["if"].call(a, "referrer", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "messages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="details" class="transcript-pane hidden"><div class="details-container"><ul class="list-unstyled"><li><span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span><span>");
			b.buffer.push(f(c._triageMustache.call(a, "pgn", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></li>");
			d = c["if"].call(a, "visitor.e", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(15, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<li><span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "device", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span><span ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "browser"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></span>&nbsp;<span ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "operatingSystem"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span></li><li><span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "time_text", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span><span> ");
			d = c._triageMustache.call(a, "startedOn", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></li><li><span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_visit", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span><span> ");
			d = c._triageMustache.call(a, "visitor.lastVisitDate", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></li>");
			d = c["if"].call(a, "visitor.lastChatDate", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "tags", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a,
				"customAttributes.data", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(22, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div class="map-container">');
			d = c["if"].call(a, "view.mapError", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(24, b),
				inverse: this.program(26, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div id="timeline" class="transcript-pane hidden"><ul class="chat-timeline">');
			d = c.each.call(a, "timeline", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(29, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div id="notes" class="transcript-pane hidden"><form id="notesForm" class="smart-form"><fieldset><section><label class="input"><input type="text" class="required note-name" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor_name", {
				name: "I18n", hash: {context: "placeholders"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "visitorName"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></label></section><section><label class="input"><input type="text" class="note-email" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor_email", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "e"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></label></section><section><label class="textarea">');
			b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {rows: "7", valueBinding: "ns", placeholderKey: "notes", "class": "note-text"},
				hashTypes: {
					rows: "STRING", valueBinding: "STRING", placeholderKey: "STRING",
					"class": "STRING"
				},
				hashContexts: {rows: a, valueBinding: a, placeholderKey: a, "class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section>");
			d = c["if"].call(a, "notesUpdatedBy", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(32, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset></form></div><div id="email" class="transcript-pane hidden"><form id="emailTranscript" class="smart-form"><fieldset><section><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_recipients", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea"> <i class="icon-append fa fa-question-circle"></i><textarea id="transcript-modal-emails" name="emails" class="emails" rows="2"></textarea><b class="tooltip tooltip-top-right"><i class="fa fa-warning txt-color-teal"></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"email_info", {
					name: "I18n",
					hash: {context: "history"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</b></label></section></fieldset></form></div><div id="ban" class="transcript-pane hidden">');
			d = c["if"].call(a, "visitor.b", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(34, b),
				inverse: this.program(36, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="copy" class="transcript-pane hidden"><form class="smart-form"><fieldset><section><label class="textarea"><textarea readonly class="copy-transcript" style="height: 200px;"></textarea></label></section></fieldset></form></div>');
			return ""
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="conversation-participant"><div class="conversation-content italic">');
			b.buffer.push(d(c._triageMustache.call(a, "referrer", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div></div>");
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache", hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"}, hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('<div class="clear"></div>');
			return ""
		}, 15: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="title">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span><span>");
			a = c._triageMustache.call(a, "visitor.e",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</span></li>");
			return ""
		}, 17: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="title">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "served_by", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span><span> ");
			d = c._triageMustache.call(a,
				"visitor.lastChatAgent", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push(", ");
			d = c._triageMustache.call(a, "visitor.lastChatDate", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></li>");
			return ""
		}, 19: function (a, c, d, b) {
			b.buffer.push('<li style="margin-bottom: 8px;"><i class="fa fa-tags"></i>&nbsp;');
			a = c.each.call(a, "tags",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(20, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</li>");
			return ""
		}, 20: function (a, c, d, b) {
			b.buffer.push('<span class="label label-info">');
			a = c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 22: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<li><i class="fa fa-dot-circle-o"></i>&nbsp;');
			d = c._triageMustache.call(a, "key", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<br /><span style="padding-left: 10px">');
			b.buffer.push(e(c._triageMustache.call(a, "value", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></li>");
			return ""
		}, 24: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<p class="error"><i class="fa fa-exclamation-circle"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "map_error", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p>");
			return ""
		}, 26: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<a class="linkToMap btn" href="javascript:void(0);" target="_blank">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_on_maps",
				{
					name: "I18n",
					hash: {context: "history"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</a><div class="map"></div><p>');
			d = c["if"].call(a, "cy", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "cn", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" : &nbsp;<span>");
			d = c._triageMustache.call(a, "ip", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></p>");
			return ""
		}, 27: function (a, c, d, b) {
			a = c._triageMustache.call(a, "cy", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push(",&nbsp;");
			return ""
		}, 29: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<li class="parent_li"><div class="timeline-label"><span class="label">');
			d = c._triageMustache.call(a, "time", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span>&nbsp;</div><div class="timeline-data">');
			b.buffer.push(e(c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c.each.call(a, "data", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(30,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></li>");
			return ""
		}, 30: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<p class="no-margin">');
			d = c._triageMustache.call(a, "key", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" : ");
			b.buffer.push(e(c._triageMustache.call(a, "value", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</p>");
			return ""
		}, 32: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><p class="note">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "last_note_update", {
				name: "I18n",
				hash: {
					variables: '{"notesUpdatedBy" : "notesUpdatedBy", "notesUpdatedOn" : "notesUpdatedOn"}',
					replaceVar: "true",
					context: "visitors"
				},
				hashTypes: {variables: "STRING", replaceVar: "STRING", context: "STRING"},
				hashContexts: {
					variables: a,
					replaceVar: a, context: a
				},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></section>");
			return ""
		}, 34: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="no-data"><p>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "visitor_is_banned", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div>");
			return ""
		}, 36: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<form id="banVisitor" class="smart-form"><fieldset><section><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_question", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea"><textarea id="banReason" name="banReason" class="required" rows="2" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_reason", {
				name: "I18n", hash: {context: "placeholders"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" maxlength="500"></textarea></label></section><section><label class="checkbox"><input type="checkbox" name="banIp" id="banIp"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_ip", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></section></fieldset></form>");
			return ""
		}, 38: function (a,
		                 c, d, b) {
			b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
		}, 40: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button id="submitBan" type="button" class="btn btn-primary hidden other-btn">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content" style="width: 100%; height: 100%;"><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "modalTranscriptData::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="width: 100%;top: 0;position: absolute;bottom: 73px;"><div id="transcriptHeader" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":modal-header modalTranscriptData.isPopover:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div><div class="btn-group modal-title-tawk-nav" role="group"><a class="transcript-btn btn btn-default active" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "transcript", {
				name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" href="javascript:void(0);" data-target="#transcript" data-placement="bottom"><i class="fa fa-comments-o"></i></a><a class="transcript-btn btn btn-default" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "details", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" href="javascript:void(0);" data-target="#details" data-placement="bottom"><i class="fa fa-map-marker"></i></a><a class="transcript-btn btn btn-default" data-original-title="Timeline" href="javascript:void(0);" data-target="#timeline" data-placement="bottom"><i class="fa fa-clock-o"></i></a>');
			d = c.unless.call(a, "isConversationInView", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "print", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" href="javascript:void(0);" data-target="#print" data-placement="bottom"><i class="fa fa-print"></i></a><a class="transcript-btn btn btn-default" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "copy", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" href="javascript:void(0);" data-target="#copy" data-placement="bottom"><i class="fa fa-copy"></i></a></div><h4 class="modal-title" id="myModalLabel">');
			d = c["if"].call(a, "countryFlag", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="modal-title-tawk"> ');
			b.buffer.push(e(c._triageMustache.call(a, "n", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' </span></h4><div style="clear: both;"></div></div></div><div id="transcriptBody" class="modal-body" style="overflow:auto;">');
			d = c["with"].call(a, "modalTranscriptData", {
				name: "with", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(10,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			d = c.unless.call(a, "modalTranscriptData", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(38, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="transcriptFooter" class="modal-footer" style="position:absolute; bottom : 0; width: 100%;"><button type="button" class="btn btn-default" data-dismiss="modal">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="submit-notes" type="button" class="btn btn-primary hidden other-btn">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="sendEmail" type="button" class="btn btn-primary hidden other-btn">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "send", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			d = c.unless.call(a, "modalTranscriptData.visitor.b", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(40, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorTranscriptView =
		Ember.Handlebars.template({
			1: function (a, c, d, b) {
				b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0;">');
				d = c.each.call(a, "activeProperty.tabSettings", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(2, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown">');
				d = c.each.call(a, "activeProperty.tabSettings", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(15, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				d = c["if"].call(a, "view.menuFits", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(21, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</ul></div><div class="clearfix"></div>');
				return ""
			}, 2: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<li ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "isMenu:dropdown:open-view"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(" ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(" ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr", hash: {"data-type": "label"}, hashTypes: {"data-type": "STRING"},
					hashContexts: {"data-type": a}, types: [], contexts: [], data: b
				})));
				b.buffer.push('><a href="javascript:void(0);" ');
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": ":tab isMenu:main-menu"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' rel="tooltip" data-toggle="dropdown" data-placement="bottom" ');
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"data-original-title": "title"},
					hashTypes: {"data-original-title": "STRING"},
					hashContexts: {"data-original-title": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(">");
				d = c["if"].call(a, "isInternal", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(3, b),
					inverse: this.program(5, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				d = c["if"].call(a, "isMenu", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(7, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</a>");
				d = c["if"].call(a, "isMenu", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(9, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</li>");
				return ""
			}, 3: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<i ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": ":fa fontClass"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push("></i>");
				return ""
			}, 5: function (a, c, d, b) {
				b.buffer.push('<span class="menu-title">');
				a = c._triageMustache.call(a, "title", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</span>");
				return ""
			}, 7: function (a, c, d, b) {
				b.buffer.push('&nbsp;<b class="caret"></b>')
			}, 9: function (a, c, d, b) {
				b.buffer.push('<ul class="dropdown-menu" role="dropdown">');
				a = c.each.call(a, "items", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(10, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</ul>");
				return ""
			}, 10: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<li ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' class="open-view inner-item" ');
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"data-type": "label"},
					hashTypes: {"data-type": "STRING"},
					hashContexts: {"data-type": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('><a href="javascript:void(0);">');
				a = c["if"].call(a, "isInternal", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(11, b),
					inverse: this.program(13, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</a></li>");
				return ""
			}, 11: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<i ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": ":fa fontClass"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push("></i>&nbsp;");
				a = c._triageMustache.call(a,
					"title", {
						name: "_triageMustache",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != a && b.buffer.push(a);
				return ""
			}, 13: function (a, c, d, b) {
				a = c._triageMustache.call(a, "title", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a ? b.buffer.push(a) : b.buffer.push("")
			}, 15: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<li ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr", hash: {"data-id": "id"}, hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a}, types: [], contexts: [], data: b
				})));
				b.buffer.push(" ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "isMenu:dropdown-submenu:open-view"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(">");
				a = c["if"].call(a, "isMenu", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(16, b),
					inverse: this.program(19, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</li>");
				return ""
			},
			16: function (a, c, d, b) {
				b.buffer.push('<a href="javascript:void(0);" class="minimized-dropdown left text-left" data-toggle="dropdown">');
				d = c._triageMustache.call(a, "title", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</a><ul class="dropdown-menu multi-level"  style="right:100%; left : auto;">');
				d = c.each.call(a, "items", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(17, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</ul>");
				return ""
			}, 17: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<li ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"data-id": "id"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' class="open-view inner-item"><a href="javascript:void(0);" class="text-left">');
				a = c["if"].call(a, "isInternal", {
					name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(11,
						b), inverse: this.program(13, b), types: ["ID"], contexts: [a], data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</a></li>");
				return ""
			}, 19: function (a, c, d, b) {
				b.buffer.push('<a href="javascript:void(0);" class="text-left">');
				a = c["if"].call(a, "isInternal", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(11, b),
					inverse: this.program(13, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</a>");
				return ""
			}, 21: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<li><a href="javascript:void(0);" class="copy-select text-left"><i class="fa fa-clipboard"></i> ');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "copy_transcript", {
					name: "I18n",
					hash: {context: "visitors"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</a></li><li><a href="javascript:void(0);" class="print-select text-left"><i class="fa fa-print"></i> ');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "print", {
					name: "I18n", hash: {context: "visitors"},
					hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('</a></li><li><a href="javascript:void(0);" class="add-note text-left"><i class="fa fa-edit"></i> ');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</a></li><li><a href="javascript:void(0);" class="tag-visitor text-left"><i class="fa fa-tags"></i> ');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat", {
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</a></li><li><a href="javascript:void(0);" class="ban-visitor text-left"><i class="fa fa-ban"></i> ');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</a></li>");
				return ""
			}, 23: function (a, c, d, b) {
				d = c.helperMissing;
				a = (c.rating || a && a.rating || d).call(a, "rt", {
					name: "rating",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a ? b.buffer.push(a) : b.buffer.push("")
			}, 25: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push(d(c._triageMustache.call(a, "", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('<div class="clear"></div>');
				return ""
			},
			27: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<button class="btn btn-default close-history">');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "close", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</button>");
				return ""
			}, 29: function (a, c, d, b) {
				var e = c.helperMissing, f = this.escapeExpression;
				b.buffer.push('<div class="chat-details-container" style="white-space: normal;"><div class="details-container"><div class="details-view menu-content"></div><div class="shortcuts-view menu-content hidden"></div><div class="history-view menu-content hidden"></div><div class="knowledgebase-view menu-content hidden" style="white-space: normal;"></div><div class="menu-content shopify-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content client-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content custom-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="floating-view hidden" style="white-space: normal;"></div></div><div class="details-button-container"><button class="btn btn-default button-icon create-ticket-history open-subview" rel="tooltip" data-placement="top"data-original-title="Convert to ticket" ><i class="fa fa-ticket"></i></button><button class="btn btn-default button-icon copy-select" rel="tooltip" data-placement="top"data-original-title="');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "copy_transcript", {
					name: "I18n",
					hash: {context: "visitors"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('" ><i class="fa fa-clipboard"></i></button><button class="btn btn-default email-transcript" data-placement="bottom"data-original-title="');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('"><i class="fa fa-envelope-o"></i></button><button class="btn btn-default button-icon print-transcript" rel="tooltip" data-placement="top"data-original-title="');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "print", {
					name: "I18n",
					hash: {context: "visitors"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('" ><i class="fa fa-print"></i></button><br />');
				d = c["if"].call(a, "conversationData.visitor", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(30, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('<button class="btn btn-primary tag-transcript button-icon" rel="tooltip"data-placement="top"data-original-title="');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tag_chat", {
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('"><i class="fa fa-tags"></i></button>');
				d = c["if"].call(a, "conversationData.visitor", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(33, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				d = c["if"].call(a, "activeProperty.isAdmin", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(35, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</div><i class="fa fa-ellipsis-v"></i></div>');
				return ""
			}, 30: function (a, c, d, b) {
				a = c.unless.call(a, "conversationData.ns",
					{
						name: "unless",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						fn: this.program(31, b),
						inverse: this.noop,
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != a ? b.buffer.push(a) : b.buffer.push("")
			}, 31: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<button class="btn btn-default button-icon add-note" rel="tooltip" data-placement="top"data-original-title="');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('" ><i class="fa fa-edit"></i></button>');
				return ""
			}, 33: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<button class="btn btn-danger ban-visitor button-icon" rel="tooltip" data-placement="top"data-original-title="');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('"><i class="fa fa-ban"></i></button>');
				return ""
			}, 35: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<button class="btn btn-default single-conversation-delete" data-placement="top"data-original-title="');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('"><i class="fa fa-trash-o"></i></button>');
				return ""
			}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c,
			                                                     d, b) {
				var e = this.escapeExpression, f = c.helperMissing;
				b.buffer.push('<div class="jarviswidget" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-fullscreenbutton="false"><header class="chat-header" style="position: relative;"><ul class="header-list"><li class="name-text-container"><div class="details-flag-container"><span ');
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "conversationData.countryFlag"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push('></span></div><h2 class="name-text">');
				b.buffer.push(e(c._triageMustache.call(a, "conversationData.visitorName", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</h2></li><li class="menu-container"><div class="jarviswidget-ctrls" role="menu"><a id="prev-conversation" ');
				b.buffer.push(e(c.action.call(a, "previousConversation", {
					name: "action", hash: {},
					hashTypes: {}, hashContexts: {}, types: ["STRING"], contexts: [a], data: b
				})));
				b.buffer.push(" ");
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": ":button-icon :jarviswidget-delete-btn :prev conversationData.indexNum::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' class="" href="javascript:void(0);"data-placement="bottom" data-original-title="');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "newer", {
					name: "I18n", hash: {context: "tooltip"},
					hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-conversation" ');
				b.buffer.push(e(c.action.call(a, "nextConversation", {
					name: "action",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
				b.buffer.push(" ");
				b.buffer.push(e(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": ":button-icon :jarviswidget-delete-btn :next conversationData.indexNum::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(' href="javascript:void(0);"data-placement="bottom" data-original-title="');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "older", {
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('"><i class="fa fa-chevron-right"></i></a><a id="close-conversation" href="javascript:void(0);" class="button-icon jarviswidget-delete-btn" rel="tooltip" title="" data-placement="bottom" data-original-title="');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "back_to_list", {
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('"><i class="fa fa-times"></i></a></div>');
				d = c["if"].call(a, "activeProperty.tabSettings.length", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</li></ul></header><div class="chat-message-container"><div class="chat-content-container" role="content" style="right: 300px; width : auto;"><div class="chat-body custom-scroll"><div id="conversation-started">');
				d = c._triageMustache.call(a, "conversationData.startedOn", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("&nbsp;");
				d = c["with"].call(a, "conversationData", {
					name: "with",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(23, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</div><div class="current-transcript"><div class="chat-table-wrapper"><div class="chat-row-wrapper"><div class="chat-wrapper"><div class="chat-content padding-10">');
				d = c.each.call(a, "conversationData.messages", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(25, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</div></div></div></div></div></div><div class="chat-footer"><div class="textarea-div tab-content" style="height : 100%;"><div class="tab-pane active reply-tab"><div class="join-container"><div class="profile-overlay"></div><div class="transcript-button-container">');
				d = c.unless.call(a, "conversationData.isClosed",
					{
						name: "unless",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						fn: this.program(27, b),
						inverse: this.noop,
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != d && b.buffer.push(d);
				b.buffer.push('<button class="btn btn-primary create-ticket-history">');
				b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "convert_ticket", {
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('</button></div><div class="clearfix"></div></div></div></div></div></div>');
				d = c["if"].call(a, "activeProperty.tabSettings.length", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(29, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</div></div>");
				return ""
			}, useData: !0
		});
	Ember.TEMPLATES.dashboardAnalytics = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section id="widget-analytics" class="col-sm-12"><article><div class="jarviswidget" id="wid-id-0" data-widget-togglebutton="false"data-widget-editbutton="false" data-widget-fullscreenbutton="false"data-widget-colorbutton="false" data-widget-deletebutton="false"><header><span class="widget-icon"> <i class="glyphicon glyphicon-stats txt-color-darken"></i> </span><h2>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h2><ul class="nav nav-tabs pull-right in"><li role="presentation" class="active"><a data-toggle="tab" role="tab" href="#latest"><i class="fa fa-dashboard"></i>&nbsp;<span class="hidden-mobile hidden-tablet">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "latest", {
				name: "I18n", hash: {context: "analytics"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</span></a></li><li role="presentation"><a data-toggle="tab" role="tab" href="#historical"><i class="fa fa-calendar"></i>&nbsp;<span class="hidden-mobile hidden-tablet">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "historical", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li></ul></header><div class="no-padding" role="content"><div class="widget-body"><div id="analyticsTabContent" class="tab-content">');
			b.buffer.push(e((c.AnalyticsTodayTabView || a && a.AnalyticsTodayTabView || d).call(a, {
				name: "AnalyticsTodayTabView",
				hash: {activeTabBinding: "view.activeTab", controllerBinding: "analytics"},
				hashTypes: {activeTabBinding: "STRING", controllerBinding: "STRING"},
				hashContexts: {activeTabBinding: a, controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(e((c.AnalyticsHistoricalTabView || a && a.AnalyticsHistoricalTabView || d).call(a, {
				name: "AnalyticsHistoricalTabView",
				hash: {activeTabBinding: "view.activeTab", controllerBinding: "analytics"},
				hashTypes: {activeTabBinding: "STRING", controllerBinding: "STRING"},
				hashContexts: {activeTabBinding: a, controllerBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</div></div></div></div></article></section>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.dashboardAnalyticsTodayTab = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "view.loaded::hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><div class="row no-space"><div id="live-graph-container" class="col-xs-12 col-sm-12 col-md-8 col-lg-8"><h4 class="text-center">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "live_visitors", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h4><div class='yaxisLabel'><div style=\"padding : 0 5px;\">");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "visitor_count", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div></div><div id="live-graph" class="chart-large txt-color-blue" style="width : 100%; height : 235px;"></div></div><div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 show-stats"><div class="row">');
			b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
				name: "AnalyticsBarView",
				hash: {
					segmentFormat: "text",
					barColor: "bg-color-red",
					label: "missedChats",
					totalBinding: "recent.today.summary.chats",
					segmentBinding: "recent.today.summary.missedChats"
				},
				hashTypes: {
					segmentFormat: "STRING",
					barColor: "STRING",
					label: "STRING",
					totalBinding: "STRING",
					segmentBinding: "STRING"
				},
				hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
				name: "AnalyticsBarView",
				hash: {
					segmentFormat: "percentage",
					barColor: "bg-color-blue",
					label: "positiveSentiment",
					totalBinding: "recent.today.summary.chats",
					segmentBinding: "recent.today.summary.positiveSentiment"
				},
				hashTypes: {
					segmentFormat: "STRING",
					barColor: "STRING",
					label: "STRING",
					totalBinding: "STRING",
					segmentBinding: "STRING"
				},
				hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
				name: "AnalyticsBarView",
				hash: {
					segmentFormat: "percentage",
					barColor: "bg-color-blue",
					label: "returnVisitors",
					totalBinding: "recent.today.summary.visitors",
					segmentBinding: "recent.today.summary.returnVisitors"
				},
				hashTypes: {
					segmentFormat: "STRING",
					barColor: "STRING",
					label: "STRING",
					totalBinding: "STRING",
					segmentBinding: "STRING"
				},
				hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
				name: "AnalyticsBarView",
				hash: {
					segmentFormat: "percentage",
					barColor: "bg-color-blue",
					label: "engagement",
					totalBinding: "recent.today.summary.visits",
					segmentBinding: "recent.today.summary.chats"
				},
				hashTypes: {
					segmentFormat: "STRING",
					barColor: "STRING",
					label: "STRING",
					totalBinding: "STRING",
					segmentBinding: "STRING"
				},
				hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
				name: "AnalyticsBarView",
				hash: {
					segmentFormat: "percentage",
					barColor: "bg-color-blue",
					label: "availability",
					totalBinding: "recent.today.summary.availabilityTime",
					segmentBinding: "recent.today.summary.onlineTime"
				},
				hashTypes: {
					segmentFormat: "STRING",
					barColor: "STRING",
					label: "STRING",
					totalBinding: "STRING",
					segmentBinding: "STRING"
				},
				hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</div></div></div><div class="show-stat-microcharts">');
			b.buffer.push(d((c.AnalyticsMicroChartView || a && a.AnalyticsMicroChartView || e).call(a,
				{
					name: "AnalyticsMicroChartView",
					hash: {
						loadedBinding: "view.controller.recent.status",
						tooltipLowest: "visitors_lowest",
						tooltipHighest: "visitors_highest",
						tooltip: "visitors_compare",
						dataBinding: "recent.series.visitors",
						sparkColor: "#71843f",
						circleColor: "#217ebb",
						label: "visitors"
					},
					hashTypes: {
						loadedBinding: "STRING",
						tooltipLowest: "STRING",
						tooltipHighest: "STRING",
						tooltip: "STRING",
						dataBinding: "STRING",
						sparkColor: "STRING",
						circleColor: "STRING",
						label: "STRING"
					},
					hashContexts: {
						loadedBinding: a, tooltipLowest: a, tooltipHighest: a,
						tooltip: a, dataBinding: a, sparkColor: a, circleColor: a, label: a
					},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(d((c.AnalyticsMicroChartView || a && a.AnalyticsMicroChartView || e).call(a, {
				name: "AnalyticsMicroChartView",
				hash: {
					loadedBinding: "view.controller.recent.status",
					tooltipLowest: "visits_lowest",
					tooltipHighest: "visits_highest",
					tooltip: "visits_compare",
					dataBinding: "recent.series.visits",
					sparkColor: "#57889c",
					circleColor: "#64db91",
					label: "visits"
				},
				hashTypes: {
					loadedBinding: "STRING",
					tooltipLowest: "STRING",
					tooltipHighest: "STRING",
					tooltip: "STRING",
					dataBinding: "STRING",
					sparkColor: "STRING",
					circleColor: "STRING",
					label: "STRING"
				},
				hashContexts: {
					loadedBinding: a,
					tooltipLowest: a,
					tooltipHighest: a,
					tooltip: a,
					dataBinding: a,
					sparkColor: a,
					circleColor: a,
					label: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d((c.AnalyticsMicroChartView || a && a.AnalyticsMicroChartView || e).call(a, {
				name: "AnalyticsMicroChartView",
				hash: {
					loadedBinding: "view.controller.recent.status",
					tooltipLowest: "page_views_lowest",
					tooltipHighest: "page_views_highest",
					tooltip: "page_views_compare",
					dataBinding: "recent.series.pageViews",
					sparkColor: "#404040",
					circleColor: "#00adee",
					label: "page_views"
				},
				hashTypes: {
					loadedBinding: "STRING",
					tooltipLowest: "STRING",
					tooltipHighest: "STRING",
					tooltip: "STRING",
					dataBinding: "STRING",
					sparkColor: "STRING",
					circleColor: "STRING",
					label: "STRING"
				},
				hashContexts: {
					loadedBinding: a,
					tooltipLowest: a,
					tooltipHighest: a,
					tooltip: a,
					dataBinding: a,
					sparkColor: a,
					circleColor: a,
					label: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d((c.AnalyticsMicroChartView || a && a.AnalyticsMicroChartView ||
				e).call(a, {
				name: "AnalyticsMicroChartView",
				hash: {
					loadedBinding: "view.controller.recent.status",
					tooltipLowest: "chats_lowest",
					tooltipHighest: "chats_highest",
					tooltip: "chats_compare",
					dataBinding: "recent.series.chats",
					sparkColor: "#a90329",
					circleColor: "#fb6ea6",
					label: "chats"
				},
				hashTypes: {
					loadedBinding: "STRING",
					tooltipLowest: "STRING",
					tooltipHighest: "STRING",
					tooltip: "STRING",
					dataBinding: "STRING",
					sparkColor: "STRING",
					circleColor: "STRING",
					label: "STRING"
				},
				hashContexts: {
					loadedBinding: a, tooltipLowest: a, tooltipHighest: a,
					tooltip: a, dataBinding: a, sparkColor: a, circleColor: a, label: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</div></div><div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":load-container :text-center view.error::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><button class="btn btn-danger reload-view">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "reload_error", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button></div><div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":load-container :text-center view.loaded:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><img src="a34/images/ajax-loader-big.gif" /></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.dashboardAnalyticsBar = Ember.Handlebars.template({
		1: function (a,
		             c, d, b) {
			a = c._triageMustache.call(a, "view.percentage", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 3: function (a, c, d, b) {
			d = c._triageMustache.call(a, "view.segment", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("/");
			d = c._triageMustache.call(a, "view.total", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
				contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<span class="text">');
			d = c._triageMustache.call(a, "view.labelText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="pull-right">');
			d = c["if"].call(a, "view.showAsPercentage", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.program(3,
					b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></span><div class="progress"><div class="progress-bar" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {style: "view.barWidth"},
				hashTypes: {style: "STRING"},
				hashContexts: {style: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.dashboardAnalyticsMicroChart = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div class="microcharts-container"><div class="pie-chart-container"><div class="easy-pie-chart" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-percent": "view.data.summary.growth"},
				hashTypes: {"data-percent": "STRING"},
				hashContexts: {"data-percent": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "view.tooltipText"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><span class="percent percent-sign">');
			d = c._triageMustache.call(a, "view.data.summary.growth", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></div></div><div class="microchart-sparkline-container"><div class="sparkline"></div><ul class="smaller-stat"><li><span class="label bg-color-greenLight text-center" data-placement="bottom" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-original-title": "view.tooltipHighestText"},
					hashTypes: {"data-original-title": "STRING"},
					hashContexts: {"data-original-title": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><i class="fa fa-caret-up"></i>');
			d = c._triageMustache.call(a, "view.data.summary.highest", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></li><li><span class="label bg-color-blueLight text-center" data-placement="bottom" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "view.tooltipLowestText"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-caret-down"></i>');
			d = c._triageMustache.call(a, "view.data.summary.lowest", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></li></ul></div></div><p class="easy-pie-title text-center">');
			d = c._triageMustache.call(a, "view.labelText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.dashboardAnalyticsHistoricalTab = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="widget-body-toolbar bg-color-white" style="position: relative;"><div class="btn-group open pull-left" style="margin-right: 15px; position : static;"><button class="btn dropdown-toggle btn-xs btn-primary" data-toggle="dropdown" aria-expanded="true" style="margin-top: 0px;">');
			d = c._triageMustache.call(a, "view.getHistorialTimeRange", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(' <i class="fa fa-caret-down"></i></button><div class="dropdown-menu smart-form" role="menu" style="position: absolute; top : 30px; left : 10px;" id="date-range-form"><form><fieldset><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" class="form-control input-sm" id="historical-from" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_from", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" class="form-control input-sm" id="historical-to" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_to", {
				name: "I18n", hash: {context: "placeholders"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('"></label></section></fieldset></form><footer><button type="submit" class="btn btn-primary" id="applyFilter">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "apply", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-default" id="closeFilter">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></div></div><div class="smart-form pull-right"><div id="legends" class="pull-left"></div><div class="inline-group pull-left"><label for="gra-chats" class="checkbox"><input type="checkbox" class="graph-filters" name="gra-chats" id="gra-chats" data-segment="chats" checked="checked"><i></i>');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "chats", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label for="gra-page-views" class="checkbox"><input type="checkbox" class="graph-filters" name="gra-page-views" id="gra-page-views" data-segment="pageViews" checked="checked"><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_views", {
				name: "I18n", hash: {context: "analytics"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label for="gra-visits" class="checkbox"><input type="checkbox" class="graph-filters" name="gra-visits" id="gra-visits" data-segment="visits" checked="checked"><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visits", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label for="gra-visitors" class="checkbox"><input type="checkbox" class="graph-filters" name="gra-visitors" id="gra-visitors" data-segment="visitors" checked="checked"><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitors", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div><div class="clearfix"></div></div><div class="clearfix"></div></div><div id="historical-graph-container" class="col-xs-12 col-sm-12 col-md-12 col-lg-12 hidden"><div id="historical-graph"></div></div><div class="load-container text-center reload-view hidden"><button class="btn btn-danger reload-button">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reload_error", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div><div class="load-container text-center loading-view"><img src="a34/images/ajax-loader-big.gif" /></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.dashboardHistory = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("&nbsp;:&nbsp;");
			b.buffer.push(d(c._triageMustache.call(a, "history.activeProperty.propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="change-history-list"><a href="javascript:void(0);">');
			b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 5: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<tr class="open-transcript" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "this._id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td style="width: 42%; max-width : 30%"><span style="margin-right : 5px; margin-top : 0; vertical-align : middle;" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "countryFlag"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span><span style="margin : 0">');
			d = c._triageMustache.call(a, "visitorName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></td><td style="width: 42%; max-width : 30%">');
			d = c["if"].call(a, "agentsName", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "sorted", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "agentsName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 8: function (a, c, d, b) {
			b.buffer.push("-")
		}, 10: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":no-data history.isLoading:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><p class="no-history">');
			b.buffer.push(d((c.I18n ||
				a && a.I18n || e).call(a, "no_history", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div>");
			return ""
		}, 12: function (a, c, d, b) {
			b.buffer.push('<div class="load-container text-center" style="position: absolute; top: 0; bottom: 0; width: 100%; background: transparent !important; float: none;"><div style=" position: absolute; top: 0; bottom: 0; left: 0; background: #fff; opacity: 0.5; right: 0;"></div><img src="a34/images/ajax-loader-big.gif" style="position: absolute; top: 50%; margin-top: -30px;" /></div>')
		},
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<article class="col-xs-12 col-sm-12 col-md-12 col-lg-8"><div class="jarviswidget" id="wid-id-1" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false"><header><span class="widget-icon"> <i class="fa fa-history"></i> </span><h2>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"view_title", {
					name: "I18n",
					hash: {context: "history"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</h2><div class="widget-toolbar" role="menu"><div class="btn-group"><button class="btn dropdown-toggle btn-xs btn-default" data-toggle="dropdown" aria-expanded="false">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_page", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			d = c["if"].call(a, "history.activeProperty", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('&nbsp;<i class="fa fa-caret-down"></i></button><ul class="dropdown-menu pull-right" style="max-height : 200px; overflow: auto;">');
			d = c.each.call(a, "history.propertiesList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div></div></header><div role="content"><table id="history-list" class="table table-striped table-bordered table-hover dataTable no-footer" width="100%" role="grid" aria-describedby="dt_basic_info" style="width: 100%;"><thead><tr role="row"><th tabindex="0" aria-controls="dt_basic" class="text-center" style="width: 30%; max-width : 30%">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor", {
				name: "I18n", hash: {context: "history"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</th><th tabindex="0" aria-controls="dt_basic" class="text-center" style="width: 30%; max-width : 30%">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th tabindex="0" aria-controls="dt_basic" class="text-center" style="width: 15%; max-width : 15%">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "time_text", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th></tr></thead><tbody class="test">');
			d = c.each.call(a, "history.activeProperty.list.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tbody><tfoot ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "history.activeProperty.list.totalItems::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><tr><td colspan="3"><a id="next-page"');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :next :pull-right history.activeProperty.list.hasNext::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);" data-placement="top" data-original-title="Older">Load More</a></td></tr></tfoot></table><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":alert :alert-info :text-center history.activeProperty.list.pendingData.length:active:fade history.activeProperty.list.pendingData.length::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="new-history" style="position:absolute; top : 0; width: 100%"><button class="close" data-dismiss="alert">\u00d7</button><a id="retrieveHistory" href="javascript:void(0);" style="text-decoration:underline" title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "retrieve_history", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><h4 class="alert-heading message">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "new_message", {
				name: "I18n",
				hash: {context: "sound_settings"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" : ");
			d = c._triageMustache.call(a, "history.activeProperty.list.pendingData.length",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</h4></a></div>");
			d = c.unless.call(a, "history.activeProperty.list.totalItems", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a, "history.isLoading", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(12, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></article>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.dashboardHeaderSpark = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c["if"].call(a, "view.isPostiveGrowth", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.isNegativeGrowth", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(4, b), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "view.data.summary.growth", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("%");
			return ""
		}, 2: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-arrow-circle-up"></i>&nbsp;')
		}, 4: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-arrow-circle-down"></i>&nbsp;')
		}, 6: function (a, c, d, b) {
			d = c["if"].call(a, "view.iconClass", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "view.data.summary.current", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.iconClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>&nbsp;");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<h5 data-placement="bottom" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "view.tooltipText"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c._triageMustache.call(a, "view.labelText", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;<span ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.textColorClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a, "view.showAsPercentage", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(6, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			b.buffer.push('</span></h5><div class="sparkline"></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.dashboardView = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="alert alert-info" style="background-color: #fd7fb1!important;border-color: #fb6ea6!important;font-size: 14px;color: #ffffff!important;margin-bottom : 10px">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "resume_setup", {
				name: "I18n",
				hash: {
					variables: '{"linkStart" : "<a id=\'resume-wizard\' href=\'javascript:void(0);\' style=\'text-decoration: underline; color: inherit; cursor: pointer\'>", "linkEnd" : "<\\/a>"}',
					context: "dashboard"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 3: function (a, c, d, b) {
			a = c["if"].call(a, "Tawk.webProperties.sites.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 4: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c.view.call(a, "view.bannerView",
				{name: "view", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b})))
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e;
			e = c.helperMissing;
			d = this.escapeExpression;
			b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark"><i class="fa fa-dashboard"></i> ');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n", hash: {context: "dashboard"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</span></h1></div><div class="col-xs-8 col-sm-8 col-md-8 col-lg-8"><ul id="sparks">');
			b.buffer.push(d((c.HeaderSpark || a && a.HeaderSpark || e).call(a, {
				name: "HeaderSpark",
				hash: {
					dataBinding: "analytics.recent.series.visitors",
					tooltip: "visitors_today",
					icon: "fa-user",
					sparkColor: "#217ebb",
					textColorClass: "txt-color-tawk-dark-blue",
					label: "visitors"
				},
				hashTypes: {
					dataBinding: "STRING",
					tooltip: "STRING",
					icon: "STRING",
					sparkColor: "STRING",
					textColorClass: "STRING",
					label: "STRING"
				},
				hashContexts: {dataBinding: a, tooltip: a, icon: a, sparkColor: a, textColorClass: a, label: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d((c.HeaderSpark || a && a.HeaderSpark || e).call(a, {
				name: "HeaderSpark",
				hash: {
					dataBinding: "analytics.recent.series.visits",
					tooltip: "visits_today",
					icon: "fa-exchange",
					sparkColor: "#64db91",
					textColorClass: "txt-color-tawk-green",
					label: "visits"
				},
				hashTypes: {
					dataBinding: "STRING",
					tooltip: "STRING",
					icon: "STRING",
					sparkColor: "STRING",
					textColorClass: "STRING",
					label: "STRING"
				},
				hashContexts: {dataBinding: a, tooltip: a, icon: a, sparkColor: a, textColorClass: a, label: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(d((c.HeaderSpark || a && a.HeaderSpark || e).call(a, {
				name: "HeaderSpark",
				hash: {
					dataBinding: "analytics.recent.series.chats",
					tooltip: "chats_today",
					icon: "fa-comments",
					sparkColor: "#fb6ea6",
					textColorClass: "txt-color-tawk-pink",
					label: "chats"
				},
				hashTypes: {
					dataBinding: "STRING",
					tooltip: "STRING",
					icon: "STRING",
					sparkColor: "STRING",
					textColorClass: "STRING",
					label: "STRING"
				},
				hashContexts: {
					dataBinding: a,
					tooltip: a, icon: a, sparkColor: a, textColorClass: a, label: a
				},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</ul></div></div><div class="innerContent">');
			e = c["if"].call(a, "view.showResumeWizard", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push(d(c.view.call(a, "view.analyticsView", {
				name: "view",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("<section>");
			b.buffer.push(d(c.view.call(a, "view.historyView", {
				name: "view",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			e = c.unless.call(a, "Tawk.userController.bannerClosed", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push(d(c.view.call(a, "view.feedsView", {
				name: "view",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</section></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.dashboardFeeds = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li><a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "link"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank">');
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<article class="col-xs-12 col-sm-12 col-md-12 col-lg-4"><div class="jarviswidget" id="wid-id-1" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false"><header><span class="widget-icon"> <i class="fa fa-rss-square"></i> </span><h2>');
			b.buffer.push(e((c.I18n || a && a.I18n ||
				d).call(a, "blog_post", {
				name: "I18n",
				hash: {context: "dashboard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h2></header><div id="feed-content" role="content"><ul>');
			a = c.each.call(a, "feeds.feedsList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul></div></div></article>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.dashboardBanner =
		Ember.Handlebars.template({
			1: function (a, c, d, b) {
				b.buffer.push('<div class="button-container"><a href="/#/admin/addon-store" class="btn btn-primary">');
				a = c._triageMustache.call(a, "view.bannerButton", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</a></div>");
				return ""
			}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push('<article class="col-xs-12 col-sm-12 col-md-12 col-lg-4"><div class="jarviswidget" id="wid-id-1" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false"><header><span class="widget-icon"> <i ');
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {"class": "view.iconClassName"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push("></i> </span><h2>");
				d = c._triageMustache.call(a, "view.bannerTitle", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</h2><span class="close-banner"><i class="fa fa-times"></i></span></header><div class="content-container" role="content">');
				d = c._triageMustache.call(a, "view.bannerSubtitle", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				d = c["if"].call(a, "view.bannerButton", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</div></div></article>");
				return ""
			}, useData: !0
		});
	Ember.TEMPLATES.headerNotification = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<b class="badge"> ');
			a = c._triageMustache.call(a, "view.totalNotifications", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push(" </b>");
			return ""
		}, 3: function (a, c, d, b) {
			d = c["if"].call(a, "Tawk.userController.isAddOnSeen", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.program(9, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "invitations", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(11, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 4: function (a, c, d, b) {
			d = c.unless.call(a, "Tawk.userController.newAddonSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "Tawk.userController.webrtcAddonSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addon_live_agents", {
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div style="margin: 6px 0;display: inline-block; width: 100px;"><img class="addon-preview-image" src="https://static-a.tawk.to/v2/a34/images/hireagent-logo.png" /></div><div style="display: inline-block; width: 219px; vertical-align: middle;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_live_agent_description", {
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {
					variables: "STRING",
					context: "STRING"
				},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><span class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-hire-agent" data-bindattr-794="794">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-hire-agent" data-bindattr-795="795">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></span></span></li>");
			return ""
		}, 7: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addon_video_screensharing",
				{
					name: "I18n",
					hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
					hashTypes: {variables: "STRING", context: "STRING"},
					hashContexts: {variables: a, context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</div><div style="margin: 6px 0;display: inline-block; width: 100px;"><img class="addon-preview-image" src="https://static-a.tawk.to/v2/a34/images/video-chat-logo.png" /></div><div style="display: inline-block; width: 219px; vertical-align: middle;">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "notification_video_screensharing_description", {
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><span class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-webrtc" data-bindattr-794="794">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info",
				{
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-webrtc" data-bindattr-795="795">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></span></span></li>");
			return ""
		}, 9: function (a,
		                c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addons", {
				name: "I18n",
				hash: {
					variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>", "icon" : "<i class=\'fa fa-puzzle-piece\'></i>"}',
					context: "header"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div style="background-color: #4f4f4f; padding : 5px 0; margin : 3px 0;"><span style="color : #fff; float :left; width : 49%; text-align: right; margin-right : 1%;">powered by</span><span style="color : #fff; float :left; width : 49%; text-align: left; margin-left : 1%;"><span style="color : #fb6ea6; font-size: 14px; font-weight : 700; vertical-align : middle;">YourBrand</span><span style="text-decoration: line-through; display: block; margin-top: -8px;">&nbsp;tawk.to&nbsp;</span></span><div class="clearfix"></div></div><div>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addons_description", {
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><span class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-add-on" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-invite-id": "id"},
				hashTypes: {"data-invite-id": "STRING"},
				hashContexts: {"data-invite-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-add-on" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-invite-id": "id"}, hashTypes: {"data-invite-id": "STRING"},
				hashContexts: {"data-invite-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></span></span></li>");
			return ""
		}, 11: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="padding-10"><em class="badge padding-5 no-border-radius bg-color-blueLight txt-color-white pull-left margin-right-5"><i class="fa fa-user fa-fw fa-2x"></i></em><span><span>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "invitation", {
				name: "I18n",
				hash: {
					replaceVar: "true",
					variables: '{"propertyName" : "propertyName", "inviterName" : "inviterName"}',
					context: "header"
				},
				hashTypes: {replaceVar: "STRING", variables: "STRING", context: "STRING"},
				hashContexts: {replaceVar: a, variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;</span><span class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 accept" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-invite-id": "id"},
					hashTypes: {"data-invite-id": "STRING"},
					hashContexts: {"data-invite-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "accept", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 reject" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-invite-id": "id"},
				hashTypes: {"data-invite-id": "STRING"},
				hashContexts: {"data-invite-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "reject", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></span></span></span></li>");
			return ""
		}, 13: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="padding-10 no-notifications">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_notifications", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("<span></li>");
			return ""
		}, 15: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-group-icr" id="group-icr-min" checked="checked" />')
		}, 17: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-group-icr" id="group-icr-min" />')
		}, 19: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-visitor-details" id="visitor-details-toggle-min" checked="checked" />')
		},
		21: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-visitor-details" id="visitor-details-toggle-min" />')
		}, 23: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-all-chats" id="list-view-toggle-min" />')
		}, 25: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-all-chats" checked="checked" id="list-view-toggle-min" />')
		}, 27: function (a, c, d, b) {
			b.buffer.push('<span class="badge" style="background-color: #0091d9; color : #fff;">');
			a = c._triageMustache.call(a,
				"view.totalNotifications", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 29: function (a, c, d, b) {
			d = c["if"].call(a, "Tawk.userController.isAddOnSeen", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.program(35, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "invitations", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(37,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 30: function (a, c, d, b) {
			d = c.unless.call(a, "Tawk.userController.newAddonSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(31, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "Tawk.userController.webrtcAddonSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(33, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, 31: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addon_live_agents", {
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div style="margin: 6px 0;display: inline-block; width: 100px;"><img class="addon-preview-image" src="https://static-a.tawk.to/v2/a34/images/hireagent-logo.png" /></div><div style="display: inline-block; width: 219px; vertical-align: middle;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_live_agent_description", {
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {
					variables: "STRING",
					context: "STRING"
				},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-hire-agent" data-bindattr-794="794">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-hire-agent" data-bindattr-795="795">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></span></li>");
			return ""
		}, 33: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addon_video_screensharing",
				{
					name: "I18n",
					hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
					hashTypes: {variables: "STRING", context: "STRING"},
					hashContexts: {variables: a, context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</div><div style="margin: 6px 0;display: inline-block; width: 100px;"><img class="addon-preview-image" src="https://static-a.tawk.to/v2/a34/images/video-chat-logo.png" /></div><div style="display: inline-block; width: 219px; vertical-align: middle;">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "notification_video_screensharing_description", {
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-webrtc" data-bindattr-794="794">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-webrtc" data-bindattr-795="795">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></span></li>");
			return ""
		}, 35: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addons", {
				name: "I18n",
				hash: {
					variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>", "icon" : "<i class=\'fa fa-puzzle-piece\'></i>"}',
					context: "header"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div style="background-color: #4f4f4f; padding : 5px 0; margin : 3px 0;"><span style="color : #fff; float :left; width : 49%; text-align: right; margin-right : 1%;">powered by</span><span style="color : #fff; float :left; width : 49%; text-align: left; margin-left : 1%;"><span style="color : #fb6ea6; font-size: 14px; font-weight : 700; vertical-align : middle;">YourBrand</span><span style="text-decoration: line-through; display: block; margin-top: -8px;">&nbsp;tawk.to&nbsp;</span></span><div class="clearfix"></div></div><div>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addons_description", {
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div><div class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-add-on" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-invite-id": "id"},
				hashTypes: {"data-invite-id": "STRING"},
				hashContexts: {"data-invite-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-add-on" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-invite-id": "id"}, hashTypes: {"data-invite-id": "STRING"},
				hashContexts: {"data-invite-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></span></li>");
			return ""
		}, 37: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><span class="padding-10"><em class="badge padding-5 no-border-radius bg-color-blueLight txt-color-white pull-left margin-right-5"><i class="fa fa-user fa-fw fa-2x"></i></em><span><span>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "invitation", {
				name: "I18n",
				hash: {
					replaceVar: "true",
					variables: '{"propertyName" : "propertyName", "inviterName" : "inviterName"}',
					context: "header"
				},
				hashTypes: {replaceVar: "STRING", variables: "STRING", context: "STRING"},
				hashContexts: {replaceVar: a, variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;</span><div class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 accept" ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-invite-id": "id"},
					hashTypes: {"data-invite-id": "STRING"},
					hashContexts: {"data-invite-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "accept", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 reject" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-invite-id": "id"},
				hashTypes: {"data-invite-id": "STRING"},
				hashContexts: {"data-invite-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "reject", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></span></span></li>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div id="full-header-menu" style=""><a href="javascript:void(0);" id="group-icr" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":sidebar-visitors-action Tawk.userController.groupIncomingRequests:selected"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="bottom"><i class="fa fa-object-group"></i></a><a href="javascript:void(0);" id="visitor-details-toggle" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":sidebar-visitors-action Tawk.userController.visitorDetailsHoverEnabled:selected"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-original-title="Disabled visitor details on hover." data-placement="bottom"><i class="fa fa-id-card-o"></i></a><a href="javascript:void(0);" id="list-view-toggle" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":sidebar-visitors-action Tawk.userController.sidebarChatListAll:selected"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('  data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "chat_list_details", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="bottom"><i class="fa fa-filter"></i></a><div id="invitation-notification-container"><span id="activity" class="activity-dropdown"><i class="fa fa-bell"></i>');
			d = c["if"].call(a, "view.hasNotifications", {
				name: "if", hash: {}, hashTypes: {},
				hashContexts: {}, fn: this.program(1, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><div class="ajax-dropdown"><div class="ajax-notifications custom-scroll"><ul class="notification-body">');
			d = c["if"].call(a, "view.hasNotifications", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div></div></div></div><div id="minified-header-menu" class="dropdown"><a href="javascript:void(0);" data-toggle="dropdown"><i class="fa fa-navicon"></i></a><ul class="dropdown-menu multi-level text-left" role="menu" style="min-width : 300px; margin-top : 13px; border-radius: 5px;"><li><div class="smart-form" style=\'padding : 5px 20px;\'><label class="toggle" style="font-size : inherit">');
			d = c["if"].call(a, "Tawk.userController.groupIncomingRequests", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.program(17, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "yes", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "no", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i><span class="fa fa-object-group"></span> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "group_icr", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div></li><li><div class="smart-form" style=\'padding : 5px 20px;\'><label class="toggle" style="font-size : inherit">');
			d = c["if"].call(a, "Tawk.userController.visitorDetailsHoverEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.program(21, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "yes", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "no", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i><span class="fa fa-id-card-o"></span> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "show_visitor_details", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div></li><li><div class="smart-form" style=\'padding : 5px 20px;\'><label class="toggle" style="font-size : inherit">');
			d = c["if"].call(a, "Tawk.userController.sidebarChatListAll", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.program(25, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "yes", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a &&
				a.I18n || f).call(a, "no", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i><span class="fa fa-filter"></span> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "show_my_chats", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></div></li><li class="divider"></li><li class="dropdown-submenu"><a tabindex="-1" href="javascript:void(0);"><i class="fa fa-bell"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "notifications", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("&nbsp;");
			d = c["if"].call(a, "view.hasNotifications", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a><ul class="notification-body dropdown-menu" style="min-width : 400px; max-height : 300px; overflow: auto;">');
			d = c["if"].call(a, "view.hasNotifications", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(29, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></li></ul></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.imageCropView = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div id="image-crop" class="hidden"><div id="crop-container"><div class="jcrop-holder"><div id="cropper"><div id="cropper-frame"><canvas id="moveable-image"></canvas><div class="jcrop-hline" style=""></div><div class="jcrop-hline bottom"></div><div class="jcrop-vline right"></div><div class="jcrop-vline"></div><div class="jcrop-tracker"></div></div></div><canvas id="static-image" class="pull-left"></canvas><canvas id="source-image"></canvas></div></div><div id="crop-control-container"><div class="form-group"><input id="range-slider-3" type="text" name="range_2a" value="" /></div><div class="text-right button-container"><button class="btn btn-default cancel">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-tawk-pink" id="apply-crop">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "apply", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div></div><div id="image-camera-view" class="hidden"><div id="camera-container"><video id="v" width="320" height="240" autoplay class="hidden"></video></div><div class="text-right button-container hidden"><button class="btn btn-default cancel">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button class="btn btn-tawk-pink" id="capture-image">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "capture", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.leaderboardMain = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-type="site">');
			b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<tr><td ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":text-center isFirst:is-first"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a, "isFirst", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.program(6, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "agentName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "chats", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "positive", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "negative", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "hours", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "chatsPerHour", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 4: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-trophy" style="color:rgb(255,0,115); font-size : 20px;"></i>')
		}, 6: function (a, c, d, b) {
			a = c._triageMustache.call(a, "index", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 8: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<p class="empty-leaderboard">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "leaderboard_empty", {
				name: "I18n",
				hash: {context: "leaderboard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p>");
			return ""
		}, 10: function (a, c, d, b) {
			b.buffer.push('<p class="error"><i class="fa fa-exclamation"></i> ');
			a = c._triageMustache.call(a,
				"view.errorMessage", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</p>    ");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e;
			e = c.helperMissing;
			d = this.escapeExpression;
			b.buffer.push('<div class="content"><div id="headerContainer" class="row view-header"><div class="col-xs-12 col-sm-12 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark"><i class="fa fa-trophy"></i> ');
			b.buffer.push(d((c.I18n ||
				a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "leaderboard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h1></div><div id="view-controls-container" class="col-xs-12 col-sm-12 col-md-8 col-lg-8"><div class="smart-form"><div id="view-controls" class="pull-right"><div id="filter-clients-container" class="pull-left"><label class="select"><select id="property-select" class=""><option value="all">All Clients</option>');
			e = c.each.call(a,
				"clientProperties", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != e && b.buffer.push(e);
			b.buffer.push('</select><i></i></label></div><div id="filter-period-container" class="pull-left"><ul><li class="filter-period active" id="period-1w">1w</li><li class="filter-period" id="period-4w">4w</li><li class="filter-period" id="period-1y">1y</li><li class="filter-period" id="period-mtd">Mtd</li><li class="filter-period" id="period-qtd">Qtd</li><li class="filter-period" id="period-ytd">Ytd</li><li class="filter-period" id="period-all">All</li></ul></div><div id="filter-date-container" class="pull-left"><div id="filter-container" class="smart-form"><button id="openFilter" type="button" class="btn dropdown-toggle btn-xs btn-default"><span id="filter-from"></span><span class="to"> - </span><span id="filter-to"></span><span> <i class="fa fa-caret-down"></i></span></button><div id="filterBack"></div><div class="dropdown-menu pull-right smart-form" role="menu" id="analytics-filter"><form><fieldset><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">From</label><label class="input"><i class="icon-append fa fa-calendar"></i><input type="text" id="analytics-from" /></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">To</label><label class="input"><i class="icon-append fa fa-calendar"></i><input type="text" id="analytics-to" /></label></section></fieldset></form><footer><button type="submit" class="btn btn-primary search" id="applyFilter">Submit</button><button type="submit" class="btn btn-default" id="closeFilter">Close</button></footer></div><div class="clearfix"></div></div></div><div style="clear:both;"></div></div></div></div><div style="clear:both;"></div></div><div class="innerContent"><div id="view-table-container"><table id="view-table" class="table table-bordered table-striped table-hover dataTable no-footer">  <thead>    <tr>      <th id="table-sort" class="text-center">Position <span><i id="table-sort-icon" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa isReversed:fa-sort-amount-asc:fa-sort-amount-desc"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></i></span></th>      <th class="text-center">Agent</th>      <th class="text-center">Chats</th>      <th class="text-center">Likes</th>      <th class="text-center">Dislikes</th>      <th class="text-center">Hours</th>      <th class="text-center">Chats / Hour</th>    </tr>  </thead>  <tbody ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading:visibilityHidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">  ");
			e = c.each.call(a, "tableData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push("  </tbody></table>");
			e = c["if"].call(a, "isTableDataEmpty", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(8, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != e && b.buffer.push(e);
			e = c["if"].call(a, "view.errorMessage", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != e && b.buffer.push(e);
			b.buffer.push('</div><div id="list-loading" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.leftPanel = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<div style="padding: 10px 5px; text-align : center;">');
			d = c["with"].call(a, "unAnsweredIgnoredCount", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["with"].call(a, "unAnsweredCount", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, 2: function (a, c, d, b) {
			a = c["if"].call(a, "num", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="active-chats"><p style="color : #fff; text-transform : none;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "incoming_ignored", {
				name: "I18n",
				hash: {variables: '{"num" : "num"}', replaceVar: "true", context: "sidebar"},
				hashTypes: {variables: "STRING", replaceVar: "STRING", context: "STRING"},
				hashContexts: {variables: a, replaceVar: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></div>");
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="active-chats"><p style="color : #fff; text-transform : none;">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "incoming_pending", {
				name: "I18n",
				hash: {variables: '{"num" : "num"}', replaceVar: "true", context: "sidebar"},
				hashTypes: {variables: "STRING", replaceVar: "STRING", context: "STRING"},
				hashContexts: {variables: a, replaceVar: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p>");
			d = c["if"].call(a, "num", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			d = c["if"].call(a,
				"num", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(8, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			return ""
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<a id="open-oldest" href="javascript:void(0);" class="btn btn-default btn-xs" style="text-transform : none;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "open_next", {
				name: "I18n", hash: {context: "sidebar"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</a>");
			return ""
		}, 8: function (a, c, d, b) {
			b.buffer.push('<a id="open-oldest" href="javascript:void(0);" class="btn btn-default btn-xs active-chats-short">I (');
			a = c._triageMustache.call(a, "num", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push(")</a>");
			return ""
		}, 10: function (a, c, d, b) {
			a = c["if"].call(a, "Tawk.userController.user.isHiredAgent", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(15, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 11: function (a, c, d, b) {
			a = c["if"].call(a, "Tawk.leftPanelController.hasMoreICR", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.program(15, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 12: function (a, c, d, b) {
			b.buffer.push('<ul id="incomingChats" class="visitor-list" style="display : block;">');
			a = c.each.call(a, "Tawk.leftPanelController.compressICR", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":padding-5 :waiting :unseen :compressed-icr isClientProperty:client-property"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);" class="open-next-icr" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "propertyId"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="padding : 0;"><span style="display: inline-block;">');
			d = c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d &&
			b.buffer.push(d);
			b.buffer.push('</span><span style="border : 1px solid #fff; border-radius : 3px; display: inline-block; width: 24px; text-align: center; font-weight : bold; float: right;margin-left : -100%;">');
			d = c._triageMustache.call(a, "chatsTotal", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><div class="clearfix"></div></a></li>');
			return ""
		}, 15: function (a, c, d, b) {
			b.buffer.push('<ul id="incomingChats" class="visitor-list" style="display : block;">');
			a = c.each.call(a, "Tawk.liveMonitoringController.allUnansweredList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, 16: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.VisitorItem || a && a.VisitorItem || d).call(a, {
				name: "VisitorItem",
				hash: {isActive: "true", contentBinding: "this"},
				hashTypes: {isActive: "STRING", contentBinding: "STRING"},
				hashContexts: {
					isActive: a,
					contentBinding: a
				},
				types: [],
				contexts: [],
				data: b
			})))
		}, 18: function (a, c, d, b) {
			a = c["if"].call(a, "property.list.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 19: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":property-list :top-menu-invisible property.isOpen:open"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a class="list-name-container" href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "property.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="padding-right :5px;" ><p style="float: left; width: 100%; display: block; margin : 0;"><span class="property-name full-name">');
			d = c._triageMustache.call(a, "property.name",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="property-name-short add-tooltip" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "property.name"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="right">');
			b.buffer.push(e(c._triageMustache.call(a, "property.firstCharName",
				{
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</span></p><span style="color : #bbc0cf; border : 1px solid #bbc0cf; border-radius : 3px; display: inline-block; width: 24px; text-align: center; font-weight : bold; float: right;margin-left : -100%;">');
			d = c._triageMustache.call(a, "property.list.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><div class="clearfix"></div></a>');
			d = c["if"].call(a, "property.isOpen", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</li>");
			return ""
		}, 20: function (a, c, d, b) {
			b.buffer.push('<ul class="visitor-list">');
			a = c.each.call(a, "property.list", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, 22: function (a, c, d, b) {
			a = c["if"].call(a, "property.list.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 23: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":property-list :top-menu-invisible property.isOpen:open"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a class="list-name-container" href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "property.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="padding-right :5px;"><p style="float: left; width: 100%; display: block; margin : 0;"><span class="property-name full-name">');
			d = c._triageMustache.call(a, "property.name",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="property-name-short add-tooltip" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "property.name"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="right">');
			b.buffer.push(e(c._triageMustache.call(a, "property.firstCharName",
				{
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</span></p><span style="color : #bbc0cf; border : 1px solid #bbc0cf; border-radius : 3px; display: inline-block; width: 24px; text-align: center; font-weight : bold; float: right;margin-left : -100%;">');
			d = c._triageMustache.call(a, "property.list.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><div class="clearfix"></div></a>');
			d = c["if"].call(a, "property.isOpen", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</li>");
			return ""
		}, 25: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.HoverView || a && a.HoverView || d).call(a, {
				name: "HoverView",
				hash: {isVisibleBinding: "view.hoverContentVisible", contentBinding: "view.hoverContent"},
				hashTypes: {isVisibleBinding: "STRING", contentBinding: "STRING"},
				hashContexts: {isVisibleBinding: a, contentBinding: a},
				types: [],
				contexts: [],
				data: b
			})))
		}, 27: function (a, c, d, b) {
			a = c.each.call(a, "view.groupSearch", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(28, b),
				inverse: this.program(33, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 28: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":add-tooltip newChat:waiting unSeen:unseen inView:in-view showFlash:flash-new-message :chat-item :pin-parent"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "groupName", "data-chat-id": "groupId"},
				hashTypes: {"data-original-title": "STRING", "data-chat-id": "STRING"},
				hashContexts: {"data-original-title": a, "data-chat-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="right"><a href="javascript:void(0);" class="pull-left chat-open group-chat"><div class="agent-name-container">');
			d = c["if"].call(a, "hasDraft", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(29, b),
				inverse: this.program(31, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="text">');
			b.buffer.push(e(c._triageMustache.call(a, "highLighted", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</span></div></a><a href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-thumb-tack"></i></a></div>');
			return ""
		}, 29: function (a, c, d, b) {
			b.buffer.push("<i class=\"fa fa-pencil\" style='font-weight : bold;'></i>")
		}, 31: function (a,
		                 c, d, b) {
			b.buffer.push('<i class="fa fa-group"></i>')
		}, 33: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="chat-item padding-10">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "not_found", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 35: function (a, c, d, b) {
			a = c.each.call(a, "Tawk.agentChatController.latestGroupMessagesList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(36, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 36: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":add-tooltip newChat:waiting unSeen:unseen inView:in-view showFlash:flash-new-message :chat-item :pin-parent"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "groupName", "data-chat-id": "groupId"},
				hashTypes: {"data-original-title": "STRING", "data-chat-id": "STRING"},
				hashContexts: {"data-original-title": a, "data-chat-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="right"><a href="javascript:void(0);" class="pull-left chat-open group-chat"><div class="agent-name-container">');
			d = c["if"].call(a, "hasDraft", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(29,
					b), inverse: this.program(31, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="text">');
			d = c._triageMustache.call(a, "groupName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></div></a><a href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-thumb-tack"></i></a></div>');
			return ""
		}, 38: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li class="text-center browse-list" style="margin : 5px 0;"><button class="btn btn-default btn-sm open-group-list">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "browse_groups", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></li>");
			return ""
		}, 40: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<div id="agentList" class="list-section nonVisitorsList"><div class="sidebar-title"><div class="active-chats-long"><div class="sidebar-search-container"><div style="margin-right: 22px;position: relative;"><i class="icon-append fa fa-search"></i><a href="javascript:void(0);" class="hidden clear-dm-search clear-search"> <i class="fa fa-close"></i></a><input type="text" id="search-dm" class="search-input" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {placeholder: "view.dmSearchPlaceholder"},
				hashTypes: {placeholder: "STRING"},
				hashContexts: {placeholder: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></div></div><a id="toggle-inline-dm-chat" href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":dropdown-toggle :add-tooltip :toggle-agent-chat-view Tawk.agentChatController.inlineDirectMessage:active"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-toggle="dropdown" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "view.inlineDMTooltip"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="bottom" aria-haspopup="true" aria-expanded="false"><span class="fa fa-window-restore" style="font-size: 13px;"></span></a><div class="clearfix"></div></div><div class="active-chats-short"><a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" style="color : inherit;"><i class="fa fa-lg fa-fw fa-comment-o"></i></a><ul class="dropdown-menu" style="position: fixed; width : 300px; left : 80px;"><li><a href="javascript:void(0);" class="open-dm-list"><i class="fa fa-comment-o"></i> ');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "browse_dm", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li class="divider"></li><li class="smart-form" style="padding: 10px 11px;"><label class="checkbox"><input type="checkbox" id="dm-chat-view" name="checkbox-toggle" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "Tawk.agentChatController.inlineDirectMessage"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "show_dm_inline", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></li></ul></div></div><ul id="agents" class="chat-users"><li><div class="display-users">');
			d = c["if"].call(a, "view.hasDMSearch", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(41, b),
				inverse: this.program(45,
					b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></li>");
			d = c["if"].call(a, "view.hasDMSearch", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(48, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></div>");
			return ""
		}, 41: function (a, c, d, b) {
			a = c.each.call(a, "view.dmSearch", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(42, b),
				inverse: this.program(33, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 42: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":add-tooltip newChat:waiting unSeen:unseen inView:in-view showFlash:flash-new-message :chat-item :pin-parent"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("  ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "name", "data-chat-id": "id"},
				hashTypes: {"data-original-title": "STRING", "data-chat-id": "STRING"},
				hashContexts: {"data-original-title": a, "data-chat-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="right"><a href="javascript:void(0);" class="pull-left chat-open agent-chat" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-chat-status": "status"},
				hashTypes: {"data-chat-status": "STRING"},
				hashContexts: {"data-chat-status": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c.action.call(a,
				"openAgentChat", "id", {
					name: "action",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["STRING", "ID"],
					contexts: [a, a],
					data: b
				})));
			b.buffer.push(' ><div class="agent-name-container">');
			d = c["if"].call(a, "hasDraft", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(29, b),
				inverse: this.program(43, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="text">');
			b.buffer.push(e(c._triageMustache.call(a, "highLighted", {
				name: "_triageMustache", hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"}, hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</span></div></a><a href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-thumb-tack"></i></a></div>');
			return ""
		}, 43: function (a, c, d, b) {
			b.buffer.push('<i class="status-indicator"></i>')
		}, 45: function (a,
		                 c, d, b) {
			a = c.each.call(a, "Tawk.agentChatController.latestDirectMessagesList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(46, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 46: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":add-tooltip newChat:waiting unSeen:unseen inView:in-view showFlash:flash-new-message :chat-item :pin-parent"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("  ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "name", "data-chat-id": "id"},
				hashTypes: {"data-original-title": "STRING", "data-chat-id": "STRING"},
				hashContexts: {"data-original-title": a, "data-chat-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="right"><a href="javascript:void(0);" class="pull-left chat-open agent-chat" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-chat-status": "status"},
				hashTypes: {"data-chat-status": "STRING"},
				hashContexts: {"data-chat-status": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c.action.call(a, "openAgentChat", "id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
			b.buffer.push(' ><div class="agent-name-container">');
			d = c["if"].call(a, "hasDraft", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(29, b),
				inverse: this.program(43, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="text">');
			b.buffer.push(e(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></div></a><a href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-thumb-tack"></i></a></div>');
			return ""
		}, 48: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li class="text-center browse-list" style="margin : 5px 0;"><button class="btn btn-default btn-sm open-dm-list">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "browse_dm", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></li>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div id="unseen-top" class="hidden"><span class="text">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "unseen", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span>&nbsp;<i class="fa fa-arrow-up"></i></div><nav id="visitors"><div id="visitorsScrollContainer"><div ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":list-section Tawk.liveMonitoringController.allUnansweredList.length::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' style="border-bottom: 1px solid #1A1817!important;"><div id="icr-title" class="sidebar-title"  style="padding-right :5px;"><p style="float: left; width: 100%; display: block; margin : 0;"><span class="active-chats full-name">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "incoming", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></p><span style="color : #bbc0cf; border : 1px solid #bbc0cf; border-radius : 3px; display: inline-block; width: 24px; text-align: center; font-weight : bold; float: right;margin-left : -100%;">');
			d = c._triageMustache.call(a, "Tawk.liveMonitoringController.allUnansweredList.length", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><div class="clearfix"></div></div>');
			d = c["if"].call(a, "Tawk.userController.groupIncomingRequests", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(10, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="list-section"><ul id="activeVisitors" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "Tawk.userController.sidebarChatListAll::hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			d = c.each.call(a, "property", "in", "chatsListByProperty", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul><ul id="myChatsList" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "Tawk.userController.sidebarChatListAll:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c.each.call(a, "property", "in", "myChatsListByProperty", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></div>");
			d = c["if"].call(a, "view.visitorDetailsHoverIsEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(25, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="channelList" class="list-section nonVisitorsList"><div class="sidebar-title"><div class="active-chats-long"><div class="sidebar-search-container"><div style="margin-right: 40px;position: relative;"><i class="icon-append fa fa-search"></i><a href="javascript:void(0);" class="hidden clear-group-search clear-search"> <i class="fa fa-close"></i></a><input type="text" class="search-input" id="search-group" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {placeholder: "view.groupSearchPlaceholder"},
				hashTypes: {placeholder: "STRING"},
				hashContexts: {placeholder: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></div></div><a id="toggle-inline-group-chat" href="javascript:void(0);" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":dropdown-toggle :add-tooltip :toggle-agent-chat-view Tawk.agentChatController.inlineGroupChat:active"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-toggle="dropdown" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "view.inlineGroupTooltip"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="bottom" aria-haspopup="true" aria-expanded="false"><span class="fa fa-window-restore" style="font-size: 13px;"></span></a><a id="new-group" href="javascript:void(0);" class="add-tooltip new-group" data-original-title="');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "new_group", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="bottom"><span class="fa-stack"><i class="fa fa-circle-o fa-stack-2x"></i><i class="fa fa-plus fa-stack-1x"></i></span></a><div class="clearfix"></div></div><div class="active-chats-short"><a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" style="color : inherit;"><i class="fa fa-lg fa-fw fa-group"></i></a><ul class="dropdown-menu" style="position: fixed; width : 300px; left : 80px;"><li><a href="javascript:void(0);" class="new-group"><i class="fa fa-plus"></i> ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "create_group", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="open-group-list"><i class="fa fa-group"></i> ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "browse_groups", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li class="divider"></li><li class="smart-form" style="padding: 10px 11px;"><label class="checkbox"><input type="checkbox" id="group-chat-view" name="checkbox-toggle" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "Tawk.agentChatController.inlineGroupChat"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "show_group_inline", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></li></ul></div></div><ul id="channels" class="chat-users"><li><div class="display-users" style="overflow: auto;">');
			d = c["if"].call(a, "view.hasGroupSearch", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(27, b),
				inverse: this.program(35, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></li>");
			d = c["if"].call(a, "view.hasGroupSearch",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(38, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></div>");
			d = c["if"].call(a, "Tawk.agentChatController.directMessagesList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(40, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></nav><div id="unseen-bottom" class="hidden"><span class="text">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "unseen", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span>&nbsp;<i class="fa fa-arrow-down"></i></div><span class="minifyme" data-action="minifyMenu" style="position: absolute; bottom : 10px;"><i class="fa fa-arrow-circle-left hit"></i></span>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorItem = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<span ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa incomingCall:fa-phone:fa-volume-control-phone"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></span>");
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push("<i></i>")
		}, 5: function (a, c, d, b) {
			a = c.each.call(a, "view.content.participatingAgentsNamesArr", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ?
				b.buffer.push(a) : b.buffer.push("")
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<p class="participating-agents" style="border: 1px dashed #fff;padding: 1px 3px; margin: 4px 0 0 5px; white-space: nowrap; overflow: hidden;text-overflow: ellipsis; text-align: center; width : 62px; ">');
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p>");
			return ""
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<span ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":unseen-count view.totalUnseen::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "view.totalUnseen", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, compiler: [6,
			">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<a href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":visitor-name view.content.highlightColor view.content.inView:in-view view.content.currentFocus:focused view.content.isClientProperty:client-property view.content.unSeen:unseen"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-chat-status": "view.content.st"},
					hashTypes: {"data-chat-status": "STRING"},
					hashContexts: {"data-chat-status": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' style="padding: 5px;"><div style="display : table; width : 100%; table-layout: fixed;"><div style="display : table-row"><div style="vertical-align: middle;display: table-cell; "><div style="display: table; width : 100%; table-layout: fixed;"><div style="display: table-row"><div style="display: table-cell; width : 16px; text-align : center;vertical-align: middle;"><span ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "countryFlag"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="margin : 0; display: block;"></span></div><div style="display: table-cell; vertical-align: middle;"><span class="menu-item-parent" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding-left : 5px;">');
			d = c._triageMustache.call(a, "view.content.displayName", {
				name: "_triageMustache", hash: {},
				hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></div></div><div style="display: table-row"><div class="status-display" style="vertical-align: middle;display: table-cell; text-align : center;">');
			d = c["if"].call(a, "ongoingCall", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div style="display: table-cell; padding-left : 5px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; vertical-align: middle">');
			d = c._triageMustache.call(a, "view.content.propertyName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div></div><div style="vertical-align: middle; display: table-cell; width: 67px; text-align: right;"><button ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.content.cr::hidden :ignore-visitor :text-right :btn :btn-default :btn-xs"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-placement="bottom" data-original-title="Ignore Chat"><i class="fa fa-eye-slash fa-lg"></i></button>');
			d = c["if"].call(a, "view.content.ha", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div></div>");
			d = c["if"].call(a, "view.content.isOpen", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorDetails = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li class="participating-agents"><p><i class="fa fa-eye"></i>');
			b.buffer.push(d(c._triageMustache.call(a, "view.content.participatingAgentsNames", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</p></li>");
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "view.content.pt", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 5: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.content.pu", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li><p><a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "view.content.rf"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank" class="linkable"> &gt; ');
			b.buffer.push(d(c._triageMustache.call(a, "view.content.rf", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></p></li>");
			return ""
		}, 9: function (a,
		                c, d, b) {
			b.buffer.push("<li><p>");
			a = c._triageMustache.call(a, "view.content.departmentName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</p></li>");
			return ""
		}, 11: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.content.cy", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push(",");
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<p>(");
			b.buffer.push(d(c._triageMustache.call(a, "view.content.htn", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(")</p>");
			return ""
		}, 15: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<span class="pull-left ignore-visitor"><i class="fa fa-eye-slash"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ignore_visitor", {
				name: "I18n", hash: {context: "visitors"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("&nbsp;</span>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<a href="javascript:void(0);" class="visitor-name"><span class="menu-item-parent">');
			b.buffer.push(e(c._triageMustache.call(a, "view.content.n", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a><ul class="visitor-details"><li class="property"><p><i class="fa fa-bookmark-o"></i>');
			d = c._triageMustache.call(a, "view.content.propertyName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p></li>");
			d = c["if"].call(a, "view.content.ha", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			b.buffer.push("<li><p><a ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "view.content.pu"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank" class="linkable" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {alt: "view.content.pu"},
				hashTypes: {alt: "STRING"},
				hashContexts: {alt: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a, "view.content.pt", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a></p></li>");
			d = c["if"].call(a, "view.content.rf", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.content.dpt", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("<li><p>");
			d = c["if"].call(a, "view.content.cy", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c._triageMustache.call(a, "view.content.cn", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;(");
			d = c._triageMustache.call(a, "view.content.ip", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(")</p>");
			d = c["if"].call(a, "view.content.htn", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</li><li><p><span class="pull-left"><span ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.content.browser"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></span>&nbsp;<span ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.content.operatingSystem"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span></span><span class="clearfix"></span></p></li><li><p class="device-details">');
			d = c.unless.call(a, "view.content.ignore", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="pull-left ban-visitor"><i class="fa fa-ban"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_visitor", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('&nbsp;</span><span class="clearfix"></span></p></li><li><p class="stats-details"><span class="label label-default">');
			d = c._triageMustache.call(a, "view.content.v", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" ");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "visits", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span><span class="label label-default">');
			d = c._triageMustache.call(a, "view.content.cs", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" ");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "chats", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span><span class="label label-default">');
			d = c._triageMustache.call(a, "view.content.formattedDuration", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span class="clearfix"></span></p></li></ul><div class="ban-form"><form class="smart-form"><fieldset><section><label class="label">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_question", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea"><textarea name="banReason" class="required banReason" rows="2" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_reason", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" maxlength="500"></textarea></label></section><section><label class="checkbox"><input type="checkbox" name="banIp" class="banIp"><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_ip", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section></fieldset><footer><button type="submit" class="btn btn-primary ban-visitor">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban",
				{
					name: "I18n",
					hash: {context: "buttons"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</button><button type="button" class="btn btn-default close-ban-form">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.mainNav = Ember.Handlebars.template({
		1: function (a,
		             c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(' <li class="dropdown-header">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</li>");
			a = c.each.call(a, "view.sites", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push('<li class="divider"></li>');
			return ""
		}, 2: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<li><div class="smart-form" style=\'padding : 5px 20px;\'><label class="toggle" style="font-size : inherit">');
			d = c["if"].call(a, "isStatusEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i data-swchon-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "yes", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "no", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i>');
			b.buffer.push(f(c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></div></li>");
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<input type="checkbox" name="checkbox-toggle" checked="checked" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-property-id": "id"},
				hashTypes: {"data-property-id": "STRING"},
				hashContexts: {"data-property-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			return ""
		}, 5: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<input type="checkbox" name="checkbox-toggle" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-property-id": "id"},
				hashTypes: {"data-property-id": "STRING"},
				hashContexts: {"data-property-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			return ""
		}, 7: function (a, c, d, b) {
			a = c._triageMustache.call(a, "ScheduledPropertiesHeaderView", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 9: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<li class="presentation" id="desktop-notification-container"><div class="smart-form" style=\'padding : 5px 20px;\'><section style="margin-bottom : 0;"><label class="toggle" style="font-size : inherit">');
			d = c["if"].call(a, "view.desktopNotificationIsEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.program(12, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i data-swchon-text="');
			b.buffer.push(f((c.I18n || a && a.I18n ||
				e).call(a, "on", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "off", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "desktop_notifications", {
				name: "I18n", hash: {context: "header"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</label></section></div></li>");
			return ""
		}, 10: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-toggle" class="desktop-notification-switch" checked="checked">')
		}, 12: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-toggle" class="desktop-notification-switch">')
		}, 14: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-toggle" class="sound-notification-switch" checked="checked">')
		},
		16: function (a, c, d, b) {
			b.buffer.push('<input type="checkbox" name="checkbox-toggle" class="sound-notification-switch">')
		}, 18: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<img src="a34/images/blank.gif"  ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "flagClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {alt: "title"},
				hashTypes: {alt: "STRING"}, hashContexts: {alt: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("><span>&nbsp;");
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("&nbsp;</span>");
			return ""
		}, 20: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li><a href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {id: "code"}, hashTypes: {id: "STRING"},
				hashContexts: {id: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' class="change-language"><img src="a34/images/blank.gif" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "flagClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {alt: "title"},
				hashTypes: {alt: "STRING"},
				hashContexts: {alt: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" />&nbsp;");
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, 22: function (a, c, d, b) {
			b.buffer.push('<li id="schedules-select" class="navigate-view menu-tooltip nav-select" data-placement="right"data-original-title="Live Answering Schedule"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-calendar"></i></a></li><li id="leaderboard-select" class="navigate-view menu-tooltip nav-select" data-placement="right"data-original-title="Leaderboard"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-trophy"></i></a></li><li id="schedules-select" class="menu-tooltip nav-select" data-placement="right"data-original-title="Client News"><a href="https://af.tawk.link/" class="nav-item" target="_blank"><i class="fa fa-newspaper-o"></i></a></li>')
		},
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div id="profile-nav"><div class="dropdown nav-select"><a href="javascript:void(0);" class="nav-item" data-toggle="dropdown"><i class="fa fa-user"></i><div id="profile-image"></div><div style="    position: absolute;    position: absolute;    bottom: -2.5px;    right: -3px;    width: 15px;    height: 15px;    background: #666;    border-radius: 50%;"></div><div id="account-status" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.statusClassName"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></div></a><ul id="account-menu-container" class="dropdown-menu multi-level text-left" role="menu" style="min-width : 250px; margin-top : 13px;"><li><a tabindex="-1" href="javascript:void(0);" class="navigate-view" id="account-select">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "my_profile", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li class="dropdown-submenu" id="status-select"><a href="javascript:void(0);"><span ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.statusClassName"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span>&nbsp;<span style="display: inline-block; vertical-align: middle">');
			d =
				c._triageMustache.call(a, "view.statusDisplayText", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></a><ul class="dropdown-menu"><li><a tabindex="-1" href="javascript:void(0);" class="status-select" id="online"><span class="status-online"></span>&nbsp;<span style="display: inline-block; vertical-align: middle">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "online", {
				name: "I18n", hash: {context: "status_types"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</span></a></li><li><a href="javascript:void(0);" class="status-select" id="away"><span class="status-away"></span>&nbsp;<span style="display: inline-block; vertical-align: middle">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "away", {
				name: "I18n",
				hash: {context: "status_types"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li><a href="javascript:void(0);" class="status-select" id="invisible"><span class="status-invisible"></span>&nbsp;<span style="display: inline-block; vertical-align: middle">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "invisible", {
				name: "I18n",
				hash: {context: "status_types"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li></ul></li><li class="dropdown-submenu" id="property-status-toggle"><a href="javascript:void(0);">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "accept_chats_from", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a><ul class="dropdown-menu" style="min-width : 420px; max-height : 300px; overflow: auto;">');
			d = c["if"].call(a, "view.sites.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<li class="dropdown-header">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push("</li>");
			d = c.each.call(a, "view.pages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></li>");
			d = c["if"].call(a, "Tawk.userController.user.isHiredAgent", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<li class="divider"></li>');
			d = c["if"].call(a, "view.hasDesktopNotificationFeature", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<li class="presentation" id="sound-notification-container"><div class="smart-form" style=\'padding : 5px 20px;\'><section style="margin-bottom : 0;"><label class="toggle" style="font-size : inherit">');
			d = c["if"].call(a, "view.soundNotificationIsEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.program(16, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<i data-swchon-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "on", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "off", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('"></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "sound_notifications", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section></div></li><li class="presentation"><a href="javascript:void(0);" class="manage-sounds">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "manage_sounds", {
				name: "I18n", hash: {context: "header"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</a></li><li class="divider"></li><li class="presentation"><a href="javascript:void(0);" class="manage-sessions">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "browser_app_sessions", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li class="divider"></li><li class="presentation"><a href="javascript:void(0);" class="support-popout"><i class="fa fa-support"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "help", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li class="presentation"><a href="https://www.tawk.to/knowledgebase/" target="_blank"><i class="fa fa-book"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "knowledgebase", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li class="dropdown-submenu dropup"><a tabindex="-1" href="javascript:void(0);">');
			d = c["with"].call(a, "view.selectedLanguage", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a><ul id="dashboard-lang-selection" class="dropdown-menu">');
			d = c.each.call(a, "view.enabledLanguages", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(20, b),
				inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></li><li class="divider"></li><li><a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "view.logoutUrl"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-power-off"></i>&nbsp;');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "logout", {
				name: "I18n", hash: {context: "header"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</a></li><div class="block"></div></ul></div></div><div id="other-nav"><ul id="nav-list"><li class="navigate-view menu-tooltip nav-select" id="dashboard-select" data-placement="right"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "dashboard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" style="margin-top: 11px;"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-dashboard"></i></a></li><li class="navigate-view menu-tooltip nav-select" id="monitoring-select" data-placement="right"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><span class="fa-stack fa-lg" style="font-size: 27px;width: 27px;height: 27px;line-height: 27px;"><i class="fa fa-desktop fa-stack-2x" style="font-size: 27px;left: -1px;"></i><i class="fa fa-line-chart fa-stack-1x" style="font-size: 19px;left: -3px;bottom: 3px;"></i></span></a><span class="badge">');
			d = c._triageMustache.call(a, "Tawk.liveMonitoringController.totalVisitorsCount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></li><li class="navigate-view menu-tooltip nav-select" id="chat-select" data-placement="right"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "active_chats", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-comments"></i></a></li><li class="navigate-view menu-tooltip nav-select" id="messaging-select" data-placement="right"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-inbox"></i></a><span class="badge">');
			d = c._triageMustache.call(a, "Tawk.conversationsController.totalOpen", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></li><li class="navigate-view menu-tooltip nav-select" id="reporting-select" data-placement="right"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-bar-chart"></i></a></li><li class="navigate-view menu-tooltip nav-select" id="addon-select" data-placement="right"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "add_on_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-puzzle-piece" style="margin-left: 4px; padding-top: 6px;"></i></a></li><li class="navigate-view menu-tooltip nav-select" id="admin-select" data-placement="right"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "header_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-gear"></i></a></li>');
			d = c["if"].call(a, "Tawk.userController.user.isHiredAgent", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.membersMessageList = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<a class="pull-left" id="back-view" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a>')
		}, 3: function (a, c, d, b) {
			b.buffer.push("Create New Group")
		}, 5: function (a, c, d, b) {
			a = c["if"].call(a, "view.isDM", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		},
		6: function (a, c, d, b) {
			b.buffer.push("Direct Messages")
		}, 8: function (a, c, d, b) {
			b.buffer.push("Groups")
		}, 10: function (a, c, d, b) {
			a = c["if"].call(a, "isGroup", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 11: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<li class="agent-entry group-chat pin-parent" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {id: "groupId"},
				hashTypes: {id: "STRING"}, hashContexts: {id: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><div class="pull-left" style="width: 100%;"><p style="margin-right : 26px;">');
			d = c._triageMustache.call(a, "groupName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div><a href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-thumb-tack"></i></a><div class="clearfix"></div></li>');
			return ""
		}, 13: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<li class="agent-entry pin-parent" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="pull-left" style="width: 100%;"><div style="margin-right : 26px;"><div style="display: inline-block; vertical-align: middle; margin-right : 5px; width : 40px; text-align: center;">');
			d = c["if"].call(a, "aliasImage", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.program(16, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div style="display: inline-block; vertical-align: middle;"><p><i ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "status :agent-status"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>");
			b.buffer.push(e(c._triageMustache.call(a,
				"name", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</p></div></div></div><a href="javascript:void(0);" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-thumb-tack"></i></a><div class="clearfix"></div></li>');
			return ""
		}, 14: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<img ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {src: "aliasImage"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {alt: "name"},
				hashTypes: {alt: "STRING"},
				hashContexts: {alt: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' width="40" height="40" />');
			return ""
		}, 16: function (a, c, d, b) {
			b.buffer.push('<i class="fa fa-user"></i>')
		},
		18: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="col-xs-12 col-sm-6 col-md-6 col-lg-6"><label class="checkbox"><input type="checkbox" class="group-participants" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' name="group-participants[]" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "selected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" /><i></i>");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"],
		main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="property-form"><div id="close-button-container">');
			d = c["if"].call(a, "view.showBack", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="title-breadcrumb-container"><p id="main-title" class="pull-left">');
			d = c["if"].call(a, "view.isNewGroupView", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(3, b), inverse: this.program(5, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container" class="smart-form "><div style="width: 100%; height : 100%;" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isNewGroupView:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div style="height: 40px;"><div class="pull-left"><label class="input"><input type="text" id="search" placeholder="Search List" style="width: 450px"/></label></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":pull-right view.isDM:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><button id="create-group" class="btn btn-primary">New Group</button></div><div class="clearfix"></div></div><div class="scrollable-list"><ul>');
			d = c.each.call(a, "view.list", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div></div><form id="group-chat-form" name="group-chat-form" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.isNewGroupView::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 80px; width: auto; overflow: auto;"><fieldset><section><label class="input"><input type="text" id="group-name" class="required groupNameFormat" placeholder="Enter Group Name" maxlength="21" /></label></section><div class="clearfix"></div></fieldset><div style="border-top: 1px solid #ddd; margin-top: 10px;padding-top: 10px;"><section><label class="label">Select group members</label></section><section><label class="select" style="max-width : 300px;">');
			d = c._triageMustache.call(a, "webPropertySelect", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</label></section><div class="col-xs-12 col-sm-6 col-md-6 col-lg-6"><label class="checkbox"><input type="checkbox" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' checked="checked" disabled="disabled" /><i></i>');
			b.buffer.push(e(c._triageMustache.call(a, "Tawk.userController.user.fullName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" (");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "me", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(")</label></div>");
			d = c.each.call(a, "view.propertyMembers", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div></div><p id="error-container" class="invalid hidden" style="position : absolute; bottom : 70px;"></p><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "create", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button><button id="cancel" type="button" class="btn btn-default">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></footer></form></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.hoverBan = Ember.Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing,
				f = this.escapeExpression;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-body"><form class="smart-form ban-form"><fieldset><section><label class="label">');
			d = c._triageMustache.call(a, "view.ban_question", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(' </label><label class="textarea"><textarea name="banReason" class="required banReason" rows="3" placeholder="');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "ban_reason", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"maxlength="500"></textarea></label></section><section><label class="checkbox"><input type="checkbox" name="banIp" class="banIp"><i></i>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_ip", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section></fieldset></form></div><div class="modal-footer"><button type="button" class="btn btn-default close-ban-form"  data-dismiss="modal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-danger submit-ban-form">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.liveListContainer = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push("<tr ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "highlightColor inView:in-view isClientProperty:client-property"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "_id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td class="property-name-cell"><div class="detail-hover" data-toggle="popover" data-placement="right" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "propertyName"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><span class="property-box" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {style: "propertyColor"},
				hashTypes: {style: "STRING"},
				hashContexts: {style: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c._triageMustache.call(a, "propertyShortName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></div></td><td class="flag-cell"><div class="detail-hover" data-toggle="popover" data-placement="right" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "locationDetails"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><span ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "countryFlag"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span></div></td><td class="name-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "visitorName"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c._triageMustache.call(a, "visitorName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></td><td class="ip-cell">');
			d = c["if"].call(a, "htn", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
					b), inverse: this.program(4, b), types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="page-title-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "pu"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><a ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {href: "pu"}, hashTypes: {href: "STRING"},
				hashContexts: {href: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' target="_blank">');
			d = c["if"].call(a, "pt", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a></div></td><td class="referrer-cell">');
			d = c["if"].call(a, "rf", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.program(12, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td>");
			d = c["if"].call(a, "participatingAgentsNames", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<td class="device-details-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "ua"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><span ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "browser"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></span>&nbsp;<span ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "operatingSystem"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span></div></td><td class="duration-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "duration", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><span>');
			d = c._triageMustache.call(a, "formattedDuration", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></div></td><td class="counter-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "visits", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			d = c._triageMustache.call(a, "v", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></td><td class="counter-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || f).call(a, "chats", {
				name: "I18n",
				hash: {context: "sidebar"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			d = c._triageMustache.call(a, "cs", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></td><td class="tags-cell"><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "detail-hover customTags.data::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-toggle="bottom" data-placement="top"data-content="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "tags_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-tag"></i>&nbsp;');
			d = c._triageMustache.call(a, "customTags.data", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></td><td class="button-cell"><div class="detail-hover"><button class="btn btn-danger btn-sm ban-visitor" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "_id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban", {
				name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('"data-placement="bottom"><i class="fa fa-ban"></i></button>');
			d = c["if"].call(a, "ignore", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.program(18, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></td></tr>");
			return ""
		}, 2: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="detail-hover" data-toggle="popover" data-placement="top" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-content": "htn"},
					hashTypes: {"data-content": "STRING"},
					hashContexts: {"data-content": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "ip", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "unknown_hostname", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c._triageMustache.call(a, "ip", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "pt", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 8: function (a, c, d, b) {
			a = c._triageMustache.call(a, "pu", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 10: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<div class="detail-hover" data-toggle="popover" data-placement="top" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "decodedReferrer"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "decodedReferrer"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank">');
			a = c._triageMustache.call(a, "decodedReferrer", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></div>");
			return ""
		}, 12: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="text-center margin-bottom-0 italic no-referrer">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_referrer", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div>");
			return ""
		}, 14: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<td class="agents-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "served_by", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			b.buffer.push(e(c._triageMustache.call(a, "participatingAgentsNames", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div></td>");
			return ""
		}, 16: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<button class="btn btn-default btn-sm ignore-visitor" ');
			b.buffer.push(d(c.action.call(a, "ignoreChat", "_id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
			b.buffer.push('title="');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "unignore", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="bottom"><i class="fa fa-eye"></i></button>');
			return ""
		}, 18: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<button class="btn btn-sm ignore-visitor" ');
			b.buffer.push(d(c.action.call(a, "ignoreChat", "_id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
			b.buffer.push('title="');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "ignore_visitor", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="bottom"><i class="fa fa-eye-slash"></i></button>');
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			b.buffer.push("<tbody>");
			a = c.each.call(a, "view.list", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</tbody>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.visitorMonitoringContainer = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isSelected:active :timeout-select"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "value"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="select-timeout">');
			a = c._triageMustache.call(a, "text", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, 3: function (a, c, d, b, e) {
			var f = this.escapeExpression, g = c.helperMissing;
			b.buffer.push("<li ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><label class="checkbox" ');
			b.buffer.push(f(c.action.call(a, "toggleSiteSelection", "id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="sites-checkbox inner-checkbox" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			d = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</label><ul ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isSelected:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><li><label class="checkbox" ');
			b.buffer.push(f(c.action.call(a,
				"toggleAllWidgetForSite", "id", {
					name: "action",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["STRING", "ID"],
					contexts: [a, a],
					data: b
				})));
			b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isAllWidgetSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "all_widgets", {
				name: "I18n", hash: {context: "monitoring"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</label><ul>");
			d = c.each.call(a, "widget", "in", "widgetsList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b, e),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></li></ul>");
			d = c["if"].call(a, "departmentsList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</li>");
			return ""
		}, 4: function (a, c, d, b, e) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "widget.id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isAllWidgetSelected:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><label ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":checkbox isHighlighted:highlight"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c.action.call(a, "toggleWidgetSelectionForSite", "widget.id", "id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID", "ID"],
				contexts: [a, a, e[1]],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "widget.isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			a = c._triageMustache.call(a, "widget.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label></li>");
			return ""
		}, 6: function (a, c, d, b, e) {
			d = this.escapeExpression;
			var f = c.helperMissing;
			b.buffer.push("<ul ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "isSelected:visible:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><li><label class="checkbox" ');
			b.buffer.push(d(c.action.call(a, "toggleAllDepartment", "id", "site", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID", "STRING"],
				contexts: [a, a, a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isAllDepartmentSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(d((c.I18n || a && a.I18n || f).call(a, "all_departments", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label><ul>");
			a = c.each.call(a, "department", "in", "departmentsList", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(7, b,
					e), inverse: this.noop, types: ["ID", "ID", "ID"], contexts: [a, a, a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul></li></ul>");
			return ""
		}, 7: function (a, c, d, b, e) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "department.id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isAllDepartmentSelected:hidden"}, hashTypes: {"class": "STRING"},
				hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("><label ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":checkbox isHighlighted:highlight"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c.action.call(a, "toggleDepartmentSelection", "department.id", "id", "site", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID", "ID", "STRING"],
				contexts: [a, a, e[1], a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "department.isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			a = c._triageMustache.call(a, "department.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label></li>");
			return ""
		}, 9: function (a,
		                c, d, b, e) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="checkbox" ');
			b.buffer.push(d(c.action.call(a,
				"togglePageSelection", "id", {
					name: "action",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["STRING", "ID"],
					contexts: [a, a],
					data: b
				})));
			b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			d = c._triageMustache.call(a, "name", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
				contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</label>");
			d = c["if"].call(a, "departmentsList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</li>");
			return ""
		}, 10: function (a, c, d, b, e) {
			d = this.escapeExpression;
			var f = c.helperMissing;
			b.buffer.push("<ul ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isSelected:visible:hidden"}, hashTypes: {"class": "STRING"},
				hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><li><label class="checkbox" ');
			b.buffer.push(d(c.action.call(a, "toggleAllDepartment", "id", "page", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID", "STRING"],
				contexts: [a, a, a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isAllDepartmentSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(d((c.I18n || a && a.I18n || f).call(a, "all_departments", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label><ul>");
			a = c.each.call(a, "department", "in", "departmentsList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b, e),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul></li></ul>");
			return ""
		}, 11: function (a, c, d, b, e) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "department.id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isAllDepartmentSelected:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><label ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":checkbox isHighlighted:highlight"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c.action.call(a, "toggleDepartmentSelection", "department.id", "id", "page", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID", "ID", "STRING"],
				contexts: [a, a, e[1], a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "department.isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			a = c._triageMustache.call(a, "department.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label></li>");
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {id: "label"},
					hashTypes: {id: "STRING"},
					hashContexts: {id: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "countries-by-index isViewable:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><p class="index-header">');
			d = c._triageMustache.call(a, "label", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</p><ul>");
			d = c.each.call(a, "countries", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></li>");
			return ""
		}, 14: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="checkbox" ');
			b.buffer.push(d(c.action.call(a, "toggleCountrySelection", "id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {checked: "isSelected"},
					hashTypes: {checked: "STRING"},
					hashContexts: {checked: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push("><i></i>");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></li>");
			return ""
		}, 16: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li class="select-country-index" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"data-id": "label"},
					hashTypes: {"data-id": "STRING"},
					hashContexts: {"data-id": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isViewable:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);">');
			a = c._triageMustache.call(a, "label", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, 18: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="checkbox" ');
			b.buffer.push(d(c.action.call(a, "toggleAgentSelection", "id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="agents-checkbox inner-checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			a = c._triageMustache.call(a,
				"name", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</label></li>");
			return ""
		}, 20: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><label class="label checkbox" ');
			b.buffer.push(d(c.action.call(a, "toggleTagSelection", "id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" class="tags-checkbox inner-checkbox" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</label></li>");
			return ""
		}, 22: function (a, c, d, b) {
			a = c._triageMustache.call(a, "formattedFilter.filterByProperties.shortValues", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("&nbsp;...");
			return ""
		}, 24: function (a, c, d, b) {
			a = c._triageMustache.call(a, "formattedFilter.filterByProperties.values", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 26: function (a, c, d, b) {
			a = c._triageMustache.call(a, "formattedFilter.filterByCountries.shortValues", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("&nbsp;...");
			return ""
		}, 28: function (a,
		                 c, d, b) {
			a = c._triageMustache.call(a, "formattedFilter.filterByCountries.values", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 30: function (a, c, d, b) {
			a = c._triageMustache.call(a, "formattedFilter.filterByAgentsInclude.shortValues", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("&nbsp;...");
			return ""
		}, 32: function (a, c, d, b) {
			a = c._triageMustache.call(a,
				"formattedFilter.filterByAgentsInclude.values", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 34: function (a, c, d, b) {
			a = c._triageMustache.call(a, "formattedFilter.filterByTagsInclude.shortValues", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("&nbsp;...");
			return ""
		}, 36: function (a, c, d, b) {
			a = c._triageMustache.call(a, "formattedFilter.filterByTagsInclude.values",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 38: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<span class="badge bg-color-blueLight">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" : ");
			d = c._triageMustache.call(a, "values",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "remove_filter", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="bottom"data-type="status"><i class="fa fa-close"></i></button></span>');
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
			var f = c.helperMissing, g = this.escapeExpression;
			b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-4 col-sm-3 col-md-3 col-lg-3"><h1 class="page-title txt-color-blueDark"><span class="fa-stack fa-lg" style="font-size: 24px;width: 24px;height: 24px;line-height: 24px;vertical-align: middle;margin-right: 3px;"><i class="fa fa-desktop fa-stack-2x" style="font-size: 24px;left: -2px;"></i><i class="fa fa-line-chart fa-stack-1x" style="font-size: 16px;left: -5px;bottom: 3px;"></i></span>');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h1></div><div class="col-xs-8 col-sm-9 col-md-9 col-lg-9 pull-right"><form id="searchMonitoring" class="pull-right"><fieldset><div class="input-group"><div class="input-group-btn"><button id="openFilter" type="button" class="btn btn-default pull-right" tabindex="-1" aria-expanded="false"><i class="fa fa-filter"></i> ');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "filter_visitors", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' <span class="caret"></span></button><div class="dropdown-menu pull-right smart-form" role="menu" id="visitors-filter"><fieldset><section class="col col-6"><label id="properties" class="select custom-select open-selection"><div><p>');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title",
				{
					name: "I18n",
					hash: {context: "sites"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("/");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><i></i></label></section><section class="col col-6"><label id="countries" class="select custom-select open-selection"><div><p>');
			b.buffer.push(g((c.I18n ||
				a && a.I18n || f).call(a, "countries", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><i></i></label></section><section class="col col-6"><label id="agents" class="select custom-select open-selection"><div><p>');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "agents", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><i></i></label></section><section class="col col-6"><label id="tags" class="select custom-select open-selection"><div><p>');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "tags_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div><i></i></label></section><section class="col col-6">');
			b.buffer.push(g(c.view.call(a, "view.statusSelectView", {
				name: "view",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</section></fieldset><footer><button type="submit" class="btn btn-primary search">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "filter_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn bg-color-teal txt-color-white" id="resetFilter">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-default" id="closeFilter">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></footer></div></div></div></fieldset></form><div class="input-group pull-right sleep-button"><button id="set-timeout" class="btn btn-default bg-color-blue txt-color-white" data-toggle="dropdown" rel="popover-hover" data-placement="left" data-content="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a,
				"sleep_title", {
					name: "I18n",
					hash: {context: "monitoring"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('"><i class="fa fa-clock-o"></i></button><ul class="dropdown-menu">');
			d = c.each.call(a, "view.monitoringTimeoutOptions", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div></div></div><div id="properties-list-container" class="smart-form selection-main-container"><div class="list-header"><label class="search-field input pull-right"><input type="input" placeholder="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" id="search-property-input" class="search-input" /><button><i class="fa fa-search"></i></button></label><label class="checkbox pull-left" ');
			b.buffer.push(g(c.action.call(a, "toggleAllProperties", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" name="all-properties-checkbox" id="all-properties-checkbox" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "allPropertiesIncluded"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_site_page", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="clearfix"></div></div><div class="list-content"><ul id="sites-selection-container"><li id="all-sites" class="dropdown-header"><label class="checkbox" ');
			b.buffer.push(g(c.action.call(a, "toggleAllSites", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" id="all-sites-checkbox" name="all-sites-checkbox" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "allSitesIncluded"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_sites", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></li>");
			d = c.each.call(a, "sitesList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul><ul id="pages-selection-container"><li id="all-pages" class="dropdown-header"><label class="checkbox" ');
			b.buffer.push(g(c.action.call(a, "toggleAllPages",
				{
					name: "action",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('><input type="checkbox" id="all-pages-checkbox" name="all-pages-checkbox" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "allPagesIncluded"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_tawk_pages", {
				name: "I18n", hash: {context: "monitoring"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</label></li>");
			d = c.each.call(a, "pagesList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div class="list-button-container"><button id="close-properties-selection" class="btn btn-primary close-selection">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "done", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button></div></div><div id="countries-list-container" class="smart-form selection-main-container"><div id="all-countries" class="list-header"><label class="search-field input pull-right"><input type="input" placeholder="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" id="search-country-input" class="search-input" /><button><i class="fa fa-search"></i></button></label><label class="checkbox pull-left" ');
			b.buffer.push(g(c.action.call(a, "toggleAllCountries", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" name="all-countries-checkbox" id="all-countries-checkbox" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {checked: "allCountriesIncluded"},
				hashTypes: {checked: "STRING"}, hashContexts: {checked: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_countries", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="clearfix"></div></div><div class="list-content"><ul>');
			d = c.each.call(a, "countriesDirectory", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(13,
					b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div id="countries-indexes"><ul>');
			d = c.each.call(a, "countriesDirectory", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div class="list-button-container"><button id="close-countries-selection" class="btn btn-primary close-selection">');
			b.buffer.push(g((c.I18n ||
				a && a.I18n || f).call(a, "done", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div><div id="agents-list-container" class="smart-form selection-main-container"><div class="list-header"><label class="search-field input pull-right"><input type="input" placeholder="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" id="search-agent-input" class="search-input" /><button><i class="fa fa-search"></i></button></label><label class="checkbox pull-left" ');
			b.buffer.push(g(c.action.call(a, "toggleAllAgents", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" name="all-agents-checkbox" id="all-agents-checkbox" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {checked: "allAgentsIncluded"},
				hashTypes: {checked: "STRING"}, hashContexts: {checked: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_agents", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="clearfix"></div></div><div class="list-content"><ul>');
			d = c.each.call(a, "agentsList", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(18, b, e), inverse: this.noop,
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div class="list-button-container"><button id="close-agents-selection" class="btn btn-primary close-selection">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "done", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div><div id="tags-list-container" class="smart-form selection-main-container"><div class="list-header"><label class="search-field input pull-right"><input type="input" placeholder="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" id="search-tag-input" class="search-input" /><button><i class="fa fa-search"></i></button></label><label class="checkbox pull-left" ');
			b.buffer.push(g(c.action.call(a, "toggleAllTags", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('><input type="checkbox" name="all-tags-checkbox" id="all-tags-checkbox" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "allTagsIncluded"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><i></i>");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_tags", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="clearfix"></div></div><div class="list-content"><ul>');
			d = c.each.call(a, "tagsList",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(20, b, e),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div class="list-button-container"><button id="close-tags-selection" class="btn btn-primary close-selection">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "done", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div><div class="inner-content"><div id="live-monitoring-view"><div id="visitor-list"><div id="filters-details" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "formattedFilter:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "filtered_by", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" :&nbsp;<span ");
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":badge :bg-color-blueLight formattedFilter.filterByProperties.shortValues:filters-popover formattedFilter.filterByProperties:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('data-toggle="popover" data-placement="bottom" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "formattedFilter.filterByProperties.values"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("/");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" :&nbsp;");
			d = c["if"].call(a, "formattedFilter.filterByProperties.shortValues", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b, e),
				inverse: this.program(24, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "remove_filter", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="bottom"data-type="properties"><i class="fa fa-close"></i></button></span><span ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":badge :bg-color-blueLight formattedFilter.filterByCountries:visible:hidden formattedFilter.filterByCountries.shortValues:filters-popover"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('data-toggle="popover" data-placement="bottom" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "formattedFilter.filterByCountries.values"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "countries", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push(" :&nbsp;");
			d = c["if"].call(a, "formattedFilter.filterByCountries.shortValues", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b, e),
				inverse: this.program(28, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "remove_filter", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('"data-placement="bottom" data-type="countries"><i class="fa fa-close"></i></button></span><span ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":badge :bg-color-blueLight formattedFilter.filterByAgentsInclude.shortValues:filters-popover formattedFilter.filterByAgentsInclude:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('data-toggle="popover" data-placement="bottom" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "formattedFilter.filterByAgentsInclude.values"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "agents", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" :&nbsp;");
			d = c["if"].call(a, "formattedFilter.filterByAgentsInclude.shortValues",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(30, b, e),
					inverse: this.program(32, b, e),
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "remove_filter", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="bottom"data-type="agents-include"><i class="fa fa-close"></i></button></span><span ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":badge :bg-color-blueLight formattedFilter.filterByTagsInclude.shortValues:filters-popover formattedFilter.filterByTagsInclude:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('data-toggle="popover" data-placement="bottom" ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-content": "formattedFilter.filterByTagsInclude.values"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "tags_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" :&nbsp;");
			d = c["if"].call(a, "formattedFilter.filterByTagsInclude.shortValues", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(34, b, e),
				inverse: this.program(36, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null !=
			d && b.buffer.push(d);
			b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "remove_filter", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-placement="bottom"data-type="tags-include"><i class="fa fa-close"></i></button></span>');
			d = c["with"].call(a, "formattedFilter.filterByStatus", {
				name: "with", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(38, b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div id="list-container"><div ');
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "unansweredList.length:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><p class="list-title"><i class="fa fa-chevron-down"></i> ');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "unanswered", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" (");
			d = c._triageMustache.call(a, "unansweredList.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(")</p><div>");
			b.buffer.push(g((c.LiveListView || a && a.LiveListView || f).call(a, {
				name: "LiveListView",
				hash: {listBinding: "unansweredList"},
				hashTypes: {listBinding: "STRING"},
				hashContexts: {listBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</div></div><div ");
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "servedList.length:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><p class="list-title"><i class="fa fa-chevron-down"></i> ');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "served", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" (");
			d = c._triageMustache.call(a, "servedList.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(")</p><div>");
			b.buffer.push(g((c.LiveListView || a && a.LiveListView || f).call(a, {
				name: "LiveListView",
				hash: {listBinding: "servedList"},
				hashTypes: {listBinding: "STRING"},
				hashContexts: {listBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</div></div><div ");
			b.buffer.push(g(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "hasActiveVisitors:visible:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><p class="list-title"><i class="fa fa-chevron-down"></i> ');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "active", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" (");
			d = c._triageMustache.call(a, "activeVisitors.length", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" / ");
			d = c._triageMustache.call(a, "totalActiveVisitors", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(")</p><div>");
			b.buffer.push(g((c.LiveListView || a && a.LiveListView || f).call(a, {
				name: "LiveListView",
				hash: {listBinding: "activeVisitors"},
				hashTypes: {listBinding: "STRING"},
				hashContexts: {listBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</div></div><div ");
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "hasIdleVisitors:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><p class="list-title"><i class="fa fa-chevron-down"></i> ');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "idle", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" (");
			d = c._triageMustache.call(a, "idleVisitors.length", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" / ");
			d = c._triageMustache.call(a, "totalIdleVisitors", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(")</p><div>");
			b.buffer.push(g((c.LiveListView || a && a.LiveListView || f).call(a, {
				name: "LiveListView", hash: {listBinding: "idleVisitors"},
				hashTypes: {listBinding: "STRING"}, hashContexts: {listBinding: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("</div></div></div><div ");
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "hasNoVisitors::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="well text-center"><div id="simulate-chat-text">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "simulate_visitor", {
				name: "I18n",
				hash: {
					variables: '{"lineStart" : "<h5>", "lineEnd" : "</h5>", "linkStart3" : "<a href=\'javascript:void(0);\' id=\'simulate-visitor\'>", "linkEnd3" : "</a>", "linkStart1" : "<a href=\'javascript:void(0);\' id=\'monitoring-view-sites\'>", "linkEnd1" : "</a>", "linkStart2" : "<a href=\'javascript:void(0);\' id=\'monitoring-view-pages\'>", "linkEnd2" : "</a>"}',
					context: "monitoring"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</div></div></div><div ");
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "hasNoFilteredVisitors::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="well text-center"><h5>');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "no_filtered_visitors", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h5></div></div></div><div ");
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":load-container :text-center isLoading:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><img src="a34/images/ajax-loader-big-black.gif" /></div><div class="view-footer"><div class="btn-group pull-right"><a id="prev-page" ');
			b.buffer.push(g(c.action.call(a, "previousPage", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :prev hasPreviousPage::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" title="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "previous_text",
				{
					name: "I18n",
					hash: {context: "tooltip"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-page" ');
			b.buffer.push(g(c.action.call(a, "nextPage", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(g(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-default :btn-circle :next hasNextPage::disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('href="javascript:void(0);" data-placement="top" title="');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "next_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-right"></i></a></div></div></div><div id="list-block"></div></div><div id="subscription-ended-container" class="hidden"><div class="overlay"></div><div class="notification"><h1>');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "resubscribe_message_header", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h1><div class="counter-container"><div class="counter-display"><div id="incoming-total" class="counter-block"><span>');
			d = c._triageMustache.call(a, "allUnansweredCount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span><p>");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "unanswered", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div></div><div class="counter-display"><div id="served-total" class="counter-block"><span>');
			d = c._triageMustache.call(a, "allServedCount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span><p>");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "served", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div></div><div class="counter-display"><div id="visitors-total" class="counter-block"><span>');
			d = c._triageMustache.call(a, "totalVisitorsCount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span><p>");
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "visitors", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div></div></div><div id="resubscribe-information">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "resubscribe_message", {
				name: "I18n",
				hash: {
					variables: '{"lineStart" : "<p>", "lineEnd" : "<\\/p>", "headerStart" : "<h3>","headerEnd" : "<\\/h3>", "lineBreak" : "<\\/br>"}',
					context: "monitoring"
				},
				hashTypes: {
					variables: "STRING",
					context: "STRING"
				},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<button id="resubscribe-monitor" class="btn btn-primary btn-lg">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "resubscribe_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></div></div><div id="timeout-notification-timer" class="alert alert-block alert-warning text-align-center hidden">');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "inactive_message", {
				name: "I18n",
				hash: {variables: '{"lineStart" : "<p>", "lineEnd" : "<\\/p>"}', context: "monitoring"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<br><button id="continue-monitor" class="btn btn-default"><strong>');
			b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "continue_subscribing", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</strong>&nbsp;(<span class="timer-update"></span>)</button></div></div>');
			return ""
		}, useData: !0, useDepths: !0
	});
	Ember.TEMPLATES.setupWizard = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "code"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="language-select" style="width : 100px; display: inline-block; vertical-align : top; margin : 10px 0;"><a href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "code"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="change-language padding-5"><p><span ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":circle flagClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span></p><p class="language-text" style="text-transform: capitalize; display: inline-block;">');
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</p></a></li>");
			return ""
		}, 3: function (a, c, d, b) {
			a = c.unless.call(a, "toBeDeleted", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 4: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<section style="padding-right: 15px; position: relative;" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-emailId": "id"},
				hashTypes: {"data-emailId": "STRING"},
				hashContexts: {"data-emailId": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);" class="button-icon icon-append delete-email" data-placement="top" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "delete_option", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a><section class="col col-8"><label class="input"><i class="icon-prepend fa fa-envelope fa-fw"></i>');
			d = c["if"].call(a, "agentEmail", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</label></section><section class="col col-4">');
			b.buffer.push(e((c.GenericSelect || a && a.GenericSelect || f).call(a, {
				name: "GenericSelect",
				hash: {
					selectedValueBinding: "view.roleSelectValue",
					selectClassBinding: "view.roleSelectClass",
					optionsBinding: "view.roleSelectOptions",
					labelBinding: "view.roleSelectLabel"
				},
				hashTypes: {
					selectedValueBinding: "STRING",
					selectClassBinding: "STRING",
					optionsBinding: "STRING",
					labelBinding: "STRING"
				},
				hashContexts: {selectedValueBinding: a, selectClassBinding: a, optionsBinding: a, labelBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><div class="clearfix"></div></section>');
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<input class="agent-email email" type="text" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email_placeholder", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "id"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {id: "id"}, hashTypes: {id: "STRING"}, hashContexts: {id: a},
				types: [], contexts: [], data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "agentEmail"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" readonly disabled />");
			return ""
		}, 7: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<input class="agent-email email" type="text" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email_placeholder", {
				name: "I18n", hash: {context: "wizard"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "id"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "agentEmail"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" />");
			return ""
		}, 9: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "value"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-link": "link"}, hashTypes: {"data-link": "STRING"},
				hashContexts: {"data-link": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {selected: "selected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "text", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">$ ");
			a = c._triageMustache.call(a, "pricePretify", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 13: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="row"><section class="col col-4"><label class="label text-right" style="margin-top:4px"> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "payment_method", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section><section class="col col-8"><label class="select"><select id="payment-method"><option value="pp">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "paypal", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="cc">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "credit_card", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option></select><i></i></label></section></div>");
			return ""
		}, 15: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="select"><select id="card-selection"><option value="new-card">');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "add_card", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			a = c.each.call(a, "Tawk.userController.existingCards", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select><i></i></label><br />");
			return ""
		}, 16: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "customerId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {selected: "selected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c._triageMustache.call(a, "cardBrand", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" x-");
			d = c._triageMustache.call(a, "cardNumber", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</option>");
			return ""
		}, 18: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<a ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "activeAddOn.settings.widget.url"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank" style="text-decoration: none; color: inherit;"><span>');
			b.buffer.push(d(c._triageMustache.call(a, "view.parsedWidgetFooterTitle", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></a>");
			return ""
		}, 20: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<span>");
			b.buffer.push(d(c._triageMustache.call(a, "view.parsedWidgetFooterTitle", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><h3 id="wizard-intro" style="margin : 0;"></h3><div class="form-bootstrapWizard"><ul class="bootstrapWizard form-wizard"><li class="active" data-target="#step1"><a class="change-tab" href="#tab1" data-toggle="tab"><span class="step">1</span> <span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "language_selection", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li data-target="#step2"><a class="change-tab" href="#tab2" data-toggle="tab"><span class="step">2</span> <span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_info", {
				name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</span></a></li><li data-target="#step3"><a class="change-tab" href="#tab3" data-toggle="tab"><span class="step">3</span> <span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "team_members", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li data-target="#step4"><a class="change-tab" href="#tab4" data-toggle="tab"><span class="step">4</span> <span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "install_widget", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li data-target="#step5"><a class="change-tab" href="#tab5" data-toggle="tab"><span class="step">5</span> <span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_main_title", {
				name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</span></a></li></ul><div class="clearfix"></div></div></div><div id="content-container" style="top : 90px;"><div id="wizard" style="position: absolute;top: 0; bottom: 60px;height: auto;overflow: auto; text-align: center;"><div class="tab-content" style="max-width : 900px; margin : 0 auto; width : 100%; height : 100%"><div class="tab-pane active" id="tab1"><h3><strong>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "language_selection", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</strong></h3><h5>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "language_selection_2", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><div id="language-selection-container"><ul style="list-style: none; margin : 10px;">');
			d = c.each.call(a, "view.enabledLanguages",
				{
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div></div><div class="tab-pane" id="tab2"><h3><strong>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_info", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</strong></h3><h5>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"site_info_2", {
					name: "I18n",
					hash: {context: "wizard"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</h5><br /><form id="wizard-site-form" class="smart-form" style="max-width: 500px; margin : 0px auto;"><fieldset><div><section><label class="wizard-label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><i class="icon-prepend fa fa-home fa-fw"></i><input class="required" type="text" id="site-name" name="site-name" maxlength="75" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "decodedSiteName"}, hashTypes: {value: "STRING"},
				hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' /></label></section></div><div><section><label class="wizard-label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><i class="icon-prepend fa fa-link fa-fw"></i><input class="url_prefix" type="text" id="site-domain" name="site-domain" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url_placeholder", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "site.propertyUrl"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section></div></fieldset></form></div><div class="tab-pane" id="tab3"><h3>');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "team_members", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h3><h5>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent_intro", {
				name: "I18n",
				hash: {
					variables: '{"lineBreak" : "<br />" , "strongStart" : "<strong>" , "strongEnd" : "</strong>"}',
					context: "wizard"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><br /><form id="wizard-agent-form" class="smart-form" style="overflow:auto;"><fieldset><div>');
			d = c.each.call(a, "invitedList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div><section class="text-right"><button type="button" class="btn btn-default"  id="add-another-email">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_another", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></section></div></fieldset></form></div><div class="tab-pane" id="tab4"><h3><strong>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "install_widget", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</strong></h3><h5>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"manual_install", {
					name: "I18n",
					hash: {
						variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u></strong>", "tag" : "<strong>&lt;/body&gt;</strong>"}',
						context: "wizard"
					},
					hashTypes: {variables: "STRING", context: "STRING"},
					hashContexts: {variables: a, context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</h5><div class="smart-form"><div style="margin : 10px 0"><div style="float : left; width : 48%; margin : 0 2% 0 0; text-align : center;"><div style="position:relative;height:0;padding-bottom:56.21%"><iframe src="https://www.youtube.com/embed/bHvEqNIW9sE?ecver=2" style="position:absolute;width:100%;height:100%;left:0" width="641" height="360" frameborder="0" allowfullscreen></iframe></div><br /><button id="email-instructions" class="btn txt-color-white" style="background: #999;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_developer", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><div class="clearfix"></div><br /><div class="hidden" id="email-container"><form id="wizard-email-instructions-form"><label class="textarea"><textarea id="emails" name="emails" class="emails" rows="2"></textarea><span class="note">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_info",
				{
					name: "I18n",
					hash: {context: "wizard"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</span></label><div style="text-align: right; padding: 10px 0;"><button id="cancel-email" type="button" class="btn btn-default" style="margin-right : 5px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="send-email" type="button" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div></form></div></div><div style="float : left; width : 48%; margin : 0 0 0 2%"><label class="textarea">');
			b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {valueBinding: "widgetCode", readonly: "true", rows: "7", id: "widget-code"},
				hashTypes: {
					valueBinding: "STRING", readonly: "STRING",
					rows: "STRING", id: "STRING"
				},
				hashContexts: {valueBinding: a, readonly: a, rows: a, id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label><div id="download-plugin-container" style="margin: inherit;"><br /><hr /><br /><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "plugin_install", {
				name: "I18n",
				hash: {
					variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u></strong>"}',
					context: "wizard"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><br /><section><label class="select" style="position: absolute;left: 0; right: 40px;"><i></i><select id="cms-change">');
			d = c.each.call(a, "view.cmsLinks", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select></label><a id="download-link" href="#" target="_blank" class="btn btn-info pull-right"><i class="fa fa-download"></i></a><div class="clearfix"></div></section><div class="clearfix"></div></div></div><div class="clearfix"></div></div></div></div><div class="tab-pane" id="tab5"><h3>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_main_title", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h3><h5 class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_info_1", {
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "wizard"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><h5 class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_info_2", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><br /><div class="smart-form"><div style="float : left; width : 100%;"><div style="margin-right : 350px; position: relative;"><div id="min-whitelabel-settings"><form id="whitelabel-settings" name="whitelabel-settings"><div class="form-table" style="width: 100%;table-layout: fixed;"><div><div style="margin : 0; "><h5>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_footer_branding", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><div class="edit-container" ><div><table class="table no-border branding-settings"><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "title", {
				name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-label" type="text" class="input-text" placeholder="Enter branding text" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.widget.label"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label><p class="font-xs pull-left" style="opacity: 0.6;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "format_eg", {
				name: "I18n",
				hash: {
					variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
					context: "wizard"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_url",
				{
					name: "I18n",
					hash: {context: "wizard"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-url" type="text" class="input-text url" placeholder="Enter branding link url" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "activeAddOn.settings.widget.url"}, hashTypes: {value: "STRING"},
				hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' /></label></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "color", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td><label class="input"><input type="text" id="widget-text-color" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeAddOn.settings.widget.textColor"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('/></label></td></tr></table></div></div><div class="clearfix"></div></div><div style="margin : 20px 0;"><h5>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_footer_branding", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><div><div class="edit-container"><table class="table no-border branding-settings"><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "title", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-label" type="text" class="input-text" placeholder="Enter branding text" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "activeAddOn.settings.email.label"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('/></label><p class="font-xs pull-left" style="opacity: 0.6;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "format_eg", {
				name: "I18n",
				hash: {
					variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
					context: "wizard"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_url", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-url" type="text" class="input-text url" placeholder="Enter branding link url" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "activeAddOn.settings.email.url"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' /></label></td></tr></table></div></div><div class="clearfix"></div></div></div></div></form></div><div id="payment-container" class="hidden"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.paymentSuccess:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><form id="whitelabel-payment" name="whitelabel-payment"><fieldset style="background: inherit;"><div class="row"><section class="col col-4"><label class="label text-right" style="margin-top:4px">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "select_package", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section><section class="col col-8"><label class="select"><select id="plan">');
			d = c.each.call(a, "activeAddOn.plans", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</select><i></i></label></section></div>");
			d = c["if"].call(a, "canUsePaypal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="card-details" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "canUsePaypal:hidden :row"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><section class="col col-4"><label class="label text-right"  style="margin-top:4px">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "payment_details", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label></section><section class="col col-8">');
			d = c["if"].call(a, "Tawk.userController.existingCards.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="new-card-details" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "Tawk.userController.existingCards.length:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><section><label class="input"><i class="icon-prepend fa fa-user" style="z-index:1;"></i><input id="cardholder-name" name="cardholder-name" type="text" class="input required" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name_on_card_placeholder", {
				name: "I18n", hash: {context: "wizard"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('" /></label></section><section><label class="input"><i class="icon-prepend fa fa-credit-card" style="z-index:1;"></i><i class="card-type icon-append"></i><input id="card-number" name="card-number" type="text" class="input required ccNumber" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "card_number_placeholder", {
				name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('" /></label></section><div class="row"><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-calendar" style="z-index:1;"></i><input id="card-expiry" name="card-expiry" type="text" class="input required ccExpiryFormat ccExpiryDate" placeholder="MM/YY" /></label></section><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-lock" style="z-index:1;"></i><input id="card-cvc" name="card-cvc" type="text" class="input required digits cvcCheck" placeholder="CVV" minlength="3" maxlength="4" /></label></section></div><section><label class="input"><i class="icon-prepend fa fa-map-marker" style="z-index:1;"></i><input id="zip-code" name="zip-code" type="text" class="input required" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "zip_code_placeholder", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label></section></div></section></div><div class="row"><section class="col col-4"></section><section class="col col-8" style="margin-top : -15px;"><p id="total-price" style="font-size : 14px; text-align : center; margin : 0;"></p></section><div></fieldset></form></div><div id="addon-settings-button-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.paymentSuccess::hidden :text-center"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="padding: 20px 15px;"><div><div id="success-check-container"><i class="fa fa-check"></i></div><h1 style="color: #71a06a; font-weight: 500;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "thank_you", {
				name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</h1><h5 style="color: #71a06a; font-weight: 500;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "purchase_success", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><p style="margin : 30px 0;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "advanced_whitelabel_settings", {
				name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push('</p></div></div></div></div></div><div style="float: left; width : 320px; margin: 20px 0;position: relative;  margin-left : -320px; height : 335px; margin-top : -1px"><div style="left: 0;right: 0;width: auto;max-width: 400px;position: absolute;top: 0;bottom: 0;padding: 0 15px;"><div id="widget-max-preview-container" style="top : 0;"><div id="border-wrapper"></div><div class="inner-preview-container"><div class="header-container" style="background-color: rgb(221, 221, 221); color: rgb(72, 178, 75);"><div id="header-wrapper"><div class="headerBoxControlsContainer black"><div class="end-chat pull-right"></div><div class="popout pull-right"></div><div class="minimize pull-right"></div></div><div class="headerAccountStateContainer"><p class="headerAccountState">Online</p></div></div></div><div id="widget-chat-container"><div id="chat-container-wrapper"><div id="greetingsOverlay"><div id="greetingsWrapper"><div id="greetingsContainer"><div id="embedArrow" class="widget-greetings-arrow"></div></div></div></div></div><div id="bottom-container"><div id="actionsContainer"><div id="action-message">Type here and press enter...</div><div id="ratingContainer"></div><div id="footer-container"><div id="options" style="height: 32px; margin-left: 84px;"><div id="openMenu" style="position: absolute; left: 3px; bottom: 0; background:url(https://static-a.tawk.to/v2/a34/images/widget-menu.png); height : 29px; width : 80px;"></div></div><div style="position: absolute; bottom: 0; right: 6px; left: 86px; text-align: right; height: 30px; line-height: 30px; color: inherit; font-size: 13px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-right : 3px; font-weight : normal;">');
			d = c["if"].call(a, "activeAddOn.settings.widget.url", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.program(20, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div></div></div></div></div></div></div><div class="clearfix"></div></div></div></div></div><footer id="button-container" class="hidden"><button id="wizard-done" class="btn btn-primary hidden pull-right margin-right-5">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"done", {
					name: "I18n",
					hash: {context: "wizard"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</button><button id="next-step" class="btn btn-primary pull-right margin-right-5">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "next_text", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="previous-step" class="btn btn-default hidden pull-left margin-right-5">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "previous_text", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="cancel-activate" class="btn btn-default pull-left margin-right-5 hidden">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="activate" class="btn btn-primary pull-right margin-right-5 hidden">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "activate_now", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="skip-step" class="btn btn-warning pull-right hidden margin-right-5"><span class="small">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "skip", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></button><button id="setup-later" class="btn btn-warning pull-right margin-right-5"><span class="small">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "setup_later", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span></button></footer></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.propertySelect = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<span class="modal-title-tawk">Select Property & Widget</span>')
		},
		3: function (a, c, d, b) {
			b.buffer.push('<span class="modal-title-tawk">Select Property</span>')
		}, 5: function (a, c, d, b) {
			a = c["if"].call(a, "siteList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n", hash: {context: "sites"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a, "siteList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "id"}, hashTypes: {value: "STRING"}, hashContexts: {value: a},
				types: [], contexts: [], data: b
			})));
			b.buffer.push(' data-type="site">');
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 9: function (a, c, d, b) {
			a = c["if"].call(a, "pageList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 10: function (a, c, d,
		                 b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a, "pageList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		},
		11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-type="page">');
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title">');
			d = c["if"].call(a, "requestWidget", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</h4></div><div class="modal-body" style="overflow:auto;"><div class="smart-form"><section><label class="label">Property</label><label class="select"><select id="property-path-select">');
			d = c.unless.call(a, "view.hideSiteList", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(5, b),
				inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.showPageList", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></section><section class="hidden" id="widget-selection-container"><label class="label">Widget</label><label class="select"><select id="widget-path-select">');
			d = c.each.call(a, "view.widgetList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></section></div></div><div class="modal-footer"><button id="select" type="button" class="btn btn-primary">Select</button></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.reportingMain = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n ||
				a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a, "siteList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 2: function (a, c, d, b) {
			a = c["if"].call(a, "enabled", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(3,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-type="site">');
			b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<optgroup label="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			a = c.each.call(a, "pageList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</optgroup>");
			return ""
		}, 6: function (a, c, d, b) {
			a = c["if"].call(a, "enabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' data-type="page">');
			b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 9: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id", "class": "enabled::hidden"},
				hashTypes: {value: "STRING", "class": "STRING"},
				hashContexts: {value: a, "class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "text", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 13: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "this"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 15: function (a, c, d, b) {
			b.buffer.push('<h1 class="text-center"><i class="fa fa-exclamation txt-color-red"></i> Unable to load graph</h1>')
		}, 17: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<th class="text-center">');
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</th>");
			return ""
		}, 19: function (a, c, d, b) {
			b.buffer.push("<tr>");
			a = c.each.call(a, "", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</tr>");
			return ""
		}, 20: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<td>");
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</td>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><h1 class="page-title txt-color-blueDark"><i class="fa fa-bar-chart"></i> ');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n", hash: {context: "reporting"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</h1></div><div class="clearfix"></div></div><div class="innerContent"><div id="sidebar-navigation" class="smart-form"><label class="select"><select id="property-select">');
			d = c["if"].call(a, "siteList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "pageList.length", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(5, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label><div id="view-select-container"><h4><strong>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "chats", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</strong></h4><ul><li class="select-graph active" id="chat-volume">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
				"chat_volume", {
					name: "I18n",
					hash: {context: "reporting"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('</li><li class="select-graph" id="missed-chat-volume">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "missed_and_offline", {
				name: "I18n",
				hash: {context: "analytics"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="select-graph" id="chat-duration">');
			b.buffer.push(f((c.I18n ||
				a && a.I18n || e).call(a, "average_chat_duration", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="select-graph" id="chat-satisfaction">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "user_satisfaction", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="select-graph" id="chat-wait-time">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "first_response_time", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</li></ul><h4><strong>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tickets", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</strong></h4><ul><li class="select-graph" id="ticket-volume">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "volume_new_tickets", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="select-graph" id="solved-tickets">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "solved_tickets", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="select-graph" id="ticket-source">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_source", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="select-graph" id="ticket-resolution-time">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "resolution_time", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="select-graph" id="ticket-reopened">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_reopened", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li><li class="select-graph" id="ticket-first-time-response">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "first_response_time", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</li></ul></div></div><div id="graph-display-container"><div id="filter-container" class="smart-form padding-10"><button id="openFilter" type="button" class="btn btn-default pull-right" data-toggle="dropdown"><i class="fa fa-filter"></i> Filter <span class="caret"></span></button><div class="dropdown-menu pull-right smart-form" role="menu" id="analytics-filter"><form><fieldset><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agents", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><select id="agent-id" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "isSelectAgentDisabled", "class": "isSelectAgentDisabled:disabled"},
				hashTypes: {disabled: "STRING", "class": "STRING"},
				hashContexts: {disabled: a, "class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><option value="0">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			d = c.each.call(a, "propertyAgents", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "departments", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><select id="department-id"><option value="0">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			d = c.each.call(a,
				"propertyDepartments", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(9, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "time_frames", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><select id="time-frame"><option value="custom">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "custom", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="day">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "day", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="week">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "week", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="month">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "month", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="7days">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_7", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="30days">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_30", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option></select><i></i></label></section><section ");
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":col :col-6 :time-frame-tool-container showFrameTimeTool::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "time_frame_tool_selection", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><div id="prev"><i class="fa fa-chevron-left" aria-hidden="true"></i></div><div id="next"><i class="fa fa-chevron-right" aria-hidden="true"></i></div><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":time-frame-list-container showMonthSelector::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><label class="select"><select id="time-frame-data-list">');
			d = c.each.call(a, "timeFrameDataList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></div></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">From</label><label class="input"><input type="text" id="analytics-from" /></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">To</label><label class="input"><input type="text" id="analytics-to" /></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select"><select id="tag-id"><option value="0">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			d = c.each.call(a,
				"propertyTags", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(13, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</select><i></i></label></section></fieldset></form><footer><button type="submit" class="btn btn-primary search" id="applyFilter">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "filter_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-default" id="resetFilter">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="submit" class="btn btn-default" id="closeFilter">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
				name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button></footer></div><div class="clearfix"></div></div><div id="display-container">');
			d = c["if"].call(a, "currentAnalyticsError", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("<div ");
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading:visibilityHidden currentAnalyticsError:hidden :inner-container"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><div class='yaxisLabel'><div style=\"padding : 0 5px; font-size : 18px;\">");
			d = c._triageMustache.call(a, "graphData.label", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div><div id="graph-container"></div><div id="table-container"><table class="table table-striped table-hover dataTable no-footer"><thead><tr role="row">');
			d = c.each.call(a,
				"tableData.header", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(17, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</tr></thead><tbody>");
			d = c.each.call(a, "tableData.values", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div></div></div></div><div id="list-loading" ');
			b.buffer.push(f(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "isLoading::hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div></div>');
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.headerScheduledProperties = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<li class="client-property">');
			a = c["if"].call(a, "isEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</li>");
			return ""
		}, 2: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "toBeAnswered::not-scheduled :padding-5 :smart-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div><label class="label inline-label" style="display: inline-block;margin: 0;vertical-align: middle;width: 230px;white-space: pre-line;word-wrap: break-word;">');
			b.buffer.push(d(c._triageMustache.call(a, "property.propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><div class="inline-group" style="display: inline-block;margin: 0;width: 140px;vertical-align: middle;"><label class="checkbox" style="margin-left : 0"><input type="checkbox" class="notification-status" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-id": "property.id"},
				hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "autoSchedule"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('value="auto" /><i></i>Auto</label><label class="toggle" style="margin-left : 0"><input type="checkbox" class="property-status" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-id": "property.id"},
				hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "autoSchedule"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "toBeAnswered"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /><i data-swchon-text="');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "yes", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "no", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i></label></div></div><small><i>');
			a = c["if"].call(a, "hasExpired", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</i></small></div>");
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push("Subscription has expired")
		}, 5: function (a, c, d, b) {
			a = c["if"].call(a, "noSchedule", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 6: function (a, c, d, b) {
			b.buffer.push("No schedule set")
		},
		8: function (a, c, d, b) {
			a = c.unless.call(a, "toBeAnswered", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 9: function (a, c, d, b) {
			b.buffer.push("Not scheduled to be answered")
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<a href="javascript:void(0);">Client Properties</a><ul id="client-properties-container" ');
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": ":dropdown-menu isGlobalEnabled::not-scheduled"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push('><li class="padding-10"><div class="smart-form"><label class="toggle" style="margin-right: 24px; font-size : 13px;"><input type="checkbox" id="global-answer-status" name="global-answer-status" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {checked: "isGlobalEnabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /><i data-swchon-text="');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "yes", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" data-swchoff-text="');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "no", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"></i>Receive chat notification for all client properties</label></div></li><li class="divider"></li>');
			a = c.each.call(a, "propertiesSchedule", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.schedulesProperties = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "propertyId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 3: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<tr><th class="text-center">');
			d = c._triageMustache.call(a, "label", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</th><td ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "data.0.length::not-scheduled-day"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><ul>");
			d = c.each.call(a, "data.0", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["STRING"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></td><td ");
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "data.1.length::not-scheduled-day"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push("><ul>");
			d = c.each.call(a, "data.1", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["STRING"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></td><td ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "data.2.length::not-scheduled-day"}, hashTypes: {"class": "STRING"},
				hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("><ul>");
			d = c.each.call(a, "data.2", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["STRING"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></td><td ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "data.3.length::not-scheduled-day"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><ul>");
			d = c.each.call(a, "data.3", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["STRING"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></td><td ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "data.4.length::not-scheduled-day"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><ul>");
			d = c.each.call(a, "data.4", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(4, b), inverse: this.noop, types: ["STRING"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></td><td ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "data.5.length::not-scheduled-day"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><ul>");
			d = c.each.call(a, "data.5", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["STRING"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></td><td ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "data.6.length::not-scheduled-day"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><ul>");
			d = c.each.call(a, "data.6", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["STRING"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></td></tr>");
			return ""
		}, 4: function (a,
		                c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li>");
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</li>");
			return ""
		}, 6: function (a, c, d, b) {
			a = c["if"].call(a, "isSelected", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 7: function (a,
		                c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<table class="table schedule-table"><tbody><tr><th class="data-label">Property</th><td class="data-answer">');
			b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td></tr><tr><th class="data-label">Status</th><td class="data-answer">');
			d = c["if"].call(a, "isEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.program(10, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><th class="data-label">Timezone</th><td class="data-answer">');
			d = c["if"].call(a, "timezone", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.program(14, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><th class="data-label">Property Local Time</th><td class="data-answer"><span style="vertical-align: middle">');
			d = c._triageMustache.call(a, "propertyTime", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span>");
			d = c["if"].call(a, "timezone", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><th class="data-label">Property Local Day</th><td class="data-answer">');
			d = c._triageMustache.call(a, "propertyDay",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><th class="data-label">Hours Purchased</th><td class="data-answer">');
			d = c._triageMustache.call(a, "purchasedHours", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td></tr><tr><th class="data-label">Property Local Schedule</th>');
			d = c["if"].call(a, "schedule", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.program(22, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tr></tbody></table>");
			return ""
		}, 8: function (a, c, d, b) {
			b.buffer.push("Enabled")
		}, 10: function (a, c, d, b) {
			b.buffer.push("Disabled")
		}, 12: function (a, c, d, b) {
			a = c._triageMustache.call(a, "formattedTimezone", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 14: function (a,
		                 c, d, b) {
			b.buffer.push("Not Set")
		}, 16: function (a, c, d, b) {
			b.buffer.push('<button class="btn btn-xs btn-default refresh-property-time" style="margin : 0 3px;"><i class="fa fa-refresh"></i></button>')
		}, 18: function (a, c, d, b) {
			b.buffer.push('<td class="data-answer"><table class="table table-striped" style="max-width : 400px;"><tbody>');
			a = c.each.call(a, "schedule", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</tbody></table></td>");
			return ""
		}, 19: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<tr ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isSelected:scheduled-day"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><th>");
			d = c._triageMustache.call(a, "dayName", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</th><td>");
			d = c.each.call(a, "slots", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td></tr>");
			return ""
		}, 20: function (a, c, d, b) {
			a = c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("<br />");
			return ""
		}, 22: function (a, c, d, b) {
			a = c["if"].call(a, "isFullTime", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.program(25, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 23: function (a, c, d, b) {
			b.buffer.push('<td class="data-answer">24/7</td>')
		}, 25: function (a, c, d, b) {
			b.buffer.push('<td class="data-answer">Not Set</td>')
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-6 col-sm-4 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark"><i class="fa fa-calendar"></i> Live Answering Schedule</h1></div><div id="filter-property-container" class="col-xs-4 col-sm-4 col-md-4 col-lg-4 pull-right" style="margin-top: -3px; margin-right: 15px;"><div class="smart-form"><label class="select"><select id="schedule-property-select"><optgroup label="By Property"><option value="0">All Properties</option>');
			d = c.each.call(a, "view.prettifiedSchedule", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</optgroup><optgroup label="By Plan"><option value="247">24/7 Properties</option><option value="not-fulltime">Part time Properties</option></optgroup><option value="mine">My Schedule</option></select><i></i></label></div></div><div class="clearfix"></div></div><div class="innerContent" style="background : #fff;"><table id="my-schedule" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":table :table-bordered :hidden view.todayHighlight"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><thead><tr><th></th><th class="text-center">Sunday</th><th class="text-center">Monday</th><th class="text-center">Tuesday</th><th class="text-center">Wednesday</th><th class="text-center">Thursday</th><th class="text-center">Friday</th><th class="text-center">Saturday</th></tr></thead><tbody>');
			d = c.each.call(a, "view.mySchedule", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table><div id="properties-schedule">');
			d = c.each.call(a, "view.prettifiedSchedule", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div></div>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.webPropertySelect =
		Ember.Handlebars.template({
			1: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})))
			}, 3: function (a, c, d, b) {
				var e = c.helperMissing, f = this.escapeExpression;
				b.buffer.push('<select id="property-id" disabled>');
				d = c.unless.call(a, "view.noAll", {
					name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(4, b),
					inverse: this.noop, types: ["ID"], contexts: [a], data: b
				});
				null != d && b.buffer.push(d);
				d = c["if"].call(a, "view.extra", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(6, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('<optgroup label="');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
					name: "I18n",
					hash: {context: "sites"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('">');
				d = c.each.call(a,
					"view.sites", {
						name: "each",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						fn: this.program(8, b),
						inverse: this.noop,
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != d && b.buffer.push(d);
				b.buffer.push('</optgroup><optgroup label="');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
					name: "I18n",
					hash: {context: "pages"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('">');
				d = c.each.call(a, "view.pages", {
					name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(8,
						b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</optgroup></select>");
				return ""
			}, 4: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push('<option value="0" selected>');
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</option>");
				return ""
			}, 6: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<option ");
				b.buffer.push(d(c["bind-attr"].call(a, {
					name: "bind-attr",
					hash: {value: "view.extra.value"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
				b.buffer.push(">");
				a = c._triageMustache.call(a, "view.extra.text", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != a && b.buffer.push(a);
				b.buffer.push("</option>");
				return ""
			}, 8: function (a, c, d, b) {
				d = this.escapeExpression;
				b.buffer.push("<option ");
				b.buffer.push(d(c["bind-attr"].call(a,
					{
						name: "bind-attr",
						hash: {value: "id"},
						hashTypes: {value: "STRING"},
						hashContexts: {value: a},
						types: [],
						contexts: [],
						data: b
					})));
				b.buffer.push(">");
				b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
					name: "_triageMustache",
					hash: {unescaped: "true"},
					hashTypes: {unescaped: "STRING"},
					hashContexts: {unescaped: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push("</option>");
				return ""
			}, 10: function (a, c, d, b) {
				var e = c.helperMissing, f = this.escapeExpression;
				b.buffer.push('<select id="property-id">');
				d = c.unless.call(a,
					"view.noAll", {
						name: "unless",
						hash: {},
						hashTypes: {},
						hashContexts: {},
						fn: this.program(4, b),
						inverse: this.noop,
						types: ["ID"],
						contexts: [a],
						data: b
					});
				null != d && b.buffer.push(d);
				d = c["if"].call(a, "view.extra", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(6, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('<optgroup label="');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
					name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
					hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
				})));
				b.buffer.push('">');
				d = c.each.call(a, "view.sites", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(8, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push('</optgroup><optgroup label="');
				b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
					name: "I18n",
					hash: {context: "pages"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push('">');
				d = c.each.call(a, "view.pages", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(8, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</optgroup></select>");
				return ""
			}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
				d = c.helperMissing;
				var e = this.escapeExpression;
				b.buffer.push("<div><p>");
				b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_page", {
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
				b.buffer.push(' : <span class="selected-value">');
				d = c.unless.call(a, "view.noAll", {
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(1, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				b.buffer.push("</span></p></div><i></i>");
				d = c["if"].call(a, "view.readonly", {
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(3, b),
					inverse: this.program(10, b),
					types: ["ID"],
					contexts: [a],
					data: b
				});
				null != d && b.buffer.push(d);
				return ""
			}, useData: !0
		});
	Ember.TEMPLATES.agentSelect = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<div><p>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agent", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : <span class="selected-value">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
				name: "I18n", hash: {context: "generic"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</span></p></div><i></i><select id="agent-id"><option value="0">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			a = c.each.call(a, "Tawk.agentsController.agentDropDownList", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.countrySelect = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<option value="0">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 5: function (a, c, d, b) {
			b.buffer.push("<option></option>")
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "id"}, hashTypes: {value: "STRING"}, hashContexts: {value: a},
				types: [], contexts: [], data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "value", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<div><p>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "country", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push(' :&nbsp;<span class="selected-value">');
			d = c.unless.call(a, "view.noAll", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span></p></div><i></i><select class="country-select">');
			d = c.unless.call(a, "view.noAll", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.each.call(a, "view.list", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</select>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.genericSelect = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			a = c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("&nbsp;:&nbsp;");
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "value"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "text", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d,
		                                                     b) {
			var e = this.escapeExpression;
			b.buffer.push("<div><p>");
			d = c["with"].call(a, "view.label", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<span class="selected-value"></span></p></div><i></i><select ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.selectClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {disabled: "view.readonly"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c.each.call(a, "view.options", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</select>");
			return ""
		}, useData: !0
	});
	Ember.TEMPLATES.soundSettings = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d =
				c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="radio"><input type="radio" id="status-enabled" name="sound-status" checked="checked" /><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="radio"><input type="radio" name="sound-status" /><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"disabled_text", {
					name: "I18n",
					hash: {context: "generic"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push("</label>");
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="radio"><input type="radio" id="status-enabled" name="sound-status" /><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
				name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label class="radio"><input type="radio" name="sound-status" checked="checked" /><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><div><h4 class="modal-title" id="myModalLabel"><i class="fa fa-volume-up" alt="test"></i><span class="modal-title-tawk">&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "manage_sounds", {
				name: "I18n",
				hash: {context: "header"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></h4></div></div><div class="modal-body"><form id="sound-settings-form" name="sound-settings-form" class="smart-form"><div class="row"><section class="col"><label class="label pull-left" for="sound-status"  style="line-height: 25px;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "sound_status",
				{
					name: "I18n",
					hash: {context: "sound_settings"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group pull-left" style="margin : 0 0 0 5px;">');
			d = c["if"].call(a, "view.soundNotificationIsEnabled", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(3, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></section></div><div class="row"><section class="col col-4" data-event-name="icr">');
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.newChatSelectClass",
					selectedValueBinding: "view.newChatSound",
					optionsBinding: "view.soundOptions",
					labelBinding: "view.newChatLabel"
				},
				hashTypes: {
					selectClassBinding: "STRING",
					selectedValueBinding: "STRING",
					optionsBinding: "STRING",
					labelBinding: "STRING"
				},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section class="col col-8" id="icr-control"><i class="fa fa-volume-off  pull-left"></i><div data-event-name="icr" id="icr-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i><div class="pull-left">');
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.repeatSelectClass",
					selectedValueBinding: "view.newChatRepeat",
					optionsBinding: "view.repeatOptions",
					labelBinding: "view.repeatLabel"
				},
				hashTypes: {
					selectClassBinding: "STRING",
					selectedValueBinding: "STRING",
					optionsBinding: "STRING",
					labelBinding: "STRING"
				},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</div><div class="clearfix"></div></section></div><div class="row"><section class="col col-4" data-event-name="iv">');
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.newVisitorSelectClass",
					selectedValueBinding: "view.newVisitorSound",
					optionsBinding: "view.soundOptions",
					labelBinding: "view.newVisitorLabel"
				},
				hashTypes: {
					selectClassBinding: "STRING",
					selectedValueBinding: "STRING",
					optionsBinding: "STRING",
					labelBinding: "STRING"
				},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section class="col col-8" id="iv-control"><i class="fa fa-volume-off pull-left"></i><div data-event-name="iv" id="iv-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i></section></div><div class="row"><section class="col col-4" data-event-name="im">');
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.newMessageSelectClass",
					selectedValueBinding: "view.newMessageSound",
					optionsBinding: "view.soundOptions",
					labelBinding: "view.newMessageLabel"
				},
				hashTypes: {
					selectClassBinding: "STRING",
					selectedValueBinding: "STRING",
					optionsBinding: "STRING",
					labelBinding: "STRING"
				},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section class="col col-8" id="im-control"><i class="fa fa-volume-off pull-left"></i><div data-event-name="im" id="im-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i></section></div><div class="row"><section class="col col-4" data-event-name="dc">');
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.agentDisconnectSelectClass",
					selectedValueBinding: "view.agentDisconnectSound",
					optionsBinding: "view.soundOptions",
					labelBinding: "view.agentDisconnectLabel"
				},
				hashTypes: {
					selectClassBinding: "STRING",
					selectedValueBinding: "STRING",
					optionsBinding: "STRING",
					labelBinding: "STRING"
				},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section class="col col-8" id="dc-control"><i class="fa fa-volume-off pull-left"></i><div data-event-name="dc" id="dc-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i></section></div><div class="row"><section class="col col-4" data-event-name="acm">');
			b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
				name: "GenericSelect",
				hash: {
					selectClassBinding: "view.agentChatSelectClass",
					selectedValueBinding: "view.agentChatSound",
					optionsBinding: "view.soundOptions",
					labelBinding: "view.agentChatLabel"
				},
				hashTypes: {
					selectClassBinding: "STRING",
					selectedValueBinding: "STRING",
					optionsBinding: "STRING",
					labelBinding: "STRING"
				},
				hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><section class="col col-8" id="acm-control"><i class="fa fa-volume-off pull-left"></i><div data-event-name="acm" id="acm-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i></section></div></form></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button type="button" class="btn btn-primary" id="submit">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div></div></div>");
			return ""
		},
		useData: !0
	});
	Ember.TEMPLATES.wizard = Ember.Handlebars.template({
		1: function (a, c, d, b) {
			a = c.unless.call(a, "toBeDeleted", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 2: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<section style="padding-right: 15px; position: relative;" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-emailId": "id"},
				hashTypes: {"data-emailId": "STRING"},
				hashContexts: {"data-emailId": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);" class="button-icon icon-append delete-email" data-placement="top" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "delete_option", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a><section class="col col-8"><label class="input"><i class="icon-prepend fa fa-envelope fa-fw"></i>');
			d = c["if"].call(a, "agentEmail", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</label></section><section class="col col-4">');
			b.buffer.push(e((c.GenericSelect || a && a.GenericSelect || f).call(a, {
				name: "GenericSelect",
				hash: {
					selectedValueBinding: "view.roleSelectValue",
					selectClassBinding: "view.roleSelectClass",
					optionsBinding: "view.roleSelectOptions",
					labelBinding: "view.roleSelectLabel"
				},
				hashTypes: {
					selectedValueBinding: "STRING",
					selectClassBinding: "STRING",
					optionsBinding: "STRING",
					labelBinding: "STRING"
				},
				hashContexts: {selectedValueBinding: a, selectClassBinding: a, optionsBinding: a, labelBinding: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</section><div class="clearfix"></div></section>');
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<input class="agent-email email" type="text" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"email", {
					name: "I18n",
					hash: {context: "placeholders"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["STRING"],
					contexts: [a],
					data: b
				})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "id"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "agentEmail"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" readonly disabled />");
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<input class="agent-email email" type="text" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {name: "id"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "agentEmail"}, hashTypes: {value: "STRING"},
				hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(" />");
			return ""
		}, 7: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "value"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-link": "link"},
				hashTypes: {"data-link": "STRING"},
				hashContexts: {"data-link": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "text", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-body"><div class="row"><div id="wizard" class="col-sm-12"><div class="form-bootstrapWizard"><ul class="bootstrapWizard form-wizard"><li class="active" data-target="#step1"><a class="change-tab" href="#tab1" data-toggle="tab"><span class="step">1</span> <span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_info", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li data-target="#step2"><a class="change-tab" href="#tab2" data-toggle="tab"><span class="step">2</span> <span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li><li data-target="#step3"><a class="change-tab" href="#tab3" data-toggle="tab"><span class="step">3</span> <span class="title">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "install_widget", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></a></li></ul><div class="clearfix"></div></div><div class="tab-content"><div class="tab-pane active" id="tab1"><br /><h3><strong>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "step1", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</strong> - ");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_info", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h3><div class="row"><div class="col-sm-12 wizard-intro">');
			b.buffer.push(f((c.I18n || a &&
				a.I18n || e).call(a, "intro", {
				name: "I18n",
				hash: {variables: '{"lineBreak" : "<br />"}', context: "wizard"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</div></div><form id="wizard-site-form" class="smart-form"><fieldset><div class="row"><section><label class="wizard-label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</label><label class="input"><i class="icon-prepend fa fa-home fa-fw"></i><input class="required" type="text" id="site-name" name="site-name" maxlength="75" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {value: "decodedSiteName"},
				hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' /></label></section></div><div class="row"><section><label class="wizard-label">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><i class="icon-prepend fa fa-link fa-fw"></i><input class="url_prefix" type="text" id="site-domain" name="site-domain" placeholder="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "site.propertyUrl"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /></label></section></div></fieldset></form></div><div class="tab-pane" id="tab2"><div class="row"><div id="wizard-agent-intro" class="col-sm-12"><br /><h3><strong>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "step2", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</strong> - ");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h3><p>");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent_intro", {
				name: "I18n",
				hash: {variables: '{"lineBreak" : "<br />"}', context: "wizard"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div></div><form id="wizard-agent-form" class="smart-form"><fieldset><div class="row">');
			d = c.each.call(a, "invitedList", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="row"><section class="text-right"><button type="button" class="btn btn-default"  id="add-another-email">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_another", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></section></div></fieldset></form></div><div class="tab-pane" id="tab3"><br><h3><strong>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "step3", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</strong> - ");
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "install_widget", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h3><div class="row smart-form"><div class="col-sm-12 wizard-intro">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "manual_install", {
				name: "I18n",
				hash: {
					variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u></strong>", "tag" : "&lt;/body&gt;"}',
					context: "wizard"
				},
				hashTypes: {
					variables: "STRING",
					context: "STRING"
				},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<br /><br /><label class="textarea">');
			b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {valueBinding: "widgetCode", readonly: "true", rows: "5", id: "widget-code"},
				hashTypes: {valueBinding: "STRING", readonly: "STRING", rows: "STRING", id: "STRING"},
				hashContexts: {valueBinding: a, readonly: a, rows: a, id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('</label><br /><button id="email-instructions" class="btn pull-right txt-color-white" style="background: #999;">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_developer", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><div class="clearfix"></div><br /><div class="hidden" id="email-container"><form id="wizard-email-instructions-form" class="smart-form"><label class="textarea"><i class="icon-append fa fa-question-circle"></i><textarea id="emails" name="emails" class="emails" rows="2"></textarea><b class="tooltip tooltip-top-right"><i class="fa fa-warning txt-color-teal"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_info", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</b></label><div style="text-align: right; padding: 10px 0;"><button id="cancel-email" type="button" class="btn btn-default" style="margin-right : 5px;">Cancel</button><button id="send-email" type="button" class="btn btn-primary">Send</button></div></form></div><div id="download-plugin-container" class="row" style="margin: inherit;"><hr /><br /><p>');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "plugin_install", {
				name: "I18n",
				hash: {
					variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u></strong>"}',
					context: "wizard"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p><br /><section class="col col-8"><label class="select"><i></i><select id="cms-change">');
			d = c.each.call(a, "view.cmsLinks", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(7, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</select></label></section><section class="col col-4"><a id="download-link" href="#" target="_blank" class="btn btn-info"><i class="fa fa-download"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "download", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></section><div class="clearfix"></div></div></div></div></div></div></div></div></div><div class="modal-footer"><button id="skip-wizard" class="btn btn-default pull-left"><span class="normal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "skip_wizard", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span><span class="small">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></button><button id="wizard-done" class="btn btn-primary hidden pull-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "done", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="next-step" class="btn btn-primary pull-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "next_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="previous-step" class="btn btn-default hidden pull-right">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "previous_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button><button id="skip-step" class="btn btn-warning pull-right"><span class="normal">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "skip_step", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span><span class="small">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "skip", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</span></button><div class="clearfix"></div></div></div></div>');
			return ""
		}, useData: !0
	});
	var HandlebarsTemplates = {};
	HandlebarsTemplates["live-answering"] = Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			return '<div style="margin-top : 10px;">' +
				e((c.I18n || a && a.I18n || d).call(a, "live_answering_introduction", {
					name: "I18n",
					hash: {variables: '{"lineStart" : "<p>", "lineEnd" : "</p>"}', context: "admin"},
					data: b
				})) + "</div><h5><b>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_details_header", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</b></h5><div id="liveAnswering-details-container"><div class="details-wrapper"><div class="details-image-wrapper"><img src="https://static-a.tawk.to/v2/a34/images/hireagent-price.png"/></div><div>' + e((c.I18n || a &&
					a.I18n || d).call(a, "live_answering_details_just_one_hour", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "bigTextStart" : "<b>", "bigTextEnd" : "</b>"}',
						context: "admin"
					},
					data: b
				})) + '</div></div><div class="details-wrapper"><div class="details-image-wrapper"><img src="https://static-a.tawk.to/v2/a34/images/hireagent-247.png" /></div><div>' + e((c.I18n || a && a.I18n || d).call(a, "live_answering_details_24_7_365", {
					name: "I18n", hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "bigTextStart" : "<b>", "bigTextEnd" : "</b>"}',
						context: "admin"
					}, data: b
				})) + '</div></div><div class="details-wrapper"><div class="details-image-wrapper"><img src="https://static-a.tawk.to/v2/a34/images/hireagent-real.png" /></div><div>' + e((c.I18n || a && a.I18n || d).call(a, "live_answering_details_real_humans", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "bigTextStart" : "<b>", "bigTextEnd" : "</b>"}',
						context: "admin"
					},
					data: b
				})) + '</div></div><div class="details-wrapper"><div class="details-image-wrapper"><img src="https://static-a.tawk.to/v2/a34/images/hireagent-conversion.png" /></div><div>' +
				e((c.I18n || a && a.I18n || d).call(a, "live_answering_details_better_leads", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "bigTextStart" : "<b>", "bigTextEnd" : "</b>"}',
						context: "admin"
					},
					data: b
				})) + '</div></div><div class="details-wrapper"><div class="details-image-wrapper"><img src="https://static-a.tawk.to/v2/a34/images/hireagent-crm.png" /></div><div>' + e((c.I18n || a && a.I18n || d).call(a, "live_answering_details_crm_integration", {
					name: "I18n", hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "bigTextStart" : "<b>", "bigTextEnd" : "</b>"}',
						context: "admin"
					}, data: b
				})) + '</div></div><div class="details-wrapper"><div class="details-image-wrapper"><img src="https://static-a.tawk.to/v2/a34/images/hireagent-multilanguage.png" /></div><div>' + e((c.I18n || a && a.I18n || d).call(a, "live_answering_details_native_speakers", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "bigTextStart" : "<b>", "bigTextEnd" : "</b>"}',
						context: "admin"
					},
					data: b
				})) + "</div></div></div>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_details_description",
					{
						name: "I18n",
						hash: {variables: '{"lineStart" : "<p>", "lineEnd" : "</p>"}', context: "admin"},
						data: b
					})) + '<div id="liveAnswering-faqs-container"><h3><b>' + e((c.I18n || a && a.I18n || d).call(a, "faqs", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + "</b></h3><ol><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_1", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n ||
					d).call(a, "live_answering_faqs_content_2", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_3", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>", "listStart" : "<ul>", "listEnd" : "</ul>", "newLineList" : "<li>", "endLineList" : "</li>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_4", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_5", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a,
					"live_answering_faqs_content_6", {
						name: "I18n",
						hash: {
							variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
							context: "admin"
						},
						data: b
					})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_7", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_8", {
					name: "I18n", hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					}, data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_9", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_10", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n ||
					a && a.I18n || d).call(a, "live_answering_faqs_content_11", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_12", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_13",
					{
						name: "I18n",
						hash: {
							variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
							context: "admin"
						},
						data: b
					})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_14", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>"}',
						context: "admin"
					},
					data: b
				})) + "</li><li>" + e((c.I18n || a && a.I18n || d).call(a, "live_answering_faqs_content_15", {
					name: "I18n", hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h4>", "questionEnd" : "</h4>", "link" : "<a href=\'mailto:support@tawk.to\'>support@tawk.to</a>"}',
						context: "admin"
					}, data: b
				})) + "</li></ol></div>"
		}, useData: !0
	});
	HandlebarsTemplates.whitelabel = Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			return '<div id="min-whitelabel-settings" class="smart-form"><div class="edit-container" style="float : left; width : 100%;"><div style="margin-right : 330px; position: relative;"><div style="margin : 0; "><h5>' + e((c.I18n || a && a.I18n || d).call(a, "widget_footer_branding", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</h5><table class="table no-border branding-settings"><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">' +
				e((c.I18n || a && a.I18n || d).call(a, "title", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-label" type="text" class="input-text"placeholder="Enter branding text" value="Powered by *tawk.to*" /></label><p class="font-xs pull-left" style="opacity: 0.6;">' + e((c.I18n || a && a.I18n || d).call(a, "format_eg", {
					name: "I18n", hash: {
						variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
						context: "admin"
					}, data: b
				})) + '</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">' + e((c.I18n || a && a.I18n || d).call(a, "link_url", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-url" type="text" class="input-text url" placeholder="Enter branding link url" value="https://www.tawk.to" /></label></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">Color</label></td><td><label class="input"><input type="text" id="widget-text-color" ' +
				e((c["bind-attr"] || a && a["bind-attr"] || d).call(a, {
					name: "bind-attr",
					hash: {value: "activeAddOn.settings.widget.textColor"},
					data: b
				})) + '/></label></td></tr></table></div><div style="margin : 20px 0;"><h5>' + e((c.I18n || a && a.I18n || d).call(a, "email_footer_branding", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</h5><table class="table no-border branding-settings"><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">' + e((c.I18n || a && a.I18n || d).call(a, "title", {
					name: "I18n", hash: {context: "admin"},
					data: b
				})) + '</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-label" type="text" class="input-text" placeholder="Enter branding text" value="No tawk.to live chat account? Create one for free here" /></label><p class="font-xs pull-left" style="opacity: 0.6;">' + e((c.I18n || a && a.I18n || d).call(a, "format_eg", {
					name: "I18n", hash: {
						variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
						context: "admin"
					}, data: b
				})) + '</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">' + e((c.I18n || a && a.I18n || d).call(a, "link_url", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-url" type="text" class="input-text url" placeholder="Enter branding link url" value="https://www.tawk.to" /></label></td></tr></table></div></div></div><div style="float: left; width : 320px; margin: 20px 0;position: relative;  margin-left : -330px; height : 335px; margin-top : -1px"><div style="left: 0;right: 0;width: auto;max-width: 400px;position: absolute;top: 0;bottom: 0;padding: 0 15px;"><div id="widget-max-preview-container" style="top : 0;"><div id="border-wrapper"></div><div class="inner-preview-container"><div class="header-container" style="background-color: rgb(221, 221, 221); color: rgb(72, 178, 75);"><div id="header-wrapper"><div class="headerBoxControlsContainer black"><div class="end-chat pull-right"></div><div class="popout pull-right"></div><div class="minimize pull-right"></div></div><div class="headerAccountStateContainer"><p class="headerAccountState">Online</p></div></div></div><div id="widget-chat-container"><div id="chat-container-wrapper"><div id="greetingsOverlay"><div id="greetingsWrapper"><div id="greetingsContainer"><div id="embedArrow" class="widget-greetings-arrow"></div></div></div></div></div><div id="bottom-container"><div id="actionsContainer"><div id="action-message">Type here and press enter...</div><div id="ratingContainer"></div><div id="footer-container"><div id="options" style="height: 32px; margin-left: 84px;"><div id="openMenu" style="position: absolute; left: 3px; bottom: 0; background:url(https://static-a.tawk.to/v2/a34/images/widget-menu.png); height : 29px; width : 80px;"></div></div><div id="widget-brand" style="position: absolute; bottom: 0; right: 6px; left: 86px; text-align: right; height: 30px; line-height: 30px; color: inherit; font-size: 13px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-right : 3px; font-weight : normal;"></div></div></div></div></div></div></div></div></div><div class="clearfix"></div></div>'
		},
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e;
			d = c.helperMissing;
			var f = this.escapeExpression;
			d = '<div style="margin: 20px 0;"><p style="font-size: 16px;"><b>' + f((c.I18n || a && a.I18n || d).call(a, "rebranding_title", {
				name: "I18n",
				hash: {context: "admin"},
				data: b
			})) + "</b></p>" + f((c.I18n || a && a.I18n || d).call(a, "rebranding_long_description", {
				name: "I18n", hash: {
					variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "listStart" : "<ul>", "listEnd" : "</ul>", "listItemStart" : "<li>", "listItemEnd" : "</li>"}',
					context: "admin"
				}, data: b
			})) + "</div>";
			e = c.unless.call(a, null != (e = null != a ? a.activeAddOn : a) ? e.isActive : e, {
				name: "unless",
				hash: {},
				fn: this.program(1, b),
				inverse: this.noop,
				data: b
			});
			null != e && (d += e);
			return d
		}, useData: !0
	});
	HandlebarsTemplates.webrtc = Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			return "<div>" + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</div><div class="webrtc-description-container">' +
				e((c.I18n || a && a.I18n || d).call(a, "webrtc_question_answer", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p>", "lineEnd" : "</p>", "questionStart" : "<h1>", "questionEnd" : "</h1>"}',
						context: "admin"
					},
					data: b
				})) + '<div style="margin : 10px 0"><div class="image-container"><h4>1. ' + e((c.I18n || a && a.I18n || d).call(a, "webrtc_click_step", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</h4><div class="inner-image" style="background:url(https://static-a.tawk.to/v2/a34/images/video-chat-click-once.png); width: 180px;"></div></div><div class="image-container" style="margin : 0 3%"><h4>2. ' +
				e((c.I18n || a && a.I18n || d).call(a, "webrtc_hello_step", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</h4><div class="inner-image" style="background:url(https://static-a.tawk.to/v2/a34/images/video-chat-say-hi.png); width: 180px;"></div></div><div class="image-container"><h4>3. ' + e((c.I18n || a && a.I18n || d).call(a, "webrtc_share_step", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</h4><div class="inner-image" style="background:url(https://static-a.tawk.to/v2/a34/images/video-chat-share-link.png); width: 122px;"></div></div></div></div><div class="webrtc-how-to-container"><h1>' +
				e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_invite", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + "</h1><h5>" + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_share", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</h5><img src="https://static-a.tawk.to/v2/a34/images/video-chat-group-chat-1.png" style="width:100%" /><div style="    display: table;    table-layout: fixed;    margin-top: -300px;"><div style="    display: table-row;"><h4 style="    display: table-cell;    vertical-align: bottom;    padding: 10px;"><i>' +
				e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_quote", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</i></h4><img src="https://static-a.tawk.to/v2/a34/images/video-chat-group-chat-2.png" style="display: table-cell; height: 416px; width: 206px;"></div></div><div class="text-left features"><div class="col-lg-6 col-md-6 col-sm-12 col-xs-12"><i class="fa fa-check-square-o fa-lg"></i> ' + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_feature_1", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</div><div class="col-lg-6 col-md-6 col-sm-12 col-xs-12"><i class="fa fa-check-square-o fa-lg"></i> ' +
				e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_feature_2", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</div><div class="col-lg-6 col-md-6 col-sm-12 col-xs-12"><i class="fa fa-check-square-o fa-lg"></i> ' + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_feature_3", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</div><div class="col-lg-6 col-md-6 col-sm-12 col-xs-12"><i class="fa fa-check-square-o fa-lg"></i> ' + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_feature_4", {
					name: "I18n", hash: {context: "admin"},
					data: b
				})) + '</div><div class="col-lg-6 col-md-6 col-sm-12 col-xs-12"><i class="fa fa-check-square-o fa-lg"></i> ' + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_feature_5", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</div><div class="col-lg-6 col-md-6 col-sm-12 col-xs-12"><i class="fa fa-check-square-o fa-lg"></i> ' + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_feature_6", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</div><div class="col-lg-6 col-md-6 col-sm-12 col-xs-12"><i class="fa fa-check-square-o fa-lg"></i> ' +
				e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_feature_7", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</div><div class="clearfix"></div></div></div><div class="webrtc_availability_container"><h1>' + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_available", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + "</h1><h5>" + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_fast_secure", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</h5><table class="table no-border"><tr><td></td><td colspan="2" class="border-right"><img src="https://static-a.tawk.to/v2/a34/images/video-chat-chrome.png" /></td><td colspan="2" class="border-right"><img src="https://static-a.tawk.to/v2/a34/images/video-chat-opera.png" /></td><td colspan="2" class="border-right"><img src="https://static-a.tawk.to/v2/a34/images/video-chat-firefox.png" /></td><td colspan="2" class="border-right"><img src="https://static-a.tawk.to/v2/a34/images/video-chat-edge.png" /></td><td colspan="2"><img src="https://static-a.tawk.to/v2/a34/images/video-chat-safari.png" /></td></tr><tr><td></td><td colspan="2" class="border-right" style="padding: 0 10px;">Chrome</td><td colspan="2" class="border-right" style="padding: 0 10px;">Opera</td><td colspan="2" class="border-right" style="padding: 0 10px;">Firefox</td><td colspan="2" class="border-right" style="padding: 0 10px;">Edge</td><td colspan="2" style="padding: 0 10px;">Safari</td></tr><tr><td></td><td><i class="fa fa-desktop"></i></td><td class="border-right"><i class="fa fa-mobile"></i></td><td><i class="fa fa-desktop"></i></td><td class="border-right"><i class="fa fa-mobile"></i></td><td><i class="fa fa-desktop"></i></td><td class="border-right"><i class="fa fa-mobile"></i></td><td><i class="fa fa-desktop"></i></td><td class="border-right"><i class="fa fa-mobile"></i></td><td><i class="fa fa-desktop"></i></td><td><i class="fa fa-mobile"></i></td></tr><tr><td><i class="fa fa-phone title" data-placement="top" data-original-title="' +
				e((c.I18n || a && a.I18n || d).call(a, "voice_call", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '"></i></td><td><span class="present" data-placement="top" data-original-title="ver. >=23"></span></td><td class="border-right"><span class="present" data-placement="top" data-original-title="ver. >=62"></span></td><td><span class="present" data-placement="top" data-original-title="ver. >=18"></span></td><td class="border-right"><span class="present" data-placement="top" data-original-title="ver. >=37"></span></td><td><span class="present" data-placement="top" data-original-title="ver. >=22"></span></td><td class="border-right"><span class="present" data-placement="top" data-original-title="ver. >=57"></span></td><td><span class="not-present"></span></td><td class="border-right"><span class="not-present"></span></td><td><span class="present" data-placement="top" data-original-title="ver. >=11">11</span></td><td><span class="present" data-placement="top" data-original-title="ver. >=11">11</span></td></tr><tr><td><i class="fa fa-video-camera title" data-placement="top" data-original-title="' +
				e((c.I18n || a && a.I18n || d).call(a, "video_call", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '"></i></td><td><span class="present" data-placement="top" data-original-title="ver. >=23"></span></td><td class="border-right"><span class="present" data-placement="top" data-original-title="ver. >=62"></span></td><td><span class="present" data-placement="top" data-original-title="ver. >=18"></span></td><td class="border-right"><span class="present"  data-placement="top" data-original-title="ver. >=37"></span></td><td><span class="present" data-placement="top" data-original-title="ver. >=22"></span></td><td class="border-right"><span class="present" data-placement="top" data-original-title="ver. >=57"></span></td><td><span class="not-present"></span></td><td class="border-right"><span class="not-present"></span></td><td><span class="present" data-placement="top" data-original-title="ver. >=11">11</span></td><td><span class="present" data-placement="top" data-original-title="ver. >=11">11</span></td></tr><tr><td><span class="fa fa-stack"><i class="fa fa-square-o fa-stack-1" style="margin-right: -21px;"></i><i class="fa fa-desktop fa-stack-2x title" style="background: #fff;margin-top: 7px;" data-placement="top" data-original-title="' +
				e((c.I18n || a && a.I18n || d).call(a, "screen_share", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '"></i></span></td><td><span class="present" data-placement="top" data-original-title="ver. >=23"></span></td><td class="border-right"><span class="not-present"></span></td><td><span class="present" data-placement="top" data-original-title="ver. >=18"></span></td><td class="border-right"><span class="not-present"></span></td><td><span class="present" data-placement="top" data-original-title="ver. >=22"></span></td><td class="border-right"><span class="not-present"></span></td><td><span class="not-present"></span></td><td class="border-right"><span class="not-present"></span></td><td><span class="not-present"></span></td><td><span class="not-present"></span></td></tr></table>    </div>    <div class="webrtc_availability_container">    <h1>' +
				e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_available_mobile", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '</h1>    <table class="table no-border" style="table-layout: auto;max-width:  400px;margin: 0px auto;">    <tr><td></td><td class="border-right"><img src="https://static-a.tawk.to/v2/a34/images/video-chat-android.png" /></td><td><img src="https://static-a.tawk.to/v2/a34/images/video-chat-ios.png" style="max-height: 100px;"/></td></tr><tr><td><i class="fa fa-phone title" data-placement="top" data-original-title="' +
				e((c.I18n || a && a.I18n || d).call(a, "voice_call", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '"></i></td><td class="border-right"><span class="present"></span></td><td><span class="present"></span></td></tr><tr><td><i class="fa fa-video-camera title" data-placement="top" data-original-title="' + e((c.I18n || a && a.I18n || d).call(a, "video_call", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '"></i></td><td class="border-right"><span class="present"></span></td><td><span class="present"></span></td></tr><tr><td><span class="fa fa-stack"><i class="fa fa-square-o fa-stack-1" style="margin-right: -21px;"></i><i class="fa fa-desktop fa-stack-2x title" style="background: #fff;margin-top: 7px;" data-placement="top" data-original-title="' +
				e((c.I18n || a && a.I18n || d).call(a, "screen_share", {
					name: "I18n",
					hash: {context: "admin"},
					data: b
				})) + '"></i></span></td><td class="border-right"><span class="not-present"></span></td><td><span class="not-present"></span></td></tr>    </table>    </div><div style="margin : 20px 0; text-align: center; padding: 10px; position : relative; height : 300px;"><div style="position: absolute; left: 0; right: 0;">    <h1>' + e((c.I18n || a && a.I18n || d).call(a, "webrtc_description_fine_print", {
					name: "I18n", hash: {context: "admin"},
					data: b
				})) + "</h1>    " + e((c.I18n || a && a.I18n || d).call(a, "webrtc_legal_question", {
					name: "I18n",
					hash: {
						variables: '{"lineStart" : "<p class=\'text-left\'><i>", "lineEnd" : "</i></p>", "questionStart" : "<h5>", "questionEnd" : "</h5>"}',
						context: "admin"
					},
					data: b
				})) + "</div>    </div>"
		}, useData: !0
	});
	HandlebarsTemplates.visitorCustomMenuView = Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e;
			d = c.helperMissing;
			var f = this.escapeExpression;
			return '<div id="' + f((e = null != (e = c.id || (null !=
			a ? a.id : a)) ? e : d, "function" === typeof e ? e.call(a, {
				name: "id",
				hash: {},
				data: b
			}) : e)) + '" class="custom-element-container"><div class="section-header" style="display: none"><div class="title-container" ><p>' + f((e = null != (e = c.title || (null != a ? a.title : a)) ? e : d, "function" === typeof e ? e.call(a, {
				name: "title",
				hash: {},
				data: b
			}) : e)) + '</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"></div></div>'
		},
		useData: !0
	});
	HandlebarsTemplates.incomingConnectionView = Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e;
			d = c.helperMissing;
			var f = this.escapeExpression;
			return '<div class="incoming-call"><h5 style="color: #fff;text-align: center; margin : 10px 0; font-size : 18px;">' + f((c.I18n || a && a.I18n || d).call(a, "visitor_ringing", {
				name: "I18n",
				hash: {context: "visitors"},
				data: b
			})) + '</h5><button class="decline-call btn btn-default" data-id="' + f((e = null != (e = c.callId || (null != a ? a.callId :
				a)) ? e : d, "function" === typeof e ? e.call(a, {
				name: "callId",
				hash: {},
				data: b
			}) : e)) + '"><span class="fa-stack"><i class="fa fa-volume-off fa-stack-2x"></i><i class="fa fa-ban fa-stack-2x"></i></span></button><button class="answer-call btn btn-primary"><i class="fa fa-phone"></i></button></div>'
		}, useData: !0
	});
	HandlebarsTemplates.callDetailsView = Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e;
			d = c.helperMissing;
			var f = this.escapeExpression;
			return '<div class="conversation-block webrtc-call" id="' +
				f((e = null != (e = c.callId || (null != a ? a.callId : a)) ? e : d, "function" === typeof e ? e.call(a, {
					name: "callId",
					hash: {},
					data: b
				}) : e)) + '"><div class="conversation-content"><div class="webrtc-content"><div class="loader"><i class="fa fa-refresh fa-spin"></i></div><div class="webrtc-info hidden"><span class="webrtc-call-type"><span class="webrtc-call-icon"><i class="fa"></i></span></span><span class="webrtc-call-details"><span class="webrtc-call-header"></span><span class="webrtc-call-end-details hidden"></span><span class="webrtc-call-participants-details hidden"><i class="fa fa-eye" style=""></i><span class="webrtc-call-participants"></span></span></span><span class="webrtc-join-container hidden"><button class="btn btn-primary join-call" style="width : 35px;height : 35px; font-size : 23px; padding : 0; border-radius : 50%;"><i class="fa fa-phone"></i></button></span></div><div class="webrtc-error hidden"><span class="webrtc-call-type"><span class="webrtc-call-icon"><i class="fa fa fa-exclamation"></i></span></span><span class="webrtc-call-details"><span class="webrtc-call-header missed">' +
				f((c.I18n || a && a.I18n || d).call(a, "delete_alert", {
					name: "I18n",
					hash: {context: "action_messages"},
					data: b
				})) + '</span><span class="webrtc-call-end-details">' + f((c.I18n || a && a.I18n || d).call(a, "call_load_error", {
					name: "I18n",
					hash: {context: "visitors"},
					data: b
				})) + '</span></span><span class="webrtc-join-container"><button class="btn btn-primary retry-load">' + f((c.I18n || a && a.I18n || d).call(a, "retry", {
					name: "I18n",
					hash: {context: "visitors"},
					data: b
				})) + "</button></span></div></div></div></div>"
		}, useData: !0
	});
	HandlebarsTemplates.alertBox =
		Handlebars.template({
			1: function (a, c, d, b, e) {
				d = '<div class="MessageBoxButtonSection">';
				a = c.each.call(a, null != a ? a.buttons : a, {
					name: "each",
					hash: {},
					fn: this.program(2, b, e),
					inverse: this.noop,
					data: b
				});
				null != a && (d += a);
				return d + "</div>"
			}, 2: function (a, c, d, b, e) {
				var f;
				d = this.lambda;
				var g = this.escapeExpression, h = c.helperMissing;
				return '<button id="' + g(d(null != e[1] ? e[1].elementId : e[1], a)) + "-" + g((f = null != (f = c.id || (null != a ? a.id : a)) ? f : h, "function" === typeof f ? f.call(a, {
						name: "id",
						hash: {},
						data: b
					}) : f)) + '" class="btn btn-default btn-sm botTempo">' +
					g((f = null != (f = c.text || (null != a ? a.text : a)) ? f : h, "function" === typeof f ? f.call(a, {
						name: "text",
						hash: {},
						data: b
					}) : f)) + "</button>"
			}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
				var f, g;
				d = c.helperMissing;
				var h = this.escapeExpression;
				d = '<div id="' + h((g = null != (g = c.elementId || (null != a ? a.elementId : a)) ? g : d, "function" === typeof g ? g.call(a, {
						name: "elementId",
						hash: {},
						data: b
					}) : g)) + '" class="divMessageBox animated fadeIn fast"><div class="MessageBoxContainer animated fadeIn fast"><div class="MessageBoxMiddle"><span class="MsgTitle">' +
					h((g = null != (g = c.title || (null != a ? a.title : a)) ? g : d, "function" === typeof g ? g.call(a, {
						name: "title",
						hash: {},
						data: b
					}) : g)) + '</span><p class="pText">' + h((g = null != (g = c.message || (null != a ? a.message : a)) ? g : d, "function" === typeof g ? g.call(a, {
						name: "message",
						hash: {},
						data: b
					}) : g)) + "</p>";
				f = c["if"].call(a, null != (f = null != a ? a.buttons : a) ? f.length : f, {
					name: "if",
					hash: {},
					fn: this.program(1, b, e),
					inverse: this.noop,
					data: b
				});
				null != f && (d += f);
				return d + "</div></div></div>"
			}, useData: !0, useDepths: !0
		});
	HandlebarsTemplates.emojiTabPane =
		Handlebars.template({
			1: function (a, c, d, b) {
				var e = this.lambda, f = this.escapeExpression;
				d = c.helperMissing;
				e = '<a href="javascript:void(0);" data-id="' + f(e(a, a)) + '" class="select-emoji" title="' + f(e(a, a)) + '">';
				a = (c.emojify || a && a.emojify || d).call(a, a, {name: "emojify", hash: {}, data: b});
				null != a && (e += a);
				return e + "</a>"
			}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
				d = '<div class="tab-pane in fade active"><div style="height : 100%; width : 95%; margin : 0px auto;">';
				a = c.each.call(a, null != a ? a.content : a,
					{name: "each", hash: {}, fn: this.program(1, b), inverse: this.noop, data: b});
				null != a && (d += a);
				return d + '</div><div class="clearfix"></div></div>'
			}, useData: !0
		});
	HandlebarsTemplates.emojiSearchPane = Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			return '<div class="tab-pane in fade active"><div class="input-group padding-5"><input class="form-control search-emoji" type="text" placeholder="Search..."><div class="input-group-btn" style="font-size : 13px;"><button class="btn btn-default btn-primary" type="button"><i class="fa fa-search"></i></button></div></div><div class="search-results"></div></div>'
		},
		useData: !0
	});
	HandlebarsTemplates.emojiDropDown = Handlebars.template({
		1: function (a, c, d, b) {
			var e = this.lambda, f = this.escapeExpression;
			d = c.helperMissing;
			e = '<li data-id="' + f(e(b && b.key, a)) + '" class="open-emoji-tab"><a class="padding-5" href="javascript:void(0);" style="height: 32px;">';
			a = (c.emojify || a && a.emojify || d).call(a, null != a ? a.header : a, {
				name: "emojify",
				hash: {},
				data: b
			});
			null != a && (e += a);
			return e + "</a></li>"
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = '<div class="emoji-container"><ul class="nav nav-tabs emoji-selection">';
			a = c.each.call(a, null != a ? a.emojiMap : a, {
				name: "each",
				hash: {},
				fn: this.program(1, b),
				inverse: this.noop,
				data: b
			});
			null != a && (d += a);
			return d + '<li data-id="search" class="open-emoji-tab"><a class="padding-5" href="javascript:void(0);" style="height: 32px;"><i class="fa fa-search" style="font-size: 18px;vertical-align: middle;"></i></a></li></ul><div class="tab-content"></div></div>'
		}, useData: !0
	});
	HandlebarsTemplates.newVersionMessage = Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e,
				f = c.helperMissing, g = this.escapeExpression,
				h = '<div id="new-version-message"><div class="SmallBox animated fadeInRight fast"><div class="textoFull"><span>';
			d = (e = null != (e = c.message || (null != a ? a.message : a)) ? e : f, "function" === typeof e ? e.call(a, {
				name: "message",
				hash: {},
				data: b
			}) : e);
			null != d && (h += d);
			return h + '</span><a href="' + g((e = null != (e = c.link || (null != a ? a.link : a)) ? e : f, "function" === typeof e ? e.call(a, {
				name: "link",
				hash: {},
				data: b
			}) : e)) + '" class="btn btn-tawk-pink btn-sm">' + g((e = null != (e = c.buttonText || (null !=
			a ? a.buttonText : a)) ? e : f, "function" === typeof e ? e.call(a, {
				name: "buttonText",
				hash: {},
				data: b
			}) : e)) + '</a><p></p></div><div class="miniIcono" style=""><i class="miniPic fa fa-times"></i></div></div></div>'
		}, useData: !0
	});
	HandlebarsTemplates.unsupportedAlert = Handlebars.template({
		compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e;
			d = c.helperMissing;
			var f = this.escapeExpression,
				f = '<div id="' + f((e = null != (e = c.elementId || (null != a ? a.elementId : a)) ? e : d, "function" === typeof e ? e.call(a, {
					name: "elementId", hash: {},
					data: b
				}) : e)) + '" class="fixed-notification"><div class="SmallBox animated fadeInRight fast"><div class="textoFull"><span>';
			a = (e = null != (e = c.message || (null != a ? a.message : a)) ? e : d, "function" === typeof e ? e.call(a, {
				name: "message",
				hash: {},
				data: b
			}) : e);
			null != a && (f += a);
			return f + '</span><p></p></div><div class="miniIcono" style=""><i class="miniPic fa fa-times"></i></div></div></div></div>'
		}, useData: !0
	});
	window.HandlebarsTemplates = HandlebarsTemplates;
	(function () {
		!function (a) {
			var c;
			"undefined" != typeof window ? c =
				window : "undefined" != typeof global ? c = global : "undefined" != typeof self && (c = self);
			c.$__TawkEngine = a()
		}(function () {
			return function c(d, b, e) {
				function f(h, l) {
					if (!b[h]) {
						if (!d[h]) {
							var m = "function" == typeof require && require;
							if (!l && m) return m(h, !0);
							if (g) return g(h, !0);
							throw Error("Cannot find module '" + h + "'");
						}
						m = b[h] = {exports: {}};
						d[h][0].call(m.exports, function (b) {
							var c = d[h][1][b];
							return f(c ? c : b)
						}, m, m.exports, c, d, b, e)
					}
					return b[h].exports
				}

				for (var g = "function" == typeof require && require, h = 0; h < e.length; h++) f(e[h]);
				return f
			}({
				debug: [function (c, d, b) {
					d.exports = c("n9i2g6")
				}, {}],
				n9i2g6: [function (c, d, b) {
					d.exports = function () {
						return function () {
						}
					}
				}, {}],
				3: [function (c, d, b) {
					function e() {
					}

					d.exports = function (b, c, d) {
						function k(b, e) {
							if (0 >= k.count) throw Error("after called too many times");
							--k.count;
							b ? (l = !0, c(b), c = d) : 0 !== k.count || l || c(null, e)
						}

						var l = !1;
						d = d || e;
						k.count = b;
						return 0 === b ? c() : k
					}
				}, {}],
				4: [function (c, d, b) {
					d.exports = function (b, c, d) {
						var h = b.byteLength;
						c = c || 0;
						d = d || h;
						if (b.slice) return b.slice(c, d);
						0 > c && (c += h);
						0 > d && (d += h);
						d > h && (d = h);
						if (c >= h || c >= d || 0 === h) return new ArrayBuffer(0);
						b = new Uint8Array(b);
						for (var h = new Uint8Array(d - c), k = 0; c < d; c++, k++) h[k] = b[c];
						return h.buffer
					}
				}, {}],
				5: [function (c, d, b) {
					(function (c) {
						b.encode = function (b) {
							b = new Uint8Array(b);
							var d, h = b.length, k = "";
							for (d = 0; d < h; d += 3) k += c[b[d] >> 2], k += c[(b[d] & 3) << 4 | b[d + 1] >> 4], k += c[(b[d + 1] & 15) << 2 | b[d + 2] >> 6], k += c[b[d + 2] & 63];
							2 === h % 3 ? k = k.substring(0, k.length - 1) + "=" : 1 === h % 3 && (k = k.substring(0, k.length - 2) + "==");
							return k
						};
						b.decode = function (b) {
							var d = 0.75 * b.length, h = b.length,
								k = 0, l, m, n, p;
							"=" === b[b.length - 1] && (d--, "=" === b[b.length - 2] && d--);
							for (var q = new ArrayBuffer(d), r = new Uint8Array(q), d = 0; d < h; d += 4) l = c.indexOf(b[d]), m = c.indexOf(b[d + 1]), n = c.indexOf(b[d + 2]), p = c.indexOf(b[d + 3]), r[k++] = l << 2 | m >> 4, r[k++] = (m & 15) << 4 | n >> 2, r[k++] = (n & 3) << 6 | p & 63;
							return q
						}
					})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/")
				}, {}],
				6: [function (c, d, b) {
					(function (b) {
						function c(b) {
							for (var d = 0; d < b.length; d++) {
								var e = b[d];
								if (e.buffer instanceof ArrayBuffer) {
									var f = e.buffer;
									if (e.byteLength !==
										f.byteLength) {
										var g = new Uint8Array(e.byteLength);
										g.set(new Uint8Array(f, e.byteOffset, e.byteLength));
										f = g.buffer
									}
									b[d] = f
								}
							}
						}

						function g(b, d) {
							d = d || {};
							var e = new k;
							c(b);
							for (var g = 0; g < b.length; g++) e.append(b[g]);
							return d.type ? e.getBlob(d.type) : e.getBlob()
						}

						function h(b, d) {
							c(b);
							return new Blob(b, d || {})
						}

						var k = b.BlobBuilder || b.WebKitBlobBuilder || b.MSBlobBuilder || b.MozBlobBuilder, l;
						try {
							l = 2 === (new Blob(["hi"])).size
						} catch (m) {
							l = !1
						}
						var n;
						if (n = l) try {
							n = 2 === (new Blob([new Uint8Array([1, 2])])).size
						} catch (p) {
							n = !1
						}
						var q =
							k && k.prototype.append && k.prototype.getBlob;
						b = l ? n ? b.Blob : h : q ? g : void 0;
						d.exports = b
					}).call(this, "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
				}, {}],
				7: [function (c, d, b) {
				}, {}],
				8: [function (c, d, b) {
					function e(b) {
						if (b) {
							for (var c in e.prototype) b[c] = e.prototype[c];
							return b
						}
					}

					d.exports = e;
					e.prototype.on = e.prototype.addEventListener = function (b, c) {
						this._callbacks = this._callbacks || {};
						(this._callbacks[b] = this._callbacks[b] || []).push(c);
						return this
					};
					e.prototype.once = function (b, c) {
						function d() {
							e.off(b,
								d);
							c.apply(this, arguments)
						}

						var e = this;
						this._callbacks = this._callbacks || {};
						d.fn = c;
						this.on(b, d);
						return this
					};
					e.prototype.off = e.prototype.removeListener = e.prototype.removeAllListeners = e.prototype.removeEventListener = function (b, c) {
						this._callbacks = this._callbacks || {};
						if (0 == arguments.length) return this._callbacks = {}, this;
						var d = this._callbacks[b];
						if (!d) return this;
						if (1 == arguments.length) return delete this._callbacks[b], this;
						for (var e, l = 0; l < d.length; l++) if (e = d[l], e === c || e.fn === c) {
							d.splice(l, 1);
							break
						}
						return this
					};
					e.prototype.emit = function (b) {
						this._callbacks = this._callbacks || {};
						var c = [].slice.call(arguments, 1), d = this._callbacks[b];
						if (d) for (var d = d.slice(0), e = 0, l = d.length; e < l; ++e) d[e].apply(this, c);
						return this
					};
					e.prototype.listeners = function (b) {
						this._callbacks = this._callbacks || {};
						return this._callbacks[b] || []
					};
					e.prototype.hasListeners = function (b) {
						return !!this.listeners(b).length
					}
				}, {}],
				9: [function (c, d, b) {
					d.exports = function (b, c) {
						var d = function () {
						};
						d.prototype = c.prototype;
						b.prototype = new d;
						b.prototype.constructor =
							b
					}
				}, {}],
				10: [function (c, d, b) {
					d.exports = c("./lib/")
				}, {"./lib/": 11}],
				11: [function (c, d, b) {
					d.exports = c("./socket");
					d.exports.parser = c("engine.io-parser")
				}, {"./socket": 12, "engine.io-parser": 20}],
				12: [function (c, d, b) {
					(function (b) {
						function f(c, d) {
							if (!(this instanceof f)) return new f(c, d);
							d = d || {};
							c && "object" == typeof c && (d = c, c = null);
							c ? (c = n(c), d.hostname = c.host, d.secure = "https" == c.protocol || "wss" == c.protocol, d.port = c.port, c.query && (d.query = c.query)) : d.host && (d.hostname = n(d.host).host);
							this.secure = null != d.secure ?
								d.secure : b.location && "https:" == location.protocol;
							d.hostname && !d.port && (d.port = this.secure ? "443" : "80");
							this.agent = d.agent || !1;
							this.hostname = d.hostname || (b.location ? location.hostname : "localhost");
							this.port = d.port || (b.location && location.port ? location.port : this.secure ? 443 : 80);
							this.query = d.query || {};
							"string" == typeof this.query && (this.query = q.decode(this.query));
							this.upgrade = !1 !== d.upgrade;
							this.path = (d.path || "/engine.io").replace(/\/$/, "") + "/";
							this.forceJSONP = !!d.forceJSONP;
							this.jsonp = !1 !== d.jsonp;
							this.forceBase64 =
								!!d.forceBase64;
							this.enablesXDR = !!d.enablesXDR;
							this.timestampParam = d.timestampParam || "t";
							this.timestampRequests = d.timestampRequests;
							this.transports = d.transports || ["polling", "websocket"];
							this.readyState = "";
							this.writeBuffer = [];
							this.policyPort = d.policyPort || 843;
							this.rememberUpgrade = d.rememberUpgrade || !1;
							this.binaryType = null;
							this.onlyBinaryUpgrades = d.onlyBinaryUpgrades;
							this.perMessageDeflate = !1 !== d.perMessageDeflate ? d.perMessageDeflate || {} : !1;
							!0 === this.perMessageDeflate && (this.perMessageDeflate = {});
							this.perMessageDeflate &&
							null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024);
							this.pfx = d.pfx || null;
							this.key = d.key || null;
							this.passphrase = d.passphrase || null;
							this.cert = d.cert || null;
							this.ca = d.ca || null;
							this.ciphers = d.ciphers || null;
							this.rejectUnauthorized = void 0 === d.rejectUnauthorized ? !0 : d.rejectUnauthorized;
							var g = "object" == typeof b && b;
							g.global === g && (d.extraHeaders && 0 < Object.keys(d.extraHeaders).length) && (this.extraHeaders = d.extraHeaders);
							this.open()
						}

						var g = c("./transports"), h = c("component-emitter"), k =
								c("debug")("engine.io-client:socket"), l = c("indexof"), m = c("engine.io-parser"),
							n = c("parseuri"), p = c("parsejson"), q = c("parseqs");
						d.exports = f;
						f.priorWebsocketSuccess = !1;
						h(f.prototype);
						f.protocol = m.protocol;
						f.Socket = f;
						f.Transport = c("./transport");
						f.transports = c("./transports");
						f.parser = c("engine.io-parser");
						f.prototype.createTransport = function (b) {
							k('creating transport "%s"', b);
							var c = this.query, d = {}, e;
							for (e in c) c.hasOwnProperty(e) && (d[e] = c[e]);
							d.EIO = m.protocol;
							d.transport = b;
							this.id && (d.sid = this.id);
							return new g[b]({
								agent: this.agent,
								hostname: this.hostname,
								port: this.port,
								secure: this.secure,
								path: this.path,
								query: d,
								forceJSONP: this.forceJSONP,
								jsonp: this.jsonp,
								forceBase64: this.forceBase64,
								enablesXDR: this.enablesXDR,
								timestampRequests: this.timestampRequests,
								timestampParam: this.timestampParam,
								policyPort: this.policyPort,
								socket: this,
								pfx: this.pfx,
								key: this.key,
								passphrase: this.passphrase,
								cert: this.cert,
								ca: this.ca,
								ciphers: this.ciphers,
								rejectUnauthorized: this.rejectUnauthorized,
								perMessageDeflate: this.perMessageDeflate,
								extraHeaders: this.extraHeaders
							})
						};
						f.prototype.open = function () {
							var b;
							if (this.rememberUpgrade && f.priorWebsocketSuccess && -1 != this.transports.indexOf("websocket")) b = "websocket"; else {
								if (0 === this.transports.length) {
									var c = this;
									setTimeout(function () {
										c.emit("error", "No transports available")
									}, 0);
									return
								}
								b = this.transports[0]
							}
							this.readyState = "opening";
							try {
								b = this.createTransport(b)
							} catch (d) {
								this.transports.shift();
								this.open();
								return
							}
							b.open();
							this.setTransport(b)
						};
						f.prototype.setTransport = function (b) {
							k("setting transport %s", b.name);
							var c = this;
							this.transport && (k("clearing existing transport %s", this.transport.name), this.transport.removeAllListeners());
							this.transport = b;
							b.on("drain", function () {
								c.onDrain()
							}).on("packet", function (b) {
								c.onPacket(b)
							}).on("error", function (b) {
								c.onError(b)
							}).on("close", function () {
								c.onClose("transport close")
							})
						};
						f.prototype.probe = function (b) {
							function c() {
								if (q.onlyBinaryUpgrades) {
									var d = !this.supportsBinary && q.transport.supportsBinary;
									p = p || d
								}
								p || (k('probe transport "%s" opened', b), n.send([{type: "ping", data: "probe"}]),
									n.once("packet", function (c) {
										p || ("pong" == c.type && "probe" == c.data ? (k('probe transport "%s" pong', b), q.upgrading = !0, q.emit("upgrading", n), n && (f.priorWebsocketSuccess = "websocket" == n.name, k('pausing current transport "%s"', q.transport.name), q.transport.pause(function () {
											p || "closed" == q.readyState || (k("changing transport and sending upgrade packet"), m(), q.setTransport(n), n.send([{type: "upgrade"}]), q.emit("upgrade", n), n = null, q.upgrading = !1, q.flush())
										}))) : (k('probe transport "%s" failed', b), c = Error("probe error"),
											c.transport = n.name, q.emit("upgradeError", c)))
									}))
							}

							function d() {
								p || (p = !0, m(), n.close(), n = null)
							}

							function e(c) {
								var f = Error("probe error: " + c);
								f.transport = n.name;
								d();
								k('probe transport "%s" failed because of error: %s', b, c);
								q.emit("upgradeError", f)
							}

							function g() {
								e("transport closed")
							}

							function h() {
								e("socket closed")
							}

							function l(b) {
								n && b.name != n.name && (k('"%s" works - aborting "%s"', b.name, n.name), d())
							}

							function m() {
								n.removeListener("open", c);
								n.removeListener("error", e);
								n.removeListener("close", g);
								q.removeListener("close",
									h);
								q.removeListener("upgrading", l)
							}

							k('probing transport "%s"', b);
							var n = this.createTransport(b, {probe: 1}), p = !1, q = this;
							f.priorWebsocketSuccess = !1;
							n.once("open", c);
							n.once("error", e);
							n.once("close", g);
							this.once("close", h);
							this.once("upgrading", l);
							n.open()
						};
						f.prototype.onOpen = function () {
							k("socket open");
							this.readyState = "open";
							f.priorWebsocketSuccess = "websocket" == this.transport.name;
							this.emit("open");
							this.flush();
							if ("open" == this.readyState && this.upgrade && this.transport.pause) {
								k("starting upgrade probes");
								for (var b = 0, c = this.upgrades.length; b < c; b++) this.probe(this.upgrades[b])
							}
						};
						f.prototype.onPacket = function (b) {
							if ("opening" == this.readyState || "open" == this.readyState) switch (k('socket receive: type "%s", data "%s"', b.type, b.data), this.emit("packet", b), this.emit("heartbeat"), b.type) {
								case "open":
									this.onHandshake(p(b.data));
									break;
								case "pong":
									this.setPing();
									this.emit("pong");
									break;
								case "error":
									var c = Error("server error");
									c.code = b.data;
									this.onError(c);
									break;
								case "message":
									this.emit("data", b.data), this.emit("message",
										b.data)
							} else k('packet received with socket readyState "%s"', this.readyState)
						};
						f.prototype.onHandshake = function (b) {
							this.emit("handshake", b);
							this.id = b.sid;
							this.transport.query.sid = b.sid;
							this.upgrades = this.filterUpgrades(b.upgrades);
							this.pingInterval = b.pingInterval;
							this.pingTimeout = b.pingTimeout;
							this.onOpen();
							"closed" != this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat))
						};
						f.prototype.onHeartbeat = function (b) {
							clearTimeout(this.pingTimeoutTimer);
							var c = this;
							c.pingTimeoutTimer = setTimeout(function () {
								if ("closed" != c.readyState) c.onClose("ping timeout")
							}, b || c.pingInterval + c.pingTimeout)
						};
						f.prototype.setPing = function () {
							var b = this;
							clearTimeout(b.pingIntervalTimer);
							b.pingIntervalTimer = setTimeout(function () {
								k("writing ping packet - expecting pong within %sms", b.pingTimeout);
								b.ping();
								b.onHeartbeat(b.pingTimeout)
							}, b.pingInterval)
						};
						f.prototype.ping = function () {
							var b = this;
							this.sendPacket("ping", function () {
								b.emit("ping")
							})
						};
						f.prototype.onDrain = function () {
							this.writeBuffer.splice(0,
								this.prevBufferLen);
							this.prevBufferLen = 0;
							0 === this.writeBuffer.length ? this.emit("drain") : this.flush()
						};
						f.prototype.flush = function () {
							"closed" != this.readyState && (this.transport.writable && !this.upgrading && this.writeBuffer.length) && (k("flushing %d packets in socket", this.writeBuffer.length), this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"))
						};
						f.prototype.write = f.prototype.send = function (b, c, d) {
							this.sendPacket("message", b, c, d);
							return this
						};
						f.prototype.sendPacket =
							function (b, c, d, e) {
								"function" == typeof c && (e = c, c = void 0);
								"function" == typeof d && (e = d, d = null);
								if ("closing" != this.readyState && "closed" != this.readyState) {
									d = d || {};
									d.compress = !1 !== d.compress;
									b = {type: b, data: c, options: d};
									this.emit("packetCreate", b);
									this.writeBuffer.push(b);
									if (e) this.once("flush", e);
									this.flush()
								}
							};
						f.prototype.close = function () {
							function b() {
								e.onClose("forced close");
								k("socket closing - telling transport to close");
								e.transport.close()
							}

							function c() {
								e.removeListener("upgrade", c);
								e.removeListener("upgradeError",
									c);
								b()
							}

							function d() {
								e.once("upgrade", c);
								e.once("upgradeError", c)
							}

							if ("opening" == this.readyState || "open" == this.readyState) {
								this.readyState = "closing";
								var e = this;
								if (this.writeBuffer.length) this.once("drain", function () {
									this.upgrading ? d() : b()
								}); else this.upgrading ? d() : b()
							}
							return this
						};
						f.prototype.onError = function (b) {
							k("socket error %j", b);
							f.priorWebsocketSuccess = !1;
							this.emit("error", b);
							this.onClose("transport error", b)
						};
						f.prototype.onClose = function (b, c) {
							if ("opening" == this.readyState || "open" == this.readyState ||
								"closing" == this.readyState) k('socket close with reason: "%s"', b), clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", b, c), this.writeBuffer = [], this.prevBufferLen = 0
						};
						f.prototype.filterUpgrades = function (b) {
							for (var c = [], d = 0, e = b.length; d < e; d++) ~l(this.transports, b[d]) && c.push(b[d]);
							return c
						}
					}).call(this, "undefined" !== typeof self ?
						self : "undefined" !== typeof window ? window : {})
				}, {
					"./transport": 13,
					"./transports": 14,
					"component-emitter": 8,
					debug: "n9i2g6",
					"engine.io-parser": 20,
					indexof: 24,
					parsejson: 26,
					parseqs: 27,
					parseuri: 28
				}],
				13: [function (c, d, b) {
					function e(b) {
						this.path = b.path;
						this.hostname = b.hostname;
						this.port = b.port;
						this.secure = b.secure;
						this.query = b.query;
						this.timestampParam = b.timestampParam;
						this.timestampRequests = b.timestampRequests;
						this.readyState = "";
						this.agent = b.agent || !1;
						this.socket = b.socket;
						this.enablesXDR = b.enablesXDR;
						this.pfx =
							b.pfx;
						this.key = b.key;
						this.passphrase = b.passphrase;
						this.cert = b.cert;
						this.ca = b.ca;
						this.ciphers = b.ciphers;
						this.rejectUnauthorized = b.rejectUnauthorized;
						this.extraHeaders = b.extraHeaders
					}

					var f = c("engine.io-parser");
					c = c("component-emitter");
					d.exports = e;
					c(e.prototype);
					e.prototype.onError = function (b, c) {
						var d = Error(b);
						d.type = "TransportError";
						d.description = c;
						this.emit("error", d);
						return this
					};
					e.prototype.open = function () {
						if ("closed" == this.readyState || "" == this.readyState) this.readyState = "opening", this.doOpen();
						return this
					};
					e.prototype.close = function () {
						if ("opening" == this.readyState || "open" == this.readyState) this.doClose(), this.onClose();
						return this
					};
					e.prototype.send = function (b) {
						if ("open" == this.readyState) this.write(b); else throw Error("Transport not open");
					};
					e.prototype.onOpen = function () {
						this.readyState = "open";
						this.writable = !0;
						this.emit("open")
					};
					e.prototype.onData = function (b) {
						b = f.decodePacket(b, this.socket.binaryType);
						this.onPacket(b)
					};
					e.prototype.onPacket = function (b) {
						this.emit("packet", b)
					};
					e.prototype.onClose =
						function () {
							this.readyState = "closed";
							this.emit("close")
						}
				}, {"component-emitter": 8, "engine.io-parser": 20}],
				14: [function (c, d, b) {
					(function (d) {
						var f = c("xmlhttprequest-ssl"), g = c("./polling-xhr"), h = c("./polling-jsonp"),
							k = c("./websocket");
						b.polling = function (b) {
							var c = !1, k = !1, p = !1 !== b.jsonp;
							d.location && (k = "https:" == location.protocol, (c = location.port) || (c = k ? 443 : 80), c = b.hostname != location.hostname || c != b.port, k = b.secure != k);
							b.xdomain = c;
							b.xscheme = k;
							if ("open" in new f(b) && !b.forceJSONP) return new g(b);
							if (!p) throw Error("JSONP disabled");
							return new h(b)
						};
						b.websocket = k
					}).call(this, "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
				}, {"./polling-jsonp": 15, "./polling-xhr": 16, "./websocket": 18, "xmlhttprequest-ssl": 19}],
				15: [function (c, d, b) {
					(function (b) {
						function f() {
						}

						function g(c) {
							h.call(this, c);
							this.query = this.query || {};
							n || (b.___eio || (b.___eio = []), n = b.___eio);
							this.index = n.length;
							var d = this;
							n.push(function (b) {
								d.onData(b)
							});
							this.query.j = this.index;
							b.document && b.addEventListener && b.addEventListener("beforeunload", function () {
								d.script &&
								(d.script.onerror = f)
							}, !1)
						}

						var h = c("./polling"), k = c("component-inherit");
						d.exports = g;
						var l = /\n/g, m = /\\n/g, n;
						k(g, h);
						g.prototype.supportsBinary = !1;
						g.prototype.doClose = function () {
							this.script && (this.script.parentNode.removeChild(this.script), this.script = null);
							this.form && (this.form.parentNode.removeChild(this.form), this.iframe = this.form = null);
							h.prototype.doClose.call(this)
						};
						g.prototype.doPoll = function () {
							var b = this, c = document.createElement("script");
							this.script && (this.script.parentNode.removeChild(this.script),
								this.script = null);
							c.async = !0;
							c.src = this.uri();
							c.onerror = function (c) {
								b.onError("jsonp poll error", c)
							};
							var d = document.getElementsByTagName("script")[0];
							d ? d.parentNode.insertBefore(c, d) : (document.head || document.body).appendChild(c);
							this.script = c;
							"undefined" != typeof navigator && /gecko/i.test(navigator.userAgent) && setTimeout(function () {
								var b = document.createElement("iframe");
								document.body.appendChild(b);
								document.body.removeChild(b)
							}, 100)
						};
						g.prototype.doWrite = function (b, c) {
							function d() {
								e();
								c()
							}

							function e() {
								if (f.iframe) try {
									f.form.removeChild(f.iframe)
								} catch (b) {
									f.onError("jsonp polling iframe removal error",
										b)
								}
								try {
									n = document.createElement('<iframe src="javascript:0" name="' + f.iframeId + '">')
								} catch (c) {
									n = document.createElement("iframe"), n.name = f.iframeId, n.src = "javascript:0"
								}
								n.id = f.iframeId;
								f.form.appendChild(n);
								f.iframe = n
							}

							var f = this;
							if (!this.form) {
								var g = document.createElement("form"), h = document.createElement("textarea"),
									k = this.iframeId = "eio_iframe_" + this.index, n;
								g.className = "socketio";
								g.style.position = "absolute";
								g.style.top = "-1000px";
								g.style.left = "-1000px";
								g.target = k;
								g.method = "POST";
								g.setAttribute("accept-charset",
									"utf-8");
								h.name = "d";
								g.appendChild(h);
								document.body.appendChild(g);
								this.form = g;
								this.area = h
							}
							this.form.action = this.uri();
							e();
							b = b.replace(m, "\\\n");
							this.area.value = b.replace(l, "\\n");
							try {
								this.form.submit()
							} catch (z) {
							}
							this.iframe.attachEvent ? this.iframe.onreadystatechange = function () {
								"complete" == f.iframe.readyState && d()
							} : this.iframe.onload = d
						}
					}).call(this, "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
				}, {"./polling": 17, "component-inherit": 9}],
				16: [function (c, d, b) {
					(function (b) {
						function f() {
						}

						function g(c) {
							m.call(this, c);
							if (b.location) {
								var d = "https:" == location.protocol, f = location.port;
								f || (f = d ? 443 : 80);
								this.xd = c.hostname != b.location.hostname || f != c.port;
								this.xs = c.secure != d
							} else this.extraHeaders = c.extraHeaders
						}

						function h(b) {
							this.method = b.method || "GET";
							this.uri = b.uri;
							this.xd = !!b.xd;
							this.xs = !!b.xs;
							this.async = !1 !== b.async;
							this.data = void 0 != b.data ? b.data : null;
							this.agent = b.agent;
							this.isBinary = b.isBinary;
							this.supportsBinary = b.supportsBinary;
							this.enablesXDR = b.enablesXDR;
							this.pfx = b.pfx;
							this.key =
								b.key;
							this.passphrase = b.passphrase;
							this.cert = b.cert;
							this.ca = b.ca;
							this.ciphers = b.ciphers;
							this.rejectUnauthorized = b.rejectUnauthorized;
							this.extraHeaders = b.extraHeaders;
							this.create()
						}

						function k() {
							for (var b in h.requests) h.requests.hasOwnProperty(b) && h.requests[b].abort()
						}

						var l = c("xmlhttprequest-ssl"), m = c("./polling"), n = c("component-emitter"),
							p = c("component-inherit"), q = c("debug")("engine.io-client:polling-xhr");
						d.exports = g;
						d.exports.Request = h;
						p(g, m);
						g.prototype.supportsBinary = !0;
						g.prototype.request = function (b) {
							b =
								b || {};
							b.uri = this.uri();
							b.xd = this.xd;
							b.xs = this.xs;
							b.agent = this.agent || !1;
							b.supportsBinary = this.supportsBinary;
							b.enablesXDR = this.enablesXDR;
							b.pfx = this.pfx;
							b.key = this.key;
							b.passphrase = this.passphrase;
							b.cert = this.cert;
							b.ca = this.ca;
							b.ciphers = this.ciphers;
							b.rejectUnauthorized = this.rejectUnauthorized;
							b.extraHeaders = this.extraHeaders;
							return new h(b)
						};
						g.prototype.doWrite = function (b, c) {
							var d = this.request({
								method: "POST",
								data: b,
								isBinary: "string" !== typeof b && void 0 !== b
							}), e = this;
							d.on("success", c);
							d.on("error",
								function (b) {
									e.onError("xhr post error", b)
								});
							this.sendXhr = d
						};
						g.prototype.doPoll = function () {
							q("xhr poll");
							var b = this.request(), c = this;
							b.on("data", function (b) {
								c.onData(b)
							});
							b.on("error", function (b) {
								c.onError("xhr poll error", b)
							});
							this.pollXhr = b
						};
						n(h.prototype);
						h.prototype.create = function () {
							var c = {
								agent: this.agent,
								xdomain: this.xd,
								xscheme: this.xs,
								enablesXDR: this.enablesXDR
							};
							c.pfx = this.pfx;
							c.key = this.key;
							c.passphrase = this.passphrase;
							c.cert = this.cert;
							c.ca = this.ca;
							c.ciphers = this.ciphers;
							c.rejectUnauthorized =
								this.rejectUnauthorized;
							var d = this.xhr = new l(c), f = this;
							try {
								q("xhr open %s: %s", this.method, this.uri);
								d.open(this.method, this.uri, this.async);
								try {
									if (this.extraHeaders) {
										d.setDisableHeaderCheck(!0);
										for (var g in this.extraHeaders) this.extraHeaders.hasOwnProperty(g) && d.setRequestHeader(g, this.extraHeaders[g])
									}
								} catch (k) {
								}
								this.supportsBinary && (d.responseType = "arraybuffer");
								if ("POST" == this.method) try {
									this.isBinary ? d.setRequestHeader("Content-type", "application/octet-stream") : d.setRequestHeader("Content-type",
										"text/plain;charset=UTF-8")
								} catch (m) {
								}
								"withCredentials" in d && (d.withCredentials = !0);
								this.hasXDR() ? (d.onload = function () {
									f.onLoad()
								}, d.onerror = function () {
									f.onError(d.responseText)
								}) : d.onreadystatechange = function () {
									if (4 == d.readyState) if (200 == d.status || 1223 == d.status) f.onLoad(); else setTimeout(function () {
										f.onError(d.status)
									}, 0)
								};
								q("xhr data %s", this.data);
								d.send(this.data)
							} catch (n) {
								setTimeout(function () {
									f.onError(n)
								}, 0);
								return
							}
							b.document && (this.index = h.requestsCount++, h.requests[this.index] = this)
						};
						h.prototype.onSuccess =
							function () {
								this.emit("success");
								this.cleanup()
							};
						h.prototype.onData = function (b) {
							this.emit("data", b);
							this.onSuccess()
						};
						h.prototype.onError = function (b) {
							this.emit("error", b);
							this.cleanup(!0)
						};
						h.prototype.cleanup = function (c) {
							if ("undefined" != typeof this.xhr && null !== this.xhr) {
								this.hasXDR() ? this.xhr.onload = this.xhr.onerror = f : this.xhr.onreadystatechange = f;
								if (c) try {
									this.xhr.abort()
								} catch (d) {
								}
								b.document && delete h.requests[this.index];
								this.xhr = null
							}
						};
						h.prototype.onLoad = function () {
							var b;
							try {
								var c;
								try {
									c = this.xhr.getResponseHeader("Content-Type").split(";")[0]
								} catch (d) {
								}
								if ("application/octet-stream" ===
									c) b = this.xhr.response; else if (this.supportsBinary) try {
									b = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response))
								} catch (e) {
									var f = new Uint8Array(this.xhr.response);
									c = [];
									for (var g = 0, h = f.length; g < h; g++) c.push(f[g]);
									b = String.fromCharCode.apply(null, c)
								} else b = this.xhr.responseText
							} catch (k) {
								this.onError(k)
							}
							if (null != b) this.onData(b)
						};
						h.prototype.hasXDR = function () {
							return "undefined" !== typeof b.XDomainRequest && !this.xs && this.enablesXDR
						};
						h.prototype.abort = function () {
							this.cleanup()
						};
						b.document && (h.requestsCount =
							0, h.requests = {}, b.attachEvent ? b.attachEvent("onunload", k) : b.addEventListener && b.addEventListener("beforeunload", k, !1))
					}).call(this, "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
				}, {
					"./polling": 17,
					"component-emitter": 8,
					"component-inherit": 9,
					debug: "n9i2g6",
					"xmlhttprequest-ssl": 19
				}],
				17: [function (c, d, b) {
					function e(b) {
						var c = b && b.forceBase64;
						if (!m || c) this.supportsBinary = !1;
						f.call(this, b)
					}

					var f = c("../transport"), g = c("parseqs"), h = c("engine.io-parser");
					b = c("component-inherit");
					var k =
						c("yeast"), l = c("debug")("engine.io-client:polling");
					d.exports = e;
					var m = null != (new (c("xmlhttprequest-ssl"))({xdomain: !1})).responseType;
					b(e, f);
					e.prototype.name = "polling";
					e.prototype.doOpen = function () {
						this.poll()
					};
					e.prototype.pause = function (b) {
						function c() {
							l("paused");
							d.readyState = "paused";
							b()
						}

						var d = this;
						this.readyState = "pausing";
						if (this.polling || !this.writable) {
							var e = 0;
							this.polling && (l("we are currently polling - waiting to pause"), e++, this.once("pollComplete", function () {
								l("pre-pause polling complete");
								--e || c()
							}));
							this.writable || (l("we are currently writing - waiting to pause"), e++, this.once("drain", function () {
								l("pre-pause writing complete");
								--e || c()
							}))
						} else c()
					};
					e.prototype.poll = function () {
						l("polling");
						this.polling = !0;
						this.doPoll();
						this.emit("poll")
					};
					e.prototype.onData = function (b) {
						var c = this;
						l("polling got data %s", b);
						h.decodePayload(b, this.socket.binaryType, function (b, d, e) {
							if ("opening" == c.readyState) c.onOpen();
							if ("close" == b.type) return c.onClose(), !1;
							c.onPacket(b)
						});
						"closed" != this.readyState &&
						(this.polling = !1, this.emit("pollComplete"), "open" == this.readyState ? this.poll() : l('ignoring poll - transport state "%s"', this.readyState))
					};
					e.prototype.doClose = function () {
						function b() {
							l("writing close packet");
							c.write([{type: "close"}])
						}

						var c = this;
						"open" == this.readyState ? (l("transport open - closing"), b()) : (l("transport not open - deferring close"), this.once("open", b))
					};
					e.prototype.write = function (b) {
						var c = this;
						this.writable = !1;
						var d = function () {
							c.writable = !0;
							c.emit("drain")
						}, c = this;
						h.encodePayload(b,
							this.supportsBinary, function (b) {
								c.doWrite(b, d)
							})
					};
					e.prototype.uri = function () {
						var b = this.query || {}, c = this.secure ? "https" : "http", d = "";
						!1 !== this.timestampRequests && (b[this.timestampParam] = k());
						this.supportsBinary || b.sid || (b.b64 = 1);
						b = g.encode(b);
						this.port && ("https" == c && 443 != this.port || "http" == c && 80 != this.port) && (d = ":" + this.port);
						b.length && (b = "?" + b);
						var e = -1 !== this.hostname.indexOf(":");
						return c + "://" + (e ? "[" + this.hostname + "]" : this.hostname) + d + this.path + b
					}
				}, {
					"../transport": 13, "component-inherit": 9, debug: "n9i2g6",
					"engine.io-parser": 20, parseqs: 27, "xmlhttprequest-ssl": 19, yeast: 30
				}],
				18: [function (c, d, b) {
					(function (b) {
						function f(b) {
							b && b.forceBase64 && (this.supportsBinary = !1);
							this.perMessageDeflate = b.perMessageDeflate;
							g.call(this, b)
						}

						var g = c("../transport"), h = c("engine.io-parser"), k = c("parseqs"),
							l = c("component-inherit"), m = c("yeast"), n = c("debug")("engine.io-client:websocket"),
							p = b.WebSocket || b.MozWebSocket, q = p;
						if (!q && "undefined" === typeof window) try {
							q = c("ws")
						} catch (r) {
						}
						d.exports = f;
						l(f, g);
						f.prototype.name = "websocket";
						f.prototype.supportsBinary = !0;
						f.prototype.doOpen = function () {
							if (this.check()) {
								var b = this.uri(), c = {agent: this.agent, perMessageDeflate: this.perMessageDeflate};
								c.pfx = this.pfx;
								c.key = this.key;
								c.passphrase = this.passphrase;
								c.cert = this.cert;
								c.ca = this.ca;
								c.ciphers = this.ciphers;
								c.rejectUnauthorized = this.rejectUnauthorized;
								this.extraHeaders && (c.headers = this.extraHeaders);
								this.ws = p ? new q(b) : new q(b, void 0, c);
								void 0 === this.ws.binaryType && (this.supportsBinary = !1);
								this.ws.supports && this.ws.supports.binary ? (this.supportsBinary =
									!0, this.ws.binaryType = "buffer") : this.ws.binaryType = "arraybuffer";
								this.addEventListeners()
							}
						};
						f.prototype.addEventListeners = function () {
							var b = this;
							this.ws.onopen = function () {
								b.onOpen()
							};
							this.ws.onclose = function () {
								b.onClose()
							};
							this.ws.onmessage = function (c) {
								b.onData(c.data)
							};
							this.ws.onerror = function (c) {
								b.onError("websocket error", c)
							}
						};
						"undefined" != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent) && (f.prototype.onData = function (b) {
							var c = this;
							setTimeout(function () {
									g.prototype.onData.call(c, b)
								},
								0)
						});
						f.prototype.write = function (c) {
							function d() {
								f.emit("flush");
								setTimeout(function () {
									f.writable = !0;
									f.emit("drain")
								}, 0)
							}

							var f = this;
							this.writable = !1;
							for (var g = c.length, k = 0, l = g; k < l; k++) (function (c) {
								h.encodePacket(c, f.supportsBinary, function (h) {
									if (!p) {
										var k = {};
										c.options && (k.compress = c.options.compress);
										f.perMessageDeflate && ("string" == typeof h ? b.Buffer.byteLength(h) : h.length) < f.perMessageDeflate.threshold && (k.compress = !1)
									}
									try {
										p ? f.ws.send(h) : f.ws.send(h, k)
									} catch (l) {
										n("websocket closed before onclose event")
									}
									--g ||
									d()
								})
							})(c[k])
						};
						f.prototype.onClose = function () {
							g.prototype.onClose.call(this)
						};
						f.prototype.doClose = function () {
							"undefined" !== typeof this.ws && this.ws.close()
						};
						f.prototype.uri = function () {
							var b = this.query || {}, c = this.secure ? "wss" : "ws", d = "";
							this.port && ("wss" == c && 443 != this.port || "ws" == c && 80 != this.port) && (d = ":" + this.port);
							this.timestampRequests && (b[this.timestampParam] = m());
							this.supportsBinary || (b.b64 = 1);
							b = k.encode(b);
							b.length && (b = "?" + b);
							var e = -1 !== this.hostname.indexOf(":");
							return c + "://" + (e ? "[" + this.hostname +
								"]" : this.hostname) + d + this.path + b
						};
						f.prototype.check = function () {
							return !!q && !("__initialize" in q && this.name === f.prototype.name)
						}
					}).call(this, "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
				}, {
					"../transport": 13,
					"component-inherit": 9,
					debug: "n9i2g6",
					"engine.io-parser": 20,
					parseqs: 27,
					ws: 7,
					yeast: 30
				}],
				19: [function (c, d, b) {
					var e = c("has-cors");
					d.exports = function (b) {
						var c = b.xdomain, d = b.xscheme;
						b = b.enablesXDR;
						try {
							if ("undefined" != typeof XMLHttpRequest && (!c || e)) return new XMLHttpRequest
						} catch (k) {
						}
						try {
							if ("undefined" !=
								typeof XDomainRequest && !d && b) return new XDomainRequest
						} catch (l) {
						}
						if (!c) try {
							return new ActiveXObject("Microsoft.XMLHTTP")
						} catch (m) {
						}
					}
				}, {"has-cors": 23}],
				20: [function (c, d, b) {
					(function (d) {
						function f(c, d, e) {
							if (!d) return b.encodeBase64Packet(c, e);
							var f = new FileReader;
							f.onload = function () {
								c.data = f.result;
								b.encodePacket(c, d, !0, e)
							};
							return f.readAsArrayBuffer(c.data)
						}

						function g(b, c, d) {
							var e = Array(b.length);
							d = n(b.length, d);
							for (var f = function (b, d, f) {
								c(d, function (c, d) {
									e[b] = d;
									f(c, e)
								})
							}, g = 0; g < b.length; g++) f(g, b[g],
								d)
						}

						var h = c("./keys"), k = c("has-binary"), l = c("arraybuffer.slice"),
							m = c("base64-arraybuffer"), n = c("after"), p = c("utf8"),
							q = navigator.userAgent.match(/Android/i), r = /PhantomJS/i.test(navigator.userAgent),
							s = q || r;
						b.protocol = 3;
						var u = b.packets = {open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6},
							v = h(u), w = {type: "error", data: "parser error"}, t = c("blob");
						b.encodePacket = function (c, g, h, k) {
							"function" == typeof g && (k = g, g = !1);
							"function" == typeof h && (k = h, h = null);
							var l = void 0 === c.data ? void 0 : c.data.buffer || c.data;
							if (d.ArrayBuffer &&
								l instanceof ArrayBuffer) {
								if (g) {
									h = c.data;
									g = new Uint8Array(h);
									h = new Uint8Array(1 + h.byteLength);
									h[0] = u[c.type];
									for (c = 0; c < g.length; c++) h[c + 1] = g[c];
									c = k(h.buffer)
								} else c = b.encodeBase64Packet(c, k);
								return c
							}
							if (t && l instanceof d.Blob) return g ? s ? c = f(c, g, k) : (g = new Uint8Array(1), g[0] = u[c.type], c = new t([g.buffer, c.data]), c = k(c)) : c = b.encodeBase64Packet(c, k), c;
							if (l && l.base64) return k("b" + b.packets[c.type] + c.data.data);
							g = u[c.type];
							void 0 !== c.data && (g += h ? p.encode(String(c.data)) : String(c.data));
							return k("" + g)
						};
						b.encodeBase64Packet =
							function (c, f) {
								var g = "b" + b.packets[c.type];
								if (t && c.data instanceof d.Blob) {
									var h = new FileReader;
									h.onload = function () {
										var b = h.result.split(",")[1];
										f(g + b)
									};
									return h.readAsDataURL(c.data)
								}
								var k;
								try {
									k = String.fromCharCode.apply(null, new Uint8Array(c.data))
								} catch (l) {
									k = new Uint8Array(c.data);
									for (var m = Array(k.length), n = 0; n < k.length; n++) m[n] = k[n];
									k = String.fromCharCode.apply(null, m)
								}
								g += d.btoa(k);
								return f(g)
							};
						b.decodePacket = function (c, d, e) {
							if ("string" == typeof c || void 0 === c) {
								if ("b" == c.charAt(0)) return b.decodeBase64Packet(c.substr(1),
									d);
								if (e) try {
									c = p.decode(c)
								} catch (f) {
									return w
								}
								e = c.charAt(0);
								return Number(e) == e && v[e] ? 1 < c.length ? {
									type: v[e],
									data: c.substring(1)
								} : {type: v[e]} : w
							}
							e = (new Uint8Array(c))[0];
							c = l(c, 1);
							t && "blob" === d && (c = new t([c]));
							return {type: v[e], data: c}
						};
						b.decodeBase64Packet = function (b, c) {
							var f = v[b.charAt(0)];
							if (!d.ArrayBuffer) return {type: f, data: {base64: !0, data: b.substr(1)}};
							var g = m.decode(b.substr(1));
							"blob" === c && t && (g = new t([g]));
							return {type: f, data: g}
						};
						b.encodePayload = function (c, d, e) {
							"function" == typeof d && (e = d, d = null);
							var f = k(c);
							if (d && f) return t && !s ? b.encodePayloadAsBlob(c, e) : b.encodePayloadAsArrayBuffer(c, e);
							if (!c.length) return e("0:");
							g(c, function (c, e) {
								b.encodePacket(c, f ? d : !1, !0, function (b) {
									e(null, b.length + ":" + b)
								})
							}, function (b, c) {
								return e(c.join(""))
							})
						};
						b.decodePayload = function (c, d, e) {
							if ("string" != typeof c) return b.decodePayloadAsBinary(c, d, e);
							"function" === typeof d && (e = d, d = null);
							var f;
							if ("" == c) return e(w, 0, 1);
							f = "";
							for (var g, h, k = 0, l = c.length; k < l; k++) if (h = c.charAt(k), ":" != h) f += h; else {
								if ("" == f || f != (g = Number(f))) return e(w,
									0, 1);
								h = c.substr(k + 1, g);
								if (f != h.length) return e(w, 0, 1);
								if (h.length) {
									f = b.decodePacket(h, d, !0);
									if (w.type == f.type && w.data == f.data) return e(w, 0, 1);
									if (!1 === e(f, k + g, l)) return
								}
								k += g;
								f = ""
							}
							if ("" != f) return e(w, 0, 1)
						};
						b.encodePayloadAsArrayBuffer = function (c, d) {
							if (!c.length) return d(new ArrayBuffer(0));
							g(c, function (c, d) {
								b.encodePacket(c, !0, !0, function (b) {
									return d(null, b)
								})
							}, function (b, c) {
								var e = c.reduce(function (b, c) {
										var d;
										d = "string" === typeof c ? c.length : c.byteLength;
										return b + d.toString().length + d + 2
									}, 0), f = new Uint8Array(e),
									g = 0;
								c.forEach(function (b) {
									var c = "string" === typeof b, d = b;
									if (c) {
										for (var d = new Uint8Array(b.length), e = 0; e < b.length; e++) d[e] = b.charCodeAt(e);
										d = d.buffer
									}
									c ? f[g++] = 0 : f[g++] = 1;
									b = d.byteLength.toString();
									for (e = 0; e < b.length; e++) f[g++] = parseInt(b[e]);
									f[g++] = 255;
									d = new Uint8Array(d);
									for (e = 0; e < d.length; e++) f[g++] = d[e]
								});
								return d(f.buffer)
							})
						};
						b.encodePayloadAsBlob = function (c, d) {
							g(c, function (c, d) {
								b.encodePacket(c, !0, !0, function (b) {
									var c = new Uint8Array(1);
									c[0] = 1;
									if ("string" === typeof b) {
										for (var e = new Uint8Array(b.length),
											     f = 0; f < b.length; f++) e[f] = b.charCodeAt(f);
										b = e.buffer;
										c[0] = 0
									}
									for (var e = (b instanceof ArrayBuffer ? b.byteLength : b.size).toString(), g = new Uint8Array(e.length + 1), f = 0; f < e.length; f++) g[f] = parseInt(e[f]);
									g[e.length] = 255;
									t && (b = new t([c.buffer, g.buffer, b]), d(null, b))
								})
							}, function (b, c) {
								return d(new t(c))
							})
						};
						b.decodePayloadAsBinary = function (c, d, e) {
							"function" === typeof d && (e = d, d = null);
							for (var f = [], g = !1; 0 < c.byteLength;) {
								for (var h = new Uint8Array(c), k = 0 === h[0], m = "", n = 1; 255 != h[n]; n++) {
									if (310 < m.length) {
										g = !0;
										break
									}
									m += h[n]
								}
								if (g) return e(w,
									0, 1);
								c = l(c, 2 + m.length);
								m = parseInt(m);
								h = l(c, 0, m);
								if (k) try {
									h = String.fromCharCode.apply(null, new Uint8Array(h))
								} catch (p) {
									for (k = new Uint8Array(h), h = "", n = 0; n < k.length; n++) h += String.fromCharCode(k[n])
								}
								f.push(h);
								c = l(c, m)
							}
							var q = f.length;
							f.forEach(function (c, f) {
								e(b.decodePacket(c, d, !0), f, q)
							})
						}
					}).call(this, "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
				}, {
					"./keys": 21,
					after: 3,
					"arraybuffer.slice": 4,
					"base64-arraybuffer": 5,
					blob: 6,
					"has-binary": 22,
					utf8: 29
				}],
				21: [function (c, d, b) {
					d.exports = Object.keys ||
						function (b) {
							var c = [], d = Object.prototype.hasOwnProperty, h;
							for (h in b) d.call(b, h) && c.push(h);
							return c
						}
				}, {}],
				22: [function (c, d, b) {
					(function (b) {
						var f = c("isarray");
						d.exports = function (c) {
							function d(c) {
								if (!c) return !1;
								if (b.Buffer && b.Buffer.isBuffer(c) || b.ArrayBuffer && c instanceof ArrayBuffer || b.Blob && c instanceof Blob || b.File && c instanceof File) return !0;
								if (f(c)) for (var g = 0; g < c.length; g++) {
									if (d(c[g])) return !0
								} else if (c && "object" == typeof c) for (g in c.toJSON && (c = c.toJSON()), c) if (Object.prototype.hasOwnProperty.call(c,
										g) && d(c[g])) return !0;
								return !1
							}

							return d(c)
						}
					}).call(this, "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
				}, {isarray: 25}],
				23: [function (c, d, b) {
					try {
						d.exports = "undefined" !== typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest
					} catch (e) {
						d.exports = !1
					}
				}, {}],
				24: [function (c, d, b) {
					var e = [].indexOf;
					d.exports = function (b, c) {
						if (e) return b.indexOf(c);
						for (var d = 0; d < b.length; ++d) if (b[d] === c) return d;
						return -1
					}
				}, {}],
				25: [function (c, d, b) {
					d.exports = Array.isArray || function (b) {
						return "[object Array]" ==
							Object.prototype.toString.call(b)
					}
				}, {}],
				26: [function (c, d, b) {
					(function (b) {
						var c = /^[\],:{}\s]*$/, g = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
							h = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
							k = /(?:^|:|,)(?:\s*\[)+/g, l = /^\s+/, m = /\s+$/;
						d.exports = function (d) {
							if ("string" != typeof d || !d) return null;
							d = d.replace(l, "").replace(m, "");
							if (b.JSON && JSON.parse) return JSON.parse(d);
							if (c.test(d.replace(g, "@").replace(h, "]").replace(k, ""))) return (new Function("return " + d))()
						}
					}).call(this, "undefined" !==
					typeof self ? self : "undefined" !== typeof window ? window : {})
				}, {}],
				27: [function (c, d, b) {
					b.encode = function (b) {
						var c = "", d;
						for (d in b) b.hasOwnProperty(d) && (c.length && (c += "&"), c += encodeURIComponent(d) + "=" + encodeURIComponent(b[d]));
						return c
					};
					b.decode = function (b) {
						var c = {};
						b = b.split("&");
						for (var d = 0, h = b.length; d < h; d++) {
							var k = b[d].split("=");
							c[decodeURIComponent(k[0])] = decodeURIComponent(k[1])
						}
						return c
					}
				}, {}],
				28: [function (c, d, b) {
					var e = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
						f = "source protocol authority userInfo user password host port relative path directory file query anchor".split(" ");
					d.exports = function (b) {
						var c = b, d = b.indexOf("["), l = b.indexOf("]");
						-1 != d && -1 != l && (b = b.substring(0, d) + b.substring(d, l).replace(/:/g, ";") + b.substring(l, b.length));
						b = e.exec(b || "");
						for (var m = {}, n = 14; n--;) m[f[n]] = b[n] || "";
						-1 != d && -1 != l && (m.source = c, m.host = m.host.substring(1, m.host.length - 1).replace(/;/g, ":"), m.authority = m.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), m.ipv6uri =
							!0);
						return m
					}
				}, {}],
				29: [function (c, d, b) {
					(function (c) {
						(function (f) {
							function g(b) {
								for (var c = [], d = 0, e = b.length, f, g; d < e;) f = b.charCodeAt(d++), 55296 <= f && 56319 >= f && d < e ? (g = b.charCodeAt(d++), 56320 == (g & 64512) ? c.push(((f & 1023) << 10) + (g & 1023) + 65536) : (c.push(f), d--)) : c.push(f);
								return c
							}

							function h(b) {
								if (55296 <= b && 57343 >= b) throw Error("Lone surrogate U+" + b.toString(16).toUpperCase() + " is not a scalar value");
							}

							function k() {
								if (u >= s) throw Error("Invalid byte index");
								var b = r[u] & 255;
								u++;
								if (128 == (b & 192)) return b & 63;
								throw Error("Invalid continuation byte");
							}

							function l() {
								var b, c, d, e;
								if (u > s) throw Error("Invalid byte index");
								if (u == s) return !1;
								b = r[u] & 255;
								u++;
								if (0 == (b & 128)) return b;
								if (192 == (b & 224)) {
									c = k();
									b = (b & 31) << 6 | c;
									if (128 <= b) return b;
									throw Error("Invalid continuation byte");
								}
								if (224 == (b & 240)) {
									c = k();
									d = k();
									b = (b & 15) << 12 | c << 6 | d;
									if (2048 <= b) return h(b), b;
									throw Error("Invalid continuation byte");
								}
								if (240 == (b & 248) && (c = k(), d = k(), e = k(), b = (b & 15) << 18 | c << 12 | d << 6 | e, 65536 <= b && 1114111 >= b)) return b;
								throw Error("Invalid UTF-8 detected");
							}

							var m = "object" == typeof b && b, n = "object" ==
								typeof d && d && d.exports == m && d, p = "object" == typeof c && c;
							if (p.global === p || p.window === p) f = p;
							var q = String.fromCharCode, r, s, u, p = {
								version: "2.0.0", encode: function (b) {
									b = g(b);
									for (var c = b.length, d = -1, e, f = ""; ++d < c;) {
										e = b[d];
										if (0 == (e & 4294967168)) e = q(e); else {
											var k = "";
											0 == (e & 4294965248) ? k = q(e >> 6 & 31 | 192) : 0 == (e & 4294901760) ? (h(e), k = q(e >> 12 & 15 | 224), k += q(e >> 6 & 63 | 128)) : 0 == (e & 4292870144) && (k = q(e >> 18 & 7 | 240), k += q(e >> 12 & 63 | 128), k += q(e >> 6 & 63 | 128));
											e = k += q(e & 63 | 128)
										}
										f += e
									}
									return f
								}, decode: function (b) {
									r = g(b);
									s = r.length;
									u = 0;
									b = [];
									for (var c; !1 !== (c = l());) b.push(c);
									c = b.length;
									for (var d = -1, e, f = ""; ++d < c;) e = b[d], 65535 < e && (e -= 65536, f += q(e >>> 10 & 1023 | 55296), e = 56320 | e & 1023), f += q(e);
									return f
								}
							};
							if (m && !m.nodeType) if (n) n.exports = p; else {
								f = {}.hasOwnProperty;
								for (var v in p) f.call(p, v) && (m[v] = p[v])
							} else f.utf8 = p
						})(this)
					}).call(this, "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
				}, {}],
				30: [function (c, d, b) {
					function e(b) {
						var c = "";
						do c = g[b % h] + c, b = Math.floor(b / h); while (0 < b);
						return c
					}

					function f() {
						var b = e(+new Date);
						return b !==
						n ? (l = 0, n = b) : b + "." + e(l++)
					}

					for (var g = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), h = 64, k = {}, l = 0, m = 0, n; m < h; m++) k[g[m]] = m;
					f.encode = e;
					f.decode = function (b) {
						var c = 0;
						for (m = 0; m < b.length; m++) c = c * h + k[b.charAt(m)];
						return c
					};
					d.exports = f
				}, {}]
			}, {}, [10])(10)
		})
	})();
	$_TAWK_JSON = {stringify: JSON.stringify, parse: JSON.parse};
	(function (a) {
		"function" !== typeof Array.isArray && (Array.isArray = function (a) {
			return "[object Array]" === Object.prototype.toString.call(a)
		});
		Array.prototype.indexOf || (Array.prototype.indexOf =
			function (a) {
				for (var b = 0, c = this.length; b < c; b++) if (this[b] === a) return b;
				return -1
			});
		a = a.EventEmitter = function () {
		};
		var c = Array.isArray;
		a.prototype.emit = function (a) {
			var b;
			if ("error" === a && (!this._events || !this._events.error || c(this._events.error) && !this._events.error.length)) {
				if (arguments[1] instanceof Error) throw arguments[1];
				throw Error("Uncaught, unspecified 'error' event.");
			}
			if (!this._events) return !1;
			var e = this._events[a];
			if (!e) return !1;
			if ("function" == typeof e) {
				switch (arguments.length) {
					case 1:
						e.call(this);
						break;
					case 2:
						e.call(this, arguments[1]);
						break;
					case 3:
						e.call(this, arguments[1], arguments[2]);
						break;
					default:
						b = Array.prototype.slice.call(arguments, 1), e.apply(this, b)
				}
				return !0
			}
			if (c(e)) {
				b = Array.prototype.slice.call(arguments, 1);
				for (var e = e.slice(), f = 0, g = e.length; f < g; f++) e[f].apply(this, b);
				return !0
			}
			return !1
		};
		a.prototype.addListener = function (a, b) {
			if ("function" !== typeof b) throw Error("addListener only takes instances of Function");
			this._events || (this._events = {});
			this._events[a] ? c(this._events[a]) ? this._events[a].push(b) :
				this._events[a] = [this._events[a], b] : this._events[a] = b;
			return this
		};
		a.prototype.on = a.prototype.addListener;
		a.prototype.once = function (a, b) {
			var c = this;
			c.on(a, function g() {
				c.removeListener(a, g);
				b.apply(this, arguments)
			})
		};
		a.prototype.removeListener = function (a, b) {
			if ("function" !== typeof b) throw Error("removeListener only takes instances of Function");
			if (!this._events || !this._events[a]) return this;
			var e = this._events[a];
			if (c(e)) {
				var f = e.indexOf(b);
				if (0 > f) return this;
				e.splice(f, 1);
				0 === e.length && delete this._events[a]
			} else this._events[a] ===
			b && delete this._events[a];
			return this
		};
		a.prototype.removeAllListeners = function (a) {
			a ? a && (this._events && this._events[a]) && (this._events[a] = null) : this._events = {};
			return this
		};
		a.prototype.listeners = function (a) {
			this._events || (this._events = {});
			this._events[a] || (this._events[a] = []);
			c(this._events[a]) || (this._events[a] = [this._events[a]]);
			return this._events[a]
		}
	})(window);
	(function (a) {
		function c(c, d) {
			if (!d.engineIo) throw Error("You must specify engineIo");
			d.timestampRequests = !0;
			d.timestampParam = "__t";
			this.__callbackIndex =
				0;
			this.__callbacks = {};
			this.state = b.OPENING;
			this.socket = new d.engineIo(c, d);
			this.debug = !1;
			if (document.getElementById("tawk__dmz")) {
				var g = this;
				a.getSocketTransport = function () {
					if (g.socket.transport) return g.socket.transport.name
				}
			}
			document.location && "#!tawk-debug" === document.location.hash && (this.debug = !0);
			EventEmitter.call(this);
			this.attachListeners()
		}

		var d, b = {OPENING: "opening", OPEN: "open", CLOSING: "closing", CLOSED: "closed"};
		for (d in EventEmitter.prototype) "function" === typeof EventEmitter.prototype[d] &&
		Object.prototype.hasOwnProperty.call(EventEmitter.prototype, d) && (c.prototype[d] = EventEmitter.prototype[d]);
		c.prototype.attachListeners = function () {
			var a = this;
			this.socket.on("open", function () {
				a.state = b.OPEN;
				a.emit("connect")
			});
			this.socket.on("close", function (b, c) {
				a.emit("disconnect", b, c);
				a.doClose()
			});
			this.socket.on("error", function (b) {
				a.emit("error", b)
			});
			this.socket.on("message", function (b) {
				a.onMessage(b)
			})
		};
		c.prototype.close = c.prototype.disconnect = function () {
			var a = this;
			this.state === b.OPENING && setTimeout(function () {
					a.close()
				},
				1E3);
			this.state === b.OPEN && (this.state = b.CLOSING, this.clearCallbacks(), this.socket.close())
		};
		c.prototype.doClose = function () {
			this.clearCallbacks();
			this.state = b.CLOSED;
			this.socket.removeAllListeners();
			this.removeAllListeners();
			this.socket = null
		};
		c.prototype.clearCallbacks = function () {
			this.__callbacks = {}
		};
		c.prototype.onMessage = function (a) {
			(a = this.decode(a)) && ("__callback__" === a.c ? this.executeCallback(a) : this.emit.apply(this, [a.c].concat(a.p)))
		};
		c.prototype.executeCallback = function (a) {
			var b = this.__callbacks[a.cb];
			delete this.__callbacks[a.cb];
			b.apply(null, a.p)
		};
		c.prototype.decode = function (a) {
			var b;
			this.debug && (console && console.log) && (data = new Date, console.log("received " + data.toUTCString() + " : " + a));
			try {
				b = $_TAWK_JSON.parse(a)
			} catch (c) {
				this.emit("error", c);
				return
			}
			if (b.c) if ("error" === b.c || "connect" === b.c || "disconnect" === b.c) this.emit("error", Error("server returned reserved command : `" + b.cmd + "`")); else if (b.p && "[object Array]" !== Object.prototype.toString.call(b.p)) this.emit("error", Error("data is expected to be an array"));
			else {
				if ("__callback__" !== b.c) return b;
				a = parseInt(b.cb, 10);
				if (isNaN(a)) this.emit("error", Error("received callback command but there was no valid callback id(`" + a + "`")); else {
					if (this.__callbacks[a]) return b.cb = a, b;
					this.emit("error", Error("received callback command but callback isnt present (`" + b.cb + "`)"))
				}
			} else this.emit("error", Error("no command was sent by the server"))
		};
		c.prototype.send = function () {
			var a = this.encode(arguments);
			this.debug && (console && console.log) && (data = new Date, console.log("send " +
				data.toUTCString() + " : " + a));
			this.state !== b.OPEN ? this.emit("error", Error("Socket isnt open its state is `" + this.state + "` tried to send `" + a + "`")) : a && this.socket.send(a)
		};
		c.prototype.encode = function (a) {
			var b = {};
			a = Array.prototype.slice.call(a);
			if (a[0]) {
				b.c = a[0];
				"function" === typeof a[a.length - 1] && (b.cb = this.enqueuCallback(a.pop()));
				b.p = a.slice(1);
				var c;
				try {
					c = $_TAWK_JSON.stringify(b)
				} catch (d) {
					this.emit("error", d);
					return
				}
				return c
			}
			this.emit("error", Error("now command specified"))
		};
		c.prototype.enqueuCallback =
			function (a) {
				this.__callbacks[this.__callbackIndex] = a;
				return this.__callbackIndex++
			};
		a.$__TawkSocket = c
	})(window);
	var logger = function (a) {
		var c = {
			level: "error",
			timestamp: Date.now(),
			userAgent: a.useragent || navigator.userAgent,
			data: {message: a.message, stack: a.stack, ui_version: UI_VERSION, dashboard_version: "v2"}
		};
		a.message && -1 !== a.message.toLowerCase().indexOf("dealply") || (window.userLogData && (c.data.userInfo = window.userLogData), "yes" === LOGERROR ? (c = JSON.stringify(c), $.ajax({
			url: "/log", type: "POST", dataType: "json",
			data: {logData: c}, crossDomain: !0, success: function () {
				console.log("success")
			}, error: function () {
				console.log("error")
			}
		})) : console.log(c))
	};
	TraceKit.report.subscribe(logger);
	var rules = {name: "required", email: {required: !0, email: !0}, password: {required: !0, minlength: 6}};
	window.$AjaxStripper = function (a) {
		var c = a.indexOf("%%__START__%%");
		if (0 > c) return null;
		a = a.substr(c + 13);
		if ("" === a) return null;
		try {
			return JSON.parse(a)
		} catch (d) {
			return null
		}
	};
	var getLocaleCookie = function () {
			var a = (" " + document.cookie).match(/[; ]TawkLocale=([^\s;]*)/);
			if (a) return unescape(a[1])
		}, setLocaleCookie = function (a) {
			var c = new Date;
			c.setDate(c.getDate() + 365);
			document.cookie = "TawkLocale=" + a + ";expires=" + c.toUTCString() + ";path=/;"
		}, formSubmission = function (a, c, d) {
			$.ajax({
				type: "POST",
				url: c,
				data: JSON.stringify(a),
				dataType: "text",
				contentType: "application/json;charset=utf-8",
				headers: {accept: "application/json"}
			}).done(function (a) {
				a = $AjaxStripper(a);
				d(a)
			}).fail(function (a) {
				d({success: !1})
			})
		}, countryList = [{value: "afghanistan", id: "AF"}, {value: "\u00e5land islands", id: "AX"},
			{value: "albania", id: "AL"}, {value: "algeria", id: "DZ"}, {
				value: "american samoa",
				id: "AS"
			}, {value: "andorra", id: "AD"}, {value: "angola", id: "AO"}, {
				value: "anguilla",
				id: "AI"
			}, {value: "antarctica", id: "AQ"}, {value: "antigua and barbuda", id: "AG"}, {
				value: "argentina",
				id: "AR"
			}, {value: "armenia", id: "AM"}, {value: "aruba", id: "AW"}, {value: "australia", id: "AU"}, {
				value: "austria",
				id: "AT"
			}, {value: "azerbaijan", id: "AZ"}, {value: "bahamas", id: "BS"}, {
				value: "bahrain",
				id: "BH"
			}, {value: "bangladesh", id: "BD"}, {value: "barbados", id: "BB"}, {
				value: "belarus",
				id: "BY"
			}, {value: "belgium", id: "BE"}, {value: "belize", id: "BZ"}, {value: "benin", id: "BJ"}, {
				value: "bermuda",
				id: "BM"
			}, {value: "bhutan", id: "BT"}, {
				value: "bolivia, plurinational state of",
				id: "BO"
			}, {value: "bonaire, sint eustatius and saba", id: "BQ"}, {
				value: "bosnia and herzegovina",
				id: "BA"
			}, {value: "botswana", id: "BW"}, {value: "bouvet island", id: "BV"}, {
				value: "brazil",
				id: "BR"
			}, {value: "british indian ocean territory", id: "IO"}, {
				value: "brunei darussalam",
				id: "BN"
			}, {value: "bulgaria", id: "BG"}, {value: "burkina faso", id: "BF"},
			{value: "burundi", id: "BI"}, {value: "cambodia", id: "KH"}, {value: "cameroon", id: "CM"}, {
				value: "canada",
				id: "CA"
			}, {value: "cape verde", id: "CV"}, {value: "cayman islands", id: "KY"}, {
				value: "central african republic",
				id: "CF"
			}, {value: "chad", id: "TD"}, {value: "chile", id: "CL"}, {
				value: "china",
				id: "CN"
			}, {value: "christmas island", id: "CX"}, {value: "cocos (keeling) islands", id: "CC"}, {
				value: "colombia",
				id: "CO"
			}, {value: "comoros", id: "KM"}, {value: "congo", id: "CG"}, {
				value: "congo, the democratic republic of the",
				id: "CD"
			}, {
				value: "cook islands",
				id: "CK"
			}, {value: "costa rica", id: "CR"}, {value: "c\u00f4te d'ivoire", id: "CI"}, {
				value: "croatia",
				id: "HR"
			}, {value: "cuba", id: "CU"}, {value: "cura\u00e7ao", id: "CW"}, {
				value: "cyprus",
				id: "CY"
			}, {value: "czech republic", id: "CZ"}, {value: "denmark", id: "DK"}, {
				value: "djibouti",
				id: "DJ"
			}, {value: "dominica", id: "DM"}, {value: "dominican republic", id: "DO"}, {
				value: "ecuador",
				id: "EC"
			}, {value: "egypt", id: "EG"}, {value: "el salvador", id: "SV"}, {
				value: "equatorial guinea",
				id: "GQ"
			}, {value: "eritrea", id: "ER"}, {value: "estonia", id: "EE"}, {
				value: "ethiopia",
				id: "ET"
			}, {value: "falkland islands (malvinas)", id: "FK"}, {value: "faroe islands", id: "FO"}, {
				value: "fiji",
				id: "FJ"
			}, {value: "finland", id: "FI"}, {value: "france", id: "FR"}, {
				value: "french guiana",
				id: "GF"
			}, {value: "french polynesia", id: "PF"}, {value: "french southern territories", id: "TF"}, {
				value: "gabon",
				id: "GA"
			}, {value: "gambia", id: "GM"}, {value: "georgia", id: "GE"}, {value: "germany", id: "DE"}, {
				value: "ghana",
				id: "GH"
			}, {value: "gibraltar", id: "GI"}, {value: "greece", id: "GR"}, {
				value: "greenland",
				id: "GL"
			}, {value: "grenada", id: "GD"},
			{value: "guadeloupe", id: "GP"}, {value: "guam", id: "GU"}, {value: "guatemala", id: "GT"}, {
				value: "guernsey",
				id: "GG"
			}, {value: "guinea", id: "GN"}, {value: "guinea-bissau", id: "GW"}, {
				value: "guyana",
				id: "GY"
			}, {value: "haiti", id: "HT"}, {
				value: "heard island and mcdonald islands",
				id: "HM"
			}, {value: "holy see (vatican city state)", id: "VA"}, {value: "honduras", id: "HN"}, {
				value: "hong kong",
				id: "HK"
			}, {value: "hungary", id: "HU"}, {value: "iceland", id: "IS"}, {value: "india", id: "IN"}, {
				value: "indonesia",
				id: "ID"
			}, {
				value: "iran, islamic republic of",
				id: "IR"
			}, {value: "iraq", id: "IQ"}, {value: "ireland", id: "IE"}, {value: "isle of man", id: "IM"}, {
				value: "israel",
				id: "IL"
			}, {value: "italy", id: "IT"}, {value: "jamaica", id: "JM"}, {value: "japan", id: "JP"}, {
				value: "jersey",
				id: "JE"
			}, {value: "jordan", id: "JO"}, {value: "kazakhstan", id: "KZ"}, {value: "kenya", id: "KE"}, {
				value: "kiribati",
				id: "KI"
			}, {value: "korea, democratic people's republic of", id: "KP"}, {
				value: "korea, republic of",
				id: "KR"
			}, {value: "kuwait", id: "KW"}, {value: "kyrgyzstan", id: "KG"}, {
				value: "lao people's democratic republic",
				id: "LA"
			}, {value: "latvia", id: "LV"}, {value: "lebanon", id: "LB"}, {value: "lesotho", id: "LS"}, {
				value: "liberia",
				id: "LR"
			}, {value: "libya", id: "LY"}, {value: "liechtenstein", id: "LI"}, {
				value: "lithuania",
				id: "LT"
			}, {value: "luxembourg", id: "LU"}, {
				value: "macao",
				id: "MO"
			}, {value: "macedonia, the former yugoslav republic of", id: "MK"}, {
				value: "madagascar",
				id: "MG"
			}, {value: "malawi", id: "MW"}, {value: "malaysia", id: "MY"}, {value: "maldives", id: "MV"}, {
				value: "mali",
				id: "ML"
			}, {value: "malta", id: "MT"}, {value: "marshall islands", id: "MH"}, {
				value: "martinique",
				id: "MQ"
			}, {value: "mauritania", id: "MR"}, {value: "mauritius", id: "MU"}, {
				value: "mayotte",
				id: "YT"
			}, {value: "mexico", id: "MX"}, {
				value: "micronesia, federated states of",
				id: "FM"
			}, {value: "moldova, republic of", id: "MD"}, {value: "monaco", id: "MC"}, {
				value: "mongolia",
				id: "MN"
			}, {value: "montenegro", id: "ME"}, {value: "montserrat", id: "MS"}, {
				value: "morocco",
				id: "MA"
			}, {value: "mozambique", id: "MZ"}, {value: "myanmar", id: "MM"}, {value: "namibia", id: "NA"}, {
				value: "nauru",
				id: "NR"
			}, {value: "nepal", id: "NP"}, {value: "netherlands", id: "NL"},
			{value: "new caledonia", id: "NC"}, {value: "new zealand", id: "NZ"}, {
				value: "nicaragua",
				id: "NI"
			}, {value: "niger", id: "NE"}, {value: "nigeria", id: "NG"}, {
				value: "niue",
				id: "NU"
			}, {value: "norfolk island", id: "NF"}, {value: "northern mariana islands", id: "MP"}, {
				value: "norway",
				id: "NO"
			}, {value: "oman", id: "OM"}, {value: "pakistan", id: "PK"}, {
				value: "palau",
				id: "PW"
			}, {value: "palestine, state of", id: "PS"}, {value: "panama", id: "PA"}, {
				value: "papua new guinea",
				id: "PG"
			}, {value: "paraguay", id: "PY"}, {value: "peru", id: "PE"}, {
				value: "philippines",
				id: "PH"
			}, {value: "pitcairn", id: "PN"}, {value: "poland", id: "PL"}, {
				value: "portugal",
				id: "PT"
			}, {value: "puerto rico", id: "PR"}, {value: "qatar", id: "QA"}, {
				value: "r\u00e9union",
				id: "RE"
			}, {value: "romania", id: "RO"}, {value: "russian federation", id: "RU"}, {
				value: "rwanda",
				id: "RW"
			}, {value: "saint barth\u00e9lemy", id: "BL"}, {
				value: "saint helena, ascension and tristan da cunha",
				id: "SH"
			}, {value: "saint kitts and nevis", id: "KN"}, {
				value: "saint lucia",
				id: "LC"
			}, {value: "saint martin (french part)", id: "MF"}, {
				value: "saint pierre and miquelon",
				id: "PM"
			}, {value: "saint vincent and the grenadines", id: "VC"}, {value: "samoa", id: "WS"}, {
				value: "san marino",
				id: "SM"
			}, {value: "sao tome and principe", id: "ST"}, {value: "saudi arabia", id: "SA"}, {
				value: "senegal",
				id: "SN"
			}, {value: "serbia", id: "RS"}, {value: "seychelles", id: "SC"}, {
				value: "sierra leone",
				id: "SL"
			}, {value: "singapore", id: "SG"}, {value: "sint maarten (dutch part)", id: "SX"}, {
				value: "slovakia",
				id: "SK"
			}, {value: "slovenia", id: "SI"}, {value: "solomon islands", id: "SB"}, {value: "somalia", id: "SO"}, {
				value: "south africa",
				id: "ZA"
			}, {value: "south georgia and the south sandwich islands", id: "GS"}, {
				value: "south sudan",
				id: "SS"
			}, {value: "spain", id: "ES"}, {value: "sri lanka", id: "LK"}, {value: "sudan", id: "SD"}, {
				value: "surivalue",
				id: "SR"
			}, {value: "svalbard and jan mayen", id: "SJ"}, {value: "swaziland", id: "SZ"}, {
				value: "sweden",
				id: "SE"
			}, {value: "switzerland", id: "CH"}, {
				value: "syrian arab republic",
				id: "SY"
			}, {value: "taiwan, province of china", id: "TW"}, {
				value: "tajikistan",
				id: "TJ"
			}, {value: "tanzania, united republic of", id: "TZ"}, {
				value: "thailand",
				id: "TH"
			}, {value: "timor-leste", id: "TL"}, {value: "togo", id: "TG"}, {value: "tokelau", id: "TK"}, {
				value: "tonga",
				id: "TO"
			}, {value: "trinidad and tobago", id: "TT"}, {value: "tunisia", id: "TN"}, {
				value: "turkey",
				id: "TR"
			}, {value: "turkmenistan", id: "TM"}, {value: "turks and caicos islands", id: "TC"}, {
				value: "tuvalu",
				id: "TV"
			}, {value: "uganda", id: "UG"}, {value: "ukraine", id: "UA"}, {
				value: "united arab emirates",
				id: "AE"
			}, {value: "united kingdom", id: "GB"}, {value: "united states", id: "US"}, {
				value: "united states minor outlying islands",
				id: "UM"
			}, {value: "uruguay", id: "UY"}, {value: "uzbekistan", id: "UZ"}, {
				value: "vanuatu",
				id: "VU"
			}, {value: "venezuela, bolivarian republic of", id: "VE"}, {
				value: "viet nam",
				id: "VN"
			}, {value: "virgin islands, british", id: "VG"}, {
				value: "virgin islands, u.s.",
				id: "VI"
			}, {value: "wallis and futuna", id: "WF"}, {value: "western sahara", id: "EH"}, {
				value: "yemen",
				id: "YE"
			}, {value: "zambia", id: "ZM"}, {value: "zimbabwe", id: "ZW"}],
		countryList2 = [{value: "Afghanistan", id: "AF"}, {value: "\u00e5Land Islands", id: "AX"}, {
			value: "Albania",
			id: "AL"
		},
			{value: "Algeria", id: "DZ"}, {value: "American Samoa", id: "AS"}, {
				value: "Andorra",
				id: "AD"
			}, {value: "Angola", id: "AO"}, {value: "Anguilla", id: "AI"}, {
				value: "Antarctica",
				id: "AQ"
			}, {value: "Antigua And Barbuda", id: "AG"}, {value: "Argentina", id: "AR"}, {
				value: "Armenia",
				id: "AM"
			}, {value: "Aruba", id: "AW"}, {value: "Australia", id: "AU"}, {
				value: "Austria",
				id: "AT"
			}, {value: "Azerbaijan", id: "AZ"}, {value: "Bahamas", id: "BS"}, {
				value: "Bahrain",
				id: "BH"
			}, {value: "Bangladesh", id: "BD"}, {value: "Barbados", id: "BB"}, {value: "Belarus", id: "BY"}, {
				value: "Belgium",
				id: "BE"
			}, {value: "Belize", id: "BZ"}, {value: "Benin", id: "BJ"}, {value: "Bermuda", id: "BM"}, {
				value: "Bhutan",
				id: "BT"
			}, {value: "Bolivia, Plurinational State Of", id: "BO"}, {
				value: "Bonaire, Sint Eustatius And Saba",
				id: "BQ"
			}, {value: "Bosnia And Herzegovina", id: "BA"}, {value: "Botswana", id: "BW"}, {
				value: "Bouvet Island",
				id: "BV"
			}, {value: "Brazil", id: "BR"}, {
				value: "British Indian Ocean Territory",
				id: "IO"
			}, {value: "Brunei Darussalam", id: "BN"}, {value: "Bulgaria", id: "BG"}, {
				value: "Burkina Faso",
				id: "BF"
			}, {value: "Burundi", id: "BI"},
			{value: "Cambodia", id: "KH"}, {value: "Cameroon", id: "CM"}, {
				value: "Canada",
				id: "CA"
			}, {value: "Cape Verde", id: "CV"}, {value: "Cayman Islands", id: "KY"}, {
				value: "Central African Republic",
				id: "CF"
			}, {value: "Chad", id: "TD"}, {value: "Chile", id: "CL"}, {
				value: "China",
				id: "CN"
			}, {value: "Christmas Island", id: "CX"}, {value: "Cocos (Keeling) Islands", id: "CC"}, {
				value: "Colombia",
				id: "CO"
			}, {value: "Comoros", id: "KM"}, {
				value: "Congo",
				id: "CG"
			}, {value: "Congo, The Democratic Republic Of The", id: "CD"}, {value: "Cook Islands", id: "CK"}, {
				value: "Costa Rica",
				id: "CR"
			}, {value: "C\u00f4Te D'Ivoire", id: "CI"}, {value: "Croatia", id: "HR"}, {
				value: "Cuba",
				id: "CU"
			}, {value: "Cura\u00e7Ao", id: "CW"}, {value: "Cyprus", id: "CY"}, {
				value: "Czech Republic",
				id: "CZ"
			}, {value: "Denmark", id: "DK"}, {value: "Djibouti", id: "DJ"}, {
				value: "Dominica",
				id: "DM"
			}, {value: "Dominican Republic", id: "DO"}, {value: "Ecuador", id: "EC"}, {
				value: "Egypt",
				id: "EG"
			}, {value: "El Salvador", id: "SV"}, {value: "Equatorial Guinea", id: "GQ"}, {
				value: "Eritrea",
				id: "ER"
			}, {value: "Estonia", id: "EE"}, {value: "Ethiopia", id: "ET"}, {
				value: "Falkland Islands (Malvinas)",
				id: "FK"
			}, {value: "Faroe Islands", id: "FO"}, {value: "Fiji", id: "FJ"}, {
				value: "Finland",
				id: "FI"
			}, {value: "France", id: "FR"}, {value: "French Guiana", id: "GF"}, {
				value: "French Polynesia",
				id: "PF"
			}, {value: "French Southern Territories", id: "TF"}, {value: "Gabon", id: "GA"}, {
				value: "Gambia",
				id: "GM"
			}, {value: "Georgia", id: "GE"}, {value: "Germany", id: "DE"}, {
				value: "Ghana",
				id: "GH"
			}, {value: "Gibraltar", id: "GI"}, {value: "Greece", id: "GR"}, {
				value: "Greenland",
				id: "GL"
			}, {value: "Grenada", id: "GD"}, {value: "Guadeloupe", id: "GP"}, {
				value: "Guam",
				id: "GU"
			}, {value: "Guatemala", id: "GT"}, {value: "Guernsey", id: "GG"}, {
				value: "Guinea",
				id: "GN"
			}, {value: "Guinea-Bissau", id: "GW"}, {value: "Guyana", id: "GY"}, {
				value: "Haiti",
				id: "HT"
			}, {value: "Heard Island And Mcdonald Islands", id: "HM"}, {
				value: "Holy See (Vatican City State)",
				id: "VA"
			}, {value: "Honduras", id: "HN"}, {value: "Hong Kong", id: "HK"}, {
				value: "Hungary",
				id: "HU"
			}, {value: "Iceland", id: "IS"}, {value: "India", id: "IN"}, {
				value: "Indonesia",
				id: "ID"
			}, {value: "Iran, Islamic Republic Of", id: "IR"}, {value: "Iraq", id: "IQ"}, {
				value: "Ireland",
				id: "IE"
			}, {value: "Isle Of Man", id: "IM"}, {value: "Israel", id: "IL"}, {
				value: "Italy",
				id: "IT"
			}, {value: "Jamaica", id: "JM"}, {value: "Japan", id: "JP"}, {value: "Jersey", id: "JE"}, {
				value: "Jordan",
				id: "JO"
			}, {value: "Kazakhstan", id: "KZ"}, {value: "Kenya", id: "KE"}, {
				value: "Kiribati",
				id: "KI"
			}, {value: "Korea, Democratic People'S Republic Of", id: "KP"}, {
				value: "Korea, Republic Of",
				id: "KR"
			}, {value: "Kuwait", id: "KW"}, {value: "Kyrgyzstan", id: "KG"}, {
				value: "Lao People'S Democratic Republic",
				id: "LA"
			}, {value: "Latvia", id: "LV"}, {
				value: "Lebanon",
				id: "LB"
			}, {value: "Lesotho", id: "LS"}, {value: "Liberia", id: "LR"}, {
				value: "Libya",
				id: "LY"
			}, {value: "Liechtenstein", id: "LI"}, {value: "Lithuania", id: "LT"}, {
				value: "Luxembourg",
				id: "LU"
			}, {value: "Macao", id: "MO"}, {
				value: "Macedonia, The Former Yugoslav Republic Of",
				id: "MK"
			}, {value: "Madagascar", id: "MG"}, {value: "Malawi", id: "MW"}, {
				value: "Malaysia",
				id: "MY"
			}, {value: "Maldives", id: "MV"}, {value: "Mali", id: "ML"}, {
				value: "Malta",
				id: "MT"
			}, {value: "Marshall Islands", id: "MH"}, {value: "Martinique", id: "MQ"}, {value: "Mauritania", id: "MR"},
			{value: "Mauritius", id: "MU"}, {value: "Mayotte", id: "YT"}, {
				value: "Mexico",
				id: "MX"
			}, {value: "Micronesia, Federated States Of", id: "FM"}, {
				value: "Moldova, Republic Of",
				id: "MD"
			}, {value: "Monaco", id: "MC"}, {value: "Mongolia", id: "MN"}, {
				value: "Montenegro",
				id: "ME"
			}, {value: "Montserrat", id: "MS"}, {value: "Morocco", id: "MA"}, {
				value: "Mozambique",
				id: "MZ"
			}, {value: "Myanmar", id: "MM"}, {value: "Namibia", id: "NA"}, {value: "Nauru", id: "NR"}, {
				value: "Nepal",
				id: "NP"
			}, {value: "Netherlands", id: "NL"}, {value: "New Caledonia", id: "NC"}, {
				value: "New Zealand",
				id: "NZ"
			}, {value: "Nicaragua", id: "NI"}, {value: "Niger", id: "NE"}, {value: "Nigeria", id: "NG"}, {
				value: "Niue",
				id: "NU"
			}, {value: "Norfolk Island", id: "NF"}, {value: "Northern Mariana Islands", id: "MP"}, {
				value: "Norway",
				id: "NO"
			}, {value: "Oman", id: "OM"}, {value: "Pakistan", id: "PK"}, {
				value: "Palau",
				id: "PW"
			}, {value: "Palestine, State Of", id: "PS"}, {value: "Panama", id: "PA"}, {
				value: "Papua New Guinea",
				id: "PG"
			}, {value: "Paraguay", id: "PY"}, {value: "Peru", id: "PE"}, {
				value: "Philippines",
				id: "PH"
			}, {value: "Pitcairn", id: "PN"}, {
				value: "Poland",
				id: "PL"
			}, {value: "Portugal", id: "PT"}, {value: "Puerto Rico", id: "PR"}, {
				value: "Qatar",
				id: "QA"
			}, {value: "R\u00e9Union", id: "RE"}, {value: "Romania", id: "RO"}, {
				value: "Russian Federation",
				id: "RU"
			}, {value: "Rwanda", id: "RW"}, {
				value: "Saint Barth\u00e9Lemy",
				id: "BL"
			}, {value: "Saint Helena, Ascension And Tristan Da Cunha", id: "SH"}, {
				value: "Saint Kitts And Nevis",
				id: "KN"
			}, {value: "Saint Lucia", id: "LC"}, {
				value: "Saint Martin (French Part)",
				id: "MF"
			}, {value: "Saint Pierre And Miquelon", id: "PM"}, {
				value: "Saint Vincent And The Grenadines",
				id: "VC"
			}, {value: "Samoa", id: "WS"}, {value: "San Marino", id: "SM"}, {
				value: "Sao Tome And Principe",
				id: "ST"
			}, {value: "Saudi Arabia", id: "SA"}, {value: "Senegal", id: "SN"}, {
				value: "Serbia",
				id: "RS"
			}, {value: "Seychelles", id: "SC"}, {value: "Sierra Leone", id: "SL"}, {
				value: "Singapore",
				id: "SG"
			}, {value: "Sint Maarten (Dutch Part)", id: "SX"}, {value: "Slovakia", id: "SK"}, {
				value: "Slovenia",
				id: "SI"
			}, {value: "Solomon Islands", id: "SB"}, {value: "Somalia", id: "SO"}, {value: "South Africa", id: "ZA"}, {
				value: "South Georgia And The South Sandwich Islands",
				id: "GS"
			}, {value: "South Sudan", id: "SS"}, {value: "Spain", id: "ES"}, {
				value: "Sri Lanka",
				id: "LK"
			}, {value: "Sudan", id: "SD"}, {value: "Surivalue", id: "SR"}, {
				value: "Svalbard And Jan Mayen",
				id: "SJ"
			}, {value: "Swaziland", id: "SZ"}, {value: "Sweden", id: "SE"}, {
				value: "Switzerland",
				id: "CH"
			}, {value: "Syrian Arab Republic", id: "SY"}, {
				value: "Taiwan, Province Of China",
				id: "TW"
			}, {value: "Tajikistan", id: "TJ"}, {value: "Tanzania, United Republic Of", id: "TZ"}, {
				value: "Thailand",
				id: "TH"
			}, {value: "Timor-Leste", id: "TL"}, {value: "Togo", id: "TG"},
			{value: "Tokelau", id: "TK"}, {value: "Tonga", id: "TO"}, {
				value: "Trinidad And Tobago",
				id: "TT"
			}, {value: "Tunisia", id: "TN"}, {value: "Turkey", id: "TR"}, {
				value: "Turkmenistan",
				id: "TM"
			}, {value: "Turks And Caicos Islands", id: "TC"}, {value: "Tuvalu", id: "TV"}, {
				value: "Uganda",
				id: "UG"
			}, {value: "Ukraine", id: "UA"}, {value: "United Arab Emirates", id: "AE"}, {
				value: "United Kingdom",
				id: "GB"
			}, {value: "United States", id: "US"}, {
				value: "United States Minor Outlying Islands",
				id: "UM"
			}, {value: "Uruguay", id: "UY"}, {value: "Uzbekistan", id: "UZ"},
			{value: "Vanuatu", id: "VU"}, {value: "Venezuela, Bolivarian Republic Of", id: "VE"}, {
				value: "Viet Nam",
				id: "VN"
			}, {value: "Virgin Islands, British", id: "VG"}, {
				value: "Virgin Islands, U.S.",
				id: "VI"
			}, {value: "Wallis And Futuna", id: "WF"}, {value: "Western Sahara", id: "EH"}, {
				value: "Yemen",
				id: "YE"
			}, {value: "Zambia", id: "ZM"}, {value: "Zimbabwe", id: "ZW"}], tabsIconClass = {
			chat_details: "fa-info",
			knowledge_base: "fa-book",
			shortcuts: "fa-cut",
			history: "fa-history",
			alerts: "fa-bell",
			shopify: "fa-shopping-bag"
		}, visitorLanguages = {
			ar: "\u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u0629",
			az: "Az\u0259rbaycan",
			bg: "\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438",
			bn: "\u09ac\u09be\u0982\u09b2\u09be",
			cat: "catal\u00e0",
			cs: "\u010de\u0161tina",
			da: "dansk",
			de: "Deutsch",
			el: "\u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac",
			en: "English",
			et: "eesti",
			es: "espa\u00f1ol",
			fa: "\u0641\u0627\u0631\u0633\u06cc",
			fi: "suomi",
			fil: "Filipino",
			fr: "fran\u00e7ais",
			he: "\u05e2\u05d1\u05e8\u05d9\u05ea",
			hy_am: "\u0570\u0561\u0575\u0565\u0580\u0565\u0576",
			hi: "\u0939\u093f\u0902\u0926\u0940",
			hr: "hrvatski",
			hu: "magyar",
			id: "Bahasa Indonesia",
			it: "italiano",
			ja: "\u65e5\u672c\u8a9e",
			ka: "\u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8 \u10d4\u10dc\u10d0",
			ko: "\ud55c\uad6d\uc5b4",
			lv: "latvie\u0161u",
			lt: "lietuvi\u0173",
			ms: "Bahasa Melayu",
			mk: "\u043c\u0430\u043a\u0435\u0434\u043e\u043d\u0441\u043a\u0438 \u0458\u0430\u0437\u0438\u043a",
			nl: "Nederlands",
			no: "norsk",
			pl: "polski",
			pt: "portugu\u00eas (Portugal)",
			pt_br: "portugu\u00eas (Brasil)",
			ro: "rom\u00e2n\u0103",
			ru: "\u0420\u0443\u0441\u0441\u043a\u0438\u0439",
			sk: "sloven\u010dina",
			sl: "sloven\u0161\u010dina",
			sr: "\u0441\u0440\u043f\u0441\u043a\u0438 (cyrilic)",
			sr_cs: "srpski (latin)",
			sq: "shqip",
			sv: "svenska",
			th: "\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22",
			tr: "T\u00fcrk\u00e7e",
			uk: "\u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430",
			vi: "Ti\u1ebfng Vi\u1ec7t",
			zh_cn: "\u7b80\u5316\u5b57",
			zh_tw: "\u7e41\u9ad4\u5b57"
		}, rtlLanguages = ["ar", "he", "fa"],
		embedWidgetCode = '<div id=\'__EMBED_ID__\'></div>\n\x3c!--Start of Tawk.to Script--\x3e\n<script type="text/javascript">\nvar Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date(); Tawk_API.embedded=\'__EMBED_ID__\';\n(function(){\nvar s1=document.createElement("script"),s0=document.getElementsByTagName("script")[0];\ns1.async=true;\ns1.src=\'' +
			GLOBAL_EMBED_SERVER_URL + "/__SITE_ID__/__WIDGET_ID__';\ns1.charset='UTF-8';\ns1.setAttribute('crossorigin','*');\ns0.parentNode.insertBefore(s1,s0);})();\n\x3c/script>\n\x3c!--End of Tawk.to Script--\x3e",
		inlineWidgetCode = '\x3c!--Start of Tawk.to Script--\x3e\n<script type="text/javascript">\nvar Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date();\n(function(){\nvar s1=document.createElement("script"),s0=document.getElementsByTagName("script")[0];\ns1.async=true;\ns1.src=\'' + GLOBAL_EMBED_SERVER_URL +
			"/__SITE_ID__/__WIDGET_ID__';\ns1.charset='UTF-8';\ns1.setAttribute('crossorigin','*');\ns0.parentNode.insertBefore(s1,s0);\n})();\n\x3c/script>\n\x3c!--End of Tawk.to Script--\x3e",
		formChangeAlert = '<div id="unsaved-alert" class="alert alert-warning text-center"><h4 class="alert-heading">{{unsavedTitle}}</h4><p>{{unsavedQuestion}}</p><div><button id="discard-changes" class="btn btn-default">{{discardChanges}}</button><button id="continue-edit" class="btn btn-tawk-pink">{{continueEdit}}</button><button id="save-changes" class="btn btn-primary">{{saveChanges}}</button></div></div>',
		regEmail = /^(?:[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+\.)*[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!\.)){0,61}[a-zA-Z0-9]?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\[(?:(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\]))$/i,
		randomString = function (a, c) {
			var d = [], b = 68;
			a = a || 5;
			c && (b -= 6);
			for (var e = 0; e < a; e++) d.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$&?".charAt(Math.floor(Math.random() * b)));
			return d.join("")
		},
		numberFormat = function (a) {
			return 1E6 <= a ? 0 === a % 1E6 ? a / 1E5 + "M" : (a / 1E5).toFixed(1) + "M" : 1E3 <= a ? 0 === a % 1E3 ? a / 1E3 + "K" : (a / 1E3).toFixed(1) + "K" : a
		}, printChatTranscript = function (a) {
			a = '<html><head><title>Chat Transcript</title><meta charset="UTF-8"></head><body>' + a + '<script type="text/javascript">var printSuccess = true; if (document.execCommand) {printSuccess = document.execCommand("print", false, null);} if(!printSuccess){window.print();}\x3c/script></body></html>';
			var c = document.createElement("iframe");
			c.src =
				"about:blank";
			c.style.cssText = "display: none";
			document.body.appendChild(c);
			c = c.contentWindow ? c.contentWindow : c.contentDocument.document ? c.contentDocument.document : c.contentDocument;
			c.document.open();
			c.document.write(a);
			c.document.close()
		}, encodeStr = function (a) {
			var c, d = {"&quot;": '"', "&#39;": "'", "&lt;": "<", "&gt;": ">"};
			a = a.replace(/&/g, "&amp;");
			for (c in d) a = a.replace(RegExp(d[c], "g"), c);
			return a
		}, decodeStr = function (a) {
			var c = {"&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#x27;": "'", "&#x2F;": "/", "&#39;": "'"};
			return ("" + a).replace(/(&amp;|&lt;|&gt;|&quot;|&#x27;|&#x2F;|&#39;)/g, function (a) {
				return c[a]
			})
		}, sortList = function (a, c, d) {
			var b = d ? 1 : -1, e = d ? -1 : 1;
			return a.slice(0, a.length).sort(function (a, d) {
				return a.get(c).toLowerCase() < d.get(c).toLowerCase() ? b : a.get(c).toLowerCase() > d.get(c).toLowerCase() ? e : 0
			})
		}, toScrollBottom = function (a) {
			var c = $(a)[0].offsetHeight;
			return 30 > $(a)[0].scrollHeight - ($(a)[0].scrollTop + c)
		}, filterList = function (a, c, d) {
			var b = RegExp(d, "gi"), e = [];
			a.forEach(function (a) {
				a.get(c).match(b) && e.pushObject(a)
			});
			return e
		}, inViewport = function (a, c) {
			"function" === typeof jQuery && a instanceof jQuery && (a = a[0]);
			var d = a.getBoundingClientRect();
			return 0 <= d.top && 0 <= d.left && d.bottom <= $(c).height() && d.right <= $(c).width()
		}, getPageCategories = function () {
			var a = [];
			Object.keys(translation.site_categories).forEach(function (c) {
				a.push({value: c, text: translation.site_categories[c].message})
			});
			return a
		}, getPageSubCategories = function (a) {
			var c = [], d = "site_subcategories_" + a;
			if (translation[d]) return Object.keys(translation[d]).forEach(function (a) {
				c.pushObject({
					value: a,
					text: translation[d][a].message
				})
			}), c
		}, escapeRegExp = function (a) {
			return a.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
		}, getVisitorLanguageSelect = function () {
			return Object.keys(visitorLanguages).map(function (a) {
				return {value: a, text: visitorLanguages[a]}
			})
		}, getContrast = function (a) {
			a = a.replace("#", "");
			6 > a.length && (a = a.charAt(0) + a.charAt(0) + a.charAt(1) + a.charAt(1) + a.charAt(2) + a.charAt(2));
			return 8388607.5 < parseInt(a, 16) ? "white" : "black"
		}, searchCountries = function (a) {
			var c, d = [], b = countryList();
			a = a.toLowerCase();
			c = RegExp(a, "gi");
			b.forEach(function (a) {
				a.value.toLowerCase().match(c) && d.pushObject(a)
			});
			return d
		}, getCountryByCode = function (a) {
			var c;
			countryList2.every(function (d) {
				return d.id === a ? (c = d.value, !1) : !0
			});
			return c
		}, getCities = function (a, c, d) {
			var b, e = [];
			socketConnector.getCities(a, c, function (a, c) {
				b = JSON.parse(c);
				if (a || !b.predictions.length) return d();
				b.predictions.forEach(function (a, b) {
					var c, d = [];
					c = a.terms.slice(0, a.terms.length - 1);
					c.forEach(function (a) {
						d.push(a.value)
					});
					c = {
						id: a.reference, name: d.join(", "),
						state: 1 < c.length ? c[1].value : null, city: c[0].value, index: b
					};
					e.push(c)
				});
				d(e)
			})
		}, formatFileSize = function (a) {
			var c = "Bytes KB MB GB TB PB EB ZB YB".split(" ");
			a = parseInt(a, 10);
			if (!a) return "0Bytes";
			for (var d = 1; d < c.length; d++) if (a < Math.pow(1024, d)) return Math.round(100 * (a / Math.pow(1024, d - 1))) / 100 + c[d - 1];
			return a
		}, capitalizeFirstLetter = function (a) {
			return a.charAt(0).toUpperCase() + a.slice(1)
		}, checkAndSetConfirmView = function (a, c, d, b, e, f, g) {
			a = {
				needInput: a,
				callback: c,
				confirmationQuestion: d ? d : languageParser.translate("action_messages",
					"confirm_delete"),
				confirmationAnswer: b,
				confirmationHeader: e ? e : languageParser.translate("action_messages", "title_confirm_delete"),
				confirmationProceedText: f ? f : languageParser.translate("buttons", "delete_text"),
				positiveProceeed: g ? g : !1
			};
			Tawk.confirmDeleteView ? (Tawk.confirmDeleteView.setProperties(a), Tawk.confirmDeleteView.$() ? Tawk.confirmDeleteView.openView() : Tawk.confirmDeleteView.append()) : (Tawk.confirmDeleteView = Tawk.ConfirmDeleteView.create(a), Tawk.confirmDeleteView.append())
		}, checkAndSetAlertBoxView =
			function (a, c) {
				Tawk.alertBox ? (Tawk.alertBox.set("title", a), Tawk.alertBox.set("message", c), Tawk.alertBox.$() ? (Tawk.alertBox.openView(), Tawk.alertBox.$().show()) : Tawk.alertBox.append()) : (Tawk.alertBox = Tawk.AlertBox.create({
					title: a,
					message: c
				}), Tawk.alertBox.append())
			}, beautifyAPIKey = function (a) {
			a = decodeStr(a);
			return a = capitalizeFirstLetter(a.replace(/[-_]/g, " "))
		}, beautifyAPIValue = function (a) {
			return conversationProcess.parseText(a)
		}, generateLightColors = function () {
			return "rgb(" + (Math.floor(106 * Math.random()) +
				50) + "," + (Math.floor(106 * Math.random()) + 50) + "," + (Math.floor(106 * Math.random()) + 50) + ")"
		}, mergeObjects = function (a, c) {
			for (var d in c) c.hasOwnProperty(d) && (a[d] = a[d] ? mergeObjects(a[d], c[d]) : c[d]);
			return a
		}, throttle = function (a, c, d) {
			c = c || (c = 250);
			var b;
			return function () {
				var e = d || this, f = (new Date).getTime(), g = arguments;
				b && f < b + c || (b = f, a.apply(e, g))
			}
		}, formatDate = function (a) {
			var c = moment();
			a = moment(a);
			return a.isSame(c, "day") ? a.format("HH:mm") : a.isSame(c, "year") ? a.format("DD/MMM HH:mm") : a.format("DD/MMM/YYYY HH:mm")
		},
		beautifyContentTab = function (a) {
			var c;
			if (a) a = encodeStr(a); else return "";
			a = a.replace(/\n/g, "<br />");
			(c = a.match(/_[^_]+_/gi)) && 0 < c.length && c.forEach(function (c) {
				var b;
				b = c.indexOf("_");
				var e = c.lastIndexOf("_");
				b = c.substring(0, b) + "<i>" + c.substring(b + 1, e) + "</i>" + c.substring(e + 1, c.length);
				a = a.replace(c, b)
			});
			(c = a.match(/\*[^*]+\*/gi)) && 0 < c.length && c.forEach(function (c) {
				var b;
				b = c.indexOf("*");
				var e = c.lastIndexOf("*");
				b = c.substring(0, b) + "<b>" + c.substring(b + 1, e) + "</b>" + c.substring(e + 1, c.length);
				a = a.replace(c,
					b)
			});
			return a
		}, isEmail = function (a) {
			return regEmail.test(a)
		};
	$.validator.addMethod("multiemail", function (a, c, d) {
		if (this.optional(c)) return !0;
		var b = a.split(","), e = !0;
		if (b.length > d) return !1;
		d = 0;
		for (var f = b.length; d < f; d++) a = b[d], e = e && jQuery.validator.methods.email.call(this, $.trim(a), c);
		return e
	});
	$.validator.addMethod("validDomain", function (a, c) {
		return this.optional(c) || /^(\*\.)?((([a-z]|[0-9]|\-)+)\.)+([a-z])+$/i.test(a)
	});
	$.validator.addMethod("requiredGroup", function (a, c) {
		return $(c).parents(".required-group-parent").find(".required-group:filled").length
	});
	$.validator.addMethod("ipAddress", function (a, c) {
		return this.optional(c) || /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/i.test(a)
	});
	$.validator.addMethod("alphaNumericWithDot", function (a, c) {
		return this.optional(c) || /^[a-z0-9\.]+$/i.test(a)
	});
	$.validator.addMethod("isTawkIdAvailable", function (a, c) {
		return $(c).hasClass("invalid") ? !1 : !0
	});
	$.validator.addMethod("hexColorCode", function (a, c) {
		return this.optional(c) ||
			/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(a)
	});
	$.validator.addMethod("tagLength", function (a, c) {
		return $(c).hasClass("invalid-length") ? !1 : !0
	});
	$.validator.addMethod("tagTotal", function (a, c) {
		return $(c).hasClass("invalid-total") ? !1 : !0
	});
	$.validator.addMethod("url_prefix", function (a, c) {
		return this.optional(c) || /^(https?:\/\/)?(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a)
	});
	$.validator.addMethod("shortcut_exist", function (a, c) {
		return $(c).hasClass("shortcut_exist") ? !1 : !0
	});
	$.validator.addMethod("mdb_syntax", function (a, c) {
		return this.optional(c) || !/[\.\/\$\s<>'"\*]+/i.test(a)
	});
	$.validator.addMethod("partial_ip", function (a, c) {
		return this.optional(c) || /^([0-9]{0,3}[.]?){1,3}([0-9]{0,3})$/.test(a)
	});
	$.validator.addMethod("emptySelection", function (a, c) {
		return $(c).hasClass("selection-empty") ? !1 : !0
	});
	$.validator.addMethod("ccNumber", function (a, c) {
		return Stripe ? Stripe.card.validateCardNumber(a) :
			$.validator.methods.creditcard(a, c)
	});
	$.validator.addMethod("ccExpiryFormat", function (a, c) {
		return this.optional(c) || /^[0-9]{2}\/[0-9]{2}$/.test(a)
	});
	$.validator.addMethod("ccExpiryDate", function (a, c) {
		var d = a.split("/");
		return Stripe ? Stripe.card.validateExpiry(d[0], d[1]) : this.optional(c)
	});
	$.validator.addMethod("cvcCheck", function (a, c) {
		return Stripe ? Stripe.card.validateCVC(a) : this.optional(c)
	});
	$.validator.addMethod("secureUrl", function (a, c) {
		a.split("/");
		return "https" !== a.substring(0, 5) ? !1 : jQuery.validator.methods.url.call(this,
			$.trim(a), c)
	});
	$.validator.addMethod("validPhoneNumber", function (a, c) {
		return this.optional(c) || /^[+]?[0-9]{5,50}$/.test(a)
	});
	$.validator.addMethod("twitterFormat", function (a, c) {
		return 0 === $.trim(a).length ? !0 : jQuery.validator.methods.url.call(this, $.trim(a), c) ? !1 : this.optional(c) || /^[0-9A-Za-z_]{1,15}$/.test(a)
	});
	$.validator.addMethod("facebookFormat", function (a, c) {
		return 0 === $.trim(a).length ? !0 : this.optional(c) || /^(http:\/\/|https:\/\/)?(www\.|m\.)?facebook\.com\/.+$/.test(a)
	});
	$.validator.addMethod("groupNameFormat",
		function (a, c) {
			return this.optional(c) || /^[a-z0-9\-\_]{1,21}$/.test(a)
		});
	jQuery.fn.doesExist = function () {
		return 0 < jQuery(this).length
	};
	$(document).ready(function () {
		window.$.root_ = $("body");
		window.$.navAsAjax = !1;
		$.sound_on = !1;
		$(".js-status-update a").click(function () {
			var a = $(this).text(), c = $(this);
			c.parents(".btn-group").find(".dropdown-toggle").html(a + ' <span class="caret"></span>');
			c.parents(".dropdown-menu").find("li").removeClass("active");
			c.parent().addClass("active")
		});
		moment.relativeTimeThreshold("s",
			60);
		moment.locale(LOCALE, translation.momentjs);
		Object.keys(translation.form_validation_messages).forEach(function (a) {
			$.validator.messages[a] = $.validator.format(translation.form_validation_messages[a].message)
		});
		$.validator.messages.multiemail = $.validator.format(translation.form_validation_messages.email.message);
		$.validator.messages.emptySelection = $.validator.format("Must have at least 1 choice.");
		translation.sidebar.active_chats_short = {
			message: translation.sidebar.active_chats.message.substring(0,
				1)
		};
		$("#back-top").click(function () {
			$(".innerContent").animate({scrollTop: 0}, "slow");
			return !1
		});
		$(window).focus(function () {
			notificationController && notificationController.resetNotification()
		});
		$(window).resize(function () {
			979 < $(window).width() && $("body").removeClass("hidden-menu")
		});
		$("body").append(HandlebarsTemplates.alertBox({
			elementId: "loading",
			title: languageParser.translate("action_messages", "loading"),
			message: languageParser.translate("loading_messages", "q" + (Math.floor(10 * Math.random()) + 1))
		}));
		$("body").on("click", function (a) {
			$('[rel="popover"], [data-rel="popover"]').each(function () {
				$(this).is(a.target) || (0 !== $(this).has(a.target).length || 0 !== $(".popover").has(a.target).length) || $(this).popover && $(this).popover("hide")
			})
		});
		$("body").on("hidden.bs.modal", ".modal", function () {
			$(this).removeData("bs.modal")
		});
		$("body").on("click", '[data-action="launchFullscreen"]', function (a) {
			launchFullscreen(document.documentElement);
			a.preventDefault()
		});
		$("body").on("click", '[data-action="minifyMenu"]',
			function (a) {
				var c = $(this);
				minifyMenu(c);
				a.preventDefault()
			});
		$("body").on("click", '[data-action="toggleMenu"]', function (a) {
			toggleMenu();
			a.preventDefault()
		});
		$(document).mouseup(function (a) {
			$(".ajax-dropdown").is(a.target) || 0 !== $(".ajax-dropdown").has(a.target).length || ($(".ajax-dropdown").fadeOut(150), $(".ajax-dropdown").prev().removeClass("active"))
		});
		Modernizr.draganddrop && ($("body").on("dragover", function (a) {
			a.preventDefault();
			a.stopPropagation()
		}), $("body").on("dragleave", function (a) {
			a.preventDefault();
			a.stopPropagation()
		}), $("body").on("dragend", function (a) {
			a.preventDefault();
			a.stopPropagation()
		}), $("body").on("drop", function (a) {
			a.preventDefault();
			a.stopPropagation()
		}));
		$("body").delegate(".change-route", "click", function (a) {
			var c = $(this).attr("href");
			a.stopPropagation();
			a.preventDefault();
			c = c.replace(window.location.host + "/#/", "").replace(/(http[s]?):\/\//, "");
			Tawk.routing.redirectUrl(c)
		});
		addDeviceType();
		mobileCheckActivation()
	});
	var addDeviceType = function () {
		if (/iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase())) $.root_.addClass("mobile-detected");
		else return $.root_.addClass("desktop-detected"), !1
	}, mobileCheckActivation = function () {
		979 > $(window).width() ? ($.root_.addClass("mobile-view-activated"), $.root_.removeClass("minified")) : $.root_.hasClass("mobile-view-activated") && $.root_.removeClass("mobile-view-activated")
	}, launchFullscreen = function (a) {
		$.root_.hasClass("full-screen") ? ($.root_.removeClass("full-screen"), document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen &&
			document.webkitExitFullscreen()) : ($.root_.addClass("full-screen"), a.requestFullscreen ? a.requestFullscreen() : a.mozRequestFullScreen ? a.mozRequestFullScreen() : a.webkitRequestFullscreen ? a.webkitRequestFullscreen() : a.msRequestFullscreen && a.msRequestFullscreen())
	}, minifyMenu = function (a) {
		$.root_.hasClass("menu-on-top") || ($.root_.toggleClass("minified"), $.root_.removeClass("hidden-menu"), $("html").removeClass("hidden-menu-mobile-lock"), a.effect("highlight", {}, 500))
	}, toggleMenu = function () {
		$.root_.hasClass("menu-on-top") ?
			$.root_.hasClass("menu-on-top") && $.root_.hasClass("mobile-view-activated") && ($("html").toggleClass("hidden-menu-mobile-lock"), $.root_.toggleClass("hidden-menu"), $.root_.removeClass("minified")) : ($("html").toggleClass("hidden-menu-mobile-lock"), $.root_.toggleClass("hidden-menu"), $.root_.removeClass("minified"))
	};
	Handlebars.registerHelper("I18n", function (a, c) {
		var d, b = c.hash.context, e = c.hash.variables, f = c.hash.replaceVar, g = c.hash.externalLink;
		a = a.toString();
		e = e ? JSON.parse(e) : {};
		c.contexts && f && Object.keys(e).forEach(function (a) {
			var b =
				Ember.get(c.contexts[0], e[a]);
			"undefined" !== typeof b && (e[a] = "string" === typeof b ? encodeStr(b) : b)
		});
		g && (g = JSON.parse(g), e[g.variable] = '<a href="' + Tawk[g.controller].get(g.property) + '" target="_blank">');
		c.contexts && (c.contexts[0] && Ember.get(c.contexts[0], a)) && (d = Ember.get(c.contexts[0], a));
		d instanceof String ? a = d.toString() : "string" === typeof d && (a = d);
		return new Handlebars.SafeString(languageParser.translate(b, a, e, translation))
	});
	Handlebars.registerHelper("rating", function (a, c) {
		var d = "", b = Ember.get(c.contexts[0],
			a);
		-1 === b ? d = '<i class="fa fa-thumbs-o-down"></i>' : 1 === b && (d = '<i class="fa fa-thumbs-o-up"></i>');
		return d
	});
	Handlebars.registerHelper("langPreview", function (a, c) {
		var d;
		d = c.contexts[0];
		var b = c.hash.variables, b = b ? JSON.parse(b) : {};
		if (!d) return new Handlebars.SafeString(a);
		d = languageParser.translate("widget_preview_translation", d + "-" + a, b, translation);
		return new Handlebars.SafeString(d)
	});
	Handlebars.registerHelper("breaklines", function (a, c) {
		text = a ? Ember.get(c.contexts[0], a) : Handlebars.Utils.escapeExpression(c.contexts[0]);
		text = text.replace(/(\r\n|\n|\r)/gm, "<br>");
		return new Handlebars.SafeString(text)
	});
	Handlebars.registerHelper("emojify", function (a) {
		return emojione.toImage(a)
	});
	Ember.Handlebars.registerHelper("eachProperty", function (a, c) {
		var d = [], b = this[a], e;
		for (e in b) d.push({key: e, value: b[e]});
		this[a] = d;
		return Ember.Handlebars.helpers.each.apply(this, Array.prototype.slice.call(arguments))
	});
	var DesktopConnector = function () {
		if (this._enabled = void 0 !== window.parent && "function" === typeof window.parent.postMessage && "function" ===
				typeof window.addEventListener && document.cookie && -1 !== document.cookie.indexOf("isDesktopApp=y")) -1 !== document.cookie.indexOf("isPaypalFriendly=y") && (this.isPaypalFriendly = !0), -1 !== document.cookie.indexOf("isWebRTCFriendly=y") && (this.isWebRTCFriendly = !0), this.focused = !1, window.addEventListener("message", this._onWindowMessage.bind(this)), this.send("requestWindowIsFocused")
	};
	DesktopConnector.prototype.send = function () {
		if (this._enabled) {
			var a = arguments[0], c = Array.prototype.slice.call(arguments, 1);
			window.parent.postMessage({
				cmd: a,
				payload: c
			}, "*")
		}
	};
	DesktopConnector.prototype._onWindowMessage = function (a) {
		var c, d;
		try {
			c = JSON.parse(a.data)
		} catch (b) {
			return
		}
		if (void 0 !== c.cmd) {
			void 0 !== c.cb && (d = function () {
				window.parent.postMessage({
					cmd: "__callback",
					payload: Array.prototype.slice.call(arguments, 0),
					cb: c.cb
				}, "*")
			});
			if ("changeAgentStatus" === c.cmd) {
				if (Tawk.visitorChatController.hasJoinedConversation() && "i" === c.payload[0]) return alert(languageParser.translate("action_messages", "status_invisible_in_chat")), d(!0);
				Tawk.userController.changeStatus(c.payload[0],
					d)
			}
			"appWindowFocus" === c.cmd && (this.focused = c.payload[0])
		}
	};
	DesktopConnector.prototype.isFocused = function () {
		return !0 === this.focused
	};
	DesktopConnector.prototype.enabled = function () {
		return this._enabled
	};
	DesktopConnector.prototype.canUsePaypal = function () {
		return this._enabled && this.isPaypalFriendly || !this._enabled
	};
	DesktopConnector.prototype.canUseWebRTC = function () {
		return this._enabled && this.isWebRTCFriendly || !this._enabled
	};
	var notificationController, languageParser = new LanguageParser(translation, logger),
		desktopConnector = new DesktopConnector, fileUploader, Tawk = Ember.Application.create({
			ready: function () {
				notificationController = new NotificationController;
				fileUploader = new FileUploadHandler;
				Tawk.userController.setSocketServer(GLOBAL_SOCKET_SERVER);
				Tawk.userController.setSessionKey(SESSION_KEY);
				socketConnector.init()
			}
		});
	window.onhashchange = function () {
		Tawk.routing.transitionTo()
	};
	Tawk.Router.map(function () {
		this.route("debug", {path: "/!tawk-debug"});
		this.route("remap", {path: "/*wildcard"})
	});
	Tawk.RemapRoute =
		Ember.Route.extend({
			beforeModel: function (a) {
				a.abort()
			}
		});
	var storageVersion = 2, defaultStorageSettings = {
		storageVersion: storageVersion,
		notification: desktopConnector.enabled() ? "on" : "off",
		shortcuts: null,
		sound: "on",
		visitorDetailsHover: !0
	}, Main = function () {
		this.isReconnectShown = this.initApp = !1;
		this.viewportDimensions = {};
		this.isNewVersion = !1;
		this.storageSettings = defaultStorageSettings;
		this.reconnectInterval = null;
		this.retrievingNewSocketServer = !1;
		this.hasFileReader = Modernizr.filereader;
		this.hasLocalStorage =
			Modernizr.localstorage;
		this.hasUserMedia = Modernizr.usermedia;
		this.hasFlash = swfobject.hasFlashPlayerVersion("1");
		this.retryInterval = this.wizard = null;
		this.retryInitialInterval = 5;
		this.retryMultiplier = 1.5;
		this.minRandom = 0.5;
		this.maxRandom = 1.5;
		this.maxInterval = 60
	};
	Main.prototype.initialize = function () {
		this.isReconnectShown = !1;
		Tawk.routeManager.set("currentState", null);
		"full" === SHOW_WIZARD ? this.showWizard() : this.appendView();
		$(".divMessageBox").remove();
		Modernizr.audio || this.showUnexpectedIssue("audio_unsupported");
		Modernizr.localstorage || this.showUnexpectedIssue("localstorage_unsupported");
		Modernizr.canvas || swfobject.hasFlashPlayerVersion("1") || this.showUnexpectedIssue("canvas_unsupported");
		window.addEventListener("unload", function () {
			Tawk = null;
			document.documentElement.innerHTML = ""
		})
	};
	Main.prototype.appendView = function () {
		void 0 === Tawk.mainNav && (Tawk.mainNav = Tawk.MainNav.create(), Tawk.mainNav.append());
		"inDOM" !== Tawk.leftPanel._state && Tawk.leftPanel.append();
		"inDOM" !== Tawk.mainPanel._state && (Tawk.mainPanel.append(),
			setTimeout(function () {
				Tawk.routing.transitionTo();
				Tawk.conversationsController.loadAggregation();
				socketConnector.loadDashboardVisitorsCount(function () {
				})
			}));
		void 0 === Tawk.headerNotification && (Tawk.headerNotification = Tawk.HeaderNotification.create(), Tawk.headerNotification.append());
		"inDOM" !== Tawk.agentChatContainerView._state && Tawk.agentChatContainerView.append()
	};
	Main.prototype.extractStorageSettings = function () {
		if (this.hasLocalStorage) {
			var a = !1, c = window.localStorage.getItem("tawkSettings" + Tawk.userController.user.id);
			c ? (this.storageSettings = JSON.parse(c), Tawk.chatController.updateDetailsDisplay(this.storageSettings.closeDetails), this.storageSettings && parseInt(this.storageSettings.storageVersion, 10) === storageVersion || (a = !0)) : a = !0;
			a && (this.storageSettings = defaultStorageSettings, this.presistStorageSettings())
		}
	};
	Main.prototype.updateStorageSettings = function (a, c) {
		this.storageSettings[a] = c;
		this.presistStorageSettings()
	};
	Main.prototype.presistStorageSettings = function (a, c) {
		if (this.hasLocalStorage) try {
			window.localStorage.setItem("tawkSettings" +
				Tawk.userController.user.id, JSON.stringify(this.storageSettings))
		} catch (d) {
			throw main.showUnexpectedIssue("local_storage_out_of_memory"), Error(d);
		}
	};
	Main.prototype.reconnectToServer = function () {
		var a, c = this;
		a = this.getNextReconnectInterval();
		this.isReconnectShown || (main.showReconnecting(), this.isReconnectShown = !0, notificationController.notifyAppDisconnect());
		if (null !== this.reconnectInterval) return !1;
		notificationController.stopNewChatRequest();
		this.reconnectInterval = setInterval(function () {
			0 !== a ? (c.updateReconnectMessage(languageParser.translate("action_messages",
				"reconnecting", {time: '<span class="green-text">' + moment.duration(a, "seconds").humanize() + "</span>"})), a--) : c.getNewSocketServer()
		}, 1E3)
	};
	Main.prototype.getNewSocketServer = function () {
		var a = this;
		if (this.retrievingNewSocketServer) return !1;
		clearInterval(this.reconnectInterval);
		this.reconnectInterval = null;
		this.updateReconnectMessage(languageParser.translate("action_messages", "connecting"));
		this.retrievingNewSocketServer = !0;
		$.ajax({
			type: "GET", url: "/", dataType: "text", headers: {accept: "application/json"},
			timeout: 6E4, data: {_t: Date.now()}, success: function (c) {
				c = $AjaxStripper(c);
				a.retrievingNewSocketServer = !1;
				if (c) {
					if (c.ssrv && c.sid) return Tawk.userController.setSocketServer(c.ssrv), Tawk.userController.setSessionKey(c.sid), socketConnector.init();
					if (c && c.redirect) {
						window.location = BASEPATH + "/login";
						return
					}
				}
				return a.reconnectToServer()
			}, error: function (c) {
				if (503 === c.status) return window.location.reload();
				a.retrievingNewSocketServer = !1;
				return a.reconnectToServer()
			}
		})
	};
	Main.prototype.getNextReconnectInterval =
		function () {
			var a, c = Math.random() * (this.maxRandom - this.minRandom) + this.minRandom;
			null === this.retryInterval ? this.retryInterval = this.retryInitialInterval : (a = this.retryInterval * this.retryMultiplier, this.retryInterval = this.retryInterval > this.maxInterval || a > this.maxInterval ? this.maxInterval : a);
			return Math.round(this.retryInterval * c)
		};
	Main.prototype.resetReconnectInterval = function () {
		this.retryInterval = null
	};
	Main.prototype.showReconnecting = function () {
		var a = this, c = $(HandlebarsTemplates.alertBox({
			elementId: "reconnect-overlay",
			title: languageParser.translate("action_messages", "disconnected"),
			message: languageParser.translate("action_messages", "attempt_reconnect"),
			buttons: [{id: "reconnect", text: languageParser.translate("buttons", "reconnect")}]
		}));
		$(".divMessageBox").each(function () {
			"reconnect-overlay" !== $(this).attr("id") && $(this).remove()
		});
		c.find("#reconnect-overlay-reconnect").click(function () {
			a.getNewSocketServer()
		});
		$("#reconnect-overlay").length ? $("#reconnect-overlay").replaceWith(c) : $("body").append(c)
	};
	Main.prototype.updateReconnectMessage =
		function (a) {
			$("#reconnect-overlay .pText").html(a)
		};
	Main.prototype.loggedInAnother = function () {
		if (!$("#logged-in-another").length) {
			var a = $(HandlebarsTemplates.alertBox({
				elementId: "logged-in-another",
				title: languageParser.translate("action_messages", "multiple_dashboard"),
				message: languageParser.translate("action_messages", "logged_another_tab"),
				buttons: [{id: "reconnect", text: languageParser.translate("buttons", "reconnect")}]
			}));
			a.find("#logged-in-another-reconnect").click(function () {
				window.location.reload()
			});
			$("body").append(a)
		}
	};
	Main.prototype.remoteDisconnect = function () {
		if (!$("#remote-disconnect").length) {
			var a = $(HandlebarsTemplates.alertBox({
				elementId: "remote-disconnect",
				title: languageParser.translate("action_messages", "remote_disconnect"),
				message: languageParser.translate("action_messages", "signed_out"),
				buttons: [{id: "reconnect", text: languageParser.translate("buttons", "reconnect")}]
			}));
			a.find("#remote-disconnect-reconnect").click(function () {
				window.location.reload()
			});
			$("body").append(a)
		}
	};
	Main.prototype.showErrorMessage =
		function (a) {
			var c = "overlay-" + a;
			$("#" + c).length || $("body").append(HandlebarsTemplates.alertBox({
				elementId: c,
				title: languageParser.translate("action_messages", "alert"),
				message: languageParser.translate("action_messages", a)
			}))
		};
	Main.prototype.newDashboardVersion = function () {
		if (!$("#new-version-message").length) {
			var a = $(HandlebarsTemplates.newVersionMessage({
				message: languageParser.translate("action_messages", "new_dashboard_version"),
				buttonText: languageParser.translate("action_messages", "refresh_dashboard"),
				link: BASEPATH + "/"
			}));
			a.find(".miniIcono").click(function () {
				a.remove()
			});
			$("#fixed-notification-container").prepend(a)
		}
	};
	Main.prototype.showUnexpectedIssue = function (a) {
		if (!$("#" + a).length) {
			var c = $(HandlebarsTemplates.unsupportedAlert({
				elementId: a,
				message: languageParser.translate("action_messages", a)
			}));
			c.find(".miniIcono").click(function () {
				c.remove()
			});
			$("#fixed-notification-container").prepend(c)
		}
	};
	Main.prototype.showWizard = function () {
		var a = this;
		this.wizard && (this.wizard.remove(), this.wizard = null);
		this.wizard = Tawk.NewSetupWizardView.create({
			closeCallback: function () {
				a.wizard && (a.wizard.remove(), a.wizard = null, a.appendView(), Tawk.routing.changeRoute({view: "dashboard"}))
			}
		});
		this.wizard.append();
		Tawk.routing.changeRoute({view: "wizard"})
	};
	var main = new Main, SocketConnector = function () {
		var a = this;
		this.localConnetionId = this.socketId = this.socket = null;
		this.killConnection = this.connected = !1;
		this.agentOrigin = 0;
		this.clearReconnectInterval = null;
		$(window).on("storage", function (c) {
			a.anotherConnectionDetected(c)
		})
	};
	SocketConnector.prototype.anotherConnectionDetected = function (a) {
		a = a.originalEvent;
		if (this.socket && this.connected && a.newValue && "dashboard" === a.key && a.newValue !== this.localConnetionId) return this.killConnection = !0, this.socket.disconnect(), main.loggedInAnother()
	};
	SocketConnector.prototype.updateLocalConnectionId = function () {
		if (main.hasLocalStorage) {
			this.localConnetionId = randomString(8);
			try {
				localStorage.setItem("dashboard", this.localConnetionId)
			} catch (a) {
				throw Error(a);
			}
		}
	};
	SocketConnector.prototype.init =
		function () {
			var a = this;
			this.updateLocalConnectionId();
			this.killConnection = !1;
			this.socket = new $__TawkSocket(SOCKET_PROTOCOL + "://" + Tawk.userController.socketServer + "/", {
				engineIo: $__TawkEngine,
				path: "/s",
				flashPath: GLOBAL_STATIC_URL + "/js/",
				query: {sk: Tawk.userController.sessionKey, uiv: "v2"},
				forceBase64: !0
			});
			this.socket.on("error", function () {
				a.socket.disconnect();
				a.connected = !1
			});
			this.socket.on("disconnect", function () {
				desktopConnector.send("clearState");
				a.connected = !1;
				a.socket.removeAllListeners();
				clearTimeout(a.clearReconnectTimeout);
				a.clearReconnectTimeout = null;
				Tawk.visitorChatController.disconnectWebRTC();
				a.killConnection || main.reconnectToServer()
			});
			this.socket.on("remoteDisconnect", function (c) {
				"SIGNOUT_ALL" === c.msg && c.origin !== a.agentOrigin ? (a.killConnection = !0, a.socket.disconnect(), window.location.href = BASEPATH + "/logout") : "DISABLED" === c.msg ? (a.killConnection = !0, a.socket.disconnect(), main.showErrorMessage("account_disabled")) : "SOCKET_CONNECT_ERROR" === c.msg ? a.socket.disconnect() : "AGENT_SESSION_EXPIRED" === c.msg && (a.killConnection =
					!0, a.socket.disconnect(), main.remoteDisconnect())
			});
			this.socket.on("ready", function (c) {
				a.agentOrigin = c.origin;
				a.socketId = c.socketId;
				if (main.hasLocalStorage && window.localStorage.getItem("dashboard") !== a.localConnetionId) return a.killConnection = !0, a.socket.disconnect(), main.loggedInAnother();
				if (c.buildVersion != UI_VERSION) return a.killConnection = !0, a.socket.disconnect(), window.location.reload();
				a.connected = !0;
				a.killConnection = !1;
				SHOW_WIZARD = c.wizard;
				a.retrieveStartupData();
				a.setupEventListeners();
				a.clearReconnectTimeout =
					setTimeout(function () {
						a.connected && main.resetReconnectInterval();
						a.clearReconnectTimeout = null
					}, 5E3)
			});
			this.socket.on("newVersionUpdate", function (a) {
				"v2" === a && main.newDashboardVersion()
			})
		};
	SocketConnector.prototype.retrieveStartupData = function () {
		var a = 0, c = function () {
			a++;
			4 === a && main.initialize()
		};
		this.socket.send("getInitData", {
			newVisitorAPI: !0,
			aggregateVisitorCount: !0,
			whisperEnabled: !0
		}, function (a, b) {
			a || (Tawk.userController.initialize(b.initData), Tawk.webProperties.loadProperties(b.pages), Tawk.shortcutsController.initializeShortcuts(),
				Tawk.liveMonitoringController.initInitialVisitors(c), c())
		});
		this.getAgents(function (a, b) {
			a ? Tawk.agentsController.initAgents() : Tawk.agentsController.loadAgents(b);
			c()
		});
		this.getAgentInvites(function (a, b) {
			a ? Tawk.invitationsController.initInvitations() : Tawk.invitationsController.loadInvitations(b);
			c()
		})
	};
	SocketConnector.prototype.setupEventListeners = function () {
		var a = this;
		this.socket.on("pageStatus", function (a) {
			Tawk.webProperties.updateDepartmentStatus(a)
		});
		this.setupVisitorsEventListener();
		this.socket.on("agentSessionStart",
			function (a) {
				Tawk.agentsController.sessionStart(a)
			});
		this.socket.on("agentSessionEnd", function (a) {
			Tawk.agentsController.sessionEnd(a)
		});
		this.socket.on("agentChatMessage", function (c) {
			c.origin !== a.agentOrigin && Tawk.agentChatController.incomingAgentMessage(c)
		});
		this.socket.on("agentGroupChatUpdate", function (c) {
			c.origin !== a.agentOrigin && Tawk.agentChatController.updateGroupInformation(c)
		});
		this.socket.on("agentGroupChatInvite", function (c) {
			c.origin !== a.agentOrigin && Tawk.agentChatController.groupChatInvitation(c)
		});
		this.socket.on("shortcutUpdate", function (c) {
			c.origin !== a.agentOrigin && (c.otherOrigin = !0, Tawk.shortcutsController.updateShorcutData(c))
		});
		this.socket.on("shortcutRemove", function (c) {
			c.origin !== a.agentOrigin && Tawk.shortcutsController.removeShortcutData(c)
		});
		this.socket.on("agentInvite", function (a) {
			Tawk.invitationsController.addInvitation(a)
		});
		this.socket.on("inviteRejected", function (a) {
			Tawk.invitationsController.removeInvitation(a.invid)
		});
		this.socket.on("pageDisable", function (a) {
			Tawk.webProperties.propertyDisabled(a.pgid,
				!0)
		});
		this.socket.on("pageEnable", function (a) {
			Tawk.webProperties.propertyEnabled(a.pgid, !0)
		});
		this.socket.on("aliasRemove", function (a) {
			Tawk.userController.deleteAliases(a)
		});
		this.socket.on("aliasUpdate", function (a) {
			Tawk.userController.updateAlias(a)
		});
		this.socket.on("agentDataUpdate", function (a) {
			Tawk.userController.updateUserData(a)
		});
		this.socket.on("agentInfoUpdate", function (a) {
			Tawk.agentsController.updateAgentName(a)
		});
		this.socket.on("soundSettingsUpdate", function (a) {
			Tawk.userController.updateSoundSettings(a)
		});
		this.socket.on("departmentUpdate", function (a) {
			Tawk.webProperties.updateDepartment(a, !0)
		});
		this.socket.on("departmentRemove", function (a) {
			Tawk.webProperties.removeDepartment(a, !0)
		});
		this.socket.on("pageRemove", function (a) {
			Tawk.webProperties.removeProperty(a.pgid, !0)
		});
		this.socket.on("pageAdd", function (c) {
			a.getPropertyInformation(c.pgid, function (a, b) {
				a || Tawk.webProperties.addProperty(b, !0)
			})
		});
		this.socket.on("agentAccessAdd", function (a) {
			Tawk.webProperties.addAgent(a, !0)
		});
		this.socket.on("agentAccessRemove",
			function (a) {
				Tawk.webProperties.removeAgentAccess(a, !0)
			});
		this.socket.on("agentAccessUpdate", function (a) {
			Tawk.webProperties.updateAgentAccess(a, !0)
		});
		this.socket.on("pageDataUpdate", function (a) {
			Tawk.webProperties.updatePropertyData(a, !0)
		});
		this.socket.on("agentEnabledPage", function (a) {
			Tawk.webProperties.updatePropertyStatus(a.pgid, !0)
		});
		this.socket.on("agentDisabledPage", function (a) {
			Tawk.webProperties.updatePropertyStatus(a.pgid, !1)
		});
		this.socket.on("agentStatusUpdate", function (a) {
			Tawk.agentsController.updateAgentStatus(a)
		});
		this.socket.on("uploadProgress", function (a) {
			fileUploader.uploadProgress(a)
		});
		this.socket.on("uploadFinished", function (a) {
			fileUploader.uploadComplete(a)
		});
		this.socket.on("widgetUpdate", function (a) {
			Tawk.webProperties.updateWidgetData(a)
		});
		this.socket.on("tvc", function (a) {
			Tawk.liveMonitoringController.visitorCountUpdate(a)
		});
		this.socket.on("newTicket", function (a) {
			Tawk.conversationsController.newTicketCreation(a)
		});
		this.socket.on("ticketEvent", function (a) {
			Tawk.conversationsController.incomingTicketEvents(a)
		});
		this.socket.on("conversationPurged", function (a) {
			Tawk.conversationsController.conversationPurged(a)
		});
		this.socket.on("tabsSettingsUpdate", function (a) {
			Tawk.webProperties.updateTabSettings(a)
		});
		this.socket.on("propertyAlertUpdate", function (a) {
			Tawk.webProperties.updateAlert(a)
		});
		this.socket.on("kBCategoryAdded", function (a) {
			Tawk.webProperties.updateKBCategory(a)
		});
		this.socket.on("kBCategoryDeleted", function (a) {
			Tawk.webProperties.updateKBCategory(a, !0)
		});
		this.socket.on("hireAgentContentUpdate", function (a) {
			Tawk.webProperties.updateHiredAgentContent(a)
		});
		this.socket.on("addonSettingsUpdate", function (a) {
			Tawk.webProperties.addonSettingsUpdate(a)
		});
		this.socket.on("addonActivation", function (a) {
			Tawk.webProperties.addonActivated(a)
		});
		this.socket.on("shortcutSync", function (c) {
			c.origin !== a.agentOrigin && Tawk.shortcutsController.reloadShortcutUpdate()
		});
		this.socket.on("agentChatUnpin", function (a) {
			Tawk.agentChatController.unpinChatToSidebar(a.ch, !0)
		});
		this.socket.on("agentChatPin", function (a) {
			Tawk.agentChatController.pinChatToSidebar(a.ch, !0)
		});
		this.socket.on("integrationConfigUpdate",
			function (a) {
				Tawk.webProperties.updateIntegrationConfig(a)
			})
	};
	SocketConnector.prototype.setupVisitorsEventListener = function () {
		var a = this;
		this.socket.on("visitorSessionEnd", function (a) {
			Tawk.liveMonitoringController.removeVisitor(a.vsk)
		});
		this.socket.on("visitorSessionStart", function (a) {
			Tawk.liveMonitoringController.addVisitor(a)
		});
		this.socket.on("visitorChatWindowState", function (a) {
			Tawk.liveMonitoringController.updateChatWindowState(a)
		});
		this.socket.on("visitorPopoutStatus", function (a) {
			Tawk.liveMonitoringController.updatePopoutState(a)
		});
		this.socket.on("visitorWindowResize", function (a) {
			Tawk.liveMonitoringController.chatWindowResized(a)
		});
		this.socket.on("visitorDataUpdate", function (c) {
			c.origin !== a.agentOrigin && Tawk.liveMonitoringController.visitorDataUpdate(c)
		});
		this.socket.on("visitorAgentLeft", function (a) {
			Tawk.liveMonitoringController.updateAgentLeft(a)
		});
		this.socket.on("visitorAgentJoined", function (a) {
			Tawk.liveMonitoringController.updateAgentJoined(a)
		});
		this.socket.on("agentIsTyping", function (a) {
			a.aid !== Tawk.userController.user.id &&
			Tawk.visitorChatController.agentIsTyping(a)
		});
		this.socket.on("agentStopedTyping", function (a) {
			a.aid !== Tawk.userController.user.id && Tawk.visitorChatController.agentStoppedTyping(a)
		});
		this.socket.on("visitorMessage", function (c) {
			c && c.origin && a.agentOrigin && c.origin !== a.agentOrigin && Tawk.visitorChatController.incomingMessage(c)
		});
		this.socket.on("visitorChatRequestV2", function (a) {
			Tawk.liveMonitoringController.newChatRequest(a)
		});
		this.socket.on("visitorMessagePreview", function (a) {
			Tawk.visitorChatController.showMessagePreview(a)
		});
		this.socket.on("visitorConversationPresenceUpdate", function (c) {
			c.origin !== a.agentOrigin && Tawk.visitorChatController.updateAgentPresence(c)
		});
		this.socket.on("visitorAway", function (a) {
			Tawk.liveMonitoringController.updateVisitorStatus(a, "away")
		});
		this.socket.on("visitorOnline", function (a) {
			Tawk.liveMonitoringController.updateVisitorStatus(a, "online")
		});
		this.socket.on("visitorAgentListUpdate", function (a) {
			Tawk.liveMonitoringController.updateAgentList(a)
		});
		this.socket.on("resetVisitorStatus", function (a) {
			Tawk.liveMonitoringController.resetVisitorStatus(a)
		});
		this.socket.on("visitorAttributeUpdate", function (a) {
			Tawk.visitorChatController.updateAttribute(a)
		});
		this.socket.on("visitorTagsUpdate", function (a) {
			Tawk.liveMonitoringController.updateTags(a)
		});
		this.socket.on("monitoringRemoveVisitor", function (a) {
			Tawk.liveMonitoringController.removeVisitor(a.vsk, !0)
		});
		this.socket.on("vCallUpdate", function (a) {
			Tawk.visitorChatController.webRTCCallUpdate(a)
		});
		this.socket.on("vCallStatus", function (a) {
			Tawk.liveMonitoringController.callStatusUpdate(a)
		});
		this.socket.on("vCallIgnored",
			function (a) {
				Tawk.liveMonitoringController.callIgnored(a)
			})
	};
	SocketConnector.prototype.changeStatus = function (a, c) {
		this.socket.send("changeStatus", {status: a}, c)
	};
	SocketConnector.prototype.changePageStatus = function (a, c, d) {
		this.socket.send(c ? "agentEnabledPage" : "agentDisabledPage", a, d)
	};
	SocketConnector.prototype.loadDashboardVisitorsCount = function (a) {
		this.socket.send("loadDashboardVisitorCount", a)
	};
	SocketConnector.prototype.unloadDashboardVisitorsCount = function () {
		this.socket.send("unloadDashboardVisitorCount")
	};
	SocketConnector.prototype.getHourlyStats = function (a, c) {
		this.socket.send("getHourlyStats", a, c)
	};
	SocketConnector.prototype.getDailyStats = function (a, c) {
		this.socket.send("getDailyStats", a, c)
	};
	SocketConnector.prototype.loadVisitorChatHistory = function (a, c) {
		this.socket.send("loadHistory", a, c)
	};
	SocketConnector.prototype.getAgents = function (a) {
		this.socket.send("getAgents", a)
	};
	SocketConnector.prototype.loadTranscript = function (a, c, d) {
		this.socket.send("getHistoricChat", a, c, d)
	};
	SocketConnector.prototype.getVisitorInfo =
		function (a, c, d) {
			this.socket.send("getVisitor", a, c, d)
		};
	SocketConnector.prototype.emailTranscript = function (a, c, d, b, e) {
		this.socket.send("sendHistoryTranscript", a, c, d, b, e)
	};
	SocketConnector.prototype.banVisitor = function (a, c, d, b) {
		this.socket.send("banVisitor", c, a, d, b)
	};
	SocketConnector.prototype.banVisitorByIp = function (a, c, d, b) {
		this.socket.send("banVisitorByIp", a, c, d, b)
	};
	SocketConnector.prototype.getAgentNames = function (a, c) {
		this.socket.send("getAgentsForViewing", a, c)
	};
	SocketConnector.prototype.unsubscribeVisitorChatHistory =
		function () {
			this.socket.send("unsubscribeHistoryChannel")
		};
	SocketConnector.prototype.getGeoLocation = function (a, c) {
		this.socket.send("getGeoLocation", a, c)
	};
	SocketConnector.prototype.initVisitorList = function (a) {
		this.socket.send("initFilteredVisitorList", null, null, !0, a)
	};
	SocketConnector.prototype.loadVisitorConversation = function (a, c, d) {
		this.socket.send("loadVisitorConversation", a, c, d)
	};
	SocketConnector.prototype.joinConversation = function (a, c) {
		this.socket.send("joinVisitorConversation", a, c)
	};
	SocketConnector.prototype.sendVisitorMessage =
		function (a, c) {
			this.socket.send("sendVisitorMessage", a, c)
		};
	SocketConnector.prototype.leaveConversation = function (a, c) {
		this.socket.send("leaveVisitorConversation", a, c)
	};
	SocketConnector.prototype.subscribeVisitorMessage = function (a, c) {
		this.socket.send("subscribeVisitorMessage", a, c)
	};
	SocketConnector.prototype.unsubscribeVisitorMessage = function (a, c, d) {
		this.socket.send("unsubscribeVisitorMessage", a, c, d)
	};
	SocketConnector.prototype.updateWindowCount = function (a, c) {
		this.socket.send("updateChatWindowCount", a,
			c)
	};
	SocketConnector.prototype.updateVisitorList = function (a, c, d, b) {
		this.socket.send("initFilteredVisitorList", a, c, d, b)
	};
	SocketConnector.prototype.updateVisitorDetails = function (a, c, d, b, e) {
		this.socket.send("updateVisitorDetails", a, c, d, b, e)
	};
	SocketConnector.prototype.getShortcutsChanges = function (a, c) {
		this.socket.send("getShortcutChanges", a, c)
	};
	SocketConnector.prototype.saveShortcut = function (a, c) {
		var d = function (a, d) {
			a || (d = d || {}, d.otherOrigin = !1);
			c(a, d)
		};
		a.shortcutId ? this.socket.send("editShortcuts", a,
			d) : this.socket.send("addShortcuts", a, d)
	};
	SocketConnector.prototype.deleteShortcuts = function (a, c) {
		this.socket.send("removeShortcuts", a, c)
	};
	SocketConnector.prototype.saveSiteSettings = function (a, c) {
		a.pageId ? this.socket.send("editBusinessSiteSettings", a.pageId, a, c) : this.socket.send("service", "property", "/v1/property/create/site", a, c)
	};
	SocketConnector.prototype.bulkAddShortcuts = function (a, c) {
		this.socket.send("service", "shortcut", "/v1/property/bulk-add", a, c)
	};
	SocketConnector.prototype.getPropertyInformation =
		function (a, c) {
			this.socket.send("getPage", a, c)
		};
	SocketConnector.prototype.getPropertyDetails = function (a, c) {
		this.socket.send("getPageForEditing", a, c)
	};
	SocketConnector.prototype.getPropertyAccessList = function (a, c) {
		this.socket.send("getPageAccessList", a, c)
	};
	SocketConnector.prototype.getInvitationList = function (a, c) {
		this.socket.send("service", "property", "/v1/members/list-invites", a, c)
	};
	SocketConnector.prototype.inviteAgentByEmail = function (a, c) {
		this.socket.send("service", "property", "/v1/members/invite",
			a, c)
	};
	SocketConnector.prototype.editAgentAccess = function (a, c) {
		this.socket.send("service", "property", "/v1/members/edit-access", a, c)
	};
	SocketConnector.prototype.editInvitationAccess = function (a, c) {
		this.socket.send("service", "property", "/v1/members/edit-invite", a, c)
	};
	SocketConnector.prototype.removeAgentAccess = function (a, c) {
		this.socket.send("service", "property", "/v1/members/remove", a, c)
	};
	SocketConnector.prototype.removeInvitation = function (a, c) {
		this.socket.send("service", "property", "/v1/members/remove-invite",
			a, c)
	};
	SocketConnector.prototype.resendInvitation = function (a, c) {
		this.socket.send("service", "property", "/v1/members/resend-invite", a, c)
	};
	SocketConnector.prototype.removeProperty = function (a, c) {
		this.socket.send("removeBusinessPage", a, c)
	};
	SocketConnector.prototype.disableProperty = function (a, c) {
		this.socket.send("disablePage", a, c)
	};
	SocketConnector.prototype.enableProperty = function (a, c) {
		this.socket.send("enablePage", a, c)
	};
	SocketConnector.prototype.saveDepartment = function (a, c, d) {
		c.departmentId ? this.socket.send("editDepartment",
			a, c, d) : this.socket.send("addDepartment", a, c, d)
	};
	SocketConnector.prototype.deleteDepartments = function (a, c, d) {
		this.socket.send("removeDepartment", a, c, d)
	};
	SocketConnector.prototype.getTriggers = function (a, c) {
		this.socket.send("getTriggers", a, c)
	};
	SocketConnector.prototype.saveTrigger = function (a, c, d) {
		c.id ? this.socket.send("editTrigger", a, c, d) : this.socket.send("addTrigger", a, c, d)
	};
	SocketConnector.prototype.deleteTriggers = function (a, c, d) {
		this.socket.send("removeTriggers", a, c, d)
	};
	SocketConnector.prototype.checkTawkIdVacancy =
		function (a, c, d) {
			this.socket.send("checkTawkId", a, c, d)
		};
	SocketConnector.prototype.savePageSettings = function (a, c) {
		a.pageId ? this.socket.send("editBusinessPageSettings", a.pageId, a, c) : this.socket.send("addBusinessPage", a, c)
	};
	SocketConnector.prototype.getBanList = function (a, c) {
		this.socket.send("getBanList", a, c)
	};
	SocketConnector.prototype.banVisitorByIp = function (a, c, d, b) {
		this.socket.send("banVisitorByIp", a, c, d, b)
	};
	SocketConnector.prototype.unBanVisitors = function (a, c, d) {
		this.socket.send("unbanVisitors", a,
			c, d)
	};
	SocketConnector.prototype.getHistoryByBannedIp = function (a, c, d) {
		this.socket.send("getConversationByVisitorIP", a, c, d)
	};
	SocketConnector.prototype.getHistoryByBannedVisitorId = function (a, c, d) {
		this.socket.send("getConversationByVisitorId", a, c, d)
	};
	SocketConnector.prototype.addWidget = function (a, c) {
		this.socket.send("service", "property", "/v0/property/widgets/add", a, c)
	};
	SocketConnector.prototype.deleteWidgets = function (a, c, d) {
		this.socket.send("removeWidgets", a, c, d)
	};
	SocketConnector.prototype.saveBusinessPageCustomization =
		function (a, c, d) {
			this.socket.send("customizeBusinessPage", a, c, d)
		};
	SocketConnector.prototype.saveProfilePageCustomization = function (a, c, d) {
		this.socket.send("customizeProfilePage", a, c, d)
	};
	SocketConnector.prototype.getAgentInvites = function (a) {
		this.socket.send("getAgentInvites", a)
	};
	SocketConnector.prototype.getAgentInvite = function (a, c) {
		this.socket.send("getAgentInvite", a, c)
	};
	SocketConnector.prototype.acceptInvitation = function (a, c) {
		this.socket.send("acceptInvite", a, c)
	};
	SocketConnector.prototype.rejectInvitation =
		function (a, c) {
			this.socket.send("rejectInvite", a, c)
		};
	SocketConnector.prototype.getCities = function (a, c, d) {
		this.socket.send("getCities", a, c, d)
	};
	SocketConnector.prototype.saveProfileSettings = function (a, c) {
		this.socket.send("updateAgentData", a, c)
	};
	SocketConnector.prototype.saveSoundSettings = function (a, c) {
		this.socket.send("saveSoundSettings", a, c)
	};
	SocketConnector.prototype.deleteAliases = function (a, c) {
		this.socket.send("removeAlias", a, c)
	};
	SocketConnector.prototype.saveAlias = function (a, c) {
		a.aliasId ? this.socket.send("editAlias",
			a, c) : this.socket.send("addAlias", a, c)
	};
	SocketConnector.prototype.getBrowserAppSessions = function (a) {
		this.socket.send("getOtherSessions", a)
	};
	SocketConnector.prototype.signOutOtherSession = function (a, c) {
		this.socket.send("removeOtherSession", a, c)
	};
	SocketConnector.prototype.removeAgentOwnAccess = function (a, c) {
		this.socket.send("removeAgentOwnAccess", a, c)
	};
	SocketConnector.prototype.getAgentsInformations = function (a, c) {
		this.socket.send("getAgentsByAgentIds", a, c)
	};
	SocketConnector.prototype.getPropertyInformation =
		function (a, c) {
			this.socket.send("getPage", a, c)
		};
	SocketConnector.prototype.agentIsTyping = function (a, c) {
		this.socket.send("agentIsTyping", {sessionKey: a, agentOnly: c})
	};
	SocketConnector.prototype.agentStoppedTyping = function (a, c) {
		this.socket.send("agentStopedTyping", {sessionKey: a, agentOnly: c})
	};
	SocketConnector.prototype.inviteAgentsByEmail = function (a, c, d) {
		this.socket.send("inviteAgentsByEmail", a, c, d)
	};
	SocketConnector.prototype.editWidgetScheduler = function (a, c, d, b, e) {
		this.socket.send("editWidgetScheduler",
			a, c, d, b, e)
	};
	SocketConnector.prototype.sendFileUpload = function (a, c, d, b, e) {
		this.socket.send("fileUploadMessage", a, c, d, b, e)
	};
	SocketConnector.prototype.sendInstallInstructions = function (a, c) {
		this.socket.send("service", "property", "/v1/property/widgets/send-instructions", a, c)
	};
	SocketConnector.prototype.saveWidgetGreetings = function (a, c, d, b, e) {
		"online" === b ? this.socket.send("editOnlineGreetings", a, c, d, e) : this.socket.send("editAwayGreetings", a, c, d, e)
	};
	SocketConnector.prototype.saveOfflineForm = function (a, c, d,
	                                                      b) {
		this.socket.send("editOfflineForm", a, c, d, b)
	};
	SocketConnector.prototype.savePrechatForm = function (a, c, d, b) {
		this.socket.send("editPrechatForm", a, c, d, b)
	};
	SocketConnector.prototype.saveWidgetSettings = function (a, c, d, b) {
		this.socket.send("editSettings", a, c, d, b)
	};
	SocketConnector.prototype.saveAppearance = function (a, c, d, b) {
		this.socket.send("editAppearance", a, c, d, b)
	};
	SocketConnector.prototype.saveBehavior = function (a, c, d, b) {
		this.socket.send("editBehavior", a, c, d, b)
	};
	SocketConnector.prototype.saveWidgetContent =
		function (a, c, d, b) {
			this.socket.send("editAllContent", a, c, d, b)
		};
	SocketConnector.prototype.saveWidgetLanguage = function (a, c, d, b) {
		this.socket.send("editLanguage", a, c, d, b)
	};
	SocketConnector.prototype.getChatTagsByProperty = function (a, c) {
		this.socket.send("getTags", a, c)
	};
	SocketConnector.prototype.updateOpenedChatTags = function (a, c, d, b, e) {
		this.socket.send("updateVisitorSessionTags", a, c, d, b, e)
	};
	SocketConnector.prototype.editBanReason = function (a, c, d, b) {
		this.socket.send("editBanReason", a, c, d, b)
	};
	SocketConnector.prototype.getEmailSettings =
		function (a, c) {
			this.socket.send("service", "property", "/v1/property/" + a + "/notifications/get", {}, c)
		};
	SocketConnector.prototype.saveEmailSettings = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/" + a + "/notifications/set", c, d)
	};
	SocketConnector.prototype.getOngoingConvesations = function (a) {
		this.socket.send("getActiveVisitorSessions", null, a)
	};
	SocketConnector.prototype.subscribeVisitorList = function (a, c) {
		this.socket.send("subscribeVisitorMonitoring", a, c)
	};
	SocketConnector.prototype.unsubscribeVisitorList =
		function (a) {
			this.socket.send("unsubscribeVisitorMonitoring", a)
		};
	SocketConnector.prototype.getAllTags = function (a) {
		this.socket.send("getTagsForAllPages", a)
	};
	SocketConnector.prototype.getVisitorSession = function (a, c, d) {
		this.socket.send("getVisitorSession", a, c, d)
	};
	SocketConnector.prototype.subscribeVisitorSessions = function (a, c) {
		this.socket.send("subscribeVisitorSessions", a, c)
	};
	SocketConnector.prototype.unsubscribeVisitorSessions = function (a, c) {
		this.socket.send("unsubscribeVisitorSessions", a, c)
	};
	SocketConnector.prototype.extendMonitoringList =
		function (a) {
			this.socket.send("extendVisitorMonitoring", a)
		};
	SocketConnector.prototype.saveMonitoringTimeout = function (a, c) {
		this.socket.send("saveMonitoringTimeout", a, c)
	};
	SocketConnector.prototype.createTicket = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/create", c, d)
	};
	SocketConnector.prototype.getTicket = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/" + c, null, d)
	};
	SocketConnector.prototype.getConversationsList = function (a, c,
	                                                           d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/conversations", c, d)
	};
	SocketConnector.prototype.getTicketsList = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/tickets", c, d)
	};
	SocketConnector.prototype.getAssignedTicketsList = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/tickets/me", c, d)
	};
	SocketConnector.prototype.getHistoryList = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/chats", c, d)
	};
	SocketConnector.prototype.getSpamList = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/tickets/spam", c, d)
	};
	SocketConnector.prototype.getTrashList = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/tickets/deleted", c, d)
	};
	SocketConnector.prototype.replyTicket = function (a, c, d, b) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/" + c + "/reply", d, b)
	};
	SocketConnector.prototype.changePriority = function (a, c, d, b) {
		this.socket.send("service",
			"conversations", "/v1/frontend/" + a + "/ticket/" + c + "/priority", d, b)
	};
	SocketConnector.prototype.updateTicketTags = function (a, c, d, b) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/" + c + "/tag/update", d, b)
	};
	SocketConnector.prototype.updateChatTags = function (a, c, d, b) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/chat/" + c + "/tag/update", d, b)
	};
	SocketConnector.prototype.updateAssignee = function (a, c, d, b) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/" +
			c + "/assignment", d, b)
	};
	SocketConnector.prototype.getTags = function (a, c) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/conversations/tags", null, c)
	};
	SocketConnector.prototype.restoreTicket = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/" + c + "/restore", null, d)
	};
	SocketConnector.prototype.listenOnNewHistory = function (a) {
		this.socket.on("newHistoryEntry", a)
	};
	SocketConnector.prototype.deleteConversations = function (a, c, d) {
		this.socket.send("service", "conversations",
			"/v1/frontend/" + a + "/conversations/delete", c, d)
	};
	SocketConnector.prototype.updateTicketStatus = function (a, c, d, b) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/" + c + "/status", d, b)
	};
	SocketConnector.prototype.unassignTicket = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/" + c + "/unassign", null, d)
	};
	SocketConnector.prototype.bulkSpamUpdate = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/tickets/spam", c, d)
	};
	SocketConnector.prototype.bulkRestore =
		function (a, c, d) {
			this.socket.send("service", "conversations", "/v1/frontend/" + a + "/conversations/restore", c, d)
		};
	SocketConnector.prototype.bulkPurge = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/conversations/purge", c, d)
	};
	SocketConnector.prototype.getChat = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/chat/" + c, null, d)
	};
	SocketConnector.prototype.searchVisitorChatHistory = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" +
			a + "/chatByVisitorId", {visitorId: c}, d)
	};
	SocketConnector.prototype.getContacts = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/contacts", c, d)
	};
	SocketConnector.prototype.getContactDetails = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/contact/" + c, {}, d)
	};
	SocketConnector.prototype.emitStartReply = function (a, c, d) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/" + c + "/startReply", null, d)
	};
	SocketConnector.prototype.emitStopReply =
		function (a, c, d) {
			this.socket.send("service", "conversations", "/v1/frontend/" + a + "/ticket/" + c + "/stopReply", null, d)
		};
	SocketConnector.prototype.getAggregation = function (a) {
		this.socket.send("service", "conversations", "/v1/frontend/conversations/aggregateMine", null, a)
	};
	SocketConnector.prototype.getContactEvents = function (a, c, d, b) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/contact/" + c + "/events", d, b)
	};
	SocketConnector.prototype.closeChat = function (a, c, d, b) {
		this.socket.send("service", "conversations",
			"/v1/frontend/" + a + "/chat/" + c + "/status", d, b)
	};
	SocketConnector.prototype.markConversationRead = function (a, c, d, b) {
		this.socket.send("service", "conversations", "/v1/frontend/" + a + "/conversation/" + c + "/read", d, function () {
		})
	};
	SocketConnector.prototype.getChatVolume = function (a, c, d) {
		this.socket.send("service", "analytics", "/v1/chats/" + a + "/volume", c, d)
	};
	SocketConnector.prototype.getMissedChatVolume = function (a, c, d) {
		this.socket.send("service", "analytics", "/v1/chats/" + a + "/missed", c, d)
	};
	SocketConnector.prototype.getChatWaitTime =
		function (a, c, d) {
			this.socket.send("service", "analytics", "/v1/chats/" + a + "/waiting", c, d)
		};
	SocketConnector.prototype.getChatDuration = function (a, c, d) {
		this.socket.send("service", "analytics", "/v1/chats/" + a + "/duration", c, d)
	};
	SocketConnector.prototype.getChatSatisfaction = function (a, c, d) {
		this.socket.send("service", "analytics", "/v1/chats/" + a + "/satisfaction", c, d)
	};
	SocketConnector.prototype.getTicketVolume = function (a, c, d) {
		this.socket.send("service", "analytics", "/v1/tickets/" + a + "/volume", c, d)
	};
	SocketConnector.prototype.getSolvedTickets =
		function (a, c, d) {
			this.socket.send("service", "analytics", "/v1/tickets/" + a + "/solved", c, d)
		};
	SocketConnector.prototype.getTicketSource = function (a, c, d) {
		this.socket.send("service", "analytics", "/v1/tickets/" + a + "/source", c, d)
	};
	SocketConnector.prototype.getTicketResolutionTime = function (a, c, d) {
		this.socket.send("service", "analytics", "/v1/tickets/" + a + "/resolution", c, d)
	};
	SocketConnector.prototype.getTicketReopened = function (a, c, d) {
		this.socket.send("service", "analytics", "/v1/tickets/" + a + "/reopened", c, d)
	};
	SocketConnector.prototype.getTicketFirstTimeResponse =
		function (a, c, d) {
			this.socket.send("service", "analytics", "/v1/tickets/" + a + "/response", c, d)
		};
	SocketConnector.prototype.agentStatistics = function (a, c) {
		this.socket.send("service", "analytics", "/v1/live-answering/agent-statistics", a, c)
	};
	SocketConnector.prototype.getAddOns = function (a, c) {
		this.socket.send("service", "addon", "/v1/" + a + "/addons", null, c)
	};
	SocketConnector.prototype.getAddOnDetail = function (a, c, d) {
		this.socket.send("service", "addon", "/v1/" + a + "/addons/" + c, null, d)
	};
	SocketConnector.prototype.saveWhitelabelSettings =
		function (a, c, d) {
			this.socket.send("service", "addon", "/v1/" + a + "/addons/whitelabel/saveSettings", c, d)
		};
	SocketConnector.prototype.createPaypalPayment = function (a, c) {
		this.socket.send("service", "billing", "/v1/payment-method/paypal/create", a, c)
	};
	SocketConnector.prototype.createStripePayment = function (a, c) {
		this.socket.send("service", "billing", "/v1/payment-method/stripe/create", {token: a}, c)
	};
	SocketConnector.prototype.createSubscription = function (a, c, d) {
		this.socket.send("service", "billing", "/v1/" + a + "/subscriptions/create",
			c, d)
	};
	SocketConnector.prototype.cancelSubscription = function (a, c, d, b) {
		this.socket.send("service", "billing", "/v1/" + a + "/subscriptions/" + c + "/cancel", d, b)
	};
	SocketConnector.prototype.getExistingCard = function (a) {
		this.socket.send("service", "billing", "/v1/payment-method/stripe", null, a)
	};
	SocketConnector.prototype.getSubscriptions = function (a, c) {
		this.socket.send("service", "billing", "/v1/" + a + "/subscriptions", null, c)
	};
	SocketConnector.prototype.getPayments = function (a, c, d) {
		this.socket.send("service", "billing", "/v1/" +
			a + "/payments", c, d)
	};
	SocketConnector.prototype.saveBillingEmail = function (a, c, d, b) {
		this.socket.send("service", "billing", "/v1/" + a + "/subscriptions/" + c + "/update", d, b)
	};
	SocketConnector.prototype.getSubscription = function (a, c, d) {
		this.socket.send("service", "billing", "/v1/" + a + "/subscriptions", c, d)
	};
	SocketConnector.prototype.saveBillingAddress = function (a, c, d, b) {
		this.socket.send("service", "billing", "/v1/" + a + "/subscriptions/" + c + "/update-address", d, b)
	};
	SocketConnector.prototype.setupForwarder = function (a, c, d) {
		this.socket.send("service",
			"addon", "/v1/" + a + "/addons/whitelabel/setupForwarder", c, d)
	};
	SocketConnector.prototype.verifyForwarding = function (a, c, d) {
		this.socket.send("service", "addon", "/v1/" + a + "/addons/whitelabel/verifyForwarder", c, d)
	};
	SocketConnector.prototype.verifySPF = function (a, c, d) {
		this.socket.send("service", "addon", "/v1/" + a + "/addons/whitelabel/verifySpf", c, d)
	};
	SocketConnector.prototype.verifyDKIM = function (a, c, d) {
		this.socket.send("service", "addon", "/v1/" + a + "/addons/whitelabel/verifyDkim", c, d)
	};
	SocketConnector.prototype.saveForwarderName =
		function (a, c, d) {
			this.socket.send("service", "addon", "/v1/" + a + "/addons/whitelabel/saveForwarderName", c, d)
		};
	SocketConnector.prototype.removeForwarder = function (a, c) {
		this.socket.send("service", "addon", "/v1/" + a + "/addons/whitelabel/removeForwarder", null, c)
	};
	SocketConnector.prototype.getAllPropertiesTabSettings = function (a, c) {
		this.socket.send("service", "property", "/v1/property/tabs", {propertyIds: a}, c)
	};
	SocketConnector.prototype.getPropertyTabSettings = function (a, c) {
		this.socket.send("service", "property", "/v1/property/" +
			a + "/tabs", null, c)
	};
	SocketConnector.prototype.saveTabSettings = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/" + a + "/tabs/save", {tabs: c}, d)
	};
	SocketConnector.prototype.getAlert = function (a, c) {
		this.socket.send("service", "property", "/v1/property/" + a + "/alert", null, c)
	};
	SocketConnector.prototype.saveAlert = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/" + a + "/alert/save", c, d)
	};
	SocketConnector.prototype.getKBCategories = function (a, c) {
		this.socket.send("service", "property",
			"/v1/property/" + a + "/knowledge-base/categories", null, c)
	};
	SocketConnector.prototype.addKBCategory = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/" + a + "/knowledge-base/categories/add", c, d)
	};
	SocketConnector.prototype.updateKBCategory = function (a, c, d, b) {
		this.socket.send("service", "property", "/v1/property/" + a + "/knowledge-base/categories/" + c + "/update", d, b)
	};
	SocketConnector.prototype.deleteKBCategory = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/" + a + "/knowledge-base/categories/" +
			c + "/remove", null, d)
	};
	SocketConnector.prototype.getKBList = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/" + a + "/knowledge-base", c, d)
	};
	SocketConnector.prototype.saveKB = function (a, c, d, b) {
		c ? this.socket.send("service", "property", "/v1/property/" + a + "/knowledge-base/" + c + "/update", d, b) : this.socket.send("service", "property", "/v1/property/" + a + "/knowledge-base/add", d, b)
	};
	SocketConnector.prototype.getKBContent = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/" + a + "/knowledge-base/" +
			c, null, d)
	};
	SocketConnector.prototype.deleteKBContent = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/" + a + "/knowledge-base/" + c + "/remove", null, d)
	};
	SocketConnector.prototype.getHiredAgentContent = function (a, c) {
		this.socket.send("service", "property", "/v1/property/" + a + "/hired-agent-content", null, c)
	};
	SocketConnector.prototype.saveHiredAgentContent = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/" + a + "/hired-agent-content/save", c, d)
	};
	SocketConnector.prototype.saveLiveAnswerSettings =
		function (a, c, d) {
			this.socket.send("service", "addon", "/v1/" + a + "/addons/live-answering/saveSettings", c, d)
		};
	SocketConnector.prototype.initCall = function (a, c) {
		this.socket.send("service", "webrtc", "/v1/vcall/init/agent", a, c)
	};
	SocketConnector.prototype.rejectCall = function (a, c) {
		this.socket.send("service", "webrtc", "/v1/vcall/ignore/agent", a, c)
	};
	SocketConnector.prototype.joinCall = function (a, c) {
		this.socket.send("service", "webrtc", "/v1/vcall/token/agent", a, c)
	};
	SocketConnector.prototype.saveWebRTCSettings = function (a,
	                                                         c, d) {
		this.socket.send("service", "addon", "/v1/" + a + "/addons/webrtc/saveSettings", c, d)
	};
	SocketConnector.prototype.getRestApiKeyList = function (a) {
		this.socket.send("service", "agent", "/v1/api-keys/list", null, a)
	};
	SocketConnector.prototype.createRestApiKey = function (a) {
		this.socket.send("service", "agent", "/v1/api-keys/create", null, a)
	};
	SocketConnector.prototype.revokeRestApiKey = function (a, c) {
		this.socket.send("service", "agent", "/v1/api-keys/revoke", {apiKey: a}, c)
	};
	SocketConnector.prototype.getGroups = function (a) {
		this.socket.send("service",
			"agent-chat", "/v2/groups", null, a)
	};
	SocketConnector.prototype.startGroupChat = function (a, c) {
		this.socket.send("service", "agent-chat", "/v2/channel/create", a, c)
	};
	SocketConnector.prototype.saveAgentChatSettings = function (a, c) {
		a.origin = this.agentOrigin;
		this.socket.send("service", "agent-chat", "/v1/save-agent-chat-settings", a, c)
	};
	SocketConnector.prototype.saveGroupChatName = function (a, c) {
		this.socket.send("service", "agent-chat", "/v2/channel/set-name", a, c)
	};
	SocketConnector.prototype.loadAgentChatHistory = function (a,
	                                                           c) {
		this.socket.send("service", "agent-chat", "/v2/direct/fetch-before", a, c)
	};
	SocketConnector.prototype.loadGroupChatHistory = function (a, c) {
		this.socket.send("service", "agent-chat", "/v2/channel/fetch-before", a, c)
	};
	SocketConnector.prototype.syncAgentChat = function (a, c, d) {
		a ? this.socket.send("service", "agent-chat", "/v2/channel/fetch-after", c, d) : this.socket.send("service", "agent-chat", "/v2/direct/fetch-after", c, d)
	};
	SocketConnector.prototype.sendAgentMessage = function (a, c, d) {
		this.socket.send("agentChatMessage",
			a, c, d)
	};
	SocketConnector.prototype.sendGroupChatMessage = function (a, c, d) {
		this.socket.send("agentGroupChatMessage", a, c, d)
	};
	SocketConnector.prototype.acknowledgeAgentMessage = function (a, c, d, b) {
		this.socket.send("agentMessageAck", a, c, d, b)
	};
	SocketConnector.prototype.inviteAgentGroupChat = function (a, c, d) {
		this.socket.send("inviteAgentGroupChat", a, c, d)
	};
	SocketConnector.prototype.getAgentGroupChatDetails = function (a, c) {
		this.socket.send("getAgentGroupChatDetails", a, c)
	};
	SocketConnector.prototype.leaveAgentGroupChatPermanent =
		function (a, c) {
			this.socket.send("leaveAgentGroupChatPermanent", a, c)
		};
	SocketConnector.prototype.pinGroupChat = function (a, c) {
		this.socket.send("service", "agent-chat", "/v2/channel/pin", a, c)
	};
	SocketConnector.prototype.unpinGroupChat = function (a, c) {
		this.socket.send("service", "agent-chat", "/v2/channel/unpin", a, c)
	};
	SocketConnector.prototype.pinDMChat = function (a, c) {
		this.socket.send("service", "agent-chat", "/v2/direct/pin", a, c)
	};
	SocketConnector.prototype.unpinDMChat = function (a, c) {
		this.socket.send("service", "agent-chat",
			"/v2/direct/unpin", a, c)
	};
	SocketConnector.prototype.getPropertyInfo = function (a, c, d) {
		this.socket.send("service", "property", "/v1/property/info", {propertyId: a, fields: c}, d)
	};
	SocketConnector.prototype.doWizardLater = function (a) {
		this.socket.send("service", "agent", "/v1/wizard/do.later", null, a)
	};
	SocketConnector.prototype.getCallList = function (a) {
		this.socket.send("service", "webrtc", "/v1/vcall/status/list", null, a)
	};
	SocketConnector.prototype.getCallInfo = function (a, c) {
		this.socket.send("subscribeVisitorCall", a, c)
	};
	SocketConnector.prototype.getShopifyConfig = function (a, c) {
		this.socket.send("service", "integrations", "/v1/shopify/config/get", {propertyId: a}, c)
	};
	SocketConnector.prototype.saveShopifyConfig = function (a, c, d) {
		this.socket.send("service", "integrations", "/v1/shopify/config/set", {propertyId: a, config: c}, d)
	};
	SocketConnector.prototype.searchShopifyData = function (a, c) {
		this.socket.send("service", "integrations", "/v1/shopify/search", a, c)
	};
	SocketConnector.prototype.loadOrders = function (a, c) {
		this.socket.send("service",
			"integrations", "/v1/shopify/order/list-for-customer", a, c)
	};
	SocketConnector.prototype.duplicateOrder = function (a, c) {
		this.socket.send("service", "integrations", "/v1/shopify/order/duplicate", a, c)
	};
	SocketConnector.prototype.calculateOrderRefund = function (a, c) {
		this.socket.send("service", "integrations", "/v1/shopify/order/calculate-refund", a, c)
	};
	SocketConnector.prototype.refundOrder = function (a, c) {
		this.socket.send("service", "integrations", "/v1/shopify/order/refund", a, c)
	};
	SocketConnector.prototype.cancelOrder =
		function (a, c) {
			this.socket.send("service", "integrations", "/v1/shopify/order/cancel", a, c)
		};
	SocketConnector.prototype.changeShippingAddress = function (a, c) {
		this.socket.send("service", "integrations", "/v1/shopify/order/change-shipping-address", a, c)
	};
	SocketConnector.prototype.getAgentName = function (a, c) {
		this.socket.send("service", "agent", "/v1/get", a, c)
	};
	var socketConnector = new SocketConnector, AudioPlayer = function () {
		var a;
		this.audioContext = null;
		this.isReadyForInit = !1;
		this.eventUsedForInit = null;
		-1 !== navigator.userAgent.indexOf("Firefox/") ||
		("undefined" === typeof AudioBuffer || void 0 === window.AudioContext && void 0 === window.webkitAudioContext) || (window.AudioContext = window.AudioContext || window.webkitAudioContext, this.audioContext = new AudioContext);
		this.playableFiles = [{value: "sound1", text: "Legacy Sound 1"}, {
			value: "sound2",
			text: "Legacy Sound 2"
		}, {value: "sound3", text: "Legacy Sound 3"}, {value: "sound4", text: "Legacy Sound 4"}, {
			value: "sound5",
			text: "Legacy Sound 5"
		}, {value: "sound6", text: "Piano Chords"}, {value: "sound7", text: "Cellphone Ring"}, {
			value: "sound8",
			text: "High Marimba Melody"
		}, {value: "sound9", text: "Fast trill"}, {value: "sound10", text: "Beeps"}, {
			value: "sound11",
			text: "Shimmer"
		}, {value: "sound12", text: "Ascending Marimba"}, {value: "sound13", text: "Chime Accent"}, {
			value: "sound14",
			text: "Computer Beeps"
		}, {value: "sound15", text: "Digital Warble"}, {value: "sound16", text: "Electric Keyboard"}, {
			value: "sound17",
			text: "Marimba Tone"
		}, {value: "sound18", text: "Steel Drum Melody"}, {value: "sound19", text: "Alert"}, {
			value: "sound20",
			text: "Digital Beeps"
		}, {value: "sound21", text: "Electronic Beeps"},
			{value: "sound22", text: "Musical Ascend"}, {
				value: "sound23",
				text: "Musical Ascend Delay"
			}, {value: "sound24", text: "Serious Electric Piano"}, {value: "sound25", text: "Transmission Beeps"}];
		this.audioFiles = {};
		(this.isAudioCapable = window.Audio && !!(new Audio).canPlayType) ? (a = getPlayableFileExtensions(), 0 < a.length ? this.fileExtension = a[0].fileExtension : (this.isAudioCapable = !1, this.fileExtension = "")) : this.fileExtension = "";
		if (this.audioContext) {
			var c = this;
			initSourceFunction = function () {
				c.isReadyForInit && c.eventUsedForInit &&
				(c.audioFiles[c.eventUsedForInit].playSource(!0, 0), c.audioFiles[c.eventUsedForInit].stop(), window.removeEventListener("touchstart", initSourceFunction, !1))
			};
			"ontouchstart" in window && window.addEventListener("touchstart", initSourceFunction, !1)
		}
	};
	AudioPlayer.prototype.preloadSounds = function () {
		var a = this;
		this.isAudioCapable && "" !== this.fileExtension && this.playableFiles.forEach(function (c) {
			a.add(c.value, {n: c.value, vl: 50})
		})
	};
	AudioPlayer.prototype.add = function (a, c) {
		c.n && "none" !== c.n && this.isAudioCapable &&
		(this.audioFiles[a] = this.audioContext ? new AudioContextPlayer(c, this.fileExtension, a, this) : new HtmlAudioPlayer(c, this.fileExtension))
	};
	AudioPlayer.prototype.remove = function (a) {
		delete this.audioFiles[a]
	};
	AudioPlayer.prototype.play = function (a) {
		this.audioFiles[a] && this.audioFiles[a].play()
	};
	AudioPlayer.prototype.stop = function (a) {
		this.audioFiles[a] && this.audioFiles[a].stop()
	};
	AudioPlayer.prototype.reset = function (a) {
		this.audioFiles[a] && this.audioFiles[a].reset()
	};
	AudioPlayer.prototype.update = function (a,
	                                         c) {
		"none" !== c.n && (this.audioFiles[a] ? this.audioFiles[a].update(c) : this.add(a, c))
	};
	AudioPlayer.prototype.turnOffSound = function () {
		var a = this;
		Object.keys(this.audioFiles).forEach(function (c) {
			a.audioFiles[c] && a.audioFiles[c].turnOffSound()
		})
	};
	AudioPlayer.prototype.turnOnSound = function () {
		var a = this;
		Object.keys(this.audioFiles).forEach(function (c) {
			a.audioFiles[c] && a.audioFiles[c].turnOnSound()
		})
	};
	var getPlayableFileExtensions = function () {
		var a = new Audio;
		return [{
			fileExtension: ".mp3", canPlayType: a.canPlayType('audio/mpeg; codecs="mp3"'),
			preference: /MSIE/.test(navigator.userAgent) || /Edge/.test(navigator.userAgent) ? 3 : 2
		}, {
			fileExtension: ".ogg",
			canPlayType: a.canPlayType('audio/ogg; codecs="vorbis"'),
			preference: 4
		}, {
			fileExtension: ".m4a",
			canPlayType: a.canPlayType('audio/mp4; codecs="mp4a.40.5"'),
			preference: /MSIE/.test(navigator.userAgent) || /Edge/.test(navigator.userAgent) ? 2 : 3
		}, {
			fileExtension: ".wav",
			canPlayType: a.canPlayType('audio/wav; codecs="1"'),
			preference: 1
		}].filter(function (a) {
			return "" !== a.canPlayType
		}).sort(function (a, d) {
			return "maybe" ===
			a.canPlayType && "probably" === d.canPlayType ? -1 : "probably" === a.canPlayType && "maybe" === d.canPlay ? 1 : a.preference > d.preference ? -1 : a.preference < d.preference ? 1 : 0
		})
	}, HtmlAudioPlayer = function (a, c) {
		var d = new Audio(GLOBAL_STATIC_URL + "/sounds/" + a.n + c), b = 0, e = a.loop ? a.loop : 0,
			f = 0 === a.vl ? 0 : a.vl / 100, g = !1;
		d.load();
		d.volume = f;
		d.addEventListener("ended", function () {
			!g && (e && ("infinity" === e || b < e)) && (this.currentTime = 0, d.load(), this.play());
			b++
		}, !1);
		this.reset = function () {
			b = 0
		};
		this.play = function () {
			g = !1;
			this.reset();
			d.autoplay =
				!0;
			d.load();
			d.play();
			b++
		};
		this.stop = function () {
			g = !0;
			d.pause();
			this.reset()
		};
		this.update = function (a) {
			a.n && d.setAttribute("src", GLOBAL_STATIC_URL + "/sounds/" + a.n + c);
			null !== a.vl && (f = 0 === a.vl ? 0 : a.vl / 100, d.volume = f);
			a.loop && (this.reset(), e = a.loop)
		};
		this.turnOffSound = function () {
			d.volume = 0
		};
		this.turnOnSound = function () {
			d.volume = f
		}
	}, AudioContextPlayer = function (a, c, d, b) {
		var e = 0 === a.vl ? 0 : a.vl / 100, f = !1, g = 0;
		this.audioPlayer = b;
		this.sourceLoop = a.loop ? a.loop : 0;
		this.sourcePath = GLOBAL_STATIC_URL + "/sounds/" + a.n + c;
		this.sourceVolume =
			e;
		this.prevFileName = a.n;
		this.gainNode = this.source = this.buffer = null;
		this.isSoundOff = !1;
		this.reset = function () {
			this.stop()
		};
		this.playSource = function (a, b) {
			var c = this;
			this.buffer instanceof AudioBuffer && this.audioPlayer instanceof AudioPlayer && (this.gainNode = this.audioPlayer.audioContext.createGain(), this.gainNode.gain.value = this.isSoundOff || b !== b || 0 > b || 1 < b ? 0 : b, this.source = this.audioPlayer.audioContext.createBufferSource(), this.source.buffer = this.buffer, this.source.connect(this.gainNode), this.gainNode.connect(this.audioPlayer.audioContext.destination),
				this.source.start(0), f = !1, !a && ("infinity" === this.sourceLoop || ++g < this.sourceLoop) && (this.source.onended = function () {
				f || c.playSource(a, c.sourceVolume)
			}))
		};
		this.play = function () {
			this.stop();
			this.playSource(!1, this.sourceVolume)
		};
		this.stop = function () {
			if (this.source) try {
				this.source.stop(0), this.source.onended = function () {
				}, this.source = null, f = !0, g = 0
			} catch (a) {
				throw Error(a);
			}
		};
		this.update = function (a) {
			null !== a.vl && (this.sourceVolume = 0 === a.vl ? 0 : a.vl / 100);
			a.loop && (this.sourceLoop = a.loop);
			a.n && a.n !== this.prevFileName &&
			(this.sourcePath = GLOBAL_STATIC_URL + "/sounds/" + a.n + c, this.prevFileName = a.n, this.loadBuffer())
		};
		this.turnOffSound = function () {
			this.isSoundOff = !0;
			this.gainNode && (this.gainNode.gain.value = 0)
		};
		this.turnOnSound = function () {
			this.isSoundOff = !1;
			this.gainNode && (this.gainNode.gain.value = this.sourceVolume)
		};
		this.loadBuffer = function () {
			var a = new XMLHttpRequest, b = this;
			a.open("GET", b.sourcePath, !0);
			a.responseType = "arraybuffer";
			a.onload = function () {
				b.audioPlayer.audioContext.decodeAudioData(a.response, function (a) {
					a &&
					(b.buffer = a, b.isReadyForInit || (b.audioPlayer.eventUsedForInit = d, b.audioPlayer.isReadyForInit = !0))
				}, function (a) {
					throw Error(a);
				})
			};
			a.onerror = function (a) {
				throw Error("BufferLoader: XHR error on " + b.sourcePath);
			};
			a.send()
		};
		this.loadBuffer()
	}, errorSave = function (a, c) {
		var d = c || languageParser.translate("form_validation_messages", "error_save");
		$(a).append('<div class="alert alert-danger fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa fa-ban"></i>' + d + "</div>")
	}, successSave =
		function (a, c) {
			var d = c || languageParser.translate("form_validation_messages", "success_update");
			$(a).append('<div class="alert alert-success fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa fa-check"></i>' + d + "</div>")
		}, addPlaceholderSupport = function (a) {
		"undefined" !== typeof $.fn.placeholder && $.isFunction($.fn.placeholder) && ($(a).find("input").placeholder(), $(a).find("textarea").placeholder())
	};
	Ember.TextArea.reopen({
		placeholder: function () {
			if (this.get("placeholderKey")) {
				var a =
					Handlebars.helpers.I18n.apply(this, ["placeholderKey", {
						hash: {context: "placeholders"},
						contexts: [this],
						data: {}
					}]);
				return a ? a.toString() : ""
			}
		}.property("placeholderKey")
	});
	Ember.TextField.reopen({
		placeholder: function () {
			if (this.get("placeholderKey")) {
				var a = Handlebars.helpers.I18n.apply(this, ["placeholderKey", {
					hash: {context: "placeholders"},
					contexts: [this],
					data: {}
				}]);
				return a ? a.toString() : ""
			}
		}.property("placeholderKey")
	});
	var triggerType = ["widget_loaded", "chat_requested", "send_message"], stringsCheck = ["eq",
			"not", "contains", "ncontains"], limitStringsCheck = ["eq", "not"],
		integerCheck = "eq not lt gt lte gte".split(" "), mainConditionsOptions = {
			time_date: {
				hour_of_day: {
					conditional_select: "integer",
					hint: languageParser.translate("triggers", "hour_of_day_hint", {}, translation),
					values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
				},
				day_of_week: {
					conditional_select: "integer",
					values: [{id: 0, value: "sunday"}, {id: 1, value: "monday"}, {id: 2, value: "tuesday"}, {
						id: 3,
						value: "wednesday"
					}, {id: 4, value: "thursday"}, {
						id: 5,
						value: "friday"
					}, {id: 6, value: "saturday"}]
				},
				time_on_page: {
					conditional_select: "integer",
					hint: languageParser.translate("triggers", "visitor_time_page_hint", {}, translation),
					isTime: !0,
					values: [0, 10, 20, 30, 45, 60, 120, 180, 240, 300, 600, 900, 1200, 1800, 3600]
				},
				time_on_site: {
					conditional_select: "integer",
					hint: languageParser.translate("triggers", "visitor_time_site_hint", {}, translation),
					isTime: !0,
					values: [0, 10, 20, 30, 45, 60, 120, 180, 240, 300, 600, 900, 1200, 1800, 3600]
				},
				still_on_site: {
					conditional_select: "integer_no_op",
					hint: languageParser.translate("triggers",
						"still_on_hint", {}, translation),
					isTime: !0,
					values: [0, 10, 20, 30, 45, 60, 120, 180, 240, 300, 600, 900, 1200, 1800, 3600]
				},
				still_on_page: {
					conditional_select: "integer_no_op",
					hint: languageParser.translate("triggers", "still_on_hint", {}, translation),
					isTime: !0,
					values: [0, 10, 20, 30, 45, 60, 120, 180, 240, 300, 600, 900, 1200, 1800, 3600]
				}
			},
			visitor_location: {
				ip: {
					conditional_select: "string",
					hint: languageParser.translate("triggers", "visitor_ip_hint", {}, translation)
				},
				host_name: {
					conditional_select: "string", hint: languageParser.translate("triggers",
						"visitor_host_hint", {}, translation), tolowercase: !0
				},
				city: {
					conditional_select: "string",
					hint: languageParser.translate("triggers", "visitor_city_hint", {}, translation),
					tolowercase: !0
				},
				country: {
					conditional_select: "limit_string",
					hint: languageParser.translate("triggers", "country_name_hint", {}, translation),
					values: countryList
				}
			},
			prev_visits: {
				previous_visits: {
					conditional_select: "integer",
					hint: languageParser.translate("triggers", "previous_visits_hint", {}, translation)
				}, previous_chats: {
					conditional_select: "integer",
					hint: languageParser.translate("triggers", "previous_chats_hint", {}, translation)
				}
			},
			page_info: {
				page_url: {
					conditional_select: "string",
					hint: languageParser.translate("triggers", "visitor_page_url_hint", {}, translation),
					tolowercase: !0,
					isUrl: !0
				},
				page_count: {
					conditional_select: "integer",
					hint: languageParser.translate("triggers", "visitor_page_count_hint", {}, translation)
				},
				page_title: {
					conditional_select: "string",
					hint: languageParser.translate("triggers", "visitor_page_title_hint", {}, translation)
				},
				previous_page: {
					conditional_select: "string",
					hint: languageParser.translate("triggers", "previous_page_hint", {}, translation),
					tolowercase: !0,
					isUrl: !0
				}
			},
			visitor_info: {
				name: {
					conditional_select: "string",
					hint: languageParser.translate("triggers", "trigger_visitor_name_hint", {}, translation),
					tolowercase: !0
				},
				referrer: {
					conditional_select: "string",
					hint: languageParser.translate("triggers", "visitor_referrer_hint", {}, translation),
					tolowercase: !0
				},
				search_engine: {
					conditional_select: "limit_string",
					values: "Google Yahoo Baidu Yandex Bing Soso Ask Aol Sogou Mywebsearch Youdao Lycos Infospace Blekko Info Dogpile Duckduckgo Webcrawler".split(" "),
					hint: languageParser.translate("triggers", "vistor_search_engine_hint", {}, translation),
					tolowercase: !0
				},
				search_terms: {conditional_select: "string", tolowercase: !0}
			},
			software: {
				user_agent: {
					conditional_select: "string",
					hint: languageParser.translate("triggers", "visitor_user_agent_hint", {}, translation),
					tolowercase: !0
				},
				browser: {
					conditional_select: "limit_string",
					values: ["Chrome", "Firefox", "Safari", "Explorer", "Opera"],
					tolowercase: !0
				},
				os: {
					conditional_select: "limit_string",
					values: "Windows;Mac;Linux;Android;iPhone;iPad;Windows Phone".split(";"),
					tolowercase: !0
				}
			},
			statuses: {
				account_status: {
					conditional_select: "limit_string",
					values: [{
						id: "online",
						value: languageParser.translate("generic", "online", {}, translation)
					}, {id: "away", value: languageParser.translate("generic", "away", {}, translation)}],
					tolowercase: !0
				},
				visitor_status: {
					conditional_select: "limit_string",
					values: [{
						id: "online",
						value: languageParser.translate("generic", "online", {}, translation)
					}, {id: "away", value: languageParser.translate("generic", "away", {}, translation)}],
					tolowercase: !0
				}
			},
			chat_info: {
				chat_request: {
					conditional_select: "boolean",
					hint: languageParser.translate("triggers", "visitor_requesting_chat_hint", {}, translation),
					values: [{
						id: "is_true",
						value: languageParser.translate("triggers", "is_true", {}, translation)
					}, {id: "is_false", value: languageParser.translate("triggers", "is_false", {}, translation)}]
				},
				served: {
					conditional_select: "boolean",
					hint: languageParser.translate("triggers", "visitor_served_hint", {}, translation),
					values: [{id: "is_true", value: languageParser.translate("triggers", "is_true", {}, translation)}, {
						id: "is_false", value: languageParser.translate("triggers",
							"is_false", {}, translation)
					}]
				},
				department: {
					conditional_select: "limit_string", values: function (a) {
						var c = Tawk.webProperties.getDepartmentsByProperty(a);
						return c ? Object.keys(c).map(function (a) {
							return {id: a, value: c[a].n}
						}) : null
					}, trigger_type_select: ["chat_requested"]
				},
				message: {
					conditional_select: "string",
					tolowercase: !0,
					trigger_type_select: ["chat_requested", "send_message"]
				}
			}
		}, actionsOptions = {
			send_message: {type: "string", values: ["agent_name", "message"], inputType: ["textField", "textArea"]},
			wait: {
				type: "integer",
				isTime: !0, values: [0, 10, 20, 30, 45, 60, 120, 180, 240, 300, 600, 900, 1200, 1800, 3600]
			},
			ban_visitor: {type: "string", values: ["reason"], inputType: ["textArea"]},
			ban_ip: {type: "string", values: ["reason"], inputType: ["textArea"]},
			set_visitor_name: {type: "string", values: ["name"], inputType: ["textField"]},
			append_note: {type: "string", values: ["note"], inputType: ["textArea"]},
			replace_note: {type: "string", values: ["note"], inputType: ["textArea"]}
		}, basicChatTemplate = {
			execute: !0,
			match: "all",
			trigger: "chat_requested",
			description: languageParser.translate("triggers",
				"basic_chat_rescue_desc", {}, translation),
			type: "basic_chat_rescue",
			conditions: [{field: "still_on_site", operation: "eq", value: ""}, {
				field: "account_status",
				operation: "not",
				value: "offline"
			}, {field: "served", value: !1}],
			actions: [{action: "send_message", value: ""}]
		}, basicSiteTemplate = {
			execute: !0,
			match: "all",
			trigger: "widget_loaded",
			description: languageParser.translate("triggers", "basic_site_desc", {}, translation),
			type: "basic_site",
			conditions: [{field: "still_on_site", operation: "eq", value: ""}],
			actions: [{
				action: "send_message",
				value: ""
			}]
		}, basicPageTemplate = {
			execute: !0,
			match: "all",
			trigger: "widget_loaded",
			description: languageParser.translate("triggers", "basic_page_desc", {}, translation),
			type: "basic_page",
			conditions: [{field: "still_on_page", operation: "eq", value: ""}, {
				field: "page_url",
				operation: "eq",
				value: ""
			}],
			actions: [{action: "send_message", value: ""}]
		}, extractWidgetSettings = function (a, c, d) {
			var b, e, f, g = !1, h = {}, k = {}, l = {}, m = {}, n = [], p = {
				enabled: !1,
				bubbleName: a.bbl && a.bbl.name ? a.bbl.name : "default",
				bubbleText: a.bbl && a.bbl.txt ? decodeStr(a.bbl.txt) :
					languageParser.translate("widgets", "chat_live_agent"),
				bubbleBgColor: a.bbl && a.bbl.bgc ? a.bbl.bgc : "#7fb06f",
				bubbleTxColor: a.bbl && a.bbl.fgc ? a.bbl.fgc : "#ffffff",
				bubbleWidth: a.bbl && a.bbl.width ? a.bbl.width : 0,
				bubbleHeight: a.bbl && a.bbl.height ? a.bbl.height : 0,
				bubbleBottomOffset: a.bbl && a.bbl.bottomOffset ? a.bbl.bottomOffset : 0,
				bubbleRightOffset: a.bbl && a.bbl.rightOffset ? a.bbl.rightOffset : 0,
				bubbleTopOffset: a.bbl && a.bbl.topOffset ? a.bbl.topOffset : 0,
				bubbleLeftOffset: a.bbl && a.bbl.leftOffset ? a.bbl.leftOffset : 0,
				bubbleInFront: a.bbl &&
				a.bbl.zIndex ? !0 : !1,
				bubbleType: a.bbl && a.bbl.type ? a.bbl.type : "default",
				bubbleRotation: a.bbl && !isNaN(parseInt(a.bbl.rotate, 10)) ? parseInt(a.bbl.rotate, 10) : 0
			}, q = {};
			a.lnc = a.lnc || "en";
			h = a.onlineGreetings ? {
				actionMessage: decodeStr(a.onlineGreetings.actionMessage),
				shortGreeting: decodeStr(a.onlineGreetings.shortMessage),
				longGreeting: decodeStr(a.onlineGreetings.longMessage)
			} : {
				actionMessage: languageParser.translate("widget_preview_translation", a.lnc + "-say_something"),
				shortGreeting: languageParser.translate("widget_preview_translation",
					a.lnc + "-status_message") + " - " + languageParser.translate("widget_preview_translation", a.lnc + "-online"),
				longGreeting: languageParser.translate("widget_preview_translation", a.lnc + "-live_ready")
			};
			k = a.awayGreetings ? {
				shortGreeting: decodeStr(a.awayGreetings.shortMessage),
				longGreeting: decodeStr(a.awayGreetings.longMessage)
			} : {
				shortGreeting: languageParser.translate("widget_preview_translation", a.lnc + "-status_message") + " - " + languageParser.translate("widget_preview_translation", a.lnc + "-away"),
				longGreeting: ""
			};
			a.offlineForm ? m = {
				shortGreeting: decodeStr(a.offlineForm.shortMessage),
				text: decodeStr(a.offlineForm.text),
				fieldsData: a.offlineForm.fields ? Tawk.FormFields.create({
					fields: a.offlineForm.fields,
					formType: "offline"
				}) : null
			} : (m.shortGreeting = languageParser.translate("widget_preview_translation", a.lnc + "-offline"), m.text = languageParser.translate("widget_preview_translation", a.lnc + "-offline_title"));
			m.fieldsData || (m.fieldsData = Tawk.FormFields.create({
				fields: [{
					label: languageParser.translate("widget_preview_translation",
						a.lnc + "-name"), isRequired: !0, type: "name"
				}, {
					label: languageParser.translate("widget_preview_translation", a.lnc + "-email"),
					isRequired: !0,
					type: "email"
				}, {
					label: languageParser.translate("widget_preview_translation", a.lnc + "-message"),
					isRequired: !0,
					type: "message"
				}], formType: "offline"
			}));
			a.rm && (a.rm.nen || a.rm.een || a.rm.den || a.rm.auq || 0 < a.rm.q.length) ? (a.rm.den && n.push({
				label: languageParser.translate("widget_preview_translation", a.lnc + "-department"),
				isRequired: a.rm.drx,
				type: "department"
			}), a.rm.nen && n.push({
				label: languageParser.translate("widget_preview_translation",
					a.lnc + "-name"), isRequired: a.rm.nrx, type: "name"
			}), a.rm.een && n.push({
				label: languageParser.translate("widget_preview_translation", a.lnc + "-email"),
				isRequired: a.rm.erx,
				type: "email"
			}), a.rm.auq && n.push({
				label: languageParser.translate("widget_preview_translation", a.lnc + "-message"),
				isRequired: !1,
				type: "message"
			}), a.rm.q.forEach(function (a) {
				n.push({label: decodeStr(a), isRequired: !1, type: "textArea"})
			}), l = {
				enabled: !0,
				fieldsData: Tawk.FormFields.create({fields: n, formType: "prechat"})
			}, l.text = a.rm.pft ? decodeStr(a.rm.pft) :
				d ? languageParser.translate("widget_preview_translation", a.lnc + "-prechat_title_profile") : languageParser.translate("widget_preview_translation", a.lnc + "-prechat_title")) : l = a.prechatForm ? {
				text: a.prechatForm.text,
				fieldsData: Tawk.FormFields.create({fields: a.prechatForm.fields, formType: "prechat"}),
				enabled: !0
			} : {
				enabled: !1,
				text: d ? languageParser.translate("widget_preview_translation", a.lnc + "-prechat_title_profile") : languageParser.translate("widget_preview_translation", a.lnc + "-prechat_title"),
				fieldsData: Tawk.FormFields.create({formType: "prechat"})
			};
			a.bbl && (p.enabled = !0);
			a.h = parseInt(a.h, 10) || 0;
			a.w = parseInt(a.w, 10) || 0;
			a.minh = parseInt(a.minh, 10) || 0;
			a.minw = parseInt(a.minw, 10) || 0;
			a.mw = a.mw || "round";
			a.dw = a.dw || "full";
			if (0 !== a.h && 0 !== a.w || 0 !== a.minh && 0 !== a.minw) g = !0;
			"inline" === a.t ? (b = a.h || 400, d = a.w || 320) : (b = a.h || 600, d = a.w || 450);
			q = a.ws ? {enabled: !0, settings: a.ws} : {
				enabled: !1, settings: {
					city: null, gpid: null, sch: {
						0: {start: 0, end: 864E5},
						1: {start: 0, end: 864E5},
						2: {start: 0, end: 864E5},
						3: {start: 0, end: 864E5},
						4: {start: 0, end: 864E5},
						5: {start: 0, end: 864E5},
						6: {
							start: 0,
							end: 864E5
						}
					}
				}
			};
			e = a.thm && a.thm.hbg ? a.thm.hbg : "#7fb06f";
			f = a.thm && a.thm.htx ? a.thm.htx : "#ffffff";
			return {
				id: c,
				position: a.pos || "br",
				onClick: a.woc || "max",
				name: a.n ? decodeStr(a.n) : languageParser.translate("generic", "default_text"),
				type: a.t ? languageParser.translate("widgets", a.t) : languageParser.translate("widgets", "inline"),
				isInline: "inline" === a.t,
				isVisible: a.vis ? a.vis : !0,
				canBeDeleted: a.cdlt,
				isEnabled: a.en,
				changeDimensions: g,
				height: b,
				width: d,
				minimizedHeight: a.minh || 40,
				minimizedWidth: a.minw || 320,
				backgroundColor: e,
				textColor: f,
				bubbleSettings: Tawk.BubbleModel.create(p),
				domainWhiteList: a.dwl ? a.dwl : {},
				sessionsShared: !!a.shrs,
				hideOnload: null !== a.hwol ? a.hwol : !1,
				hideOffline: null !== a.hwof ? a.hwof : !1,
				hideWaitTime: null !== a.hwt ? a.hwt : !1,
				disableSound: null !== a.dws ? a.dws : !1,
				hideOnOffline: null !== a.hwof ? a.hwof : !1,
				hideEstimatedWaitTime: null !== a.hwt && void 0 !== a.hwt ? a.hwt : !0,
				showBubblePreview: "inline" === a.t && p.enabled ? !0 : !1,
				isMinimized: "inline" === a.t ? !0 : !1,
				hideOnMobile: null !== a.hwom ? a.hwom : !1,
				isDefault: "default" === c || "page" ===
				c,
				scheduler: q,
				onlineGreetings: Tawk.CopyableModel.create(h),
				awayGreetings: Tawk.CopyableModel.create(k),
				prechatForm: Tawk.CopyableModel.create(l),
				offlineForm: Tawk.CopyableModel.create(m),
				languageCode: a.lnc ? a.lnc : "en",
				topCorner: a.thm ? a.thm.topc : void 0,
				bottomCorner: a.thm ? a.thm.btmc : void 0,
				agentBubbleBg: a.thm && a.thm.aBblBg ? a.thm.aBblBg : shadeColor(e, -0.1),
				agentBubbleTxt: a.thm && a.thm.aBblTx ? a.thm.aBblTx : f,
				visitorBubbleBg: a.thm && a.thm.vBblBg ? a.thm.vBblBg : "#e5e5e5",
				visitorBubbleTxt: a.thm && a.thm.vBblTx ? a.thm.vBblTx :
					"#333333",
				mobileWidget: a.mw,
				desktopWidget: a.dw,
				isRoundMobile: "round" === a.mw,
				isRectangleMobile: "rectangle" === a.mw,
				isRoundDesktop: "min" === a.dw,
				isRectangleDesktop: "full" === a.dw
			}
		}, shadeColor = function (a, c) {
			var d = "#", b, e;
			a = String(a).replace(/[^0-9a-f]/gi, "");
			6 > a.length && (a = a.charAt(0) + a.charAt(0) + a.charAt(1) + a.charAt(1) + a.charAt(2) + a.charAt(2));
			c = c || 0;
			for (e = 0; 6 > e; e += 2) b = parseInt(a[e] + "" + a[e + 1], 16), b = Math.round(Math.min(Math.max(0, b + b * c), 255)).toString(16), d += ("00" + b).substring(b.length);
			return d
		};
	window.readImageFile =
		function (a, c, d, b, e) {
			var f = c ? c / 2 : null, g = d ? d / 2 : null;
			e = e || function () {
			};
			if (a && /image/i.test(a.type)) {
				var h = new FileReader;
				h.onload = function (a) {
					$("<img/>").load(function () {
						c || d ? this.width >= f || this.height >= g ? resizeUploadedImage(this, c, d, b, e) : e(!0, languageParser.translate("pages", "image_size_error", {
							minWidth: f,
							minHeight: g
						})) : e(null, null, this)
					}).attr("src", a.target.result)
				};
				h.readAsDataURL(a)
			} else return e(!0, languageParser.translate("pages", "image_format_error"))
		};
	window.resizeUploadedImage = function (a, c,
	                                       d, b, e) {
		var f = 1, f = 1;
		b = b || document.createElement("canvas");
		a.width === a.height && (b.width = c, b.height = c);
		a.height === d && a.width > c ? (b.width = a.width, b.height = d) : a.height === d && a.width < c ? (b.width = c, f = c / a.width, b.height = a.height * f) : a.width === c && a.height > d ? (b.width = c, b.height = a.height) : d / a.height > c / a.width ? (b.height = d, f = d / a.height, b.width = a.width * f) : d / a.height < c / a.width && (b.width = c, f = c / a.width, b.height = a.height * f);
		c = b.getContext("2d");
		c.fillStyle = "#ffffff";
		c.fillRect(0, 0, b.width, b.height);
		c.drawImage(a, 0, 0, a.width,
			a.height, 0, 0, b.width, b.height);
		e(null, null, b)
	};
	window.scaleImage = function (a, c, d, b, e) {
		var f = c.getContext("2d"), g = d.getContext("2d"), h = a.width, k = a.height;
		f.clearRect(0, 0, c.width, c.height);
		g.clearRect(0, 0, d.width, d.height);
		c.setAttribute("width", b * h);
		c.setAttribute("height", b * k);
		d.setAttribute("width", b * h);
		d.setAttribute("height", b * k);
		f.fillStyle = "rgb(255, 255, 255)";
		f.fillRect(0, 0, c.width, c.height);
		g.fillStyle = "rgb(255, 255, 255)";
		g.fillRect(0, 0, d.width, d.height);
		f.drawImage(a, 0, 0, h, k, 0, 0, b * h, b * k);
		g.drawImage(a, 0, 0, h, k, 0, 0, b * h, b * k);
		e()
	};
	window.cropImage = function (a, c, d, b, e, f, g, h) {
		var k, l, m = document.createElement("canvas"), n = new Image;
		m.setAttribute("width", b);
		m.setAttribute("height", e);
		k = m.getContext("2d");
		k.fillStyle = "rgb(255, 255, 255)";
		k.fillRect(0, 0, b, e);
		n.onload = function () {
			k.drawImage(n, c, d, f, g, 0, 0, b, e);
			l = m.toDataURL("image/jpeg", 1);
			h(l)
		};
		n.src = a.toDataURL("image/png")
	};
	window.loadCamera = function (a, c) {
		navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia ||
			navigator.msGetUserMedia;
		navigator.getUserMedia ? navigator.getUserMedia({video: !0}, function (a) {
			c(null, a)
		}, function () {
			c(!0, languageParser.translate("form_validation_messages", "camera_load_error"))
		}) : a.webcam({
			swffile: GLOBAL_STATIC_URL + "/scripts/sAS3Cam.swf", noCameraFound: function () {
				c(!0, languageParser.translate("pages", "camera_unavailable"))
			}, swfApiFail: function () {
				c(!0, languageParser.translate("pages", "camera_plugin_error"))
			}, cameraDisabled: function () {
				c(!0, languageParser.translate("pages", "camera_no_access"))
			},
			cameraEnabled: function () {
				c(null, this)
			}
		})
	};
	window.resizeForChat = function (a, c, d, b) {
		var e, f, g = new Image, h = document.createElement("canvas");
		h.setAttribute("width", d.width);
		h.setAttribute("height", d.height);
		f = h.getContext("2d");
		f.fillStyle = "rgb(255, 255, 255)";
		f.fillRect(0, 0, d.width, d.height);
		g.onload = function () {
			f.drawImage(g, 0, 0, c.width, c.height, 0, 0, d.width, d.height);
			e = h.toDataURL("image/jpeg", 1);
			b(e)
		};
		g.src = a
	};
	(function () {
		var a = {
			init: function (a, d, b) {
				"function" === typeof a && (d = a, a = {});
				var e = {
					showInput: !0,
					clickoutFiresChange: !0, showButtons: !1, preferredFormat: "hex", change: function (b) {
						a.preferredFormat && "rgb" === a.preferredFormat ? d(b.toRgb()) : d(b.toHexString())
					}, move: function (b) {
						a.preferredFormat && "rgb" === a.preferredFormat ? d(b.toRgb()) : d(b.toHexString())
					}, beforeShow: function () {
						$(b).trigger("beforeShow")
					}, show: function () {
						$(b).trigger("show")
					}, hide: function () {
						$(b).trigger("hide")
					}
				};
				Object.keys(a).forEach(function (b) {
					e[b] = a[b]
				});
				$(this).spectrum(e)
			}, setColor: function (a) {
				$(this).spectrum("set", a)
			}, getColor: function () {
				return $(this).spectrum("get")
			},
			showSelector: function () {
				$(this).spectrum("show")
			}, destroy: function () {
				$(this).spectrum("destroy")
			}, hideSelector: function () {
				$(this).spectrum("hide")
			}
		};
		$.fn.ColorSelector = function (c) {
			if (a[c]) return a[c].apply(this, Array.prototype.slice.call(arguments, 1));
			if ("object" === typeof c || "function" === typeof c || !c) return a.init.apply(this, arguments)
		}
	})();
	var parseHexString = function (a) {
		4 === a.length && (a = a[0] + a[1] + a[1] + a[2] + a[2] + a[3] + a[3]);
		return a
	}, parseRgbaColorCode = function (a) {
		var c = a.length - 1;
		return -1 === a.indexOf("rgb(") ?
			a : "rgba(" + a.substring(4, c) + ",1)"
	}, FileUploadHandler = function () {
	};
	FileUploadHandler.prototype.getUploadHandler = function (a) {
		var c = GLOBAL_UPLOAD_URL + "/upload/handle?_t=" + Date.now();
		if ("XDomainRequest" in window && null !== window.XDomainRequest) {
			var d = new XDomainRequest;
			d.open("get", c);
			d.onload = function () {
				var b = new ActiveXObject("Microsoft.XMLDOM"), c = $.parseJSON(d.responseText);
				b.async = !1;
				if (null === c || "undefined" === typeof c) c = $.parseJSON(data.firstChild.textContent);
				a(null, c)
			};
			d.onerror = function () {
				a(!0)
			};
			d.send()
		} else $.ajax({type: "GET", url: c, dataType: "json", crossDomain: !0, cache: !1}).done(function (b) {
			a(null, b)
		}).fail(function (b, c) {
			a(!0)
		})
	};
	FileUploadHandler.prototype.sendFileAjax = function (a, c, d) {
		var b;
		if (52428800 < a.size) return d(!0, "limit50");
		if ($("body").hasClass("mobile-detected") && 2097152 < a.size) return d(!0, "limit2");
		b = new FormData;
		b.append("upload", a, a.name || a.filename);
		$.ajax({type: "POST", url: c, data: b, cache: !1, contentType: !1, processData: !1}).done(function (a) {
			if (a.error) return d(!0);
			d()
		}).fail(function () {
			return d(!0)
		})
	};
	FileUploadHandler.prototype.sendFileIFrame = function (a, c, d, b) {
		a += "-iframe";
		var e = $('<iframe src="javascript:false;" name="' + a + '" id="' + a + '" />');
		e.hide();
		c.setAttribute("target", a);
		c.setAttribute("action", d);
		e.appendTo("body");
		e.load(function (a) {
			var c, d, k;
			try {
				d = e.contentWindow.document;
				k = d.body.innerHTML;
				"<pre>" == k.slice(0, 5).toLowerCase() && "</pre>" == k.slice(-6).toLowerCase() && (k = d.body.firstChild.firstChild.nodeValue);
				c = JSON.parse(k);
				if (c.error) return b(!0);
				b();
				e.remove()
			} catch (l) {
				b(!0), e.remove()
			}
		});
		c.submit()
	};
	FileUploadHandler.prototype.removeFileAjax = function (a, c) {
		$.ajax({type: "GET", url: a, cache: !1, contentType: !1, processData: !1}).done(function (a) {
			if (a.error) return c(!0);
			c()
		}).fail(function () {
			return c(!0)
		})
	};
	FileUploadHandler.prototype.uploadFile = function (a, c, d, b, e) {
		d = GLOBAL_UPLOAD_URL + "/upload/page/agent?handle=" + a + "&pageId=" + d + "&agentSessionId=" + Tawk.userController.sessionKey;
		b ? this.sendFileIFrame(a, c, d, e) : this.sendFileAjax(c, d, e)
	};
	FileUploadHandler.prototype.uploadBubbleFile = function (a, c,
	                                                         d, b, e) {
		d = GLOBAL_UPLOAD_URL + "/upload/bubble?handle=" + a + "&pageId=" + d + "&agentSessionId=" + Tawk.userController.sessionKey;
		b ? this.sendFileIFrame(a, c, d, e) : this.sendFileAjax(c, d, e)
	};
	FileUploadHandler.prototype.removeBubbleFile = function (a, c, d) {
		this.removeFileAjax(GLOBAL_UPLOAD_URL + "/files/remove/bubble?file=" + a + "&pageId=" + c + "&agentSessionId=" + Tawk.userController.sessionKey, d)
	};
	FileUploadHandler.prototype.uploadProgress = function (a) {
		var c = $("#upload-" + a.handle);
		c.length && c.trigger("progressUpdate", a.progress)
	};
	FileUploadHandler.prototype.uploadComplete = function (a) {
		var c = $("#upload-" + a.handle);
		c.length && c.trigger("uploadComplete", a)
	};
	FileUploadHandler.prototype.uploadAttachment = function (a, c, d, b, e, f) {
		d = GLOBAL_UPLOAD_URL + "/upload/ticketing/attachment?handle=" + a + "&pageId=" + d + "&ticketId=" + b + "&agentSessionId=" + Tawk.userController.sessionKey;
		if (e) {
			a += "-iframe";
			var g = $('<iframe src="javascript:false;" name="' + a + '" id="' + a + '" />');
			g.hide();
			c.setAttribute("target", a);
			c.setAttribute("action", d);
			g.appendTo("body");
			g.load(function (a) {
				var b;
				try {
					var c = g.contentDocument ? g.contentDocument : g.contentWindow.document, d = c.body.innerHTML;
					"<pre>" == d.slice(0, 5).toLowerCase() && "</pre>" == d.slice(-6).toLowerCase() && (d = c.body.firstChild.firstChild.nodeValue);
					b = JSON.parse(d);
					if (b.error) return f(!0);
					f();
					g.remove()
				} catch (e) {
					f(!0), g.remove()
				}
			});
			c.submit()
		} else {
			if (52428800 < c.size) return f(!0, "limit50");
			if ($("body").hasClass("mobile-detected") && 2097152 < c.size) return f(!0, "limit2");
			a = new FormData;
			a.append("upload", c, c.name || c.filename);
			$.ajax({type: "POST", url: d, data: a, cache: !1, contentType: !1, processData: !1}).done(function (a) {
				if (a.error) return f(!0);
				f()
			}).fail(function () {
				return f(!0)
			})
		}
	};
	FileUploadHandler.prototype.uploadAgentChatFile = function (a, c, d, b, e) {
		d = GLOBAL_UPLOAD_URL + "/upload/agent-chat/agent?handle=" + a + "&groupId=" + d + "&agentSessionId=" + Tawk.userController.sessionKey;
		b ? this.sendFileIFrame(a, c, d, e) : this.sendFileAjax(c, d, e)
	};
	var bubbleSettings = {
		1: {
			topOffset: 0, rightOffset: 10, zIndex: 0, isRotatable: !1, backgroundColor: "#801a1f", textColor: "#ffffff",
			changeWidgetSize: {width: 252, height: 40}, width: 252, height: 136
		},
		2: {
			topOffset: -20,
			rightOffset: 38,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#2f5a75",
			textColor: "#ffffff",
			width: 157,
			height: 125,
			changeWidgetSize: {width: 280, height: 40}
		},
		3: {
			topOffset: -30,
			rightOffset: 10,
			zIndex: 1,
			isRotatable: !1,
			backgroundColor: "#ea5b28",
			textColor: "#ffffff",
			width: 251,
			height: 108
		},
		4: {
			topOffset: 0,
			rightOffset: 28,
			zIndex: 0,
			isRotatable: !0,
			backgroundColor: "#107575",
			textColor: "#ffffff",
			width: 233,
			height: 88
		},
		5: {
			topOffset: 3,
			rightOffset: 5,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#e99300",
			textColor: "#ffffff",
			width: 260,
			height: 90,
			changeWidgetSize: {width: 255, height: 40}
		},
		6: {
			topOffset: -7,
			rightOffset: 35,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#d51419",
			textColor: "#ffffff",
			width: 193,
			height: 138
		},
		7: {
			topOffset: -16,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 198,
			backgroundColor: "#fad100",
			textColor: "#000000",
			height: 114
		},
		8: {
			topOffset: -10,
			rightOffset: 10,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#8dbf43",
			textColor: "#ffffff",
			width: 244,
			height: 133
		},
		9: {
			topOffset: -16,
			rightOffset: 10,
			zIndex: 1,
			isRotatable: !1,
			backgroundColor: "#d7065b",
			textColor: "#ffffff",
			width: 188,
			height: 95
		},
		10: {
			topOffset: -15,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			isCenter: !0,
			width: 192,
			backgroundColor: "#000000",
			textColor: "#ffffff",
			height: 89
		},
		11: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 241,
			backgroundColor: "#a9a798",
			textColor: "#ffffff",
			height: 58
		},
		12: {
			topOffset: 0,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 238,
			backgroundColor: "#85cbcd",
			textColor: "#ffffff",
			changeWidgetSize: {width: 248, height: 40},
			height: 71
		},
		13: {
			topOffset: 0,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 188,
			backgroundColor: "#505570",
			textColor: "#ffffff",
			height: 96
		},
		14: {
			topOffset: 0,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			isCenter: !0,
			width: 137,
			backgroundColor: "#801a1f",
			textColor: "#ffffff",
			height: 129
		},
		15: {
			topOffset: -12,
			rightOffset: 25,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#4fa9df",
			textColor: "#ffffff",
			width: 238,
			height: 89
		},
		16: {
			topOffset: -22, rightOffset: 23, zIndex: 1, isRotatable: !1, backgroundColor: "#00a79d",
			textColor: "#ffffff", width: 155, height: 65
		},
		17: {
			topOffset: -14,
			rightOffset: 26,
			zIndex: 1,
			isRotatable: !1,
			backgroundColor: "#caab0d",
			textColor: "#ffffff",
			width: 213,
			height: 132
		},
		18: {
			topOffset: -32,
			rightOffset: 10,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#a9a798",
			textColor: "#ffffff",
			width: 186,
			height: 139
		},
		19: {
			topOffset: -25,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !1,
			backgroundColor: "#0e7575",
			textColor: "#ffffff",
			width: 97,
			height: 95
		},
		20: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 237,
			backgroundColor: "#ec8500",
			textColor: "#ffffff",
			height: 94
		},
		21: {
			topOffset: 0,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 180,
			backgroundColor: "#615d5b",
			textColor: "#ffffff",
			height: 92
		},
		22: {
			topOffset: -1,
			rightOffset: 14,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#a9a798",
			textColor: "#ffffff",
			width: 240,
			height: 75
		},
		23: {
			topOffset: 3,
			rightOffset: 14,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#353334",
			textColor: "#ffffff",
			width: 257,
			height: 87
		},
		24: {
			topOffset: -15,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			isCenter: !0,
			width: 201,
			backgroundColor: "#087275",
			textColor: "#ffffff",
			height: 102
		},
		25: {
			topOffset: -7,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 215,
			backgroundColor: "#684026",
			textColor: "#ffffff",
			height: 103
		},
		26: {
			topOffset: -29,
			rightOffset: 30,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#c1d34e",
			textColor: "#ffffff",
			width: 226,
			height: 105
		},
		27: {
			topOffset: -19,
			rightOffset: 14,
			zIndex: 0,
			isRotatable: !0,
			backgroundColor: "#1c3235",
			textColor: "#ffffff",
			width: 232,
			height: 102
		},
		28: {
			topOffset: 4, rightOffset: 10, zIndex: 0, isRotatable: !0, backgroundColor: "#7c2939", textColor: "#ffffff",
			width: 256, height: 129
		},
		29: {
			topOffset: -2,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			isCenter: !0,
			width: 170,
			backgroundColor: "#1db0bf",
			textColor: "#ffffff",
			height: 88
		},
		30: {
			topOffset: -12,
			rightOffset: 42,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#146ca2",
			textColor: "#ffffff",
			width: 210,
			height: 75
		},
		31: {
			topOffset: -17,
			rightOffset: 42,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#1f7fbd",
			textColor: "#ffffff",
			width: 131,
			height: 97
		},
		32: {
			topOffset: -30,
			rightOffset: 10,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#323031",
			textColor: "#ffffff",
			width: 122,
			height: 127
		},
		33: {
			topOffset: -28,
			rightOffset: 20,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#000000",
			textColor: "#ffffff",
			width: 183,
			height: 128
		},
		34: {
			topOffset: -10,
			rightOffset: 28,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#edb326",
			textColor: "#ffffff",
			width: 142,
			height: 108
		},
		35: {
			topOffset: -10,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !0,
			isCenter: !0,
			width: 198,
			backgroundColor: "#d96b28",
			textColor: "#ffffff",
			height: 117
		},
		36: {
			topOffset: -26,
			rightOffset: 46,
			zIndex: 0,
			isRotatable: !0,
			backgroundColor: "#edb326",
			textColor: "#ffffff",
			width: 233,
			height: 99,
			changeWidgetSize: {width: 265, height: 40}
		},
		37: {
			topOffset: -14,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !0,
			isCenter: !0,
			width: 211,
			backgroundColor: "#615d5b",
			textColor: "#ffffff",
			height: 95
		},
		38: {
			topOffset: 3,
			rightOffset: "100%",
			zIndex: 0,
			isRotatable: !1,
			width: 142,
			leftPadding: 5,
			backgroundColor: "#ffce03",
			textColor: "#ffffff",
			height: 108
		},
		39: {
			topOffset: -32,
			rightOffset: 10,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#ffce03",
			textColor: "#ffffff",
			width: 190,
			height: 156
		},
		40: {
			topOffset: -6, rightOffset: 0, zIndex: 1,
			isRotatable: !0, isCenter: !0, width: 190, backgroundColor: "#b1cab4", textColor: "#ffffff", height: 110
		},
		41: {
			topOffset: -34,
			rightOffset: 10,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#48899a",
			textColor: "#ffffff",
			width: 134,
			height: 144
		},
		42: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !0,
			isCenter: !0,
			width: 142,
			backgroundColor: "#00b7a3",
			textColor: "#ffffff",
			height: 70
		},
		43: {
			topOffset: -10,
			rightOffset: "100%",
			zIndex: 1,
			isRotatable: !0,
			width: 251,
			leftPadding: -5,
			backgroundColor: "#000000",
			textColor: "#ffffff",
			height: 104
		},
		44: {
			topOffset: -32,
			rightOffset: 15,
			zIndex: 1,
			isRotatable: !0,
			width: 191,
			backgroundColor: "#a9a798",
			textColor: "#ffffff",
			height: 163
		},
		45: {
			topOffset: -9,
			rightOffset: "100%",
			zIndex: 1,
			isRotatable: !0,
			width: 211,
			leftPadding: 15,
			backgroundColor: "#1db0bf",
			textColor: "#ffffff",
			height: 166
		},
		46: {
			topOffset: -29,
			rightOffset: 60,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#1db0bf",
			textColor: "#ffffff",
			width: 157,
			height: 123
		},
		47: {
			topOffset: -10,
			rightOffset: 10,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#a9a798",
			textColor: "#ffffff",
			width: 223,
			height: 183
		},
		48: {
			topOffset: -13,
			rightOffset: 28,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#00a79d",
			textColor: "#ffffff",
			width: 229,
			height: 166
		},
		49: {
			topOffset: -8,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			isCenter: !0,
			width: 254,
			backgroundColor: "#3a3e4b",
			textColor: "#ffffff",
			height: 74
		},
		50: {
			topOffset: 2,
			rightOffset: "100%",
			zIndex: 0,
			isRotatable: !1,
			width: 252,
			leftPadding: 4,
			backgroundColor: "#5b215f",
			textColor: "#ffffff",
			height: 117
		},
		51: {
			topOffset: -7,
			rightOffset: 26,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#7bcdef",
			textColor: "#ffffff",
			width: 141,
			height: 124
		},
		52: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 230,
			backgroundColor: "#1db0bf",
			textColor: "#ffffff",
			height: 118
		},
		53: {
			topOffset: -10,
			rightOffset: 10,
			zIndex: 1,
			isRotatable: !1,
			backgroundColor: "#575757",
			textColor: "#ffffff",
			width: 230,
			height: 163
		},
		54: {
			topOffset: -27,
			rightOffset: 5,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#bacf39",
			textColor: "#ffffff",
			width: 277,
			height: 103
		},
		55: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			isCenter: !0,
			width: 244,
			backgroundColor: "#f9d7e1",
			textColor: "#000000",
			height: 81
		},
		56: {
			topOffset: 5,
			rightOffset: "100%",
			zIndex: 0,
			isRotatable: !0,
			width: 218,
			leftPadding: 4,
			backgroundColor: "#5fc4e4",
			textColor: "#ffffff",
			height: 131
		},
		57: {
			topOffset: -1,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !0,
			isCenter: !0,
			width: 219,
			backgroundColor: "#50c1e3",
			textColor: "#ffffff",
			height: 139
		},
		58: {
			topOffset: -26,
			rightOffset: 25,
			zIndex: 1,
			isRotatable: !0,
			width: 213,
			backgroundColor: "#52b9a3",
			textColor: "#ffffff",
			height: 105
		},
		59: {
			topOffset: 5, rightOffset: 10, zIndex: 0, isRotatable: !0, backgroundColor: "#ffdf33", textColor: "#000000",
			width: 251, height: 100
		},
		60: {
			topOffset: -19,
			rightOffset: 13,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#37acbf",
			textColor: "#ffffff",
			width: 264,
			height: 100
		},
		61: {
			topOffset: -32,
			rightOffset: 29,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#bb2384",
			textColor: "#ffffff",
			width: 235,
			height: 113
		},
		62: {
			topOffset: -25,
			rightOffset: 4,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#fdc922",
			textColor: "#000000",
			width: 259,
			height: 74
		},
		63: {
			topOffset: 5,
			rightOffset: "100%",
			zIndex: 0,
			isRotatable: !1,
			width: 247,
			backgroundColor: "#3a3e4b",
			textColor: "#ffffff",
			height: 117
		},
		64: {
			topOffset: -12,
			rightOffset: "100%",
			zIndex: 1,
			isRotatable: !1,
			width: 224,
			backgroundColor: "#63c1c7",
			textColor: "#ffffff",
			height: 95
		},
		65: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 184,
			backgroundColor: "#eb622b",
			textColor: "#ffffff",
			height: 168
		},
		66: {
			topOffset: -28,
			rightOffset: 10,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#eb622b",
			textColor: "#ffffff",
			width: 151,
			height: 151
		},
		67: {
			topOffset: -9,
			rightOffset: 30,
			zIndex: 1,
			isRotatable: !1,
			backgroundColor: "#e72d61",
			textColor: "#ffffff",
			width: 131,
			height: 123
		},
		68: {
			topOffset: 3,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 252,
			backgroundColor: "#f49a22",
			textColor: "#ffffff",
			height: 91
		},
		69: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			isCenter: !0,
			width: 133,
			backgroundColor: "#8ecaf0",
			textColor: "#ffffff",
			height: 171
		},
		70: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			isCenter: !0,
			width: 163,
			backgroundColor: "#bbb5d7",
			textColor: "#ffffff",
			height: 133
		},
		71: {
			topOffset: -1,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !1,
			isCenter: !0,
			width: 161,
			backgroundColor: "#000000",
			textColor: "#ffffff",
			height: 120
		},
		72: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !0,
			isCenter: !0,
			width: 253,
			backgroundColor: "#000000",
			textColor: "#ffffff",
			height: 69
		},
		73: {
			topOffset: -30,
			rightOffset: 10,
			zIndex: 1,
			isRotatable: !1,
			backgroundColor: "#60bfbc",
			textColor: "#ffffff",
			width: 134,
			height: 134,
			changeWidgetSize: {width: 320, height: 40}
		},
		74: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			isCenter: !0,
			width: 229,
			backgroundColor: "#abb1ba",
			textColor: "#ffffff",
			height: 175
		},
		75: {
			topOffset: 5, rightOffset: 14, zIndex: 0,
			isRotatable: !0, backgroundColor: "#ffd035", textColor: "#000000", width: 246, height: 62
		},
		76: {
			topOffset: 5,
			rightOffset: "100%",
			zIndex: 0,
			isRotatable: !0,
			width: 247,
			leftPadding: 4,
			backgroundColor: "#eb622b",
			textColor: "#ffffff",
			height: 82
		},
		77: {
			topOffset: -7,
			rightOffset: "100%",
			zIndex: 0,
			isRotatable: !0,
			width: 252,
			leftPadding: 0,
			backgroundColor: "#30b4aa",
			textColor: "#ffffff",
			height: 69,
			changeWidgetSize: {width: 260, height: 40}
		},
		78: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			width: 252,
			isCenter: !0,
			backgroundColor: "#231e20",
			textColor: "#ffffff",
			height: 64,
			changeWidgetSize: {width: 252, height: 40}
		},
		79: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			width: 253,
			isCenter: !0,
			backgroundColor: "#e9515a",
			textColor: "#ffffff",
			height: 143,
			changeWidgetSize: {width: 253, height: 40}
		},
		80: {
			topOffset: -1,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !1,
			width: 171,
			isCenter: !0,
			backgroundColor: "#1db0bf",
			textColor: "#ffffff",
			height: 160
		},
		81: {
			topOffset: -10,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !0,
			backgroundColor: "#5fbba0",
			textColor: "#ffffff",
			width: 212,
			height: 131
		},
		82: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			width: 253,
			isCenter: !0,
			backgroundColor: "#505570",
			textColor: "#ffffff",
			height: 57,
			changeWidgetSize: {width: 253, height: 40}
		},
		83: {
			topOffset: 5,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 246,
			isCenter: !0,
			backgroundColor: "#000000",
			textColor: "#ffffff",
			height: 139,
			changeWidgetSize: {width: 246, height: 40}
		},
		84: {
			topOffset: -1,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !1,
			width: 254,
			isCenter: !0,
			backgroundColor: "#231e20",
			textColor: "#ffffff",
			height: 196,
			changeWidgetSize: {
				width: 254,
				height: 40
			}
		},
		85: {
			topOffset: -18,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !0,
			width: 241,
			isCenter: !0,
			backgroundColor: "#30b4aa",
			textColor: "#ffffff",
			height: 175
		},
		86: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 200,
			isCenter: !0,
			backgroundColor: "#231e20",
			textColor: "#ffffff",
			height: 284
		},
		87: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			width: 247,
			isCenter: !0,
			backgroundColor: "#e9515a",
			textColor: "#ffffff",
			height: 76
		},
		88: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 203,
			isCenter: !0,
			backgroundColor: "#1db0bf",
			textColor: "#ffffff",
			height: 438
		},
		89: {
			topOffset: 4,
			rightOffset: 40,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#5fbba0",
			textColor: "#ffffff",
			width: 239,
			height: 339
		},
		90: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 231,
			isCenter: !0,
			backgroundColor: "#505570",
			textColor: "#ffffff",
			height: 289
		},
		91: {
			topOffset: 4,
			rightOffset: 15,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#000000",
			textColor: "#ffffff",
			width: 238,
			height: 121
		},
		92: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			width: 250,
			isCenter: !0,
			backgroundColor: "#231e20",
			textColor: "#ffffff",
			height: 148
		},
		93: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 252,
			isCenter: !0,
			backgroundColor: "#63c1c7",
			textColor: "#ffffff",
			height: 200
		},
		94: {
			topOffset: 4,
			rightOffset: 15,
			zIndex: 0,
			isRotatable: !0,
			backgroundColor: "#231e20",
			textColor: "#ffffff",
			width: 192,
			height: 161
		},
		95: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 237,
			isCenter: !0,
			backgroundColor: "#ffd906",
			textColor: "#000000",
			height: 200
		},
		96: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			width: 233,
			isCenter: !0,
			backgroundColor: "#1db0bf",
			textColor: "#ffffff",
			height: 85
		},
		97: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 171,
			isCenter: !0,
			backgroundColor: "#000000",
			textColor: "#ffffff",
			height: 122
		},
		98: {
			topOffset: 4,
			rightOffset: "100%",
			zIndex: 0,
			isRotatable: !1,
			width: 171,
			backgroundColor: "#505570",
			textColor: "#ffffff",
			height: 137
		},
		99: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 141,
			isCenter: !0,
			backgroundColor: "#231e20",
			textColor: "#ffffff",
			height: 222
		},
		100: {
			topOffset: 4, rightOffset: 0, zIndex: 0, isRotatable: !1, width: 186, isCenter: !0,
			backgroundColor: "#ec661d", textColor: "#ffffff", height: 174
		},
		101: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 87,
			isCenter: !0,
			backgroundColor: "#63c1c7",
			textColor: "#ffffff",
			height: 150
		},
		102: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 79,
			isCenter: !0,
			backgroundColor: "#231e20",
			textColor: "#ffffff",
			height: 158
		},
		103: {
			topOffset: 4,
			rightOffset: "100%",
			zIndex: 0,
			isRotatable: !1,
			width: 222,
			backgroundColor: "#ffd906",
			textColor: "#000000",
			height: 255
		},
		104: {
			topOffset: 4, rightOffset: 0, zIndex: 0, isRotatable: !1,
			width: 255, isCenter: !0, backgroundColor: "#231e20", textColor: "#ffffff", height: 291
		},
		105: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			width: 103,
			isCenter: !0,
			backgroundColor: "#000000",
			textColor: "#ffffff",
			height: 232
		},
		106: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			width: 151,
			isCenter: !0,
			backgroundColor: "#505570",
			textColor: "#ffffff",
			height: 276
		},
		107: {
			topOffset: 4,
			rightOffset: 25,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#ec6698",
			textColor: "#ffffff",
			width: 117,
			height: 121
		},
		108: {
			topOffset: 4, rightOffset: 25,
			zIndex: 0, isRotatable: !1, backgroundColor: "#913b8e", textColor: "#ffffff", width: 139, height: 118
		},
		109: {
			topOffset: 4,
			rightOffset: 25,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#231e20",
			textColor: "#ffffff",
			width: 146,
			height: 118
		},
		110: {
			topOffset: -14,
			rightOffset: 25,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#e73c3b",
			textColor: "#ffffff",
			width: 114,
			height: 114
		},
		111: {
			topOffset: -14,
			rightOffset: 25,
			zIndex: 0,
			isRotatable: !1,
			backgroundColor: "#ffd906",
			textColor: "#ffffff",
			width: 114,
			height: 114
		},
		112: {
			topOffset: -14, rightOffset: 25,
			zIndex: 0, isRotatable: !1, backgroundColor: "#e8408f", textColor: "#ffffff", width: 114, height: 114
		},
		113: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#e52728",
			textColor: "#ffffff",
			height: 114
		},
		114: {
			topOffset: 4,
			rightOffset: 10,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#505570",
			textColor: "#ffffff",
			height: 114
		},
		115: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#e73c3b",
			textColor: "#ffffff",
			height: 114
		},
		116: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#4cc2f0",
			textColor: "#ffffff",
			height: 114
		},
		117: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#359936",
			textColor: "#ffffff",
			height: 114
		},
		118: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !0,
			width: 114,
			isCenter: !0,
			backgroundColor: "#ec661d",
			textColor: "#ffffff",
			height: 114
		},
		119: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#99c33a",
			textColor: "#ffffff",
			height: 114
		},
		120: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#cccc66",
			textColor: "#ffffff",
			height: 114
		},
		121: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#4267af",
			textColor: "#ffffff",
			height: 114
		},
		122: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#505570",
			textColor: "#ffffff",
			height: 114
		},
		123: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#99c33a",
			textColor: "#ffffff",
			height: 114
		},
		124: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#f4973a",
			textColor: "#ffffff",
			height: 114
		},
		125: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 114,
			isCenter: !0,
			backgroundColor: "#ec6698",
			textColor: "#ffffff",
			height: 114
		},
		126: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 0,
			isRotatable: !1,
			width: 93,
			isCenter: !0,
			backgroundColor: "#ec661d",
			textColor: "#ffffff",
			height: 132
		},
		127: {
			topOffset: 4, rightOffset: 14, zIndex: 0, isRotatable: !1, backgroundColor: "#99c33a",
			textColor: "#ffffff", width: 130, height: 235
		},
		128: {
			topOffset: 4,
			rightOffset: 0,
			zIndex: 1,
			isRotatable: !1,
			width: 130,
			isCenter: !0,
			backgroundColor: "#231e20",
			textColor: "#ffffff",
			height: 184
		}
	}, TagAgent = function (a, c, d, b, e, f) {
		this.lastAssignIndex = 0;
		this.fullMessage = null;
		this.agentListEl = d;
		this.formatEl = e;
		this.shortcutsListEl = b;
		this.lastMessage = this.richMessage = this.currentMessage = "";
		this.assignmentIndex = [];
		this.tagRegex = /@\[([a-z0-9]){24,24}(:)(.+?)\]/g;
		this.isIE = /MSIE/.test(navigator.userAgent);
		this.placeholderElement =
			$('<p class="placeholder">' + (f || languageParser.translate("placeholders", "enter_message")) + "</p>");
		this.initializeElement(a, c)
	};
	TagAgent.prototype.initializeElement = function (a, c) {
		var d, b, e, f = this;
		this.formatEl.prop("selectionStart", 0);
		this.formatEl.prop("selectionEnd", 0);
		this.formatEl.append(this.placeholderElement);
		this.agentListEl.typeahead({hint: !1, highlight: !1, minLength: 1}, {
			source: function (c, d) {
				e = [];
				b = {};
				searchQuery = c.trim().toLowerCase();
				a.forEach(function (a) {
					var c = decodeStr(a.name), d = c.split(" ");
					c.toLowerCase().substring(0, searchQuery.length) === searchQuery ? (b[c] = a, e.push(c)) : d.every(function (d) {
						return d.toLowerCase().substring(0, searchQuery.length) === searchQuery ? (b[c] = a, e.push(c), !1) : !0
					})
				});
				d(e)
			}
		}).on("typeahead:selected", function (a, c) {
			var d, e, m;
			m = b[c];
			f.formatEl.html();
			var n = window.getSelection(), p = n.getRangeAt(0);
			e = n.anchorNode.textContent;
			var q = n.anchorOffset;
			d = 0 !== f.assignIndex ? e.substring(0, f.assignIndex) : "";
			e = " " + e.substring(q, e.length);
			m = f.isIE ? $('<span class="highlight" contentEditable="true" data-id="' +
				m.id + '">&nbsp;' + encodeStr(c) + "&nbsp;</span>") : $('<span class="highlight" contenteditable="false" data-id="' + m.id + '">&nbsp;' + encodeStr(c) + "&nbsp;</span>");
			p.selectNode(n.anchorNode);
			p.deleteContents();
			p.insertNode(document.createTextNode(e));
			p.insertNode(m.get(0));
			p.insertNode(document.createTextNode(d));
			n.removeAllRanges();
			n.addRange(p);
			f.setCursor(m.get(0));
			f.agentListEl.val("");
			f.agentListEl.typeahead("val", "");
			f.agentListEl.typeahead("close")
		});
		this.shortcutsListEl.typeahead({
			hint: !1, highlight: !0,
			minLength: 0
		}, {
			source: function (a, b) {
				e = [];
				d = {};
				searchQuery = a.trim().toLowerCase();
				searchQuery = searchQuery.replace("/", "");
				c.forEach(function (a) {
					var b = a.key, c = b + " : " + a.m;
					a.o && (c += " [+]");
					searchQuery && b.toLowerCase().substring(0, searchQuery.length) !== searchQuery || (d[c] = a, e.push(c))
				});
				b(e)
			}
		}).on("typeahead:selected", function (a, b) {
			var c, e, m, n = d[b], p = window.getSelection(), q = p.getRangeAt(0);
			e = p.anchorNode.textContent;
			m = p.anchorOffset;
			n && (c = 0 !== f.assignIndex ? e.substring(0, f.assignIndex) : "", e = e.substring(m,
				e.length), m = n.m, n.o && (m = m + "\n" + n.o.replace(/\[option\]/g, "*")), q.selectNode(p.anchorNode), q.deleteContents(), e = c + m + e, e = document.createTextNode(e), q.insertNode(e), p.removeAllRanges(), p.addRange(q), q.setStart(e, c.length + n.m.length), q.collapse(!0), p.removeAllRanges(), p.addRange(q), f.shortcutsListEl.val(""), f.shortcutsListEl.typeahead("val", ""), f.shortcutsListEl.typeahead("close"))
		});
		this.formatEl.on("keydown", function (a) {
			var b;
			if (40 === a.keyCode) f.agentListEl.typeahead("isOpen") && (a.preventDefault(),
				f.agentListEl.typeahead("moveCursor", 1)), f.shortcutsListEl.typeahead("isOpen") && (a.preventDefault(), f.shortcutsListEl.typeahead("moveCursor", 1)); else if (38 === a.keyCode) f.agentListEl.typeahead("isOpen") && (a.preventDefault(), f.agentListEl.typeahead("moveCursor", -1)), f.shortcutsListEl.typeahead("isOpen") && (a.preventDefault(), f.shortcutsListEl.typeahead("moveCursor", -1)); else if (13 === a.keyCode) {
				a.preventDefault();
				if ($(".tt-cursor").length) return a.stopPropagation(), f.agentListEl.typeahead("isOpen") &&
				f.agentListEl.typeahead("select", $(".tt-cursor")), f.shortcutsListEl.typeahead("isOpen") && f.shortcutsListEl.typeahead("select", $(".tt-cursor")), !1;
				window.getSelection ? (b = window.getSelection().getRangeAt(0), a = document.createElement("span"), a.innerHTML = "<br/>&#8203;", b.insertNode(a), b.setStartAfter(a), b.collapse(!0), window.getSelection().removeAllRanges(), window.getSelection().addRange(b)) : document.selection.createRange().pasteHTML(text);
				$(this).parents(".editable-message-container").scrollTop($(this).parents(".editable-message-container").scrollTop() +
					35)
			}
		});
		this.formatEl.on("keyup", function (a) {
			a = "";
			a = $(this).text();
			var b = window.getSelection();
			b.getRangeAt(0);
			$(this).parents(".editable-message-container").hasClass("state-error") && 0 < a.length && ($(this).parents(".editable-message-container").removeClass("state-error"), $(this).parents(".editable-message-container").next().addClass("hidden"));
			textContent = b.anchorNode.textContent;
			endOffset = b.anchorOffset;
			f.assignIndex = textContent.substring(0, endOffset).lastIndexOf("@");
			if (-1 !== f.assignIndex && (a = textContent.substring(f.assignIndex +
					1, endOffset)) && 0 < a.length) {
				f.agentListEl.val(a);
				f.agentListEl.typeahead("val", a);
				f.agentListEl.typeahead("open");
				return
			}
			f.assignIndex = textContent.substring(0, endOffset).lastIndexOf("/");
			a = textContent.substring(f.assignIndex - 1, f.assignIndex).trim();
			if (-1 !== f.assignIndex && !a && (a = textContent.substring(f.assignIndex, endOffset)) && 0 < a.length) {
				f.shortcutsListEl.val(a);
				f.shortcutsListEl.typeahead("val", a);
				f.shortcutsListEl.typeahead("open");
				return
			}
			f.shortcutsListEl.val("");
			f.shortcutsListEl.typeahead("val",
				"");
			f.shortcutsListEl.typeahead("close");
			f.agentListEl.val("");
			f.agentListEl.typeahead("val", "");
			f.agentListEl.typeahead("close")
		});
		this.formatEl.on("focus", function (a) {
			$(this).parents("#reply-container").addClass("focus");
			$(this).find(".placeholder") ? $(this).find(".placeholder").remove() : f.setCursor()
		});
		this.formatEl.on("blur", function (a) {
			$(this).parents("#reply-container").removeClass("focus");
			0 === $(this).text().length && f.clearInputText()
		});
		this.formatEl.on("paste", function (a) {
			var b, c, d = 0;
			a.preventDefault();
			a = (a.originalEvent || a).clipboardData;
			b = void 0 === a || null === a ? window.clipboardData.getData("text") || "" : a.getData("text/plain") || "";
			"" !== b && (b = encodeStr(b), b = b.replace(/\n/g, "<br />"), window.getSelection ? (c = window.getSelection(), a = document.createElement("span"), a.innerHTML = b, b = c.getRangeAt(0), b.deleteContents(), b.insertNode(a), f.setCursor(a), 0 !== a.offsetHeight ? d = a.offsetHeight : 0 !== a.clientHeight && (d = a.clientHeight), $(this).parents(".editable-message-container").scrollTop($(this).parents(".editable-message-container").scrollTop() +
				d)) : document.selection.createRange().pasteHTML(b))
		})
	};
	TagAgent.prototype.getAgentsList = function () {
		var a = [], c = this.richMessage.match(this.tagRegex);
		null !== c && c.forEach(function (c) {
			c = c.substring(2, c.length - 2).split(":");
			-1 === a.indexOf(c[0]) && a.push(c[0])
		});
		return a
	};
	TagAgent.prototype.getPlainText = function () {
		var a = this.richMessage, c = a.match(this.tagRegex);
		a && (null !== c && c.forEach(function (c) {
			var b = c.substring(2, c.length - 1).split(":");
			2 === b.length && (a = a.replace(c, b[1]))
		}), a = a.replace(/\r\n/gm, " "));
		return a.trim()
	};
	TagAgent.prototype.parseContentDiv = function () {
		var a, c, d, b, e = !0, f = this.formatEl.html();
		if (f === this.placeholderElement[0].outerHTML || this.formatEl.find(".placeholder").length) this.richMessage = ""; else {
			for (; e;) a = f.indexOf('<span class="highlight"'), c = null, -1 !== a ? c = f.substring(a).indexOf("</span>") : e = !1, c && -1 !== c && (c += a, d = f.substring(a, c + 7), d = d.replace("</span>", ""), d = d.replace('<span class="highlight"', ""), d = d.replace('contenteditable="false"', ""), d = d.replace('contentEditable="false"', ""), d = d.replace(">",
				""), (b = d.match(/data-id="(.*?)"/)) && 2 === b.length && (d = d.replace(b[0], "").replace(/&nbsp;/gm, "").trim(), f = f.substring(0, a) + "@[" + b[1] + ":" + d + "]" + f.substring(c + 7, f.length)));
			f = f.replace(/<br\s*\/?>/ig, "\n");
			f = f.replace(/<\/\s*div?>/ig, "\n");
			f = f.replace(/<\/\s*p?>/ig, "\n");
			for (f = f.replace(/&nbsp;/g, " "); 0 < f.length - 2 && "\n" === f.charAt(f.length - 2);) f = f.substring(0, f.length - 2);
			this.richMessage = $("<div>" + f + "</div>").text()
		}
	};
	TagAgent.prototype.setCursor = function (a, c) {
		var d, b;
		window.getSelection && document.createRange ?
			(d = document.createRange(), d.collapse(!0), a ? c ? d.setStartAfter(a.nextSibling) : d.setStartAfter(a) : d.setStartAfter(this.formatEl.get(0)), b = window.getSelection(), b.removeAllRanges(), b.addRange(d)) : document.body.createTextRange && (d = document.body.createTextRange(), a ? d.moveToElementText(a) : d.moveToElementText(this.formatEl[0]), d.collapse(!1), d.select())
	};
	TagAgent.prototype.changePlaceholder = function (a) {
		this.placeholderElement.html(a)
	};
	TagAgent.prototype.clearInputText = function () {
		this.formatEl.html(this.placeholderElement)
	};
	TagAgent.prototype.showEmptyError = function () {
		this.formatEl.parents(".editable-message-container").addClass("state-error");
		this.formatEl.parents(".editable-message-container").next().removeClass("hidden").show()
	};
	var getCopyFormat = function (a) {
		var c;
		a && (c = conversationProcess.convertTransciptToCopyFormat(a.c, a.n, a.startedOn), a.set("copyFormat", c))
	}, printTranscript = function (a) {
		parent && (a = conversationProcess.convertTransciptToPrintFormat(a.c, a.n, a.startedOn), printChatTranscript(a))
	}, emailTranscript = function (a,
	                               c, d) {
		var b = null;
		c && (c.isAgentChat && (b = moment().zone()), socketConnector.emailTranscript(a, c.pgid, c.chatId, b, d))
	}, banVisitor = function (a, c, d, b) {
		var e = 0, f = 1, g = function (a) {
			if (a) return b(a);
			e++;
			if (e === f) return b()
		};
		c && (f = 2, socketConnector.banVisitorByIp(d.pgid, d.ip, a, g));
		socketConnector.banVisitor(d.pgid, d.nvid || d.vid, a, g)
	}, updateVisitorDetails = function (a, c, d) {
		socketConnector.updateVisitorDetails(a.sessionKey, a.visitorId, a.propertyId, {
			name: a.name,
			email: a.email,
			notes: a.notes
		}, function (a, e) {
			if (a) return d(a);
			c.setProperties({
				n: decodeStr(e.name),
				e: e.email,
				ns: e.notes,
				notesUpdatedOn: moment(e.updatedByOn).format("dddd, MMMM D YYYY, HH:mm"),
				notesUpdatedBy: decodeStr(Tawk.agentsController.getName(e.updatedBy))
			});
			c.visitor && c.set("visitor.e", e.email);
			c.isHistory && c.set("visitorName", decodeStr(e.name));
			d(null)
		})
	}, loadTranscript = function (a, c, d) {
		socketConnector.getChat(c, a, function (b, e) {
			var f, g = {};
			if (b || !e || !e.c) return d(null);
			g = e;
			g.startedOn = moment(e.so || e.cso).format("dddd, MMMM D YYYY, HH:mm");
			g.countryFlag =
				e.cc ? "flag flag-" + e.cc.toLowerCase() : "";
			g.browser = e.bw ? e.bw + "-browser sprite-background" : "";
			g.operatingSystem = e.os ? e.os + "-os sprite-background" : "";
			g.enteredTime = e.so ? languageParser.translate("visitors", "entered_time", {enteredTime: moment(e.so).format("HH:mm:ss")}) : null;
			g.chatId = a;
			g.isAgentChat = "agent" === e.t;
			e.rf && (g.referrer = languageParser.translate("history", "navigated_from", {url: '<a href="' + e.rf + '" title="' + e.rf + '" target="_blank">' + encodeStr(e.rf) + "</a>"}));
			"v" === e.t && (g.departmentName = Tawk.C.pages.getDepartmentName(c,
				e.dpt));
			if (g.isAgentChat) f = conversationProcess.processAgentHistory(e), g.conversationEndedTime = e.ceo, g.hasOlder = !0, g.hasNewer = !0; else if (f = conversationProcess.processHistory(e.c, e.n, !1, e.ceo), e.attr && (g.customAttributes = {
					data: [],
					version: 0
				}, Object.keys(e.attr).forEach(function (a) {
					null !== e.attr[a] && g.customAttributes.data.pushObject({
						key: beautifyAPIKey(a),
						value: beautifyAPIValue(e.attr[a])
					})
				}), g.customAttributes.version = 1), e.tags) {
				var h = [];
				e.tags.forEach(function (a) {
					h.push(decodeStr(a))
				});
				g.tags = h;
				g.tagsv =
					1;
				g.customTags = {};
				g.customTags.data = e.tags.join(", ");
				g.customTags.version = 1
			}
			g.callInfo = f.callInfo;
			g.messages = f.transcriptData;
			g.timeline = f.timeline;
			d(g)
		})
	};
	emojione.ascii = !0;
	emojione.imageType = "png";
	var emojiView, emojiMap = {
			people: {
				header: ":smiley:",
				content: ":grinning: :grin: :joy: :rofl: :smiley: :smile: :sweat_smile: :laughing: :wink: :blush: :yum: :sunglasses: :heart_eyes: :kissing_heart: :kissing: :kissing_smiling_eyes: :kissing_closed_eyes: :relaxed: :slight_smile: :hugging: :thinking: :neutral_face: :expressionless: :no_mouth: :rolling_eyes: :smirk: :persevere: :disappointed_relieved: :open_mouth: :zipper_mouth: :hushed: :sleepy: :tired_face: :sleeping: :relieved: :nerd: :stuck_out_tongue: :stuck_out_tongue_winking_eye: :stuck_out_tongue_closed_eyes: :drooling_face: :unamused: :sweat: :pensive: :confused: :upside_down: :money_mouth: :astonished: :frowning2: :slight_frown: :confounded: :disappointed: :worried: :triumph: :cry: :sob: :frowning: :anguished: :fearful: :weary: :grimacing: :cold_sweat: :scream: :flushed: :dizzy_face: :rage: :angry: :innocent: :cowboy: :clown: :lying_face: :mask: :thermometer_face: :head_bandage: :nauseated_face: :sneezing_face: :smiling_imp: :imp: :japanese_ogre: :japanese_goblin: :skull: :ghost: :alien: :robot: :poop: :smiley_cat: :smile_cat: :joy_cat: :heart_eyes_cat: :smirk_cat: :kissing_cat: :scream_cat: :crying_cat_face: :pouting_cat: :boy: :boy_tone1: :boy_tone2: :boy_tone3: :boy_tone4: :boy_tone5: :girl: :girl_tone1: :girl_tone2: :girl_tone3: :girl_tone4: :girl_tone5: :man: :man_tone1: :man_tone2: :man_tone3: :man_tone4: :man_tone5: :woman: :woman_tone1: :woman_tone2: :woman_tone3: :woman_tone4: :woman_tone5: :older_man: :older_man_tone1: :older_man_tone2: :older_man_tone3: :older_man_tone4: :older_man_tone5: :older_woman: :older_woman_tone1: :older_woman_tone2: :older_woman_tone3: :older_woman_tone4: :older_woman_tone5: :baby: :baby_tone1: :baby_tone2: :baby_tone3: :baby_tone4: :baby_tone5: :angel: :angel_tone1: :angel_tone2: :angel_tone3: :angel_tone4: :angel_tone5: :cop: :cop_tone1: :cop_tone2: :cop_tone3: :cop_tone4: :cop_tone5: :spy: :spy_tone1: :spy_tone2: :spy_tone3: :spy_tone4: :spy_tone5: :guardsman: :guardsman_tone1: :guardsman_tone2: :guardsman_tone3: :guardsman_tone4: :guardsman_tone5: :construction_worker: :construction_worker_tone1: :construction_worker_tone2: :construction_worker_tone3: :construction_worker_tone4: :construction_worker_tone5: :man_with_turban: :man_with_turban_tone1: :man_with_turban_tone2: :man_with_turban_tone3: :man_with_turban_tone4: :man_with_turban_tone5: :person_with_blond_hair: :person_with_blond_hair_tone1: :person_with_blond_hair_tone2: :person_with_blond_hair_tone3: :person_with_blond_hair_tone4: :person_with_blond_hair_tone5: :santa: :santa_tone1: :santa_tone2: :santa_tone3: :santa_tone4: :santa_tone5: :mrs_claus: :mrs_claus_tone1: :mrs_claus_tone2: :mrs_claus_tone3: :mrs_claus_tone4: :mrs_claus_tone5: :princess: :princess_tone1: :princess_tone2: :princess_tone3: :princess_tone4: :princess_tone5: :prince: :prince_tone1: :prince_tone2: :prince_tone3: :prince_tone4: :prince_tone5: :bride_with_veil: :bride_with_veil_tone1: :bride_with_veil_tone2: :bride_with_veil_tone3: :bride_with_veil_tone4: :bride_with_veil_tone5: :man_in_tuxedo: :man_in_tuxedo_tone1: :man_in_tuxedo_tone2: :man_in_tuxedo_tone3: :man_in_tuxedo_tone4: :man_in_tuxedo_tone5: :pregnant_woman: :pregnant_woman_tone1: :pregnant_woman_tone2: :pregnant_woman_tone3: :pregnant_woman_tone4: :pregnant_woman_tone5: :man_with_gua_pi_mao: :man_with_gua_pi_mao_tone1: :man_with_gua_pi_mao_tone2: :man_with_gua_pi_mao_tone3: :man_with_gua_pi_mao_tone4: :man_with_gua_pi_mao_tone5: :person_frowning: :person_frowning_tone1: :person_frowning_tone2: :person_frowning_tone3: :person_frowning_tone4: :person_frowning_tone5: :person_with_pouting_face: :person_with_pouting_face_tone1: :person_with_pouting_face_tone2: :person_with_pouting_face_tone3: :person_with_pouting_face_tone4: :person_with_pouting_face_tone5: :no_good: :no_good_tone1: :no_good_tone2: :no_good_tone3: :no_good_tone4: :no_good_tone5: :ok_woman: :ok_woman_tone1: :ok_woman_tone2: :ok_woman_tone3: :ok_woman_tone4: :ok_woman_tone5: :information_desk_person: :information_desk_person_tone1: :information_desk_person_tone2: :information_desk_person_tone3: :information_desk_person_tone4: :information_desk_person_tone5: :raising_hand: :raising_hand_tone1: :raising_hand_tone2: :raising_hand_tone3: :raising_hand_tone4: :raising_hand_tone5: :bow: :bow_tone1: :bow_tone2: :bow_tone3: :bow_tone4: :bow_tone5: :face_palm: :face_palm_tone1: :face_palm_tone2: :face_palm_tone3: :face_palm_tone4: :face_palm_tone5: :shrug: :shrug_tone1: :shrug_tone2: :shrug_tone3: :shrug_tone4: :shrug_tone5: :massage: :massage_tone1: :massage_tone2: :massage_tone3: :massage_tone4: :massage_tone5: :haircut: :haircut_tone1: :haircut_tone2: :haircut_tone3: :haircut_tone4: :haircut_tone5: :walking: :walking_tone1: :walking_tone2: :walking_tone3: :walking_tone4: :walking_tone5: :runner: :runner_tone1: :runner_tone2: :runner_tone3: :runner_tone4: :runner_tone5: :dancer: :dancer_tone1: :dancer_tone2: :dancer_tone3: :dancer_tone4: :dancer_tone5: :man_dancing: :man_dancing_tone1: :man_dancing_tone2: :man_dancing_tone3: :man_dancing_tone4: :man_dancing_tone5: :dancers: :speaking_head: :bust_in_silhouette: :busts_in_silhouette: :couple: :two_men_holding_hands: :two_women_holding_hands: :couplekiss: :kiss_mm: :kiss_ww: :couple_with_heart: :couple_mm: :couple_ww: :family: :family_mwg: :family_mwgb: :family_mwbb: :family_mwgg: :family_mmb: :family_mmg: :family_mmgb: :family_mmbb: :family_mmgg: :family_wwb: :family_wwg: :family_wwgb: :family_wwbb: :family_wwgg: :muscle: :muscle_tone1: :muscle_tone2: :muscle_tone3: :muscle_tone4: :muscle_tone5: :selfie: :selfie_tone1: :selfie_tone2: :selfie_tone3: :selfie_tone4: :selfie_tone5: :point_left: :point_left_tone1: :point_left_tone2: :point_left_tone3: :point_left_tone4: :point_left_tone5: :point_right: :point_right_tone1: :point_right_tone2: :point_right_tone3: :point_right_tone4: :point_right_tone5: :point_up: :point_up_tone1: :point_up_tone2: :point_up_tone3: :point_up_tone4: :point_up_tone5: :point_up_2: :point_up_2_tone1: :point_up_2_tone2: :point_up_2_tone3: :point_up_2_tone4: :point_up_2_tone5: :middle_finger: :middle_finger_tone1: :middle_finger_tone2: :middle_finger_tone3: :middle_finger_tone4: :middle_finger_tone5: :point_down: :point_down_tone1: :point_down_tone2: :point_down_tone3: :point_down_tone4: :point_down_tone5: :v: :v_tone1: :v_tone2: :v_tone3: :v_tone4: :v_tone5: :fingers_crossed: :fingers_crossed_tone1: :fingers_crossed_tone2: :fingers_crossed_tone3: :fingers_crossed_tone4: :fingers_crossed_tone5: :vulcan: :vulcan_tone1: :vulcan_tone2: :vulcan_tone3: :vulcan_tone4: :vulcan_tone5: :metal: :metal_tone1: :metal_tone2: :metal_tone3: :metal_tone4: :metal_tone5: :call_me: :call_me_tone1: :call_me_tone2: :call_me_tone3: :call_me_tone4: :call_me_tone5: :hand_splayed: :hand_splayed_tone1: :hand_splayed_tone2: :hand_splayed_tone3: :hand_splayed_tone4: :hand_splayed_tone5: :raised_hand: :raised_hand_tone1: :raised_hand_tone2: :raised_hand_tone3: :raised_hand_tone4: :raised_hand_tone5: :ok_hand: :ok_hand_tone1: :ok_hand_tone2: :ok_hand_tone3: :ok_hand_tone4: :ok_hand_tone5: :thumbsup: :thumbsup_tone1: :thumbsup_tone2: :thumbsup_tone3: :thumbsup_tone4: :thumbsup_tone5: :thumbsdown: :thumbsdown_tone1: :thumbsdown_tone2: :thumbsdown_tone3: :thumbsdown_tone4: :thumbsdown_tone5: :fist: :fist_tone1: :fist_tone2: :fist_tone3: :fist_tone4: :fist_tone5: :punch: :punch_tone1: :punch_tone2: :punch_tone3: :punch_tone4: :punch_tone5: :left_facing_fist: :left_facing_fist_tone1: :left_facing_fist_tone2: :left_facing_fist_tone3: :left_facing_fist_tone4: :left_facing_fist_tone5: :right_facing_fist: :right_facing_fist_tone1: :right_facing_fist_tone2: :right_facing_fist_tone3: :right_facing_fist_tone4: :right_facing_fist_tone5: :raised_back_of_hand: :raised_back_of_hand_tone1: :raised_back_of_hand_tone2: :raised_back_of_hand_tone3: :raised_back_of_hand_tone4: :raised_back_of_hand_tone5: :wave: :wave_tone1: :wave_tone2: :wave_tone3: :wave_tone4: :wave_tone5: :clap: :clap_tone1: :clap_tone2: :clap_tone3: :clap_tone4: :clap_tone5: :writing_hand: :writing_hand_tone1: :writing_hand_tone2: :writing_hand_tone3: :writing_hand_tone4: :writing_hand_tone5: :open_hands: :open_hands_tone1: :open_hands_tone2: :open_hands_tone3: :open_hands_tone4: :open_hands_tone5: :raised_hands: :raised_hands_tone1: :raised_hands_tone2: :raised_hands_tone3: :raised_hands_tone4: :raised_hands_tone5: :pray: :pray_tone1: :pray_tone2: :pray_tone3: :pray_tone4: :pray_tone5: :handshake: :handshake_tone1: :handshake_tone2: :handshake_tone3: :handshake_tone4: :handshake_tone5: :nail_care: :nail_care_tone1: :nail_care_tone2: :nail_care_tone3: :nail_care_tone4: :nail_care_tone5: :ear: :ear_tone1: :ear_tone2: :ear_tone3: :ear_tone4: :ear_tone5: :nose: :nose_tone1: :nose_tone2: :nose_tone3: :nose_tone4: :nose_tone5: :footprints: :eyes: :eye: :tongue: :lips: :kiss: :zzz: :eyeglasses: :dark_sunglasses: :necktie: :shirt: :jeans: :dress: :kimono: :bikini: :womans_clothes: :purse: :handbag: :pouch: :school_satchel: :mans_shoe: :athletic_shoe: :high_heel: :sandal: :boot: :crown: :womans_hat: :tophat: :mortar_board: :helmet_with_cross: :lipstick: :ring: :closed_umbrella: :briefcase:".split(" ")
			},
			nature: {
				header: ":four_leaf_clover:",
				content: ":see_no_evil: :hear_no_evil: :speak_no_evil: :sweat_drops: :dash: :monkey_face: :monkey: :gorilla: :dog: :dog2: :poodle: :wolf: :fox: :cat: :cat2: :lion_face: :tiger: :tiger2: :leopard: :horse: :racehorse: :deer: :unicorn: :cow: :ox: :water_buffalo: :cow2: :pig: :pig2: :boar: :pig_nose: :ram: :sheep: :goat: :dromedary_camel: :camel: :elephant: :rhino: :mouse: :mouse2: :rat: :hamster: :rabbit: :rabbit2: :chipmunk: :bat: :bear: :koala: :panda_face: :feet: :turkey: :chicken: :rooster: :hatching_chick: :baby_chick: :hatched_chick: :bird: :penguin: :dove: :eagle: :duck: :owl: :frog: :crocodile: :turtle: :lizard: :snake: :dragon_face: :dragon: :whale: :whale2: :dolphin: :fish: :tropical_fish: :blowfish: :shark: :octopus: :shell: :crab: :shrimp: :squid: :butterfly: :snail: :bug: :ant: :bee: :beetle: :spider: :spider_web: :scorpion: :bouquet: :cherry_blossom: :rosette: :rose: :wilted_rose: :hibiscus: :sunflower: :blossom: :tulip: :seedling: :evergreen_tree: :deciduous_tree: :palm_tree: :cactus: :ear_of_rice: :herb: :shamrock: :four_leaf_clover: :maple_leaf: :fallen_leaf: :leaves: :mushroom: :chestnut: :earth_africa: :earth_americas: :earth_asia: :new_moon: :waxing_crescent_moon: :first_quarter_moon: :waxing_gibbous_moon: :full_moon: :waning_gibbous_moon: :last_quarter_moon: :waning_crescent_moon: :crescent_moon: :new_moon_with_face: :first_quarter_moon_with_face: :last_quarter_moon_with_face: :sunny: :full_moon_with_face: :sun_with_face: :star: :star2: :cloud: :partly_sunny: :thunder_cloud_rain: :white_sun_small_cloud: :white_sun_cloud: :white_sun_rain_cloud: :cloud_rain: :cloud_snow: :cloud_lightning: :cloud_tornado: :fog: :wind_blowing_face: :umbrella2: :umbrella: :zap: :snowflake: :snowman2: :snowman: :comet: :fire: :droplet: :ocean: :jack_o_lantern: :christmas_tree: :sparkles: :tanabata_tree: :bamboo:".split(" ")
			},
			food: {
				header: ":hamburger:",
				content: ":grapes: :melon: :watermelon: :tangerine: :lemon: :banana: :pineapple: :apple: :green_apple: :pear: :peach: :cherries: :strawberry: :kiwi: :tomato: :avocado: :eggplant: :potato: :carrot: :corn: :hot_pepper: :cucumber: :peanuts: :bread: :croissant: :french_bread: :pancakes: :cheese: :meat_on_bone: :poultry_leg: :bacon: :hamburger: :fries: :pizza: :hotdog: :taco: :burrito: :stuffed_flatbread: :egg: :cooking: :shallow_pan_of_food: :stew: :salad: :popcorn: :bento: :rice_cracker: :rice_ball: :rice: :curry: :ramen: :spaghetti: :sweet_potato: :oden: :sushi: :fried_shrimp: :fish_cake: :dango: :icecream: :shaved_ice: :ice_cream: :doughnut: :cookie: :birthday: :cake: :chocolate_bar: :candy: :lollipop: :custard: :honey_pot: :baby_bottle: :milk: :coffee: :tea: :sake: :champagne: :wine_glass: :cocktail: :tropical_drink: :beer: :beers: :champagne_glass: :tumbler_glass: :fork_knife_plate: :fork_and_knife: :spoon:".split(" ")
			},
			objects: {
				header: ":bulb:",
				content: ":skull_crossbones: :love_letter: :bomb: :hole: :shopping_bags: :prayer_beads: :gem: :knife: :amphora: :map: :barber: :frame_photo: :bellhop: :door: :sleeping_accommodation: :bed: :couch: :toilet: :shower: :bathtub: :hourglass: :hourglass_flowing_sand: :watch: :alarm_clock: :stopwatch: :timer: :clock: :thermometer: :beach_umbrella: :balloon: :tada: :confetti_ball: :dolls: :flags: :wind_chime: :ribbon: :gift: :joystick: :postal_horn: :microphone2: :level_slider: :control_knobs: :radio: :iphone: :calling: :telephone: :telephone_receiver: :pager: :fax: :battery: :electric_plug: :computer: :desktop: :printer: :keyboard: :mouse_three_button: :trackball: :minidisc: :floppy_disk: :cd: :dvd: :movie_camera: :film_frames: :projector: :tv: :camera: :camera_with_flash: :video_camera: :vhs: :mag: :mag_right: :microscope: :telescope: :satellite: :candle: :bulb: :flashlight: :izakaya_lantern: :notebook_with_decorative_cover: :closed_book: :book: :green_book: :blue_book: :orange_book: :books: :notebook: :ledger: :page_with_curl: :scroll: :page_facing_up: :newspaper: :newspaper2: :bookmark_tabs: :bookmark: :label: :moneybag: :yen: :dollar: :euro: :pound: :money_with_wings: :credit_card: :envelope: :e-mail: :incoming_envelope: :envelope_with_arrow: :outbox_tray: :inbox_tray: :package: :mailbox: :mailbox_closed: :mailbox_with_mail: :mailbox_with_no_mail: :postbox: :ballot_box: :pencil2: :black_nib: :pen_fountain: :pen_ballpoint: :paintbrush: :crayon: :pencil: :file_folder: :open_file_folder: :dividers: :date: :calendar: :notepad_spiral: :calendar_spiral: :card_index: :chart_with_upwards_trend: :chart_with_downwards_trend: :bar_chart: :clipboard: :pushpin: :round_pushpin: :paperclip: :paperclips: :straight_ruler: :triangular_ruler: :scissors: :card_box: :file_cabinet: :wastebasket: :lock: :unlock: :lock_with_ink_pen: :closed_lock_with_key: :key: :key2: :hammer: :pick: :hammer_pick: :tools: :dagger: :crossed_swords: :gun: :shield: :wrench: :nut_and_bolt: :gear: :compression: :alembic: :scales: :link: :chains: :syringe: :pill: :smoking: :coffin: :urn: :moyai: :oil: :crystal_ball: :shopping_cart: :triangular_flag_on_post: :crossed_flags: :flag_black: :flag_white: :rainbow_flag:".split(" ")
			},
			activity: {
				header: ":football:",
				content: ":space_invader: :levitate: :fencer: :horse_racing: :horse_racing_tone1: :horse_racing_tone2: :horse_racing_tone3: :horse_racing_tone4: :horse_racing_tone5: :skier: :snowboarder: :golfer: :surfer: :surfer_tone1: :surfer_tone2: :surfer_tone3: :surfer_tone4: :surfer_tone5: :rowboat: :rowboat_tone1: :rowboat_tone2: :rowboat_tone3: :rowboat_tone4: :rowboat_tone5: :swimmer: :swimmer_tone1: :swimmer_tone2: :swimmer_tone3: :swimmer_tone4: :swimmer_tone5: :basketball_player: :basketball_player_tone1: :basketball_player_tone2: :basketball_player_tone3: :basketball_player_tone4: :basketball_player_tone5: :lifter: :lifter_tone1: :lifter_tone2: :lifter_tone3: :lifter_tone4: :lifter_tone5: :bicyclist: :bicyclist_tone1: :bicyclist_tone2: :bicyclist_tone3: :bicyclist_tone4: :bicyclist_tone5: :mountain_bicyclist: :mountain_bicyclist_tone1: :mountain_bicyclist_tone2: :mountain_bicyclist_tone3: :mountain_bicyclist_tone4: :mountain_bicyclist_tone5: :cartwheel: :cartwheel_tone1: :cartwheel_tone2: :cartwheel_tone3: :cartwheel_tone4: :cartwheel_tone5: :wrestlers: :wrestlers_tone1: :wrestlers_tone2: :wrestlers_tone3: :wrestlers_tone4: :wrestlers_tone5: :water_polo: :water_polo_tone1: :water_polo_tone2: :water_polo_tone3: :water_polo_tone4: :water_polo_tone5: :handball: :handball_tone1: :handball_tone2: :handball_tone3: :handball_tone4: :handball_tone5: :juggling: :juggling_tone1: :juggling_tone2: :juggling_tone3: :juggling_tone4: :juggling_tone5: :circus_tent: :performing_arts: :art: :slot_machine: :bath: :bath_tone1: :bath_tone2: :bath_tone3: :bath_tone4: :bath_tone5: :reminder_ribbon: :tickets: :ticket: :military_medal: :trophy: :medal: :first_place: :second_place: :third_place: :soccer: :baseball: :basketball: :volleyball: :football: :rugby_football: :tennis: :8ball: :bowling: :cricket: :field_hockey: :hockey: :ping_pong: :badminton: :boxing_glove: :martial_arts_uniform: :goal: :dart: :golf: :ice_skate: :fishing_pole_and_fish: :running_shirt_with_sash: :ski: :video_game: :game_die: :musical_score: :microphone: :headphones: :saxophone: :guitar: :musical_keyboard: :trumpet: :violin: :drum: :clapper: :bow_and_arrow:".split(" ")
			},
			travel: {
				header: ":red_car:",
				content: ":race_car: :motorcycle: :japan: :mountain_snow: :mountain: :volcano: :mount_fuji: :camping: :beach: :desert: :island: :park: :stadium: :classical_building: :construction_site: :homes: :cityscape: :house_abandoned: :house: :house_with_garden: :office: :post_office: :european_post_office: :hospital: :bank: :hotel: :love_hotel: :convenience_store: :school: :department_store: :factory: :japanese_castle: :european_castle: :wedding: :tokyo_tower: :statue_of_liberty: :church: :mosque: :synagogue: :shinto_shrine: :kaaba: :fountain: :tent: :foggy: :night_with_stars: :sunrise_over_mountains: :sunrise: :city_dusk: :city_sunset: :bridge_at_night: :milky_way: :carousel_horse: :ferris_wheel: :roller_coaster: :steam_locomotive: :railway_car: :bullettrain_side: :bullettrain_front: :train2: :metro: :light_rail: :station: :tram: :monorail: :mountain_railway: :train: :bus: :oncoming_bus: :trolleybus: :minibus: :ambulance: :fire_engine: :police_car: :oncoming_police_car: :taxi: :oncoming_taxi: :red_car: :oncoming_automobile: :blue_car: :truck: :articulated_lorry: :tractor: :bike: :scooter: :motor_scooter: :busstop: :motorway: :railway_track: :fuelpump: :rotating_light: :traffic_light: :vertical_traffic_light: :construction: :anchor: :sailboat: :canoe: :speedboat: :cruise_ship: :ferry: :motorboat: :ship: :airplane: :airplane_small: :airplane_departure: :airplane_arriving: :seat: :helicopter: :suspension_railway: :mountain_cableway: :aerial_tramway: :rocket: :satellite_orbital: :stars: :rainbow: :fireworks: :sparkler: :rice_scene: :checkered_flag:".split(" ")
			},
			symbols: {
				header: ":hash:",
				content: ":100: :1234: :eye_in_speech_bubble: :cupid: :heart: :heartbeat: :broken_heart: :two_hearts: :sparkling_heart: :heartpulse: :blue_heart: :green_heart: :yellow_heart: :purple_heart: :black_heart: :gift_heart: :revolving_hearts: :heart_decoration: :heart_exclamation: :anger: :boom: :dizzy: :speech_balloon: :speech_left: :anger_right: :thought_balloon: :white_flower: :globe_with_meridians: :hotsprings: :octagonal_sign: :clock12: :clock1230: :clock1: :clock130: :clock2: :clock230: :clock3: :clock330: :clock4: :clock430: :clock5: :clock530: :clock6: :clock630: :clock7: :clock730: :clock8: :clock830: :clock9: :clock930: :clock10: :clock1030: :clock11: :clock1130: :cyclone: :spades: :hearts: :diamonds: :clubs: :black_joker: :mahjong: :flower_playing_cards: :mute: :speaker: :sound: :loud_sound: :loudspeaker: :mega: :bell: :no_bell: :musical_note: :notes: :chart: :currency_exchange: :heavy_dollar_sign: :atm: :put_litter_in_its_place: :potable_water: :wheelchair: :mens: :womens: :restroom: :baby_symbol: :wc: :passport_control: :customs: :baggage_claim: :left_luggage: :warning: :children_crossing: :no_entry: :no_entry_sign: :no_bicycles: :no_smoking: :do_not_litter: :non-potable_water: :no_pedestrians: :no_mobile_phones: :underage: :radioactive: :biohazard: :arrow_up: :arrow_upper_right: :arrow_right: :arrow_lower_right: :arrow_down: :arrow_lower_left: :arrow_left: :arrow_upper_left: :arrow_up_down: :left_right_arrow: :leftwards_arrow_with_hook: :arrow_right_hook: :arrow_heading_up: :arrow_heading_down: :arrows_clockwise: :arrows_counterclockwise: :back: :end: :on: :soon: :top: :place_of_worship: :atom: :om_symbol: :star_of_david: :wheel_of_dharma: :yin_yang: :cross: :orthodox_cross: :star_and_crescent: :peace: :menorah: :six_pointed_star: :aries: :taurus: :gemini: :cancer: :leo: :virgo: :libra: :scorpius: :sagittarius: :capricorn: :aquarius: :pisces: :ophiuchus: :twisted_rightwards_arrows: :repeat: :repeat_one: :arrow_forward: :fast_forward: :track_next: :play_pause: :arrow_backward: :rewind: :track_previous: :arrow_up_small: :arrow_double_up: :arrow_down_small: :arrow_double_down: :pause_button: :stop_button: :record_button: :eject: :cinema: :low_brightness: :high_brightness: :signal_strength: :vibration_mode: :mobile_phone_off: :recycle: :name_badge: :fleur-de-lis: :beginner: :trident: :o: :white_check_mark: :ballot_box_with_check: :heavy_check_mark: :heavy_multiplication_x: :x: :negative_squared_cross_mark: :heavy_plus_sign: :heavy_minus_sign: :heavy_division_sign: :curly_loop: :loop: :part_alternation_mark: :eight_spoked_asterisk: :eight_pointed_black_star: :sparkle: :bangbang: :interrobang: :question: :grey_question: :grey_exclamation: :exclamation: :wavy_dash: :copyright: :registered: :tm: :hash: :asterisk: :zero: :one: :two: :three: :four: :five: :six: :seven: :eight: :nine: :keycap_ten: :capital_abcd: :abcd: :symbols: :abc: :a: :ab: :b: :cl: :cool: :free: :information_source: :id: :m: :new: :ng: :o2: :ok: :parking: :sos: :up: :vs: :koko: :sa: :u6708: :u6709: :u6307: :ideograph_advantage: :u5272: :u7121: :u7981: :accept: :u7533: :u5408: :u7a7a: :congratulations: :secret: :u55b6: :u6e80: :black_small_square: :white_small_square: :white_medium_square: :black_medium_square: :white_medium_small_square: :black_medium_small_square: :black_large_square: :white_large_square: :large_orange_diamond: :large_blue_diamond: :small_orange_diamond: :small_blue_diamond: :small_red_triangle: :small_red_triangle_down: :diamond_shape_with_a_dot_inside: :radio_button: :black_square_button: :white_square_button: :white_circle: :black_circle: :red_circle: :blue_circle: :regional_indicator_z: :regional_indicator_y: :regional_indicator_x: :regional_indicator_w: :regional_indicator_v: :regional_indicator_u: :regional_indicator_t: :regional_indicator_s: :regional_indicator_r: :regional_indicator_q: :regional_indicator_p: :regional_indicator_o: :regional_indicator_n: :regional_indicator_m: :regional_indicator_l: :regional_indicator_k: :regional_indicator_j: :regional_indicator_i: :regional_indicator_h: :regional_indicator_g: :regional_indicator_f: :regional_indicator_e: :regional_indicator_d: :regional_indicator_c: :regional_indicator_b: :regional_indicator_a:".split(" ")
			},
			flags: {
				header: ":flag_black:",
				content: ":flag_ac: :flag_ad: :flag_ae: :flag_af: :flag_ag: :flag_ai: :flag_al: :flag_am: :flag_ao: :flag_aq: :flag_ar: :flag_as: :flag_at: :flag_au: :flag_aw: :flag_ax: :flag_az: :flag_ba: :flag_bb: :flag_bd: :flag_be: :flag_bf: :flag_bg: :flag_bh: :flag_bi: :flag_bj: :flag_bl: :flag_bm: :flag_bn: :flag_bo: :flag_bq: :flag_br: :flag_bs: :flag_bt: :flag_bv: :flag_bw: :flag_by: :flag_bz: :flag_ca: :flag_cc: :flag_cd: :flag_cf: :flag_cg: :flag_ch: :flag_ci: :flag_ck: :flag_cl: :flag_cm: :flag_cn: :flag_co: :flag_cp: :flag_cr: :flag_cu: :flag_cv: :flag_cw: :flag_cx: :flag_cy: :flag_cz: :flag_de: :flag_dg: :flag_dj: :flag_dk: :flag_dm: :flag_do: :flag_dz: :flag_ea: :flag_ec: :flag_ee: :flag_eg: :flag_eh: :flag_er: :flag_es: :flag_et: :flag_eu: :flag_fi: :flag_fj: :flag_fk: :flag_fm: :flag_fo: :flag_fr: :flag_ga: :flag_gb: :flag_gd: :flag_ge: :flag_gf: :flag_gg: :flag_gh: :flag_gi: :flag_gl: :flag_gm: :flag_gn: :flag_gp: :flag_gq: :flag_gr: :flag_gs: :flag_gt: :flag_gu: :flag_gw: :flag_gy: :flag_hk: :flag_hm: :flag_hn: :flag_hr: :flag_ht: :flag_hu: :flag_ic: :flag_id: :flag_ie: :flag_il: :flag_im: :flag_in: :flag_io: :flag_iq: :flag_ir: :flag_is: :flag_it: :flag_je: :flag_jm: :flag_jo: :flag_jp: :flag_ke: :flag_kg: :flag_kh: :flag_ki: :flag_km: :flag_kn: :flag_kp: :flag_kr: :flag_kw: :flag_ky: :flag_kz: :flag_la: :flag_lb: :flag_lc: :flag_li: :flag_lk: :flag_lr: :flag_ls: :flag_lt: :flag_lu: :flag_lv: :flag_ly: :flag_ma: :flag_mc: :flag_md: :flag_me: :flag_mf: :flag_mg: :flag_mh: :flag_mk: :flag_ml: :flag_mm: :flag_mn: :flag_mo: :flag_mp: :flag_mq: :flag_mr: :flag_ms: :flag_mt: :flag_mu: :flag_mv: :flag_mw: :flag_mx: :flag_my: :flag_mz: :flag_na: :flag_nc: :flag_ne: :flag_nf: :flag_ng: :flag_ni: :flag_nl: :flag_no: :flag_np: :flag_nr: :flag_nu: :flag_nz: :flag_om: :flag_pa: :flag_pe: :flag_pf: :flag_pg: :flag_ph: :flag_pk: :flag_pl: :flag_pm: :flag_pn: :flag_pr: :flag_ps: :flag_pt: :flag_pw: :flag_py: :flag_qa: :flag_re: :flag_ro: :flag_rs: :flag_ru: :flag_rw: :flag_sa: :flag_sb: :flag_sc: :flag_sd: :flag_se: :flag_sg: :flag_sh: :flag_si: :flag_sj: :flag_sk: :flag_sl: :flag_sm: :flag_sn: :flag_so: :flag_sr: :flag_ss: :flag_st: :flag_sv: :flag_sx: :flag_sy: :flag_sz: :flag_ta: :flag_tc: :flag_td: :flag_tf: :flag_tg: :flag_th: :flag_tj: :flag_tk: :flag_tl: :flag_tm: :flag_tn: :flag_to: :flag_tr: :flag_tt: :flag_tv: :flag_tw: :flag_tz: :flag_ua: :flag_ug: :flag_um: :flag_us: :flag_uy: :flag_uz: :flag_va: :flag_vc: :flag_ve: :flag_vg: :flag_vi: :flag_vn: :flag_vu: :flag_wf: :flag_ws: :flag_xk: :flag_ye: :flag_yt: :flag_za: :flag_zm: :flag_zw:".split(" ")
			}
		},
		emojiStrategy = {
			grinning: {
				unicode: "1f600",
				unicode_alt: "",
				code_decimal: "&#128512;",
				name: "grinning face",
				shortname: ":grinning:",
				category: "people",
				emoji_order: "1",
				aliases: [],
				aliases_ascii: [],
				keywords: ["happy", "smiley", "emotion"]
			},
			grin: {
				unicode: "1f601",
				unicode_alt: "",
				code_decimal: "&#128513;",
				name: "grinning face with smiling eyes",
				shortname: ":grin:",
				category: "people",
				emoji_order: "2",
				aliases: [],
				aliases_ascii: [],
				keywords: "happy silly smiley emotion good selfie".split(" ")
			},
			joy: {
				unicode: "1f602",
				unicode_alt: "",
				code_decimal: "&#128514;",
				name: "face with tears of joy",
				shortname: ":joy:",
				category: "people",
				emoji_order: "3",
				aliases: [],
				aliases_ascii: [":')", ":'-)"],
				keywords: "happy silly smiley cry laugh emotion sarcastic".split(" ")
			},
			rofl: {
				unicode: "1f923",
				unicode_alt: "",
				code_decimal: "&#129315;",
				name: "rolling on the floor laughing",
				shortname: ":rofl:",
				category: "people",
				emoji_order: "4",
				aliases: [":rolling_on_the_floor_laughing:"],
				aliases_ascii: [],
				keywords: []
			},
			smiley: {
				unicode: "1f603",
				unicode_alt: "",
				code_decimal: "&#128515;",
				name: "smiling face with open mouth",
				shortname: ":smiley:",
				category: "people",
				emoji_order: "5",
				aliases: [],
				aliases_ascii: [":D", ":-D", "=D"],
				keywords: ["happy", "smiley", "emotion", "good"]
			},
			smile: {
				unicode: "1f604",
				unicode_alt: "",
				code_decimal: "&#128516;",
				name: "smiling face with open mouth and smiling eyes",
				shortname: ":smile:",
				category: "people",
				emoji_order: "6",
				aliases: [],
				aliases_ascii: [],
				keywords: ["happy", "smiley", "emotion"]
			},
			sweat_smile: {
				unicode: "1f605",
				unicode_alt: "",
				code_decimal: "&#128517;",
				name: "smiling face with open mouth and cold sweat",
				shortname: ":sweat_smile:",
				category: "people",
				emoji_order: "7",
				aliases: [],
				aliases_ascii: "':) ':-) '=) ':D ':-D '=D".split(" "),
				keywords: ["smiley", "workout", "sweat", "emotion"]
			},
			laughing: {
				unicode: "1f606",
				unicode_alt: "",
				code_decimal: "&#128518;",
				name: "smiling face with open mouth and tightly-closed eyes",
				shortname: ":laughing:",
				category: "people",
				emoji_order: "8",
				aliases: [":satisfied:"],
				aliases_ascii: [">:)", ">;)", ">:-)", ">=)"],
				keywords: ["happy", "smiley", "laugh", "emotion"]
			},
			wink: {
				unicode: "1f609",
				unicode_alt: "",
				code_decimal: "&#128521;",
				name: "winking face",
				shortname: ":wink:",
				category: "people",
				emoji_order: "9",
				aliases: [],
				aliases_ascii: ";) ;-) *-) *) ;-] ;] ;D ;^)".split(" "),
				keywords: ["silly", "smiley", "emotion"]
			},
			blush: {
				unicode: "1f60a",
				unicode_alt: "",
				code_decimal: "&#128522;",
				name: "smiling face with smiling eyes",
				shortname: ":blush:",
				category: "people",
				emoji_order: "10",
				aliases: [],
				aliases_ascii: [],
				keywords: ["happy", "smiley", "emotion", "good", "beautiful"]
			},
			yum: {
				unicode: "1f60b",
				unicode_alt: "",
				code_decimal: "&#128523;",
				name: "face savouring delicious food",
				shortname: ":yum:",
				category: "people",
				emoji_order: "11",
				aliases: [],
				aliases_ascii: [],
				keywords: "happy silly smiley emotion sarcastic good".split(" ")
			},
			sunglasses: {
				unicode: "1f60e",
				unicode_alt: "",
				code_decimal: "&#128526;",
				name: "smiling face with sunglasses",
				shortname: ":sunglasses:",
				category: "people",
				emoji_order: "12",
				aliases: [],
				aliases_ascii: "B-) B) 8) 8-) B-D 8-D".split(" "),
				keywords: ["silly", "smiley", "emojione", "glasses", "boys night"]
			},
			heart_eyes: {
				unicode: "1f60d",
				unicode_alt: "",
				code_decimal: "&#128525;",
				name: "smiling face with heart-shaped eyes",
				shortname: ":heart_eyes:",
				category: "people",
				emoji_order: "13",
				aliases: [],
				aliases_ascii: [],
				keywords: "happy;smiley;love;sex;heart eyes;emotion;beautiful".split(";")
			},
			kissing_heart: {
				unicode: "1f618",
				unicode_alt: "",
				code_decimal: "&#128536;",
				name: "face throwing a kiss",
				shortname: ":kissing_heart:",
				category: "people",
				emoji_order: "14",
				aliases: [],
				aliases_ascii: [":*", ":-*", "=*", ":^*"],
				keywords: ["smiley", "love", "sexy"]
			},
			kissing: {
				unicode: "1f617",
				unicode_alt: "",
				code_decimal: "&#128535;",
				name: "kissing face",
				shortname: ":kissing:",
				category: "people",
				emoji_order: "15",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "sexy"]
			},
			kissing_smiling_eyes: {
				unicode: "1f619",
				unicode_alt: "",
				code_decimal: "&#128537;",
				name: "kissing face with smiling eyes",
				shortname: ":kissing_smiling_eyes:",
				category: "people",
				emoji_order: "16",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "sexy"]
			},
			kissing_closed_eyes: {
				unicode: "1f61a",
				unicode_alt: "",
				code_decimal: "&#128538;",
				name: "kissing face with closed eyes",
				shortname: ":kissing_closed_eyes:",
				category: "people",
				emoji_order: "17",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "sexy"]
			},
			relaxed: {
				unicode: "263a",
				unicode_alt: "263a-fe0f",
				code_decimal: "&#9786;",
				name: "white smiling face",
				shortname: ":relaxed:",
				category: "people",
				emoji_order: "18",
				aliases: [],
				aliases_ascii: [],
				keywords: ["happy", "smiley"]
			},
			slight_smile: {
				unicode: "1f642",
				unicode_alt: "",
				code_decimal: "&#128578;",
				name: "slightly smiling face",
				shortname: ":slight_smile:",
				category: "people",
				emoji_order: "19",
				aliases: [":slightly_smiling_face:"],
				aliases_ascii: [":)", ":-)", "=]", "=)", ":]"],
				keywords: ["happy", "smiley"]
			},
			hugging: {
				unicode: "1f917",
				unicode_alt: "",
				code_decimal: "&#129303;",
				name: "hugging face",
				shortname: ":hugging:",
				category: "people",
				emoji_order: "20",
				aliases: [":hugging_face:"],
				aliases_ascii: [],
				keywords: ["smiley", "hug", "thank you"]
			},
			thinking: {
				unicode: "1f914",
				unicode_alt: "",
				code_decimal: "&#129300;",
				name: "thinking face",
				shortname: ":thinking:",
				category: "people",
				emoji_order: "21",
				aliases: [":thinking_face:"],
				aliases_ascii: [],
				keywords: ["smiley",
					"thinking", "boys night"]
			},
			neutral_face: {
				unicode: "1f610",
				unicode_alt: "",
				code_decimal: "&#128528;",
				name: "neutral face",
				shortname: ":neutral_face:",
				category: "people",
				emoji_order: "22",
				aliases: [],
				aliases_ascii: [],
				keywords: ["mad", "smiley", "shrug", "neutral", "emotion"]
			},
			expressionless: {
				unicode: "1f611",
				unicode_alt: "",
				code_decimal: "&#128529;",
				name: "expressionless face",
				shortname: ":expressionless:",
				category: "people",
				emoji_order: "23",
				aliases: [],
				aliases_ascii: ["-_-", "-__-", "-___-"],
				keywords: ["mad", "smiley", "neutral",
					"emotion"]
			},
			no_mouth: {
				unicode: "1f636",
				unicode_alt: "",
				code_decimal: "&#128566;",
				name: "face without mouth",
				shortname: ":no_mouth:",
				category: "people",
				emoji_order: "24",
				aliases: [],
				aliases_ascii: ":-X :X :-# :# =X =x :x :-x =#".split(" "),
				keywords: ["mad", "smiley", "neutral", "emotion"]
			},
			rolling_eyes: {
				unicode: "1f644",
				unicode_alt: "",
				code_decimal: "&#128580;",
				name: "face with rolling eyes",
				shortname: ":rolling_eyes:",
				category: "people",
				emoji_order: "25",
				aliases: [":face_with_rolling_eyes:"],
				aliases_ascii: [],
				keywords: ["mad",
					"smiley", "rolling eyes", "emotion", "sarcastic"]
			},
			smirk: {
				unicode: "1f60f",
				unicode_alt: "",
				code_decimal: "&#128527;",
				name: "smirking face",
				shortname: ":smirk:",
				category: "people",
				emoji_order: "26",
				aliases: [],
				aliases_ascii: [],
				keywords: ["silly", "smiley", "sexy", "sarcastic"]
			},
			persevere: {
				unicode: "1f623",
				unicode_alt: "",
				code_decimal: "&#128547;",
				name: "persevering face",
				shortname: ":persevere:",
				category: "people",
				emoji_order: "27",
				aliases: [],
				aliases_ascii: [">.<"],
				keywords: ["sad", "smiley", "angry", "emotion"]
			},
			disappointed_relieved: {
				unicode: "1f625",
				unicode_alt: "",
				code_decimal: "&#128549;",
				name: "disappointed but relieved face",
				shortname: ":disappointed_relieved:",
				category: "people",
				emoji_order: "28",
				aliases: [],
				aliases_ascii: [],
				keywords: "sad smiley stressed sweat cry emotion".split(" ")
			},
			open_mouth: {
				unicode: "1f62e",
				unicode_alt: "",
				code_decimal: "&#128558;",
				name: "face with open mouth",
				shortname: ":open_mouth:",
				category: "people",
				emoji_order: "29",
				aliases: [],
				aliases_ascii: ":-O :O :-o :o O_O >:O".split(" "),
				keywords: ["smiley", "surprised", "wow", "emotion"]
			},
			zipper_mouth: {
				unicode: "1f910",
				unicode_alt: "",
				code_decimal: "&#129296;",
				name: "zipper-mouth face",
				shortname: ":zipper_mouth:",
				category: "people",
				emoji_order: "30",
				aliases: [":zipper_mouth_face:"],
				aliases_ascii: [],
				keywords: ["mad", "smiley"]
			},
			hushed: {
				unicode: "1f62f",
				unicode_alt: "",
				code_decimal: "&#128559;",
				name: "hushed face",
				shortname: ":hushed:",
				category: "people",
				emoji_order: "31",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "surprised", "wow"]
			},
			sleepy: {
				unicode: "1f62a",
				unicode_alt: "",
				code_decimal: "&#128554;",
				name: "sleepy face",
				shortname: ":sleepy:",
				category: "people",
				emoji_order: "32",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "sick", "emotion"]
			},
			tired_face: {
				unicode: "1f62b",
				unicode_alt: "",
				code_decimal: "&#128555;",
				name: "tired face",
				shortname: ":tired_face:",
				category: "people",
				emoji_order: "33",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sad", "smiley", "tired", "emotion"]
			},
			sleeping: {
				unicode: "1f634",
				unicode_alt: "",
				code_decimal: "&#128564;",
				name: "sleeping face",
				shortname: ":sleeping:",
				category: "people",
				emoji_order: "34",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "tired", "emotion", "goodnight"]
			},
			relieved: {
				unicode: "1f60c",
				unicode_alt: "",
				code_decimal: "&#128524;",
				name: "relieved face",
				shortname: ":relieved:",
				category: "people",
				emoji_order: "35",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "emotion"]
			},
			nerd: {
				unicode: "1f913",
				unicode_alt: "",
				code_decimal: "&#129299;",
				name: "nerd face",
				shortname: ":nerd:",
				category: "people",
				emoji_order: "36",
				aliases: [":nerd_face:"],
				aliases_ascii: [],
				keywords: ["smiley", "glasses"]
			},
			stuck_out_tongue: {
				unicode: "1f61b",
				unicode_alt: "",
				code_decimal: "&#128539;",
				name: "face with stuck-out tongue",
				shortname: ":stuck_out_tongue:",
				category: "people",
				emoji_order: "37",
				aliases: [],
				aliases_ascii: ":P :-P =P :-p :p =p :-\u00de :\u00de :\u00fe :-\u00fe :-b :b d:".split(" "),
				keywords: ["smiley", "sex", "emotion"]
			},
			stuck_out_tongue_winking_eye: {
				unicode: "1f61c",
				unicode_alt: "",
				code_decimal: "&#128540;",
				name: "face with stuck-out tongue and winking eye",
				shortname: ":stuck_out_tongue_winking_eye:",
				category: "people",
				emoji_order: "38",
				aliases: [],
				aliases_ascii: [">:P", "X-P", "x-p"],
				keywords: ["happy", "smiley", "emotion", "parties"]
			},
			stuck_out_tongue_closed_eyes: {
				unicode: "1f61d",
				unicode_alt: "",
				code_decimal: "&#128541;",
				name: "face with stuck-out tongue and tightly-closed eyes",
				shortname: ":stuck_out_tongue_closed_eyes:",
				category: "people",
				emoji_order: "39",
				aliases: [],
				aliases_ascii: [],
				keywords: ["happy", "smiley", "emotion"]
			},
			drooling_face: {
				unicode: "1f924",
				unicode_alt: "",
				code_decimal: "&#129316;",
				name: "drooling face",
				shortname: ":drooling_face:",
				category: "people",
				emoji_order: "40",
				aliases: [":drool:"],
				aliases_ascii: [],
				keywords: []
			},
			unamused: {
				unicode: "1f612",
				unicode_alt: "",
				code_decimal: "&#128530;",
				name: "unamused face",
				shortname: ":unamused:",
				category: "people",
				emoji_order: "41",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sad", "mad", "smiley", "tired", "emotion"]
			},
			sweat: {
				unicode: "1f613",
				unicode_alt: "",
				code_decimal: "&#128531;",
				name: "face with cold sweat",
				shortname: ":sweat:",
				category: "people",
				emoji_order: "42",
				aliases: [],
				aliases_ascii: ["':(", "':-(", "'=("],
				keywords: ["sad", "smiley",
					"stressed", "sweat", "emotion"]
			},
			pensive: {
				unicode: "1f614",
				unicode_alt: "",
				code_decimal: "&#128532;",
				name: "pensive face",
				shortname: ":pensive:",
				category: "people",
				emoji_order: "43",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sad", "smiley", "emotion", "rip"]
			},
			confused: {
				unicode: "1f615",
				unicode_alt: "",
				code_decimal: "&#128533;",
				name: "confused face",
				shortname: ":confused:",
				category: "people",
				emoji_order: "44",
				aliases: [],
				aliases_ascii: ">:\\ >:/ :-/ :-. :/ :\\ =/ =\\ :L =L".split(" "),
				keywords: ["smiley", "surprised", "emotion"]
			},
			upside_down: {
				unicode: "1f643",
				unicode_alt: "",
				code_decimal: "&#128579;",
				name: "upside-down face",
				shortname: ":upside_down:",
				category: "people",
				emoji_order: "45",
				aliases: [":upside_down_face:"],
				aliases_ascii: [],
				keywords: ["silly", "smiley", "sarcastic"]
			},
			money_mouth: {
				unicode: "1f911",
				unicode_alt: "",
				code_decimal: "&#129297;",
				name: "money-mouth face",
				shortname: ":money_mouth:",
				category: "people",
				emoji_order: "46",
				aliases: [":money_mouth_face:"],
				aliases_ascii: [],
				keywords: ["smiley", "win", "money", "emotion", "boys night"]
			},
			astonished: {
				unicode: "1f632",
				unicode_alt: "",
				code_decimal: "&#128562;",
				name: "astonished face",
				shortname: ":astonished:",
				category: "people",
				emoji_order: "47",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "surprised", "wow", "emotion", "omg"]
			},
			frowning2: {
				unicode: "2639",
				unicode_alt: "2639-fe0f",
				code_decimal: "&#9785;",
				name: "white frowning face",
				shortname: ":frowning2:",
				category: "people",
				emoji_order: "48",
				aliases: [":white_frowning_face:"],
				aliases_ascii: [],
				keywords: ["sad", "smiley", "emotion"]
			},
			slight_frown: {
				unicode: "1f641",
				unicode_alt: "",
				code_decimal: "&#128577;",
				name: "slightly frowning face",
				shortname: ":slight_frown:",
				category: "people",
				emoji_order: "49",
				aliases: [":slightly_frowning_face:"],
				aliases_ascii: [],
				keywords: ["sad", "smiley", "emotion"]
			},
			confounded: {
				unicode: "1f616",
				unicode_alt: "",
				code_decimal: "&#128534;",
				name: "confounded face",
				shortname: ":confounded:",
				category: "people",
				emoji_order: "50",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sad", "smiley", "angry", "emotion"]
			},
			disappointed: {
				unicode: "1f61e",
				unicode_alt: "",
				code_decimal: "&#128542;",
				name: "disappointed face",
				shortname: ":disappointed:",
				category: "people",
				emoji_order: "51",
				aliases: [],
				aliases_ascii: ">:[ :-( :( :-[ :[ =(".split(" "),
				keywords: ["sad", "smiley", "tired", "emotion"]
			},
			worried: {
				unicode: "1f61f",
				unicode_alt: "",
				code_decimal: "&#128543;",
				name: "worried face",
				shortname: ":worried:",
				category: "people",
				emoji_order: "52",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sad", "smiley", "emotion"]
			},
			triumph: {
				unicode: "1f624",
				unicode_alt: "",
				code_decimal: "&#128548;",
				name: "face with look of triumph",
				shortname: ":triumph:",
				category: "people",
				emoji_order: "53",
				aliases: [],
				aliases_ascii: [],
				keywords: ["mad", "smiley", "angry", "emotion", "steam"]
			},
			cry: {
				unicode: "1f622",
				unicode_alt: "",
				code_decimal: "&#128546;",
				name: "crying face",
				shortname: ":cry:",
				category: "people",
				emoji_order: "54",
				aliases: [],
				aliases_ascii: [":'(", ":'-(", ";(", ";-("],
				keywords: "sad smiley cry emotion rip heartbreak".split(" ")
			},
			sob: {
				unicode: "1f62d",
				unicode_alt: "",
				code_decimal: "&#128557;",
				name: "loudly crying face",
				shortname: ":sob:",
				category: "people",
				emoji_order: "55",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sad", "smiley", "cry", "emotion", "heartbreak"]
			},
			frowning: {
				unicode: "1f626",
				unicode_alt: "",
				code_decimal: "&#128550;",
				name: "frowning face with open mouth",
				shortname: ":frowning:",
				category: "people",
				emoji_order: "56",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sad", "smiley", "surprised", "emotion"]
			},
			anguished: {
				unicode: "1f627",
				unicode_alt: "",
				code_decimal: "&#128551;",
				name: "anguished face",
				shortname: ":anguished:",
				category: "people",
				emoji_order: "57",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sad",
					"smiley", "surprised", "emotion"]
			},
			fearful: {
				unicode: "1f628",
				unicode_alt: "",
				code_decimal: "&#128552;",
				name: "fearful face",
				shortname: ":fearful:",
				category: "people",
				emoji_order: "58",
				aliases: [],
				aliases_ascii: ["D:"],
				keywords: ["smiley", "surprised", "emotion"]
			},
			weary: {
				unicode: "1f629",
				unicode_alt: "",
				code_decimal: "&#128553;",
				name: "weary face",
				shortname: ":weary:",
				category: "people",
				emoji_order: "59",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sad", "smiley", "tired", "stressed", "emotion"]
			},
			grimacing: {
				unicode: "1f62c",
				unicode_alt: "",
				code_decimal: "&#128556;",
				name: "grimacing face",
				shortname: ":grimacing:",
				category: "people",
				emoji_order: "60",
				aliases: [],
				aliases_ascii: [],
				keywords: ["silly", "smiley", "emotion", "selfie"]
			},
			cold_sweat: {
				unicode: "1f630",
				unicode_alt: "",
				code_decimal: "&#128560;",
				name: "face with open mouth and cold sweat",
				shortname: ":cold_sweat:",
				category: "people",
				emoji_order: "61",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "sweat", "emotion"]
			},
			scream: {
				unicode: "1f631",
				unicode_alt: "",
				code_decimal: "&#128561;",
				name: "face screaming in fear",
				shortname: ":scream:",
				category: "people",
				emoji_order: "62",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "surprised", "wow", "emotion", "omg"]
			},
			flushed: {
				unicode: "1f633",
				unicode_alt: "",
				code_decimal: "&#128563;",
				name: "flushed face",
				shortname: ":flushed:",
				category: "people",
				emoji_order: "63",
				aliases: [],
				aliases_ascii: [":$", "=$"],
				keywords: ["smiley", "emotion", "omg"]
			},
			dizzy_face: {
				unicode: "1f635",
				unicode_alt: "",
				code_decimal: "&#128565;",
				name: "dizzy face",
				shortname: ":dizzy_face:",
				category: "people",
				emoji_order: "64",
				aliases: [],
				aliases_ascii: "#-) #) %-) %) X) X-)".split(" "),
				keywords: "smiley surprised dead wow emotion omg".split(" ")
			},
			rage: {
				unicode: "1f621",
				unicode_alt: "",
				code_decimal: "&#128545;",
				name: "pouting face",
				shortname: ":rage:",
				category: "people",
				emoji_order: "65",
				aliases: [],
				aliases_ascii: [],
				keywords: ["mad", "smiley", "angry", "emotion"]
			},
			angry: {
				unicode: "1f620",
				unicode_alt: "",
				code_decimal: "&#128544;",
				name: "angry face",
				shortname: ":angry:",
				category: "people",
				emoji_order: "66",
				aliases: [],
				aliases_ascii: [">:(", ">:-(",
					":@"],
				keywords: ["mad", "smiley", "emotion"]
			},
			innocent: {
				unicode: "1f607",
				unicode_alt: "",
				code_decimal: "&#128519;",
				name: "smiling face with halo",
				shortname: ":innocent:",
				category: "people",
				emoji_order: "67",
				aliases: [],
				aliases_ascii: "O:-) 0:-3 0:3 0:-) 0:) 0;^) O:) O;-) O=) 0;-) O:-3 O:3".split(" "),
				keywords: ["smiley", "emotion"]
			},
			cowboy: {
				unicode: "1f920",
				unicode_alt: "",
				code_decimal: "&#129312;",
				name: "face with cowboy hat",
				shortname: ":cowboy:",
				category: "people",
				emoji_order: "68",
				aliases: [":face_with_cowboy_hat:"],
				aliases_ascii: [],
				keywords: []
			},
			clown: {
				unicode: "1f921",
				unicode_alt: "",
				code_decimal: "&#129313;",
				name: "clown face",
				shortname: ":clown:",
				category: "people",
				emoji_order: "69",
				aliases: [":clown_face:"],
				aliases_ascii: [],
				keywords: []
			},
			lying_face: {
				unicode: "1f925",
				unicode_alt: "",
				code_decimal: "&#129317;",
				name: "lying face",
				shortname: ":lying_face:",
				category: "people",
				emoji_order: "70",
				aliases: [":liar:"],
				aliases_ascii: [],
				keywords: []
			},
			mask: {
				unicode: "1f637",
				unicode_alt: "",
				code_decimal: "&#128567;",
				name: "face with medical mask",
				shortname: ":mask:",
				category: "people",
				emoji_order: "71",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "dead", "health", "sick"]
			},
			thermometer_face: {
				unicode: "1f912",
				unicode_alt: "",
				code_decimal: "&#129298;",
				name: "face with thermometer",
				shortname: ":thermometer_face:",
				category: "people",
				emoji_order: "72",
				aliases: [":face_with_thermometer:"],
				aliases_ascii: [],
				keywords: ["smiley", "health", "sick", "emotion"]
			},
			head_bandage: {
				unicode: "1f915",
				unicode_alt: "",
				code_decimal: "&#129301;",
				name: "face with head-bandage",
				shortname: ":head_bandage:",
				category: "people",
				emoji_order: "73",
				aliases: [":face_with_head_bandage:"],
				aliases_ascii: [],
				keywords: ["smiley", "health", "sick", "emotion"]
			},
			nauseated_face: {
				unicode: "1f922",
				unicode_alt: "",
				code_decimal: "&#129314;",
				name: "nauseated face",
				shortname: ":nauseated_face:",
				category: "people",
				emoji_order: "74",
				aliases: [":sick:"],
				aliases_ascii: [],
				keywords: []
			},
			sneezing_face: {
				unicode: "1f927",
				unicode_alt: "",
				code_decimal: "&#129319;",
				name: "sneezing face",
				shortname: ":sneezing_face:",
				category: "people",
				emoji_order: "75",
				aliases: [":sneeze:"],
				aliases_ascii: [],
				keywords: []
			},
			smiling_imp: {
				unicode: "1f608",
				unicode_alt: "",
				code_decimal: "&#128520;",
				name: "smiling face with horns",
				shortname: ":smiling_imp:",
				category: "people",
				emoji_order: "76",
				aliases: [],
				aliases_ascii: [],
				keywords: "silly;smiley;angry;monster;devil;boys night".split(";")
			},
			imp: {
				unicode: "1f47f",
				unicode_alt: "",
				code_decimal: "&#128127;",
				name: "imp",
				shortname: ":imp:",
				category: "people",
				emoji_order: "77",
				aliases: [],
				aliases_ascii: [],
				keywords: ["smiley", "monster", "devil", "wth"]
			},
			japanese_ogre: {
				unicode: "1f479",
				unicode_alt: "",
				code_decimal: "&#128121;",
				name: "japanese ogre",
				shortname: ":japanese_ogre:",
				category: "people",
				emoji_order: "78",
				aliases: [],
				aliases_ascii: [],
				keywords: ["monster"]
			},
			japanese_goblin: {
				unicode: "1f47a",
				unicode_alt: "",
				code_decimal: "&#128122;",
				name: "japanese goblin",
				shortname: ":japanese_goblin:",
				category: "people",
				emoji_order: "79",
				aliases: [],
				aliases_ascii: [],
				keywords: ["angry", "monster"]
			},
			skull: {
				unicode: "1f480",
				unicode_alt: "",
				code_decimal: "&#128128;",
				name: "skull",
				shortname: ":skull:",
				category: "people",
				emoji_order: "80",
				aliases: [":skeleton:"],
				aliases_ascii: [],
				keywords: ["dead", "halloween", "skull"]
			},
			skull_crossbones: {
				unicode: "2620",
				unicode_alt: "2620-fe0f",
				code_decimal: "&#9760;",
				name: "skull and crossbones",
				shortname: ":skull_crossbones:",
				category: "objects",
				emoji_order: "81",
				aliases: [":skull_and_crossbones:"],
				aliases_ascii: [],
				keywords: ["symbol", "dead", "skull"]
			},
			ghost: {
				unicode: "1f47b",
				unicode_alt: "",
				code_decimal: "&#128123;",
				name: "ghost",
				shortname: ":ghost:",
				category: "people",
				emoji_order: "82",
				aliases: [],
				aliases_ascii: [],
				keywords: ["holidays", "halloween", "monster"]
			},
			alien: {
				unicode: "1f47d",
				unicode_alt: "",
				code_decimal: "&#128125;",
				name: "extraterrestrial alien",
				shortname: ":alien:",
				category: "people",
				emoji_order: "83",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "monster", "alien", "scientology"]
			},
			space_invader: {
				unicode: "1f47e",
				unicode_alt: "",
				code_decimal: "&#128126;",
				name: "alien monster",
				shortname: ":space_invader:",
				category: "activity",
				emoji_order: "84",
				aliases: [],
				aliases_ascii: [],
				keywords: ["monster", "alien"]
			},
			robot: {
				unicode: "1f916",
				unicode_alt: "",
				code_decimal: "&#129302;",
				name: "robot face",
				shortname: ":robot:",
				category: "people",
				emoji_order: "85",
				aliases: [":robot_face:"],
				aliases_ascii: [],
				keywords: ["monster", "robot"]
			},
			poop: {
				unicode: "1f4a9",
				unicode_alt: "",
				code_decimal: "&#128169;",
				name: "pile of poo",
				shortname: ":poop:",
				category: "people",
				emoji_order: "86",
				aliases: [":shit:", ":hankey:", ":poo:"],
				aliases_ascii: [],
				keywords: ["bathroom", "shit", "sol", "diarrhea"]
			},
			smiley_cat: {
				unicode: "1f63a",
				unicode_alt: "",
				code_decimal: "&#128570;",
				name: "smiling cat face with open mouth",
				shortname: ":smiley_cat:",
				category: "people",
				emoji_order: "87",
				aliases: [],
				aliases_ascii: [],
				keywords: ["happy", "cat", "animal"]
			},
			smile_cat: {
				unicode: "1f638",
				unicode_alt: "",
				code_decimal: "&#128568;",
				name: "grinning cat face with smiling eyes",
				shortname: ":smile_cat:",
				category: "people",
				emoji_order: "88",
				aliases: [],
				aliases_ascii: [],
				keywords: ["happy", "cat", "animal"]
			},
			joy_cat: {
				unicode: "1f639",
				unicode_alt: "",
				code_decimal: "&#128569;",
				name: "cat face with tears of joy",
				shortname: ":joy_cat:",
				category: "people",
				emoji_order: "89",
				aliases: [],
				aliases_ascii: [],
				keywords: "happy silly cry laugh cat animal sarcastic".split(" ")
			},
			heart_eyes_cat: {
				unicode: "1f63b",
				unicode_alt: "",
				code_decimal: "&#128571;",
				name: "smiling cat face with heart-shaped eyes",
				shortname: ":heart_eyes_cat:",
				category: "people",
				emoji_order: "90",
				aliases: [],
				aliases_ascii: [],
				keywords: ["heart eyes", "cat", "animal", "beautiful"]
			},
			smirk_cat: {
				unicode: "1f63c",
				unicode_alt: "",
				code_decimal: "&#128572;",
				name: "cat face with wry smile",
				shortname: ":smirk_cat:",
				category: "people",
				emoji_order: "91",
				aliases: [],
				aliases_ascii: [],
				keywords: ["cat", "animal"]
			},
			kissing_cat: {
				unicode: "1f63d",
				unicode_alt: "",
				code_decimal: "&#128573;",
				name: "kissing cat face with closed eyes",
				shortname: ":kissing_cat:",
				category: "people",
				emoji_order: "92",
				aliases: [],
				aliases_ascii: [],
				keywords: ["cat", "animal"]
			},
			scream_cat: {
				unicode: "1f640",
				unicode_alt: "",
				code_decimal: "&#128576;",
				name: "weary cat face",
				shortname: ":scream_cat:",
				category: "people",
				emoji_order: "93",
				aliases: [],
				aliases_ascii: [],
				keywords: ["cat",
					"animal"]
			},
			crying_cat_face: {
				unicode: "1f63f",
				unicode_alt: "",
				code_decimal: "&#128575;",
				name: "crying cat face",
				shortname: ":crying_cat_face:",
				category: "people",
				emoji_order: "94",
				aliases: [],
				aliases_ascii: [],
				keywords: ["cry", "cat", "animal"]
			},
			pouting_cat: {
				unicode: "1f63e",
				unicode_alt: "",
				code_decimal: "&#128574;",
				name: "pouting cat face",
				shortname: ":pouting_cat:",
				category: "people",
				emoji_order: "95",
				aliases: [],
				aliases_ascii: [],
				keywords: ["cat", "animal"]
			},
			see_no_evil: {
				unicode: "1f648",
				unicode_alt: "",
				code_decimal: "&#128584;",
				name: "see-no-evil monkey",
				shortname: ":see_no_evil:",
				category: "nature",
				emoji_order: "96",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			hear_no_evil: {
				unicode: "1f649",
				unicode_alt: "",
				code_decimal: "&#128585;",
				name: "hear-no-evil monkey",
				shortname: ":hear_no_evil:",
				category: "nature",
				emoji_order: "97",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			speak_no_evil: {
				unicode: "1f64a",
				unicode_alt: "",
				code_decimal: "&#128586;",
				name: "speak-no-evil monkey",
				shortname: ":speak_no_evil:",
				category: "nature",
				emoji_order: "98",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			boy: {
				unicode: "1f466",
				unicode_alt: "",
				code_decimal: "&#128102;",
				name: "boy",
				shortname: ":boy:",
				category: "people",
				emoji_order: "99",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "baby", "diversity"]
			},
			boy_tone1: {
				unicode: "1f466-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128102;&#127995;",
				name: "boy tone 1",
				shortname: ":boy_tone1:",
				category: "people",
				emoji_order: "100",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			boy_tone2: {
				unicode: "1f466-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128102;&#127996;",
				name: "boy tone 2",
				shortname: ":boy_tone2:",
				category: "people",
				emoji_order: "101",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			boy_tone3: {
				unicode: "1f466-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128102;&#127997;",
				name: "boy tone 3",
				shortname: ":boy_tone3:",
				category: "people",
				emoji_order: "102",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			boy_tone4: {
				unicode: "1f466-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128102;&#127998;",
				name: "boy tone 4",
				shortname: ":boy_tone4:",
				category: "people",
				emoji_order: "103",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			boy_tone5: {
				unicode: "1f466-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128102;&#127999;",
				name: "boy tone 5",
				shortname: ":boy_tone5:",
				category: "people",
				emoji_order: "104",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			girl: {
				unicode: "1f467",
				unicode_alt: "",
				code_decimal: "&#128103;",
				name: "girl",
				shortname: ":girl:",
				category: "people",
				emoji_order: "105",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "women", "baby", "diversity"]
			},
			girl_tone1: {
				unicode: "1f467-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128103;&#127995;",
				name: "girl tone 1",
				shortname: ":girl_tone1:",
				category: "people",
				emoji_order: "106",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			girl_tone2: {
				unicode: "1f467-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128103;&#127996;",
				name: "girl tone 2",
				shortname: ":girl_tone2:",
				category: "people",
				emoji_order: "107",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			girl_tone3: {
				unicode: "1f467-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128103;&#127997;",
				name: "girl tone 3",
				shortname: ":girl_tone3:",
				category: "people",
				emoji_order: "108",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			girl_tone4: {
				unicode: "1f467-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128103;&#127998;",
				name: "girl tone 4",
				shortname: ":girl_tone4:",
				category: "people",
				emoji_order: "109",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			girl_tone5: {
				unicode: "1f467-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128103;&#127999;",
				name: "girl tone 5",
				shortname: ":girl_tone5:",
				category: "people",
				emoji_order: "110",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man: {
				unicode: "1f468",
				unicode_alt: "",
				code_decimal: "&#128104;",
				name: "man",
				shortname: ":man:",
				category: "people",
				emoji_order: "111",
				aliases: [],
				aliases_ascii: [],
				keywords: "people;men;sex;diversity;selfie;boys night".split(";")
			},
			man_tone1: {
				unicode: "1f468-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128104;&#127995;",
				name: "man tone 1",
				shortname: ":man_tone1:",
				category: "people",
				emoji_order: "112",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_tone2: {
				unicode: "1f468-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128104;&#127996;",
				name: "man tone 2",
				shortname: ":man_tone2:",
				category: "people",
				emoji_order: "113",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_tone3: {
				unicode: "1f468-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128104;&#127997;",
				name: "man tone 3",
				shortname: ":man_tone3:",
				category: "people",
				emoji_order: "114",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_tone4: {
				unicode: "1f468-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128104;&#127998;",
				name: "man tone 4",
				shortname: ":man_tone4:",
				category: "people",
				emoji_order: "115",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_tone5: {
				unicode: "1f468-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128104;&#127999;",
				name: "man tone 5",
				shortname: ":man_tone5:",
				category: "people",
				emoji_order: "116",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			woman: {
				unicode: "1f469",
				unicode_alt: "",
				code_decimal: "&#128105;",
				name: "woman",
				shortname: ":woman:",
				category: "people",
				emoji_order: "117",
				aliases: [],
				aliases_ascii: [],
				keywords: "people;women;sex;diversity;feminist;selfie;girls night".split(";")
			},
			woman_tone1: {
				unicode: "1f469-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128105;&#127995;",
				name: "woman tone 1",
				shortname: ":woman_tone1:",
				category: "people",
				emoji_order: "118",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			woman_tone2: {
				unicode: "1f469-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128105;&#127996;",
				name: "woman tone 2",
				shortname: ":woman_tone2:",
				category: "people",
				emoji_order: "119",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			woman_tone3: {
				unicode: "1f469-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128105;&#127997;",
				name: "woman tone 3",
				shortname: ":woman_tone3:",
				category: "people",
				emoji_order: "120",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			woman_tone4: {
				unicode: "1f469-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128105;&#127998;",
				name: "woman tone 4",
				shortname: ":woman_tone4:",
				category: "people",
				emoji_order: "121",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			woman_tone5: {
				unicode: "1f469-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128105;&#127999;",
				name: "woman tone 5",
				shortname: ":woman_tone5:",
				category: "people",
				emoji_order: "122",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			older_man: {
				unicode: "1f474",
				unicode_alt: "",
				code_decimal: "&#128116;",
				name: "older man",
				shortname: ":older_man:",
				category: "people",
				emoji_order: "123",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "men", "old people", "diversity"]
			},
			older_man_tone1: {
				unicode: "1f474-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128116;&#127995;",
				name: "older man tone 1",
				shortname: ":older_man_tone1:",
				category: "people",
				emoji_order: "124",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			older_man_tone2: {
				unicode: "1f474-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128116;&#127996;",
				name: "older man tone 2",
				shortname: ":older_man_tone2:",
				category: "people",
				emoji_order: "125",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			older_man_tone3: {
				unicode: "1f474-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128116;&#127997;",
				name: "older man tone 3",
				shortname: ":older_man_tone3:",
				category: "people",
				emoji_order: "126",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			older_man_tone4: {
				unicode: "1f474-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128116;&#127998;",
				name: "older man tone 4",
				shortname: ":older_man_tone4:",
				category: "people",
				emoji_order: "127",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			older_man_tone5: {
				unicode: "1f474-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128116;&#127999;",
				name: "older man tone 5",
				shortname: ":older_man_tone5:",
				category: "people",
				emoji_order: "128",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			older_woman: {
				unicode: "1f475",
				unicode_alt: "",
				code_decimal: "&#128117;",
				name: "older woman",
				shortname: ":older_woman:",
				category: "people",
				emoji_order: "129",
				aliases: [":grandma:"],
				aliases_ascii: [],
				keywords: ["people", "old people", "diversity"]
			},
			older_woman_tone1: {
				unicode: "1f475-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128117;&#127995;",
				name: "older woman tone 1",
				shortname: ":older_woman_tone1:",
				category: "people",
				emoji_order: "130",
				aliases: [":grandma_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			older_woman_tone2: {
				unicode: "1f475-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128117;&#127996;",
				name: "older woman tone 2",
				shortname: ":older_woman_tone2:",
				category: "people",
				emoji_order: "131",
				aliases: [":grandma_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			older_woman_tone3: {
				unicode: "1f475-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128117;&#127997;",
				name: "older woman tone 3",
				shortname: ":older_woman_tone3:",
				category: "people",
				emoji_order: "132",
				aliases: [":grandma_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			older_woman_tone4: {
				unicode: "1f475-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128117;&#127998;",
				name: "older woman tone 4",
				shortname: ":older_woman_tone4:",
				category: "people",
				emoji_order: "133",
				aliases: [":grandma_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			older_woman_tone5: {
				unicode: "1f475-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128117;&#127999;",
				name: "older woman tone 5",
				shortname: ":older_woman_tone5:",
				category: "people",
				emoji_order: "134",
				aliases: [":grandma_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			baby: {
				unicode: "1f476",
				unicode_alt: "",
				code_decimal: "&#128118;",
				name: "baby",
				shortname: ":baby:",
				category: "people",
				emoji_order: "135",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "baby", "diversity"]
			},
			baby_tone1: {
				unicode: "1f476-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128118;&#127995;",
				name: "baby tone 1",
				shortname: ":baby_tone1:",
				category: "people",
				emoji_order: "136",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			baby_tone2: {
				unicode: "1f476-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128118;&#127996;",
				name: "baby tone 2",
				shortname: ":baby_tone2:",
				category: "people",
				emoji_order: "137",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			baby_tone3: {
				unicode: "1f476-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128118;&#127997;",
				name: "baby tone 3",
				shortname: ":baby_tone3:",
				category: "people",
				emoji_order: "138",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			baby_tone4: {
				unicode: "1f476-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128118;&#127998;",
				name: "baby tone 4",
				shortname: ":baby_tone4:",
				category: "people",
				emoji_order: "139",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			baby_tone5: {
				unicode: "1f476-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128118;&#127999;",
				name: "baby tone 5",
				shortname: ":baby_tone5:",
				category: "people",
				emoji_order: "140",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			angel: {
				unicode: "1f47c",
				unicode_alt: "",
				code_decimal: "&#128124;",
				name: "baby angel",
				shortname: ":angel:",
				category: "people",
				emoji_order: "141",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "diversity", "omg"]
			},
			angel_tone1: {
				unicode: "1f47c-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128124;&#127995;",
				name: "baby angel tone 1",
				shortname: ":angel_tone1:",
				category: "people",
				emoji_order: "142",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			angel_tone2: {
				unicode: "1f47c-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128124;&#127996;",
				name: "baby angel tone 2",
				shortname: ":angel_tone2:",
				category: "people",
				emoji_order: "143",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			angel_tone3: {
				unicode: "1f47c-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128124;&#127997;",
				name: "baby angel tone 3",
				shortname: ":angel_tone3:",
				category: "people",
				emoji_order: "144",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			angel_tone4: {
				unicode: "1f47c-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128124;&#127998;",
				name: "baby angel tone 4",
				shortname: ":angel_tone4:",
				category: "people",
				emoji_order: "145",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			angel_tone5: {
				unicode: "1f47c-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128124;&#127999;",
				name: "baby angel tone 5",
				shortname: ":angel_tone5:",
				category: "people",
				emoji_order: "146",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			cop: {
				unicode: "1f46e",
				unicode_alt: "",
				code_decimal: "&#128110;",
				name: "police officer",
				shortname: ":cop:",
				category: "people",
				emoji_order: "339",
				aliases: [],
				aliases_ascii: [],
				keywords: "people hat men diversity job police 911".split(" ")
			},
			cop_tone1: {
				unicode: "1f46e-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128110;&#127995;",
				name: "police officer tone 1",
				shortname: ":cop_tone1:",
				category: "people",
				emoji_order: "340",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			cop_tone2: {
				unicode: "1f46e-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128110;&#127996;",
				name: "police officer tone 2",
				shortname: ":cop_tone2:",
				category: "people",
				emoji_order: "341",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			cop_tone3: {
				unicode: "1f46e-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128110;&#127997;",
				name: "police officer tone 3",
				shortname: ":cop_tone3:",
				category: "people",
				emoji_order: "342",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			cop_tone4: {
				unicode: "1f46e-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128110;&#127998;",
				name: "police officer tone 4",
				shortname: ":cop_tone4:",
				category: "people",
				emoji_order: "343",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			cop_tone5: {
				unicode: "1f46e-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128110;&#127999;",
				name: "police officer tone 5",
				shortname: ":cop_tone5:",
				category: "people",
				emoji_order: "344",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			spy: {
				unicode: "1f575",
				unicode_alt: "1f575-fe0f",
				code_decimal: "&#128373;",
				name: "sleuth or spy",
				shortname: ":spy:",
				category: "people",
				emoji_order: "357",
				aliases: [":sleuth_or_spy:"],
				aliases_ascii: [],
				keywords: "people hat men glasses diversity job".split(" ")
			},
			spy_tone1: {
				unicode: "1f575-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128373;&#127995;",
				name: "sleuth or spy tone 1",
				shortname: ":spy_tone1:",
				category: "people",
				emoji_order: "358",
				aliases: [":sleuth_or_spy_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			spy_tone2: {
				unicode: "1f575-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128373;&#127996;",
				name: "sleuth or spy tone 2",
				shortname: ":spy_tone2:",
				category: "people",
				emoji_order: "359",
				aliases: [":sleuth_or_spy_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			spy_tone3: {
				unicode: "1f575-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128373;&#127997;",
				name: "sleuth or spy tone 3",
				shortname: ":spy_tone3:",
				category: "people",
				emoji_order: "360",
				aliases: [":sleuth_or_spy_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			spy_tone4: {
				unicode: "1f575-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128373;&#127998;",
				name: "sleuth or spy tone 4",
				shortname: ":spy_tone4:",
				category: "people",
				emoji_order: "361",
				aliases: [":sleuth_or_spy_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			spy_tone5: {
				unicode: "1f575-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128373;&#127999;",
				name: "sleuth or spy tone 5",
				shortname: ":spy_tone5:",
				category: "people",
				emoji_order: "362",
				aliases: [":sleuth_or_spy_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			guardsman: {
				unicode: "1f482",
				unicode_alt: "",
				code_decimal: "&#128130;",
				name: "guardsman",
				shortname: ":guardsman:",
				category: "people",
				emoji_order: "375",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "hat", "men", "diversity", "job"]
			},
			guardsman_tone1: {
				unicode: "1f482-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128130;&#127995;",
				name: "guardsman tone 1",
				shortname: ":guardsman_tone1:",
				category: "people",
				emoji_order: "376",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			guardsman_tone2: {
				unicode: "1f482-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128130;&#127996;",
				name: "guardsman tone 2",
				shortname: ":guardsman_tone2:",
				category: "people",
				emoji_order: "377",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			guardsman_tone3: {
				unicode: "1f482-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128130;&#127997;",
				name: "guardsman tone 3",
				shortname: ":guardsman_tone3:",
				category: "people",
				emoji_order: "378",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			guardsman_tone4: {
				unicode: "1f482-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128130;&#127998;",
				name: "guardsman tone 4",
				shortname: ":guardsman_tone4:",
				category: "people",
				emoji_order: "379",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			guardsman_tone5: {
				unicode: "1f482-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128130;&#127999;",
				name: "guardsman tone 5",
				shortname: ":guardsman_tone5:",
				category: "people",
				emoji_order: "380",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			construction_worker: {
				unicode: "1f477",
				unicode_alt: "",
				code_decimal: "&#128119;",
				name: "construction worker",
				shortname: ":construction_worker:",
				category: "people",
				emoji_order: "393",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "hat", "men", "diversity", "job"]
			},
			construction_worker_tone1: {
				unicode: "1f477-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128119;&#127995;",
				name: "construction worker tone 1",
				shortname: ":construction_worker_tone1:",
				category: "people",
				emoji_order: "394",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			construction_worker_tone2: {
				unicode: "1f477-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128119;&#127996;",
				name: "construction worker tone 2",
				shortname: ":construction_worker_tone2:",
				category: "people",
				emoji_order: "395",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			construction_worker_tone3: {
				unicode: "1f477-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128119;&#127997;",
				name: "construction worker tone 3",
				shortname: ":construction_worker_tone3:",
				category: "people",
				emoji_order: "396",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			construction_worker_tone4: {
				unicode: "1f477-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128119;&#127998;",
				name: "construction worker tone 4",
				shortname: ":construction_worker_tone4:",
				category: "people",
				emoji_order: "397",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			construction_worker_tone5: {
				unicode: "1f477-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128119;&#127999;",
				name: "construction worker tone 5",
				shortname: ":construction_worker_tone5:",
				category: "people",
				emoji_order: "398",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_with_turban: {
				unicode: "1f473",
				unicode_alt: "",
				code_decimal: "&#128115;",
				name: "man with turban",
				shortname: ":man_with_turban:",
				category: "people",
				emoji_order: "411",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "hat", "diversity"]
			},
			man_with_turban_tone1: {
				unicode: "1f473-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128115;&#127995;",
				name: "man with turban tone 1",
				shortname: ":man_with_turban_tone1:",
				category: "people",
				emoji_order: "412",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_with_turban_tone2: {
				unicode: "1f473-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128115;&#127996;",
				name: "man with turban tone 2",
				shortname: ":man_with_turban_tone2:",
				category: "people",
				emoji_order: "413",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_with_turban_tone3: {
				unicode: "1f473-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128115;&#127997;",
				name: "man with turban tone 3",
				shortname: ":man_with_turban_tone3:",
				category: "people",
				emoji_order: "414",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_with_turban_tone4: {
				unicode: "1f473-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128115;&#127998;",
				name: "man with turban tone 4",
				shortname: ":man_with_turban_tone4:",
				category: "people",
				emoji_order: "415",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_with_turban_tone5: {
				unicode: "1f473-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128115;&#127999;",
				name: "man with turban tone 5",
				shortname: ":man_with_turban_tone5:",
				category: "people",
				emoji_order: "416",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_blond_hair: {
				unicode: "1f471",
				unicode_alt: "",
				code_decimal: "&#128113;",
				name: "person with blond hair",
				shortname: ":person_with_blond_hair:",
				category: "people",
				emoji_order: "429",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "men",
					"diversity"]
			},
			person_with_blond_hair_tone1: {
				unicode: "1f471-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128113;&#127995;",
				name: "person with blond hair tone 1",
				shortname: ":person_with_blond_hair_tone1:",
				category: "people",
				emoji_order: "430",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_blond_hair_tone2: {
				unicode: "1f471-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128113;&#127996;",
				name: "person with blond hair tone 2",
				shortname: ":person_with_blond_hair_tone2:",
				category: "people",
				emoji_order: "431",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_blond_hair_tone3: {
				unicode: "1f471-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128113;&#127997;",
				name: "person with blond hair tone 3",
				shortname: ":person_with_blond_hair_tone3:",
				category: "people",
				emoji_order: "432",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_blond_hair_tone4: {
				unicode: "1f471-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128113;&#127998;",
				name: "person with blond hair tone 4",
				shortname: ":person_with_blond_hair_tone4:",
				category: "people",
				emoji_order: "433",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_blond_hair_tone5: {
				unicode: "1f471-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128113;&#127999;",
				name: "person with blond hair tone 5",
				shortname: ":person_with_blond_hair_tone5:",
				category: "people",
				emoji_order: "434",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			santa: {
				unicode: "1f385",
				unicode_alt: "",
				code_decimal: "&#127877;",
				name: "father christmas",
				shortname: ":santa:",
				category: "people",
				emoji_order: "447",
				aliases: [],
				aliases_ascii: [],
				keywords: "people hat winter holidays christmas diversity santa".split(" ")
			},
			santa_tone1: {
				unicode: "1f385-1f3fb",
				unicode_alt: "",
				code_decimal: "&#127877;&#127995;",
				name: "father christmas tone 1",
				shortname: ":santa_tone1:",
				category: "people",
				emoji_order: "448",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			santa_tone2: {
				unicode: "1f385-1f3fc",
				unicode_alt: "",
				code_decimal: "&#127877;&#127996;",
				name: "father christmas tone 2",
				shortname: ":santa_tone2:",
				category: "people",
				emoji_order: "449",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			santa_tone3: {
				unicode: "1f385-1f3fd",
				unicode_alt: "",
				code_decimal: "&#127877;&#127997;",
				name: "father christmas tone 3",
				shortname: ":santa_tone3:",
				category: "people",
				emoji_order: "450",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			santa_tone4: {
				unicode: "1f385-1f3fe",
				unicode_alt: "",
				code_decimal: "&#127877;&#127998;",
				name: "father christmas tone 4",
				shortname: ":santa_tone4:",
				category: "people",
				emoji_order: "451",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			santa_tone5: {
				unicode: "1f385-1f3ff",
				unicode_alt: "",
				code_decimal: "&#127877;&#127999;",
				name: "father christmas tone 5",
				shortname: ":santa_tone5:",
				category: "people",
				emoji_order: "452",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			mrs_claus: {
				unicode: "1f936",
				unicode_alt: "",
				code_decimal: "&#129334;",
				name: "mother christmas",
				shortname: ":mrs_claus:",
				category: "people",
				emoji_order: "453",
				aliases: [":mother_christmas:"],
				aliases_ascii: [],
				keywords: []
			},
			mrs_claus_tone1: {
				unicode: "1f936-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129334;&#127995;",
				name: "mother christmas tone 1",
				shortname: ":mrs_claus_tone1:",
				category: "people",
				emoji_order: "454",
				aliases: [":mother_christmas_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			mrs_claus_tone2: {
				unicode: "1f936-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129334;&#127996;",
				name: "mother christmas tone 2",
				shortname: ":mrs_claus_tone2:",
				category: "people",
				emoji_order: "455",
				aliases: [":mother_christmas_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			mrs_claus_tone3: {
				unicode: "1f936-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129334;&#127997;",
				name: "mother christmas tone 3",
				shortname: ":mrs_claus_tone3:",
				category: "people",
				emoji_order: "456",
				aliases: [":mother_christmas_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			mrs_claus_tone4: {
				unicode: "1f936-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129334;&#127998;",
				name: "mother christmas tone 4",
				shortname: ":mrs_claus_tone4:",
				category: "people",
				emoji_order: "457",
				aliases: [":mother_christmas_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			mrs_claus_tone5: {
				unicode: "1f936-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129334;&#127999;",
				name: "mother christmas tone 5",
				shortname: ":mrs_claus_tone5:",
				category: "people",
				emoji_order: "458",
				aliases: [":mother_christmas_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			princess: {
				unicode: "1f478",
				unicode_alt: "",
				code_decimal: "&#128120;",
				name: "princess",
				shortname: ":princess:",
				category: "people",
				emoji_order: "459",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "women", "diversity", "beautiful", "girls night"]
			},
			princess_tone1: {
				unicode: "1f478-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128120;&#127995;",
				name: "princess tone 1",
				shortname: ":princess_tone1:",
				category: "people",
				emoji_order: "460",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			princess_tone2: {
				unicode: "1f478-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128120;&#127996;",
				name: "princess tone 2",
				shortname: ":princess_tone2:",
				category: "people",
				emoji_order: "461",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			princess_tone3: {
				unicode: "1f478-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128120;&#127997;",
				name: "princess tone 3",
				shortname: ":princess_tone3:",
				category: "people",
				emoji_order: "462",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			princess_tone4: {
				unicode: "1f478-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128120;&#127998;",
				name: "princess tone 4",
				shortname: ":princess_tone4:",
				category: "people",
				emoji_order: "463",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			princess_tone5: {
				unicode: "1f478-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128120;&#127999;",
				name: "princess tone 5",
				shortname: ":princess_tone5:",
				category: "people",
				emoji_order: "464",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			prince: {
				unicode: "1f934",
				unicode_alt: "",
				code_decimal: "&#129332;",
				name: "prince",
				shortname: ":prince:",
				category: "people",
				emoji_order: "465",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			prince_tone1: {
				unicode: "1f934-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129332;&#127995;",
				name: "prince tone 1",
				shortname: ":prince_tone1:",
				category: "people",
				emoji_order: "466",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			prince_tone2: {
				unicode: "1f934-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129332;&#127996;",
				name: "prince tone 2",
				shortname: ":prince_tone2:",
				category: "people",
				emoji_order: "467",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			prince_tone3: {
				unicode: "1f934-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129332;&#127997;",
				name: "prince tone 3",
				shortname: ":prince_tone3:",
				category: "people",
				emoji_order: "468",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			prince_tone4: {
				unicode: "1f934-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129332;&#127998;",
				name: "prince tone 4",
				shortname: ":prince_tone4:",
				category: "people",
				emoji_order: "469",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			prince_tone5: {
				unicode: "1f934-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129332;&#127999;",
				name: "prince tone 5",
				shortname: ":prince_tone5:",
				category: "people",
				emoji_order: "470",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bride_with_veil: {
				unicode: "1f470",
				unicode_alt: "",
				code_decimal: "&#128112;",
				name: "bride with veil",
				shortname: ":bride_with_veil:",
				category: "people",
				emoji_order: "471",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "wedding", "women", "diversity"]
			},
			bride_with_veil_tone1: {
				unicode: "1f470-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128112;&#127995;",
				name: "bride with veil tone 1",
				shortname: ":bride_with_veil_tone1:",
				category: "people",
				emoji_order: "472",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bride_with_veil_tone2: {
				unicode: "1f470-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128112;&#127996;",
				name: "bride with veil tone 2",
				shortname: ":bride_with_veil_tone2:",
				category: "people",
				emoji_order: "473",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bride_with_veil_tone3: {
				unicode: "1f470-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128112;&#127997;",
				name: "bride with veil tone 3",
				shortname: ":bride_with_veil_tone3:",
				category: "people",
				emoji_order: "474",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bride_with_veil_tone4: {
				unicode: "1f470-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128112;&#127998;",
				name: "bride with veil tone 4",
				shortname: ":bride_with_veil_tone4:",
				category: "people",
				emoji_order: "475",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bride_with_veil_tone5: {
				unicode: "1f470-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128112;&#127999;",
				name: "bride with veil tone 5",
				shortname: ":bride_with_veil_tone5:",
				category: "people",
				emoji_order: "476",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_in_tuxedo: {
				unicode: "1f935",
				unicode_alt: "",
				code_decimal: "&#129333;",
				name: "man in tuxedo",
				shortname: ":man_in_tuxedo:",
				category: "people",
				emoji_order: "477",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_in_tuxedo_tone1: {
				unicode: "1f935-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129333;&#127995;",
				name: "man in tuxedo tone 1",
				shortname: ":man_in_tuxedo_tone1:",
				category: "people",
				emoji_order: "478",
				aliases: [":tuxedo_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			man_in_tuxedo_tone2: {
				unicode: "1f935-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129333;&#127996;",
				name: "man in tuxedo tone 2",
				shortname: ":man_in_tuxedo_tone2:",
				category: "people",
				emoji_order: "479",
				aliases: [":tuxedo_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			man_in_tuxedo_tone3: {
				unicode: "1f935-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129333;&#127997;",
				name: "man in tuxedo tone 3",
				shortname: ":man_in_tuxedo_tone3:",
				category: "people",
				emoji_order: "480",
				aliases: [":tuxedo_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			man_in_tuxedo_tone4: {
				unicode: "1f935-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129333;&#127998;",
				name: "man in tuxedo tone 4",
				shortname: ":man_in_tuxedo_tone4:",
				category: "people",
				emoji_order: "481",
				aliases: [":tuxedo_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			man_in_tuxedo_tone5: {
				unicode: "1f935-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129333;&#127999;",
				name: "man in tuxedo tone 5",
				shortname: ":man_in_tuxedo_tone5:",
				category: "people",
				emoji_order: "482",
				aliases: [":tuxedo_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			pregnant_woman: {
				unicode: "1f930",
				unicode_alt: "",
				code_decimal: "&#129328;",
				name: "pregnant woman",
				shortname: ":pregnant_woman:",
				category: "people",
				emoji_order: "483",
				aliases: [":expecting_woman:"],
				aliases_ascii: [],
				keywords: []
			},
			pregnant_woman_tone1: {
				unicode: "1f930-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129328;&#127995;",
				name: "pregnant woman tone 1",
				shortname: ":pregnant_woman_tone1:",
				category: "people",
				emoji_order: "484",
				aliases: [":expecting_woman_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			pregnant_woman_tone2: {
				unicode: "1f930-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129328;&#127996;",
				name: "pregnant woman tone 2",
				shortname: ":pregnant_woman_tone2:",
				category: "people",
				emoji_order: "485",
				aliases: [":expecting_woman_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			pregnant_woman_tone3: {
				unicode: "1f930-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129328;&#127997;",
				name: "pregnant woman tone 3",
				shortname: ":pregnant_woman_tone3:",
				category: "people",
				emoji_order: "486",
				aliases: [":expecting_woman_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			pregnant_woman_tone4: {
				unicode: "1f930-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129328;&#127998;",
				name: "pregnant woman tone 4",
				shortname: ":pregnant_woman_tone4:",
				category: "people",
				emoji_order: "487",
				aliases: [":expecting_woman_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			pregnant_woman_tone5: {
				unicode: "1f930-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129328;&#127999;",
				name: "pregnant woman tone 5",
				shortname: ":pregnant_woman_tone5:",
				category: "people",
				emoji_order: "488",
				aliases: [":expecting_woman_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			man_with_gua_pi_mao: {
				unicode: "1f472",
				unicode_alt: "",
				code_decimal: "&#128114;",
				name: "man with gua pi mao",
				shortname: ":man_with_gua_pi_mao:",
				category: "people",
				emoji_order: "489",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "hat", "men", "diversity"]
			},
			man_with_gua_pi_mao_tone1: {
				unicode: "1f472-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128114;&#127995;",
				name: "man with gua pi mao tone 1",
				shortname: ":man_with_gua_pi_mao_tone1:",
				category: "people",
				emoji_order: "490",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_with_gua_pi_mao_tone2: {
				unicode: "1f472-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128114;&#127996;",
				name: "man with gua pi mao tone 2",
				shortname: ":man_with_gua_pi_mao_tone2:",
				category: "people",
				emoji_order: "491",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_with_gua_pi_mao_tone3: {
				unicode: "1f472-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128114;&#127997;",
				name: "man with gua pi mao tone 3",
				shortname: ":man_with_gua_pi_mao_tone3:",
				category: "people",
				emoji_order: "492",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_with_gua_pi_mao_tone4: {
				unicode: "1f472-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128114;&#127998;",
				name: "man with gua pi mao tone 4",
				shortname: ":man_with_gua_pi_mao_tone4:",
				category: "people",
				emoji_order: "493",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_with_gua_pi_mao_tone5: {
				unicode: "1f472-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128114;&#127999;",
				name: "man with gua pi mao tone 5",
				shortname: ":man_with_gua_pi_mao_tone5:",
				category: "people",
				emoji_order: "494",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_frowning: {
				unicode: "1f64d",
				unicode_alt: "",
				code_decimal: "&#128589;",
				name: "person frowning",
				shortname: ":person_frowning:",
				category: "people",
				emoji_order: "495",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "women", "diversity"]
			},
			person_frowning_tone1: {
				unicode: "1f64d-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128589;&#127995;",
				name: "person frowning tone 1",
				shortname: ":person_frowning_tone1:",
				category: "people",
				emoji_order: "496",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_frowning_tone2: {
				unicode: "1f64d-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128589;&#127996;",
				name: "person frowning tone 2",
				shortname: ":person_frowning_tone2:",
				category: "people",
				emoji_order: "497",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_frowning_tone3: {
				unicode: "1f64d-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128589;&#127997;",
				name: "person frowning tone 3",
				shortname: ":person_frowning_tone3:",
				category: "people",
				emoji_order: "498",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_frowning_tone4: {
				unicode: "1f64d-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128589;&#127998;",
				name: "person frowning tone 4",
				shortname: ":person_frowning_tone4:",
				category: "people",
				emoji_order: "499",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_frowning_tone5: {
				unicode: "1f64d-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128589;&#127999;",
				name: "person frowning tone 5",
				shortname: ":person_frowning_tone5:",
				category: "people",
				emoji_order: "500",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_pouting_face: {
				unicode: "1f64e",
				unicode_alt: "",
				code_decimal: "&#128590;",
				name: "person with pouting face",
				shortname: ":person_with_pouting_face:",
				category: "people",
				emoji_order: "513",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "women", "diversity"]
			},
			person_with_pouting_face_tone1: {
				unicode: "1f64e-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128590;&#127995;",
				name: "person with pouting face tone1",
				shortname: ":person_with_pouting_face_tone1:",
				category: "people",
				emoji_order: "514",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_pouting_face_tone2: {
				unicode: "1f64e-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128590;&#127996;",
				name: "person with pouting face tone2",
				shortname: ":person_with_pouting_face_tone2:",
				category: "people",
				emoji_order: "515",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_pouting_face_tone3: {
				unicode: "1f64e-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128590;&#127997;",
				name: "person with pouting face tone3",
				shortname: ":person_with_pouting_face_tone3:",
				category: "people",
				emoji_order: "516",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_pouting_face_tone4: {
				unicode: "1f64e-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128590;&#127998;",
				name: "person with pouting face tone4",
				shortname: ":person_with_pouting_face_tone4:",
				category: "people",
				emoji_order: "517",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			person_with_pouting_face_tone5: {
				unicode: "1f64e-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128590;&#127999;",
				name: "person with pouting face tone5",
				shortname: ":person_with_pouting_face_tone5:",
				category: "people",
				emoji_order: "518",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			no_good: {
				unicode: "1f645",
				unicode_alt: "",
				code_decimal: "&#128581;",
				name: "face with no good gesture",
				shortname: ":no_good:",
				category: "people",
				emoji_order: "531",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "women", "diversity", "girls night"]
			},
			no_good_tone1: {
				unicode: "1f645-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128581;&#127995;",
				name: "face with no good gesture tone 1",
				shortname: ":no_good_tone1:",
				category: "people",
				emoji_order: "532",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			no_good_tone2: {
				unicode: "1f645-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128581;&#127996;",
				name: "face with no good gesture tone 2",
				shortname: ":no_good_tone2:",
				category: "people",
				emoji_order: "533",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			no_good_tone3: {
				unicode: "1f645-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128581;&#127997;",
				name: "face with no good gesture tone 3",
				shortname: ":no_good_tone3:",
				category: "people",
				emoji_order: "534",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			no_good_tone4: {
				unicode: "1f645-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128581;&#127998;",
				name: "face with no good gesture tone 4",
				shortname: ":no_good_tone4:",
				category: "people",
				emoji_order: "535",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			no_good_tone5: {
				unicode: "1f645-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128581;&#127999;",
				name: "face with no good gesture tone 5",
				shortname: ":no_good_tone5:",
				category: "people",
				emoji_order: "536",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_woman: {
				unicode: "1f646",
				unicode_alt: "",
				code_decimal: "&#128582;",
				name: "face with ok gesture",
				shortname: ":ok_woman:",
				category: "people",
				emoji_order: "549",
				aliases: [],
				aliases_ascii: ["*\\0/*", "\\0/", "*\\O/*", "\\O/"],
				keywords: ["people", "women", "diversity"]
			},
			ok_woman_tone1: {
				unicode: "1f646-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128582;&#127995;",
				name: "face with ok gesture tone1",
				shortname: ":ok_woman_tone1:",
				category: "people",
				emoji_order: "550",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_woman_tone2: {
				unicode: "1f646-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128582;&#127996;",
				name: "face with ok gesture tone2",
				shortname: ":ok_woman_tone2:",
				category: "people",
				emoji_order: "551",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_woman_tone3: {
				unicode: "1f646-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128582;&#127997;",
				name: "face with ok gesture tone3",
				shortname: ":ok_woman_tone3:",
				category: "people",
				emoji_order: "552",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_woman_tone4: {
				unicode: "1f646-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128582;&#127998;",
				name: "face with ok gesture tone4",
				shortname: ":ok_woman_tone4:",
				category: "people",
				emoji_order: "553",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_woman_tone5: {
				unicode: "1f646-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128582;&#127999;",
				name: "face with ok gesture tone5",
				shortname: ":ok_woman_tone5:",
				category: "people",
				emoji_order: "554",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			information_desk_person: {
				unicode: "1f481",
				unicode_alt: "",
				code_decimal: "&#128129;",
				name: "information desk person",
				shortname: ":information_desk_person:",
				category: "people",
				emoji_order: "567",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "women", "diversity"]
			},
			information_desk_person_tone1: {
				unicode: "1f481-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128129;&#127995;",
				name: "information desk person tone 1",
				shortname: ":information_desk_person_tone1:",
				category: "people",
				emoji_order: "568",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			information_desk_person_tone2: {
				unicode: "1f481-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128129;&#127996;",
				name: "information desk person tone 2",
				shortname: ":information_desk_person_tone2:",
				category: "people",
				emoji_order: "569",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			information_desk_person_tone3: {
				unicode: "1f481-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128129;&#127997;",
				name: "information desk person tone 3",
				shortname: ":information_desk_person_tone3:",
				category: "people",
				emoji_order: "570",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			information_desk_person_tone4: {
				unicode: "1f481-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128129;&#127998;",
				name: "information desk person tone 4",
				shortname: ":information_desk_person_tone4:",
				category: "people",
				emoji_order: "571",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			information_desk_person_tone5: {
				unicode: "1f481-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128129;&#127999;",
				name: "information desk person tone 5",
				shortname: ":information_desk_person_tone5:",
				category: "people",
				emoji_order: "572",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raising_hand: {
				unicode: "1f64b",
				unicode_alt: "",
				code_decimal: "&#128587;",
				name: "happy person raising one hand",
				shortname: ":raising_hand:",
				category: "people",
				emoji_order: "585",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "women", "diversity"]
			},
			raising_hand_tone1: {
				unicode: "1f64b-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128587;&#127995;",
				name: "happy person raising one hand tone1",
				shortname: ":raising_hand_tone1:",
				category: "people",
				emoji_order: "586",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raising_hand_tone2: {
				unicode: "1f64b-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128587;&#127996;",
				name: "happy person raising one hand tone2",
				shortname: ":raising_hand_tone2:",
				category: "people",
				emoji_order: "587",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raising_hand_tone3: {
				unicode: "1f64b-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128587;&#127997;",
				name: "happy person raising one hand tone3",
				shortname: ":raising_hand_tone3:",
				category: "people",
				emoji_order: "588",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raising_hand_tone4: {
				unicode: "1f64b-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128587;&#127998;",
				name: "happy person raising one hand tone4",
				shortname: ":raising_hand_tone4:",
				category: "people",
				emoji_order: "589",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raising_hand_tone5: {
				unicode: "1f64b-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128587;&#127999;",
				name: "happy person raising one hand tone5",
				shortname: ":raising_hand_tone5:",
				category: "people",
				emoji_order: "590",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bow: {
				unicode: "1f647",
				unicode_alt: "",
				code_decimal: "&#128583;",
				name: "person bowing deeply",
				shortname: ":bow:",
				category: "people",
				emoji_order: "603",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "pray", "diversity"]
			},
			bow_tone1: {
				unicode: "1f647-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128583;&#127995;",
				name: "person bowing deeply tone 1",
				shortname: ":bow_tone1:",
				category: "people",
				emoji_order: "604",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bow_tone2: {
				unicode: "1f647-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128583;&#127996;",
				name: "person bowing deeply tone 2",
				shortname: ":bow_tone2:",
				category: "people",
				emoji_order: "605",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bow_tone3: {
				unicode: "1f647-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128583;&#127997;",
				name: "person bowing deeply tone 3",
				shortname: ":bow_tone3:",
				category: "people",
				emoji_order: "606",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bow_tone4: {
				unicode: "1f647-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128583;&#127998;",
				name: "person bowing deeply tone 4",
				shortname: ":bow_tone4:",
				category: "people",
				emoji_order: "607",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bow_tone5: {
				unicode: "1f647-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128583;&#127999;",
				name: "person bowing deeply tone 5",
				shortname: ":bow_tone5:",
				category: "people",
				emoji_order: "608",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			face_palm: {
				unicode: "1f926",
				unicode_alt: "",
				code_decimal: "&#129318;",
				name: "face palm",
				shortname: ":face_palm:",
				category: "people",
				emoji_order: "621",
				aliases: [":facepalm:"],
				aliases_ascii: [],
				keywords: []
			},
			face_palm_tone1: {
				unicode: "1f926-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129318;&#127995;",
				name: "face palm tone 1",
				shortname: ":face_palm_tone1:",
				category: "people",
				emoji_order: "622",
				aliases: [":facepalm_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			face_palm_tone2: {
				unicode: "1f926-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129318;&#127996;",
				name: "face palm tone 2",
				shortname: ":face_palm_tone2:",
				category: "people",
				emoji_order: "623",
				aliases: [":facepalm_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			face_palm_tone3: {
				unicode: "1f926-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129318;&#127997;",
				name: "face palm tone 3",
				shortname: ":face_palm_tone3:",
				category: "people",
				emoji_order: "624",
				aliases: [":facepalm_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			face_palm_tone4: {
				unicode: "1f926-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129318;&#127998;",
				name: "face palm tone 4",
				shortname: ":face_palm_tone4:",
				category: "people",
				emoji_order: "625",
				aliases: [":facepalm_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			face_palm_tone5: {
				unicode: "1f926-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129318;&#127999;",
				name: "face palm tone 5",
				shortname: ":face_palm_tone5:",
				category: "people",
				emoji_order: "626",
				aliases: [":facepalm_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			shrug: {
				unicode: "1f937",
				unicode_alt: "",
				code_decimal: "&#129335;",
				name: "shrug",
				shortname: ":shrug:",
				category: "people",
				emoji_order: "639",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			shrug_tone1: {
				unicode: "1f937-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129335;&#127995;",
				name: "shrug tone 1",
				shortname: ":shrug_tone1:",
				category: "people",
				emoji_order: "640",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			shrug_tone2: {
				unicode: "1f937-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129335;&#127996;",
				name: "shrug tone 2",
				shortname: ":shrug_tone2:",
				category: "people",
				emoji_order: "641",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			shrug_tone3: {
				unicode: "1f937-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129335;&#127997;",
				name: "shrug tone 3",
				shortname: ":shrug_tone3:",
				category: "people",
				emoji_order: "642",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			shrug_tone4: {
				unicode: "1f937-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129335;&#127998;",
				name: "shrug tone 4",
				shortname: ":shrug_tone4:",
				category: "people",
				emoji_order: "643",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			shrug_tone5: {
				unicode: "1f937-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129335;&#127999;",
				name: "shrug tone 5",
				shortname: ":shrug_tone5:",
				category: "people",
				emoji_order: "644",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			massage: {
				unicode: "1f486",
				unicode_alt: "",
				code_decimal: "&#128134;",
				name: "face massage",
				shortname: ":massage:",
				category: "people",
				emoji_order: "657",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "women", "diversity"]
			},
			massage_tone1: {
				unicode: "1f486-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128134;&#127995;",
				name: "face massage tone 1",
				shortname: ":massage_tone1:",
				category: "people",
				emoji_order: "658",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			massage_tone2: {
				unicode: "1f486-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128134;&#127996;",
				name: "face massage tone 2",
				shortname: ":massage_tone2:",
				category: "people",
				emoji_order: "659",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			massage_tone3: {
				unicode: "1f486-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128134;&#127997;",
				name: "face massage tone 3",
				shortname: ":massage_tone3:",
				category: "people",
				emoji_order: "660",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			massage_tone4: {
				unicode: "1f486-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128134;&#127998;",
				name: "face massage tone 4",
				shortname: ":massage_tone4:",
				category: "people",
				emoji_order: "661",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			massage_tone5: {
				unicode: "1f486-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128134;&#127999;",
				name: "face massage tone 5",
				shortname: ":massage_tone5:",
				category: "people",
				emoji_order: "662",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			haircut: {
				unicode: "1f487",
				unicode_alt: "",
				code_decimal: "&#128135;",
				name: "haircut",
				shortname: ":haircut:",
				category: "people",
				emoji_order: "675",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people",
					"women", "diversity"]
			},
			haircut_tone1: {
				unicode: "1f487-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128135;&#127995;",
				name: "haircut tone 1",
				shortname: ":haircut_tone1:",
				category: "people",
				emoji_order: "676",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			haircut_tone2: {
				unicode: "1f487-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128135;&#127996;",
				name: "haircut tone 2",
				shortname: ":haircut_tone2:",
				category: "people",
				emoji_order: "677",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			haircut_tone3: {
				unicode: "1f487-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128135;&#127997;",
				name: "haircut tone 3",
				shortname: ":haircut_tone3:",
				category: "people",
				emoji_order: "678",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			haircut_tone4: {
				unicode: "1f487-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128135;&#127998;",
				name: "haircut tone 4",
				shortname: ":haircut_tone4:",
				category: "people",
				emoji_order: "679",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			haircut_tone5: {
				unicode: "1f487-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128135;&#127999;",
				name: "haircut tone 5",
				shortname: ":haircut_tone5:",
				category: "people",
				emoji_order: "680",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			walking: {
				unicode: "1f6b6",
				unicode_alt: "",
				code_decimal: "&#128694;",
				name: "pedestrian",
				shortname: ":walking:",
				category: "people",
				emoji_order: "693",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "men", "diversity"]
			},
			walking_tone1: {
				unicode: "1f6b6-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128694;&#127995;",
				name: "pedestrian tone 1",
				shortname: ":walking_tone1:",
				category: "people",
				emoji_order: "694",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			walking_tone2: {
				unicode: "1f6b6-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128694;&#127996;",
				name: "pedestrian tone 2",
				shortname: ":walking_tone2:",
				category: "people",
				emoji_order: "695",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			walking_tone3: {
				unicode: "1f6b6-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128694;&#127997;",
				name: "pedestrian tone 3",
				shortname: ":walking_tone3:",
				category: "people",
				emoji_order: "696",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			walking_tone4: {
				unicode: "1f6b6-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128694;&#127998;",
				name: "pedestrian tone 4",
				shortname: ":walking_tone4:",
				category: "people",
				emoji_order: "697",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			walking_tone5: {
				unicode: "1f6b6-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128694;&#127999;",
				name: "pedestrian tone 5",
				shortname: ":walking_tone5:",
				category: "people",
				emoji_order: "698",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			runner: {
				unicode: "1f3c3",
				unicode_alt: "",
				code_decimal: "&#127939;",
				name: "runner",
				shortname: ":runner:",
				category: "people",
				emoji_order: "711",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people",
					"men", "diversity", "boys night", "run"]
			},
			runner_tone1: {
				unicode: "1f3c3-1f3fb",
				unicode_alt: "",
				code_decimal: "&#127939;&#127995;",
				name: "runner tone 1",
				shortname: ":runner_tone1:",
				category: "people",
				emoji_order: "712",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			runner_tone2: {
				unicode: "1f3c3-1f3fc",
				unicode_alt: "",
				code_decimal: "&#127939;&#127996;",
				name: "runner tone 2",
				shortname: ":runner_tone2:",
				category: "people",
				emoji_order: "713",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			runner_tone3: {
				unicode: "1f3c3-1f3fd",
				unicode_alt: "",
				code_decimal: "&#127939;&#127997;",
				name: "runner tone 3",
				shortname: ":runner_tone3:",
				category: "people",
				emoji_order: "714",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			runner_tone4: {
				unicode: "1f3c3-1f3fe",
				unicode_alt: "",
				code_decimal: "&#127939;&#127998;",
				name: "runner tone 4",
				shortname: ":runner_tone4:",
				category: "people",
				emoji_order: "715",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			runner_tone5: {
				unicode: "1f3c3-1f3ff",
				unicode_alt: "",
				code_decimal: "&#127939;&#127999;",
				name: "runner tone 5",
				shortname: ":runner_tone5:",
				category: "people",
				emoji_order: "716",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			dancer: {
				unicode: "1f483",
				unicode_alt: "",
				code_decimal: "&#128131;",
				name: "dancer",
				shortname: ":dancer:",
				category: "people",
				emoji_order: "729",
				aliases: [],
				aliases_ascii: [],
				keywords: "people;women;sexy;diversity;girls night;dance".split(";")
			},
			dancer_tone1: {
				unicode: "1f483-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128131;&#127995;",
				name: "dancer tone 1",
				shortname: ":dancer_tone1:",
				category: "people",
				emoji_order: "730",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			dancer_tone2: {
				unicode: "1f483-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128131;&#127996;",
				name: "dancer tone 2",
				shortname: ":dancer_tone2:",
				category: "people",
				emoji_order: "731",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			dancer_tone3: {
				unicode: "1f483-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128131;&#127997;",
				name: "dancer tone 3",
				shortname: ":dancer_tone3:",
				category: "people",
				emoji_order: "732",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			dancer_tone4: {
				unicode: "1f483-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128131;&#127998;",
				name: "dancer tone 4",
				shortname: ":dancer_tone4:",
				category: "people",
				emoji_order: "733",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			dancer_tone5: {
				unicode: "1f483-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128131;&#127999;",
				name: "dancer tone 5",
				shortname: ":dancer_tone5:",
				category: "people",
				emoji_order: "734",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			man_dancing: {
				unicode: "1f57a",
				unicode_alt: "",
				code_decimal: "&#128378;",
				name: "man dancing",
				shortname: ":man_dancing:",
				category: "people",
				emoji_order: "735",
				aliases: [":male_dancer:"],
				aliases_ascii: [],
				keywords: []
			},
			man_dancing_tone1: {
				unicode: "1f57a-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128378;&#127995;",
				name: "man dancing tone 1",
				shortname: ":man_dancing_tone1:",
				category: "people",
				emoji_order: "736",
				aliases: [":male_dancer_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			man_dancing_tone2: {
				unicode: "1f57a-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128378;&#127996;",
				name: "man dancing tone 2",
				shortname: ":man_dancing_tone2:",
				category: "people",
				emoji_order: "737",
				aliases: [":male_dancer_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			man_dancing_tone3: {
				unicode: "1f57a-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128378;&#127997;",
				name: "man dancing tone 3",
				shortname: ":man_dancing_tone3:",
				category: "people",
				emoji_order: "738",
				aliases: [":male_dancer_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			man_dancing_tone4: {
				unicode: "1f57a-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128378;&#127998;",
				name: "man dancing tone 4",
				shortname: ":man_dancing_tone4:",
				category: "people",
				emoji_order: "739",
				aliases: [":male_dancer_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			man_dancing_tone5: {
				unicode: "1f57a-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128378;&#127999;",
				name: "man dancing tone 5",
				shortname: ":man_dancing_tone5:",
				category: "people",
				emoji_order: "740",
				aliases: [":male_dancer_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			dancers: {
				unicode: "1f46f",
				unicode_alt: "",
				code_decimal: "&#128111;",
				name: "woman with bunny ears",
				shortname: ":dancers:",
				category: "people",
				emoji_order: "741",
				aliases: [],
				aliases_ascii: [],
				keywords: "people;women;sexy;girls night;boys night;parties;dance".split(";")
			},
			levitate: {
				unicode: "1f574",
				unicode_alt: "1f574-fe0f",
				code_decimal: "&#128372;",
				name: "man in business suit levitating",
				shortname: ":levitate:",
				category: "activity",
				emoji_order: "759",
				aliases: [":man_in_business_suit_levitating:"],
				aliases_ascii: [],
				keywords: ["men", "job"]
			},
			speaking_head: {
				unicode: "1f5e3",
				unicode_alt: "1f5e3-fe0f",
				code_decimal: "&#128483;",
				name: "speaking head in silhouette",
				shortname: ":speaking_head:",
				category: "people",
				emoji_order: "765",
				aliases: [":speaking_head_in_silhouette:"],
				aliases_ascii: [],
				keywords: ["people", "talk"]
			},
			bust_in_silhouette: {
				unicode: "1f464",
				unicode_alt: "",
				code_decimal: "&#128100;",
				name: "bust in silhouette",
				shortname: ":bust_in_silhouette:",
				category: "people",
				emoji_order: "766",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people"]
			},
			busts_in_silhouette: {
				unicode: "1f465",
				unicode_alt: "",
				code_decimal: "&#128101;",
				name: "busts in silhouette",
				shortname: ":busts_in_silhouette:",
				category: "people",
				emoji_order: "767",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people"]
			},
			fencer: {
				unicode: "1f93a",
				unicode_alt: "",
				code_decimal: "&#129338;",
				name: "fencer",
				shortname: ":fencer:",
				category: "activity",
				emoji_order: "768",
				aliases: [":fencing:"],
				aliases_ascii: [],
				keywords: []
			},
			horse_racing: {
				unicode: "1f3c7",
				unicode_alt: "",
				code_decimal: "&#127943;",
				name: "horse racing",
				shortname: ":horse_racing:",
				category: "activity",
				emoji_order: "769",
				aliases: [],
				aliases_ascii: [],
				keywords: ["men", "sport", "horse racing"]
			},
			horse_racing_tone1: {
				unicode: "1f3c7-1f3fb",
				unicode_alt: "",
				code_decimal: "&#127943;&#127995;",
				name: "horse racing tone 1",
				shortname: ":horse_racing_tone1:",
				category: "activity",
				emoji_order: "770",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			horse_racing_tone2: {
				unicode: "1f3c7-1f3fc",
				unicode_alt: "",
				code_decimal: "&#127943;&#127996;",
				name: "horse racing tone 2",
				shortname: ":horse_racing_tone2:",
				category: "activity",
				emoji_order: "771",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			horse_racing_tone3: {
				unicode: "1f3c7-1f3fd",
				unicode_alt: "",
				code_decimal: "&#127943;&#127997;",
				name: "horse racing tone 3",
				shortname: ":horse_racing_tone3:",
				category: "activity",
				emoji_order: "772",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			horse_racing_tone4: {
				unicode: "1f3c7-1f3fe",
				unicode_alt: "",
				code_decimal: "&#127943;&#127998;",
				name: "horse racing tone 4",
				shortname: ":horse_racing_tone4:",
				category: "activity",
				emoji_order: "773",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			horse_racing_tone5: {
				unicode: "1f3c7-1f3ff",
				unicode_alt: "",
				code_decimal: "&#127943;&#127999;",
				name: "horse racing tone 5",
				shortname: ":horse_racing_tone5:",
				category: "activity",
				emoji_order: "774",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			skier: {
				unicode: "26f7",
				unicode_alt: "26f7-fe0f",
				code_decimal: "&#9975;",
				name: "skier",
				shortname: ":skier:",
				category: "activity",
				emoji_order: "775",
				aliases: [],
				aliases_ascii: [],
				keywords: ["hat", "vacation", "cold", "sport", "skiing"]
			},
			snowboarder: {
				unicode: "1f3c2",
				unicode_alt: "",
				code_decimal: "&#127938;",
				name: "snowboarder",
				shortname: ":snowboarder:",
				category: "activity",
				emoji_order: "776",
				aliases: [],
				aliases_ascii: [],
				keywords: ["hat", "vacation", "cold", "sport", "snowboarding"]
			},
			golfer: {
				unicode: "1f3cc",
				unicode_alt: "1f3cc-fe0f",
				code_decimal: "&#127948;",
				name: "golfer",
				shortname: ":golfer:",
				category: "activity",
				emoji_order: "782",
				aliases: [],
				aliases_ascii: [],
				keywords: "men game ball vacation sport golf".split(" ")
			},
			surfer: {
				unicode: "1f3c4",
				unicode_alt: "",
				code_decimal: "&#127940;",
				name: "surfer",
				shortname: ":surfer:",
				category: "activity",
				emoji_order: "800",
				aliases: [],
				aliases_ascii: [],
				keywords: ["men", "vacation", "tropical", "sport", "diversity"]
			},
			surfer_tone1: {
				unicode: "1f3c4-1f3fb",
				unicode_alt: "",
				code_decimal: "&#127940;&#127995;",
				name: "surfer tone 1",
				shortname: ":surfer_tone1:",
				category: "activity",
				emoji_order: "801",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			surfer_tone2: {
				unicode: "1f3c4-1f3fc",
				unicode_alt: "",
				code_decimal: "&#127940;&#127996;",
				name: "surfer tone 2",
				shortname: ":surfer_tone2:",
				category: "activity",
				emoji_order: "802",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			surfer_tone3: {
				unicode: "1f3c4-1f3fd",
				unicode_alt: "",
				code_decimal: "&#127940;&#127997;",
				name: "surfer tone 3",
				shortname: ":surfer_tone3:",
				category: "activity",
				emoji_order: "803",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			surfer_tone4: {
				unicode: "1f3c4-1f3fe",
				unicode_alt: "",
				code_decimal: "&#127940;&#127998;",
				name: "surfer tone 4",
				shortname: ":surfer_tone4:",
				category: "activity",
				emoji_order: "804",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			surfer_tone5: {
				unicode: "1f3c4-1f3ff",
				unicode_alt: "",
				code_decimal: "&#127940;&#127999;",
				name: "surfer tone 5",
				shortname: ":surfer_tone5:",
				category: "activity",
				emoji_order: "805",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			rowboat: {
				unicode: "1f6a3",
				unicode_alt: "",
				code_decimal: "&#128675;",
				name: "rowboat",
				shortname: ":rowboat:",
				category: "activity",
				emoji_order: "818",
				aliases: [],
				aliases_ascii: [],
				keywords: ["men", "workout", "sport", "rowing", "diversity"]
			},
			rowboat_tone1: {
				unicode: "1f6a3-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128675;&#127995;",
				name: "rowboat tone 1",
				shortname: ":rowboat_tone1:",
				category: "activity",
				emoji_order: "819",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			rowboat_tone2: {
				unicode: "1f6a3-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128675;&#127996;",
				name: "rowboat tone 2",
				shortname: ":rowboat_tone2:",
				category: "activity",
				emoji_order: "820",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			rowboat_tone3: {
				unicode: "1f6a3-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128675;&#127997;",
				name: "rowboat tone 3",
				shortname: ":rowboat_tone3:",
				category: "activity",
				emoji_order: "821",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			rowboat_tone4: {
				unicode: "1f6a3-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128675;&#127998;",
				name: "rowboat tone 4",
				shortname: ":rowboat_tone4:",
				category: "activity",
				emoji_order: "822",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			rowboat_tone5: {
				unicode: "1f6a3-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128675;&#127999;",
				name: "rowboat tone 5",
				shortname: ":rowboat_tone5:",
				category: "activity",
				emoji_order: "823",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			swimmer: {
				unicode: "1f3ca",
				unicode_alt: "",
				code_decimal: "&#127946;",
				name: "swimmer",
				shortname: ":swimmer:",
				category: "activity",
				emoji_order: "836",
				aliases: [],
				aliases_ascii: [],
				keywords: ["workout", "sport", "swim", "diversity"]
			},
			swimmer_tone1: {
				unicode: "1f3ca-1f3fb",
				unicode_alt: "",
				code_decimal: "&#127946;&#127995;",
				name: "swimmer tone 1",
				shortname: ":swimmer_tone1:",
				category: "activity",
				emoji_order: "837",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			swimmer_tone2: {
				unicode: "1f3ca-1f3fc",
				unicode_alt: "",
				code_decimal: "&#127946;&#127996;",
				name: "swimmer tone 2",
				shortname: ":swimmer_tone2:",
				category: "activity",
				emoji_order: "838",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			swimmer_tone3: {
				unicode: "1f3ca-1f3fd",
				unicode_alt: "",
				code_decimal: "&#127946;&#127997;",
				name: "swimmer tone 3",
				shortname: ":swimmer_tone3:",
				category: "activity",
				emoji_order: "839",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			swimmer_tone4: {
				unicode: "1f3ca-1f3fe",
				unicode_alt: "",
				code_decimal: "&#127946;&#127998;",
				name: "swimmer tone 4",
				shortname: ":swimmer_tone4:",
				category: "activity",
				emoji_order: "840",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			swimmer_tone5: {
				unicode: "1f3ca-1f3ff",
				unicode_alt: "",
				code_decimal: "&#127946;&#127999;",
				name: "swimmer tone 5",
				shortname: ":swimmer_tone5:",
				category: "activity",
				emoji_order: "841",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			basketball_player: {
				unicode: "26f9",
				unicode_alt: "26f9-fe0f",
				code_decimal: "&#9977;",
				name: "person with ball",
				shortname: ":basketball_player:",
				category: "activity",
				emoji_order: "854",
				aliases: [":person_with_ball:"],
				aliases_ascii: [],
				keywords: "men game ball sport basketball diversity".split(" ")
			},
			basketball_player_tone1: {
				unicode: "26f9-1f3fb",
				unicode_alt: "",
				code_decimal: "&#9977;&#127995;",
				name: "person with ball tone 1",
				shortname: ":basketball_player_tone1:",
				category: "activity",
				emoji_order: "855",
				aliases: [":person_with_ball_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			basketball_player_tone2: {
				unicode: "26f9-1f3fc",
				unicode_alt: "",
				code_decimal: "&#9977;&#127996;",
				name: "person with ball tone 2",
				shortname: ":basketball_player_tone2:",
				category: "activity",
				emoji_order: "856",
				aliases: [":person_with_ball_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			basketball_player_tone3: {
				unicode: "26f9-1f3fd",
				unicode_alt: "",
				code_decimal: "&#9977;&#127997;",
				name: "person with ball tone 3",
				shortname: ":basketball_player_tone3:",
				category: "activity",
				emoji_order: "857",
				aliases: [":person_with_ball_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			basketball_player_tone4: {
				unicode: "26f9-1f3fe",
				unicode_alt: "",
				code_decimal: "&#9977;&#127998;",
				name: "person with ball tone 4",
				shortname: ":basketball_player_tone4:",
				category: "activity",
				emoji_order: "858",
				aliases: [":person_with_ball_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			basketball_player_tone5: {
				unicode: "26f9-1f3ff",
				unicode_alt: "",
				code_decimal: "&#9977;&#127999;",
				name: "person with ball tone 5",
				shortname: ":basketball_player_tone5:",
				category: "activity",
				emoji_order: "859",
				aliases: [":person_with_ball_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			lifter: {
				unicode: "1f3cb",
				unicode_alt: "1f3cb-fe0f",
				code_decimal: "&#127947;",
				name: "weight lifter",
				shortname: ":lifter:",
				category: "activity",
				emoji_order: "872",
				aliases: [":weight_lifter:"],
				aliases_ascii: [],
				keywords: "men;workout;flex;sport;weight lifting;win;diversity".split(";")
			},
			lifter_tone1: {
				unicode: "1f3cb-1f3fb",
				unicode_alt: "",
				code_decimal: "&#127947;&#127995;",
				name: "weight lifter tone 1",
				shortname: ":lifter_tone1:",
				category: "activity",
				emoji_order: "873",
				aliases: [":weight_lifter_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			lifter_tone2: {
				unicode: "1f3cb-1f3fc",
				unicode_alt: "",
				code_decimal: "&#127947;&#127996;",
				name: "weight lifter tone 2",
				shortname: ":lifter_tone2:",
				category: "activity",
				emoji_order: "874",
				aliases: [":weight_lifter_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			lifter_tone3: {
				unicode: "1f3cb-1f3fd",
				unicode_alt: "",
				code_decimal: "&#127947;&#127997;",
				name: "weight lifter tone 3",
				shortname: ":lifter_tone3:",
				category: "activity",
				emoji_order: "875",
				aliases: [":weight_lifter_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			lifter_tone4: {
				unicode: "1f3cb-1f3fe",
				unicode_alt: "",
				code_decimal: "&#127947;&#127998;",
				name: "weight lifter tone 4",
				shortname: ":lifter_tone4:",
				category: "activity",
				emoji_order: "876",
				aliases: [":weight_lifter_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			lifter_tone5: {
				unicode: "1f3cb-1f3ff",
				unicode_alt: "",
				code_decimal: "&#127947;&#127999;",
				name: "weight lifter tone 5",
				shortname: ":lifter_tone5:",
				category: "activity",
				emoji_order: "877",
				aliases: [":weight_lifter_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			bicyclist: {
				unicode: "1f6b4",
				unicode_alt: "",
				code_decimal: "&#128692;",
				name: "bicyclist",
				shortname: ":bicyclist:",
				category: "activity",
				emoji_order: "890",
				aliases: [],
				aliases_ascii: [],
				keywords: ["men", "workout", "sport", "bike", "diversity"]
			},
			bicyclist_tone1: {
				unicode: "1f6b4-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128692;&#127995;",
				name: "bicyclist tone 1",
				shortname: ":bicyclist_tone1:",
				category: "activity",
				emoji_order: "891",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bicyclist_tone2: {
				unicode: "1f6b4-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128692;&#127996;",
				name: "bicyclist tone 2",
				shortname: ":bicyclist_tone2:",
				category: "activity",
				emoji_order: "892",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bicyclist_tone3: {
				unicode: "1f6b4-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128692;&#127997;",
				name: "bicyclist tone 3",
				shortname: ":bicyclist_tone3:",
				category: "activity",
				emoji_order: "893",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bicyclist_tone4: {
				unicode: "1f6b4-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128692;&#127998;",
				name: "bicyclist tone 4",
				shortname: ":bicyclist_tone4:",
				category: "activity",
				emoji_order: "894",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bicyclist_tone5: {
				unicode: "1f6b4-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128692;&#127999;",
				name: "bicyclist tone 5",
				shortname: ":bicyclist_tone5:",
				category: "activity",
				emoji_order: "895",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			mountain_bicyclist: {
				unicode: "1f6b5",
				unicode_alt: "",
				code_decimal: "&#128693;",
				name: "mountain bicyclist",
				shortname: ":mountain_bicyclist:",
				category: "activity",
				emoji_order: "908",
				aliases: [],
				aliases_ascii: [],
				keywords: ["men", "sport", "bike", "diversity"]
			},
			mountain_bicyclist_tone1: {
				unicode: "1f6b5-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128693;&#127995;",
				name: "mountain bicyclist tone 1",
				shortname: ":mountain_bicyclist_tone1:",
				category: "activity",
				emoji_order: "909",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			mountain_bicyclist_tone2: {
				unicode: "1f6b5-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128693;&#127996;",
				name: "mountain bicyclist tone 2",
				shortname: ":mountain_bicyclist_tone2:",
				category: "activity",
				emoji_order: "910",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			mountain_bicyclist_tone3: {
				unicode: "1f6b5-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128693;&#127997;",
				name: "mountain bicyclist tone 3",
				shortname: ":mountain_bicyclist_tone3:",
				category: "activity",
				emoji_order: "911",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			mountain_bicyclist_tone4: {
				unicode: "1f6b5-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128693;&#127998;",
				name: "mountain bicyclist tone 4",
				shortname: ":mountain_bicyclist_tone4:",
				category: "activity",
				emoji_order: "912",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			mountain_bicyclist_tone5: {
				unicode: "1f6b5-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128693;&#127999;",
				name: "mountain bicyclist tone 5",
				shortname: ":mountain_bicyclist_tone5:",
				category: "activity",
				emoji_order: "913",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			race_car: {
				unicode: "1f3ce",
				unicode_alt: "1f3ce-fe0f",
				code_decimal: "&#127950;",
				name: "racing car",
				shortname: ":race_car:",
				category: "travel",
				emoji_order: "926",
				aliases: [":racing_car:"],
				aliases_ascii: [],
				keywords: ["transportation", "car"]
			},
			motorcycle: {
				unicode: "1f3cd",
				unicode_alt: "1f3cd-fe0f",
				code_decimal: "&#127949;",
				name: "racing motorcycle",
				shortname: ":motorcycle:",
				category: "travel",
				emoji_order: "927",
				aliases: [":racing_motorcycle:"],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "bike"]
			},
			cartwheel: {
				unicode: "1f938",
				unicode_alt: "",
				code_decimal: "&#129336;",
				name: "person doing cartwheel",
				shortname: ":cartwheel:",
				category: "activity",
				emoji_order: "928",
				aliases: [":person_doing_cartwheel:"],
				aliases_ascii: [],
				keywords: []
			},
			cartwheel_tone1: {
				unicode: "1f938-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129336;&#127995;",
				name: "person doing cartwheel tone 1",
				shortname: ":cartwheel_tone1:",
				category: "activity",
				emoji_order: "929",
				aliases: [":person_doing_cartwheel_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			cartwheel_tone2: {
				unicode: "1f938-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129336;&#127996;",
				name: "person doing cartwheel tone 2",
				shortname: ":cartwheel_tone2:",
				category: "activity",
				emoji_order: "930",
				aliases: [":person_doing_cartwheel_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			cartwheel_tone3: {
				unicode: "1f938-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129336;&#127997;",
				name: "person doing cartwheel tone 3",
				shortname: ":cartwheel_tone3:",
				category: "activity",
				emoji_order: "931",
				aliases: [":person_doing_cartwheel_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			cartwheel_tone4: {
				unicode: "1f938-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129336;&#127998;",
				name: "person doing cartwheel tone 4",
				shortname: ":cartwheel_tone4:",
				category: "activity",
				emoji_order: "932",
				aliases: [":person_doing_cartwheel_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			cartwheel_tone5: {
				unicode: "1f938-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129336;&#127999;",
				name: "person doing cartwheel tone 5",
				shortname: ":cartwheel_tone5:",
				category: "activity",
				emoji_order: "933",
				aliases: [":person_doing_cartwheel_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			wrestlers: {
				unicode: "1f93c",
				unicode_alt: "",
				code_decimal: "&#129340;",
				name: "wrestlers",
				shortname: ":wrestlers:",
				category: "activity",
				emoji_order: "946",
				aliases: [":wrestling:"],
				aliases_ascii: [],
				keywords: []
			},
			wrestlers_tone1: {
				unicode: "1f93c-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129340;&#127995;",
				name: "wrestlers tone 1",
				shortname: ":wrestlers_tone1:",
				category: "activity",
				emoji_order: "947",
				aliases: [":wrestling_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			wrestlers_tone2: {
				unicode: "1f93c-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129340;&#127996;",
				name: "wrestlers tone 2",
				shortname: ":wrestlers_tone2:",
				category: "activity",
				emoji_order: "948",
				aliases: [":wrestling_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			wrestlers_tone3: {
				unicode: "1f93c-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129340;&#127997;",
				name: "wrestlers tone 3",
				shortname: ":wrestlers_tone3:",
				category: "activity",
				emoji_order: "949",
				aliases: [":wrestling_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			wrestlers_tone4: {
				unicode: "1f93c-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129340;&#127998;",
				name: "wrestlers tone 4",
				shortname: ":wrestlers_tone4:",
				category: "activity",
				emoji_order: "950",
				aliases: [":wrestling_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			wrestlers_tone5: {
				unicode: "1f93c-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129340;&#127999;",
				name: "wrestlers tone 5",
				shortname: ":wrestlers_tone5:",
				category: "activity",
				emoji_order: "951",
				aliases: [":wrestling_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			water_polo: {
				unicode: "1f93d",
				unicode_alt: "",
				code_decimal: "&#129341;",
				name: "water polo",
				shortname: ":water_polo:",
				category: "activity",
				emoji_order: "964",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			water_polo_tone1: {
				unicode: "1f93d-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129341;&#127995;",
				name: "water polo tone 1",
				shortname: ":water_polo_tone1:",
				category: "activity",
				emoji_order: "965",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			water_polo_tone2: {
				unicode: "1f93d-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129341;&#127996;",
				name: "water polo tone 2",
				shortname: ":water_polo_tone2:",
				category: "activity",
				emoji_order: "966",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			water_polo_tone3: {
				unicode: "1f93d-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129341;&#127997;",
				name: "water polo tone 3",
				shortname: ":water_polo_tone3:",
				category: "activity",
				emoji_order: "967",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			water_polo_tone4: {
				unicode: "1f93d-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129341;&#127998;",
				name: "water polo tone 4",
				shortname: ":water_polo_tone4:",
				category: "activity",
				emoji_order: "968",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			water_polo_tone5: {
				unicode: "1f93d-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129341;&#127999;",
				name: "water polo tone 5",
				shortname: ":water_polo_tone5:",
				category: "activity",
				emoji_order: "969",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			handball: {
				unicode: "1f93e",
				unicode_alt: "",
				code_decimal: "&#129342;",
				name: "handball",
				shortname: ":handball:",
				category: "activity",
				emoji_order: "982",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			handball_tone1: {
				unicode: "1f93e-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129342;&#127995;",
				name: "handball tone 1",
				shortname: ":handball_tone1:",
				category: "activity",
				emoji_order: "983",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			handball_tone2: {
				unicode: "1f93e-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129342;&#127996;",
				name: "handball tone 2",
				shortname: ":handball_tone2:",
				category: "activity",
				emoji_order: "984",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			handball_tone3: {
				unicode: "1f93e-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129342;&#127997;",
				name: "handball tone 3",
				shortname: ":handball_tone3:",
				category: "activity",
				emoji_order: "985",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			handball_tone4: {
				unicode: "1f93e-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129342;&#127998;",
				name: "handball tone 4",
				shortname: ":handball_tone4:",
				category: "activity",
				emoji_order: "986",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			handball_tone5: {
				unicode: "1f93e-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129342;&#127999;",
				name: "handball tone 5",
				shortname: ":handball_tone5:",
				category: "activity",
				emoji_order: "987",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			juggling: {
				unicode: "1f939",
				unicode_alt: "",
				code_decimal: "&#129337;",
				name: "juggling",
				shortname: ":juggling:",
				category: "activity",
				emoji_order: "1000",
				aliases: [":juggler:"],
				aliases_ascii: [],
				keywords: []
			},
			juggling_tone1: {
				unicode: "1f939-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129337;&#127995;",
				name: "juggling tone 1",
				shortname: ":juggling_tone1:",
				category: "activity",
				emoji_order: "1001",
				aliases: [":juggler_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			juggling_tone2: {
				unicode: "1f939-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129337;&#127996;",
				name: "juggling tone 2",
				shortname: ":juggling_tone2:",
				category: "activity",
				emoji_order: "1002",
				aliases: [":juggler_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			juggling_tone3: {
				unicode: "1f939-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129337;&#127997;",
				name: "juggling tone 3",
				shortname: ":juggling_tone3:",
				category: "activity",
				emoji_order: "1003",
				aliases: [":juggler_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			juggling_tone4: {
				unicode: "1f939-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129337;&#127998;",
				name: "juggling tone 4",
				shortname: ":juggling_tone4:",
				category: "activity",
				emoji_order: "1004",
				aliases: [":juggler_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			juggling_tone5: {
				unicode: "1f939-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129337;&#127999;",
				name: "juggling tone 5",
				shortname: ":juggling_tone5:",
				category: "activity",
				emoji_order: "1005",
				aliases: [":juggler_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			couple: {
				unicode: "1f46b",
				unicode_alt: "",
				code_decimal: "&#128107;",
				name: "man and woman holding hands",
				shortname: ":couple:",
				category: "people",
				emoji_order: "1018",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "sex", "creationism"]
			},
			two_men_holding_hands: {
				unicode: "1f46c",
				unicode_alt: "",
				code_decimal: "&#128108;",
				name: "two men holding hands",
				shortname: ":two_men_holding_hands:",
				category: "people",
				emoji_order: "1024",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "gay", "men", "sex", "lgbt"]
			},
			two_women_holding_hands: {
				unicode: "1f46d",
				unicode_alt: "",
				code_decimal: "&#128109;",
				name: "two women holding hands",
				shortname: ":two_women_holding_hands:",
				category: "people",
				emoji_order: "1030",
				aliases: [],
				aliases_ascii: [],
				keywords: "people;women;sex;lgbt;lesbian;girls night".split(";")
			},
			couplekiss: {
				unicode: "1f48f",
				unicode_alt: "",
				code_decimal: "&#128143;",
				name: "kiss",
				shortname: ":couplekiss:",
				category: "people",
				emoji_order: "1036",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "love", "sex"]
			},
			kiss_mm: {
				unicode: "1f468-2764-1f48b-1f468",
				unicode_alt: "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468",
				code_decimal: "&#128104;&#10084;&#128139;&#128104;",
				name: "kiss (man,man)",
				shortname: ":kiss_mm:",
				category: "people",
				emoji_order: "1038",
				aliases: [":couplekiss_mm:"],
				aliases_ascii: [],
				keywords: "people gay men love sex lgbt".split(" ")
			},
			kiss_ww: {
				unicode: "1f469-2764-1f48b-1f469",
				unicode_alt: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469",
				code_decimal: "&#128105;&#10084;&#128139;&#128105;",
				name: "kiss (woman,woman)",
				shortname: ":kiss_ww:",
				category: "people",
				emoji_order: "1039",
				aliases: [":couplekiss_ww:"],
				aliases_ascii: [],
				keywords: "people women love sex lgbt lesbian".split(" ")
			},
			couple_with_heart: {
				unicode: "1f491",
				unicode_alt: "",
				code_decimal: "&#128145;",
				name: "couple with heart",
				shortname: ":couple_with_heart:",
				category: "people",
				emoji_order: "1040",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "love", "sex"]
			},
			couple_mm: {
				unicode: "1f468-2764-1f468",
				unicode_alt: "1f468-200d-2764-fe0f-200d-1f468",
				code_decimal: "&#128104;&#10084;&#128104;",
				name: "couple (man,man)",
				shortname: ":couple_mm:",
				category: "people",
				emoji_order: "1042",
				aliases: [":couple_with_heart_mm:"],
				aliases_ascii: [],
				keywords: "people gay men love sex lgbt".split(" ")
			},
			couple_ww: {
				unicode: "1f469-2764-1f469",
				unicode_alt: "1f469-200d-2764-fe0f-200d-1f469",
				code_decimal: "&#128105;&#10084;&#128105;",
				name: "couple (woman,woman)",
				shortname: ":couple_ww:",
				category: "people",
				emoji_order: "1043",
				aliases: [":couple_with_heart_ww:"],
				aliases_ascii: [],
				keywords: ["people", "women", "love", "sex", "lgbt"]
			},
			family: {
				unicode: "1f46a",
				unicode_alt: "",
				code_decimal: "&#128106;",
				name: "family",
				shortname: ":family:",
				category: "people",
				emoji_order: "1044",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "family",
					"baby"]
			},
			family_mwg: {
				unicode: "1f468-1f469-1f467",
				unicode_alt: "1f468-200d-1f469-200d-1f467",
				code_decimal: "&#128104;&#128105;&#128103;",
				name: "family (man,woman,girl)",
				shortname: ":family_mwg:",
				category: "people",
				emoji_order: "1051",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "family", "baby"]
			},
			family_mwgb: {
				unicode: "1f468-1f469-1f467-1f466",
				unicode_alt: "1f468-200d-1f469-200d-1f467-200d-1f466",
				code_decimal: "&#128104;&#128105;&#128103;&#128102;",
				name: "family (man,woman,girl,boy)",
				shortname: ":family_mwgb:",
				category: "people",
				emoji_order: "1052",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "family", "baby"]
			},
			family_mwbb: {
				unicode: "1f468-1f469-1f466-1f466",
				unicode_alt: "1f468-200d-1f469-200d-1f466-200d-1f466",
				code_decimal: "&#128104;&#128105;&#128102;&#128102;",
				name: "family (man,woman,boy,boy)",
				shortname: ":family_mwbb:",
				category: "people",
				emoji_order: "1053",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "family", "baby"]
			},
			family_mwgg: {
				unicode: "1f468-1f469-1f467-1f467",
				unicode_alt: "1f468-200d-1f469-200d-1f467-200d-1f467",
				code_decimal: "&#128104;&#128105;&#128103;&#128103;",
				name: "family (man,woman,girl,girl)",
				shortname: ":family_mwgg:",
				category: "people",
				emoji_order: "1054",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "family", "baby"]
			},
			family_mmb: {
				unicode: "1f468-1f468-1f466",
				unicode_alt: "1f468-200d-1f468-200d-1f466",
				code_decimal: "&#128104;&#128104;&#128102;",
				name: "family (man,man,boy)",
				shortname: ":family_mmb:",
				category: "people",
				emoji_order: "1055",
				aliases: [],
				aliases_ascii: [],
				keywords: "people gay family men baby lgbt".split(" ")
			},
			family_mmg: {
				unicode: "1f468-1f468-1f467",
				unicode_alt: "1f468-200d-1f468-200d-1f467",
				code_decimal: "&#128104;&#128104;&#128103;",
				name: "family (man,man,girl)",
				shortname: ":family_mmg:",
				category: "people",
				emoji_order: "1056",
				aliases: [],
				aliases_ascii: [],
				keywords: "people gay family men baby lgbt".split(" ")
			},
			family_mmgb: {
				unicode: "1f468-1f468-1f467-1f466",
				unicode_alt: "1f468-200d-1f468-200d-1f467-200d-1f466",
				code_decimal: "&#128104;&#128104;&#128103;&#128102;",
				name: "family (man,man,girl,boy)",
				shortname: ":family_mmgb:",
				category: "people",
				emoji_order: "1057",
				aliases: [],
				aliases_ascii: [],
				keywords: "people gay family men baby lgbt".split(" ")
			},
			family_mmbb: {
				unicode: "1f468-1f468-1f466-1f466",
				unicode_alt: "1f468-200d-1f468-200d-1f466-200d-1f466",
				code_decimal: "&#128104;&#128104;&#128102;&#128102;",
				name: "family (man,man,boy,boy)",
				shortname: ":family_mmbb:",
				category: "people",
				emoji_order: "1058",
				aliases: [],
				aliases_ascii: [],
				keywords: "people gay family men baby lgbt".split(" ")
			},
			family_mmgg: {
				unicode: "1f468-1f468-1f467-1f467",
				unicode_alt: "1f468-200d-1f468-200d-1f467-200d-1f467",
				code_decimal: "&#128104;&#128104;&#128103;&#128103;",
				name: "family (man,man,girl,girl)",
				shortname: ":family_mmgg:",
				category: "people",
				emoji_order: "1059",
				aliases: [],
				aliases_ascii: [],
				keywords: "people gay family men baby lgbt".split(" ")
			},
			family_wwb: {
				unicode: "1f469-1f469-1f466",
				unicode_alt: "1f469-200d-1f469-200d-1f466",
				code_decimal: "&#128105;&#128105;&#128102;",
				name: "family (woman,woman,boy)",
				shortname: ":family_wwb:",
				category: "people",
				emoji_order: "1060",
				aliases: [],
				aliases_ascii: [],
				keywords: "people family women baby lgbt lesbian".split(" ")
			},
			family_wwg: {
				unicode: "1f469-1f469-1f467",
				unicode_alt: "1f469-200d-1f469-200d-1f467",
				code_decimal: "&#128105;&#128105;&#128103;",
				name: "family (woman,woman,girl)",
				shortname: ":family_wwg:",
				category: "people",
				emoji_order: "1061",
				aliases: [],
				aliases_ascii: [],
				keywords: "people family women baby lgbt lesbian".split(" ")
			},
			family_wwgb: {
				unicode: "1f469-1f469-1f467-1f466",
				unicode_alt: "1f469-200d-1f469-200d-1f467-200d-1f466",
				code_decimal: "&#128105;&#128105;&#128103;&#128102;",
				name: "family (woman,woman,girl,boy)",
				shortname: ":family_wwgb:",
				category: "people",
				emoji_order: "1062",
				aliases: [],
				aliases_ascii: [],
				keywords: "people family women baby lgbt lesbian".split(" ")
			},
			family_wwbb: {
				unicode: "1f469-1f469-1f466-1f466",
				unicode_alt: "1f469-200d-1f469-200d-1f466-200d-1f466",
				code_decimal: "&#128105;&#128105;&#128102;&#128102;",
				name: "family (woman,woman,boy,boy)",
				shortname: ":family_wwbb:",
				category: "people",
				emoji_order: "1063",
				aliases: [],
				aliases_ascii: [],
				keywords: "people family women baby lgbt lesbian".split(" ")
			},
			family_wwgg: {
				unicode: "1f469-1f469-1f467-1f467",
				unicode_alt: "1f469-200d-1f469-200d-1f467-200d-1f467",
				code_decimal: "&#128105;&#128105;&#128103;&#128103;",
				name: "family (woman,woman,girl,girl)",
				shortname: ":family_wwgg:",
				category: "people",
				emoji_order: "1064",
				aliases: [],
				aliases_ascii: [],
				keywords: "people family women baby lgbt lesbian".split(" ")
			},
			tone1: {
				unicode: "1f3fb",
				unicode_alt: "",
				code_decimal: "&#127995;",
				name: "emoji modifier Fitzpatrick type-1-2",
				shortname: ":tone1:",
				category: "modifier",
				emoji_order: "1075",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			tone2: {
				unicode: "1f3fc",
				unicode_alt: "",
				code_decimal: "&#127996;",
				name: "emoji modifier Fitzpatrick type-3",
				shortname: ":tone2:",
				category: "modifier",
				emoji_order: "1076",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			tone3: {
				unicode: "1f3fd",
				unicode_alt: "",
				code_decimal: "&#127997;",
				name: "emoji modifier Fitzpatrick type-4",
				shortname: ":tone3:",
				category: "modifier",
				emoji_order: "1077",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			tone4: {
				unicode: "1f3fe",
				unicode_alt: "",
				code_decimal: "&#127998;",
				name: "emoji modifier Fitzpatrick type-5",
				shortname: ":tone4:",
				category: "modifier",
				emoji_order: "1078",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			tone5: {
				unicode: "1f3ff",
				unicode_alt: "",
				code_decimal: "&#127999;",
				name: "emoji modifier Fitzpatrick type-6",
				shortname: ":tone5:",
				category: "modifier",
				emoji_order: "1079",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			muscle: {
				unicode: "1f4aa",
				unicode_alt: "",
				code_decimal: "&#128170;",
				name: "flexed biceps",
				shortname: ":muscle:",
				category: "people",
				emoji_order: "1080",
				aliases: [],
				aliases_ascii: [],
				keywords: "body;hands;workout;flex;win;diversity;feminist;boys night".split(";")
			},
			muscle_tone1: {
				unicode: "1f4aa-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128170;&#127995;",
				name: "flexed biceps tone 1",
				shortname: ":muscle_tone1:",
				category: "people",
				emoji_order: "1081",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			muscle_tone2: {
				unicode: "1f4aa-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128170;&#127996;",
				name: "flexed biceps tone 2",
				shortname: ":muscle_tone2:",
				category: "people",
				emoji_order: "1082",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			muscle_tone3: {
				unicode: "1f4aa-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128170;&#127997;",
				name: "flexed biceps tone 3",
				shortname: ":muscle_tone3:",
				category: "people",
				emoji_order: "1083",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			muscle_tone4: {
				unicode: "1f4aa-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128170;&#127998;",
				name: "flexed biceps tone 4",
				shortname: ":muscle_tone4:",
				category: "people",
				emoji_order: "1084",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			muscle_tone5: {
				unicode: "1f4aa-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128170;&#127999;",
				name: "flexed biceps tone 5",
				shortname: ":muscle_tone5:",
				category: "people",
				emoji_order: "1085",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			selfie: {
				unicode: "1f933",
				unicode_alt: "",
				code_decimal: "&#129331;",
				name: "selfie",
				shortname: ":selfie:",
				category: "people",
				emoji_order: "1086",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			selfie_tone1: {
				unicode: "1f933-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129331;&#127995;",
				name: "selfie tone 1",
				shortname: ":selfie_tone1:",
				category: "people",
				emoji_order: "1087",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			selfie_tone2: {
				unicode: "1f933-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129331;&#127996;",
				name: "selfie tone 2",
				shortname: ":selfie_tone2:",
				category: "people",
				emoji_order: "1088",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			selfie_tone3: {
				unicode: "1f933-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129331;&#127997;",
				name: "selfie tone 3",
				shortname: ":selfie_tone3:",
				category: "people",
				emoji_order: "1089",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			selfie_tone4: {
				unicode: "1f933-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129331;&#127998;",
				name: "selfie tone 4",
				shortname: ":selfie_tone4:",
				category: "people",
				emoji_order: "1090",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			selfie_tone5: {
				unicode: "1f933-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129331;&#127999;",
				name: "selfie tone 5",
				shortname: ":selfie_tone5:",
				category: "people",
				emoji_order: "1091",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_left: {
				unicode: "1f448",
				unicode_alt: "",
				code_decimal: "&#128072;",
				name: "white left pointing backhand index",
				shortname: ":point_left:",
				category: "people",
				emoji_order: "1092",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "hands", "hi", "diversity"]
			},
			point_left_tone1: {
				unicode: "1f448-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128072;&#127995;",
				name: "white left pointing backhand index tone 1",
				shortname: ":point_left_tone1:",
				category: "people",
				emoji_order: "1093",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_left_tone2: {
				unicode: "1f448-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128072;&#127996;",
				name: "white left pointing backhand index tone 2",
				shortname: ":point_left_tone2:",
				category: "people",
				emoji_order: "1094",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_left_tone3: {
				unicode: "1f448-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128072;&#127997;",
				name: "white left pointing backhand index tone 3",
				shortname: ":point_left_tone3:",
				category: "people",
				emoji_order: "1095",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_left_tone4: {
				unicode: "1f448-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128072;&#127998;",
				name: "white left pointing backhand index tone 4",
				shortname: ":point_left_tone4:",
				category: "people",
				emoji_order: "1096",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_left_tone5: {
				unicode: "1f448-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128072;&#127999;",
				name: "white left pointing backhand index tone 5",
				shortname: ":point_left_tone5:",
				category: "people",
				emoji_order: "1097",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_right: {
				unicode: "1f449",
				unicode_alt: "",
				code_decimal: "&#128073;",
				name: "white right pointing backhand index",
				shortname: ":point_right:",
				category: "people",
				emoji_order: "1098",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "hands", "hi", "diversity"]
			},
			point_right_tone1: {
				unicode: "1f449-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128073;&#127995;",
				name: "white right pointing backhand index tone 1",
				shortname: ":point_right_tone1:",
				category: "people",
				emoji_order: "1099",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_right_tone2: {
				unicode: "1f449-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128073;&#127996;",
				name: "white right pointing backhand index tone 2",
				shortname: ":point_right_tone2:",
				category: "people",
				emoji_order: "1100",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_right_tone3: {
				unicode: "1f449-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128073;&#127997;",
				name: "white right pointing backhand index tone 3",
				shortname: ":point_right_tone3:",
				category: "people",
				emoji_order: "1101",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_right_tone4: {
				unicode: "1f449-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128073;&#127998;",
				name: "white right pointing backhand index tone 4",
				shortname: ":point_right_tone4:",
				category: "people",
				emoji_order: "1102",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_right_tone5: {
				unicode: "1f449-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128073;&#127999;",
				name: "white right pointing backhand index tone 5",
				shortname: ":point_right_tone5:",
				category: "people",
				emoji_order: "1103",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up: {
				unicode: "261d",
				unicode_alt: "261d-fe0f",
				code_decimal: "&#9757;",
				name: "white up pointing index",
				shortname: ":point_up:",
				category: "people",
				emoji_order: "1104",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "hands", "emojione", "diversity"]
			},
			point_up_tone1: {
				unicode: "261d-1f3fb",
				unicode_alt: "",
				code_decimal: "&#9757;&#127995;",
				name: "white up pointing index tone 1",
				shortname: ":point_up_tone1:",
				category: "people",
				emoji_order: "1105",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up_tone2: {
				unicode: "261d-1f3fc",
				unicode_alt: "",
				code_decimal: "&#9757;&#127996;",
				name: "white up pointing index tone 2",
				shortname: ":point_up_tone2:",
				category: "people",
				emoji_order: "1106",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up_tone3: {
				unicode: "261d-1f3fd",
				unicode_alt: "",
				code_decimal: "&#9757;&#127997;",
				name: "white up pointing index tone 3",
				shortname: ":point_up_tone3:",
				category: "people",
				emoji_order: "1107",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up_tone4: {
				unicode: "261d-1f3fe",
				unicode_alt: "",
				code_decimal: "&#9757;&#127998;",
				name: "white up pointing index tone 4",
				shortname: ":point_up_tone4:",
				category: "people",
				emoji_order: "1108",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up_tone5: {
				unicode: "261d-1f3ff",
				unicode_alt: "",
				code_decimal: "&#9757;&#127999;",
				name: "white up pointing index tone 5",
				shortname: ":point_up_tone5:",
				category: "people",
				emoji_order: "1109",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up_2: {
				unicode: "1f446",
				unicode_alt: "",
				code_decimal: "&#128070;",
				name: "white up pointing backhand index",
				shortname: ":point_up_2:",
				category: "people",
				emoji_order: "1110",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "hands", "diversity"]
			},
			point_up_2_tone1: {
				unicode: "1f446-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128070;&#127995;",
				name: "white up pointing backhand index tone 1",
				shortname: ":point_up_2_tone1:",
				category: "people",
				emoji_order: "1111",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up_2_tone2: {
				unicode: "1f446-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128070;&#127996;",
				name: "white up pointing backhand index tone 2",
				shortname: ":point_up_2_tone2:",
				category: "people",
				emoji_order: "1112",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up_2_tone3: {
				unicode: "1f446-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128070;&#127997;",
				name: "white up pointing backhand index tone 3",
				shortname: ":point_up_2_tone3:",
				category: "people",
				emoji_order: "1113",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up_2_tone4: {
				unicode: "1f446-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128070;&#127998;",
				name: "white up pointing backhand index tone 4",
				shortname: ":point_up_2_tone4:",
				category: "people",
				emoji_order: "1114",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_up_2_tone5: {
				unicode: "1f446-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128070;&#127999;",
				name: "white up pointing backhand index tone 5",
				shortname: ":point_up_2_tone5:",
				category: "people",
				emoji_order: "1115",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			middle_finger: {
				unicode: "1f595",
				unicode_alt: "",
				code_decimal: "&#128405;",
				name: "reversed hand with middle finger extended",
				shortname: ":middle_finger:",
				category: "people",
				emoji_order: "1116",
				aliases: [":reversed_hand_with_middle_finger_extended:"],
				aliases_ascii: [],
				keywords: ["body", "hands", "middle finger", "diversity"]
			},
			middle_finger_tone1: {
				unicode: "1f595-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128405;&#127995;",
				name: "reversed hand with middle finger extended tone 1",
				shortname: ":middle_finger_tone1:",
				category: "people",
				emoji_order: "1117",
				aliases: [":reversed_hand_with_middle_finger_extended_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			middle_finger_tone2: {
				unicode: "1f595-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128405;&#127996;",
				name: "reversed hand with middle finger extended tone 2",
				shortname: ":middle_finger_tone2:",
				category: "people",
				emoji_order: "1118",
				aliases: [":reversed_hand_with_middle_finger_extended_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			middle_finger_tone3: {
				unicode: "1f595-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128405;&#127997;",
				name: "reversed hand with middle finger extended tone 3",
				shortname: ":middle_finger_tone3:",
				category: "people",
				emoji_order: "1119",
				aliases: [":reversed_hand_with_middle_finger_extended_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			middle_finger_tone4: {
				unicode: "1f595-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128405;&#127998;",
				name: "reversed hand with middle finger extended tone 4",
				shortname: ":middle_finger_tone4:",
				category: "people",
				emoji_order: "1120",
				aliases: [":reversed_hand_with_middle_finger_extended_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			middle_finger_tone5: {
				unicode: "1f595-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128405;&#127999;",
				name: "reversed hand with middle finger extended tone 5",
				shortname: ":middle_finger_tone5:",
				category: "people",
				emoji_order: "1121",
				aliases: [":reversed_hand_with_middle_finger_extended_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			point_down: {
				unicode: "1f447",
				unicode_alt: "",
				code_decimal: "&#128071;",
				name: "white down pointing backhand index",
				shortname: ":point_down:",
				category: "people",
				emoji_order: "1122",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "hands", "diversity"]
			},
			point_down_tone1: {
				unicode: "1f447-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128071;&#127995;",
				name: "white down pointing backhand index tone 1",
				shortname: ":point_down_tone1:",
				category: "people",
				emoji_order: "1123",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_down_tone2: {
				unicode: "1f447-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128071;&#127996;",
				name: "white down pointing backhand index tone 2",
				shortname: ":point_down_tone2:",
				category: "people",
				emoji_order: "1124",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_down_tone3: {
				unicode: "1f447-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128071;&#127997;",
				name: "white down pointing backhand index tone 3",
				shortname: ":point_down_tone3:",
				category: "people",
				emoji_order: "1125",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_down_tone4: {
				unicode: "1f447-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128071;&#127998;",
				name: "white down pointing backhand index tone 4",
				shortname: ":point_down_tone4:",
				category: "people",
				emoji_order: "1126",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			point_down_tone5: {
				unicode: "1f447-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128071;&#127999;",
				name: "white down pointing backhand index tone 5",
				shortname: ":point_down_tone5:",
				category: "people",
				emoji_order: "1127",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			v: {
				unicode: "270c",
				unicode_alt: "270c-fe0f",
				code_decimal: "&#9996;",
				name: "victory hand",
				shortname: ":v:",
				category: "people",
				emoji_order: "1128",
				aliases: [],
				aliases_ascii: [],
				keywords: "body;hands;hi;thank you;peace;diversity;girls night".split(";")
			},
			v_tone1: {
				unicode: "270c-1f3fb",
				unicode_alt: "",
				code_decimal: "&#9996;&#127995;",
				name: "victory hand tone 1",
				shortname: ":v_tone1:",
				category: "people",
				emoji_order: "1129",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			v_tone2: {
				unicode: "270c-1f3fc",
				unicode_alt: "",
				code_decimal: "&#9996;&#127996;",
				name: "victory hand tone 2",
				shortname: ":v_tone2:",
				category: "people",
				emoji_order: "1130",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			v_tone3: {
				unicode: "270c-1f3fd",
				unicode_alt: "",
				code_decimal: "&#9996;&#127997;",
				name: "victory hand tone 3",
				shortname: ":v_tone3:",
				category: "people",
				emoji_order: "1131",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			v_tone4: {
				unicode: "270c-1f3fe",
				unicode_alt: "",
				code_decimal: "&#9996;&#127998;",
				name: "victory hand tone 4",
				shortname: ":v_tone4:",
				category: "people",
				emoji_order: "1132",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			v_tone5: {
				unicode: "270c-1f3ff",
				unicode_alt: "",
				code_decimal: "&#9996;&#127999;",
				name: "victory hand tone 5",
				shortname: ":v_tone5:",
				category: "people",
				emoji_order: "1133",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			fingers_crossed: {
				unicode: "1f91e",
				unicode_alt: "",
				code_decimal: "&#129310;",
				name: "hand with first and index finger crossed",
				shortname: ":fingers_crossed:",
				category: "people",
				emoji_order: "1134",
				aliases: [":hand_with_index_and_middle_finger_crossed:"],
				aliases_ascii: [],
				keywords: []
			},
			fingers_crossed_tone1: {
				unicode: "1f91e-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129310;&#127995;",
				name: "hand with index and middle fingers crossed tone 1",
				shortname: ":fingers_crossed_tone1:",
				category: "people",
				emoji_order: "1135",
				aliases: [":hand_with_index_and_middle_fingers_crossed_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			fingers_crossed_tone2: {
				unicode: "1f91e-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129310;&#127996;",
				name: "hand with index and middle fingers crossed tone 2",
				shortname: ":fingers_crossed_tone2:",
				category: "people",
				emoji_order: "1136",
				aliases: [":hand_with_index_and_middle_fingers_crossed_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			fingers_crossed_tone3: {
				unicode: "1f91e-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129310;&#127997;",
				name: "hand with index and middle fingers crossed tone 3",
				shortname: ":fingers_crossed_tone3:",
				category: "people",
				emoji_order: "1137",
				aliases: [":hand_with_index_and_middle_fingers_crossed_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			fingers_crossed_tone4: {
				unicode: "1f91e-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129310;&#127998;",
				name: "hand with index and middle fingers crossed tone 4",
				shortname: ":fingers_crossed_tone4:",
				category: "people",
				emoji_order: "1138",
				aliases: [":hand_with_index_and_middle_fingers_crossed_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			fingers_crossed_tone5: {
				unicode: "1f91e-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129310;&#127999;",
				name: "hand with index and middle fingers crossed tone 5",
				shortname: ":fingers_crossed_tone5:",
				category: "people",
				emoji_order: "1139",
				aliases: [":hand_with_index_and_middle_fingers_crossed_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			vulcan: {
				unicode: "1f596",
				unicode_alt: "",
				code_decimal: "&#128406;",
				name: "raised hand with part between middle and ring fingers",
				shortname: ":vulcan:",
				category: "people",
				emoji_order: "1140",
				aliases: [":raised_hand_with_part_between_middle_and_ring_fingers:"],
				aliases_ascii: [],
				keywords: ["body", "hands", "hi", "diversity"]
			},
			vulcan_tone1: {
				unicode: "1f596-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128406;&#127995;",
				name: "raised hand with part between middle and ring fingers tone 1",
				shortname: ":vulcan_tone1:",
				category: "people",
				emoji_order: "1141",
				aliases: [":raised_hand_with_part_between_middle_and_ring_fingers_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			vulcan_tone2: {
				unicode: "1f596-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128406;&#127996;",
				name: "raised hand with part between middle and ring fingers tone 2",
				shortname: ":vulcan_tone2:",
				category: "people",
				emoji_order: "1142",
				aliases: [":raised_hand_with_part_between_middle_and_ring_fingers_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			vulcan_tone3: {
				unicode: "1f596-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128406;&#127997;",
				name: "raised hand with part between middle and ring fingers tone 3",
				shortname: ":vulcan_tone3:",
				category: "people",
				emoji_order: "1143",
				aliases: [":raised_hand_with_part_between_middle_and_ring_fingers_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			vulcan_tone4: {
				unicode: "1f596-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128406;&#127998;",
				name: "raised hand with part between middle and ring fingers tone 4",
				shortname: ":vulcan_tone4:",
				category: "people",
				emoji_order: "1144",
				aliases: [":raised_hand_with_part_between_middle_and_ring_fingers_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			vulcan_tone5: {
				unicode: "1f596-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128406;&#127999;",
				name: "raised hand with part between middle and ring fingers tone 5",
				shortname: ":vulcan_tone5:",
				category: "people",
				emoji_order: "1145",
				aliases: [":raised_hand_with_part_between_middle_and_ring_fingers_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			metal: {
				unicode: "1f918",
				unicode_alt: "",
				code_decimal: "&#129304;",
				name: "sign of the horns",
				shortname: ":metal:",
				category: "people",
				emoji_order: "1146",
				aliases: [":sign_of_the_horns:"],
				aliases_ascii: [],
				keywords: "body;hands;hi;diversity;boys night;parties".split(";")
			},
			metal_tone1: {
				unicode: "1f918-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129304;&#127995;",
				name: "sign of the horns tone 1",
				shortname: ":metal_tone1:",
				category: "people",
				emoji_order: "1147",
				aliases: [":sign_of_the_horns_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			metal_tone2: {
				unicode: "1f918-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129304;&#127996;",
				name: "sign of the horns tone 2",
				shortname: ":metal_tone2:",
				category: "people",
				emoji_order: "1148",
				aliases: [":sign_of_the_horns_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			metal_tone3: {
				unicode: "1f918-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129304;&#127997;",
				name: "sign of the horns tone 3",
				shortname: ":metal_tone3:",
				category: "people",
				emoji_order: "1149",
				aliases: [":sign_of_the_horns_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			metal_tone4: {
				unicode: "1f918-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129304;&#127998;",
				name: "sign of the horns tone 4",
				shortname: ":metal_tone4:",
				category: "people",
				emoji_order: "1150",
				aliases: [":sign_of_the_horns_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			metal_tone5: {
				unicode: "1f918-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129304;&#127999;",
				name: "sign of the horns tone 5",
				shortname: ":metal_tone5:",
				category: "people",
				emoji_order: "1151",
				aliases: [":sign_of_the_horns_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			call_me: {
				unicode: "1f919",
				unicode_alt: "",
				code_decimal: "&#129305;",
				name: "call me hand",
				shortname: ":call_me:",
				category: "people",
				emoji_order: "1152",
				aliases: [":call_me_hand:"],
				aliases_ascii: [],
				keywords: []
			},
			call_me_tone1: {
				unicode: "1f919-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129305;&#127995;",
				name: "call me hand tone 1",
				shortname: ":call_me_tone1:",
				category: "people",
				emoji_order: "1153",
				aliases: [":call_me_hand_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			call_me_tone2: {
				unicode: "1f919-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129305;&#127996;",
				name: "call me hand tone 2",
				shortname: ":call_me_tone2:",
				category: "people",
				emoji_order: "1154",
				aliases: [":call_me_hand_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			call_me_tone3: {
				unicode: "1f919-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129305;&#127997;",
				name: "call me hand tone 3",
				shortname: ":call_me_tone3:",
				category: "people",
				emoji_order: "1155",
				aliases: [":call_me_hand_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			call_me_tone4: {
				unicode: "1f919-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129305;&#127998;",
				name: "call me hand tone 4",
				shortname: ":call_me_tone4:",
				category: "people",
				emoji_order: "1156",
				aliases: [":call_me_hand_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			call_me_tone5: {
				unicode: "1f919-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129305;&#127999;",
				name: "call me hand tone 5",
				shortname: ":call_me_tone5:",
				category: "people",
				emoji_order: "1157",
				aliases: [":call_me_hand_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			hand_splayed: {
				unicode: "1f590",
				unicode_alt: "1f590-fe0f",
				code_decimal: "&#128400;",
				name: "raised hand with fingers splayed",
				shortname: ":hand_splayed:",
				category: "people",
				emoji_order: "1158",
				aliases: [":raised_hand_with_fingers_splayed:"],
				aliases_ascii: [],
				keywords: ["body", "hands", "hi", "diversity"]
			},
			hand_splayed_tone1: {
				unicode: "1f590-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128400;&#127995;",
				name: "raised hand with fingers splayed tone 1",
				shortname: ":hand_splayed_tone1:",
				category: "people",
				emoji_order: "1159",
				aliases: [":raised_hand_with_fingers_splayed_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			hand_splayed_tone2: {
				unicode: "1f590-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128400;&#127996;",
				name: "raised hand with fingers splayed tone 2",
				shortname: ":hand_splayed_tone2:",
				category: "people",
				emoji_order: "1160",
				aliases: [":raised_hand_with_fingers_splayed_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			hand_splayed_tone3: {
				unicode: "1f590-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128400;&#127997;",
				name: "raised hand with fingers splayed tone 3",
				shortname: ":hand_splayed_tone3:",
				category: "people",
				emoji_order: "1161",
				aliases: [":raised_hand_with_fingers_splayed_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			hand_splayed_tone4: {
				unicode: "1f590-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128400;&#127998;",
				name: "raised hand with fingers splayed tone 4",
				shortname: ":hand_splayed_tone4:",
				category: "people",
				emoji_order: "1162",
				aliases: [":raised_hand_with_fingers_splayed_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			hand_splayed_tone5: {
				unicode: "1f590-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128400;&#127999;",
				name: "raised hand with fingers splayed tone 5",
				shortname: ":hand_splayed_tone5:",
				category: "people",
				emoji_order: "1163",
				aliases: [":raised_hand_with_fingers_splayed_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			raised_hand: {
				unicode: "270b",
				unicode_alt: "",
				code_decimal: "&#9995;",
				name: "raised hand",
				shortname: ":raised_hand:",
				category: "people",
				emoji_order: "1164",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body",
					"hands", "hi", "diversity", "girls night"]
			},
			raised_hand_tone1: {
				unicode: "270b-1f3fb",
				unicode_alt: "",
				code_decimal: "&#9995;&#127995;",
				name: "raised hand tone 1",
				shortname: ":raised_hand_tone1:",
				category: "people",
				emoji_order: "1165",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raised_hand_tone2: {
				unicode: "270b-1f3fc",
				unicode_alt: "",
				code_decimal: "&#9995;&#127996;",
				name: "raised hand tone 2",
				shortname: ":raised_hand_tone2:",
				category: "people",
				emoji_order: "1166",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raised_hand_tone3: {
				unicode: "270b-1f3fd",
				unicode_alt: "",
				code_decimal: "&#9995;&#127997;",
				name: "raised hand tone 3",
				shortname: ":raised_hand_tone3:",
				category: "people",
				emoji_order: "1167",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raised_hand_tone4: {
				unicode: "270b-1f3fe",
				unicode_alt: "",
				code_decimal: "&#9995;&#127998;",
				name: "raised hand tone 4",
				shortname: ":raised_hand_tone4:",
				category: "people",
				emoji_order: "1168",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raised_hand_tone5: {
				unicode: "270b-1f3ff",
				unicode_alt: "",
				code_decimal: "&#9995;&#127999;",
				name: "raised hand tone 5",
				shortname: ":raised_hand_tone5:",
				category: "people",
				emoji_order: "1169",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_hand: {
				unicode: "1f44c",
				unicode_alt: "",
				code_decimal: "&#128076;",
				name: "ok hand sign",
				shortname: ":ok_hand:",
				category: "people",
				emoji_order: "1170",
				aliases: [],
				aliases_ascii: [],
				keywords: "body hands hi diversity perfect good beautiful".split(" ")
			},
			ok_hand_tone1: {
				unicode: "1f44c-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128076;&#127995;",
				name: "ok hand sign tone 1",
				shortname: ":ok_hand_tone1:",
				category: "people",
				emoji_order: "1171",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_hand_tone2: {
				unicode: "1f44c-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128076;&#127996;",
				name: "ok hand sign tone 2",
				shortname: ":ok_hand_tone2:",
				category: "people",
				emoji_order: "1172",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_hand_tone3: {
				unicode: "1f44c-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128076;&#127997;",
				name: "ok hand sign tone 3",
				shortname: ":ok_hand_tone3:",
				category: "people",
				emoji_order: "1173",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_hand_tone4: {
				unicode: "1f44c-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128076;&#127998;",
				name: "ok hand sign tone 4",
				shortname: ":ok_hand_tone4:",
				category: "people",
				emoji_order: "1174",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ok_hand_tone5: {
				unicode: "1f44c-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128076;&#127999;",
				name: "ok hand sign tone 5",
				shortname: ":ok_hand_tone5:",
				category: "people",
				emoji_order: "1175",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			thumbsup: {
				unicode: "1f44d",
				unicode_alt: "",
				code_decimal: "&#128077;",
				name: "thumbs up sign",
				shortname: ":thumbsup:",
				category: "people",
				emoji_order: "1176",
				aliases: [":+1:", ":thumbup:"],
				aliases_ascii: [],
				keywords: "body;hands;hi;luck;thank you;diversity;perfect;good;beautiful".split(";")
			},
			thumbsup_tone1: {
				unicode: "1f44d-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128077;&#127995;",
				name: "thumbs up sign tone 1",
				shortname: ":thumbsup_tone1:",
				category: "people",
				emoji_order: "1177",
				aliases: [":+1_tone1:", ":thumbup_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			thumbsup_tone2: {
				unicode: "1f44d-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128077;&#127996;",
				name: "thumbs up sign tone 2",
				shortname: ":thumbsup_tone2:",
				category: "people",
				emoji_order: "1178",
				aliases: [":+1_tone2:", ":thumbup_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			thumbsup_tone3: {
				unicode: "1f44d-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128077;&#127997;",
				name: "thumbs up sign tone 3",
				shortname: ":thumbsup_tone3:",
				category: "people",
				emoji_order: "1179",
				aliases: [":+1_tone3:", ":thumbup_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			thumbsup_tone4: {
				unicode: "1f44d-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128077;&#127998;",
				name: "thumbs up sign tone 4",
				shortname: ":thumbsup_tone4:",
				category: "people",
				emoji_order: "1180",
				aliases: [":+1_tone4:", ":thumbup_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			thumbsup_tone5: {
				unicode: "1f44d-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128077;&#127999;",
				name: "thumbs up sign tone 5",
				shortname: ":thumbsup_tone5:",
				category: "people",
				emoji_order: "1181",
				aliases: [":+1_tone5:", ":thumbup_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			thumbsdown: {
				unicode: "1f44e",
				unicode_alt: "",
				code_decimal: "&#128078;",
				name: "thumbs down sign",
				shortname: ":thumbsdown:",
				category: "people",
				emoji_order: "1182",
				aliases: [":-1:", ":thumbdown:"],
				aliases_ascii: [],
				keywords: ["body", "hands", "diversity"]
			},
			thumbsdown_tone1: {
				unicode: "1f44e-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128078;&#127995;",
				name: "thumbs down sign tone 1",
				shortname: ":thumbsdown_tone1:",
				category: "people",
				emoji_order: "1183",
				aliases: [":-1_tone1:", ":thumbdown_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			thumbsdown_tone2: {
				unicode: "1f44e-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128078;&#127996;",
				name: "thumbs down sign tone 2",
				shortname: ":thumbsdown_tone2:",
				category: "people",
				emoji_order: "1184",
				aliases: [":-1_tone2:", ":thumbdown_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			thumbsdown_tone3: {
				unicode: "1f44e-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128078;&#127997;",
				name: "thumbs down sign tone 3",
				shortname: ":thumbsdown_tone3:",
				category: "people",
				emoji_order: "1185",
				aliases: [":-1_tone3:", ":thumbdown_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			thumbsdown_tone4: {
				unicode: "1f44e-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128078;&#127998;",
				name: "thumbs down sign tone 4",
				shortname: ":thumbsdown_tone4:",
				category: "people",
				emoji_order: "1186",
				aliases: [":-1_tone4:", ":thumbdown_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			thumbsdown_tone5: {
				unicode: "1f44e-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128078;&#127999;",
				name: "thumbs down sign tone 5",
				shortname: ":thumbsdown_tone5:",
				category: "people",
				emoji_order: "1187",
				aliases: [":-1_tone5:", ":thumbdown_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			fist: {
				unicode: "270a",
				unicode_alt: "",
				code_decimal: "&#9994;",
				name: "raised fist",
				shortname: ":fist:",
				category: "people",
				emoji_order: "1188",
				aliases: [],
				aliases_ascii: [],
				keywords: "body;hands;hi;fist bump;diversity;condolence".split(";")
			},
			fist_tone1: {
				unicode: "270a-1f3fb",
				unicode_alt: "",
				code_decimal: "&#9994;&#127995;",
				name: "raised fist tone 1",
				shortname: ":fist_tone1:",
				category: "people",
				emoji_order: "1189",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			fist_tone2: {
				unicode: "270a-1f3fc",
				unicode_alt: "",
				code_decimal: "&#9994;&#127996;",
				name: "raised fist tone 2",
				shortname: ":fist_tone2:",
				category: "people",
				emoji_order: "1190",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			fist_tone3: {
				unicode: "270a-1f3fd",
				unicode_alt: "",
				code_decimal: "&#9994;&#127997;",
				name: "raised fist tone 3",
				shortname: ":fist_tone3:",
				category: "people",
				emoji_order: "1191",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			fist_tone4: {
				unicode: "270a-1f3fe",
				unicode_alt: "",
				code_decimal: "&#9994;&#127998;",
				name: "raised fist tone 4",
				shortname: ":fist_tone4:",
				category: "people",
				emoji_order: "1192",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			fist_tone5: {
				unicode: "270a-1f3ff",
				unicode_alt: "",
				code_decimal: "&#9994;&#127999;",
				name: "raised fist tone 5",
				shortname: ":fist_tone5:",
				category: "people",
				emoji_order: "1193",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			punch: {
				unicode: "1f44a",
				unicode_alt: "",
				code_decimal: "&#128074;",
				name: "fisted hand sign",
				shortname: ":punch:",
				category: "people",
				emoji_order: "1194",
				aliases: [],
				aliases_ascii: [],
				keywords: "body;hands;hi;fist bump;diversity;boys night".split(";")
			},
			punch_tone1: {
				unicode: "1f44a-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128074;&#127995;",
				name: "fisted hand sign tone 1",
				shortname: ":punch_tone1:",
				category: "people",
				emoji_order: "1195",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			punch_tone2: {
				unicode: "1f44a-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128074;&#127996;",
				name: "fisted hand sign tone 2",
				shortname: ":punch_tone2:",
				category: "people",
				emoji_order: "1196",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			punch_tone3: {
				unicode: "1f44a-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128074;&#127997;",
				name: "fisted hand sign tone 3",
				shortname: ":punch_tone3:",
				category: "people",
				emoji_order: "1197",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			punch_tone4: {
				unicode: "1f44a-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128074;&#127998;",
				name: "fisted hand sign tone 4",
				shortname: ":punch_tone4:",
				category: "people",
				emoji_order: "1198",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			punch_tone5: {
				unicode: "1f44a-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128074;&#127999;",
				name: "fisted hand sign tone 5",
				shortname: ":punch_tone5:",
				category: "people",
				emoji_order: "1199",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			left_facing_fist: {
				unicode: "1f91b",
				unicode_alt: "",
				code_decimal: "&#129307;",
				name: "left-facing fist",
				shortname: ":left_facing_fist:",
				category: "people",
				emoji_order: "1200",
				aliases: [":left_fist:"],
				aliases_ascii: [],
				keywords: []
			},
			left_facing_fist_tone1: {
				unicode: "1f91b-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129307;&#127995;",
				name: "left facing fist tone 1",
				shortname: ":left_facing_fist_tone1:",
				category: "people",
				emoji_order: "1201",
				aliases: [":left_fist_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			left_facing_fist_tone2: {
				unicode: "1f91b-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129307;&#127996;",
				name: "left facing fist tone 2",
				shortname: ":left_facing_fist_tone2:",
				category: "people",
				emoji_order: "1202",
				aliases: [":left_fist_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			left_facing_fist_tone3: {
				unicode: "1f91b-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129307;&#127997;",
				name: "left facing fist tone 3",
				shortname: ":left_facing_fist_tone3:",
				category: "people",
				emoji_order: "1203",
				aliases: [":left_fist_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			left_facing_fist_tone4: {
				unicode: "1f91b-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129307;&#127998;",
				name: "left facing fist tone 4",
				shortname: ":left_facing_fist_tone4:",
				category: "people",
				emoji_order: "1204",
				aliases: [":left_fist_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			left_facing_fist_tone5: {
				unicode: "1f91b-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129307;&#127999;",
				name: "left facing fist tone 5",
				shortname: ":left_facing_fist_tone5:",
				category: "people",
				emoji_order: "1205",
				aliases: [":left_fist_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			right_facing_fist: {
				unicode: "1f91c",
				unicode_alt: "",
				code_decimal: "&#129308;",
				name: "right-facing fist",
				shortname: ":right_facing_fist:",
				category: "people",
				emoji_order: "1206",
				aliases: [":right_fist:"],
				aliases_ascii: [],
				keywords: []
			},
			right_facing_fist_tone1: {
				unicode: "1f91c-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129308;&#127995;",
				name: "right facing fist tone 1",
				shortname: ":right_facing_fist_tone1:",
				category: "people",
				emoji_order: "1207",
				aliases: [":right_fist_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			right_facing_fist_tone2: {
				unicode: "1f91c-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129308;&#127996;",
				name: "right facing fist tone 2",
				shortname: ":right_facing_fist_tone2:",
				category: "people",
				emoji_order: "1208",
				aliases: [":right_fist_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			right_facing_fist_tone3: {
				unicode: "1f91c-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129308;&#127997;",
				name: "right facing fist tone 3",
				shortname: ":right_facing_fist_tone3:",
				category: "people",
				emoji_order: "1209",
				aliases: [":right_fist_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			right_facing_fist_tone4: {
				unicode: "1f91c-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129308;&#127998;",
				name: "right facing fist tone 4",
				shortname: ":right_facing_fist_tone4:",
				category: "people",
				emoji_order: "1210",
				aliases: [":right_fist_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			right_facing_fist_tone5: {
				unicode: "1f91c-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129308;&#127999;",
				name: "right facing fist tone 5",
				shortname: ":right_facing_fist_tone5:",
				category: "people",
				emoji_order: "1211",
				aliases: [":right_fist_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			raised_back_of_hand: {
				unicode: "1f91a",
				unicode_alt: "",
				code_decimal: "&#129306;",
				name: "raised back of hand",
				shortname: ":raised_back_of_hand:",
				category: "people",
				emoji_order: "1212",
				aliases: [":back_of_hand:"],
				aliases_ascii: [],
				keywords: []
			},
			raised_back_of_hand_tone1: {
				unicode: "1f91a-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129306;&#127995;",
				name: "raised back of hand tone 1",
				shortname: ":raised_back_of_hand_tone1:",
				category: "people",
				emoji_order: "1213",
				aliases: [":back_of_hand_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			raised_back_of_hand_tone2: {
				unicode: "1f91a-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129306;&#127996;",
				name: "raised back of hand tone 2",
				shortname: ":raised_back_of_hand_tone2:",
				category: "people",
				emoji_order: "1214",
				aliases: [":back_of_hand_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			raised_back_of_hand_tone3: {
				unicode: "1f91a-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129306;&#127997;",
				name: "raised back of hand tone 3",
				shortname: ":raised_back_of_hand_tone3:",
				category: "people",
				emoji_order: "1215",
				aliases: [":back_of_hand_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			raised_back_of_hand_tone4: {
				unicode: "1f91a-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129306;&#127998;",
				name: "raised back of hand tone 4",
				shortname: ":raised_back_of_hand_tone4:",
				category: "people",
				emoji_order: "1216",
				aliases: [":back_of_hand_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			raised_back_of_hand_tone5: {
				unicode: "1f91a-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129306;&#127999;",
				name: "raised back of hand tone 5",
				shortname: ":raised_back_of_hand_tone5:",
				category: "people",
				emoji_order: "1217",
				aliases: [":back_of_hand_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			wave: {
				unicode: "1f44b",
				unicode_alt: "",
				code_decimal: "&#128075;",
				name: "waving hand sign",
				shortname: ":wave:",
				category: "people",
				emoji_order: "1218",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "hands", "hi", "diversity"]
			},
			wave_tone1: {
				unicode: "1f44b-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128075;&#127995;",
				name: "waving hand sign tone 1",
				shortname: ":wave_tone1:",
				category: "people",
				emoji_order: "1219",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			wave_tone2: {
				unicode: "1f44b-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128075;&#127996;",
				name: "waving hand sign tone 2",
				shortname: ":wave_tone2:",
				category: "people",
				emoji_order: "1220",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			wave_tone3: {
				unicode: "1f44b-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128075;&#127997;",
				name: "waving hand sign tone 3",
				shortname: ":wave_tone3:",
				category: "people",
				emoji_order: "1221",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			wave_tone4: {
				unicode: "1f44b-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128075;&#127998;",
				name: "waving hand sign tone 4",
				shortname: ":wave_tone4:",
				category: "people",
				emoji_order: "1222",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			wave_tone5: {
				unicode: "1f44b-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128075;&#127999;",
				name: "waving hand sign tone 5",
				shortname: ":wave_tone5:",
				category: "people",
				emoji_order: "1223",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			clap: {
				unicode: "1f44f",
				unicode_alt: "",
				code_decimal: "&#128079;",
				name: "clapping hands sign",
				shortname: ":clap:",
				category: "people",
				emoji_order: "1224",
				aliases: [],
				aliases_ascii: [],
				keywords: "body hands win diversity good beautiful".split(" ")
			},
			clap_tone1: {
				unicode: "1f44f-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128079;&#127995;",
				name: "clapping hands sign tone 1",
				shortname: ":clap_tone1:",
				category: "people",
				emoji_order: "1225",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			clap_tone2: {
				unicode: "1f44f-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128079;&#127996;",
				name: "clapping hands sign tone 2",
				shortname: ":clap_tone2:",
				category: "people",
				emoji_order: "1226",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			clap_tone3: {
				unicode: "1f44f-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128079;&#127997;",
				name: "clapping hands sign tone 3",
				shortname: ":clap_tone3:",
				category: "people",
				emoji_order: "1227",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			clap_tone4: {
				unicode: "1f44f-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128079;&#127998;",
				name: "clapping hands sign tone 4",
				shortname: ":clap_tone4:",
				category: "people",
				emoji_order: "1228",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			clap_tone5: {
				unicode: "1f44f-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128079;&#127999;",
				name: "clapping hands sign tone 5",
				shortname: ":clap_tone5:",
				category: "people",
				emoji_order: "1229",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			writing_hand: {
				unicode: "270d",
				unicode_alt: "270d-fe0f",
				code_decimal: "&#9997;",
				name: "writing hand",
				shortname: ":writing_hand:",
				category: "people",
				emoji_order: "1230",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "hands", "write", "diversity"]
			},
			writing_hand_tone1: {
				unicode: "270d-1f3fb",
				unicode_alt: "",
				code_decimal: "&#9997;&#127995;",
				name: "writing hand tone 1",
				shortname: ":writing_hand_tone1:",
				category: "people",
				emoji_order: "1231",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			writing_hand_tone2: {
				unicode: "270d-1f3fc",
				unicode_alt: "",
				code_decimal: "&#9997;&#127996;",
				name: "writing hand tone 2",
				shortname: ":writing_hand_tone2:",
				category: "people",
				emoji_order: "1232",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			writing_hand_tone3: {
				unicode: "270d-1f3fd",
				unicode_alt: "",
				code_decimal: "&#9997;&#127997;",
				name: "writing hand tone 3",
				shortname: ":writing_hand_tone3:",
				category: "people",
				emoji_order: "1233",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			writing_hand_tone4: {
				unicode: "270d-1f3fe",
				unicode_alt: "",
				code_decimal: "&#9997;&#127998;",
				name: "writing hand tone 4",
				shortname: ":writing_hand_tone4:",
				category: "people",
				emoji_order: "1234",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			writing_hand_tone5: {
				unicode: "270d-1f3ff",
				unicode_alt: "",
				code_decimal: "&#9997;&#127999;",
				name: "writing hand tone 5",
				shortname: ":writing_hand_tone5:",
				category: "people",
				emoji_order: "1235",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			open_hands: {
				unicode: "1f450",
				unicode_alt: "",
				code_decimal: "&#128080;",
				name: "open hands sign",
				shortname: ":open_hands:",
				category: "people",
				emoji_order: "1236",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "hands", "diversity", "condolence"]
			},
			open_hands_tone1: {
				unicode: "1f450-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128080;&#127995;",
				name: "open hands sign tone 1",
				shortname: ":open_hands_tone1:",
				category: "people",
				emoji_order: "1237",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			open_hands_tone2: {
				unicode: "1f450-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128080;&#127996;",
				name: "open hands sign tone 2",
				shortname: ":open_hands_tone2:",
				category: "people",
				emoji_order: "1238",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			open_hands_tone3: {
				unicode: "1f450-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128080;&#127997;",
				name: "open hands sign tone 3",
				shortname: ":open_hands_tone3:",
				category: "people",
				emoji_order: "1239",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			open_hands_tone4: {
				unicode: "1f450-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128080;&#127998;",
				name: "open hands sign tone 4",
				shortname: ":open_hands_tone4:",
				category: "people",
				emoji_order: "1240",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			open_hands_tone5: {
				unicode: "1f450-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128080;&#127999;",
				name: "open hands sign tone 5",
				shortname: ":open_hands_tone5:",
				category: "people",
				emoji_order: "1241",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raised_hands: {
				unicode: "1f64c",
				unicode_alt: "",
				code_decimal: "&#128588;",
				name: "person raising both hands in celebration",
				shortname: ":raised_hands:",
				category: "people",
				emoji_order: "1242",
				aliases: [],
				aliases_ascii: [],
				keywords: "body hands diversity perfect good parties".split(" ")
			},
			raised_hands_tone1: {
				unicode: "1f64c-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128588;&#127995;",
				name: "person raising both hands in celebration tone 1",
				shortname: ":raised_hands_tone1:",
				category: "people",
				emoji_order: "1243",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raised_hands_tone2: {
				unicode: "1f64c-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128588;&#127996;",
				name: "person raising both hands in celebration tone 2",
				shortname: ":raised_hands_tone2:",
				category: "people",
				emoji_order: "1244",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raised_hands_tone3: {
				unicode: "1f64c-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128588;&#127997;",
				name: "person raising both hands in celebration tone 3",
				shortname: ":raised_hands_tone3:",
				category: "people",
				emoji_order: "1245",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raised_hands_tone4: {
				unicode: "1f64c-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128588;&#127998;",
				name: "person raising both hands in celebration tone 4",
				shortname: ":raised_hands_tone4:",
				category: "people",
				emoji_order: "1246",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			raised_hands_tone5: {
				unicode: "1f64c-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128588;&#127999;",
				name: "person raising both hands in celebration tone 5",
				shortname: ":raised_hands_tone5:",
				category: "people",
				emoji_order: "1247",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			pray: {
				unicode: "1f64f",
				unicode_alt: "",
				code_decimal: "&#128591;",
				name: "person with folded hands",
				shortname: ":pray:",
				category: "people",
				emoji_order: "1248",
				aliases: [],
				aliases_ascii: [],
				keywords: "body;hands;hi;luck;thank you;pray;diversity;scientology".split(";")
			},
			pray_tone1: {
				unicode: "1f64f-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128591;&#127995;",
				name: "person with folded hands tone 1",
				shortname: ":pray_tone1:",
				category: "people",
				emoji_order: "1249",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			pray_tone2: {
				unicode: "1f64f-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128591;&#127996;",
				name: "person with folded hands tone 2",
				shortname: ":pray_tone2:",
				category: "people",
				emoji_order: "1250",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			pray_tone3: {
				unicode: "1f64f-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128591;&#127997;",
				name: "person with folded hands tone 3",
				shortname: ":pray_tone3:",
				category: "people",
				emoji_order: "1251",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			pray_tone4: {
				unicode: "1f64f-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128591;&#127998;",
				name: "person with folded hands tone 4",
				shortname: ":pray_tone4:",
				category: "people",
				emoji_order: "1252",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			pray_tone5: {
				unicode: "1f64f-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128591;&#127999;",
				name: "person with folded hands tone 5",
				shortname: ":pray_tone5:",
				category: "people",
				emoji_order: "1253",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			handshake: {
				unicode: "1f91d",
				unicode_alt: "",
				code_decimal: "&#129309;",
				name: "handshake",
				shortname: ":handshake:",
				category: "people",
				emoji_order: "1254",
				aliases: [":shaking_hands:"],
				aliases_ascii: [],
				keywords: []
			},
			handshake_tone1: {
				unicode: "1f91d-1f3fb",
				unicode_alt: "",
				code_decimal: "&#129309;&#127995;",
				name: "handshake tone 1",
				shortname: ":handshake_tone1:",
				category: "people",
				emoji_order: "1255",
				aliases: [":shaking_hands_tone1:"],
				aliases_ascii: [],
				keywords: []
			},
			handshake_tone2: {
				unicode: "1f91d-1f3fc",
				unicode_alt: "",
				code_decimal: "&#129309;&#127996;",
				name: "handshake tone 2",
				shortname: ":handshake_tone2:",
				category: "people",
				emoji_order: "1256",
				aliases: [":shaking_hands_tone2:"],
				aliases_ascii: [],
				keywords: []
			},
			handshake_tone3: {
				unicode: "1f91d-1f3fd",
				unicode_alt: "",
				code_decimal: "&#129309;&#127997;",
				name: "handshake tone 3",
				shortname: ":handshake_tone3:",
				category: "people",
				emoji_order: "1257",
				aliases: [":shaking_hands_tone3:"],
				aliases_ascii: [],
				keywords: []
			},
			handshake_tone4: {
				unicode: "1f91d-1f3fe",
				unicode_alt: "",
				code_decimal: "&#129309;&#127998;",
				name: "handshake tone 4",
				shortname: ":handshake_tone4:",
				category: "people",
				emoji_order: "1258",
				aliases: [":shaking_hands_tone4:"],
				aliases_ascii: [],
				keywords: []
			},
			handshake_tone5: {
				unicode: "1f91d-1f3ff",
				unicode_alt: "",
				code_decimal: "&#129309;&#127999;",
				name: "handshake tone 5",
				shortname: ":handshake_tone5:",
				category: "people",
				emoji_order: "1259",
				aliases: [":shaking_hands_tone5:"],
				aliases_ascii: [],
				keywords: []
			},
			nail_care: {
				unicode: "1f485",
				unicode_alt: "",
				code_decimal: "&#128133;",
				name: "nail polish",
				shortname: ":nail_care:",
				category: "people",
				emoji_order: "1260",
				aliases: [],
				aliases_ascii: [],
				keywords: "women;body;hands;nailpolish;diversity;girls night".split(";")
			},
			nail_care_tone1: {
				unicode: "1f485-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128133;&#127995;",
				name: "nail polish tone 1",
				shortname: ":nail_care_tone1:",
				category: "people",
				emoji_order: "1261",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			nail_care_tone2: {
				unicode: "1f485-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128133;&#127996;",
				name: "nail polish tone 2",
				shortname: ":nail_care_tone2:",
				category: "people",
				emoji_order: "1262",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			nail_care_tone3: {
				unicode: "1f485-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128133;&#127997;",
				name: "nail polish tone 3",
				shortname: ":nail_care_tone3:",
				category: "people",
				emoji_order: "1263",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			nail_care_tone4: {
				unicode: "1f485-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128133;&#127998;",
				name: "nail polish tone 4",
				shortname: ":nail_care_tone4:",
				category: "people",
				emoji_order: "1264",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			nail_care_tone5: {
				unicode: "1f485-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128133;&#127999;",
				name: "nail polish tone 5",
				shortname: ":nail_care_tone5:",
				category: "people",
				emoji_order: "1265",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ear: {
				unicode: "1f442",
				unicode_alt: "",
				code_decimal: "&#128066;",
				name: "ear",
				shortname: ":ear:",
				category: "people",
				emoji_order: "1266",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "diversity"]
			},
			ear_tone1: {
				unicode: "1f442-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128066;&#127995;",
				name: "ear tone 1",
				shortname: ":ear_tone1:",
				category: "people",
				emoji_order: "1267",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ear_tone2: {
				unicode: "1f442-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128066;&#127996;",
				name: "ear tone 2",
				shortname: ":ear_tone2:",
				category: "people",
				emoji_order: "1268",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ear_tone3: {
				unicode: "1f442-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128066;&#127997;",
				name: "ear tone 3",
				shortname: ":ear_tone3:",
				category: "people",
				emoji_order: "1269",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ear_tone4: {
				unicode: "1f442-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128066;&#127998;",
				name: "ear tone 4",
				shortname: ":ear_tone4:",
				category: "people",
				emoji_order: "1270",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			ear_tone5: {
				unicode: "1f442-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128066;&#127999;",
				name: "ear tone 5",
				shortname: ":ear_tone5:",
				category: "people",
				emoji_order: "1271",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			nose: {
				unicode: "1f443", unicode_alt: "", code_decimal: "&#128067;", name: "nose", shortname: ":nose:",
				category: "people", emoji_order: "1272", aliases: [], aliases_ascii: [], keywords: ["body", "diversity"]
			},
			nose_tone1: {
				unicode: "1f443-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128067;&#127995;",
				name: "nose tone 1",
				shortname: ":nose_tone1:",
				category: "people",
				emoji_order: "1273",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			nose_tone2: {
				unicode: "1f443-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128067;&#127996;",
				name: "nose tone 2",
				shortname: ":nose_tone2:",
				category: "people",
				emoji_order: "1274",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			nose_tone3: {
				unicode: "1f443-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128067;&#127997;",
				name: "nose tone 3",
				shortname: ":nose_tone3:",
				category: "people",
				emoji_order: "1275",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			nose_tone4: {
				unicode: "1f443-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128067;&#127998;",
				name: "nose tone 4",
				shortname: ":nose_tone4:",
				category: "people",
				emoji_order: "1276",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			nose_tone5: {
				unicode: "1f443-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128067;&#127999;",
				name: "nose tone 5",
				shortname: ":nose_tone5:",
				category: "people",
				emoji_order: "1277",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			footprints: {
				unicode: "1f463",
				unicode_alt: "",
				code_decimal: "&#128099;",
				name: "footprints",
				shortname: ":footprints:",
				category: "people",
				emoji_order: "1278",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			eyes: {
				unicode: "1f440",
				unicode_alt: "",
				code_decimal: "&#128064;",
				name: "eyes",
				shortname: ":eyes:",
				category: "people",
				emoji_order: "1279",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "eyes"]
			},
			eye: {
				unicode: "1f441",
				unicode_alt: "1f441-fe0f",
				code_decimal: "&#128065;",
				name: "eye",
				shortname: ":eye:",
				category: "people",
				emoji_order: "1280",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "eyes"]
			},
			eye_in_speech_bubble: {
				unicode: "1f441-1f5e8",
				unicode_alt: "1f441-200d-1f5e8",
				code_decimal: "&#128065;&#128488;",
				name: "eye in speech bubble",
				shortname: ":eye_in_speech_bubble:",
				category: "symbols",
				emoji_order: "1281",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "symbol", "eyes", "talk"]
			},
			tongue: {
				unicode: "1f445",
				unicode_alt: "",
				code_decimal: "&#128069;",
				name: "tongue",
				shortname: ":tongue:",
				category: "people",
				emoji_order: "1282",
				aliases: [],
				aliases_ascii: [],
				keywords: ["body", "sexy", "lip"]
			},
			lips: {
				unicode: "1f444",
				unicode_alt: "",
				code_decimal: "&#128068;",
				name: "mouth",
				shortname: ":lips:",
				category: "people",
				emoji_order: "1283",
				aliases: [],
				aliases_ascii: [],
				keywords: ["women", "body", "sexy", "lip"]
			},
			kiss: {
				unicode: "1f48b",
				unicode_alt: "",
				code_decimal: "&#128139;",
				name: "kiss mark",
				shortname: ":kiss:",
				category: "people",
				emoji_order: "1284",
				aliases: [],
				aliases_ascii: [],
				keywords: "women;love;sexy;lip;beautiful;girls night".split(";")
			},
			cupid: {
				unicode: "1f498",
				unicode_alt: "",
				code_decimal: "&#128152;",
				name: "heart with arrow",
				shortname: ":cupid:",
				category: "symbols",
				emoji_order: "1285",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			heart: {
				unicode: "2764",
				unicode_alt: "2764-fe0f",
				code_decimal: "&#10084;",
				name: "heavy black heart",
				shortname: ":heart:",
				category: "symbols",
				emoji_order: "1286",
				aliases: [],
				aliases_ascii: ["<3"],
				keywords: ["love", "symbol", "parties"]
			},
			heartbeat: {
				unicode: "1f493",
				unicode_alt: "",
				code_decimal: "&#128147;",
				name: "beating heart",
				shortname: ":heartbeat:",
				category: "symbols",
				emoji_order: "1287",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			broken_heart: {
				unicode: "1f494",
				unicode_alt: "",
				code_decimal: "&#128148;",
				name: "broken heart",
				shortname: ":broken_heart:",
				category: "symbols",
				emoji_order: "1288",
				aliases: [],
				aliases_ascii: ["</3"],
				keywords: ["love", "symbol", "heartbreak"]
			},
			two_hearts: {
				unicode: "1f495",
				unicode_alt: "",
				code_decimal: "&#128149;",
				name: "two hearts",
				shortname: ":two_hearts:",
				category: "symbols",
				emoji_order: "1289",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			sparkling_heart: {
				unicode: "1f496",
				unicode_alt: "",
				code_decimal: "&#128150;",
				name: "sparkling heart",
				shortname: ":sparkling_heart:",
				category: "symbols",
				emoji_order: "1290",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol", "girls night"]
			},
			heartpulse: {
				unicode: "1f497",
				unicode_alt: "",
				code_decimal: "&#128151;",
				name: "growing heart",
				shortname: ":heartpulse:",
				category: "symbols",
				emoji_order: "1291",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			blue_heart: {
				unicode: "1f499",
				unicode_alt: "",
				code_decimal: "&#128153;",
				name: "blue heart",
				shortname: ":blue_heart:",
				category: "symbols",
				emoji_order: "1292",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			green_heart: {
				unicode: "1f49a",
				unicode_alt: "",
				code_decimal: "&#128154;",
				name: "green heart",
				shortname: ":green_heart:",
				category: "symbols",
				emoji_order: "1293",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			yellow_heart: {
				unicode: "1f49b",
				unicode_alt: "",
				code_decimal: "&#128155;",
				name: "yellow heart",
				shortname: ":yellow_heart:",
				category: "symbols",
				emoji_order: "1294",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			purple_heart: {
				unicode: "1f49c",
				unicode_alt: "",
				code_decimal: "&#128156;",
				name: "purple heart",
				shortname: ":purple_heart:",
				category: "symbols",
				emoji_order: "1295",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			black_heart: {
				unicode: "1f5a4",
				unicode_alt: "",
				code_decimal: "&#128420;",
				name: "black heart",
				shortname: ":black_heart:",
				category: "symbols",
				emoji_order: "1296",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			gift_heart: {
				unicode: "1f49d",
				unicode_alt: "",
				code_decimal: "&#128157;",
				name: "heart with ribbon",
				shortname: ":gift_heart:",
				category: "symbols",
				emoji_order: "1297",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol", "condolence"]
			},
			revolving_hearts: {
				unicode: "1f49e",
				unicode_alt: "",
				code_decimal: "&#128158;",
				name: "revolving hearts",
				shortname: ":revolving_hearts:",
				category: "symbols",
				emoji_order: "1298",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			heart_decoration: {
				unicode: "1f49f",
				unicode_alt: "",
				code_decimal: "&#128159;",
				name: "heart decoration",
				shortname: ":heart_decoration:",
				category: "symbols",
				emoji_order: "1299",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			heart_exclamation: {
				unicode: "2763",
				unicode_alt: "2763-fe0f",
				code_decimal: "&#10083;",
				name: "heavy heart exclamation mark ornament",
				shortname: ":heart_exclamation:",
				category: "symbols",
				emoji_order: "1300",
				aliases: [":heavy_heart_exclamation_mark_ornament:"],
				aliases_ascii: [],
				keywords: ["love", "symbol"]
			},
			love_letter: {
				unicode: "1f48c",
				unicode_alt: "",
				code_decimal: "&#128140;",
				name: "love letter",
				shortname: ":love_letter:",
				category: "objects",
				emoji_order: "1301",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			zzz: {
				unicode: "1f4a4",
				unicode_alt: "",
				code_decimal: "&#128164;",
				name: "sleeping symbol",
				shortname: ":zzz:",
				category: "people",
				emoji_order: "1302",
				aliases: [],
				aliases_ascii: [],
				keywords: ["tired", "goodnight"]
			},
			anger: {
				unicode: "1f4a2",
				unicode_alt: "",
				code_decimal: "&#128162;",
				name: "anger symbol",
				shortname: ":anger:",
				category: "symbols",
				emoji_order: "1303",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			bomb: {
				unicode: "1f4a3",
				unicode_alt: "",
				code_decimal: "&#128163;",
				name: "bomb",
				shortname: ":bomb:",
				category: "objects",
				emoji_order: "1304",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "weapon", "dead", "blast"]
			},
			boom: {
				unicode: "1f4a5",
				unicode_alt: "",
				code_decimal: "&#128165;",
				name: "collision symbol",
				shortname: ":boom:",
				category: "symbols",
				emoji_order: "1305",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "blast"]
			},
			sweat_drops: {
				unicode: "1f4a6",
				unicode_alt: "",
				code_decimal: "&#128166;",
				name: "splashing sweat symbol",
				shortname: ":sweat_drops:",
				category: "nature",
				emoji_order: "1306",
				aliases: [],
				aliases_ascii: [],
				keywords: ["rain", "stressed", "sweat"]
			},
			dash: {
				unicode: "1f4a8",
				unicode_alt: "",
				code_decimal: "&#128168;",
				name: "dash symbol",
				shortname: ":dash:",
				category: "nature",
				emoji_order: "1307",
				aliases: [],
				aliases_ascii: [],
				keywords: ["cloud", "cold", "smoking"]
			},
			dizzy: {
				unicode: "1f4ab",
				unicode_alt: "",
				code_decimal: "&#128171;",
				name: "dizzy symbol",
				shortname: ":dizzy:",
				category: "symbols",
				emoji_order: "1308",
				aliases: [],
				aliases_ascii: [],
				keywords: ["star",
					"symbol"]
			},
			speech_balloon: {
				unicode: "1f4ac",
				unicode_alt: "",
				code_decimal: "&#128172;",
				name: "speech balloon",
				shortname: ":speech_balloon:",
				category: "symbols",
				emoji_order: "1309",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "free speech"]
			},
			speech_left: {
				unicode: "1f5e8",
				unicode_alt: "1f5e8-fe0f",
				code_decimal: "&#128488;",
				name: "left speech bubble",
				shortname: ":speech_left:",
				category: "symbols",
				emoji_order: "1310",
				aliases: [":left_speech_bubble:"],
				aliases_ascii: [],
				keywords: []
			},
			anger_right: {
				unicode: "1f5ef",
				unicode_alt: "1f5ef-fe0f",
				code_decimal: "&#128495;",
				name: "right anger bubble",
				shortname: ":anger_right:",
				category: "symbols",
				emoji_order: "1311",
				aliases: [":right_anger_bubble:"],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			thought_balloon: {
				unicode: "1f4ad",
				unicode_alt: "",
				code_decimal: "&#128173;",
				name: "thought balloon",
				shortname: ":thought_balloon:",
				category: "symbols",
				emoji_order: "1312",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			hole: {
				unicode: "1f573",
				unicode_alt: "1f573-fe0f",
				code_decimal: "&#128371;",
				name: "hole",
				shortname: ":hole:",
				category: "objects",
				emoji_order: "1313",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			eyeglasses: {
				unicode: "1f453",
				unicode_alt: "",
				code_decimal: "&#128083;",
				name: "eyeglasses",
				shortname: ":eyeglasses:",
				category: "people",
				emoji_order: "1314",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fashion", "glasses", "accessories"]
			},
			dark_sunglasses: {
				unicode: "1f576",
				unicode_alt: "1f576-fe0f",
				code_decimal: "&#128374;",
				name: "dark sunglasses",
				shortname: ":dark_sunglasses:",
				category: "people",
				emoji_order: "1315",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fashion", "glasses", "accessories"]
			},
			necktie: {
				unicode: "1f454",
				unicode_alt: "",
				code_decimal: "&#128084;",
				name: "necktie",
				shortname: ":necktie:",
				category: "people",
				emoji_order: "1316",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fashion"]
			},
			shirt: {
				unicode: "1f455",
				unicode_alt: "",
				code_decimal: "&#128085;",
				name: "t-shirt",
				shortname: ":shirt:",
				category: "people",
				emoji_order: "1317",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fashion"]
			},
			jeans: {
				unicode: "1f456", unicode_alt: "", code_decimal: "&#128086;", name: "jeans", shortname: ":jeans:",
				category: "people", emoji_order: "1318", aliases: [], aliases_ascii: [], keywords: ["fashion"]
			},
			dress: {
				unicode: "1f457",
				unicode_alt: "",
				code_decimal: "&#128087;",
				name: "dress",
				shortname: ":dress:",
				category: "people",
				emoji_order: "1319",
				aliases: [],
				aliases_ascii: [],
				keywords: ["women", "fashion", "sexy", "girls night"]
			},
			kimono: {
				unicode: "1f458",
				unicode_alt: "",
				code_decimal: "&#128088;",
				name: "kimono",
				shortname: ":kimono:",
				category: "people",
				emoji_order: "1320",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fashion"]
			},
			bikini: {
				unicode: "1f459",
				unicode_alt: "",
				code_decimal: "&#128089;",
				name: "bikini",
				shortname: ":bikini:",
				category: "people",
				emoji_order: "1321",
				aliases: [],
				aliases_ascii: [],
				keywords: "women fashion sexy vacation tropical swim".split(" ")
			},
			womans_clothes: {
				unicode: "1f45a",
				unicode_alt: "",
				code_decimal: "&#128090;",
				name: "womans clothes",
				shortname: ":womans_clothes:",
				category: "people",
				emoji_order: "1322",
				aliases: [],
				aliases_ascii: [],
				keywords: ["women", "fashion"]
			},
			purse: {
				unicode: "1f45b",
				unicode_alt: "",
				code_decimal: "&#128091;",
				name: "purse",
				shortname: ":purse:",
				category: "people",
				emoji_order: "1323",
				aliases: [],
				aliases_ascii: [],
				keywords: ["bag", "women", "fashion", "accessories", "money"]
			},
			handbag: {
				unicode: "1f45c",
				unicode_alt: "",
				code_decimal: "&#128092;",
				name: "handbag",
				shortname: ":handbag:",
				category: "people",
				emoji_order: "1324",
				aliases: [],
				aliases_ascii: [],
				keywords: ["bag", "women", "fashion", "vacation", "accessories"]
			},
			pouch: {
				unicode: "1f45d",
				unicode_alt: "",
				code_decimal: "&#128093;",
				name: "pouch",
				shortname: ":pouch:",
				category: "people",
				emoji_order: "1325",
				aliases: [],
				aliases_ascii: [],
				keywords: ["bag", "women", "fashion", "accessories"]
			},
			shopping_bags: {
				unicode: "1f6cd",
				unicode_alt: "1f6cd-fe0f",
				code_decimal: "&#128717;",
				name: "shopping bags",
				shortname: ":shopping_bags:",
				category: "objects",
				emoji_order: "1326",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "birthday", "parties"]
			},
			school_satchel: {
				unicode: "1f392",
				unicode_alt: "",
				code_decimal: "&#127890;",
				name: "school satchel",
				shortname: ":school_satchel:",
				category: "people",
				emoji_order: "1327",
				aliases: [],
				aliases_ascii: [],
				keywords: ["bag", "fashion",
					"office", "vacation", "accessories"]
			},
			mans_shoe: {
				unicode: "1f45e",
				unicode_alt: "",
				code_decimal: "&#128094;",
				name: "mans shoe",
				shortname: ":mans_shoe:",
				category: "people",
				emoji_order: "1328",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fashion", "shoe", "accessories"]
			},
			athletic_shoe: {
				unicode: "1f45f",
				unicode_alt: "",
				code_decimal: "&#128095;",
				name: "athletic shoe",
				shortname: ":athletic_shoe:",
				category: "people",
				emoji_order: "1329",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fashion", "shoe", "accessories", "boys night"]
			},
			high_heel: {
				unicode: "1f460",
				unicode_alt: "",
				code_decimal: "&#128096;",
				name: "high-heeled shoe",
				shortname: ":high_heel:",
				category: "people",
				emoji_order: "1330",
				aliases: [],
				aliases_ascii: [],
				keywords: "women;fashion;shoe;sexy;accessories;girls night".split(";")
			},
			sandal: {
				unicode: "1f461",
				unicode_alt: "",
				code_decimal: "&#128097;",
				name: "womans sandal",
				shortname: ":sandal:",
				category: "people",
				emoji_order: "1331",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fashion", "shoe", "accessories"]
			},
			boot: {
				unicode: "1f462",
				unicode_alt: "",
				code_decimal: "&#128098;",
				name: "womans boots",
				shortname: ":boot:",
				category: "people",
				emoji_order: "1332",
				aliases: [],
				aliases_ascii: [],
				keywords: ["women", "fashion", "shoe", "sexy", "accessories"]
			},
			crown: {
				unicode: "1f451",
				unicode_alt: "",
				code_decimal: "&#128081;",
				name: "crown",
				shortname: ":crown:",
				category: "people",
				emoji_order: "1333",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "gem", "accessories"]
			},
			womans_hat: {
				unicode: "1f452",
				unicode_alt: "",
				code_decimal: "&#128082;",
				name: "womans hat",
				shortname: ":womans_hat:",
				category: "people",
				emoji_order: "1334",
				aliases: [],
				aliases_ascii: [],
				keywords: ["women", "fashion", "accessories"]
			},
			tophat: {
				unicode: "1f3a9",
				unicode_alt: "",
				code_decimal: "&#127913;",
				name: "top hat",
				shortname: ":tophat:",
				category: "people",
				emoji_order: "1335",
				aliases: [],
				aliases_ascii: [],
				keywords: ["hat", "fashion", "accessories"]
			},
			mortar_board: {
				unicode: "1f393",
				unicode_alt: "",
				code_decimal: "&#127891;",
				name: "graduation cap",
				shortname: ":mortar_board:",
				category: "people",
				emoji_order: "1336",
				aliases: [],
				aliases_ascii: [],
				keywords: ["hat", "office", "accessories"]
			},
			helmet_with_cross: {
				unicode: "26d1",
				unicode_alt: "26d1-fe0f",
				code_decimal: "&#9937;",
				name: "helmet with white cross",
				shortname: ":helmet_with_cross:",
				category: "people",
				emoji_order: "1337",
				aliases: [":helmet_with_white_cross:"],
				aliases_ascii: [],
				keywords: ["object", "hat", "accessories", "job"]
			},
			prayer_beads: {
				unicode: "1f4ff",
				unicode_alt: "",
				code_decimal: "&#128255;",
				name: "prayer beads",
				shortname: ":prayer_beads:",
				category: "objects",
				emoji_order: "1338",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "rosary"]
			},
			lipstick: {
				unicode: "1f484",
				unicode_alt: "",
				code_decimal: "&#128132;",
				name: "lipstick",
				shortname: ":lipstick:",
				category: "people",
				emoji_order: "1339",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "women", "fashion", "sexy", "lip"]
			},
			ring: {
				unicode: "1f48d",
				unicode_alt: "",
				code_decimal: "&#128141;",
				name: "ring",
				shortname: ":ring:",
				category: "people",
				emoji_order: "1340",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wedding", "object", "fashion", "gem", "accessories"]
			},
			gem: {
				unicode: "1f48e",
				unicode_alt: "",
				code_decimal: "&#128142;",
				name: "gem stone",
				shortname: ":gem:",
				category: "objects",
				emoji_order: "1341",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "gem"]
			},
			monkey_face: {
				unicode: "1f435",
				unicode_alt: "",
				code_decimal: "&#128053;",
				name: "monkey face",
				shortname: ":monkey_face:",
				category: "nature",
				emoji_order: "1342",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			monkey: {
				unicode: "1f412",
				unicode_alt: "",
				code_decimal: "&#128018;",
				name: "monkey",
				shortname: ":monkey:",
				category: "nature",
				emoji_order: "1343",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			gorilla: {
				unicode: "1f98d",
				unicode_alt: "",
				code_decimal: "&#129421;",
				name: "gorilla",
				shortname: ":gorilla:",
				category: "nature",
				emoji_order: "1344",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			dog: {
				unicode: "1f436",
				unicode_alt: "",
				code_decimal: "&#128054;",
				name: "dog face",
				shortname: ":dog:",
				category: "nature",
				emoji_order: "1345",
				aliases: [],
				aliases_ascii: [],
				keywords: ["dog", "pug", "animal"]
			},
			dog2: {
				unicode: "1f415",
				unicode_alt: "",
				code_decimal: "&#128021;",
				name: "dog",
				shortname: ":dog2:",
				category: "nature",
				emoji_order: "1346",
				aliases: [],
				aliases_ascii: [],
				keywords: ["dog",
					"pug", "animal"]
			},
			poodle: {
				unicode: "1f429",
				unicode_alt: "",
				code_decimal: "&#128041;",
				name: "poodle",
				shortname: ":poodle:",
				category: "nature",
				emoji_order: "1347",
				aliases: [],
				aliases_ascii: [],
				keywords: ["dog", "animal"]
			},
			wolf: {
				unicode: "1f43a",
				unicode_alt: "",
				code_decimal: "&#128058;",
				name: "wolf face",
				shortname: ":wolf:",
				category: "nature",
				emoji_order: "1348",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "roar", "animal"]
			},
			fox: {
				unicode: "1f98a", unicode_alt: "", code_decimal: "&#129418;", name: "fox face", shortname: ":fox:",
				category: "nature", emoji_order: "1349", aliases: [":fox_face:"], aliases_ascii: [], keywords: []
			},
			cat: {
				unicode: "1f431",
				unicode_alt: "",
				code_decimal: "&#128049;",
				name: "cat face",
				shortname: ":cat:",
				category: "nature",
				emoji_order: "1350",
				aliases: [],
				aliases_ascii: [],
				keywords: ["halloween", "vagina", "cat", "animal"]
			},
			cat2: {
				unicode: "1f408",
				unicode_alt: "",
				code_decimal: "&#128008;",
				name: "cat",
				shortname: ":cat2:",
				category: "nature",
				emoji_order: "1351",
				aliases: [],
				aliases_ascii: [],
				keywords: ["halloween", "cat", "animal"]
			},
			lion_face: {
				unicode: "1f981",
				unicode_alt: "",
				code_decimal: "&#129409;",
				name: "lion face",
				shortname: ":lion_face:",
				category: "nature",
				emoji_order: "1352",
				aliases: [":lion:"],
				aliases_ascii: [],
				keywords: ["wildlife", "roar", "cat", "animal"]
			},
			tiger: {
				unicode: "1f42f",
				unicode_alt: "",
				code_decimal: "&#128047;",
				name: "tiger face",
				shortname: ":tiger:",
				category: "nature",
				emoji_order: "1353",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "roar", "cat", "animal"]
			},
			tiger2: {
				unicode: "1f405",
				unicode_alt: "",
				code_decimal: "&#128005;",
				name: "tiger",
				shortname: ":tiger2:",
				category: "nature",
				emoji_order: "1354",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "roar", "animal"]
			},
			leopard: {
				unicode: "1f406",
				unicode_alt: "",
				code_decimal: "&#128006;",
				name: "leopard",
				shortname: ":leopard:",
				category: "nature",
				emoji_order: "1355",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "roar", "animal"]
			},
			horse: {
				unicode: "1f434",
				unicode_alt: "",
				code_decimal: "&#128052;",
				name: "horse face",
				shortname: ":horse:",
				category: "nature",
				emoji_order: "1356",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			racehorse: {
				unicode: "1f40e",
				unicode_alt: "",
				code_decimal: "&#128014;",
				name: "horse",
				shortname: ":racehorse:",
				category: "nature",
				emoji_order: "1357",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			deer: {
				unicode: "1f98c",
				unicode_alt: "",
				code_decimal: "&#129420;",
				name: "deer",
				shortname: ":deer:",
				category: "nature",
				emoji_order: "1358",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			unicorn: {
				unicode: "1f984",
				unicode_alt: "",
				code_decimal: "&#129412;",
				name: "unicorn face",
				shortname: ":unicorn:",
				category: "nature",
				emoji_order: "1359",
				aliases: [":unicorn_face:"],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			cow: {
				unicode: "1f42e",
				unicode_alt: "",
				code_decimal: "&#128046;",
				name: "cow face",
				shortname: ":cow:",
				category: "nature",
				emoji_order: "1360",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			ox: {
				unicode: "1f402",
				unicode_alt: "",
				code_decimal: "&#128002;",
				name: "ox",
				shortname: ":ox:",
				category: "nature",
				emoji_order: "1361",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			water_buffalo: {
				unicode: "1f403",
				unicode_alt: "",
				code_decimal: "&#128003;",
				name: "water buffalo",
				shortname: ":water_buffalo:",
				category: "nature",
				emoji_order: "1362",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			cow2: {
				unicode: "1f404",
				unicode_alt: "",
				code_decimal: "&#128004;",
				name: "cow",
				shortname: ":cow2:",
				category: "nature",
				emoji_order: "1363",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			pig: {
				unicode: "1f437",
				unicode_alt: "",
				code_decimal: "&#128055;",
				name: "pig face",
				shortname: ":pig:",
				category: "nature",
				emoji_order: "1364",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			pig2: {
				unicode: "1f416",
				unicode_alt: "",
				code_decimal: "&#128022;",
				name: "pig",
				shortname: ":pig2:",
				category: "nature",
				emoji_order: "1365",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			boar: {
				unicode: "1f417",
				unicode_alt: "",
				code_decimal: "&#128023;",
				name: "boar",
				shortname: ":boar:",
				category: "nature",
				emoji_order: "1366",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			pig_nose: {
				unicode: "1f43d",
				unicode_alt: "",
				code_decimal: "&#128061;",
				name: "pig nose",
				shortname: ":pig_nose:",
				category: "nature",
				emoji_order: "1367",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			ram: {
				unicode: "1f40f",
				unicode_alt: "",
				code_decimal: "&#128015;",
				name: "ram",
				shortname: ":ram:",
				category: "nature",
				emoji_order: "1368",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			sheep: {
				unicode: "1f411",
				unicode_alt: "",
				code_decimal: "&#128017;",
				name: "sheep",
				shortname: ":sheep:",
				category: "nature",
				emoji_order: "1369",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			goat: {
				unicode: "1f410",
				unicode_alt: "",
				code_decimal: "&#128016;",
				name: "goat",
				shortname: ":goat:",
				category: "nature",
				emoji_order: "1370",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			dromedary_camel: {
				unicode: "1f42a",
				unicode_alt: "",
				code_decimal: "&#128042;",
				name: "dromedary camel",
				shortname: ":dromedary_camel:",
				category: "nature",
				emoji_order: "1371",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			camel: {
				unicode: "1f42b",
				unicode_alt: "",
				code_decimal: "&#128043;",
				name: "bactrian camel",
				shortname: ":camel:",
				category: "nature",
				emoji_order: "1372",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal", "hump day"]
			},
			elephant: {
				unicode: "1f418",
				unicode_alt: "",
				code_decimal: "&#128024;",
				name: "elephant",
				shortname: ":elephant:",
				category: "nature",
				emoji_order: "1373",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			rhino: {
				unicode: "1f98f",
				unicode_alt: "",
				code_decimal: "&#129423;",
				name: "rhinoceros",
				shortname: ":rhino:",
				category: "nature",
				emoji_order: "1374",
				aliases: [":rhinoceros:"],
				aliases_ascii: [],
				keywords: []
			},
			mouse: {
				unicode: "1f42d",
				unicode_alt: "",
				code_decimal: "&#128045;",
				name: "mouse face",
				shortname: ":mouse:",
				category: "nature",
				emoji_order: "1375",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			mouse2: {
				unicode: "1f401",
				unicode_alt: "",
				code_decimal: "&#128001;",
				name: "mouse",
				shortname: ":mouse2:",
				category: "nature",
				emoji_order: "1376",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			rat: {
				unicode: "1f400",
				unicode_alt: "",
				code_decimal: "&#128000;",
				name: "rat",
				shortname: ":rat:",
				category: "nature",
				emoji_order: "1377",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			hamster: {
				unicode: "1f439",
				unicode_alt: "",
				code_decimal: "&#128057;",
				name: "hamster face",
				shortname: ":hamster:",
				category: "nature",
				emoji_order: "1378",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			rabbit: {
				unicode: "1f430",
				unicode_alt: "",
				code_decimal: "&#128048;",
				name: "rabbit face",
				shortname: ":rabbit:",
				category: "nature",
				emoji_order: "1379",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			rabbit2: {
				unicode: "1f407",
				unicode_alt: "",
				code_decimal: "&#128007;",
				name: "rabbit",
				shortname: ":rabbit2:",
				category: "nature",
				emoji_order: "1380",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			chipmunk: {
				unicode: "1f43f",
				unicode_alt: "1f43f-fe0f",
				code_decimal: "&#128063;",
				name: "chipmunk",
				shortname: ":chipmunk:",
				category: "nature",
				emoji_order: "1381",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			bat: {
				unicode: "1f987",
				unicode_alt: "",
				code_decimal: "&#129415;",
				name: "bat",
				shortname: ":bat:",
				category: "nature",
				emoji_order: "1382",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bear: {
				unicode: "1f43b",
				unicode_alt: "",
				code_decimal: "&#128059;",
				name: "bear face",
				shortname: ":bear:",
				category: "nature",
				emoji_order: "1383",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "roar", "animal"]
			},
			koala: {
				unicode: "1f428",
				unicode_alt: "",
				code_decimal: "&#128040;",
				name: "koala",
				shortname: ":koala:",
				category: "nature",
				emoji_order: "1384",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			panda_face: {
				unicode: "1f43c",
				unicode_alt: "",
				code_decimal: "&#128060;",
				name: "panda face",
				shortname: ":panda_face:",
				category: "nature",
				emoji_order: "1385",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "roar", "animal"]
			},
			feet: {
				unicode: "1f43e",
				unicode_alt: "",
				code_decimal: "&#128062;",
				name: "paw prints",
				shortname: ":feet:",
				category: "nature",
				emoji_order: "1386",
				aliases: [":paw_prints:"],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			turkey: {
				unicode: "1f983",
				unicode_alt: "",
				code_decimal: "&#129411;",
				name: "turkey",
				shortname: ":turkey:",
				category: "nature",
				emoji_order: "1387",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			chicken: {
				unicode: "1f414",
				unicode_alt: "",
				code_decimal: "&#128020;",
				name: "chicken",
				shortname: ":chicken:",
				category: "nature",
				emoji_order: "1388",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal", "chicken"]
			},
			rooster: {
				unicode: "1f413",
				unicode_alt: "",
				code_decimal: "&#128019;",
				name: "rooster",
				shortname: ":rooster:",
				category: "nature",
				emoji_order: "1389",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			hatching_chick: {
				unicode: "1f423",
				unicode_alt: "",
				code_decimal: "&#128035;",
				name: "hatching chick",
				shortname: ":hatching_chick:",
				category: "nature",
				emoji_order: "1390",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal", "chicken"]
			},
			baby_chick: {
				unicode: "1f424",
				unicode_alt: "",
				code_decimal: "&#128036;",
				name: "baby chick",
				shortname: ":baby_chick:",
				category: "nature",
				emoji_order: "1391",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal", "chicken"]
			},
			hatched_chick: {
				unicode: "1f425",
				unicode_alt: "",
				code_decimal: "&#128037;",
				name: "front-facing baby chick",
				shortname: ":hatched_chick:",
				category: "nature",
				emoji_order: "1392",
				aliases: [],
				aliases_ascii: [],
				keywords: ["animal", "chicken"]
			},
			bird: {
				unicode: "1f426",
				unicode_alt: "",
				code_decimal: "&#128038;",
				name: "bird",
				shortname: ":bird:",
				category: "nature",
				emoji_order: "1393",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			penguin: {
				unicode: "1f427",
				unicode_alt: "",
				code_decimal: "&#128039;",
				name: "penguin",
				shortname: ":penguin:",
				category: "nature",
				emoji_order: "1394",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			dove: {
				unicode: "1f54a",
				unicode_alt: "1f54a-fe0f",
				code_decimal: "&#128330;",
				name: "dove of peace",
				shortname: ":dove:",
				category: "nature",
				emoji_order: "1395",
				aliases: [":dove_of_peace:"],
				aliases_ascii: [],
				keywords: ["animal"]
			},
			eagle: {
				unicode: "1f985",
				unicode_alt: "",
				code_decimal: "&#129413;",
				name: "eagle",
				shortname: ":eagle:",
				category: "nature",
				emoji_order: "1396",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			duck: {
				unicode: "1f986",
				unicode_alt: "",
				code_decimal: "&#129414;",
				name: "duck",
				shortname: ":duck:",
				category: "nature",
				emoji_order: "1397",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			owl: {
				unicode: "1f989",
				unicode_alt: "",
				code_decimal: "&#129417;",
				name: "owl",
				shortname: ":owl:",
				category: "nature",
				emoji_order: "1398",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			frog: {
				unicode: "1f438",
				unicode_alt: "",
				code_decimal: "&#128056;",
				name: "frog face",
				shortname: ":frog:",
				category: "nature",
				emoji_order: "1399",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			crocodile: {
				unicode: "1f40a",
				unicode_alt: "",
				code_decimal: "&#128010;",
				name: "crocodile",
				shortname: ":crocodile:",
				category: "nature",
				emoji_order: "1400",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "reptile", "animal"]
			},
			turtle: {
				unicode: "1f422",
				unicode_alt: "",
				code_decimal: "&#128034;",
				name: "turtle",
				shortname: ":turtle:",
				category: "nature",
				emoji_order: "1401",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "reptile", "animal"]
			},
			lizard: {
				unicode: "1f98e",
				unicode_alt: "",
				code_decimal: "&#129422;",
				name: "lizard",
				shortname: ":lizard:",
				category: "nature",
				emoji_order: "1402",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			snake: {
				unicode: "1f40d",
				unicode_alt: "",
				code_decimal: "&#128013;",
				name: "snake",
				shortname: ":snake:",
				category: "nature",
				emoji_order: "1403",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "reptile", "animal", "creationism"]
			},
			dragon_face: {
				unicode: "1f432",
				unicode_alt: "",
				code_decimal: "&#128050;",
				name: "dragon face",
				shortname: ":dragon_face:",
				category: "nature",
				emoji_order: "1404",
				aliases: [],
				aliases_ascii: [],
				keywords: ["roar", "monster", "reptile", "animal"]
			},
			dragon: {
				unicode: "1f409",
				unicode_alt: "",
				code_decimal: "&#128009;",
				name: "dragon",
				shortname: ":dragon:",
				category: "nature",
				emoji_order: "1405",
				aliases: [],
				aliases_ascii: [],
				keywords: ["roar", "reptile", "animal"]
			},
			whale: {
				unicode: "1f433",
				unicode_alt: "",
				code_decimal: "&#128051;",
				name: "spouting whale",
				shortname: ":whale:",
				category: "nature",
				emoji_order: "1406",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "tropical", "whales", "animal"]
			},
			whale2: {
				unicode: "1f40b",
				unicode_alt: "",
				code_decimal: "&#128011;",
				name: "whale",
				shortname: ":whale2:",
				category: "nature",
				emoji_order: "1407",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "tropical", "whales", "animal"]
			},
			dolphin: {
				unicode: "1f42c",
				unicode_alt: "",
				code_decimal: "&#128044;",
				name: "dolphin",
				shortname: ":dolphin:",
				category: "nature",
				emoji_order: "1408",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife",
					"tropical", "animal"]
			},
			fish: {
				unicode: "1f41f",
				unicode_alt: "",
				code_decimal: "&#128031;",
				name: "fish",
				shortname: ":fish:",
				category: "nature",
				emoji_order: "1409",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			tropical_fish: {
				unicode: "1f420",
				unicode_alt: "",
				code_decimal: "&#128032;",
				name: "tropical fish",
				shortname: ":tropical_fish:",
				category: "nature",
				emoji_order: "1410",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			blowfish: {
				unicode: "1f421",
				unicode_alt: "",
				code_decimal: "&#128033;",
				name: "blowfish",
				shortname: ":blowfish:",
				category: "nature",
				emoji_order: "1411",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			shark: {
				unicode: "1f988",
				unicode_alt: "",
				code_decimal: "&#129416;",
				name: "shark",
				shortname: ":shark:",
				category: "nature",
				emoji_order: "1412",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			octopus: {
				unicode: "1f419",
				unicode_alt: "",
				code_decimal: "&#128025;",
				name: "octopus",
				shortname: ":octopus:",
				category: "nature",
				emoji_order: "1413",
				aliases: [],
				aliases_ascii: [],
				keywords: ["wildlife", "animal"]
			},
			shell: {
				unicode: "1f41a",
				unicode_alt: "",
				code_decimal: "&#128026;",
				name: "spiral shell",
				shortname: ":shell:",
				category: "nature",
				emoji_order: "1414",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			crab: {
				unicode: "1f980",
				unicode_alt: "",
				code_decimal: "&#129408;",
				name: "crab",
				shortname: ":crab:",
				category: "nature",
				emoji_order: "1415",
				aliases: [],
				aliases_ascii: [],
				keywords: ["tropical", "animal"]
			},
			shrimp: {
				unicode: "1f990",
				unicode_alt: "",
				code_decimal: "&#129424;",
				name: "shrimp",
				shortname: ":shrimp:",
				category: "nature",
				emoji_order: "1416",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			squid: {
				unicode: "1f991",
				unicode_alt: "",
				code_decimal: "&#129425;",
				name: "squid",
				shortname: ":squid:",
				category: "nature",
				emoji_order: "1417",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			butterfly: {
				unicode: "1f98b",
				unicode_alt: "",
				code_decimal: "&#129419;",
				name: "butterfly",
				shortname: ":butterfly:",
				category: "nature",
				emoji_order: "1418",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			snail: {
				unicode: "1f40c",
				unicode_alt: "",
				code_decimal: "&#128012;",
				name: "snail",
				shortname: ":snail:",
				category: "nature",
				emoji_order: "1419",
				aliases: [],
				aliases_ascii: [],
				keywords: ["insects", "animal"]
			},
			bug: {
				unicode: "1f41b",
				unicode_alt: "",
				code_decimal: "&#128027;",
				name: "bug",
				shortname: ":bug:",
				category: "nature",
				emoji_order: "1420",
				aliases: [],
				aliases_ascii: [],
				keywords: ["insects", "animal"]
			},
			ant: {
				unicode: "1f41c",
				unicode_alt: "",
				code_decimal: "&#128028;",
				name: "ant",
				shortname: ":ant:",
				category: "nature",
				emoji_order: "1421",
				aliases: [],
				aliases_ascii: [],
				keywords: ["insects", "animal"]
			},
			bee: {
				unicode: "1f41d",
				unicode_alt: "",
				code_decimal: "&#128029;",
				name: "honeybee",
				shortname: ":bee:",
				category: "nature",
				emoji_order: "1422",
				aliases: [],
				aliases_ascii: [],
				keywords: ["insects", "animal"]
			},
			beetle: {
				unicode: "1f41e",
				unicode_alt: "",
				code_decimal: "&#128030;",
				name: "lady beetle",
				shortname: ":beetle:",
				category: "nature",
				emoji_order: "1423",
				aliases: [],
				aliases_ascii: [],
				keywords: ["insects", "animal"]
			},
			spider: {
				unicode: "1f577",
				unicode_alt: "1f577-fe0f",
				code_decimal: "&#128375;",
				name: "spider",
				shortname: ":spider:",
				category: "nature",
				emoji_order: "1424",
				aliases: [],
				aliases_ascii: [],
				keywords: ["insects",
					"halloween", "animal"]
			},
			spider_web: {
				unicode: "1f578",
				unicode_alt: "1f578-fe0f",
				code_decimal: "&#128376;",
				name: "spider web",
				shortname: ":spider_web:",
				category: "nature",
				emoji_order: "1425",
				aliases: [],
				aliases_ascii: [],
				keywords: ["halloween"]
			},
			scorpion: {
				unicode: "1f982",
				unicode_alt: "",
				code_decimal: "&#129410;",
				name: "scorpion",
				shortname: ":scorpion:",
				category: "nature",
				emoji_order: "1426",
				aliases: [],
				aliases_ascii: [],
				keywords: ["insects", "reptile", "animal"]
			},
			bouquet: {
				unicode: "1f490",
				unicode_alt: "",
				code_decimal: "&#128144;",
				name: "bouquet",
				shortname: ":bouquet:",
				category: "nature",
				emoji_order: "1427",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "flower", "plant", "rip", "condolence"]
			},
			cherry_blossom: {
				unicode: "1f338",
				unicode_alt: "",
				code_decimal: "&#127800;",
				name: "cherry blossom",
				shortname: ":cherry_blossom:",
				category: "nature",
				emoji_order: "1428",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "flower", "plant", "tropical"]
			},
			white_flower: {
				unicode: "1f4ae",
				unicode_alt: "",
				code_decimal: "&#128174;",
				name: "white flower",
				shortname: ":white_flower:",
				category: "symbols",
				emoji_order: "1429",
				aliases: [],
				aliases_ascii: [],
				keywords: ["flower", "symbol"]
			},
			rosette: {
				unicode: "1f3f5",
				unicode_alt: "1f3f5-fe0f",
				code_decimal: "&#127989;",
				name: "rosette",
				shortname: ":rosette:",
				category: "nature",
				emoji_order: "1430",
				aliases: [],
				aliases_ascii: [],
				keywords: ["tropical"]
			},
			rose: {
				unicode: "1f339",
				unicode_alt: "",
				code_decimal: "&#127801;",
				name: "rose",
				shortname: ":rose:",
				category: "nature",
				emoji_order: "1431",
				aliases: [],
				aliases_ascii: [],
				keywords: "nature flower plant rip condolence beautiful".split(" ")
			},
			wilted_rose: {
				unicode: "1f940",
				unicode_alt: "",
				code_decimal: "&#129344;",
				name: "wilted flower",
				shortname: ":wilted_rose:",
				category: "nature",
				emoji_order: "1432",
				aliases: [":wilted_flower:"],
				aliases_ascii: [],
				keywords: []
			},
			hibiscus: {
				unicode: "1f33a",
				unicode_alt: "",
				code_decimal: "&#127802;",
				name: "hibiscus",
				shortname: ":hibiscus:",
				category: "nature",
				emoji_order: "1433",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "flower", "plant", "tropical"]
			},
			sunflower: {
				unicode: "1f33b",
				unicode_alt: "",
				code_decimal: "&#127803;",
				name: "sunflower",
				shortname: ":sunflower:",
				category: "nature",
				emoji_order: "1434",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "flower", "plant"]
			},
			blossom: {
				unicode: "1f33c",
				unicode_alt: "",
				code_decimal: "&#127804;",
				name: "blossom",
				shortname: ":blossom:",
				category: "nature",
				emoji_order: "1435",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "flower", "plant"]
			},
			tulip: {
				unicode: "1f337",
				unicode_alt: "",
				code_decimal: "&#127799;",
				name: "tulip",
				shortname: ":tulip:",
				category: "nature",
				emoji_order: "1436",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature",
					"flower", "plant", "vagina", "girls night"]
			},
			seedling: {
				unicode: "1f331",
				unicode_alt: "",
				code_decimal: "&#127793;",
				name: "seedling",
				shortname: ":seedling:",
				category: "nature",
				emoji_order: "1437",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "leaf"]
			},
			evergreen_tree: {
				unicode: "1f332",
				unicode_alt: "",
				code_decimal: "&#127794;",
				name: "evergreen tree",
				shortname: ":evergreen_tree:",
				category: "nature",
				emoji_order: "1438",
				aliases: [],
				aliases_ascii: [],
				keywords: "nature plant holidays christmas camp trees".split(" ")
			},
			deciduous_tree: {
				unicode: "1f333",
				unicode_alt: "",
				code_decimal: "&#127795;",
				name: "deciduous tree",
				shortname: ":deciduous_tree:",
				category: "nature",
				emoji_order: "1439",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "camp", "trees"]
			},
			palm_tree: {
				unicode: "1f334",
				unicode_alt: "",
				code_decimal: "&#127796;",
				name: "palm tree",
				shortname: ":palm_tree:",
				category: "nature",
				emoji_order: "1440",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "tropical", "trees"]
			},
			cactus: {
				unicode: "1f335",
				unicode_alt: "",
				code_decimal: "&#127797;",
				name: "cactus",
				shortname: ":cactus:",
				category: "nature",
				emoji_order: "1441",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "trees"]
			},
			ear_of_rice: {
				unicode: "1f33e",
				unicode_alt: "",
				code_decimal: "&#127806;",
				name: "ear of rice",
				shortname: ":ear_of_rice:",
				category: "nature",
				emoji_order: "1442",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "leaf"]
			},
			herb: {
				unicode: "1f33f",
				unicode_alt: "",
				code_decimal: "&#127807;",
				name: "herb",
				shortname: ":herb:",
				category: "nature",
				emoji_order: "1443",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "leaf"]
			},
			shamrock: {
				unicode: "2618",
				unicode_alt: "2618-fe0f",
				code_decimal: "&#9752;",
				name: "shamrock",
				shortname: ":shamrock:",
				category: "nature",
				emoji_order: "1444",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "luck", "leaf"]
			},
			four_leaf_clover: {
				unicode: "1f340",
				unicode_alt: "",
				code_decimal: "&#127808;",
				name: "four leaf clover",
				shortname: ":four_leaf_clover:",
				category: "nature",
				emoji_order: "1445",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "luck", "leaf", "sol"]
			},
			maple_leaf: {
				unicode: "1f341",
				unicode_alt: "",
				code_decimal: "&#127809;",
				name: "maple leaf",
				shortname: ":maple_leaf:",
				category: "nature",
				emoji_order: "1446",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "leaf"]
			},
			fallen_leaf: {
				unicode: "1f342",
				unicode_alt: "",
				code_decimal: "&#127810;",
				name: "fallen leaf",
				shortname: ":fallen_leaf:",
				category: "nature",
				emoji_order: "1447",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "leaf"]
			},
			leaves: {
				unicode: "1f343",
				unicode_alt: "",
				code_decimal: "&#127811;",
				name: "leaf fluttering in wind",
				shortname: ":leaves:",
				category: "nature",
				emoji_order: "1448",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "leaf"]
			},
			grapes: {
				unicode: "1f347",
				unicode_alt: "",
				code_decimal: "&#127815;",
				name: "grapes",
				shortname: ":grapes:",
				category: "food",
				emoji_order: "1449",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food"]
			},
			melon: {
				unicode: "1f348",
				unicode_alt: "",
				code_decimal: "&#127816;",
				name: "melon",
				shortname: ":melon:",
				category: "food",
				emoji_order: "1450",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "boobs", "food"]
			},
			watermelon: {
				unicode: "1f349",
				unicode_alt: "",
				code_decimal: "&#127817;",
				name: "watermelon",
				shortname: ":watermelon:",
				category: "food",
				emoji_order: "1451",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food"]
			},
			tangerine: {
				unicode: "1f34a",
				unicode_alt: "",
				code_decimal: "&#127818;",
				name: "tangerine",
				shortname: ":tangerine:",
				category: "food",
				emoji_order: "1452",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food"]
			},
			lemon: {
				unicode: "1f34b",
				unicode_alt: "",
				code_decimal: "&#127819;",
				name: "lemon",
				shortname: ":lemon:",
				category: "food",
				emoji_order: "1453",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food"]
			},
			banana: {
				unicode: "1f34c",
				unicode_alt: "",
				code_decimal: "&#127820;",
				name: "banana",
				shortname: ":banana:",
				category: "food",
				emoji_order: "1454",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "penis", "food"]
			},
			pineapple: {
				unicode: "1f34d",
				unicode_alt: "",
				code_decimal: "&#127821;",
				name: "pineapple",
				shortname: ":pineapple:",
				category: "food",
				emoji_order: "1455",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food", "tropical"]
			},
			apple: {
				unicode: "1f34e",
				unicode_alt: "",
				code_decimal: "&#127822;",
				name: "red apple",
				shortname: ":apple:",
				category: "food",
				emoji_order: "1456",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food", "creationism"]
			},
			green_apple: {
				unicode: "1f34f",
				unicode_alt: "",
				code_decimal: "&#127823;",
				name: "green apple",
				shortname: ":green_apple:",
				category: "food",
				emoji_order: "1457",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food"]
			},
			pear: {
				unicode: "1f350",
				unicode_alt: "",
				code_decimal: "&#127824;",
				name: "pear",
				shortname: ":pear:",
				category: "food",
				emoji_order: "1458",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food"]
			},
			peach: {
				unicode: "1f351",
				unicode_alt: "",
				code_decimal: "&#127825;",
				name: "peach",
				shortname: ":peach:",
				category: "food",
				emoji_order: "1459",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "butt", "food"]
			},
			cherries: {
				unicode: "1f352",
				unicode_alt: "",
				code_decimal: "&#127826;",
				name: "cherries",
				shortname: ":cherries:",
				category: "food",
				emoji_order: "1460",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food"]
			},
			strawberry: {
				unicode: "1f353",
				unicode_alt: "",
				code_decimal: "&#127827;",
				name: "strawberry",
				shortname: ":strawberry:",
				category: "food",
				emoji_order: "1461",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "food"]
			},
			kiwi: {
				unicode: "1f95d",
				unicode_alt: "",
				code_decimal: "&#129373;",
				name: "kiwifruit",
				shortname: ":kiwi:",
				category: "food",
				emoji_order: "1462",
				aliases: [":kiwifruit:"],
				aliases_ascii: [],
				keywords: []
			},
			tomato: {
				unicode: "1f345",
				unicode_alt: "",
				code_decimal: "&#127813;",
				name: "tomato",
				shortname: ":tomato:",
				category: "food",
				emoji_order: "1463",
				aliases: [],
				aliases_ascii: [],
				keywords: ["fruit", "vegetables", "food"]
			},
			avocado: {
				unicode: "1f951",
				unicode_alt: "",
				code_decimal: "&#129361;",
				name: "avocado",
				shortname: ":avocado:",
				category: "food",
				emoji_order: "1464",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			eggplant: {
				unicode: "1f346",
				unicode_alt: "",
				code_decimal: "&#127814;",
				name: "aubergine",
				shortname: ":eggplant:",
				category: "food",
				emoji_order: "1465",
				aliases: [],
				aliases_ascii: [],
				keywords: ["vegetables", "penis", "food"]
			},
			potato: {
				unicode: "1f954",
				unicode_alt: "",
				code_decimal: "&#129364;",
				name: "potato",
				shortname: ":potato:",
				category: "food",
				emoji_order: "1466",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			carrot: {
				unicode: "1f955",
				unicode_alt: "",
				code_decimal: "&#129365;",
				name: "carrot",
				shortname: ":carrot:",
				category: "food",
				emoji_order: "1467",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			corn: {
				unicode: "1f33d",
				unicode_alt: "",
				code_decimal: "&#127805;",
				name: "ear of maize",
				shortname: ":corn:",
				category: "food",
				emoji_order: "1468",
				aliases: [],
				aliases_ascii: [],
				keywords: ["vegetables", "food"]
			},
			hot_pepper: {
				unicode: "1f336",
				unicode_alt: "1f336-fe0f",
				code_decimal: "&#127798;",
				name: "hot pepper",
				shortname: ":hot_pepper:",
				category: "food",
				emoji_order: "1469",
				aliases: [],
				aliases_ascii: [],
				keywords: ["vegetables", "food"]
			},
			cucumber: {
				unicode: "1f952",
				unicode_alt: "",
				code_decimal: "&#129362;",
				name: "cucumber",
				shortname: ":cucumber:",
				category: "food",
				emoji_order: "1470",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			mushroom: {
				unicode: "1f344",
				unicode_alt: "",
				code_decimal: "&#127812;",
				name: "mushroom",
				shortname: ":mushroom:",
				category: "nature",
				emoji_order: "1471",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature",
					"plant", "drugs"]
			},
			peanuts: {
				unicode: "1f95c",
				unicode_alt: "",
				code_decimal: "&#129372;",
				name: "peanuts",
				shortname: ":peanuts:",
				category: "food",
				emoji_order: "1472",
				aliases: [":shelled_peanut:"],
				aliases_ascii: [],
				keywords: []
			},
			chestnut: {
				unicode: "1f330",
				unicode_alt: "",
				code_decimal: "&#127792;",
				name: "chestnut",
				shortname: ":chestnut:",
				category: "nature",
				emoji_order: "1473",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant"]
			},
			bread: {
				unicode: "1f35e", unicode_alt: "", code_decimal: "&#127838;", name: "bread", shortname: ":bread:",
				category: "food", emoji_order: "1474", aliases: [], aliases_ascii: [], keywords: ["food"]
			},
			croissant: {
				unicode: "1f950",
				unicode_alt: "",
				code_decimal: "&#129360;",
				name: "croissant",
				shortname: ":croissant:",
				category: "food",
				emoji_order: "1475",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			french_bread: {
				unicode: "1f956",
				unicode_alt: "",
				code_decimal: "&#129366;",
				name: "baguette bread",
				shortname: ":french_bread:",
				category: "food",
				emoji_order: "1476",
				aliases: [":baguette_bread:"],
				aliases_ascii: [],
				keywords: []
			},
			pancakes: {
				unicode: "1f95e",
				unicode_alt: "",
				code_decimal: "&#129374;",
				name: "pancakes",
				shortname: ":pancakes:",
				category: "food",
				emoji_order: "1477",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			cheese: {
				unicode: "1f9c0",
				unicode_alt: "",
				code_decimal: "&#129472;",
				name: "cheese wedge",
				shortname: ":cheese:",
				category: "food",
				emoji_order: "1478",
				aliases: [":cheese_wedge:"],
				aliases_ascii: [],
				keywords: ["food"]
			},
			meat_on_bone: {
				unicode: "1f356",
				unicode_alt: "",
				code_decimal: "&#127830;",
				name: "meat on bone",
				shortname: ":meat_on_bone:",
				category: "food",
				emoji_order: "1479",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			poultry_leg: {
				unicode: "1f357",
				unicode_alt: "",
				code_decimal: "&#127831;",
				name: "poultry leg",
				shortname: ":poultry_leg:",
				category: "food",
				emoji_order: "1480",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food", "holidays"]
			},
			bacon: {
				unicode: "1f953",
				unicode_alt: "",
				code_decimal: "&#129363;",
				name: "bacon",
				shortname: ":bacon:",
				category: "food",
				emoji_order: "1481",
				aliases: [],
				aliases_ascii: [],
				keywords: ["pig"]
			},
			hamburger: {
				unicode: "1f354",
				unicode_alt: "",
				code_decimal: "&#127828;",
				name: "hamburger",
				shortname: ":hamburger:",
				category: "food",
				emoji_order: "1482",
				aliases: [],
				aliases_ascii: [],
				keywords: ["america", "food"]
			},
			fries: {
				unicode: "1f35f",
				unicode_alt: "",
				code_decimal: "&#127839;",
				name: "french fries",
				shortname: ":fries:",
				category: "food",
				emoji_order: "1483",
				aliases: [],
				aliases_ascii: [],
				keywords: ["america", "food"]
			},
			pizza: {
				unicode: "1f355",
				unicode_alt: "",
				code_decimal: "&#127829;",
				name: "slice of pizza",
				shortname: ":pizza:",
				category: "food",
				emoji_order: "1484",
				aliases: [],
				aliases_ascii: [],
				keywords: ["italian", "food",
					"boys night"]
			},
			hotdog: {
				unicode: "1f32d",
				unicode_alt: "",
				code_decimal: "&#127789;",
				name: "hot dog",
				shortname: ":hotdog:",
				category: "food",
				emoji_order: "1485",
				aliases: [":hot_dog:"],
				aliases_ascii: [],
				keywords: ["america", "food"]
			},
			taco: {
				unicode: "1f32e",
				unicode_alt: "",
				code_decimal: "&#127790;",
				name: "taco",
				shortname: ":taco:",
				category: "food",
				emoji_order: "1486",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food", "mexican", "vagina"]
			},
			burrito: {
				unicode: "1f32f", unicode_alt: "", code_decimal: "&#127791;", name: "burrito", shortname: ":burrito:",
				category: "food", emoji_order: "1487", aliases: [], aliases_ascii: [], keywords: ["food", "mexican"]
			},
			stuffed_flatbread: {
				unicode: "1f959",
				unicode_alt: "",
				code_decimal: "&#129369;",
				name: "stuffed flatbread",
				shortname: ":stuffed_flatbread:",
				category: "food",
				emoji_order: "1488",
				aliases: [":stuffed_pita:"],
				aliases_ascii: [],
				keywords: []
			},
			egg: {
				unicode: "1f95a",
				unicode_alt: "",
				code_decimal: "&#129370;",
				name: "egg",
				shortname: ":egg:",
				category: "food",
				emoji_order: "1489",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			cooking: {
				unicode: "1f373",
				unicode_alt: "",
				code_decimal: "&#127859;",
				name: "cooking",
				shortname: ":cooking:",
				category: "food",
				emoji_order: "1490",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			shallow_pan_of_food: {
				unicode: "1f958",
				unicode_alt: "",
				code_decimal: "&#129368;",
				name: "shallow pan of food",
				shortname: ":shallow_pan_of_food:",
				category: "food",
				emoji_order: "1491",
				aliases: [":paella:"],
				aliases_ascii: [],
				keywords: ["pan of food"]
			},
			stew: {
				unicode: "1f372",
				unicode_alt: "",
				code_decimal: "&#127858;",
				name: "pot of food",
				shortname: ":stew:",
				category: "food",
				emoji_order: "1492",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food", "steam"]
			},
			salad: {
				unicode: "1f957",
				unicode_alt: "",
				code_decimal: "&#129367;",
				name: "green salad",
				shortname: ":salad:",
				category: "food",
				emoji_order: "1493",
				aliases: [":green_salad:"],
				aliases_ascii: [],
				keywords: []
			},
			popcorn: {
				unicode: "1f37f",
				unicode_alt: "",
				code_decimal: "&#127871;",
				name: "popcorn",
				shortname: ":popcorn:",
				category: "food",
				emoji_order: "1494",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food", "parties"]
			},
			bento: {
				unicode: "1f371",
				unicode_alt: "",
				code_decimal: "&#127857;",
				name: "bento box",
				shortname: ":bento:",
				category: "food",
				emoji_order: "1495",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "sushi", "japan", "food"]
			},
			rice_cracker: {
				unicode: "1f358",
				unicode_alt: "",
				code_decimal: "&#127832;",
				name: "rice cracker",
				shortname: ":rice_cracker:",
				category: "food",
				emoji_order: "1496",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sushi", "food"]
			},
			rice_ball: {
				unicode: "1f359",
				unicode_alt: "",
				code_decimal: "&#127833;",
				name: "rice ball",
				shortname: ":rice_ball:",
				category: "food",
				emoji_order: "1497",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sushi", "japan", "food"]
			},
			rice: {
				unicode: "1f35a",
				unicode_alt: "",
				code_decimal: "&#127834;",
				name: "cooked rice",
				shortname: ":rice:",
				category: "food",
				emoji_order: "1498",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sushi", "japan", "food"]
			},
			curry: {
				unicode: "1f35b",
				unicode_alt: "",
				code_decimal: "&#127835;",
				name: "curry and rice",
				shortname: ":curry:",
				category: "food",
				emoji_order: "1499",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			ramen: {
				unicode: "1f35c",
				unicode_alt: "",
				code_decimal: "&#127836;",
				name: "steaming bowl",
				shortname: ":ramen:",
				category: "food",
				emoji_order: "1500",
				aliases: [],
				aliases_ascii: [],
				keywords: ["noodles", "ramen", "japan", "food"]
			},
			spaghetti: {
				unicode: "1f35d",
				unicode_alt: "",
				code_decimal: "&#127837;",
				name: "spaghetti",
				shortname: ":spaghetti:",
				category: "food",
				emoji_order: "1501",
				aliases: [],
				aliases_ascii: [],
				keywords: ["noodles", "pasta", "italian", "food"]
			},
			sweet_potato: {
				unicode: "1f360",
				unicode_alt: "",
				code_decimal: "&#127840;",
				name: "roasted sweet potato",
				shortname: ":sweet_potato:",
				category: "food",
				emoji_order: "1502",
				aliases: [],
				aliases_ascii: [],
				keywords: ["vegetables", "food"]
			},
			oden: {
				unicode: "1f362",
				unicode_alt: "",
				code_decimal: "&#127842;",
				name: "oden",
				shortname: ":oden:",
				category: "food",
				emoji_order: "1503",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			sushi: {
				unicode: "1f363",
				unicode_alt: "",
				code_decimal: "&#127843;",
				name: "sushi",
				shortname: ":sushi:",
				category: "food",
				emoji_order: "1504",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sushi", "japan", "food"]
			},
			fried_shrimp: {
				unicode: "1f364",
				unicode_alt: "",
				code_decimal: "&#127844;",
				name: "fried shrimp",
				shortname: ":fried_shrimp:",
				category: "food",
				emoji_order: "1505",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			fish_cake: {
				unicode: "1f365",
				unicode_alt: "",
				code_decimal: "&#127845;",
				name: "fish cake with swirl design",
				shortname: ":fish_cake:",
				category: "food",
				emoji_order: "1506",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sushi", "food"]
			},
			dango: {
				unicode: "1f361",
				unicode_alt: "",
				code_decimal: "&#127841;",
				name: "dango",
				shortname: ":dango:",
				category: "food",
				emoji_order: "1507",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			icecream: {
				unicode: "1f366",
				unicode_alt: "",
				code_decimal: "&#127846;",
				name: "soft ice cream",
				shortname: ":icecream:",
				category: "food",
				emoji_order: "1508",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			shaved_ice: {
				unicode: "1f367",
				unicode_alt: "",
				code_decimal: "&#127847;",
				name: "shaved ice",
				shortname: ":shaved_ice:",
				category: "food",
				emoji_order: "1509",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			ice_cream: {
				unicode: "1f368",
				unicode_alt: "",
				code_decimal: "&#127848;",
				name: "ice cream",
				shortname: ":ice_cream:",
				category: "food",
				emoji_order: "1510",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			doughnut: {
				unicode: "1f369",
				unicode_alt: "",
				code_decimal: "&#127849;",
				name: "doughnut",
				shortname: ":doughnut:",
				category: "food",
				emoji_order: "1511",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			cookie: {
				unicode: "1f36a",
				unicode_alt: "",
				code_decimal: "&#127850;",
				name: "cookie",
				shortname: ":cookie:",
				category: "food",
				emoji_order: "1512",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food", "vagina"]
			},
			birthday: {
				unicode: "1f382",
				unicode_alt: "",
				code_decimal: "&#127874;",
				name: "birthday cake",
				shortname: ":birthday:",
				category: "food",
				emoji_order: "1513",
				aliases: [],
				aliases_ascii: [],
				keywords: ["birthday", "food", "parties"]
			},
			cake: {
				unicode: "1f370",
				unicode_alt: "",
				code_decimal: "&#127856;",
				name: "shortcake",
				shortname: ":cake:",
				category: "food",
				emoji_order: "1514",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food"]
			},
			chocolate_bar: {
				unicode: "1f36b",
				unicode_alt: "",
				code_decimal: "&#127851;",
				name: "chocolate bar",
				shortname: ":chocolate_bar:",
				category: "food",
				emoji_order: "1515",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food", "halloween"]
			},
			candy: {
				unicode: "1f36c",
				unicode_alt: "",
				code_decimal: "&#127852;",
				name: "candy",
				shortname: ":candy:",
				category: "food",
				emoji_order: "1516",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food", "halloween"]
			},
			lollipop: {
				unicode: "1f36d",
				unicode_alt: "",
				code_decimal: "&#127853;",
				name: "lollipop",
				shortname: ":lollipop:",
				category: "food",
				emoji_order: "1517",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food", "halloween"]
			},
			custard: {
				unicode: "1f36e",
				unicode_alt: "",
				code_decimal: "&#127854;",
				name: "custard",
				shortname: ":custard:",
				category: "food",
				emoji_order: "1518",
				aliases: [":pudding:", ":flan:"],
				aliases_ascii: [],
				keywords: ["food"]
			},
			honey_pot: {
				unicode: "1f36f",
				unicode_alt: "",
				code_decimal: "&#127855;",
				name: "honey pot",
				shortname: ":honey_pot:",
				category: "food",
				emoji_order: "1519",
				aliases: [],
				aliases_ascii: [],
				keywords: ["food", "vagina"]
			},
			baby_bottle: {
				unicode: "1f37c",
				unicode_alt: "",
				code_decimal: "&#127868;",
				name: "baby bottle",
				shortname: ":baby_bottle:",
				category: "food",
				emoji_order: "1520",
				aliases: [],
				aliases_ascii: [],
				keywords: ["drink", "object",
					"food", "baby"]
			},
			milk: {
				unicode: "1f95b",
				unicode_alt: "",
				code_decimal: "&#129371;",
				name: "glass of milk",
				shortname: ":milk:",
				category: "food",
				emoji_order: "1521",
				aliases: [":glass_of_milk:"],
				aliases_ascii: [],
				keywords: []
			},
			coffee: {
				unicode: "2615",
				unicode_alt: "2615-fe0f",
				code_decimal: "&#9749;",
				name: "hot beverage",
				shortname: ":coffee:",
				category: "food",
				emoji_order: "1522",
				aliases: [],
				aliases_ascii: [],
				keywords: ["drink", "caffeine", "steam", "morning"]
			},
			tea: {
				unicode: "1f375",
				unicode_alt: "",
				code_decimal: "&#127861;",
				name: "teacup without handle",
				shortname: ":tea:",
				category: "food",
				emoji_order: "1523",
				aliases: [],
				aliases_ascii: [],
				keywords: ["drink", "japan", "caffeine", "steam", "morning"]
			},
			sake: {
				unicode: "1f376",
				unicode_alt: "",
				code_decimal: "&#127862;",
				name: "sake bottle and cup",
				shortname: ":sake:",
				category: "food",
				emoji_order: "1524",
				aliases: [],
				aliases_ascii: [],
				keywords: ["drink", "japan", "sake", "alcohol", "girls night"]
			},
			champagne: {
				unicode: "1f37e",
				unicode_alt: "",
				code_decimal: "&#127870;",
				name: "bottle with popping cork",
				shortname: ":champagne:",
				category: "food",
				emoji_order: "1525",
				aliases: [":bottle_with_popping_cork:"],
				aliases_ascii: [],
				keywords: ["drink", "cheers", "alcohol", "parties"]
			},
			wine_glass: {
				unicode: "1f377",
				unicode_alt: "",
				code_decimal: "&#127863;",
				name: "wine glass",
				shortname: ":wine_glass:",
				category: "food",
				emoji_order: "1526",
				aliases: [],
				aliases_ascii: [],
				keywords: ["drink", "italian", "alcohol", "girls night", "parties"]
			},
			cocktail: {
				unicode: "1f378",
				unicode_alt: "",
				code_decimal: "&#127864;",
				name: "cocktail glass",
				shortname: ":cocktail:",
				category: "food",
				emoji_order: "1527",
				aliases: [],
				aliases_ascii: [],
				keywords: ["drink", "cocktail", "alcohol", "girls night", "parties"]
			},
			tropical_drink: {
				unicode: "1f379",
				unicode_alt: "",
				code_decimal: "&#127865;",
				name: "tropical drink",
				shortname: ":tropical_drink:",
				category: "food",
				emoji_order: "1528",
				aliases: [],
				aliases_ascii: [],
				keywords: ["drink", "cocktail", "tropical", "alcohol"]
			},
			beer: {
				unicode: "1f37a",
				unicode_alt: "",
				code_decimal: "&#127866;",
				name: "beer mug",
				shortname: ":beer:",
				category: "food",
				emoji_order: "1529",
				aliases: [],
				aliases_ascii: [],
				keywords: ["drink",
					"beer", "alcohol", "parties"]
			},
			beers: {
				unicode: "1f37b",
				unicode_alt: "",
				code_decimal: "&#127867;",
				name: "clinking beer mugs",
				shortname: ":beers:",
				category: "food",
				emoji_order: "1530",
				aliases: [],
				aliases_ascii: [],
				keywords: "drink;cheers;beer;alcohol;thank you;boys night;parties".split(";")
			},
			champagne_glass: {
				unicode: "1f942",
				unicode_alt: "",
				code_decimal: "&#129346;",
				name: "clinking glasses",
				shortname: ":champagne_glass:",
				category: "food",
				emoji_order: "1531",
				aliases: [":clinking_glass:"],
				aliases_ascii: [],
				keywords: []
			},
			tumbler_glass: {
				unicode: "1f943",
				unicode_alt: "",
				code_decimal: "&#129347;",
				name: "tumbler glass",
				shortname: ":tumbler_glass:",
				category: "food",
				emoji_order: "1532",
				aliases: [":whisky:"],
				aliases_ascii: [],
				keywords: ["booze"]
			},
			fork_knife_plate: {
				unicode: "1f37d",
				unicode_alt: "1f37d-fe0f",
				code_decimal: "&#127869;",
				name: "fork and knife with plate",
				shortname: ":fork_knife_plate:",
				category: "food",
				emoji_order: "1533",
				aliases: [":fork_and_knife_with_plate:"],
				aliases_ascii: [],
				keywords: ["object", "food"]
			},
			fork_and_knife: {
				unicode: "1f374",
				unicode_alt: "",
				code_decimal: "&#127860;",
				name: "fork and knife",
				shortname: ":fork_and_knife:",
				category: "food",
				emoji_order: "1534",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "weapon", "food"]
			},
			spoon: {
				unicode: "1f944",
				unicode_alt: "",
				code_decimal: "&#129348;",
				name: "spoon",
				shortname: ":spoon:",
				category: "food",
				emoji_order: "1535",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			knife: {
				unicode: "1f52a",
				unicode_alt: "",
				code_decimal: "&#128298;",
				name: "hocho",
				shortname: ":knife:",
				category: "objects",
				emoji_order: "1536",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object",
					"weapon"]
			},
			amphora: {
				unicode: "1f3fa",
				unicode_alt: "",
				code_decimal: "&#127994;",
				name: "amphora",
				shortname: ":amphora:",
				category: "objects",
				emoji_order: "1537",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			earth_africa: {
				unicode: "1f30d",
				unicode_alt: "",
				code_decimal: "&#127757;",
				name: "earth globe europe-africa",
				shortname: ":earth_africa:",
				category: "nature",
				emoji_order: "1538",
				aliases: [],
				aliases_ascii: [],
				keywords: ["map", "vacation", "globe"]
			},
			earth_americas: {
				unicode: "1f30e",
				unicode_alt: "",
				code_decimal: "&#127758;",
				name: "earth globe americas",
				shortname: ":earth_americas:",
				category: "nature",
				emoji_order: "1539",
				aliases: [],
				aliases_ascii: [],
				keywords: ["map", "vacation", "globe"]
			},
			earth_asia: {
				unicode: "1f30f",
				unicode_alt: "",
				code_decimal: "&#127759;",
				name: "earth globe asia-australia",
				shortname: ":earth_asia:",
				category: "nature",
				emoji_order: "1540",
				aliases: [],
				aliases_ascii: [],
				keywords: ["map", "vacation", "globe"]
			},
			globe_with_meridians: {
				unicode: "1f310",
				unicode_alt: "",
				code_decimal: "&#127760;",
				name: "globe with meridians",
				shortname: ":globe_with_meridians:",
				category: "symbols",
				emoji_order: "1541",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "globe"]
			},
			map: {
				unicode: "1f5fa",
				unicode_alt: "1f5fa-fe0f",
				code_decimal: "&#128506;",
				name: "world map",
				shortname: ":map:",
				category: "objects",
				emoji_order: "1542",
				aliases: [":world_map:"],
				aliases_ascii: [],
				keywords: ["travel", "map", "vacation"]
			},
			japan: {
				unicode: "1f5fe",
				unicode_alt: "",
				code_decimal: "&#128510;",
				name: "silhouette of japan",
				shortname: ":japan:",
				category: "travel",
				emoji_order: "1543",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places",
					"travel", "map", "vacation", "tropical"]
			},
			mountain_snow: {
				unicode: "1f3d4",
				unicode_alt: "1f3d4-fe0f",
				code_decimal: "&#127956;",
				name: "snow capped mountain",
				shortname: ":mountain_snow:",
				category: "travel",
				emoji_order: "1544",
				aliases: [":snow_capped_mountain:"],
				aliases_ascii: [],
				keywords: ["places", "travel", "vacation", "cold", "camp"]
			},
			mountain: {
				unicode: "26f0",
				unicode_alt: "26f0-fe0f",
				code_decimal: "&#9968;",
				name: "mountain",
				shortname: ":mountain:",
				category: "travel",
				emoji_order: "1545",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places",
					"travel", "vacation", "camp"]
			},
			volcano: {
				unicode: "1f30b",
				unicode_alt: "",
				code_decimal: "&#127755;",
				name: "volcano",
				shortname: ":volcano:",
				category: "travel",
				emoji_order: "1546",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "tropical"]
			},
			mount_fuji: {
				unicode: "1f5fb",
				unicode_alt: "",
				code_decimal: "&#128507;",
				name: "mount fuji",
				shortname: ":mount_fuji:",
				category: "travel",
				emoji_order: "1547",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "travel", "vacation", "cold", "camp"]
			},
			camping: {
				unicode: "1f3d5",
				unicode_alt: "1f3d5-fe0f",
				code_decimal: "&#127957;",
				name: "camping",
				shortname: ":camping:",
				category: "travel",
				emoji_order: "1548",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "travel", "vacation", "camp"]
			},
			beach: {
				unicode: "1f3d6",
				unicode_alt: "1f3d6-fe0f",
				code_decimal: "&#127958;",
				name: "beach with umbrella",
				shortname: ":beach:",
				category: "travel",
				emoji_order: "1549",
				aliases: [":beach_with_umbrella:"],
				aliases_ascii: [],
				keywords: "places travel vacation tropical beach swim".split(" ")
			},
			desert: {
				unicode: "1f3dc",
				unicode_alt: "1f3dc-fe0f",
				code_decimal: "&#127964;",
				name: "desert",
				shortname: ":desert:",
				category: "travel",
				emoji_order: "1550",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "travel", "vacation", "hot"]
			},
			island: {
				unicode: "1f3dd",
				unicode_alt: "1f3dd-fe0f",
				code_decimal: "&#127965;",
				name: "desert island",
				shortname: ":island:",
				category: "travel",
				emoji_order: "1551",
				aliases: [":desert_island:"],
				aliases_ascii: [],
				keywords: "places travel vacation tropical beach swim".split(" ")
			},
			park: {
				unicode: "1f3de",
				unicode_alt: "1f3de-fe0f",
				code_decimal: "&#127966;",
				name: "national park",
				shortname: ":park:",
				category: "travel",
				emoji_order: "1552",
				aliases: [":national_park:"],
				aliases_ascii: [],
				keywords: ["travel", "vacation", "park", "camp"]
			},
			stadium: {
				unicode: "1f3df",
				unicode_alt: "1f3df-fe0f",
				code_decimal: "&#127967;",
				name: "stadium",
				shortname: ":stadium:",
				category: "travel",
				emoji_order: "1553",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "travel", "vacation", "boys night"]
			},
			classical_building: {
				unicode: "1f3db",
				unicode_alt: "1f3db-fe0f",
				code_decimal: "&#127963;",
				name: "classical building",
				shortname: ":classical_building:",
				category: "travel",
				emoji_order: "1554",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "travel", "vacation"]
			},
			construction_site: {
				unicode: "1f3d7",
				unicode_alt: "1f3d7-fe0f",
				code_decimal: "&#127959;",
				name: "building construction",
				shortname: ":construction_site:",
				category: "travel",
				emoji_order: "1555",
				aliases: [":building_construction:"],
				aliases_ascii: [],
				keywords: ["building", "crane"]
			},
			homes: {
				unicode: "1f3d8",
				unicode_alt: "1f3d8-fe0f",
				code_decimal: "&#127960;",
				name: "house buildings",
				shortname: ":homes:",
				category: "travel",
				emoji_order: "1556",
				aliases: [":house_buildings:"],
				aliases_ascii: [],
				keywords: ["places", "building", "house"]
			},
			cityscape: {
				unicode: "1f3d9",
				unicode_alt: "1f3d9-fe0f",
				code_decimal: "&#127961;",
				name: "cityscape",
				shortname: ":cityscape:",
				category: "travel",
				emoji_order: "1557",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "vacation"]
			},
			house_abandoned: {
				unicode: "1f3da",
				unicode_alt: "1f3da-fe0f",
				code_decimal: "&#127962;",
				name: "derelict house building",
				shortname: ":house_abandoned:",
				category: "travel",
				emoji_order: "1558",
				aliases: [":derelict_house_building:"],
				aliases_ascii: [],
				keywords: ["places", "building", "house"]
			},
			house: {
				unicode: "1f3e0",
				unicode_alt: "",
				code_decimal: "&#127968;",
				name: "house building",
				shortname: ":house:",
				category: "travel",
				emoji_order: "1559",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "house"]
			},
			house_with_garden: {
				unicode: "1f3e1",
				unicode_alt: "",
				code_decimal: "&#127969;",
				name: "house with garden",
				shortname: ":house_with_garden:",
				category: "travel",
				emoji_order: "1560",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "house"]
			},
			office: {
				unicode: "1f3e2",
				unicode_alt: "",
				code_decimal: "&#127970;",
				name: "office building",
				shortname: ":office:",
				category: "travel",
				emoji_order: "1561",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "work"]
			},
			post_office: {
				unicode: "1f3e3",
				unicode_alt: "",
				code_decimal: "&#127971;",
				name: "japanese post office",
				shortname: ":post_office:",
				category: "travel",
				emoji_order: "1562",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "post office"]
			},
			european_post_office: {
				unicode: "1f3e4",
				unicode_alt: "",
				code_decimal: "&#127972;",
				name: "european post office",
				shortname: ":european_post_office:",
				category: "travel",
				emoji_order: "1563",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "post office"]
			},
			hospital: {
				unicode: "1f3e5",
				unicode_alt: "",
				code_decimal: "&#127973;",
				name: "hospital",
				shortname: ":hospital:",
				category: "travel",
				emoji_order: "1564",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "health", "911"]
			},
			bank: {
				unicode: "1f3e6",
				unicode_alt: "",
				code_decimal: "&#127974;",
				name: "bank",
				shortname: ":bank:",
				category: "travel",
				emoji_order: "1565",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building"]
			},
			hotel: {
				unicode: "1f3e8",
				unicode_alt: "",
				code_decimal: "&#127976;",
				name: "hotel",
				shortname: ":hotel:",
				category: "travel",
				emoji_order: "1566",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "vacation"]
			},
			love_hotel: {
				unicode: "1f3e9",
				unicode_alt: "",
				code_decimal: "&#127977;",
				name: "love hotel",
				shortname: ":love_hotel:",
				category: "travel",
				emoji_order: "1567",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "love"]
			},
			convenience_store: {
				unicode: "1f3ea",
				unicode_alt: "",
				code_decimal: "&#127978;",
				name: "convenience store",
				shortname: ":convenience_store:",
				category: "travel",
				emoji_order: "1568",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building"]
			},
			school: {
				unicode: "1f3eb",
				unicode_alt: "",
				code_decimal: "&#127979;",
				name: "school",
				shortname: ":school:",
				category: "travel",
				emoji_order: "1569",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building"]
			},
			department_store: {
				unicode: "1f3ec",
				unicode_alt: "",
				code_decimal: "&#127980;",
				name: "department store",
				shortname: ":department_store:",
				category: "travel",
				emoji_order: "1570",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building"]
			},
			factory: {
				unicode: "1f3ed",
				unicode_alt: "",
				code_decimal: "&#127981;",
				name: "factory",
				shortname: ":factory:",
				category: "travel",
				emoji_order: "1571",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "travel", "steam"]
			},
			japanese_castle: {
				unicode: "1f3ef",
				unicode_alt: "",
				code_decimal: "&#127983;",
				name: "japanese castle",
				shortname: ":japanese_castle:",
				category: "travel",
				emoji_order: "1572",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "travel", "vacation"]
			},
			european_castle: {
				unicode: "1f3f0",
				unicode_alt: "",
				code_decimal: "&#127984;",
				name: "european castle",
				shortname: ":european_castle:",
				category: "travel",
				emoji_order: "1573",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "travel", "vacation"]
			},
			wedding: {
				unicode: "1f492",
				unicode_alt: "",
				code_decimal: "&#128146;",
				name: "wedding",
				shortname: ":wedding:",
				category: "travel",
				emoji_order: "1574",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "wedding", "building", "love", "parties"]
			},
			tokyo_tower: {
				unicode: "1f5fc",
				unicode_alt: "",
				code_decimal: "&#128508;",
				name: "tokyo tower",
				shortname: ":tokyo_tower:",
				category: "travel",
				emoji_order: "1575",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "travel", "vacation", "eiffel tower"]
			},
			statue_of_liberty: {
				unicode: "1f5fd",
				unicode_alt: "",
				code_decimal: "&#128509;",
				name: "statue of liberty",
				shortname: ":statue_of_liberty:",
				category: "travel",
				emoji_order: "1576",
				aliases: [],
				aliases_ascii: [],
				keywords: "places;america;travel;vacation;statue of liberty;free speech".split(";")
			},
			church: {
				unicode: "26ea",
				unicode_alt: "26ea-fe0f",
				code_decimal: "&#9962;",
				name: "church",
				shortname: ":church:",
				category: "travel",
				emoji_order: "1577",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "wedding", "religion", "building", "condolence"]
			},
			mosque: {
				unicode: "1f54c",
				unicode_alt: "",
				code_decimal: "&#128332;",
				name: "mosque",
				shortname: ":mosque:",
				category: "travel",
				emoji_order: "1578",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "religion", "building", "vacation", "condolence"]
			},
			synagogue: {
				unicode: "1f54d",
				unicode_alt: "",
				code_decimal: "&#128333;",
				name: "synagogue",
				shortname: ":synagogue:",
				category: "travel",
				emoji_order: "1579",
				aliases: [],
				aliases_ascii: [],
				keywords: "places religion building travel vacation condolence".split(" ")
			},
			shinto_shrine: {
				unicode: "26e9",
				unicode_alt: "26e9-fe0f",
				code_decimal: "&#9961;",
				name: "shinto shrine",
				shortname: ":shinto_shrine:",
				category: "travel",
				emoji_order: "1580",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "travel", "vacation"]
			},
			kaaba: {
				unicode: "1f54b",
				unicode_alt: "",
				code_decimal: "&#128331;",
				name: "kaaba",
				shortname: ":kaaba:",
				category: "travel",
				emoji_order: "1581",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "religion", "building", "condolence"]
			},
			fountain: {
				unicode: "26f2",
				unicode_alt: "26f2-fe0f",
				code_decimal: "&#9970;",
				name: "fountain",
				shortname: ":fountain:",
				category: "travel",
				emoji_order: "1582",
				aliases: [],
				aliases_ascii: [],
				keywords: ["travel", "vacation"]
			},
			tent: {
				unicode: "26fa",
				unicode_alt: "26fa-fe0f",
				code_decimal: "&#9978;",
				name: "tent",
				shortname: ":tent:",
				category: "travel",
				emoji_order: "1583",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "travel", "vacation", "camp"]
			},
			foggy: {
				unicode: "1f301",
				unicode_alt: "",
				code_decimal: "&#127745;",
				name: "foggy",
				shortname: ":foggy:",
				category: "travel",
				emoji_order: "1584",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "sky", "travel", "vacation"]
			},
			night_with_stars: {
				unicode: "1f303",
				unicode_alt: "",
				code_decimal: "&#127747;",
				name: "night with stars",
				shortname: ":night_with_stars:",
				category: "travel",
				emoji_order: "1585",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building", "sky", "vacation", "goodnight"]
			},
			sunrise_over_mountains: {
				unicode: "1f304",
				unicode_alt: "",
				code_decimal: "&#127748;",
				name: "sunrise over mountains",
				shortname: ":sunrise_over_mountains:",
				category: "travel",
				emoji_order: "1586",
				aliases: [],
				aliases_ascii: [],
				keywords: "places sky travel vacation day sun camp morning".split(" ")
			},
			sunrise: {
				unicode: "1f305",
				unicode_alt: "",
				code_decimal: "&#127749;",
				name: "sunrise",
				shortname: ":sunrise:",
				category: "travel",
				emoji_order: "1587",
				aliases: [],
				aliases_ascii: [],
				keywords: "places;sky;travel;vacation;tropical;day;sun;hump day;morning".split(";")
			},
			city_dusk: {
				unicode: "1f306",
				unicode_alt: "",
				code_decimal: "&#127750;",
				name: "cityscape at dusk",
				shortname: ":city_dusk:",
				category: "travel",
				emoji_order: "1588",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "building"]
			},
			city_sunset: {
				unicode: "1f307",
				unicode_alt: "",
				code_decimal: "&#127751;",
				name: "sunset over buildings",
				shortname: ":city_sunset:",
				category: "travel",
				emoji_order: "1589",
				aliases: [":city_sunrise:"],
				aliases_ascii: [],
				keywords: ["places", "building", "sky", "vacation"]
			},
			bridge_at_night: {
				unicode: "1f309",
				unicode_alt: "",
				code_decimal: "&#127753;",
				name: "bridge at night",
				shortname: ":bridge_at_night:",
				category: "travel",
				emoji_order: "1590",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "travel", "vacation", "goodnight"]
			},
			hotsprings: {
				unicode: "2668",
				unicode_alt: "2668-fe0f",
				code_decimal: "&#9832;",
				name: "hot springs",
				shortname: ":hotsprings:",
				category: "symbols",
				emoji_order: "1591",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			milky_way: {
				unicode: "1f30c",
				unicode_alt: "",
				code_decimal: "&#127756;",
				name: "milky way",
				shortname: ":milky_way:",
				category: "travel",
				emoji_order: "1592",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "space", "sky", "travel", "vacation"]
			},
			carousel_horse: {
				unicode: "1f3a0",
				unicode_alt: "",
				code_decimal: "&#127904;",
				name: "carousel horse",
				shortname: ":carousel_horse:",
				category: "travel",
				emoji_order: "1593",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "object", "vacation",
					"roller coaster", "carousel"]
			},
			ferris_wheel: {
				unicode: "1f3a1",
				unicode_alt: "",
				code_decimal: "&#127905;",
				name: "ferris wheel",
				shortname: ":ferris_wheel:",
				category: "travel",
				emoji_order: "1594",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "vacation", "ferris wheel"]
			},
			roller_coaster: {
				unicode: "1f3a2",
				unicode_alt: "",
				code_decimal: "&#127906;",
				name: "roller coaster",
				shortname: ":roller_coaster:",
				category: "travel",
				emoji_order: "1595",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "vacation", "roller coaster"]
			},
			barber: {
				unicode: "1f488",
				unicode_alt: "",
				code_decimal: "&#128136;",
				name: "barber pole",
				shortname: ":barber:",
				category: "objects",
				emoji_order: "1596",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			circus_tent: {
				unicode: "1f3aa",
				unicode_alt: "",
				code_decimal: "&#127914;",
				name: "circus tent",
				shortname: ":circus_tent:",
				category: "activity",
				emoji_order: "1597",
				aliases: [],
				aliases_ascii: [],
				keywords: ["circus tent"]
			},
			performing_arts: {
				unicode: "1f3ad",
				unicode_alt: "",
				code_decimal: "&#127917;",
				name: "performing arts",
				shortname: ":performing_arts:",
				category: "activity",
				emoji_order: "1598",
				aliases: [],
				aliases_ascii: [],
				keywords: ["theatre", "movie"]
			},
			frame_photo: {
				unicode: "1f5bc",
				unicode_alt: "1f5bc-fe0f",
				code_decimal: "&#128444;",
				name: "frame with picture",
				shortname: ":frame_photo:",
				category: "objects",
				emoji_order: "1599",
				aliases: [":frame_with_picture:"],
				aliases_ascii: [],
				keywords: ["travel", "vacation"]
			},
			art: {
				unicode: "1f3a8",
				unicode_alt: "",
				code_decimal: "&#127912;",
				name: "artist palette",
				shortname: ":art:",
				category: "activity",
				emoji_order: "1600",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			slot_machine: {
				unicode: "1f3b0",
				unicode_alt: "",
				code_decimal: "&#127920;",
				name: "slot machine",
				shortname: ":slot_machine:",
				category: "activity",
				emoji_order: "1601",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "boys night"]
			},
			steam_locomotive: {
				unicode: "1f682",
				unicode_alt: "",
				code_decimal: "&#128642;",
				name: "steam locomotive",
				shortname: ":steam_locomotive:",
				category: "travel",
				emoji_order: "1602",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train", "steam"]
			},
			railway_car: {
				unicode: "1f683",
				unicode_alt: "",
				code_decimal: "&#128643;",
				name: "railway car",
				shortname: ":railway_car:",
				category: "travel",
				emoji_order: "1603",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			bullettrain_side: {
				unicode: "1f684",
				unicode_alt: "",
				code_decimal: "&#128644;",
				name: "high-speed train",
				shortname: ":bullettrain_side:",
				category: "travel",
				emoji_order: "1604",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			bullettrain_front: {
				unicode: "1f685",
				unicode_alt: "",
				code_decimal: "&#128645;",
				name: "high-speed train with bullet nose",
				shortname: ":bullettrain_front:",
				category: "travel",
				emoji_order: "1605",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			train2: {
				unicode: "1f686",
				unicode_alt: "",
				code_decimal: "&#128646;",
				name: "train",
				shortname: ":train2:",
				category: "travel",
				emoji_order: "1606",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			metro: {
				unicode: "1f687",
				unicode_alt: "",
				code_decimal: "&#128647;",
				name: "metro",
				shortname: ":metro:",
				category: "travel",
				emoji_order: "1607",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			light_rail: {
				unicode: "1f688",
				unicode_alt: "",
				code_decimal: "&#128648;",
				name: "light rail",
				shortname: ":light_rail:",
				category: "travel",
				emoji_order: "1608",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			station: {
				unicode: "1f689",
				unicode_alt: "",
				code_decimal: "&#128649;",
				name: "station",
				shortname: ":station:",
				category: "travel",
				emoji_order: "1609",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			tram: {
				unicode: "1f68a",
				unicode_alt: "",
				code_decimal: "&#128650;",
				name: "tram",
				shortname: ":tram:",
				category: "travel",
				emoji_order: "1610",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			monorail: {
				unicode: "1f69d",
				unicode_alt: "",
				code_decimal: "&#128669;",
				name: "monorail",
				shortname: ":monorail:",
				category: "travel",
				emoji_order: "1611",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train", "vacation"]
			},
			mountain_railway: {
				unicode: "1f69e",
				unicode_alt: "",
				code_decimal: "&#128670;",
				name: "mountain railway",
				shortname: ":mountain_railway:",
				category: "travel",
				emoji_order: "1612",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			train: {
				unicode: "1f68b",
				unicode_alt: "",
				code_decimal: "&#128651;",
				name: "tram car",
				shortname: ":train:",
				category: "travel",
				emoji_order: "1613",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			bus: {
				unicode: "1f68c",
				unicode_alt: "",
				code_decimal: "&#128652;",
				name: "bus",
				shortname: ":bus:",
				category: "travel",
				emoji_order: "1614",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "bus", "office"]
			},
			oncoming_bus: {
				unicode: "1f68d",
				unicode_alt: "",
				code_decimal: "&#128653;",
				name: "oncoming bus",
				shortname: ":oncoming_bus:",
				category: "travel",
				emoji_order: "1615",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "bus", "travel"]
			},
			trolleybus: {
				unicode: "1f68e",
				unicode_alt: "",
				code_decimal: "&#128654;",
				name: "trolleybus",
				shortname: ":trolleybus:",
				category: "travel",
				emoji_order: "1616",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "bus", "travel"]
			},
			minibus: {
				unicode: "1f690",
				unicode_alt: "",
				code_decimal: "&#128656;",
				name: "minibus",
				shortname: ":minibus:",
				category: "travel",
				emoji_order: "1617",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "bus"]
			},
			ambulance: {
				unicode: "1f691",
				unicode_alt: "",
				code_decimal: "&#128657;",
				name: "ambulance",
				shortname: ":ambulance:",
				category: "travel",
				emoji_order: "1618",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "911"]
			},
			fire_engine: {
				unicode: "1f692",
				unicode_alt: "",
				code_decimal: "&#128658;",
				name: "fire engine",
				shortname: ":fire_engine:",
				category: "travel",
				emoji_order: "1619",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "truck", "911"]
			},
			police_car: {
				unicode: "1f693",
				unicode_alt: "",
				code_decimal: "&#128659;",
				name: "police car",
				shortname: ":police_car:",
				category: "travel",
				emoji_order: "1620",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "car", "police", "911"]
			},
			oncoming_police_car: {
				unicode: "1f694",
				unicode_alt: "",
				code_decimal: "&#128660;",
				name: "oncoming police car",
				shortname: ":oncoming_police_car:",
				category: "travel",
				emoji_order: "1621",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "car", "police", "911"]
			},
			taxi: {
				unicode: "1f695",
				unicode_alt: "",
				code_decimal: "&#128661;",
				name: "taxi",
				shortname: ":taxi:",
				category: "travel",
				emoji_order: "1622",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "car", "travel"]
			},
			oncoming_taxi: {
				unicode: "1f696",
				unicode_alt: "",
				code_decimal: "&#128662;",
				name: "oncoming taxi",
				shortname: ":oncoming_taxi:",
				category: "travel",
				emoji_order: "1623",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "car", "travel"]
			},
			red_car: {
				unicode: "1f697",
				unicode_alt: "",
				code_decimal: "&#128663;",
				name: "automobile",
				shortname: ":red_car:",
				category: "travel",
				emoji_order: "1624",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "car", "travel"]
			},
			oncoming_automobile: {
				unicode: "1f698",
				unicode_alt: "",
				code_decimal: "&#128664;",
				name: "oncoming automobile",
				shortname: ":oncoming_automobile:",
				category: "travel",
				emoji_order: "1625",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "car", "travel"]
			},
			blue_car: {
				unicode: "1f699",
				unicode_alt: "",
				code_decimal: "&#128665;",
				name: "recreational vehicle",
				shortname: ":blue_car:",
				category: "travel",
				emoji_order: "1626",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "car", "travel"]
			},
			truck: {
				unicode: "1f69a",
				unicode_alt: "",
				code_decimal: "&#128666;",
				name: "delivery truck",
				shortname: ":truck:",
				category: "travel",
				emoji_order: "1627",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "truck"]
			},
			articulated_lorry: {
				unicode: "1f69b",
				unicode_alt: "",
				code_decimal: "&#128667;",
				name: "articulated lorry",
				shortname: ":articulated_lorry:",
				category: "travel",
				emoji_order: "1628",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "truck"]
			},
			tractor: {
				unicode: "1f69c",
				unicode_alt: "",
				code_decimal: "&#128668;",
				name: "tractor",
				shortname: ":tractor:",
				category: "travel",
				emoji_order: "1629",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation"]
			},
			bike: {
				unicode: "1f6b2",
				unicode_alt: "",
				code_decimal: "&#128690;",
				name: "bicycle",
				shortname: ":bike:",
				category: "travel",
				emoji_order: "1630",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "bike"]
			},
			scooter: {
				unicode: "1f6f4",
				unicode_alt: "",
				code_decimal: "&#128756;",
				name: "scooter",
				shortname: ":scooter:",
				category: "travel",
				emoji_order: "1631",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			motor_scooter: {
				unicode: "1f6f5",
				unicode_alt: "",
				code_decimal: "&#128757;",
				name: "motor scooter",
				shortname: ":motor_scooter:",
				category: "travel",
				emoji_order: "1632",
				aliases: [":motorbike:"],
				aliases_ascii: [],
				keywords: ["moped"]
			},
			busstop: {
				unicode: "1f68f",
				unicode_alt: "",
				code_decimal: "&#128655;",
				name: "bus stop",
				shortname: ":busstop:",
				category: "travel",
				emoji_order: "1633",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			motorway: {
				unicode: "1f6e3",
				unicode_alt: "1f6e3-fe0f",
				code_decimal: "&#128739;",
				name: "motorway",
				shortname: ":motorway:",
				category: "travel",
				emoji_order: "1634",
				aliases: [],
				aliases_ascii: [],
				keywords: ["travel", "vacation", "camp"]
			},
			railway_track: {
				unicode: "1f6e4",
				unicode_alt: "1f6e4-fe0f",
				code_decimal: "&#128740;",
				name: "railway track",
				shortname: ":railway_track:",
				category: "travel",
				emoji_order: "1635",
				aliases: [":railroad_track:"],
				aliases_ascii: [],
				keywords: ["travel", "train",
					"vacation"]
			},
			fuelpump: {
				unicode: "26fd",
				unicode_alt: "26fd-fe0f",
				code_decimal: "&#9981;",
				name: "fuel pump",
				shortname: ":fuelpump:",
				category: "travel",
				emoji_order: "1636",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "gas pump"]
			},
			rotating_light: {
				unicode: "1f6a8",
				unicode_alt: "",
				code_decimal: "&#128680;",
				name: "police cars revolving light",
				shortname: ":rotating_light:",
				category: "travel",
				emoji_order: "1637",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "object", "police", "911"]
			},
			traffic_light: {
				unicode: "1f6a5",
				unicode_alt: "",
				code_decimal: "&#128677;",
				name: "horizontal traffic light",
				shortname: ":traffic_light:",
				category: "travel",
				emoji_order: "1638",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "stop light"]
			},
			vertical_traffic_light: {
				unicode: "1f6a6",
				unicode_alt: "",
				code_decimal: "&#128678;",
				name: "vertical traffic light",
				shortname: ":vertical_traffic_light:",
				category: "travel",
				emoji_order: "1639",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "stop light"]
			},
			construction: {
				unicode: "1f6a7",
				unicode_alt: "",
				code_decimal: "&#128679;",
				name: "construction sign",
				shortname: ":construction:",
				category: "travel",
				emoji_order: "1640",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			octagonal_sign: {
				unicode: "1f6d1",
				unicode_alt: "",
				code_decimal: "&#128721;",
				name: "octagonal sign",
				shortname: ":octagonal_sign:",
				category: "symbols",
				emoji_order: "1641",
				aliases: [":stop_sign:"],
				aliases_ascii: [],
				keywords: []
			},
			anchor: {
				unicode: "2693",
				unicode_alt: "2693-fe0f",
				code_decimal: "&#9875;",
				name: "anchor",
				shortname: ":anchor:",
				category: "travel",
				emoji_order: "1642",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "travel", "boat", "vacation"]
			},
			sailboat: {
				unicode: "26f5",
				unicode_alt: "26f5-fe0f",
				code_decimal: "&#9973;",
				name: "sailboat",
				shortname: ":sailboat:",
				category: "travel",
				emoji_order: "1643",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "boat", "vacation"]
			},
			canoe: {
				unicode: "1f6f6",
				unicode_alt: "",
				code_decimal: "&#128758;",
				name: "canoe",
				shortname: ":canoe:",
				category: "travel",
				emoji_order: "1644",
				aliases: [":kayak:"],
				aliases_ascii: [],
				keywords: []
			},
			speedboat: {
				unicode: "1f6a4",
				unicode_alt: "",
				code_decimal: "&#128676;",
				name: "speedboat",
				shortname: ":speedboat:",
				category: "travel",
				emoji_order: "1645",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "boat", "vacation", "tropical"]
			},
			cruise_ship: {
				unicode: "1f6f3",
				unicode_alt: "1f6f3-fe0f",
				code_decimal: "&#128755;",
				name: "passenger ship",
				shortname: ":cruise_ship:",
				category: "travel",
				emoji_order: "1646",
				aliases: [":passenger_ship:"],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "boat", "vacation"]
			},
			ferry: {
				unicode: "26f4",
				unicode_alt: "26f4-fe0f",
				code_decimal: "&#9972;",
				name: "ferry",
				shortname: ":ferry:",
				category: "travel",
				emoji_order: "1647",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "boat", "vacation"]
			},
			motorboat: {
				unicode: "1f6e5",
				unicode_alt: "1f6e5-fe0f",
				code_decimal: "&#128741;",
				name: "motorboat",
				shortname: ":motorboat:",
				category: "travel",
				emoji_order: "1648",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "boat"]
			},
			ship: {
				unicode: "1f6a2",
				unicode_alt: "",
				code_decimal: "&#128674;",
				name: "ship",
				shortname: ":ship:",
				category: "travel",
				emoji_order: "1649",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "boat", "vacation"]
			},
			airplane: {
				unicode: "2708",
				unicode_alt: "2708-fe0f",
				code_decimal: "&#9992;",
				name: "airplane",
				shortname: ":airplane:",
				category: "travel",
				emoji_order: "1650",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "plane", "travel", "vacation", "fly"]
			},
			airplane_small: {
				unicode: "1f6e9",
				unicode_alt: "1f6e9-fe0f",
				code_decimal: "&#128745;",
				name: "small airplane",
				shortname: ":airplane_small:",
				category: "travel",
				emoji_order: "1651",
				aliases: [":small_airplane:"],
				aliases_ascii: [],
				keywords: ["transportation", "plane", "travel", "vacation", "fly"]
			},
			airplane_departure: {
				unicode: "1f6eb",
				unicode_alt: "",
				code_decimal: "&#128747;",
				name: "airplane departure",
				shortname: ":airplane_departure:",
				category: "travel",
				emoji_order: "1652",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "plane", "travel", "vacation", "fly"]
			},
			airplane_arriving: {
				unicode: "1f6ec",
				unicode_alt: "",
				code_decimal: "&#128748;",
				name: "airplane arriving",
				shortname: ":airplane_arriving:",
				category: "travel",
				emoji_order: "1653",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "plane", "travel", "vacation", "fly"]
			},
			seat: {
				unicode: "1f4ba",
				unicode_alt: "",
				code_decimal: "&#128186;",
				name: "seat",
				shortname: ":seat:",
				category: "travel",
				emoji_order: "1654",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "object", "travel", "vacation"]
			},
			helicopter: {
				unicode: "1f681",
				unicode_alt: "",
				code_decimal: "&#128641;",
				name: "helicopter",
				shortname: ":helicopter:",
				category: "travel",
				emoji_order: "1655",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "plane", "travel", "fly"]
			},
			suspension_railway: {
				unicode: "1f69f",
				unicode_alt: "",
				code_decimal: "&#128671;",
				name: "suspension railway",
				shortname: ":suspension_railway:",
				category: "travel",
				emoji_order: "1656",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			mountain_cableway: {
				unicode: "1f6a0",
				unicode_alt: "",
				code_decimal: "&#128672;",
				name: "mountain cableway",
				shortname: ":mountain_cableway:",
				category: "travel",
				emoji_order: "1657",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			aerial_tramway: {
				unicode: "1f6a1",
				unicode_alt: "",
				code_decimal: "&#128673;",
				name: "aerial tramway",
				shortname: ":aerial_tramway:",
				category: "travel",
				emoji_order: "1658",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "travel", "train"]
			},
			rocket: {
				unicode: "1f680",
				unicode_alt: "",
				code_decimal: "&#128640;",
				name: "rocket",
				shortname: ":rocket:",
				category: "travel",
				emoji_order: "1659",
				aliases: [],
				aliases_ascii: [],
				keywords: ["transportation", "object",
					"space", "fly", "blast"]
			},
			satellite_orbital: {
				unicode: "1f6f0",
				unicode_alt: "1f6f0-fe0f",
				code_decimal: "&#128752;",
				name: "satellite",
				shortname: ":satellite_orbital:",
				category: "travel",
				emoji_order: "1660",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			bellhop: {
				unicode: "1f6ce",
				unicode_alt: "1f6ce-fe0f",
				code_decimal: "&#128718;",
				name: "bellhop bell",
				shortname: ":bellhop:",
				category: "objects",
				emoji_order: "1661",
				aliases: [":bellhop_bell:"],
				aliases_ascii: [],
				keywords: ["object"]
			},
			door: {
				unicode: "1f6aa",
				unicode_alt: "",
				code_decimal: "&#128682;",
				name: "door",
				shortname: ":door:",
				category: "objects",
				emoji_order: "1662",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			sleeping_accommodation: {
				unicode: "1f6cc",
				unicode_alt: "",
				code_decimal: "&#128716;",
				name: "sleeping accommodation",
				shortname: ":sleeping_accommodation:",
				category: "objects",
				emoji_order: "1663",
				aliases: [],
				aliases_ascii: [],
				keywords: ["tired"]
			},
			bed: {
				unicode: "1f6cf",
				unicode_alt: "1f6cf-fe0f",
				code_decimal: "&#128719;",
				name: "bed",
				shortname: ":bed:",
				category: "objects",
				emoji_order: "1669",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "tired"]
			},
			couch: {
				unicode: "1f6cb",
				unicode_alt: "1f6cb-fe0f",
				code_decimal: "&#128715;",
				name: "couch and lamp",
				shortname: ":couch:",
				category: "objects",
				emoji_order: "1670",
				aliases: [":couch_and_lamp:"],
				aliases_ascii: [],
				keywords: ["object"]
			},
			toilet: {
				unicode: "1f6bd",
				unicode_alt: "",
				code_decimal: "&#128701;",
				name: "toilet",
				shortname: ":toilet:",
				category: "objects",
				emoji_order: "1671",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "bathroom"]
			},
			shower: {
				unicode: "1f6bf",
				unicode_alt: "",
				code_decimal: "&#128703;",
				name: "shower",
				shortname: ":shower:",
				category: "objects",
				emoji_order: "1672",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "bathroom"]
			},
			bath: {
				unicode: "1f6c0",
				unicode_alt: "",
				code_decimal: "&#128704;",
				name: "bath",
				shortname: ":bath:",
				category: "activity",
				emoji_order: "1673",
				aliases: [],
				aliases_ascii: [],
				keywords: ["bathroom", "tired", "diversity", "steam"]
			},
			bath_tone1: {
				unicode: "1f6c0-1f3fb",
				unicode_alt: "",
				code_decimal: "&#128704;&#127995;",
				name: "bath tone 1",
				shortname: ":bath_tone1:",
				category: "activity",
				emoji_order: "1674",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bath_tone2: {
				unicode: "1f6c0-1f3fc",
				unicode_alt: "",
				code_decimal: "&#128704;&#127996;",
				name: "bath tone 2",
				shortname: ":bath_tone2:",
				category: "activity",
				emoji_order: "1675",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bath_tone3: {
				unicode: "1f6c0-1f3fd",
				unicode_alt: "",
				code_decimal: "&#128704;&#127997;",
				name: "bath tone 3",
				shortname: ":bath_tone3:",
				category: "activity",
				emoji_order: "1676",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bath_tone4: {
				unicode: "1f6c0-1f3fe",
				unicode_alt: "",
				code_decimal: "&#128704;&#127998;",
				name: "bath tone 4",
				shortname: ":bath_tone4:",
				category: "activity",
				emoji_order: "1677",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bath_tone5: {
				unicode: "1f6c0-1f3ff",
				unicode_alt: "",
				code_decimal: "&#128704;&#127999;",
				name: "bath tone 5",
				shortname: ":bath_tone5:",
				category: "activity",
				emoji_order: "1678",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			bathtub: {
				unicode: "1f6c1",
				unicode_alt: "",
				code_decimal: "&#128705;",
				name: "bathtub",
				shortname: ":bathtub:",
				category: "objects",
				emoji_order: "1679",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "bathroom", "tired", "steam"]
			},
			hourglass: {
				unicode: "231b",
				unicode_alt: "231b-fe0f",
				code_decimal: "&#8987;",
				name: "hourglass",
				shortname: ":hourglass:",
				category: "objects",
				emoji_order: "1680",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "time"]
			},
			hourglass_flowing_sand: {
				unicode: "23f3",
				unicode_alt: "",
				code_decimal: "&#9203;",
				name: "hourglass with flowing sand",
				shortname: ":hourglass_flowing_sand:",
				category: "objects",
				emoji_order: "1681",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "time"]
			},
			watch: {
				unicode: "231a",
				unicode_alt: "231a-fe0f",
				code_decimal: "&#8986;",
				name: "watch",
				shortname: ":watch:",
				category: "objects",
				emoji_order: "1682",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "time"]
			},
			alarm_clock: {
				unicode: "23f0",
				unicode_alt: "",
				code_decimal: "&#9200;",
				name: "alarm clock",
				shortname: ":alarm_clock:",
				category: "objects",
				emoji_order: "1683",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "time"]
			},
			stopwatch: {
				unicode: "23f1",
				unicode_alt: "23f1-fe0f",
				code_decimal: "&#9201;",
				name: "stopwatch",
				shortname: ":stopwatch:",
				category: "objects",
				emoji_order: "1684",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "time"]
			},
			timer: {
				unicode: "23f2",
				unicode_alt: "23f2-fe0f",
				code_decimal: "&#9202;",
				name: "timer clock",
				shortname: ":timer:",
				category: "objects",
				emoji_order: "1685",
				aliases: [":timer_clock:"],
				aliases_ascii: [],
				keywords: ["object", "time"]
			},
			clock: {
				unicode: "1f570",
				unicode_alt: "1f570-fe0f",
				code_decimal: "&#128368;",
				name: "mantlepiece clock",
				shortname: ":clock:",
				category: "objects",
				emoji_order: "1686",
				aliases: [":mantlepiece_clock:"],
				aliases_ascii: [],
				keywords: ["object", "time"]
			},
			clock12: {
				unicode: "1f55b",
				unicode_alt: "",
				code_decimal: "&#128347;",
				name: "clock face twelve oclock",
				shortname: ":clock12:",
				category: "symbols",
				emoji_order: "1687",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock1230: {
				unicode: "1f567",
				unicode_alt: "",
				code_decimal: "&#128359;",
				name: "clock face twelve-thirty",
				shortname: ":clock1230:",
				category: "symbols",
				emoji_order: "1688",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol",
					"time"]
			},
			clock1: {
				unicode: "1f550",
				unicode_alt: "",
				code_decimal: "&#128336;",
				name: "clock face one oclock",
				shortname: ":clock1:",
				category: "symbols",
				emoji_order: "1689",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock130: {
				unicode: "1f55c",
				unicode_alt: "",
				code_decimal: "&#128348;",
				name: "clock face one-thirty",
				shortname: ":clock130:",
				category: "symbols",
				emoji_order: "1690",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock2: {
				unicode: "1f551",
				unicode_alt: "",
				code_decimal: "&#128337;",
				name: "clock face two oclock",
				shortname: ":clock2:",
				category: "symbols",
				emoji_order: "1691",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock230: {
				unicode: "1f55d",
				unicode_alt: "",
				code_decimal: "&#128349;",
				name: "clock face two-thirty",
				shortname: ":clock230:",
				category: "symbols",
				emoji_order: "1692",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock3: {
				unicode: "1f552",
				unicode_alt: "",
				code_decimal: "&#128338;",
				name: "clock face three oclock",
				shortname: ":clock3:",
				category: "symbols",
				emoji_order: "1693",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock330: {
				unicode: "1f55e",
				unicode_alt: "",
				code_decimal: "&#128350;",
				name: "clock face three-thirty",
				shortname: ":clock330:",
				category: "symbols",
				emoji_order: "1694",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock4: {
				unicode: "1f553",
				unicode_alt: "",
				code_decimal: "&#128339;",
				name: "clock face four oclock",
				shortname: ":clock4:",
				category: "symbols",
				emoji_order: "1695",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock430: {
				unicode: "1f55f",
				unicode_alt: "",
				code_decimal: "&#128351;",
				name: "clock face four-thirty",
				shortname: ":clock430:",
				category: "symbols",
				emoji_order: "1696",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock5: {
				unicode: "1f554",
				unicode_alt: "",
				code_decimal: "&#128340;",
				name: "clock face five oclock",
				shortname: ":clock5:",
				category: "symbols",
				emoji_order: "1697",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock530: {
				unicode: "1f560",
				unicode_alt: "",
				code_decimal: "&#128352;",
				name: "clock face five-thirty",
				shortname: ":clock530:",
				category: "symbols",
				emoji_order: "1698",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock6: {
				unicode: "1f555",
				unicode_alt: "",
				code_decimal: "&#128341;",
				name: "clock face six oclock",
				shortname: ":clock6:",
				category: "symbols",
				emoji_order: "1699",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock630: {
				unicode: "1f561",
				unicode_alt: "",
				code_decimal: "&#128353;",
				name: "clock face six-thirty",
				shortname: ":clock630:",
				category: "symbols",
				emoji_order: "1700",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock7: {
				unicode: "1f556",
				unicode_alt: "",
				code_decimal: "&#128342;",
				name: "clock face seven oclock",
				shortname: ":clock7:",
				category: "symbols",
				emoji_order: "1701",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock730: {
				unicode: "1f562",
				unicode_alt: "",
				code_decimal: "&#128354;",
				name: "clock face seven-thirty",
				shortname: ":clock730:",
				category: "symbols",
				emoji_order: "1702",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock8: {
				unicode: "1f557",
				unicode_alt: "",
				code_decimal: "&#128343;",
				name: "clock face eight oclock",
				shortname: ":clock8:",
				category: "symbols",
				emoji_order: "1703",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock830: {
				unicode: "1f563",
				unicode_alt: "",
				code_decimal: "&#128355;",
				name: "clock face eight-thirty",
				shortname: ":clock830:",
				category: "symbols",
				emoji_order: "1704",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock9: {
				unicode: "1f558",
				unicode_alt: "",
				code_decimal: "&#128344;",
				name: "clock face nine oclock",
				shortname: ":clock9:",
				category: "symbols",
				emoji_order: "1705",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol",
					"time"]
			},
			clock930: {
				unicode: "1f564",
				unicode_alt: "",
				code_decimal: "&#128356;",
				name: "clock face nine-thirty",
				shortname: ":clock930:",
				category: "symbols",
				emoji_order: "1706",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock10: {
				unicode: "1f559",
				unicode_alt: "",
				code_decimal: "&#128345;",
				name: "clock face ten oclock",
				shortname: ":clock10:",
				category: "symbols",
				emoji_order: "1707",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock1030: {
				unicode: "1f565",
				unicode_alt: "",
				code_decimal: "&#128357;",
				name: "clock face ten-thirty",
				shortname: ":clock1030:",
				category: "symbols",
				emoji_order: "1708",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock11: {
				unicode: "1f55a",
				unicode_alt: "",
				code_decimal: "&#128346;",
				name: "clock face eleven oclock",
				shortname: ":clock11:",
				category: "symbols",
				emoji_order: "1709",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			clock1130: {
				unicode: "1f566",
				unicode_alt: "",
				code_decimal: "&#128358;",
				name: "clock face eleven-thirty",
				shortname: ":clock1130:",
				category: "symbols",
				emoji_order: "1710",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "time"]
			},
			new_moon: {
				unicode: "1f311",
				unicode_alt: "",
				code_decimal: "&#127761;",
				name: "new moon symbol",
				shortname: ":new_moon:",
				category: "nature",
				emoji_order: "1711",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			waxing_crescent_moon: {
				unicode: "1f312",
				unicode_alt: "",
				code_decimal: "&#127762;",
				name: "waxing crescent moon symbol",
				shortname: ":waxing_crescent_moon:",
				category: "nature",
				emoji_order: "1712",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			first_quarter_moon: {
				unicode: "1f313",
				unicode_alt: "",
				code_decimal: "&#127763;",
				name: "first quarter moon symbol",
				shortname: ":first_quarter_moon:",
				category: "nature",
				emoji_order: "1713",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			waxing_gibbous_moon: {
				unicode: "1f314",
				unicode_alt: "",
				code_decimal: "&#127764;",
				name: "waxing gibbous moon symbol",
				shortname: ":waxing_gibbous_moon:",
				category: "nature",
				emoji_order: "1714",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			full_moon: {
				unicode: "1f315",
				unicode_alt: "",
				code_decimal: "&#127765;",
				name: "full moon symbol",
				shortname: ":full_moon:",
				category: "nature",
				emoji_order: "1715",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			waning_gibbous_moon: {
				unicode: "1f316",
				unicode_alt: "",
				code_decimal: "&#127766;",
				name: "waning gibbous moon symbol",
				shortname: ":waning_gibbous_moon:",
				category: "nature",
				emoji_order: "1716",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			last_quarter_moon: {
				unicode: "1f317",
				unicode_alt: "",
				code_decimal: "&#127767;",
				name: "last quarter moon symbol",
				shortname: ":last_quarter_moon:",
				category: "nature",
				emoji_order: "1717",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			waning_crescent_moon: {
				unicode: "1f318",
				unicode_alt: "",
				code_decimal: "&#127768;",
				name: "waning crescent moon symbol",
				shortname: ":waning_crescent_moon:",
				category: "nature",
				emoji_order: "1718",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			crescent_moon: {
				unicode: "1f319",
				unicode_alt: "",
				code_decimal: "&#127769;",
				name: "crescent moon",
				shortname: ":crescent_moon:",
				category: "nature",
				emoji_order: "1719",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "goodnight", "moon"]
			},
			new_moon_with_face: {
				unicode: "1f31a",
				unicode_alt: "",
				code_decimal: "&#127770;",
				name: "new moon with face",
				shortname: ":new_moon_with_face:",
				category: "nature",
				emoji_order: "1720",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "goodnight", "moon"]
			},
			first_quarter_moon_with_face: {
				unicode: "1f31b",
				unicode_alt: "",
				code_decimal: "&#127771;",
				name: "first quarter moon with face",
				shortname: ":first_quarter_moon_with_face:",
				category: "nature",
				emoji_order: "1721",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			last_quarter_moon_with_face: {
				unicode: "1f31c",
				unicode_alt: "",
				code_decimal: "&#127772;",
				name: "last quarter moon with face",
				shortname: ":last_quarter_moon_with_face:",
				category: "nature",
				emoji_order: "1722",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "moon"]
			},
			thermometer: {
				unicode: "1f321",
				unicode_alt: "1f321-fe0f",
				code_decimal: "&#127777;",
				name: "thermometer",
				shortname: ":thermometer:",
				category: "objects",
				emoji_order: "1723",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "science", "health", "hot"]
			},
			sunny: {
				unicode: "2600",
				unicode_alt: "2600-fe0f",
				code_decimal: "&#9728;",
				name: "black sun with rays",
				shortname: ":sunny:",
				category: "nature",
				emoji_order: "1724",
				aliases: [],
				aliases_ascii: [],
				keywords: "weather sky day sun hot morning".split(" ")
			},
			full_moon_with_face: {
				unicode: "1f31d",
				unicode_alt: "",
				code_decimal: "&#127773;",
				name: "full moon with face",
				shortname: ":full_moon_with_face:",
				category: "nature",
				emoji_order: "1725",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "goodnight", "moon"]
			},
			sun_with_face: {
				unicode: "1f31e",
				unicode_alt: "",
				code_decimal: "&#127774;",
				name: "sun with face",
				shortname: ":sun_with_face:",
				category: "nature",
				emoji_order: "1726",
				aliases: [],
				aliases_ascii: [],
				keywords: ["sky", "day", "sun", "hump day", "morning"]
			},
			star: {
				unicode: "2b50",
				unicode_alt: "2b50-fe0f",
				code_decimal: "&#11088;",
				name: "white medium star",
				shortname: ":star:",
				category: "nature",
				emoji_order: "1727",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space",
					"sky", "star"]
			},
			star2: {
				unicode: "1f31f",
				unicode_alt: "",
				code_decimal: "&#127775;",
				name: "glowing star",
				shortname: ":star2:",
				category: "nature",
				emoji_order: "1728",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky", "star"]
			},
			stars: {
				unicode: "1f320",
				unicode_alt: "",
				code_decimal: "&#127776;",
				name: "shooting star",
				shortname: ":stars:",
				category: "travel",
				emoji_order: "1729",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space"]
			},
			cloud: {
				unicode: "2601",
				unicode_alt: "2601-fe0f",
				code_decimal: "&#9729;",
				name: "cloud",
				shortname: ":cloud:",
				category: "nature",
				emoji_order: "1730",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather", "sky", "cloud", "cold", "rain"]
			},
			partly_sunny: {
				unicode: "26c5",
				unicode_alt: "26c5-fe0f",
				code_decimal: "&#9925;",
				name: "sun behind cloud",
				shortname: ":partly_sunny:",
				category: "nature",
				emoji_order: "1731",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather", "sky", "cloud", "sun"]
			},
			thunder_cloud_rain: {
				unicode: "26c8",
				unicode_alt: "26c8-fe0f",
				code_decimal: "&#9928;",
				name: "thunder cloud and rain",
				shortname: ":thunder_cloud_rain:",
				category: "nature",
				emoji_order: "1732",
				aliases: [":thunder_cloud_and_rain:"],
				aliases_ascii: [],
				keywords: ["weather", "sky", "cloud", "cold", "rain"]
			},
			white_sun_small_cloud: {
				unicode: "1f324",
				unicode_alt: "1f324-fe0f",
				code_decimal: "&#127780;",
				name: "white sun with small cloud",
				shortname: ":white_sun_small_cloud:",
				category: "nature",
				emoji_order: "1733",
				aliases: [":white_sun_with_small_cloud:"],
				aliases_ascii: [],
				keywords: ["weather", "sky", "cloud", "sun"]
			},
			white_sun_cloud: {
				unicode: "1f325",
				unicode_alt: "1f325-fe0f",
				code_decimal: "&#127781;",
				name: "white sun behind cloud",
				shortname: ":white_sun_cloud:",
				category: "nature",
				emoji_order: "1734",
				aliases: [":white_sun_behind_cloud:"],
				aliases_ascii: [],
				keywords: ["weather", "sky", "cloud", "cold", "sun"]
			},
			white_sun_rain_cloud: {
				unicode: "1f326",
				unicode_alt: "1f326-fe0f",
				code_decimal: "&#127782;",
				name: "white sun behind cloud with rain",
				shortname: ":white_sun_rain_cloud:",
				category: "nature",
				emoji_order: "1735",
				aliases: [":white_sun_behind_cloud_with_rain:"],
				aliases_ascii: [],
				keywords: "weather sky cloud cold rain sun".split(" ")
			},
			cloud_rain: {
				unicode: "1f327",
				unicode_alt: "1f327-fe0f",
				code_decimal: "&#127783;",
				name: "cloud with rain",
				shortname: ":cloud_rain:",
				category: "nature",
				emoji_order: "1736",
				aliases: [":cloud_with_rain:"],
				aliases_ascii: [],
				keywords: "weather winter sky cloud cold rain".split(" ")
			},
			cloud_snow: {
				unicode: "1f328",
				unicode_alt: "1f328-fe0f",
				code_decimal: "&#127784;",
				name: "cloud with snow",
				shortname: ":cloud_snow:",
				category: "nature",
				emoji_order: "1737",
				aliases: [":cloud_with_snow:"],
				aliases_ascii: [],
				keywords: "weather winter sky cloud cold snow".split(" ")
			},
			cloud_lightning: {
				unicode: "1f329",
				unicode_alt: "1f329-fe0f",
				code_decimal: "&#127785;",
				name: "cloud with lightning",
				shortname: ":cloud_lightning:",
				category: "nature",
				emoji_order: "1738",
				aliases: [":cloud_with_lightning:"],
				aliases_ascii: [],
				keywords: ["weather", "sky", "cloud", "cold", "rain"]
			},
			cloud_tornado: {
				unicode: "1f32a",
				unicode_alt: "1f32a-fe0f",
				code_decimal: "&#127786;",
				name: "cloud with tornado",
				shortname: ":cloud_tornado:",
				category: "nature",
				emoji_order: "1739",
				aliases: [":cloud_with_tornado:"],
				aliases_ascii: [],
				keywords: ["weather", "sky", "cold"]
			},
			fog: {
				unicode: "1f32b",
				unicode_alt: "1f32b-fe0f",
				code_decimal: "&#127787;",
				name: "fog",
				shortname: ":fog:",
				category: "nature",
				emoji_order: "1740",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather", "sky", "cold"]
			},
			wind_blowing_face: {
				unicode: "1f32c",
				unicode_alt: "1f32c-fe0f",
				code_decimal: "&#127788;",
				name: "wind blowing face",
				shortname: ":wind_blowing_face:",
				category: "nature",
				emoji_order: "1741",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather", "cold"]
			},
			cyclone: {
				unicode: "1f300",
				unicode_alt: "",
				code_decimal: "&#127744;",
				name: "cyclone",
				shortname: ":cyclone:",
				category: "symbols",
				emoji_order: "1742",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "drugs"]
			},
			rainbow: {
				unicode: "1f308",
				unicode_alt: "",
				code_decimal: "&#127752;",
				name: "rainbow",
				shortname: ":rainbow:",
				category: "travel",
				emoji_order: "1743",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather", "gay", "sky", "rain"]
			},
			closed_umbrella: {
				unicode: "1f302",
				unicode_alt: "",
				code_decimal: "&#127746;",
				name: "closed umbrella",
				shortname: ":closed_umbrella:",
				category: "people",
				emoji_order: "1744",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "sky", "rain", "accessories"]
			},
			umbrella2: {
				unicode: "2602",
				unicode_alt: "2602-fe0f",
				code_decimal: "&#9730;",
				name: "umbrella",
				shortname: ":umbrella2:",
				category: "nature",
				emoji_order: "1745",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather", "object", "sky", "cold"]
			},
			umbrella: {
				unicode: "2614",
				unicode_alt: "2614-fe0f",
				code_decimal: "&#9748;",
				name: "umbrella with rain drops",
				shortname: ":umbrella:",
				category: "nature",
				emoji_order: "1746",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather", "sky", "cold", "rain"]
			},
			beach_umbrella: {
				unicode: "26f1",
				unicode_alt: "26f1-fe0f",
				code_decimal: "&#9969;",
				name: "umbrella on ground",
				shortname: ":beach_umbrella:",
				category: "objects",
				emoji_order: "1747",
				aliases: [":umbrella_on_ground:"],
				aliases_ascii: [],
				keywords: ["travel", "vacation", "tropical"]
			},
			zap: {
				unicode: "26a1",
				unicode_alt: "26a1-fe0f",
				code_decimal: "&#9889;",
				name: "high voltage sign",
				shortname: ":zap:",
				category: "nature",
				emoji_order: "1748",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather",
					"sky", "diarrhea"]
			},
			snowflake: {
				unicode: "2744",
				unicode_alt: "2744-fe0f",
				code_decimal: "&#10052;",
				name: "snowflake",
				shortname: ":snowflake:",
				category: "nature",
				emoji_order: "1749",
				aliases: [],
				aliases_ascii: [],
				keywords: "weather winter sky holidays cold snow".split(" ")
			},
			snowman2: {
				unicode: "2603",
				unicode_alt: "2603-fe0f",
				code_decimal: "&#9731;",
				name: "snowman",
				shortname: ":snowman2:",
				category: "nature",
				emoji_order: "1750",
				aliases: [],
				aliases_ascii: [],
				keywords: "weather winter holidays christmas cold snow".split(" ")
			},
			snowman: {
				unicode: "26c4",
				unicode_alt: "26c4-fe0f",
				code_decimal: "&#9924;",
				name: "snowman without snow",
				shortname: ":snowman:",
				category: "nature",
				emoji_order: "1751",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather", "winter", "holidays", "cold", "snow"]
			},
			comet: {
				unicode: "2604",
				unicode_alt: "2604-fe0f",
				code_decimal: "&#9732;",
				name: "comet",
				shortname: ":comet:",
				category: "nature",
				emoji_order: "1752",
				aliases: [],
				aliases_ascii: [],
				keywords: ["space", "sky"]
			},
			fire: {
				unicode: "1f525",
				unicode_alt: "",
				code_decimal: "&#128293;",
				name: "fire",
				shortname: ":fire:",
				category: "nature",
				emoji_order: "1753",
				aliases: [":flame:"],
				aliases_ascii: [],
				keywords: ["wth", "hot"]
			},
			droplet: {
				unicode: "1f4a7",
				unicode_alt: "",
				code_decimal: "&#128167;",
				name: "droplet",
				shortname: ":droplet:",
				category: "nature",
				emoji_order: "1754",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather", "sky", "rain"]
			},
			ocean: {
				unicode: "1f30a",
				unicode_alt: "",
				code_decimal: "&#127754;",
				name: "water wave",
				shortname: ":ocean:",
				category: "nature",
				emoji_order: "1755",
				aliases: [],
				aliases_ascii: [],
				keywords: ["weather",
					"boat", "tropical", "swim"]
			},
			jack_o_lantern: {
				unicode: "1f383",
				unicode_alt: "",
				code_decimal: "&#127875;",
				name: "jack-o-lantern",
				shortname: ":jack_o_lantern:",
				category: "nature",
				emoji_order: "1756",
				aliases: [],
				aliases_ascii: [],
				keywords: ["holidays", "halloween"]
			},
			christmas_tree: {
				unicode: "1f384",
				unicode_alt: "",
				code_decimal: "&#127876;",
				name: "christmas tree",
				shortname: ":christmas_tree:",
				category: "nature",
				emoji_order: "1757",
				aliases: [],
				aliases_ascii: [],
				keywords: ["plant", "holidays", "christmas", "trees"]
			},
			fireworks: {
				unicode: "1f386",
				unicode_alt: "",
				code_decimal: "&#127878;",
				name: "fireworks",
				shortname: ":fireworks:",
				category: "travel",
				emoji_order: "1758",
				aliases: [],
				aliases_ascii: [],
				keywords: ["parties"]
			},
			sparkler: {
				unicode: "1f387",
				unicode_alt: "",
				code_decimal: "&#127879;",
				name: "firework sparkler",
				shortname: ":sparkler:",
				category: "travel",
				emoji_order: "1759",
				aliases: [],
				aliases_ascii: [],
				keywords: ["parties"]
			},
			sparkles: {
				unicode: "2728",
				unicode_alt: "",
				code_decimal: "&#10024;",
				name: "sparkles",
				shortname: ":sparkles:",
				category: "nature",
				emoji_order: "1760",
				aliases: [],
				aliases_ascii: [],
				keywords: ["star", "girls night"]
			},
			balloon: {
				unicode: "1f388",
				unicode_alt: "",
				code_decimal: "&#127880;",
				name: "balloon",
				shortname: ":balloon:",
				category: "objects",
				emoji_order: "1761",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "birthday", "good", "parties"]
			},
			tada: {
				unicode: "1f389",
				unicode_alt: "",
				code_decimal: "&#127881;",
				name: "party popper",
				shortname: ":tada:",
				category: "objects",
				emoji_order: "1762",
				aliases: [],
				aliases_ascii: [],
				keywords: "object;birthday;holidays;cheers;good;girls night;boys night;parties".split(";")
			},
			confetti_ball: {
				unicode: "1f38a",
				unicode_alt: "",
				code_decimal: "&#127882;",
				name: "confetti ball",
				shortname: ":confetti_ball:",
				category: "objects",
				emoji_order: "1763",
				aliases: [],
				aliases_ascii: [],
				keywords: "object;birthday;holidays;cheers;girls night;boys night;parties".split(";")
			},
			tanabata_tree: {
				unicode: "1f38b",
				unicode_alt: "",
				code_decimal: "&#127883;",
				name: "tanabata tree",
				shortname: ":tanabata_tree:",
				category: "nature",
				emoji_order: "1764",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant", "trees"]
			},
			bamboo: {
				unicode: "1f38d",
				unicode_alt: "",
				code_decimal: "&#127885;",
				name: "pine decoration",
				shortname: ":bamboo:",
				category: "nature",
				emoji_order: "1765",
				aliases: [],
				aliases_ascii: [],
				keywords: ["nature", "plant"]
			},
			dolls: {
				unicode: "1f38e",
				unicode_alt: "",
				code_decimal: "&#127886;",
				name: "japanese dolls",
				shortname: ":dolls:",
				category: "objects",
				emoji_order: "1766",
				aliases: [],
				aliases_ascii: [],
				keywords: ["people", "japan"]
			},
			flags: {
				unicode: "1f38f",
				unicode_alt: "",
				code_decimal: "&#127887;",
				name: "carp streamer",
				shortname: ":flags:",
				category: "objects",
				emoji_order: "1767",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "japan"]
			},
			wind_chime: {
				unicode: "1f390",
				unicode_alt: "",
				code_decimal: "&#127888;",
				name: "wind chime",
				shortname: ":wind_chime:",
				category: "objects",
				emoji_order: "1768",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "japan"]
			},
			rice_scene: {
				unicode: "1f391",
				unicode_alt: "",
				code_decimal: "&#127889;",
				name: "moon viewing ceremony",
				shortname: ":rice_scene:",
				category: "travel",
				emoji_order: "1769",
				aliases: [],
				aliases_ascii: [],
				keywords: ["places", "space", "sky",
					"travel"]
			},
			ribbon: {
				unicode: "1f380",
				unicode_alt: "",
				code_decimal: "&#127872;",
				name: "ribbon",
				shortname: ":ribbon:",
				category: "objects",
				emoji_order: "1770",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "gift", "birthday"]
			},
			gift: {
				unicode: "1f381",
				unicode_alt: "",
				code_decimal: "&#127873;",
				name: "wrapped present",
				shortname: ":gift:",
				category: "objects",
				emoji_order: "1771",
				aliases: [],
				aliases_ascii: [],
				keywords: "object gift birthday holidays christmas parties".split(" ")
			},
			reminder_ribbon: {
				unicode: "1f397",
				unicode_alt: "1f397-fe0f",
				code_decimal: "&#127895;",
				name: "reminder ribbon",
				shortname: ":reminder_ribbon:",
				category: "activity",
				emoji_order: "1772",
				aliases: [],
				aliases_ascii: [],
				keywords: ["award"]
			},
			tickets: {
				unicode: "1f39f",
				unicode_alt: "1f39f-fe0f",
				code_decimal: "&#127903;",
				name: "admission tickets",
				shortname: ":tickets:",
				category: "activity",
				emoji_order: "1773",
				aliases: [":admission_tickets:"],
				aliases_ascii: [],
				keywords: ["theatre", "movie", "parties"]
			},
			ticket: {
				unicode: "1f3ab",
				unicode_alt: "",
				code_decimal: "&#127915;",
				name: "ticket",
				shortname: ":ticket:",
				category: "activity",
				emoji_order: "1774",
				aliases: [],
				aliases_ascii: [],
				keywords: ["theatre", "movie", "parties"]
			},
			military_medal: {
				unicode: "1f396",
				unicode_alt: "1f396-fe0f",
				code_decimal: "&#127894;",
				name: "military medal",
				shortname: ":military_medal:",
				category: "activity",
				emoji_order: "1775",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "award", "win"]
			},
			trophy: {
				unicode: "1f3c6",
				unicode_alt: "",
				code_decimal: "&#127942;",
				name: "trophy",
				shortname: ":trophy:",
				category: "activity",
				emoji_order: "1776",
				aliases: [],
				aliases_ascii: [],
				keywords: "object game award win perfect parties".split(" ")
			},
			medal: {
				unicode: "1f3c5",
				unicode_alt: "",
				code_decimal: "&#127941;",
				name: "sports medal",
				shortname: ":medal:",
				category: "activity",
				emoji_order: "1777",
				aliases: [":sports_medal:"],
				aliases_ascii: [],
				keywords: ["object", "award", "sport", "win", "perfect"]
			},
			first_place: {
				unicode: "1f947",
				unicode_alt: "",
				code_decimal: "&#129351;",
				name: "first place medal",
				shortname: ":first_place:",
				category: "activity",
				emoji_order: "1778",
				aliases: [":first_place_medal:"],
				aliases_ascii: [],
				keywords: []
			},
			second_place: {
				unicode: "1f948",
				unicode_alt: "",
				code_decimal: "&#129352;",
				name: "second place medal",
				shortname: ":second_place:",
				category: "activity",
				emoji_order: "1779",
				aliases: [":second_place_medal:"],
				aliases_ascii: [],
				keywords: []
			},
			third_place: {
				unicode: "1f949",
				unicode_alt: "",
				code_decimal: "&#129353;",
				name: "third place medal",
				shortname: ":third_place:",
				category: "activity",
				emoji_order: "1780",
				aliases: [":third_place_medal:"],
				aliases_ascii: [],
				keywords: []
			},
			soccer: {
				unicode: "26bd",
				unicode_alt: "26bd-fe0f",
				code_decimal: "&#9917;",
				name: "soccer ball",
				shortname: ":soccer:",
				category: "activity",
				emoji_order: "1781",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "ball", "sport", "soccer", "football"]
			},
			baseball: {
				unicode: "26be",
				unicode_alt: "26be-fe0f",
				code_decimal: "&#9918;",
				name: "baseball",
				shortname: ":baseball:",
				category: "activity",
				emoji_order: "1782",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "ball", "sport", "baseball"]
			},
			basketball: {
				unicode: "1f3c0",
				unicode_alt: "",
				code_decimal: "&#127936;",
				name: "basketball and hoop",
				shortname: ":basketball:",
				category: "activity",
				emoji_order: "1783",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "ball", "sport", "basketball"]
			},
			volleyball: {
				unicode: "1f3d0",
				unicode_alt: "",
				code_decimal: "&#127952;",
				name: "volleyball",
				shortname: ":volleyball:",
				category: "activity",
				emoji_order: "1784",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "ball", "sport", "volleyball"]
			},
			football: {
				unicode: "1f3c8",
				unicode_alt: "",
				code_decimal: "&#127944;",
				name: "american football",
				shortname: ":football:",
				category: "activity",
				emoji_order: "1785",
				aliases: [],
				aliases_ascii: [],
				keywords: ["america", "game", "ball", "sport", "football"]
			},
			rugby_football: {
				unicode: "1f3c9",
				unicode_alt: "",
				code_decimal: "&#127945;",
				name: "rugby football",
				shortname: ":rugby_football:",
				category: "activity",
				emoji_order: "1786",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "sport", "football"]
			},
			tennis: {
				unicode: "1f3be",
				unicode_alt: "",
				code_decimal: "&#127934;",
				name: "tennis racquet and ball",
				shortname: ":tennis:",
				category: "activity",
				emoji_order: "1787",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game",
					"ball", "sport", "tennis"]
			},
			"8ball": {
				unicode: "1f3b1",
				unicode_alt: "",
				code_decimal: "&#127921;",
				name: "billiards",
				shortname: ":8ball:",
				category: "activity",
				emoji_order: "1788",
				aliases: [],
				aliases_ascii: [],
				keywords: "game;ball;sport;billiards;luck;boys night".split(";")
			},
			bowling: {
				unicode: "1f3b3",
				unicode_alt: "",
				code_decimal: "&#127923;",
				name: "bowling",
				shortname: ":bowling:",
				category: "activity",
				emoji_order: "1789",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "ball", "sport", "boys night"]
			},
			cricket: {
				unicode: "1f3cf",
				unicode_alt: "",
				code_decimal: "&#127951;",
				name: "cricket bat and ball",
				shortname: ":cricket:",
				category: "activity",
				emoji_order: "1790",
				aliases: [":cricket_bat_ball:"],
				aliases_ascii: [],
				keywords: ["ball", "sport", "cricket"]
			},
			field_hockey: {
				unicode: "1f3d1",
				unicode_alt: "",
				code_decimal: "&#127953;",
				name: "field hockey stick and ball",
				shortname: ":field_hockey:",
				category: "activity",
				emoji_order: "1791",
				aliases: [],
				aliases_ascii: [],
				keywords: ["ball", "sport", "hockey"]
			},
			hockey: {
				unicode: "1f3d2",
				unicode_alt: "",
				code_decimal: "&#127954;",
				name: "ice hockey stick and puck",
				shortname: ":hockey:",
				category: "activity",
				emoji_order: "1792",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "sport", "hockey"]
			},
			ping_pong: {
				unicode: "1f3d3",
				unicode_alt: "",
				code_decimal: "&#127955;",
				name: "table tennis paddle and ball",
				shortname: ":ping_pong:",
				category: "activity",
				emoji_order: "1793",
				aliases: [":table_tennis:"],
				aliases_ascii: [],
				keywords: ["game", "ball", "sport", "ping pong"]
			},
			badminton: {
				unicode: "1f3f8",
				unicode_alt: "",
				code_decimal: "&#127992;",
				name: "badminton racquet",
				shortname: ":badminton:",
				category: "activity",
				emoji_order: "1794",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "sport", "badminton"]
			},
			boxing_glove: {
				unicode: "1f94a",
				unicode_alt: "",
				code_decimal: "&#129354;",
				name: "boxing glove",
				shortname: ":boxing_glove:",
				category: "activity",
				emoji_order: "1795",
				aliases: [":boxing_gloves:"],
				aliases_ascii: [],
				keywords: []
			},
			martial_arts_uniform: {
				unicode: "1f94b",
				unicode_alt: "",
				code_decimal: "&#129355;",
				name: "martial arts uniform",
				shortname: ":martial_arts_uniform:",
				category: "activity",
				emoji_order: "1796",
				aliases: [":karate_uniform:"],
				aliases_ascii: [],
				keywords: []
			},
			goal: {
				unicode: "1f945",
				unicode_alt: "",
				code_decimal: "&#129349;",
				name: "goal net",
				shortname: ":goal:",
				category: "activity",
				emoji_order: "1797",
				aliases: [":goal_net:"],
				aliases_ascii: [],
				keywords: []
			},
			dart: {
				unicode: "1f3af",
				unicode_alt: "",
				code_decimal: "&#127919;",
				name: "direct hit",
				shortname: ":dart:",
				category: "activity",
				emoji_order: "1798",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "sport", "boys night"]
			},
			golf: {
				unicode: "26f3",
				unicode_alt: "26f3-fe0f",
				code_decimal: "&#9971;",
				name: "flag in hole",
				shortname: ":golf:",
				category: "activity",
				emoji_order: "1799",
				aliases: [],
				aliases_ascii: [],
				keywords: ["game", "ball", "vacation", "sport", "golf"]
			},
			ice_skate: {
				unicode: "26f8",
				unicode_alt: "26f8-fe0f",
				code_decimal: "&#9976;",
				name: "ice skate",
				shortname: ":ice_skate:",
				category: "activity",
				emoji_order: "1800",
				aliases: [],
				aliases_ascii: [],
				keywords: ["cold", "sport", "ice skating"]
			},
			fishing_pole_and_fish: {
				unicode: "1f3a3",
				unicode_alt: "",
				code_decimal: "&#127907;",
				name: "fishing pole and fish",
				shortname: ":fishing_pole_and_fish:",
				category: "activity",
				emoji_order: "1801",
				aliases: [],
				aliases_ascii: [],
				keywords: ["vacation", "sport", "fishing"]
			},
			running_shirt_with_sash: {
				unicode: "1f3bd",
				unicode_alt: "",
				code_decimal: "&#127933;",
				name: "running shirt with sash",
				shortname: ":running_shirt_with_sash:",
				category: "activity",
				emoji_order: "1802",
				aliases: [],
				aliases_ascii: [],
				keywords: ["award"]
			},
			ski: {
				unicode: "1f3bf",
				unicode_alt: "",
				code_decimal: "&#127935;",
				name: "ski and ski boot",
				shortname: ":ski:",
				category: "activity",
				emoji_order: "1803",
				aliases: [],
				aliases_ascii: [],
				keywords: ["cold", "sport", "skiing"]
			},
			video_game: {
				unicode: "1f3ae",
				unicode_alt: "",
				code_decimal: "&#127918;",
				name: "video game",
				shortname: ":video_game:",
				category: "activity",
				emoji_order: "1804",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "game", "boys night"]
			},
			joystick: {
				unicode: "1f579",
				unicode_alt: "1f579-fe0f",
				code_decimal: "&#128377;",
				name: "joystick",
				shortname: ":joystick:",
				category: "objects",
				emoji_order: "1805",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics",
					"game", "boys night"]
			},
			game_die: {
				unicode: "1f3b2",
				unicode_alt: "",
				code_decimal: "&#127922;",
				name: "game die",
				shortname: ":game_die:",
				category: "activity",
				emoji_order: "1806",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "game", "boys night"]
			},
			spades: {
				unicode: "2660",
				unicode_alt: "2660-fe0f",
				code_decimal: "&spades;",
				name: "black spade suit",
				shortname: ":spades:",
				category: "symbols",
				emoji_order: "1807",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "game"]
			},
			hearts: {
				unicode: "2665",
				unicode_alt: "2665-fe0f",
				code_decimal: "&hearts;",
				name: "black heart suit",
				shortname: ":hearts:",
				category: "symbols",
				emoji_order: "1808",
				aliases: [],
				aliases_ascii: [],
				keywords: ["love", "symbol", "game"]
			},
			diamonds: {
				unicode: "2666",
				unicode_alt: "2666-fe0f",
				code_decimal: "&diams;",
				name: "black diamond suit",
				shortname: ":diamonds:",
				category: "symbols",
				emoji_order: "1809",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "game"]
			},
			clubs: {
				unicode: "2663",
				unicode_alt: "2663-fe0f",
				code_decimal: "&clubs;",
				name: "black club suit",
				shortname: ":clubs:",
				category: "symbols",
				emoji_order: "1810",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "game"]
			},
			black_joker: {
				unicode: "1f0cf",
				unicode_alt: "",
				code_decimal: "&#127183;",
				name: "playing card black joker",
				shortname: ":black_joker:",
				category: "symbols",
				emoji_order: "1811",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "symbol", "game"]
			},
			mahjong: {
				unicode: "1f004",
				unicode_alt: "1f004-fe0f",
				code_decimal: "&#126980;",
				name: "mahjong tile red dragon",
				shortname: ":mahjong:",
				category: "symbols",
				emoji_order: "1812",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object",
					"symbol", "game"]
			},
			flower_playing_cards: {
				unicode: "1f3b4",
				unicode_alt: "",
				code_decimal: "&#127924;",
				name: "flower playing cards",
				shortname: ":flower_playing_cards:",
				category: "symbols",
				emoji_order: "1813",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "symbol"]
			},
			mute: {
				unicode: "1f507",
				unicode_alt: "",
				code_decimal: "&#128263;",
				name: "speaker with cancellation stroke",
				shortname: ":mute:",
				category: "symbols",
				emoji_order: "1814",
				aliases: [],
				aliases_ascii: [],
				keywords: ["alarm", "symbol"]
			},
			speaker: {
				unicode: "1f508",
				unicode_alt: "",
				code_decimal: "&#128264;",
				name: "speaker",
				shortname: ":speaker:",
				category: "symbols",
				emoji_order: "1815",
				aliases: [],
				aliases_ascii: [],
				keywords: ["alarm", "symbol"]
			},
			sound: {
				unicode: "1f509",
				unicode_alt: "",
				code_decimal: "&#128265;",
				name: "speaker with one sound wave",
				shortname: ":sound:",
				category: "symbols",
				emoji_order: "1816",
				aliases: [],
				aliases_ascii: [],
				keywords: ["alarm", "symbol"]
			},
			loud_sound: {
				unicode: "1f50a",
				unicode_alt: "",
				code_decimal: "&#128266;",
				name: "speaker with three sound waves",
				shortname: ":loud_sound:",
				category: "symbols",
				emoji_order: "1817",
				aliases: [],
				aliases_ascii: [],
				keywords: ["alarm", "symbol"]
			},
			loudspeaker: {
				unicode: "1f4e2",
				unicode_alt: "",
				code_decimal: "&#128226;",
				name: "public address loudspeaker",
				shortname: ":loudspeaker:",
				category: "symbols",
				emoji_order: "1818",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "alarm", "symbol"]
			},
			mega: {
				unicode: "1f4e3",
				unicode_alt: "",
				code_decimal: "&#128227;",
				name: "cheering megaphone",
				shortname: ":mega:",
				category: "symbols",
				emoji_order: "1819",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "sport"]
			},
			postal_horn: {
				unicode: "1f4ef",
				unicode_alt: "",
				code_decimal: "&#128239;",
				name: "postal horn",
				shortname: ":postal_horn:",
				category: "objects",
				emoji_order: "1820",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			bell: {
				unicode: "1f514",
				unicode_alt: "",
				code_decimal: "&#128276;",
				name: "bell",
				shortname: ":bell:",
				category: "symbols",
				emoji_order: "1821",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "alarm", "symbol"]
			},
			no_bell: {
				unicode: "1f515",
				unicode_alt: "",
				code_decimal: "&#128277;",
				name: "bell with cancellation stroke",
				shortname: ":no_bell:",
				category: "symbols",
				emoji_order: "1822",
				aliases: [],
				aliases_ascii: [],
				keywords: ["alarm", "symbol"]
			},
			musical_score: {
				unicode: "1f3bc",
				unicode_alt: "",
				code_decimal: "&#127932;",
				name: "musical score",
				shortname: ":musical_score:",
				category: "activity",
				emoji_order: "1823",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments"]
			},
			musical_note: {
				unicode: "1f3b5",
				unicode_alt: "",
				code_decimal: "&#127925;",
				name: "musical note",
				shortname: ":musical_note:",
				category: "symbols",
				emoji_order: "1824",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments", "symbol"]
			},
			notes: {
				unicode: "1f3b6",
				unicode_alt: "",
				code_decimal: "&#127926;",
				name: "multiple musical notes",
				shortname: ":notes:",
				category: "symbols",
				emoji_order: "1825",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments", "symbol"]
			},
			microphone2: {
				unicode: "1f399",
				unicode_alt: "1f399-fe0f",
				code_decimal: "&#127897;",
				name: "studio microphone",
				shortname: ":microphone2:",
				category: "objects",
				emoji_order: "1826",
				aliases: [":studio_microphone:"],
				aliases_ascii: [],
				keywords: ["electronics", "object"]
			},
			level_slider: {
				unicode: "1f39a",
				unicode_alt: "1f39a-fe0f",
				code_decimal: "&#127898;",
				name: "level slider",
				shortname: ":level_slider:",
				category: "objects",
				emoji_order: "1827",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			control_knobs: {
				unicode: "1f39b",
				unicode_alt: "1f39b-fe0f",
				code_decimal: "&#127899;",
				name: "control knobs",
				shortname: ":control_knobs:",
				category: "objects",
				emoji_order: "1828",
				aliases: [],
				aliases_ascii: [],
				keywords: ["time"]
			},
			microphone: {
				unicode: "1f3a4",
				unicode_alt: "",
				code_decimal: "&#127908;",
				name: "microphone",
				shortname: ":microphone:",
				category: "activity",
				emoji_order: "1829",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments"]
			},
			headphones: {
				unicode: "1f3a7",
				unicode_alt: "",
				code_decimal: "&#127911;",
				name: "headphone",
				shortname: ":headphones:",
				category: "activity",
				emoji_order: "1830",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments"]
			},
			radio: {
				unicode: "1f4fb",
				unicode_alt: "",
				code_decimal: "&#128251;",
				name: "radio",
				shortname: ":radio:",
				category: "objects",
				emoji_order: "1831",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics"]
			},
			saxophone: {
				unicode: "1f3b7",
				unicode_alt: "",
				code_decimal: "&#127927;",
				name: "saxophone",
				shortname: ":saxophone:",
				category: "activity",
				emoji_order: "1832",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments"]
			},
			guitar: {
				unicode: "1f3b8",
				unicode_alt: "",
				code_decimal: "&#127928;",
				name: "guitar",
				shortname: ":guitar:",
				category: "activity",
				emoji_order: "1833",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments"]
			},
			musical_keyboard: {
				unicode: "1f3b9",
				unicode_alt: "",
				code_decimal: "&#127929;",
				name: "musical keyboard",
				shortname: ":musical_keyboard:",
				category: "activity",
				emoji_order: "1834",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments"]
			},
			trumpet: {
				unicode: "1f3ba",
				unicode_alt: "",
				code_decimal: "&#127930;",
				name: "trumpet",
				shortname: ":trumpet:",
				category: "activity",
				emoji_order: "1835",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments"]
			},
			violin: {
				unicode: "1f3bb",
				unicode_alt: "",
				code_decimal: "&#127931;",
				name: "violin",
				shortname: ":violin:",
				category: "activity",
				emoji_order: "1836",
				aliases: [],
				aliases_ascii: [],
				keywords: ["instruments", "sarcastic"]
			},
			drum: {
				unicode: "1f941",
				unicode_alt: "",
				code_decimal: "&#129345;",
				name: "drum with drumsticks",
				shortname: ":drum:",
				category: "activity",
				emoji_order: "1837",
				aliases: [":drum_with_drumsticks:"],
				aliases_ascii: [],
				keywords: []
			},
			iphone: {
				unicode: "1f4f1",
				unicode_alt: "",
				code_decimal: "&#128241;",
				name: "mobile phone",
				shortname: ":iphone:",
				category: "objects",
				emoji_order: "1838",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "phone", "selfie"]
			},
			calling: {
				unicode: "1f4f2",
				unicode_alt: "",
				code_decimal: "&#128242;",
				name: "mobile phone with rightwards arrow at left",
				shortname: ":calling:",
				category: "objects",
				emoji_order: "1839",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "phone", "selfie"]
			},
			telephone: {
				unicode: "260e",
				unicode_alt: "260e-fe0f",
				code_decimal: "&#9742;",
				name: "black telephone",
				shortname: ":telephone:",
				category: "objects",
				emoji_order: "1840",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "phone"]
			},
			telephone_receiver: {
				unicode: "1f4de",
				unicode_alt: "",
				code_decimal: "&#128222;",
				name: "telephone receiver",
				shortname: ":telephone_receiver:",
				category: "objects",
				emoji_order: "1841",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "phone"]
			},
			pager: {
				unicode: "1f4df",
				unicode_alt: "",
				code_decimal: "&#128223;",
				name: "pager",
				shortname: ":pager:",
				category: "objects",
				emoji_order: "1842",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "work"]
			},
			fax: {
				unicode: "1f4e0",
				unicode_alt: "",
				code_decimal: "&#128224;",
				name: "fax machine",
				shortname: ":fax:",
				category: "objects",
				emoji_order: "1843",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "work", "office"]
			},
			battery: {
				unicode: "1f50b",
				unicode_alt: "",
				code_decimal: "&#128267;",
				name: "battery",
				shortname: ":battery:",
				category: "objects",
				emoji_order: "1844",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			electric_plug: {
				unicode: "1f50c",
				unicode_alt: "",
				code_decimal: "&#128268;",
				name: "electric plug",
				shortname: ":electric_plug:",
				category: "objects",
				emoji_order: "1845",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics"]
			},
			computer: {
				unicode: "1f4bb",
				unicode_alt: "",
				code_decimal: "&#128187;",
				name: "personal computer",
				shortname: ":computer:",
				category: "objects",
				emoji_order: "1846",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "work", "office"]
			},
			desktop: {
				unicode: "1f5a5",
				unicode_alt: "1f5a5-fe0f",
				code_decimal: "&#128421;",
				name: "desktop computer",
				shortname: ":desktop:",
				category: "objects",
				emoji_order: "1847",
				aliases: [":desktop_computer:"],
				aliases_ascii: [],
				keywords: ["electronics", "work"]
			},
			printer: {
				unicode: "1f5a8",
				unicode_alt: "1f5a8-fe0f",
				code_decimal: "&#128424;",
				name: "printer",
				shortname: ":printer:",
				category: "objects",
				emoji_order: "1848",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "work", "office"]
			},
			keyboard: {
				unicode: "2328",
				unicode_alt: "2328-fe0f",
				code_decimal: "&#9000;",
				name: "keyboard",
				shortname: ":keyboard:",
				category: "objects",
				emoji_order: "1849",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "work", "office"]
			},
			mouse_three_button: {
				unicode: "1f5b1",
				unicode_alt: "1f5b1-fe0f",
				code_decimal: "&#128433;",
				name: "three button mouse",
				shortname: ":mouse_three_button:",
				category: "objects",
				emoji_order: "1850",
				aliases: [":three_button_mouse:"],
				aliases_ascii: [],
				keywords: ["electronics",
					"work", "game", "office"]
			},
			trackball: {
				unicode: "1f5b2",
				unicode_alt: "1f5b2-fe0f",
				code_decimal: "&#128434;",
				name: "trackball",
				shortname: ":trackball:",
				category: "objects",
				emoji_order: "1851",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "work", "game", "office"]
			},
			minidisc: {
				unicode: "1f4bd",
				unicode_alt: "",
				code_decimal: "&#128189;",
				name: "minidisc",
				shortname: ":minidisc:",
				category: "objects",
				emoji_order: "1852",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics"]
			},
			floppy_disk: {
				unicode: "1f4be",
				unicode_alt: "",
				code_decimal: "&#128190;",
				name: "floppy disk",
				shortname: ":floppy_disk:",
				category: "objects",
				emoji_order: "1853",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "office"]
			},
			cd: {
				unicode: "1f4bf",
				unicode_alt: "",
				code_decimal: "&#128191;",
				name: "optical disc",
				shortname: ":cd:",
				category: "objects",
				emoji_order: "1854",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics"]
			},
			dvd: {
				unicode: "1f4c0",
				unicode_alt: "",
				code_decimal: "&#128192;",
				name: "dvd",
				shortname: ":dvd:",
				category: "objects",
				emoji_order: "1855",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics"]
			},
			movie_camera: {
				unicode: "1f3a5",
				unicode_alt: "",
				code_decimal: "&#127909;",
				name: "movie camera",
				shortname: ":movie_camera:",
				category: "objects",
				emoji_order: "1856",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "camera", "movie"]
			},
			film_frames: {
				unicode: "1f39e",
				unicode_alt: "1f39e-fe0f",
				code_decimal: "&#127902;",
				name: "film frames",
				shortname: ":film_frames:",
				category: "objects",
				emoji_order: "1857",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "camera", "movie"]
			},
			projector: {
				unicode: "1f4fd",
				unicode_alt: "1f4fd-fe0f",
				code_decimal: "&#128253;",
				name: "film projector",
				shortname: ":projector:",
				category: "objects",
				emoji_order: "1858",
				aliases: [":film_projector:"],
				aliases_ascii: [],
				keywords: ["object", "camera", "movie"]
			},
			clapper: {
				unicode: "1f3ac",
				unicode_alt: "",
				code_decimal: "&#127916;",
				name: "clapper board",
				shortname: ":clapper:",
				category: "activity",
				emoji_order: "1859",
				aliases: [],
				aliases_ascii: [],
				keywords: ["movie"]
			},
			tv: {
				unicode: "1f4fa",
				unicode_alt: "",
				code_decimal: "&#128250;",
				name: "television",
				shortname: ":tv:",
				category: "objects",
				emoji_order: "1860",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics"]
			},
			camera: {
				unicode: "1f4f7",
				unicode_alt: "",
				code_decimal: "&#128247;",
				name: "camera",
				shortname: ":camera:",
				category: "objects",
				emoji_order: "1861",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "camera", "selfie"]
			},
			camera_with_flash: {
				unicode: "1f4f8",
				unicode_alt: "",
				code_decimal: "&#128248;",
				name: "camera with flash",
				shortname: ":camera_with_flash:",
				category: "objects",
				emoji_order: "1862",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics",
					"camera"]
			},
			video_camera: {
				unicode: "1f4f9",
				unicode_alt: "",
				code_decimal: "&#128249;",
				name: "video camera",
				shortname: ":video_camera:",
				category: "objects",
				emoji_order: "1863",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "camera", "movie"]
			},
			vhs: {
				unicode: "1f4fc",
				unicode_alt: "",
				code_decimal: "&#128252;",
				name: "videocassette",
				shortname: ":vhs:",
				category: "objects",
				emoji_order: "1864",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics"]
			},
			mag: {
				unicode: "1f50d",
				unicode_alt: "",
				code_decimal: "&#128269;",
				name: "left-pointing magnifying glass",
				shortname: ":mag:",
				category: "objects",
				emoji_order: "1865",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			mag_right: {
				unicode: "1f50e",
				unicode_alt: "",
				code_decimal: "&#128270;",
				name: "right-pointing magnifying glass",
				shortname: ":mag_right:",
				category: "objects",
				emoji_order: "1866",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			microscope: {
				unicode: "1f52c",
				unicode_alt: "",
				code_decimal: "&#128300;",
				name: "microscope",
				shortname: ":microscope:",
				category: "objects",
				emoji_order: "1867",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object",
					"science"]
			},
			telescope: {
				unicode: "1f52d",
				unicode_alt: "",
				code_decimal: "&#128301;",
				name: "telescope",
				shortname: ":telescope:",
				category: "objects",
				emoji_order: "1868",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "space", "science"]
			},
			satellite: {
				unicode: "1f4e1",
				unicode_alt: "",
				code_decimal: "&#128225;",
				name: "satellite antenna",
				shortname: ":satellite:",
				category: "objects",
				emoji_order: "1869",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			candle: {
				unicode: "1f56f",
				unicode_alt: "1f56f-fe0f",
				code_decimal: "&#128367;",
				name: "candle",
				shortname: ":candle:",
				category: "objects",
				emoji_order: "1870",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			bulb: {
				unicode: "1f4a1",
				unicode_alt: "",
				code_decimal: "&#128161;",
				name: "electric light bulb",
				shortname: ":bulb:",
				category: "objects",
				emoji_order: "1871",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "science"]
			},
			flashlight: {
				unicode: "1f526",
				unicode_alt: "",
				code_decimal: "&#128294;",
				name: "electric torch",
				shortname: ":flashlight:",
				category: "objects",
				emoji_order: "1872",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "object"]
			},
			izakaya_lantern: {
				unicode: "1f3ee",
				unicode_alt: "",
				code_decimal: "&#127982;",
				name: "izakaya lantern",
				shortname: ":izakaya_lantern:",
				category: "objects",
				emoji_order: "1873",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "japan"]
			},
			notebook_with_decorative_cover: {
				unicode: "1f4d4",
				unicode_alt: "",
				code_decimal: "&#128212;",
				name: "notebook with decorative cover",
				shortname: ":notebook_with_decorative_cover:",
				category: "objects",
				emoji_order: "1874",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object",
					"office", "write"]
			},
			closed_book: {
				unicode: "1f4d5",
				unicode_alt: "",
				code_decimal: "&#128213;",
				name: "closed book",
				shortname: ":closed_book:",
				category: "objects",
				emoji_order: "1875",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write", "book"]
			},
			book: {
				unicode: "1f4d6",
				unicode_alt: "",
				code_decimal: "&#128214;",
				name: "open book",
				shortname: ":book:",
				category: "objects",
				emoji_order: "1876",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write", "book"]
			},
			green_book: {
				unicode: "1f4d7",
				unicode_alt: "",
				code_decimal: "&#128215;",
				name: "green book",
				shortname: ":green_book:",
				category: "objects",
				emoji_order: "1877",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "book"]
			},
			blue_book: {
				unicode: "1f4d8",
				unicode_alt: "",
				code_decimal: "&#128216;",
				name: "blue book",
				shortname: ":blue_book:",
				category: "objects",
				emoji_order: "1878",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write", "book"]
			},
			orange_book: {
				unicode: "1f4d9",
				unicode_alt: "",
				code_decimal: "&#128217;",
				name: "orange book",
				shortname: ":orange_book:",
				category: "objects",
				emoji_order: "1879",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write", "book"]
			},
			books: {
				unicode: "1f4da",
				unicode_alt: "",
				code_decimal: "&#128218;",
				name: "books",
				shortname: ":books:",
				category: "objects",
				emoji_order: "1880",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write", "book"]
			},
			notebook: {
				unicode: "1f4d3",
				unicode_alt: "",
				code_decimal: "&#128211;",
				name: "notebook",
				shortname: ":notebook:",
				category: "objects",
				emoji_order: "1881",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write"]
			},
			ledger: {
				unicode: "1f4d2",
				unicode_alt: "",
				code_decimal: "&#128210;",
				name: "ledger",
				shortname: ":ledger:",
				category: "objects",
				emoji_order: "1882",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write"]
			},
			page_with_curl: {
				unicode: "1f4c3",
				unicode_alt: "",
				code_decimal: "&#128195;",
				name: "page with curl",
				shortname: ":page_with_curl:",
				category: "objects",
				emoji_order: "1883",
				aliases: [],
				aliases_ascii: [],
				keywords: ["office", "write"]
			},
			scroll: {
				unicode: "1f4dc",
				unicode_alt: "",
				code_decimal: "&#128220;",
				name: "scroll",
				shortname: ":scroll:",
				category: "objects",
				emoji_order: "1884",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office"]
			},
			page_facing_up: {
				unicode: "1f4c4",
				unicode_alt: "",
				code_decimal: "&#128196;",
				name: "page facing up",
				shortname: ":page_facing_up:",
				category: "objects",
				emoji_order: "1885",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work", "office", "write"]
			},
			newspaper: {
				unicode: "1f4f0",
				unicode_alt: "",
				code_decimal: "&#128240;",
				name: "newspaper",
				shortname: ":newspaper:",
				category: "objects",
				emoji_order: "1886",
				aliases: [],
				aliases_ascii: [],
				keywords: ["office", "write"]
			},
			newspaper2: {
				unicode: "1f5de",
				unicode_alt: "1f5de-fe0f",
				code_decimal: "&#128478;",
				name: "rolled-up newspaper",
				shortname: ":newspaper2:",
				category: "objects",
				emoji_order: "1887",
				aliases: [":rolled_up_newspaper:"],
				aliases_ascii: [],
				keywords: ["office", "write"]
			},
			bookmark_tabs: {
				unicode: "1f4d1",
				unicode_alt: "",
				code_decimal: "&#128209;",
				name: "bookmark tabs",
				shortname: ":bookmark_tabs:",
				category: "objects",
				emoji_order: "1888",
				aliases: [],
				aliases_ascii: [],
				keywords: ["office", "write"]
			},
			bookmark: {
				unicode: "1f516",
				unicode_alt: "",
				code_decimal: "&#128278;",
				name: "bookmark",
				shortname: ":bookmark:",
				category: "objects",
				emoji_order: "1889",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "book"]
			},
			label: {
				unicode: "1f3f7",
				unicode_alt: "1f3f7-fe0f",
				code_decimal: "&#127991;",
				name: "label",
				shortname: ":label:",
				category: "objects",
				emoji_order: "1890",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			moneybag: {
				unicode: "1f4b0",
				unicode_alt: "",
				code_decimal: "&#128176;",
				name: "money bag",
				shortname: ":moneybag:",
				category: "objects",
				emoji_order: "1891",
				aliases: [],
				aliases_ascii: [],
				keywords: ["bag", "award", "money"]
			},
			yen: {
				unicode: "1f4b4",
				unicode_alt: "",
				code_decimal: "&#128180;",
				name: "banknote with yen sign",
				shortname: ":yen:",
				category: "objects",
				emoji_order: "1892",
				aliases: [],
				aliases_ascii: [],
				keywords: ["money"]
			},
			dollar: {
				unicode: "1f4b5",
				unicode_alt: "",
				code_decimal: "&#128181;",
				name: "banknote with dollar sign",
				shortname: ":dollar:",
				category: "objects",
				emoji_order: "1893",
				aliases: [],
				aliases_ascii: [],
				keywords: ["money"]
			},
			euro: {
				unicode: "1f4b6",
				unicode_alt: "",
				code_decimal: "&#128182;",
				name: "banknote with euro sign",
				shortname: ":euro:",
				category: "objects",
				emoji_order: "1894",
				aliases: [],
				aliases_ascii: [],
				keywords: ["money"]
			},
			pound: {
				unicode: "1f4b7",
				unicode_alt: "",
				code_decimal: "&#128183;",
				name: "banknote with pound sign",
				shortname: ":pound:",
				category: "objects",
				emoji_order: "1895",
				aliases: [],
				aliases_ascii: [],
				keywords: ["money"]
			},
			money_with_wings: {
				unicode: "1f4b8",
				unicode_alt: "",
				code_decimal: "&#128184;",
				name: "money with wings",
				shortname: ":money_with_wings:",
				category: "objects",
				emoji_order: "1896",
				aliases: [],
				aliases_ascii: [],
				keywords: ["money", "boys night"]
			},
			credit_card: {
				unicode: "1f4b3",
				unicode_alt: "",
				code_decimal: "&#128179;",
				name: "credit card",
				shortname: ":credit_card:",
				category: "objects",
				emoji_order: "1897",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "money", "boys night"]
			},
			chart: {
				unicode: "1f4b9",
				unicode_alt: "",
				code_decimal: "&#128185;",
				name: "chart with upwards trend and yen sign",
				shortname: ":chart:",
				category: "symbols",
				emoji_order: "1898",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "money"]
			},
			currency_exchange: {
				unicode: "1f4b1",
				unicode_alt: "",
				code_decimal: "&#128177;",
				name: "currency exchange",
				shortname: ":currency_exchange:",
				category: "symbols",
				emoji_order: "1899",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "money"]
			},
			heavy_dollar_sign: {
				unicode: "1f4b2",
				unicode_alt: "",
				code_decimal: "&#128178;",
				name: "heavy dollar sign",
				shortname: ":heavy_dollar_sign:",
				category: "symbols",
				emoji_order: "1900",
				aliases: [],
				aliases_ascii: [],
				keywords: ["math", "symbol", "money"]
			},
			envelope: {
				unicode: "2709",
				unicode_alt: "2709-fe0f",
				code_decimal: "&#9993;",
				name: "envelope",
				shortname: ":envelope:",
				category: "objects",
				emoji_order: "1901",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write"]
			},
			"e-mail": {
				unicode: "1f4e7",
				unicode_alt: "",
				code_decimal: "&#128231;",
				name: "e-mail symbol",
				shortname: ":e-mail:",
				category: "objects",
				emoji_order: "1902",
				aliases: [":email:"],
				aliases_ascii: [],
				keywords: ["office"]
			},
			incoming_envelope: {
				unicode: "1f4e8",
				unicode_alt: "",
				code_decimal: "&#128232;",
				name: "incoming envelope",
				shortname: ":incoming_envelope:",
				category: "objects",
				emoji_order: "1903",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			envelope_with_arrow: {
				unicode: "1f4e9",
				unicode_alt: "",
				code_decimal: "&#128233;",
				name: "envelope with downwards arrow above",
				shortname: ":envelope_with_arrow:",
				category: "objects",
				emoji_order: "1904",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office"]
			},
			outbox_tray: {
				unicode: "1f4e4",
				unicode_alt: "",
				code_decimal: "&#128228;",
				name: "outbox tray",
				shortname: ":outbox_tray:",
				category: "objects",
				emoji_order: "1905",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work", "office"]
			},
			inbox_tray: {
				unicode: "1f4e5",
				unicode_alt: "",
				code_decimal: "&#128229;",
				name: "inbox tray",
				shortname: ":inbox_tray:",
				category: "objects",
				emoji_order: "1906",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work", "office"]
			},
			"package": {
				unicode: "1f4e6",
				unicode_alt: "",
				code_decimal: "&#128230;",
				name: "package",
				shortname: ":package:",
				category: "objects",
				emoji_order: "1907",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "gift", "office"]
			},
			mailbox: {
				unicode: "1f4eb",
				unicode_alt: "",
				code_decimal: "&#128235;",
				name: "closed mailbox with raised flag",
				shortname: ":mailbox:",
				category: "objects",
				emoji_order: "1908",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			mailbox_closed: {
				unicode: "1f4ea",
				unicode_alt: "",
				code_decimal: "&#128234;",
				name: "closed mailbox with lowered flag",
				shortname: ":mailbox_closed:",
				category: "objects",
				emoji_order: "1909",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office"]
			},
			mailbox_with_mail: {
				unicode: "1f4ec",
				unicode_alt: "",
				code_decimal: "&#128236;",
				name: "open mailbox with raised flag",
				shortname: ":mailbox_with_mail:",
				category: "objects",
				emoji_order: "1910",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			mailbox_with_no_mail: {
				unicode: "1f4ed",
				unicode_alt: "",
				code_decimal: "&#128237;",
				name: "open mailbox with lowered flag",
				shortname: ":mailbox_with_no_mail:",
				category: "objects",
				emoji_order: "1911",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			postbox: {
				unicode: "1f4ee",
				unicode_alt: "",
				code_decimal: "&#128238;",
				name: "postbox",
				shortname: ":postbox:",
				category: "objects",
				emoji_order: "1912",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			ballot_box: {
				unicode: "1f5f3",
				unicode_alt: "1f5f3-fe0f",
				code_decimal: "&#128499;",
				name: "ballot box with ballot",
				shortname: ":ballot_box:",
				category: "objects",
				emoji_order: "1913",
				aliases: [":ballot_box_with_ballot:"],
				aliases_ascii: [],
				keywords: ["object", "office"]
			},
			pencil2: {
				unicode: "270f",
				unicode_alt: "270f-fe0f",
				code_decimal: "&#9999;",
				name: "pencil",
				shortname: ":pencil2:",
				category: "objects",
				emoji_order: "1914",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write"]
			},
			black_nib: {
				unicode: "2712",
				unicode_alt: "2712-fe0f",
				code_decimal: "&#10002;",
				name: "black nib",
				shortname: ":black_nib:",
				category: "objects",
				emoji_order: "1915",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office", "write"]
			},
			pen_fountain: {
				unicode: "1f58b",
				unicode_alt: "1f58b-fe0f",
				code_decimal: "&#128395;",
				name: "lower left fountain pen",
				shortname: ":pen_fountain:",
				category: "objects",
				emoji_order: "1916",
				aliases: [":lower_left_fountain_pen:"],
				aliases_ascii: [],
				keywords: ["object", "office", "write"]
			},
			pen_ballpoint: {
				unicode: "1f58a",
				unicode_alt: "1f58a-fe0f",
				code_decimal: "&#128394;",
				name: "lower left ballpoint pen",
				shortname: ":pen_ballpoint:",
				category: "objects",
				emoji_order: "1917",
				aliases: [":lower_left_ballpoint_pen:"],
				aliases_ascii: [],
				keywords: ["object", "office", "write"]
			},
			paintbrush: {
				unicode: "1f58c",
				unicode_alt: "1f58c-fe0f",
				code_decimal: "&#128396;",
				name: "lower left paintbrush",
				shortname: ":paintbrush:",
				category: "objects",
				emoji_order: "1918",
				aliases: [":lower_left_paintbrush:"],
				aliases_ascii: [],
				keywords: ["object", "office", "write"]
			},
			crayon: {
				unicode: "1f58d",
				unicode_alt: "1f58d-fe0f",
				code_decimal: "&#128397;",
				name: "lower left crayon",
				shortname: ":crayon:",
				category: "objects",
				emoji_order: "1919",
				aliases: [":lower_left_crayon:"],
				aliases_ascii: [],
				keywords: ["object", "office", "write"]
			},
			pencil: {
				unicode: "1f4dd",
				unicode_alt: "",
				code_decimal: "&#128221;",
				name: "memo",
				shortname: ":pencil:",
				category: "objects",
				emoji_order: "1920",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work", "office", "write"]
			},
			briefcase: {
				unicode: "1f4bc",
				unicode_alt: "",
				code_decimal: "&#128188;",
				name: "briefcase",
				shortname: ":briefcase:",
				category: "people",
				emoji_order: "1921",
				aliases: [],
				aliases_ascii: [],
				keywords: ["bag", "work", "accessories", "nutcase", "job"]
			},
			file_folder: {
				unicode: "1f4c1",
				unicode_alt: "",
				code_decimal: "&#128193;",
				name: "file folder",
				shortname: ":file_folder:",
				category: "objects",
				emoji_order: "1922",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work", "office"]
			},
			open_file_folder: {
				unicode: "1f4c2",
				unicode_alt: "",
				code_decimal: "&#128194;",
				name: "open file folder",
				shortname: ":open_file_folder:",
				category: "objects",
				emoji_order: "1923",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work", "office"]
			},
			dividers: {
				unicode: "1f5c2",
				unicode_alt: "1f5c2-fe0f",
				code_decimal: "&#128450;",
				name: "card index dividers",
				shortname: ":dividers:",
				category: "objects",
				emoji_order: "1924",
				aliases: [":card_index_dividers:"],
				aliases_ascii: [],
				keywords: ["work", "office"]
			},
			date: {
				unicode: "1f4c5",
				unicode_alt: "",
				code_decimal: "&#128197;",
				name: "calendar",
				shortname: ":date:",
				category: "objects",
				emoji_order: "1925",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office"]
			},
			calendar: {
				unicode: "1f4c6",
				unicode_alt: "",
				code_decimal: "&#128198;",
				name: "tear-off calendar",
				shortname: ":calendar:",
				category: "objects",
				emoji_order: "1926",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office"]
			},
			notepad_spiral: {
				unicode: "1f5d2",
				unicode_alt: "1f5d2-fe0f",
				code_decimal: "&#128466;",
				name: "spiral note pad",
				shortname: ":notepad_spiral:",
				category: "objects",
				emoji_order: "1927",
				aliases: [":spiral_note_pad:"],
				aliases_ascii: [],
				keywords: ["work", "office", "write"]
			},
			calendar_spiral: {
				unicode: "1f5d3",
				unicode_alt: "1f5d3-fe0f",
				code_decimal: "&#128467;",
				name: "spiral calendar pad",
				shortname: ":calendar_spiral:",
				category: "objects",
				emoji_order: "1928",
				aliases: [":spiral_calendar_pad:"],
				aliases_ascii: [],
				keywords: ["object", "office"]
			},
			card_index: {
				unicode: "1f4c7",
				unicode_alt: "",
				code_decimal: "&#128199;",
				name: "card index",
				shortname: ":card_index:",
				category: "objects",
				emoji_order: "1929",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "work", "office"]
			},
			chart_with_upwards_trend: {
				unicode: "1f4c8",
				unicode_alt: "",
				code_decimal: "&#128200;",
				name: "chart with upwards trend",
				shortname: ":chart_with_upwards_trend:",
				category: "objects",
				emoji_order: "1930",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work", "office"]
			},
			chart_with_downwards_trend: {
				unicode: "1f4c9",
				unicode_alt: "",
				code_decimal: "&#128201;",
				name: "chart with downwards trend",
				shortname: ":chart_with_downwards_trend:",
				category: "objects",
				emoji_order: "1931",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work", "office"]
			},
			bar_chart: {
				unicode: "1f4ca",
				unicode_alt: "",
				code_decimal: "&#128202;",
				name: "bar chart",
				shortname: ":bar_chart:",
				category: "objects",
				emoji_order: "1932",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work", "office"]
			},
			clipboard: {
				unicode: "1f4cb",
				unicode_alt: "",
				code_decimal: "&#128203;",
				name: "clipboard",
				shortname: ":clipboard:",
				category: "objects",
				emoji_order: "1933",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "work", "office", "write"]
			},
			pushpin: {
				unicode: "1f4cc",
				unicode_alt: "",
				code_decimal: "&#128204;",
				name: "pushpin",
				shortname: ":pushpin:",
				category: "objects",
				emoji_order: "1934",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office"]
			},
			round_pushpin: {
				unicode: "1f4cd",
				unicode_alt: "",
				code_decimal: "&#128205;",
				name: "round pushpin",
				shortname: ":round_pushpin:",
				category: "objects",
				emoji_order: "1935",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "office"]
			},
			paperclip: {
				unicode: "1f4ce",
				unicode_alt: "",
				code_decimal: "&#128206;",
				name: "paperclip",
				shortname: ":paperclip:",
				category: "objects",
				emoji_order: "1936",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "work", "office"]
			},
			paperclips: {
				unicode: "1f587",
				unicode_alt: "1f587-fe0f",
				code_decimal: "&#128391;",
				name: "linked paperclips",
				shortname: ":paperclips:",
				category: "objects",
				emoji_order: "1937",
				aliases: [":linked_paperclips:"],
				aliases_ascii: [],
				keywords: ["object", "work", "office"]
			},
			straight_ruler: {
				unicode: "1f4cf",
				unicode_alt: "",
				code_decimal: "&#128207;",
				name: "straight ruler",
				shortname: ":straight_ruler:",
				category: "objects",
				emoji_order: "1938",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "tool", "office"]
			},
			triangular_ruler: {
				unicode: "1f4d0",
				unicode_alt: "",
				code_decimal: "&#128208;",
				name: "triangular ruler",
				shortname: ":triangular_ruler:",
				category: "objects",
				emoji_order: "1939",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "tool", "office"]
			},
			scissors: {
				unicode: "2702",
				unicode_alt: "2702-fe0f",
				code_decimal: "&#9986;",
				name: "black scissors",
				shortname: ":scissors:",
				category: "objects",
				emoji_order: "1940",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "tool", "weapon", "office"]
			},
			card_box: {
				unicode: "1f5c3",
				unicode_alt: "1f5c3-fe0f",
				code_decimal: "&#128451;",
				name: "card file box",
				shortname: ":card_box:",
				category: "objects",
				emoji_order: "1941",
				aliases: [":card_file_box:"],
				aliases_ascii: [],
				keywords: ["object",
					"work", "office"]
			},
			file_cabinet: {
				unicode: "1f5c4",
				unicode_alt: "1f5c4-fe0f",
				code_decimal: "&#128452;",
				name: "file cabinet",
				shortname: ":file_cabinet:",
				category: "objects",
				emoji_order: "1942",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "work", "office"]
			},
			wastebasket: {
				unicode: "1f5d1",
				unicode_alt: "1f5d1-fe0f",
				code_decimal: "&#128465;",
				name: "wastebasket",
				shortname: ":wastebasket:",
				category: "objects",
				emoji_order: "1943",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "work"]
			},
			lock: {
				unicode: "1f512",
				unicode_alt: "",
				code_decimal: "&#128274;",
				name: "lock",
				shortname: ":lock:",
				category: "objects",
				emoji_order: "1944",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "lock"]
			},
			unlock: {
				unicode: "1f513",
				unicode_alt: "",
				code_decimal: "&#128275;",
				name: "open lock",
				shortname: ":unlock:",
				category: "objects",
				emoji_order: "1945",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "lock"]
			},
			lock_with_ink_pen: {
				unicode: "1f50f",
				unicode_alt: "",
				code_decimal: "&#128271;",
				name: "lock with ink pen",
				shortname: ":lock_with_ink_pen:",
				category: "objects",
				emoji_order: "1946",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "lock"]
			},
			closed_lock_with_key: {
				unicode: "1f510",
				unicode_alt: "",
				code_decimal: "&#128272;",
				name: "closed lock with key",
				shortname: ":closed_lock_with_key:",
				category: "objects",
				emoji_order: "1947",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "lock"]
			},
			key: {
				unicode: "1f511",
				unicode_alt: "",
				code_decimal: "&#128273;",
				name: "key",
				shortname: ":key:",
				category: "objects",
				emoji_order: "1948",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "lock"]
			},
			key2: {
				unicode: "1f5dd",
				unicode_alt: "1f5dd-fe0f",
				code_decimal: "&#128477;",
				name: "old key",
				shortname: ":key2:",
				category: "objects",
				emoji_order: "1949",
				aliases: [":old_key:"],
				aliases_ascii: [],
				keywords: ["object", "lock"]
			},
			hammer: {
				unicode: "1f528",
				unicode_alt: "",
				code_decimal: "&#128296;",
				name: "hammer",
				shortname: ":hammer:",
				category: "objects",
				emoji_order: "1950",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "tool", "weapon"]
			},
			pick: {
				unicode: "26cf",
				unicode_alt: "26cf-fe0f",
				code_decimal: "&#9935;",
				name: "pick",
				shortname: ":pick:",
				category: "objects",
				emoji_order: "1951",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "tool", "weapon"]
			},
			hammer_pick: {
				unicode: "2692",
				unicode_alt: "2692-fe0f",
				code_decimal: "&#9874;",
				name: "hammer and pick",
				shortname: ":hammer_pick:",
				category: "objects",
				emoji_order: "1952",
				aliases: [":hammer_and_pick:"],
				aliases_ascii: [],
				keywords: ["object", "tool", "weapon"]
			},
			tools: {
				unicode: "1f6e0",
				unicode_alt: "1f6e0-fe0f",
				code_decimal: "&#128736;",
				name: "hammer and wrench",
				shortname: ":tools:",
				category: "objects",
				emoji_order: "1953",
				aliases: [":hammer_and_wrench:"],
				aliases_ascii: [],
				keywords: ["object", "tool"]
			},
			dagger: {
				unicode: "1f5e1",
				unicode_alt: "1f5e1-fe0f",
				code_decimal: "&#128481;",
				name: "dagger knife",
				shortname: ":dagger:",
				category: "objects",
				emoji_order: "1954",
				aliases: [":dagger_knife:"],
				aliases_ascii: [],
				keywords: ["object", "weapon"]
			},
			crossed_swords: {
				unicode: "2694",
				unicode_alt: "2694-fe0f",
				code_decimal: "&#9876;",
				name: "crossed swords",
				shortname: ":crossed_swords:",
				category: "objects",
				emoji_order: "1955",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "weapon"]
			},
			gun: {
				unicode: "1f52b",
				unicode_alt: "",
				code_decimal: "&#128299;",
				name: "pistol",
				shortname: ":gun:",
				category: "objects",
				emoji_order: "1956",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "weapon", "dead", "gun", "sarcastic"]
			},
			bow_and_arrow: {
				unicode: "1f3f9",
				unicode_alt: "",
				code_decimal: "&#127993;",
				name: "bow and arrow",
				shortname: ":bow_and_arrow:",
				category: "activity",
				emoji_order: "1957",
				aliases: [":archery:"],
				aliases_ascii: [],
				keywords: ["weapon", "sport"]
			},
			shield: {
				unicode: "1f6e1",
				unicode_alt: "1f6e1-fe0f",
				code_decimal: "&#128737;",
				name: "shield",
				shortname: ":shield:",
				category: "objects",
				emoji_order: "1958",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			wrench: {
				unicode: "1f527",
				unicode_alt: "",
				code_decimal: "&#128295;",
				name: "wrench",
				shortname: ":wrench:",
				category: "objects",
				emoji_order: "1959",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "tool"]
			},
			nut_and_bolt: {
				unicode: "1f529",
				unicode_alt: "",
				code_decimal: "&#128297;",
				name: "nut and bolt",
				shortname: ":nut_and_bolt:",
				category: "objects",
				emoji_order: "1960",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object",
					"tool", "nutcase"]
			},
			gear: {
				unicode: "2699",
				unicode_alt: "2699-fe0f",
				code_decimal: "&#9881;",
				name: "gear",
				shortname: ":gear:",
				category: "objects",
				emoji_order: "1961",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "tool"]
			},
			compression: {
				unicode: "1f5dc",
				unicode_alt: "1f5dc-fe0f",
				code_decimal: "&#128476;",
				name: "compression",
				shortname: ":compression:",
				category: "objects",
				emoji_order: "1962",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			alembic: {
				unicode: "2697",
				unicode_alt: "2697-fe0f",
				code_decimal: "&#9879;",
				name: "alembic",
				shortname: ":alembic:",
				category: "objects",
				emoji_order: "1963",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "science"]
			},
			scales: {
				unicode: "2696",
				unicode_alt: "2696-fe0f",
				code_decimal: "&#9878;",
				name: "scales",
				shortname: ":scales:",
				category: "objects",
				emoji_order: "1964",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			link: {
				unicode: "1f517",
				unicode_alt: "",
				code_decimal: "&#128279;",
				name: "link symbol",
				shortname: ":link:",
				category: "objects",
				emoji_order: "1965",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "office"]
			},
			chains: {
				unicode: "26d3",
				unicode_alt: "26d3-fe0f",
				code_decimal: "&#9939;",
				name: "chains",
				shortname: ":chains:",
				category: "objects",
				emoji_order: "1966",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "tool"]
			},
			syringe: {
				unicode: "1f489",
				unicode_alt: "",
				code_decimal: "&#128137;",
				name: "syringe",
				shortname: ":syringe:",
				category: "objects",
				emoji_order: "1967",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "weapon", "health", "drugs"]
			},
			pill: {
				unicode: "1f48a",
				unicode_alt: "",
				code_decimal: "&#128138;",
				name: "pill",
				shortname: ":pill:",
				category: "objects",
				emoji_order: "1968",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "health", "drugs"]
			},
			smoking: {
				unicode: "1f6ac",
				unicode_alt: "",
				code_decimal: "&#128684;",
				name: "smoking symbol",
				shortname: ":smoking:",
				category: "objects",
				emoji_order: "1969",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "drugs", "smoking"]
			},
			coffin: {
				unicode: "26b0",
				unicode_alt: "26b0-fe0f",
				code_decimal: "&#9904;",
				name: "coffin",
				shortname: ":coffin:",
				category: "objects",
				emoji_order: "1970",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object",
					"dead", "rip"]
			},
			urn: {
				unicode: "26b1",
				unicode_alt: "26b1-fe0f",
				code_decimal: "&#9905;",
				name: "funeral urn",
				shortname: ":urn:",
				category: "objects",
				emoji_order: "1971",
				aliases: [":funeral_urn:"],
				aliases_ascii: [],
				keywords: ["object", "dead", "rip"]
			},
			moyai: {
				unicode: "1f5ff",
				unicode_alt: "",
				code_decimal: "&#128511;",
				name: "moyai",
				shortname: ":moyai:",
				category: "objects",
				emoji_order: "1972",
				aliases: [],
				aliases_ascii: [],
				keywords: ["travel", "vacation"]
			},
			oil: {
				unicode: "1f6e2",
				unicode_alt: "1f6e2-fe0f",
				code_decimal: "&#128738;",
				name: "oil drum",
				shortname: ":oil:",
				category: "objects",
				emoji_order: "1973",
				aliases: [":oil_drum:"],
				aliases_ascii: [],
				keywords: ["object"]
			},
			crystal_ball: {
				unicode: "1f52e",
				unicode_alt: "",
				code_decimal: "&#128302;",
				name: "crystal ball",
				shortname: ":crystal_ball:",
				category: "objects",
				emoji_order: "1974",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "ball"]
			},
			shopping_cart: {
				unicode: "1f6d2",
				unicode_alt: "",
				code_decimal: "&#128722;",
				name: "shopping trolley",
				shortname: ":shopping_cart:",
				category: "objects",
				emoji_order: "1975",
				aliases: [":shopping_trolley:"],
				aliases_ascii: [],
				keywords: []
			},
			atm: {
				unicode: "1f3e7",
				unicode_alt: "",
				code_decimal: "&#127975;",
				name: "automated teller machine",
				shortname: ":atm:",
				category: "symbols",
				emoji_order: "1976",
				aliases: [],
				aliases_ascii: [],
				keywords: ["electronics", "symbol", "money"]
			},
			put_litter_in_its_place: {
				unicode: "1f6ae",
				unicode_alt: "",
				code_decimal: "&#128686;",
				name: "put litter in its place symbol",
				shortname: ":put_litter_in_its_place:",
				category: "symbols",
				emoji_order: "1977",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			potable_water: {
				unicode: "1f6b0",
				unicode_alt: "",
				code_decimal: "&#128688;",
				name: "potable water symbol",
				shortname: ":potable_water:",
				category: "symbols",
				emoji_order: "1978",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			wheelchair: {
				unicode: "267f",
				unicode_alt: "267f-fe0f",
				code_decimal: "&#9855;",
				name: "wheelchair symbol",
				shortname: ":wheelchair:",
				category: "symbols",
				emoji_order: "1979",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			mens: {
				unicode: "1f6b9",
				unicode_alt: "",
				code_decimal: "&#128697;",
				name: "mens symbol",
				shortname: ":mens:",
				category: "symbols",
				emoji_order: "1980",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			womens: {
				unicode: "1f6ba",
				unicode_alt: "",
				code_decimal: "&#128698;",
				name: "womens symbol",
				shortname: ":womens:",
				category: "symbols",
				emoji_order: "1981",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			restroom: {
				unicode: "1f6bb",
				unicode_alt: "",
				code_decimal: "&#128699;",
				name: "restroom",
				shortname: ":restroom:",
				category: "symbols",
				emoji_order: "1982",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			baby_symbol: {
				unicode: "1f6bc",
				unicode_alt: "",
				code_decimal: "&#128700;",
				name: "baby symbol",
				shortname: ":baby_symbol:",
				category: "symbols",
				emoji_order: "1983",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			wc: {
				unicode: "1f6be",
				unicode_alt: "",
				code_decimal: "&#128702;",
				name: "water closet",
				shortname: ":wc:",
				category: "symbols",
				emoji_order: "1984",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			passport_control: {
				unicode: "1f6c2",
				unicode_alt: "",
				code_decimal: "&#128706;",
				name: "passport control",
				shortname: ":passport_control:",
				category: "symbols",
				emoji_order: "1985",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			customs: {
				unicode: "1f6c3",
				unicode_alt: "",
				code_decimal: "&#128707;",
				name: "customs",
				shortname: ":customs:",
				category: "symbols",
				emoji_order: "1986",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			baggage_claim: {
				unicode: "1f6c4",
				unicode_alt: "",
				code_decimal: "&#128708;",
				name: "baggage claim",
				shortname: ":baggage_claim:",
				category: "symbols",
				emoji_order: "1987",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			left_luggage: {
				unicode: "1f6c5",
				unicode_alt: "",
				code_decimal: "&#128709;",
				name: "left luggage",
				shortname: ":left_luggage:",
				category: "symbols",
				emoji_order: "1988",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			warning: {
				unicode: "26a0",
				unicode_alt: "26a0-fe0f",
				code_decimal: "&#9888;",
				name: "warning sign",
				shortname: ":warning:",
				category: "symbols",
				emoji_order: "1989",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "punctuation"]
			},
			children_crossing: {
				unicode: "1f6b8",
				unicode_alt: "",
				code_decimal: "&#128696;",
				name: "children crossing",
				shortname: ":children_crossing:",
				category: "symbols",
				emoji_order: "1990",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			no_entry: {
				unicode: "26d4",
				unicode_alt: "26d4-fe0f",
				code_decimal: "&#9940;",
				name: "no entry",
				shortname: ":no_entry:",
				category: "symbols",
				emoji_order: "1991",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "circle"]
			},
			no_entry_sign: {
				unicode: "1f6ab",
				unicode_alt: "",
				code_decimal: "&#128683;",
				name: "no entry sign",
				shortname: ":no_entry_sign:",
				category: "symbols",
				emoji_order: "1992",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "circle"]
			},
			no_bicycles: {
				unicode: "1f6b3",
				unicode_alt: "",
				code_decimal: "&#128691;",
				name: "no bicycles",
				shortname: ":no_bicycles:",
				category: "symbols",
				emoji_order: "1993",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			no_smoking: {
				unicode: "1f6ad",
				unicode_alt: "",
				code_decimal: "&#128685;",
				name: "no smoking symbol",
				shortname: ":no_smoking:",
				category: "symbols",
				emoji_order: "1994",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "smoking"]
			},
			do_not_litter: {
				unicode: "1f6af",
				unicode_alt: "",
				code_decimal: "&#128687;",
				name: "do not litter symbol",
				shortname: ":do_not_litter:",
				category: "symbols",
				emoji_order: "1995",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			"non-potable_water": {
				unicode: "1f6b1",
				unicode_alt: "",
				code_decimal: "&#128689;",
				name: "non-potable water symbol",
				shortname: ":non-potable_water:",
				category: "symbols",
				emoji_order: "1996",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			no_pedestrians: {
				unicode: "1f6b7",
				unicode_alt: "",
				code_decimal: "&#128695;",
				name: "no pedestrians",
				shortname: ":no_pedestrians:",
				category: "symbols",
				emoji_order: "1997",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			no_mobile_phones: {
				unicode: "1f4f5",
				unicode_alt: "",
				code_decimal: "&#128245;",
				name: "no mobile phones",
				shortname: ":no_mobile_phones:",
				category: "symbols",
				emoji_order: "1998",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "phone"]
			},
			underage: {
				unicode: "1f51e",
				unicode_alt: "",
				code_decimal: "&#128286;",
				name: "no one under eighteen symbol",
				shortname: ":underage:",
				category: "symbols",
				emoji_order: "1999",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			radioactive: {
				unicode: "2622",
				unicode_alt: "2622-fe0f",
				code_decimal: "&#9762;",
				name: "radioactive sign",
				shortname: ":radioactive:",
				category: "symbols",
				emoji_order: "2000",
				aliases: [":radioactive_sign:"],
				aliases_ascii: [],
				keywords: ["symbol", "science"]
			},
			biohazard: {
				unicode: "2623",
				unicode_alt: "2623-fe0f",
				code_decimal: "&#9763;",
				name: "biohazard sign",
				shortname: ":biohazard:",
				category: "symbols",
				emoji_order: "2001",
				aliases: [":biohazard_sign:"],
				aliases_ascii: [],
				keywords: ["symbol", "science"]
			},
			arrow_up: {
				unicode: "2b06",
				unicode_alt: "2b06-fe0f",
				code_decimal: "&#11014;",
				name: "upwards black arrow",
				shortname: ":arrow_up:",
				category: "symbols",
				emoji_order: "2002",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_upper_right: {
				unicode: "2197",
				unicode_alt: "2197-fe0f",
				code_decimal: "&#8599;",
				name: "north east arrow",
				shortname: ":arrow_upper_right:",
				category: "symbols",
				emoji_order: "2003",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_right: {
				unicode: "27a1",
				unicode_alt: "27a1-fe0f",
				code_decimal: "&#10145;",
				name: "black rightwards arrow",
				shortname: ":arrow_right:",
				category: "symbols",
				emoji_order: "2004",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_lower_right: {
				unicode: "2198",
				unicode_alt: "2198-fe0f",
				code_decimal: "&#8600;",
				name: "south east arrow",
				shortname: ":arrow_lower_right:",
				category: "symbols",
				emoji_order: "2005",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_down: {
				unicode: "2b07",
				unicode_alt: "2b07-fe0f",
				code_decimal: "&#11015;",
				name: "downwards black arrow",
				shortname: ":arrow_down:",
				category: "symbols",
				emoji_order: "2006",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_lower_left: {
				unicode: "2199",
				unicode_alt: "2199-fe0f",
				code_decimal: "&#8601;",
				name: "south west arrow",
				shortname: ":arrow_lower_left:",
				category: "symbols",
				emoji_order: "2007",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_left: {
				unicode: "2b05",
				unicode_alt: "2b05-fe0f",
				code_decimal: "&#11013;",
				name: "leftwards black arrow",
				shortname: ":arrow_left:",
				category: "symbols",
				emoji_order: "2008",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_upper_left: {
				unicode: "2196",
				unicode_alt: "2196-fe0f",
				code_decimal: "&#8598;",
				name: "north west arrow",
				shortname: ":arrow_upper_left:",
				category: "symbols",
				emoji_order: "2009",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_up_down: {
				unicode: "2195",
				unicode_alt: "2195-fe0f",
				code_decimal: "&#8597;",
				name: "up down arrow",
				shortname: ":arrow_up_down:",
				category: "symbols",
				emoji_order: "2010",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			left_right_arrow: {
				unicode: "2194",
				unicode_alt: "2194-fe0f",
				code_decimal: "&harr;",
				name: "left right arrow",
				shortname: ":left_right_arrow:",
				category: "symbols",
				emoji_order: "2011",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			leftwards_arrow_with_hook: {
				unicode: "21a9",
				unicode_alt: "21a9-fe0f",
				code_decimal: "&#8617;",
				name: "leftwards arrow with hook",
				shortname: ":leftwards_arrow_with_hook:",
				category: "symbols",
				emoji_order: "2012",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_right_hook: {
				unicode: "21aa",
				unicode_alt: "21aa-fe0f",
				code_decimal: "&#8618;",
				name: "rightwards arrow with hook",
				shortname: ":arrow_right_hook:",
				category: "symbols",
				emoji_order: "2013",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_heading_up: {
				unicode: "2934",
				unicode_alt: "2934-fe0f",
				code_decimal: "&#10548;",
				name: "arrow pointing rightwards then curving upwards",
				shortname: ":arrow_heading_up:",
				category: "symbols",
				emoji_order: "2014",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_heading_down: {
				unicode: "2935",
				unicode_alt: "2935-fe0f",
				code_decimal: "&#10549;",
				name: "arrow pointing rightwards then curving downwards",
				shortname: ":arrow_heading_down:",
				category: "symbols",
				emoji_order: "2015",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrows_clockwise: {
				unicode: "1f503",
				unicode_alt: "",
				code_decimal: "&#128259;",
				name: "clockwise downwards and upwards open circle arrows",
				shortname: ":arrows_clockwise:",
				category: "symbols",
				emoji_order: "2016",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrows_counterclockwise: {
				unicode: "1f504",
				unicode_alt: "",
				code_decimal: "&#128260;",
				name: "anticlockwise downwards and upwards open circle arrows",
				shortname: ":arrows_counterclockwise:",
				category: "symbols",
				emoji_order: "2017",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			back: {
				unicode: "1f519",
				unicode_alt: "",
				code_decimal: "&#128281;",
				name: "back with leftwards arrow above",
				shortname: ":back:",
				category: "symbols",
				emoji_order: "2018",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			end: {
				unicode: "1f51a",
				unicode_alt: "",
				code_decimal: "&#128282;",
				name: "end with leftwards arrow above",
				shortname: ":end:",
				category: "symbols",
				emoji_order: "2019",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow",
					"symbol"]
			},
			on: {
				unicode: "1f51b",
				unicode_alt: "",
				code_decimal: "&#128283;",
				name: "on with exclamation mark with left right arrow abo",
				shortname: ":on:",
				category: "symbols",
				emoji_order: "2020",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			soon: {
				unicode: "1f51c",
				unicode_alt: "",
				code_decimal: "&#128284;",
				name: "soon with rightwards arrow above",
				shortname: ":soon:",
				category: "symbols",
				emoji_order: "2021",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			top: {
				unicode: "1f51d",
				unicode_alt: "",
				code_decimal: "&#128285;",
				name: "top with upwards arrow above",
				shortname: ":top:",
				category: "symbols",
				emoji_order: "2022",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			place_of_worship: {
				unicode: "1f6d0",
				unicode_alt: "",
				code_decimal: "&#128720;",
				name: "place of worship",
				shortname: ":place_of_worship:",
				category: "symbols",
				emoji_order: "2023",
				aliases: [":worship_symbol:"],
				aliases_ascii: [],
				keywords: ["religion", "symbol", "pray"]
			},
			atom: {
				unicode: "269b",
				unicode_alt: "269b-fe0f",
				code_decimal: "&#9883;",
				name: "atom symbol",
				shortname: ":atom:",
				category: "symbols",
				emoji_order: "2024",
				aliases: [":atom_symbol:"],
				aliases_ascii: [],
				keywords: ["symbol", "science"]
			},
			om_symbol: {
				unicode: "1f549",
				unicode_alt: "1f549-fe0f",
				code_decimal: "&#128329;",
				name: "om symbol",
				shortname: ":om_symbol:",
				category: "symbols",
				emoji_order: "2025",
				aliases: [],
				aliases_ascii: [],
				keywords: ["religion", "symbol"]
			},
			star_of_david: {
				unicode: "2721",
				unicode_alt: "2721-fe0f",
				code_decimal: "&#10017;",
				name: "star of david",
				shortname: ":star_of_david:",
				category: "symbols",
				emoji_order: "2026",
				aliases: [],
				aliases_ascii: [],
				keywords: ["religion", "jew", "star", "symbol"]
			},
			wheel_of_dharma: {
				unicode: "2638",
				unicode_alt: "2638-fe0f",
				code_decimal: "&#9784;",
				name: "wheel of dharma",
				shortname: ":wheel_of_dharma:",
				category: "symbols",
				emoji_order: "2027",
				aliases: [],
				aliases_ascii: [],
				keywords: ["religion", "symbol"]
			},
			yin_yang: {
				unicode: "262f",
				unicode_alt: "262f-fe0f",
				code_decimal: "&#9775;",
				name: "yin yang",
				shortname: ":yin_yang:",
				category: "symbols",
				emoji_order: "2028",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			cross: {
				unicode: "271d",
				unicode_alt: "271d-fe0f",
				code_decimal: "&#10013;",
				name: "latin cross",
				shortname: ":cross:",
				category: "symbols",
				emoji_order: "2029",
				aliases: [":latin_cross:"],
				aliases_ascii: [],
				keywords: ["religion", "symbol"]
			},
			orthodox_cross: {
				unicode: "2626",
				unicode_alt: "2626-fe0f",
				code_decimal: "&#9766;",
				name: "orthodox cross",
				shortname: ":orthodox_cross:",
				category: "symbols",
				emoji_order: "2030",
				aliases: [],
				aliases_ascii: [],
				keywords: ["religion", "symbol"]
			},
			star_and_crescent: {
				unicode: "262a",
				unicode_alt: "262a-fe0f",
				code_decimal: "&#9770;",
				name: "star and crescent",
				shortname: ":star_and_crescent:",
				category: "symbols",
				emoji_order: "2031",
				aliases: [],
				aliases_ascii: [],
				keywords: ["religion", "symbol"]
			},
			peace: {
				unicode: "262e",
				unicode_alt: "262e-fe0f",
				code_decimal: "&#9774;",
				name: "peace symbol",
				shortname: ":peace:",
				category: "symbols",
				emoji_order: "2032",
				aliases: [":peace_symbol:"],
				aliases_ascii: [],
				keywords: ["symbol", "peace", "drugs"]
			},
			menorah: {
				unicode: "1f54e",
				unicode_alt: "",
				code_decimal: "&#128334;",
				name: "menorah with nine branches",
				shortname: ":menorah:",
				category: "symbols",
				emoji_order: "2033",
				aliases: [],
				aliases_ascii: [],
				keywords: ["religion", "object", "jew", "symbol", "holidays"]
			},
			six_pointed_star: {
				unicode: "1f52f",
				unicode_alt: "",
				code_decimal: "&#128303;",
				name: "six pointed star with middle dot",
				shortname: ":six_pointed_star:",
				category: "symbols",
				emoji_order: "2034",
				aliases: [],
				aliases_ascii: [],
				keywords: ["religion", "jew", "star", "symbol"]
			},
			aries: {
				unicode: "2648",
				unicode_alt: "2648-fe0f",
				code_decimal: "&#9800;",
				name: "aries",
				shortname: ":aries:",
				category: "symbols",
				emoji_order: "2035",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			taurus: {
				unicode: "2649",
				unicode_alt: "2649-fe0f",
				code_decimal: "&#9801;",
				name: "taurus",
				shortname: ":taurus:",
				category: "symbols",
				emoji_order: "2036",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			gemini: {
				unicode: "264a",
				unicode_alt: "264a-fe0f",
				code_decimal: "&#9802;",
				name: "gemini",
				shortname: ":gemini:",
				category: "symbols",
				emoji_order: "2037",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			cancer: {
				unicode: "264b",
				unicode_alt: "264b-fe0f",
				code_decimal: "&#9803;",
				name: "cancer",
				shortname: ":cancer:",
				category: "symbols",
				emoji_order: "2038",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			leo: {
				unicode: "264c",
				unicode_alt: "264c-fe0f",
				code_decimal: "&#9804;",
				name: "leo",
				shortname: ":leo:",
				category: "symbols",
				emoji_order: "2039",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			virgo: {
				unicode: "264d",
				unicode_alt: "264d-fe0f",
				code_decimal: "&#9805;",
				name: "virgo",
				shortname: ":virgo:",
				category: "symbols",
				emoji_order: "2040",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			libra: {
				unicode: "264e",
				unicode_alt: "264e-fe0f",
				code_decimal: "&#9806;",
				name: "libra",
				shortname: ":libra:",
				category: "symbols",
				emoji_order: "2041",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			scorpius: {
				unicode: "264f",
				unicode_alt: "264f-fe0f",
				code_decimal: "&#9807;",
				name: "scorpius",
				shortname: ":scorpius:",
				category: "symbols",
				emoji_order: "2042",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			sagittarius: {
				unicode: "2650",
				unicode_alt: "2650-fe0f",
				code_decimal: "&#9808;",
				name: "sagittarius",
				shortname: ":sagittarius:",
				category: "symbols",
				emoji_order: "2043",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			capricorn: {
				unicode: "2651",
				unicode_alt: "2651-fe0f",
				code_decimal: "&#9809;",
				name: "capricorn",
				shortname: ":capricorn:",
				category: "symbols",
				emoji_order: "2044",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			aquarius: {
				unicode: "2652",
				unicode_alt: "2652-fe0f",
				code_decimal: "&#9810;",
				name: "aquarius",
				shortname: ":aquarius:",
				category: "symbols",
				emoji_order: "2045",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			pisces: {
				unicode: "2653",
				unicode_alt: "2653-fe0f",
				code_decimal: "&#9811;",
				name: "pisces",
				shortname: ":pisces:",
				category: "symbols",
				emoji_order: "2046",
				aliases: [],
				aliases_ascii: [],
				keywords: ["zodiac", "symbol"]
			},
			ophiuchus: {
				unicode: "26ce",
				unicode_alt: "",
				code_decimal: "&#9934;",
				name: "ophiuchus",
				shortname: ":ophiuchus:",
				category: "symbols",
				emoji_order: "2047",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			twisted_rightwards_arrows: {
				unicode: "1f500",
				unicode_alt: "",
				code_decimal: "&#128256;",
				name: "twisted rightwards arrows",
				shortname: ":twisted_rightwards_arrows:",
				category: "symbols",
				emoji_order: "2048",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			repeat: {
				unicode: "1f501",
				unicode_alt: "",
				code_decimal: "&#128257;",
				name: "clockwise rightwards and leftwards open circle arrows",
				shortname: ":repeat:",
				category: "symbols",
				emoji_order: "2049",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			repeat_one: {
				unicode: "1f502",
				unicode_alt: "",
				code_decimal: "&#128258;",
				name: "clockwise rightwards and leftwards open circle arrows with circled one overlay",
				shortname: ":repeat_one:",
				category: "symbols",
				emoji_order: "2050",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_forward: {
				unicode: "25b6",
				unicode_alt: "25b6-fe0f",
				code_decimal: "&#9654;",
				name: "black right-pointing triangle",
				shortname: ":arrow_forward:",
				category: "symbols",
				emoji_order: "2051",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol", "triangle"]
			},
			fast_forward: {
				unicode: "23e9",
				unicode_alt: "",
				code_decimal: "&#9193;",
				name: "black right-pointing double triangle",
				shortname: ":fast_forward:",
				category: "symbols",
				emoji_order: "2052",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			track_next: {
				unicode: "23ed",
				unicode_alt: "23ed-fe0f",
				code_decimal: "&#9197;",
				name: "black right-pointing double triangle with vertical bar",
				shortname: ":track_next:",
				category: "symbols",
				emoji_order: "2053",
				aliases: [":next_track:"],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			play_pause: {
				unicode: "23ef",
				unicode_alt: "23ef-fe0f",
				code_decimal: "&#9199;",
				name: "black right-pointing double triangle with double vertical bar",
				shortname: ":play_pause:",
				category: "symbols",
				emoji_order: "2054",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_backward: {
				unicode: "25c0",
				unicode_alt: "25c0-fe0f",
				code_decimal: "&#9664;",
				name: "black left-pointing triangle",
				shortname: ":arrow_backward:",
				category: "symbols",
				emoji_order: "2055",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol", "triangle"]
			},
			rewind: {
				unicode: "23ea",
				unicode_alt: "",
				code_decimal: "&#9194;",
				name: "black left-pointing double triangle",
				shortname: ":rewind:",
				category: "symbols",
				emoji_order: "2056",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			track_previous: {
				unicode: "23ee",
				unicode_alt: "23ee-fe0f",
				code_decimal: "&#9198;",
				name: "black left-pointing double triangle with vertical bar",
				shortname: ":track_previous:",
				category: "symbols",
				emoji_order: "2057",
				aliases: [":previous_track:"],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_up_small: {
				unicode: "1f53c",
				unicode_alt: "",
				code_decimal: "&#128316;",
				name: "up-pointing small red triangle",
				shortname: ":arrow_up_small:",
				category: "symbols",
				emoji_order: "2058",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol", "triangle"]
			},
			arrow_double_up: {
				unicode: "23eb",
				unicode_alt: "",
				code_decimal: "&#9195;",
				name: "black up-pointing double triangle",
				shortname: ":arrow_double_up:",
				category: "symbols",
				emoji_order: "2059",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			arrow_down_small: {
				unicode: "1f53d",
				unicode_alt: "",
				code_decimal: "&#128317;",
				name: "down-pointing small red triangle",
				shortname: ":arrow_down_small:",
				category: "symbols",
				emoji_order: "2060",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol", "triangle"]
			},
			arrow_double_down: {
				unicode: "23ec",
				unicode_alt: "",
				code_decimal: "&#9196;",
				name: "black down-pointing double triangle",
				shortname: ":arrow_double_down:",
				category: "symbols",
				emoji_order: "2061",
				aliases: [],
				aliases_ascii: [],
				keywords: ["arrow", "symbol"]
			},
			pause_button: {
				unicode: "23f8",
				unicode_alt: "23f8-fe0f",
				code_decimal: "&#9208;",
				name: "double vertical bar",
				shortname: ":pause_button:",
				category: "symbols",
				emoji_order: "2062",
				aliases: [":double_vertical_bar:"],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			stop_button: {
				unicode: "23f9",
				unicode_alt: "23f9-fe0f",
				code_decimal: "&#9209;",
				name: "black square for stop",
				shortname: ":stop_button:",
				category: "symbols",
				emoji_order: "2063",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "square"]
			},
			record_button: {
				unicode: "23fa",
				unicode_alt: "23fa-fe0f",
				code_decimal: "&#9210;",
				name: "black circle for record",
				shortname: ":record_button:",
				category: "symbols",
				emoji_order: "2064",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol",
					"circle"]
			},
			eject: {
				unicode: "23cf",
				unicode_alt: "23cf-fe0f",
				code_decimal: "&#9167;",
				name: "eject symbol",
				shortname: ":eject:",
				category: "symbols",
				emoji_order: "2065",
				aliases: [":eject_symbol:"],
				aliases_ascii: [],
				keywords: []
			},
			cinema: {
				unicode: "1f3a6",
				unicode_alt: "",
				code_decimal: "&#127910;",
				name: "cinema",
				shortname: ":cinema:",
				category: "symbols",
				emoji_order: "2066",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "camera", "movie"]
			},
			low_brightness: {
				unicode: "1f505",
				unicode_alt: "",
				code_decimal: "&#128261;",
				name: "low brightness symbol",
				shortname: ":low_brightness:",
				category: "symbols",
				emoji_order: "2067",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "sun"]
			},
			high_brightness: {
				unicode: "1f506",
				unicode_alt: "",
				code_decimal: "&#128262;",
				name: "high brightness symbol",
				shortname: ":high_brightness:",
				category: "symbols",
				emoji_order: "2068",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "sun"]
			},
			signal_strength: {
				unicode: "1f4f6",
				unicode_alt: "",
				code_decimal: "&#128246;",
				name: "antenna with bars",
				shortname: ":signal_strength:",
				category: "symbols",
				emoji_order: "2069",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			vibration_mode: {
				unicode: "1f4f3",
				unicode_alt: "",
				code_decimal: "&#128243;",
				name: "vibration mode",
				shortname: ":vibration_mode:",
				category: "symbols",
				emoji_order: "2070",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			mobile_phone_off: {
				unicode: "1f4f4",
				unicode_alt: "",
				code_decimal: "&#128244;",
				name: "mobile phone off",
				shortname: ":mobile_phone_off:",
				category: "symbols",
				emoji_order: "2071",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			recycle: {
				unicode: "267b",
				unicode_alt: "267b-fe0f",
				code_decimal: "&#9851;",
				name: "black universal recycling symbol",
				shortname: ":recycle:",
				category: "symbols",
				emoji_order: "2072",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			name_badge: {
				unicode: "1f4db",
				unicode_alt: "",
				code_decimal: "&#128219;",
				name: "name badge",
				shortname: ":name_badge:",
				category: "symbols",
				emoji_order: "2073",
				aliases: [],
				aliases_ascii: [],
				keywords: ["work"]
			},
			"fleur-de-lis": {
				unicode: "269c",
				unicode_alt: "269c-fe0f",
				code_decimal: "&#9884;",
				name: "fleur-de-lis",
				shortname: ":fleur-de-lis:",
				category: "symbols",
				emoji_order: "2074",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "symbol"]
			},
			beginner: {
				unicode: "1f530",
				unicode_alt: "",
				code_decimal: "&#128304;",
				name: "japanese symbol for beginner",
				shortname: ":beginner:",
				category: "symbols",
				emoji_order: "2075",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			trident: {
				unicode: "1f531",
				unicode_alt: "",
				code_decimal: "&#128305;",
				name: "trident emblem",
				shortname: ":trident:",
				category: "symbols",
				emoji_order: "2076",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "symbol"]
			},
			o: {
				unicode: "2b55",
				unicode_alt: "2b55-fe0f",
				code_decimal: "&#11093;",
				name: "heavy large circle",
				shortname: ":o:",
				category: "symbols",
				emoji_order: "2077",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "circle"]
			},
			white_check_mark: {
				unicode: "2705",
				unicode_alt: "",
				code_decimal: "&#9989;",
				name: "white heavy check mark",
				shortname: ":white_check_mark:",
				category: "symbols",
				emoji_order: "2078",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			ballot_box_with_check: {
				unicode: "2611",
				unicode_alt: "2611-fe0f",
				code_decimal: "&#9745;",
				name: "ballot box with check",
				shortname: ":ballot_box_with_check:",
				category: "symbols",
				emoji_order: "2079",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			heavy_check_mark: {
				unicode: "2714",
				unicode_alt: "2714-fe0f",
				code_decimal: "&#10004;",
				name: "heavy check mark",
				shortname: ":heavy_check_mark:",
				category: "symbols",
				emoji_order: "2080",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			heavy_multiplication_x: {
				unicode: "2716",
				unicode_alt: "2716-fe0f",
				code_decimal: "&#10006;",
				name: "heavy multiplication x",
				shortname: ":heavy_multiplication_x:",
				category: "symbols",
				emoji_order: "2081",
				aliases: [],
				aliases_ascii: [],
				keywords: ["math", "symbol"]
			},
			x: {
				unicode: "274c",
				unicode_alt: "",
				code_decimal: "&#10060;",
				name: "cross mark",
				shortname: ":x:",
				category: "symbols",
				emoji_order: "2082",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "sol"]
			},
			negative_squared_cross_mark: {
				unicode: "274e",
				unicode_alt: "",
				code_decimal: "&#10062;",
				name: "negative squared cross mark",
				shortname: ":negative_squared_cross_mark:",
				category: "symbols",
				emoji_order: "2083",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			heavy_plus_sign: {
				unicode: "2795",
				unicode_alt: "",
				code_decimal: "&#10133;",
				name: "heavy plus sign",
				shortname: ":heavy_plus_sign:",
				category: "symbols",
				emoji_order: "2084",
				aliases: [],
				aliases_ascii: [],
				keywords: ["math", "symbol"]
			},
			heavy_minus_sign: {
				unicode: "2796",
				unicode_alt: "",
				code_decimal: "&#10134;",
				name: "heavy minus sign",
				shortname: ":heavy_minus_sign:",
				category: "symbols",
				emoji_order: "2088",
				aliases: [],
				aliases_ascii: [],
				keywords: ["math", "symbol"]
			},
			heavy_division_sign: {
				unicode: "2797",
				unicode_alt: "",
				code_decimal: "&#10135;",
				name: "heavy division sign",
				shortname: ":heavy_division_sign:",
				category: "symbols",
				emoji_order: "2089",
				aliases: [],
				aliases_ascii: [],
				keywords: ["math", "symbol"]
			},
			curly_loop: {
				unicode: "27b0",
				unicode_alt: "",
				code_decimal: "&#10160;",
				name: "curly loop",
				shortname: ":curly_loop:",
				category: "symbols",
				emoji_order: "2090",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			loop: {
				unicode: "27bf",
				unicode_alt: "",
				code_decimal: "&#10175;",
				name: "double curly loop",
				shortname: ":loop:",
				category: "symbols",
				emoji_order: "2091",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			part_alternation_mark: {
				unicode: "303d",
				unicode_alt: "303d-fe0f",
				code_decimal: "&#12349;",
				name: "part alternation mark",
				shortname: ":part_alternation_mark:",
				category: "symbols",
				emoji_order: "2092",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			eight_spoked_asterisk: {
				unicode: "2733",
				unicode_alt: "2733-fe0f",
				code_decimal: "&#10035;",
				name: "eight spoked asterisk",
				shortname: ":eight_spoked_asterisk:",
				category: "symbols",
				emoji_order: "2093",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			eight_pointed_black_star: {
				unicode: "2734",
				unicode_alt: "2734-fe0f",
				code_decimal: "&#10036;",
				name: "eight pointed black star",
				shortname: ":eight_pointed_black_star:",
				category: "symbols",
				emoji_order: "2094",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			sparkle: {
				unicode: "2747",
				unicode_alt: "2747-fe0f",
				code_decimal: "&#10055;",
				name: "sparkle",
				shortname: ":sparkle:",
				category: "symbols",
				emoji_order: "2095",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			bangbang: {
				unicode: "203c",
				unicode_alt: "203c-fe0f",
				code_decimal: "&#8252;",
				name: "double exclamation mark",
				shortname: ":bangbang:",
				category: "symbols",
				emoji_order: "2096",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "punctuation"]
			},
			interrobang: {
				unicode: "2049",
				unicode_alt: "2049-fe0f",
				code_decimal: "&#8265;",
				name: "exclamation question mark",
				shortname: ":interrobang:",
				category: "symbols",
				emoji_order: "2097",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "punctuation"]
			},
			question: {
				unicode: "2753",
				unicode_alt: "",
				code_decimal: "&#10067;",
				name: "black question mark ornament",
				shortname: ":question:",
				category: "symbols",
				emoji_order: "2098",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "punctuation", "wth"]
			},
			grey_question: {
				unicode: "2754",
				unicode_alt: "",
				code_decimal: "&#10068;",
				name: "white question mark ornament",
				shortname: ":grey_question:",
				category: "symbols",
				emoji_order: "2099",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "punctuation"]
			},
			grey_exclamation: {
				unicode: "2755",
				unicode_alt: "",
				code_decimal: "&#10069;",
				name: "white exclamation mark ornament",
				shortname: ":grey_exclamation:",
				category: "symbols",
				emoji_order: "2100",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "punctuation"]
			},
			exclamation: {
				unicode: "2757",
				unicode_alt: "2757-fe0f",
				code_decimal: "&#10071;",
				name: "heavy exclamation mark symbol",
				shortname: ":exclamation:",
				category: "symbols",
				emoji_order: "2101",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "punctuation"]
			},
			wavy_dash: {
				unicode: "3030",
				unicode_alt: "3030-fe0f",
				code_decimal: "&#12336;",
				name: "wavy dash",
				shortname: ":wavy_dash:",
				category: "symbols",
				emoji_order: "2102",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			copyright: {
				unicode: "00a9",
				unicode_alt: "00a9-fe0f",
				code_decimal: "&copy;",
				name: "copyright sign",
				shortname: ":copyright:",
				category: "symbols",
				emoji_order: "2103",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			registered: {
				unicode: "00ae",
				unicode_alt: "00ae-fe0f",
				code_decimal: "&reg;",
				name: "registered sign",
				shortname: ":registered:",
				category: "symbols",
				emoji_order: "2104",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			tm: {
				unicode: "2122",
				unicode_alt: "2122-fe0f",
				code_decimal: "&trade;",
				name: "trade mark sign",
				shortname: ":tm:",
				category: "symbols",
				emoji_order: "2105",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			hash: {
				unicode: "0023-20e3",
				unicode_alt: "0023-fe0f-20e3",
				code_decimal: "#&#8419;",
				name: "keycap number sign",
				shortname: ":hash:",
				category: "symbols",
				emoji_order: "2106",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "symbol"]
			},
			asterisk: {
				unicode: "002a-20e3",
				unicode_alt: "002a-fe0f-20e3",
				code_decimal: "*&#8419;",
				name: "keycap asterisk",
				shortname: ":asterisk:",
				category: "symbols",
				emoji_order: "2107",
				aliases: [":keycap_asterisk:"],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			zero: {
				unicode: "0030-20e3",
				unicode_alt: "0030-fe0f-20e3",
				code_decimal: "0&#8419;",
				name: "keycap digit zero",
				shortname: ":zero:",
				category: "symbols",
				emoji_order: "2108",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			one: {
				unicode: "0031-20e3",
				unicode_alt: "0031-fe0f-20e3",
				code_decimal: "1&#8419;",
				name: "keycap digit one",
				shortname: ":one:",
				category: "symbols",
				emoji_order: "2109",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			two: {
				unicode: "0032-20e3",
				unicode_alt: "0032-fe0f-20e3",
				code_decimal: "2&#8419;",
				name: "keycap digit two",
				shortname: ":two:",
				category: "symbols",
				emoji_order: "2110",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			three: {
				unicode: "0033-20e3",
				unicode_alt: "0033-fe0f-20e3",
				code_decimal: "3&#8419;",
				name: "keycap digit three",
				shortname: ":three:",
				category: "symbols",
				emoji_order: "2111",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			four: {
				unicode: "0034-20e3",
				unicode_alt: "0034-fe0f-20e3",
				code_decimal: "4&#8419;",
				name: "keycap digit four",
				shortname: ":four:",
				category: "symbols",
				emoji_order: "2112",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			five: {
				unicode: "0035-20e3",
				unicode_alt: "0035-fe0f-20e3",
				code_decimal: "5&#8419;",
				name: "keycap digit five",
				shortname: ":five:",
				category: "symbols",
				emoji_order: "2113",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			six: {
				unicode: "0036-20e3",
				unicode_alt: "0036-fe0f-20e3",
				code_decimal: "6&#8419;",
				name: "keycap digit six",
				shortname: ":six:",
				category: "symbols",
				emoji_order: "2114",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			seven: {
				unicode: "0037-20e3",
				unicode_alt: "0037-fe0f-20e3",
				code_decimal: "7&#8419;",
				name: "keycap digit seven",
				shortname: ":seven:",
				category: "symbols",
				emoji_order: "2115",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			eight: {
				unicode: "0038-20e3",
				unicode_alt: "0038-fe0f-20e3",
				code_decimal: "8&#8419;",
				name: "keycap digit eight",
				shortname: ":eight:",
				category: "symbols",
				emoji_order: "2116",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			nine: {
				unicode: "0039-20e3",
				unicode_alt: "0039-fe0f-20e3",
				code_decimal: "9&#8419;",
				name: "keycap digit nine",
				shortname: ":nine:",
				category: "symbols",
				emoji_order: "2117",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			keycap_ten: {
				unicode: "1f51f",
				unicode_alt: "",
				code_decimal: "&#128287;",
				name: "keycap ten",
				shortname: ":keycap_ten:",
				category: "symbols",
				emoji_order: "2118",
				aliases: [],
				aliases_ascii: [],
				keywords: ["number", "math", "symbol"]
			},
			100: {
				unicode: "1f4af",
				unicode_alt: "",
				code_decimal: "&#128175;",
				name: "hundred points symbol",
				shortname: ":100:",
				category: "symbols",
				emoji_order: "2119",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "wow", "win", "perfect", "parties"]
			},
			capital_abcd: {
				unicode: "1f520",
				unicode_alt: "",
				code_decimal: "&#128288;",
				name: "input symbol for latin capital letters",
				shortname: ":capital_abcd:",
				category: "symbols",
				emoji_order: "2120",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			abcd: {
				unicode: "1f521",
				unicode_alt: "",
				code_decimal: "&#128289;",
				name: "input symbol for latin small letters",
				shortname: ":abcd:",
				category: "symbols",
				emoji_order: "2121",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			1234: {
				unicode: "1f522",
				unicode_alt: "",
				code_decimal: "&#128290;",
				name: "input symbol for numbers",
				shortname: ":1234:",
				category: "symbols",
				emoji_order: "2122",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			symbols: {
				unicode: "1f523",
				unicode_alt: "",
				code_decimal: "&#128291;",
				name: "input symbol for symbols",
				shortname: ":symbols:",
				category: "symbols",
				emoji_order: "2123",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			abc: {
				unicode: "1f524",
				unicode_alt: "",
				code_decimal: "&#128292;",
				name: "input symbol for latin letters",
				shortname: ":abc:",
				category: "symbols",
				emoji_order: "2124",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			a: {
				unicode: "1f170",
				unicode_alt: "",
				code_decimal: "&#127344;",
				name: "negative squared latin capital letter a",
				shortname: ":a:",
				category: "symbols",
				emoji_order: "2125",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			ab: {
				unicode: "1f18e",
				unicode_alt: "",
				code_decimal: "&#127374;",
				name: "negative squared ab",
				shortname: ":ab:",
				category: "symbols",
				emoji_order: "2126",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			b: {
				unicode: "1f171",
				unicode_alt: "",
				code_decimal: "&#127345;",
				name: "negative squared latin capital letter b",
				shortname: ":b:",
				category: "symbols",
				emoji_order: "2127",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			cl: {
				unicode: "1f191",
				unicode_alt: "",
				code_decimal: "&#127377;",
				name: "squared cl",
				shortname: ":cl:",
				category: "symbols",
				emoji_order: "2128",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			cool: {
				unicode: "1f192",
				unicode_alt: "",
				code_decimal: "&#127378;",
				name: "squared cool",
				shortname: ":cool:",
				category: "symbols",
				emoji_order: "2129",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			free: {
				unicode: "1f193",
				unicode_alt: "",
				code_decimal: "&#127379;",
				name: "squared free",
				shortname: ":free:",
				category: "symbols",
				emoji_order: "2130",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			information_source: {
				unicode: "2139",
				unicode_alt: "2139-fe0f",
				code_decimal: "&#8505;",
				name: "information source",
				shortname: ":information_source:",
				category: "symbols",
				emoji_order: "2131",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			id: {
				unicode: "1f194",
				unicode_alt: "",
				code_decimal: "&#127380;",
				name: "squared id",
				shortname: ":id:",
				category: "symbols",
				emoji_order: "2132",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			m: {
				unicode: "24c2",
				unicode_alt: "24c2-fe0f",
				code_decimal: "&#9410;",
				name: "circled latin capital letter m",
				shortname: ":m:",
				category: "symbols",
				emoji_order: "2133",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			"new": {
				unicode: "1f195",
				unicode_alt: "",
				code_decimal: "&#127381;",
				name: "squared new",
				shortname: ":new:",
				category: "symbols",
				emoji_order: "2134",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			ng: {
				unicode: "1f196",
				unicode_alt: "",
				code_decimal: "&#127382;",
				name: "squared ng",
				shortname: ":ng:",
				category: "symbols",
				emoji_order: "2135",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			o2: {
				unicode: "1f17e",
				unicode_alt: "",
				code_decimal: "&#127358;",
				name: "negative squared latin capital letter o",
				shortname: ":o2:",
				category: "symbols",
				emoji_order: "2136",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			ok: {
				unicode: "1f197",
				unicode_alt: "",
				code_decimal: "&#127383;",
				name: "squared ok",
				shortname: ":ok:",
				category: "symbols",
				emoji_order: "2137",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			parking: {
				unicode: "1f17f",
				unicode_alt: "1f17f-fe0f",
				code_decimal: "&#127359;",
				name: "negative squared latin capital letter p",
				shortname: ":parking:",
				category: "symbols",
				emoji_order: "2138",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			sos: {
				unicode: "1f198",
				unicode_alt: "",
				code_decimal: "&#127384;",
				name: "squared sos",
				shortname: ":sos:",
				category: "symbols",
				emoji_order: "2139",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			up: {
				unicode: "1f199",
				unicode_alt: "",
				code_decimal: "&#127385;",
				name: "squared up with exclamation mark",
				shortname: ":up:",
				category: "symbols",
				emoji_order: "2140",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			vs: {
				unicode: "1f19a",
				unicode_alt: "",
				code_decimal: "&#127386;",
				name: "squared vs",
				shortname: ":vs:",
				category: "symbols",
				emoji_order: "2141",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			koko: {
				unicode: "1f201",
				unicode_alt: "",
				code_decimal: "&#127489;",
				name: "squared katakana koko",
				shortname: ":koko:",
				category: "symbols",
				emoji_order: "2142",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			sa: {
				unicode: "1f202",
				unicode_alt: "1f202-fe0f",
				code_decimal: "&#127490;",
				name: "squared katakana sa",
				shortname: ":sa:",
				category: "symbols",
				emoji_order: "2143",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			u6708: {
				unicode: "1f237",
				unicode_alt: "1f237-fe0f",
				code_decimal: "&#127543;",
				name: "squared cjk unified ideograph-6708",
				shortname: ":u6708:",
				category: "symbols",
				emoji_order: "2144",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			u6709: {
				unicode: "1f236",
				unicode_alt: "",
				code_decimal: "&#127542;",
				name: "squared cjk unified ideograph-6709",
				shortname: ":u6709:",
				category: "symbols",
				emoji_order: "2145",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			u6307: {
				unicode: "1f22f",
				unicode_alt: "1f22f-fe0f",
				code_decimal: "&#127535;",
				name: "squared cjk unified ideograph-6307",
				shortname: ":u6307:",
				category: "symbols",
				emoji_order: "2146",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			ideograph_advantage: {
				unicode: "1f250",
				unicode_alt: "",
				code_decimal: "&#127568;",
				name: "circled ideograph advantage",
				shortname: ":ideograph_advantage:",
				category: "symbols",
				emoji_order: "2147",
				aliases: [],
				aliases_ascii: [],
				keywords: ["japan", "symbol"]
			},
			u5272: {
				unicode: "1f239",
				unicode_alt: "",
				code_decimal: "&#127545;",
				name: "squared cjk unified ideograph-5272",
				shortname: ":u5272:",
				category: "symbols",
				emoji_order: "2148",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			u7121: {
				unicode: "1f21a",
				unicode_alt: "1f21a-fe0f",
				code_decimal: "&#127514;",
				name: "squared cjk unified ideograph-7121",
				shortname: ":u7121:",
				category: "symbols",
				emoji_order: "2149",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			u7981: {
				unicode: "1f232",
				unicode_alt: "",
				code_decimal: "&#127538;",
				name: "squared cjk unified ideograph-7981",
				shortname: ":u7981:",
				category: "symbols",
				emoji_order: "2150",
				aliases: [],
				aliases_ascii: [],
				keywords: ["japan", "symbol"]
			},
			accept: {
				unicode: "1f251",
				unicode_alt: "",
				code_decimal: "&#127569;",
				name: "circled ideograph accept",
				shortname: ":accept:",
				category: "symbols",
				emoji_order: "2151",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			u7533: {
				unicode: "1f238",
				unicode_alt: "",
				code_decimal: "&#127544;",
				name: "squared cjk unified ideograph-7533",
				shortname: ":u7533:",
				category: "symbols",
				emoji_order: "2152",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			u5408: {
				unicode: "1f234",
				unicode_alt: "",
				code_decimal: "&#127540;",
				name: "squared cjk unified ideograph-5408",
				shortname: ":u5408:",
				category: "symbols",
				emoji_order: "2153",
				aliases: [],
				aliases_ascii: [],
				keywords: ["japan", "symbol"]
			},
			u7a7a: {
				unicode: "1f233",
				unicode_alt: "",
				code_decimal: "&#127539;",
				name: "squared cjk unified ideograph-7a7a",
				shortname: ":u7a7a:",
				category: "symbols",
				emoji_order: "2154",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			congratulations: {
				unicode: "3297",
				unicode_alt: "3297-fe0f",
				code_decimal: "&#12951;",
				name: "circled ideograph congratulation",
				shortname: ":congratulations:",
				category: "symbols",
				emoji_order: "2155",
				aliases: [],
				aliases_ascii: [],
				keywords: ["japan", "symbol"]
			},
			secret: {
				unicode: "3299",
				unicode_alt: "3299-fe0f",
				code_decimal: "&#12953;",
				name: "circled ideograph secret",
				shortname: ":secret:",
				category: "symbols",
				emoji_order: "2156",
				aliases: [],
				aliases_ascii: [],
				keywords: ["japan", "symbol"]
			},
			u55b6: {
				unicode: "1f23a",
				unicode_alt: "",
				code_decimal: "&#127546;",
				name: "squared cjk unified ideograph-55b6",
				shortname: ":u55b6:",
				category: "symbols",
				emoji_order: "2157",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			u6e80: {
				unicode: "1f235",
				unicode_alt: "",
				code_decimal: "&#127541;",
				name: "squared cjk unified ideograph-6e80",
				shortname: ":u6e80:",
				category: "symbols",
				emoji_order: "2158",
				aliases: [],
				aliases_ascii: [],
				keywords: ["japan",
					"symbol"]
			},
			black_small_square: {
				unicode: "25aa",
				unicode_alt: "25aa-fe0f",
				code_decimal: "&#9642;",
				name: "black small square",
				shortname: ":black_small_square:",
				category: "symbols",
				emoji_order: "2159",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			white_small_square: {
				unicode: "25ab",
				unicode_alt: "25ab-fe0f",
				code_decimal: "&#9643;",
				name: "white small square",
				shortname: ":white_small_square:",
				category: "symbols",
				emoji_order: "2160",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			white_medium_square: {
				unicode: "25fb",
				unicode_alt: "25fb-fe0f",
				code_decimal: "&#9723;",
				name: "white medium square",
				shortname: ":white_medium_square:",
				category: "symbols",
				emoji_order: "2161",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			black_medium_square: {
				unicode: "25fc",
				unicode_alt: "25fc-fe0f",
				code_decimal: "&#9724;",
				name: "black medium square",
				shortname: ":black_medium_square:",
				category: "symbols",
				emoji_order: "2162",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			white_medium_small_square: {
				unicode: "25fd",
				unicode_alt: "25fd-fe0f",
				code_decimal: "&#9725;",
				name: "white medium small square",
				shortname: ":white_medium_small_square:",
				category: "symbols",
				emoji_order: "2163",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			black_medium_small_square: {
				unicode: "25fe",
				unicode_alt: "25fe-fe0f",
				code_decimal: "&#9726;",
				name: "black medium small square",
				shortname: ":black_medium_small_square:",
				category: "symbols",
				emoji_order: "2164",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			black_large_square: {
				unicode: "2b1b",
				unicode_alt: "2b1b-fe0f",
				code_decimal: "&#11035;",
				name: "black large square",
				shortname: ":black_large_square:",
				category: "symbols",
				emoji_order: "2165",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			white_large_square: {
				unicode: "2b1c",
				unicode_alt: "2b1c-fe0f",
				code_decimal: "&#11036;",
				name: "white large square",
				shortname: ":white_large_square:",
				category: "symbols",
				emoji_order: "2166",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			large_orange_diamond: {
				unicode: "1f536",
				unicode_alt: "",
				code_decimal: "&#128310;",
				name: "large orange diamond",
				shortname: ":large_orange_diamond:",
				category: "symbols",
				emoji_order: "2167",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol"]
			},
			large_blue_diamond: {
				unicode: "1f537",
				unicode_alt: "",
				code_decimal: "&#128311;",
				name: "large blue diamond",
				shortname: ":large_blue_diamond:",
				category: "symbols",
				emoji_order: "2168",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol"]
			},
			small_orange_diamond: {
				unicode: "1f538",
				unicode_alt: "",
				code_decimal: "&#128312;",
				name: "small orange diamond",
				shortname: ":small_orange_diamond:",
				category: "symbols",
				emoji_order: "2169",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol"]
			},
			small_blue_diamond: {
				unicode: "1f539",
				unicode_alt: "",
				code_decimal: "&#128313;",
				name: "small blue diamond",
				shortname: ":small_blue_diamond:",
				category: "symbols",
				emoji_order: "2170",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol"]
			},
			small_red_triangle: {
				unicode: "1f53a",
				unicode_alt: "",
				code_decimal: "&#128314;",
				name: "up-pointing red triangle",
				shortname: ":small_red_triangle:",
				category: "symbols",
				emoji_order: "2171",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "triangle"]
			},
			small_red_triangle_down: {
				unicode: "1f53b",
				unicode_alt: "",
				code_decimal: "&#128315;",
				name: "down-pointing red triangle",
				shortname: ":small_red_triangle_down:",
				category: "symbols",
				emoji_order: "2172",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "triangle"]
			},
			diamond_shape_with_a_dot_inside: {
				unicode: "1f4a0",
				unicode_alt: "",
				code_decimal: "&#128160;",
				name: "diamond shape with a dot inside",
				shortname: ":diamond_shape_with_a_dot_inside:",
				category: "symbols",
				emoji_order: "2173",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol"]
			},
			radio_button: {
				unicode: "1f518",
				unicode_alt: "",
				code_decimal: "&#128280;",
				name: "radio button",
				shortname: ":radio_button:",
				category: "symbols",
				emoji_order: "2174",
				aliases: [],
				aliases_ascii: [],
				keywords: ["symbol", "circle"]
			},
			black_square_button: {
				unicode: "1f532",
				unicode_alt: "",
				code_decimal: "&#128306;",
				name: "black square button",
				shortname: ":black_square_button:",
				category: "symbols",
				emoji_order: "2175",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			white_square_button: {
				unicode: "1f533",
				unicode_alt: "",
				code_decimal: "&#128307;",
				name: "white square button",
				shortname: ":white_square_button:",
				category: "symbols",
				emoji_order: "2176",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "square"]
			},
			white_circle: {
				unicode: "26aa",
				unicode_alt: "26aa-fe0f",
				code_decimal: "&#9898;",
				name: "white circle",
				shortname: ":white_circle:",
				category: "symbols",
				emoji_order: "2177",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "circle"]
			},
			black_circle: {
				unicode: "26ab",
				unicode_alt: "26ab-fe0f",
				code_decimal: "&#9899;",
				name: "black circle",
				shortname: ":black_circle:",
				category: "symbols",
				emoji_order: "2178",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "circle"]
			},
			red_circle: {
				unicode: "1f534",
				unicode_alt: "",
				code_decimal: "&#128308;",
				name: "red circle",
				shortname: ":red_circle:",
				category: "symbols",
				emoji_order: "2179",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "circle"]
			},
			blue_circle: {
				unicode: "1f535",
				unicode_alt: "",
				code_decimal: "&#128309;",
				name: "blue circle",
				shortname: ":blue_circle:",
				category: "symbols",
				emoji_order: "2180",
				aliases: [],
				aliases_ascii: [],
				keywords: ["shapes", "symbol", "circle"]
			},
			checkered_flag: {
				unicode: "1f3c1",
				unicode_alt: "",
				code_decimal: "&#127937;",
				name: "chequered flag",
				shortname: ":checkered_flag:",
				category: "travel",
				emoji_order: "2181",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			triangular_flag_on_post: {
				unicode: "1f6a9",
				unicode_alt: "",
				code_decimal: "&#128681;",
				name: "triangular flag on post",
				shortname: ":triangular_flag_on_post:",
				category: "objects",
				emoji_order: "2182",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object"]
			},
			crossed_flags: {
				unicode: "1f38c",
				unicode_alt: "",
				code_decimal: "&#127884;",
				name: "crossed flags",
				shortname: ":crossed_flags:",
				category: "objects",
				emoji_order: "2183",
				aliases: [],
				aliases_ascii: [],
				keywords: ["object", "japan"]
			},
			flag_black: {
				unicode: "1f3f4",
				unicode_alt: "",
				code_decimal: "&#127988;",
				name: "waving black flag",
				shortname: ":flag_black:",
				category: "objects",
				emoji_order: "2184",
				aliases: [":waving_black_flag:"],
				aliases_ascii: [],
				keywords: ["object"]
			},
			flag_white: {
				unicode: "1f3f3",
				unicode_alt: "1f3f3-fe0f",
				code_decimal: "&#127987;",
				name: "waving white flag",
				shortname: ":flag_white:",
				category: "objects",
				emoji_order: "2185",
				aliases: [":waving_white_flag:"],
				aliases_ascii: [],
				keywords: ["object"]
			},
			rainbow_flag: {
				unicode: "1f3f3-1f308",
				unicode_alt: "",
				code_decimal: "&#127987;&#127752;",
				name: "rainbow_flag",
				shortname: ":rainbow_flag:",
				category: "objects",
				emoji_order: "2186",
				aliases: [":gay_pride_flag:"],
				aliases_ascii: [],
				keywords: []
			},
			flag_ac: {
				unicode: "1f1e6-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127462;&#127464;",
				name: "ascension",
				shortname: ":flag_ac:",
				category: "flags",
				emoji_order: "2187",
				aliases: [":ac:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ad: {
				unicode: "1f1e6-1f1e9",
				unicode_alt: "",
				code_decimal: "&#127462;&#127465;",
				name: "andorra",
				shortname: ":flag_ad:",
				category: "flags",
				emoji_order: "2188",
				aliases: [":ad:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ae: {
				unicode: "1f1e6-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127462;&#127466;",
				name: "the united arab emirates",
				shortname: ":flag_ae:",
				category: "flags",
				emoji_order: "2189",
				aliases: [":ae:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_af: {
				unicode: "1f1e6-1f1eb",
				unicode_alt: "",
				code_decimal: "&#127462;&#127467;",
				name: "afghanistan",
				shortname: ":flag_af:",
				category: "flags",
				emoji_order: "2190",
				aliases: [":af:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ag: {
				unicode: "1f1e6-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127462;&#127468;",
				name: "antigua and barbuda",
				shortname: ":flag_ag:",
				category: "flags",
				emoji_order: "2191",
				aliases: [":ag:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ai: {
				unicode: "1f1e6-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127462;&#127470;",
				name: "anguilla",
				shortname: ":flag_ai:",
				category: "flags",
				emoji_order: "2192",
				aliases: [":ai:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_al: {
				unicode: "1f1e6-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127462;&#127473;",
				name: "albania",
				shortname: ":flag_al:",
				category: "flags",
				emoji_order: "2193",
				aliases: [":al:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_am: {
				unicode: "1f1e6-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127462;&#127474;",
				name: "armenia",
				shortname: ":flag_am:",
				category: "flags",
				emoji_order: "2194",
				aliases: [":am:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ao: {
				unicode: "1f1e6-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127462;&#127476;",
				name: "angola",
				shortname: ":flag_ao:",
				category: "flags",
				emoji_order: "2195",
				aliases: [":ao:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_aq: {
				unicode: "1f1e6-1f1f6",
				unicode_alt: "",
				code_decimal: "&#127462;&#127478;",
				name: "antarctica",
				shortname: ":flag_aq:",
				category: "flags",
				emoji_order: "2196",
				aliases: [":aq:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ar: {
				unicode: "1f1e6-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127462;&#127479;",
				name: "argentina",
				shortname: ":flag_ar:",
				category: "flags",
				emoji_order: "2197",
				aliases: [":ar:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_as: {
				unicode: "1f1e6-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127462;&#127480;",
				name: "american samoa",
				shortname: ":flag_as:",
				category: "flags",
				emoji_order: "2198",
				aliases: [":as:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_at: {
				unicode: "1f1e6-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127462;&#127481;",
				name: "austria",
				shortname: ":flag_at:",
				category: "flags",
				emoji_order: "2199",
				aliases: [":at:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_au: {
				unicode: "1f1e6-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127462;&#127482;",
				name: "australia",
				shortname: ":flag_au:",
				category: "flags",
				emoji_order: "2200",
				aliases: [":au:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_aw: {
				unicode: "1f1e6-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127462;&#127484;",
				name: "aruba",
				shortname: ":flag_aw:",
				category: "flags",
				emoji_order: "2201",
				aliases: [":aw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ax: {
				unicode: "1f1e6-1f1fd",
				unicode_alt: "",
				code_decimal: "&#127462;&#127485;",
				name: "\u00e5land islands",
				shortname: ":flag_ax:",
				category: "flags",
				emoji_order: "2202",
				aliases: [":ax:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_az: {
				unicode: "1f1e6-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127462;&#127487;",
				name: "azerbaijan",
				shortname: ":flag_az:",
				category: "flags",
				emoji_order: "2203",
				aliases: [":az:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ba: {
				unicode: "1f1e7-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127463;&#127462;",
				name: "bosnia and herzegovina",
				shortname: ":flag_ba:",
				category: "flags",
				emoji_order: "2204",
				aliases: [":ba:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bb: {
				unicode: "1f1e7-1f1e7",
				unicode_alt: "",
				code_decimal: "&#127463;&#127463;",
				name: "barbados",
				shortname: ":flag_bb:",
				category: "flags",
				emoji_order: "2205",
				aliases: [":bb:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bd: {
				unicode: "1f1e7-1f1e9",
				unicode_alt: "",
				code_decimal: "&#127463;&#127465;",
				name: "bangladesh",
				shortname: ":flag_bd:",
				category: "flags",
				emoji_order: "2206",
				aliases: [":bd:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_be: {
				unicode: "1f1e7-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127463;&#127466;",
				name: "belgium",
				shortname: ":flag_be:",
				category: "flags",
				emoji_order: "2207",
				aliases: [":be:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bf: {
				unicode: "1f1e7-1f1eb",
				unicode_alt: "",
				code_decimal: "&#127463;&#127467;",
				name: "burkina faso",
				shortname: ":flag_bf:",
				category: "flags",
				emoji_order: "2208",
				aliases: [":bf:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bg: {
				unicode: "1f1e7-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127463;&#127468;",
				name: "bulgaria",
				shortname: ":flag_bg:",
				category: "flags",
				emoji_order: "2209",
				aliases: [":bg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bh: {
				unicode: "1f1e7-1f1ed",
				unicode_alt: "",
				code_decimal: "&#127463;&#127469;",
				name: "bahrain",
				shortname: ":flag_bh:",
				category: "flags",
				emoji_order: "2210",
				aliases: [":bh:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bi: {
				unicode: "1f1e7-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127463;&#127470;",
				name: "burundi",
				shortname: ":flag_bi:",
				category: "flags",
				emoji_order: "2211",
				aliases: [":bi:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bj: {
				unicode: "1f1e7-1f1ef",
				unicode_alt: "",
				code_decimal: "&#127463;&#127471;",
				name: "benin",
				shortname: ":flag_bj:",
				category: "flags",
				emoji_order: "2212",
				aliases: [":bj:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bl: {
				unicode: "1f1e7-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127463;&#127473;",
				name: "saint barth\u00e9lemy",
				shortname: ":flag_bl:",
				category: "flags",
				emoji_order: "2213",
				aliases: [":bl:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bm: {
				unicode: "1f1e7-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127463;&#127474;",
				name: "bermuda",
				shortname: ":flag_bm:",
				category: "flags",
				emoji_order: "2214",
				aliases: [":bm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bn: {
				unicode: "1f1e7-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127463;&#127475;",
				name: "brunei",
				shortname: ":flag_bn:",
				category: "flags",
				emoji_order: "2215",
				aliases: [":bn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bo: {
				unicode: "1f1e7-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127463;&#127476;",
				name: "bolivia",
				shortname: ":flag_bo:",
				category: "flags",
				emoji_order: "2216",
				aliases: [":bo:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bq: {
				unicode: "1f1e7-1f1f6",
				unicode_alt: "",
				code_decimal: "&#127463;&#127478;",
				name: "caribbean netherlands",
				shortname: ":flag_bq:",
				category: "flags",
				emoji_order: "2217",
				aliases: [":bq:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_br: {
				unicode: "1f1e7-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127463;&#127479;",
				name: "brazil",
				shortname: ":flag_br:",
				category: "flags",
				emoji_order: "2218",
				aliases: [":br:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bs: {
				unicode: "1f1e7-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127463;&#127480;",
				name: "the bahamas",
				shortname: ":flag_bs:",
				category: "flags",
				emoji_order: "2219",
				aliases: [":bs:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bt: {
				unicode: "1f1e7-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127463;&#127481;",
				name: "bhutan",
				shortname: ":flag_bt:",
				category: "flags",
				emoji_order: "2220",
				aliases: [":bt:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bv: {
				unicode: "1f1e7-1f1fb",
				unicode_alt: "",
				code_decimal: "&#127463;&#127483;",
				name: "bouvet island",
				shortname: ":flag_bv:",
				category: "flags",
				emoji_order: "2221",
				aliases: [":bv:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bw: {
				unicode: "1f1e7-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127463;&#127484;",
				name: "botswana",
				shortname: ":flag_bw:",
				category: "flags",
				emoji_order: "2222",
				aliases: [":bw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_by: {
				unicode: "1f1e7-1f1fe",
				unicode_alt: "",
				code_decimal: "&#127463;&#127486;",
				name: "belarus",
				shortname: ":flag_by:",
				category: "flags",
				emoji_order: "2223",
				aliases: [":by:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_bz: {
				unicode: "1f1e7-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127463;&#127487;",
				name: "belize",
				shortname: ":flag_bz:",
				category: "flags",
				emoji_order: "2224",
				aliases: [":bz:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ca: {
				unicode: "1f1e8-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127464;&#127462;",
				name: "canada",
				shortname: ":flag_ca:",
				category: "flags",
				emoji_order: "2225",
				aliases: [":ca:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cc: {
				unicode: "1f1e8-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127464;&#127464;",
				name: "cocos (keeling) islands",
				shortname: ":flag_cc:",
				category: "flags",
				emoji_order: "2226",
				aliases: [":cc:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cd: {
				unicode: "1f1e8-1f1e9",
				unicode_alt: "",
				code_decimal: "&#127464;&#127465;",
				name: "the democratic republic of the congo",
				shortname: ":flag_cd:",
				category: "flags",
				emoji_order: "2227",
				aliases: [":congo:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cf: {
				unicode: "1f1e8-1f1eb",
				unicode_alt: "",
				code_decimal: "&#127464;&#127467;",
				name: "central african republic",
				shortname: ":flag_cf:",
				category: "flags",
				emoji_order: "2228",
				aliases: [":cf:"],
				aliases_ascii: [],
				keywords: ["country",
					"flag"]
			},
			flag_cg: {
				unicode: "1f1e8-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127464;&#127468;",
				name: "the republic of the congo",
				shortname: ":flag_cg:",
				category: "flags",
				emoji_order: "2229",
				aliases: [":cg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ch: {
				unicode: "1f1e8-1f1ed",
				unicode_alt: "",
				code_decimal: "&#127464;&#127469;",
				name: "switzerland",
				shortname: ":flag_ch:",
				category: "flags",
				emoji_order: "2230",
				aliases: [":ch:"],
				aliases_ascii: [],
				keywords: ["country", "neutral", "flag"]
			},
			flag_ci: {
				unicode: "1f1e8-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127464;&#127470;",
				name: "c\u00f4te d\u2019ivoire",
				shortname: ":flag_ci:",
				category: "flags",
				emoji_order: "2231",
				aliases: [":ci:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ck: {
				unicode: "1f1e8-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127464;&#127472;",
				name: "cook islands",
				shortname: ":flag_ck:",
				category: "flags",
				emoji_order: "2232",
				aliases: [":ck:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cl: {
				unicode: "1f1e8-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127464;&#127473;",
				name: "chile",
				shortname: ":flag_cl:",
				category: "flags",
				emoji_order: "2233",
				aliases: [":chile:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cm: {
				unicode: "1f1e8-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127464;&#127474;",
				name: "cameroon",
				shortname: ":flag_cm:",
				category: "flags",
				emoji_order: "2234",
				aliases: [":cm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cn: {
				unicode: "1f1e8-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127464;&#127475;",
				name: "china",
				shortname: ":flag_cn:",
				category: "flags",
				emoji_order: "2235",
				aliases: [":cn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_co: {
				unicode: "1f1e8-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127464;&#127476;",
				name: "colombia",
				shortname: ":flag_co:",
				category: "flags",
				emoji_order: "2236",
				aliases: [":co:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cp: {
				unicode: "1f1e8-1f1f5",
				unicode_alt: "",
				code_decimal: "&#127464;&#127477;",
				name: "clipperton island",
				shortname: ":flag_cp:",
				category: "flags",
				emoji_order: "2237",
				aliases: [":cp:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cr: {
				unicode: "1f1e8-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127464;&#127479;",
				name: "costa rica",
				shortname: ":flag_cr:",
				category: "flags",
				emoji_order: "2238",
				aliases: [":cr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cu: {
				unicode: "1f1e8-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127464;&#127482;",
				name: "cuba",
				shortname: ":flag_cu:",
				category: "flags",
				emoji_order: "2239",
				aliases: [":cu:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cv: {
				unicode: "1f1e8-1f1fb",
				unicode_alt: "",
				code_decimal: "&#127464;&#127483;",
				name: "cape verde",
				shortname: ":flag_cv:",
				category: "flags",
				emoji_order: "2240",
				aliases: [":cv:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cw: {
				unicode: "1f1e8-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127464;&#127484;",
				name: "cura\u00e7ao",
				shortname: ":flag_cw:",
				category: "flags",
				emoji_order: "2241",
				aliases: [":cw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cx: {
				unicode: "1f1e8-1f1fd",
				unicode_alt: "",
				code_decimal: "&#127464;&#127485;",
				name: "christmas island",
				shortname: ":flag_cx:",
				category: "flags",
				emoji_order: "2242",
				aliases: [":cx:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cy: {
				unicode: "1f1e8-1f1fe",
				unicode_alt: "",
				code_decimal: "&#127464;&#127486;",
				name: "cyprus",
				shortname: ":flag_cy:",
				category: "flags",
				emoji_order: "2243",
				aliases: [":cy:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_cz: {
				unicode: "1f1e8-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127464;&#127487;",
				name: "the czech republic",
				shortname: ":flag_cz:",
				category: "flags",
				emoji_order: "2244",
				aliases: [":cz:"],
				aliases_ascii: [],
				keywords: ["country",
					"flag"]
			},
			flag_de: {
				unicode: "1f1e9-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127465;&#127466;",
				name: "germany",
				shortname: ":flag_de:",
				category: "flags",
				emoji_order: "2245",
				aliases: [":de:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_dg: {
				unicode: "1f1e9-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127465;&#127468;",
				name: "diego garcia",
				shortname: ":flag_dg:",
				category: "flags",
				emoji_order: "2246",
				aliases: [":dg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_dj: {
				unicode: "1f1e9-1f1ef",
				unicode_alt: "",
				code_decimal: "&#127465;&#127471;",
				name: "djibouti",
				shortname: ":flag_dj:",
				category: "flags",
				emoji_order: "2247",
				aliases: [":dj:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_dk: {
				unicode: "1f1e9-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127465;&#127472;",
				name: "denmark",
				shortname: ":flag_dk:",
				category: "flags",
				emoji_order: "2248",
				aliases: [":dk:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_dm: {
				unicode: "1f1e9-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127465;&#127474;",
				name: "dominica",
				shortname: ":flag_dm:",
				category: "flags",
				emoji_order: "2249",
				aliases: [":dm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_do: {
				unicode: "1f1e9-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127465;&#127476;",
				name: "the dominican republic",
				shortname: ":flag_do:",
				category: "flags",
				emoji_order: "2250",
				aliases: [":do:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_dz: {
				unicode: "1f1e9-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127465;&#127487;",
				name: "algeria",
				shortname: ":flag_dz:",
				category: "flags",
				emoji_order: "2251",
				aliases: [":dz:"],
				aliases_ascii: [],
				keywords: ["country",
					"flag"]
			},
			flag_ea: {
				unicode: "1f1ea-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127466;&#127462;",
				name: "ceuta, melilla",
				shortname: ":flag_ea:",
				category: "flags",
				emoji_order: "2252",
				aliases: [":ea:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ec: {
				unicode: "1f1ea-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127466;&#127464;",
				name: "ecuador",
				shortname: ":flag_ec:",
				category: "flags",
				emoji_order: "2253",
				aliases: [":ec:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ee: {
				unicode: "1f1ea-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127466;&#127466;",
				name: "estonia",
				shortname: ":flag_ee:",
				category: "flags",
				emoji_order: "2254",
				aliases: [":ee:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_eg: {
				unicode: "1f1ea-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127466;&#127468;",
				name: "egypt",
				shortname: ":flag_eg:",
				category: "flags",
				emoji_order: "2255",
				aliases: [":eg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_eh: {
				unicode: "1f1ea-1f1ed",
				unicode_alt: "",
				code_decimal: "&#127466;&#127469;",
				name: "western sahara",
				shortname: ":flag_eh:",
				category: "flags",
				emoji_order: "2256",
				aliases: [":eh:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_er: {
				unicode: "1f1ea-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127466;&#127479;",
				name: "eritrea",
				shortname: ":flag_er:",
				category: "flags",
				emoji_order: "2257",
				aliases: [":er:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_es: {
				unicode: "1f1ea-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127466;&#127480;",
				name: "spain",
				shortname: ":flag_es:",
				category: "flags",
				emoji_order: "2258",
				aliases: [":es:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_et: {
				unicode: "1f1ea-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127466;&#127481;",
				name: "ethiopia",
				shortname: ":flag_et:",
				category: "flags",
				emoji_order: "2259",
				aliases: [":et:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_eu: {
				unicode: "1f1ea-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127466;&#127482;",
				name: "european union",
				shortname: ":flag_eu:",
				category: "flags",
				emoji_order: "2260",
				aliases: [":eu:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_fi: {
				unicode: "1f1eb-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127467;&#127470;",
				name: "finland",
				shortname: ":flag_fi:",
				category: "flags",
				emoji_order: "2261",
				aliases: [":fi:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_fj: {
				unicode: "1f1eb-1f1ef",
				unicode_alt: "",
				code_decimal: "&#127467;&#127471;",
				name: "fiji",
				shortname: ":flag_fj:",
				category: "flags",
				emoji_order: "2262",
				aliases: [":fj:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_fk: {
				unicode: "1f1eb-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127467;&#127472;",
				name: "falkland islands",
				shortname: ":flag_fk:",
				category: "flags",
				emoji_order: "2263",
				aliases: [":fk:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_fm: {
				unicode: "1f1eb-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127467;&#127474;",
				name: "micronesia",
				shortname: ":flag_fm:",
				category: "flags",
				emoji_order: "2264",
				aliases: [":fm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_fo: {
				unicode: "1f1eb-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127467;&#127476;",
				name: "faroe islands",
				shortname: ":flag_fo:",
				category: "flags",
				emoji_order: "2265",
				aliases: [":fo:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_fr: {
				unicode: "1f1eb-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127467;&#127479;",
				name: "france",
				shortname: ":flag_fr:",
				category: "flags",
				emoji_order: "2266",
				aliases: [":fr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ga: {
				unicode: "1f1ec-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127468;&#127462;",
				name: "gabon",
				shortname: ":flag_ga:",
				category: "flags",
				emoji_order: "2267",
				aliases: [":ga:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gb: {
				unicode: "1f1ec-1f1e7",
				unicode_alt: "",
				code_decimal: "&#127468;&#127463;",
				name: "great britain",
				shortname: ":flag_gb:",
				category: "flags",
				emoji_order: "2268",
				aliases: [":gb:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gd: {
				unicode: "1f1ec-1f1e9",
				unicode_alt: "",
				code_decimal: "&#127468;&#127465;",
				name: "grenada",
				shortname: ":flag_gd:",
				category: "flags",
				emoji_order: "2269",
				aliases: [":gd:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ge: {
				unicode: "1f1ec-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127468;&#127466;",
				name: "georgia",
				shortname: ":flag_ge:",
				category: "flags",
				emoji_order: "2270",
				aliases: [":ge:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gf: {
				unicode: "1f1ec-1f1eb",
				unicode_alt: "",
				code_decimal: "&#127468;&#127467;",
				name: "french guiana",
				shortname: ":flag_gf:",
				category: "flags",
				emoji_order: "2271",
				aliases: [":gf:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gg: {
				unicode: "1f1ec-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127468;&#127468;",
				name: "guernsey",
				shortname: ":flag_gg:",
				category: "flags",
				emoji_order: "2272",
				aliases: [":gg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gh: {
				unicode: "1f1ec-1f1ed",
				unicode_alt: "",
				code_decimal: "&#127468;&#127469;",
				name: "ghana",
				shortname: ":flag_gh:",
				category: "flags",
				emoji_order: "2273",
				aliases: [":gh:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gi: {
				unicode: "1f1ec-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127468;&#127470;",
				name: "gibraltar",
				shortname: ":flag_gi:",
				category: "flags",
				emoji_order: "2274",
				aliases: [":gi:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gl: {
				unicode: "1f1ec-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127468;&#127473;",
				name: "greenland",
				shortname: ":flag_gl:",
				category: "flags",
				emoji_order: "2275",
				aliases: [":gl:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gm: {
				unicode: "1f1ec-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127468;&#127474;",
				name: "the gambia",
				shortname: ":flag_gm:",
				category: "flags",
				emoji_order: "2276",
				aliases: [":gm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gn: {
				unicode: "1f1ec-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127468;&#127475;",
				name: "guinea",
				shortname: ":flag_gn:",
				category: "flags",
				emoji_order: "2277",
				aliases: [":gn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gp: {
				unicode: "1f1ec-1f1f5",
				unicode_alt: "",
				code_decimal: "&#127468;&#127477;",
				name: "guadeloupe",
				shortname: ":flag_gp:",
				category: "flags",
				emoji_order: "2278",
				aliases: [":gp:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gq: {
				unicode: "1f1ec-1f1f6",
				unicode_alt: "",
				code_decimal: "&#127468;&#127478;",
				name: "equatorial guinea",
				shortname: ":flag_gq:",
				category: "flags",
				emoji_order: "2279",
				aliases: [":gq:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gr: {
				unicode: "1f1ec-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127468;&#127479;",
				name: "greece",
				shortname: ":flag_gr:",
				category: "flags",
				emoji_order: "2280",
				aliases: [":gr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gs: {
				unicode: "1f1ec-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127468;&#127480;",
				name: "south georgia",
				shortname: ":flag_gs:",
				category: "flags",
				emoji_order: "2281",
				aliases: [":gs:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gt: {
				unicode: "1f1ec-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127468;&#127481;",
				name: "guatemala",
				shortname: ":flag_gt:",
				category: "flags",
				emoji_order: "2282",
				aliases: [":gt:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gu: {
				unicode: "1f1ec-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127468;&#127482;",
				name: "guam",
				shortname: ":flag_gu:",
				category: "flags",
				emoji_order: "2283",
				aliases: [":gu:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gw: {
				unicode: "1f1ec-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127468;&#127484;",
				name: "guinea-bissau",
				shortname: ":flag_gw:",
				category: "flags",
				emoji_order: "2284",
				aliases: [":gw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_gy: {
				unicode: "1f1ec-1f1fe",
				unicode_alt: "",
				code_decimal: "&#127468;&#127486;",
				name: "guyana",
				shortname: ":flag_gy:",
				category: "flags",
				emoji_order: "2285",
				aliases: [":gy:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_hk: {
				unicode: "1f1ed-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127469;&#127472;",
				name: "hong kong",
				shortname: ":flag_hk:",
				category: "flags",
				emoji_order: "2286",
				aliases: [":hk:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_hm: {
				unicode: "1f1ed-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127469;&#127474;",
				name: "heard island and mcdonald islands",
				shortname: ":flag_hm:",
				category: "flags",
				emoji_order: "2287",
				aliases: [":hm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_hn: {
				unicode: "1f1ed-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127469;&#127475;",
				name: "honduras",
				shortname: ":flag_hn:",
				category: "flags",
				emoji_order: "2288",
				aliases: [":hn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_hr: {
				unicode: "1f1ed-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127469;&#127479;",
				name: "croatia",
				shortname: ":flag_hr:",
				category: "flags",
				emoji_order: "2289",
				aliases: [":hr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ht: {
				unicode: "1f1ed-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127469;&#127481;",
				name: "haiti",
				shortname: ":flag_ht:",
				category: "flags",
				emoji_order: "2290",
				aliases: [":ht:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_hu: {
				unicode: "1f1ed-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127469;&#127482;",
				name: "hungary",
				shortname: ":flag_hu:",
				category: "flags",
				emoji_order: "2291",
				aliases: [":hu:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ic: {
				unicode: "1f1ee-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127470;&#127464;",
				name: "canary islands",
				shortname: ":flag_ic:",
				category: "flags",
				emoji_order: "2292",
				aliases: [":ic:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_id: {
				unicode: "1f1ee-1f1e9",
				unicode_alt: "",
				code_decimal: "&#127470;&#127465;",
				name: "indonesia",
				shortname: ":flag_id:",
				category: "flags",
				emoji_order: "2293",
				aliases: [":indonesia:"],
				aliases_ascii: [],
				keywords: ["country",
					"flag"]
			},
			flag_ie: {
				unicode: "1f1ee-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127470;&#127466;",
				name: "ireland",
				shortname: ":flag_ie:",
				category: "flags",
				emoji_order: "2294",
				aliases: [":ie:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_il: {
				unicode: "1f1ee-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127470;&#127473;",
				name: "israel",
				shortname: ":flag_il:",
				category: "flags",
				emoji_order: "2295",
				aliases: [":il:"],
				aliases_ascii: [],
				keywords: ["jew", "country", "flag"]
			},
			flag_im: {
				unicode: "1f1ee-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127470;&#127474;",
				name: "isle of man",
				shortname: ":flag_im:",
				category: "flags",
				emoji_order: "2296",
				aliases: [":im:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_in: {
				unicode: "1f1ee-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127470;&#127475;",
				name: "india",
				shortname: ":flag_in:",
				category: "flags",
				emoji_order: "2297",
				aliases: [":in:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_io: {
				unicode: "1f1ee-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127470;&#127476;",
				name: "british indian ocean territory",
				shortname: ":flag_io:",
				category: "flags",
				emoji_order: "2298",
				aliases: [":io:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_iq: {
				unicode: "1f1ee-1f1f6",
				unicode_alt: "",
				code_decimal: "&#127470;&#127478;",
				name: "iraq",
				shortname: ":flag_iq:",
				category: "flags",
				emoji_order: "2299",
				aliases: [":iq:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ir: {
				unicode: "1f1ee-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127470;&#127479;",
				name: "iran",
				shortname: ":flag_ir:",
				category: "flags",
				emoji_order: "2300",
				aliases: [":ir:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_is: {
				unicode: "1f1ee-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127470;&#127480;",
				name: "iceland",
				shortname: ":flag_is:",
				category: "flags",
				emoji_order: "2301",
				aliases: [":is:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_it: {
				unicode: "1f1ee-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127470;&#127481;",
				name: "italy",
				shortname: ":flag_it:",
				category: "flags",
				emoji_order: "2302",
				aliases: [":it:"],
				aliases_ascii: [],
				keywords: ["italian", "country", "flag"]
			},
			flag_je: {
				unicode: "1f1ef-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127471;&#127466;",
				name: "jersey",
				shortname: ":flag_je:",
				category: "flags",
				emoji_order: "2303",
				aliases: [":je:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_jm: {
				unicode: "1f1ef-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127471;&#127474;",
				name: "jamaica",
				shortname: ":flag_jm:",
				category: "flags",
				emoji_order: "2304",
				aliases: [":jm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_jo: {
				unicode: "1f1ef-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127471;&#127476;",
				name: "jordan",
				shortname: ":flag_jo:",
				category: "flags",
				emoji_order: "2305",
				aliases: [":jo:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_jp: {
				unicode: "1f1ef-1f1f5",
				unicode_alt: "",
				code_decimal: "&#127471;&#127477;",
				name: "japan",
				shortname: ":flag_jp:",
				category: "flags",
				emoji_order: "2306",
				aliases: [":jp:"],
				aliases_ascii: [],
				keywords: ["japan", "country", "flag"]
			},
			flag_ke: {
				unicode: "1f1f0-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127472;&#127466;",
				name: "kenya",
				shortname: ":flag_ke:",
				category: "flags",
				emoji_order: "2307",
				aliases: [":ke:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_kg: {
				unicode: "1f1f0-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127472;&#127468;",
				name: "kyrgyzstan",
				shortname: ":flag_kg:",
				category: "flags",
				emoji_order: "2308",
				aliases: [":kg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_kh: {
				unicode: "1f1f0-1f1ed",
				unicode_alt: "",
				code_decimal: "&#127472;&#127469;",
				name: "cambodia",
				shortname: ":flag_kh:",
				category: "flags",
				emoji_order: "2309",
				aliases: [":kh:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ki: {
				unicode: "1f1f0-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127472;&#127470;",
				name: "kiribati",
				shortname: ":flag_ki:",
				category: "flags",
				emoji_order: "2310",
				aliases: [":ki:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_km: {
				unicode: "1f1f0-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127472;&#127474;",
				name: "the comoros",
				shortname: ":flag_km:",
				category: "flags",
				emoji_order: "2311",
				aliases: [":km:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_kn: {
				unicode: "1f1f0-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127472;&#127475;",
				name: "saint kitts and nevis",
				shortname: ":flag_kn:",
				category: "flags",
				emoji_order: "2312",
				aliases: [":kn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_kp: {
				unicode: "1f1f0-1f1f5",
				unicode_alt: "",
				code_decimal: "&#127472;&#127477;",
				name: "north korea",
				shortname: ":flag_kp:",
				category: "flags",
				emoji_order: "2313",
				aliases: [":kp:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_kr: {
				unicode: "1f1f0-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127472;&#127479;",
				name: "korea",
				shortname: ":flag_kr:",
				category: "flags",
				emoji_order: "2314",
				aliases: [":kr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_kw: {
				unicode: "1f1f0-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127472;&#127484;",
				name: "kuwait",
				shortname: ":flag_kw:",
				category: "flags",
				emoji_order: "2315",
				aliases: [":kw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ky: {
				unicode: "1f1f0-1f1fe",
				unicode_alt: "",
				code_decimal: "&#127472;&#127486;",
				name: "cayman islands",
				shortname: ":flag_ky:",
				category: "flags",
				emoji_order: "2316",
				aliases: [":ky:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_kz: {
				unicode: "1f1f0-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127472;&#127487;",
				name: "kazakhstan",
				shortname: ":flag_kz:",
				category: "flags",
				emoji_order: "2317",
				aliases: [":kz:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_la: {
				unicode: "1f1f1-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127473;&#127462;",
				name: "laos",
				shortname: ":flag_la:",
				category: "flags",
				emoji_order: "2318",
				aliases: [":la:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_lb: {
				unicode: "1f1f1-1f1e7",
				unicode_alt: "",
				code_decimal: "&#127473;&#127463;",
				name: "lebanon",
				shortname: ":flag_lb:",
				category: "flags",
				emoji_order: "2319",
				aliases: [":lb:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_lc: {
				unicode: "1f1f1-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127473;&#127464;",
				name: "saint lucia",
				shortname: ":flag_lc:",
				category: "flags",
				emoji_order: "2320",
				aliases: [":lc:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_li: {
				unicode: "1f1f1-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127473;&#127470;",
				name: "liechtenstein",
				shortname: ":flag_li:",
				category: "flags",
				emoji_order: "2321",
				aliases: [":li:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_lk: {
				unicode: "1f1f1-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127473;&#127472;",
				name: "sri lanka",
				shortname: ":flag_lk:",
				category: "flags",
				emoji_order: "2322",
				aliases: [":lk:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_lr: {
				unicode: "1f1f1-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127473;&#127479;",
				name: "liberia",
				shortname: ":flag_lr:",
				category: "flags",
				emoji_order: "2323",
				aliases: [":lr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ls: {
				unicode: "1f1f1-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127473;&#127480;",
				name: "lesotho",
				shortname: ":flag_ls:",
				category: "flags",
				emoji_order: "2324",
				aliases: [":ls:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_lt: {
				unicode: "1f1f1-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127473;&#127481;",
				name: "lithuania",
				shortname: ":flag_lt:",
				category: "flags",
				emoji_order: "2325",
				aliases: [":lt:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_lu: {
				unicode: "1f1f1-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127473;&#127482;",
				name: "luxembourg",
				shortname: ":flag_lu:",
				category: "flags",
				emoji_order: "2326",
				aliases: [":lu:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_lv: {
				unicode: "1f1f1-1f1fb",
				unicode_alt: "",
				code_decimal: "&#127473;&#127483;",
				name: "latvia",
				shortname: ":flag_lv:",
				category: "flags",
				emoji_order: "2327",
				aliases: [":lv:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ly: {
				unicode: "1f1f1-1f1fe",
				unicode_alt: "",
				code_decimal: "&#127473;&#127486;",
				name: "libya",
				shortname: ":flag_ly:",
				category: "flags",
				emoji_order: "2328",
				aliases: [":ly:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ma: {
				unicode: "1f1f2-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127474;&#127462;",
				name: "morocco",
				shortname: ":flag_ma:",
				category: "flags",
				emoji_order: "2329",
				aliases: [":ma:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mc: {
				unicode: "1f1f2-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127474;&#127464;",
				name: "monaco",
				shortname: ":flag_mc:",
				category: "flags",
				emoji_order: "2330",
				aliases: [":mc:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_md: {
				unicode: "1f1f2-1f1e9",
				unicode_alt: "",
				code_decimal: "&#127474;&#127465;",
				name: "moldova",
				shortname: ":flag_md:",
				category: "flags",
				emoji_order: "2331",
				aliases: [":md:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_me: {
				unicode: "1f1f2-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127474;&#127466;",
				name: "montenegro",
				shortname: ":flag_me:",
				category: "flags",
				emoji_order: "2332",
				aliases: [":me:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mf: {
				unicode: "1f1f2-1f1eb",
				unicode_alt: "",
				code_decimal: "&#127474;&#127467;",
				name: "saint martin",
				shortname: ":flag_mf:",
				category: "flags",
				emoji_order: "2333",
				aliases: [":mf:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mg: {
				unicode: "1f1f2-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127474;&#127468;",
				name: "madagascar",
				shortname: ":flag_mg:",
				category: "flags",
				emoji_order: "2334",
				aliases: [":mg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mh: {
				unicode: "1f1f2-1f1ed",
				unicode_alt: "",
				code_decimal: "&#127474;&#127469;",
				name: "the marshall islands",
				shortname: ":flag_mh:",
				category: "flags",
				emoji_order: "2335",
				aliases: [":mh:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mk: {
				unicode: "1f1f2-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127474;&#127472;",
				name: "macedonia",
				shortname: ":flag_mk:",
				category: "flags",
				emoji_order: "2336",
				aliases: [":mk:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ml: {
				unicode: "1f1f2-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127474;&#127473;",
				name: "mali",
				shortname: ":flag_ml:",
				category: "flags",
				emoji_order: "2337",
				aliases: [":ml:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mm: {
				unicode: "1f1f2-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127474;&#127474;",
				name: "myanmar",
				shortname: ":flag_mm:",
				category: "flags",
				emoji_order: "2338",
				aliases: [":mm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mn: {
				unicode: "1f1f2-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127474;&#127475;",
				name: "mongolia",
				shortname: ":flag_mn:",
				category: "flags",
				emoji_order: "2339",
				aliases: [":mn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mo: {
				unicode: "1f1f2-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127474;&#127476;",
				name: "macau",
				shortname: ":flag_mo:",
				category: "flags",
				emoji_order: "2340",
				aliases: [":mo:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mp: {
				unicode: "1f1f2-1f1f5",
				unicode_alt: "",
				code_decimal: "&#127474;&#127477;",
				name: "northern mariana islands",
				shortname: ":flag_mp:",
				category: "flags",
				emoji_order: "2341",
				aliases: [":mp:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mq: {
				unicode: "1f1f2-1f1f6",
				unicode_alt: "",
				code_decimal: "&#127474;&#127478;",
				name: "martinique",
				shortname: ":flag_mq:",
				category: "flags",
				emoji_order: "2342",
				aliases: [":mq:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mr: {
				unicode: "1f1f2-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127474;&#127479;",
				name: "mauritania",
				shortname: ":flag_mr:",
				category: "flags",
				emoji_order: "2343",
				aliases: [":mr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ms: {
				unicode: "1f1f2-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127474;&#127480;",
				name: "montserrat",
				shortname: ":flag_ms:",
				category: "flags",
				emoji_order: "2344",
				aliases: [":ms:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mt: {
				unicode: "1f1f2-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127474;&#127481;",
				name: "malta",
				shortname: ":flag_mt:",
				category: "flags",
				emoji_order: "2345",
				aliases: [":mt:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mu: {
				unicode: "1f1f2-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127474;&#127482;",
				name: "mauritius",
				shortname: ":flag_mu:",
				category: "flags",
				emoji_order: "2346",
				aliases: [":mu:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mv: {
				unicode: "1f1f2-1f1fb",
				unicode_alt: "",
				code_decimal: "&#127474;&#127483;",
				name: "maldives",
				shortname: ":flag_mv:",
				category: "flags",
				emoji_order: "2347",
				aliases: [":mv:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mw: {
				unicode: "1f1f2-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127474;&#127484;",
				name: "malawi",
				shortname: ":flag_mw:",
				category: "flags",
				emoji_order: "2348",
				aliases: [":mw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mx: {
				unicode: "1f1f2-1f1fd",
				unicode_alt: "",
				code_decimal: "&#127474;&#127485;",
				name: "mexico",
				shortname: ":flag_mx:",
				category: "flags",
				emoji_order: "2349",
				aliases: [":mx:"],
				aliases_ascii: [],
				keywords: ["country", "mexican", "flag"]
			},
			flag_my: {
				unicode: "1f1f2-1f1fe",
				unicode_alt: "",
				code_decimal: "&#127474;&#127486;",
				name: "malaysia",
				shortname: ":flag_my:",
				category: "flags",
				emoji_order: "2350",
				aliases: [":my:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_mz: {
				unicode: "1f1f2-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127474;&#127487;",
				name: "mozambique",
				shortname: ":flag_mz:",
				category: "flags",
				emoji_order: "2351",
				aliases: [":mz:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_na: {
				unicode: "1f1f3-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127475;&#127462;",
				name: "namibia",
				shortname: ":flag_na:",
				category: "flags",
				emoji_order: "2352",
				aliases: [":na:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_nc: {
				unicode: "1f1f3-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127475;&#127464;",
				name: "new caledonia",
				shortname: ":flag_nc:",
				category: "flags",
				emoji_order: "2353",
				aliases: [":nc:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ne: {
				unicode: "1f1f3-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127475;&#127466;",
				name: "niger",
				shortname: ":flag_ne:",
				category: "flags",
				emoji_order: "2354",
				aliases: [":ne:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_nf: {
				unicode: "1f1f3-1f1eb",
				unicode_alt: "",
				code_decimal: "&#127475;&#127467;",
				name: "norfolk island",
				shortname: ":flag_nf:",
				category: "flags",
				emoji_order: "2355",
				aliases: [":nf:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ng: {
				unicode: "1f1f3-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127475;&#127468;",
				name: "nigeria",
				shortname: ":flag_ng:",
				category: "flags",
				emoji_order: "2356",
				aliases: [":nigeria:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ni: {
				unicode: "1f1f3-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127475;&#127470;",
				name: "nicaragua",
				shortname: ":flag_ni:",
				category: "flags",
				emoji_order: "2357",
				aliases: [":ni:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_nl: {
				unicode: "1f1f3-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127475;&#127473;",
				name: "the netherlands",
				shortname: ":flag_nl:",
				category: "flags",
				emoji_order: "2358",
				aliases: [":nl:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_no: {
				unicode: "1f1f3-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127475;&#127476;",
				name: "norway",
				shortname: ":flag_no:",
				category: "flags",
				emoji_order: "2359",
				aliases: [":no:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_np: {
				unicode: "1f1f3-1f1f5",
				unicode_alt: "",
				code_decimal: "&#127475;&#127477;",
				name: "nepal",
				shortname: ":flag_np:",
				category: "flags",
				emoji_order: "2360",
				aliases: [":np:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_nr: {
				unicode: "1f1f3-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127475;&#127479;",
				name: "nauru",
				shortname: ":flag_nr:",
				category: "flags",
				emoji_order: "2361",
				aliases: [":nr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_nu: {
				unicode: "1f1f3-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127475;&#127482;",
				name: "niue",
				shortname: ":flag_nu:",
				category: "flags",
				emoji_order: "2362",
				aliases: [":nu:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_nz: {
				unicode: "1f1f3-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127475;&#127487;",
				name: "new zealand",
				shortname: ":flag_nz:",
				category: "flags",
				emoji_order: "2363",
				aliases: [":nz:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_om: {
				unicode: "1f1f4-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127476;&#127474;",
				name: "oman",
				shortname: ":flag_om:",
				category: "flags",
				emoji_order: "2364",
				aliases: [":om:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pa: {
				unicode: "1f1f5-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127477;&#127462;",
				name: "panama",
				shortname: ":flag_pa:",
				category: "flags",
				emoji_order: "2365",
				aliases: [":pa:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pe: {
				unicode: "1f1f5-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127477;&#127466;",
				name: "peru",
				shortname: ":flag_pe:",
				category: "flags",
				emoji_order: "2366",
				aliases: [":pe:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pf: {
				unicode: "1f1f5-1f1eb",
				unicode_alt: "",
				code_decimal: "&#127477;&#127467;",
				name: "french polynesia",
				shortname: ":flag_pf:",
				category: "flags",
				emoji_order: "2367",
				aliases: [":pf:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pg: {
				unicode: "1f1f5-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127477;&#127468;",
				name: "papua new guinea",
				shortname: ":flag_pg:",
				category: "flags",
				emoji_order: "2368",
				aliases: [":pg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ph: {
				unicode: "1f1f5-1f1ed",
				unicode_alt: "",
				code_decimal: "&#127477;&#127469;",
				name: "the philippines",
				shortname: ":flag_ph:",
				category: "flags",
				emoji_order: "2369",
				aliases: [":ph:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pk: {
				unicode: "1f1f5-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127477;&#127472;",
				name: "pakistan",
				shortname: ":flag_pk:",
				category: "flags",
				emoji_order: "2370",
				aliases: [":pk:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pl: {
				unicode: "1f1f5-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127477;&#127473;",
				name: "poland",
				shortname: ":flag_pl:",
				category: "flags",
				emoji_order: "2371",
				aliases: [":pl:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pm: {
				unicode: "1f1f5-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127477;&#127474;",
				name: "saint pierre and miquelon",
				shortname: ":flag_pm:",
				category: "flags",
				emoji_order: "2372",
				aliases: [":pm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pn: {
				unicode: "1f1f5-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127477;&#127475;",
				name: "pitcairn",
				shortname: ":flag_pn:",
				category: "flags",
				emoji_order: "2373",
				aliases: [":pn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pr: {
				unicode: "1f1f5-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127477;&#127479;",
				name: "puerto rico",
				shortname: ":flag_pr:",
				category: "flags",
				emoji_order: "2374",
				aliases: [":pr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ps: {
				unicode: "1f1f5-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127477;&#127480;",
				name: "palestinian authority",
				shortname: ":flag_ps:",
				category: "flags",
				emoji_order: "2375",
				aliases: [":ps:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pt: {
				unicode: "1f1f5-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127477;&#127481;",
				name: "portugal",
				shortname: ":flag_pt:",
				category: "flags",
				emoji_order: "2376",
				aliases: [":pt:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_pw: {
				unicode: "1f1f5-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127477;&#127484;",
				name: "palau",
				shortname: ":flag_pw:",
				category: "flags",
				emoji_order: "2377",
				aliases: [":pw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_py: {
				unicode: "1f1f5-1f1fe",
				unicode_alt: "",
				code_decimal: "&#127477;&#127486;",
				name: "paraguay",
				shortname: ":flag_py:",
				category: "flags",
				emoji_order: "2378",
				aliases: [":py:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_qa: {
				unicode: "1f1f6-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127478;&#127462;",
				name: "qatar",
				shortname: ":flag_qa:",
				category: "flags",
				emoji_order: "2379",
				aliases: [":qa:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_re: {
				unicode: "1f1f7-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127479;&#127466;",
				name: "r\u00e9union",
				shortname: ":flag_re:",
				category: "flags",
				emoji_order: "2380",
				aliases: [":re:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ro: {
				unicode: "1f1f7-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127479;&#127476;",
				name: "romania",
				shortname: ":flag_ro:",
				category: "flags",
				emoji_order: "2381",
				aliases: [":ro:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_rs: {
				unicode: "1f1f7-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127479;&#127480;",
				name: "serbia",
				shortname: ":flag_rs:",
				category: "flags",
				emoji_order: "2382",
				aliases: [":rs:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ru: {
				unicode: "1f1f7-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127479;&#127482;",
				name: "russia",
				shortname: ":flag_ru:",
				category: "flags",
				emoji_order: "2383",
				aliases: [":ru:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_rw: {
				unicode: "1f1f7-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127479;&#127484;",
				name: "rwanda",
				shortname: ":flag_rw:",
				category: "flags",
				emoji_order: "2384",
				aliases: [":rw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sa: {
				unicode: "1f1f8-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127480;&#127462;",
				name: "saudi arabia",
				shortname: ":flag_sa:",
				category: "flags",
				emoji_order: "2385",
				aliases: [":saudiarabia:", ":saudi:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sb: {
				unicode: "1f1f8-1f1e7",
				unicode_alt: "",
				code_decimal: "&#127480;&#127463;",
				name: "the solomon islands",
				shortname: ":flag_sb:",
				category: "flags",
				emoji_order: "2386",
				aliases: [":sb:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sc: {
				unicode: "1f1f8-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127480;&#127464;",
				name: "the seychelles",
				shortname: ":flag_sc:",
				category: "flags",
				emoji_order: "2387",
				aliases: [":sc:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sd: {
				unicode: "1f1f8-1f1e9",
				unicode_alt: "",
				code_decimal: "&#127480;&#127465;",
				name: "sudan",
				shortname: ":flag_sd:",
				category: "flags",
				emoji_order: "2388",
				aliases: [":sd:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_se: {
				unicode: "1f1f8-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127480;&#127466;",
				name: "sweden",
				shortname: ":flag_se:",
				category: "flags",
				emoji_order: "2389",
				aliases: [":se:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sg: {
				unicode: "1f1f8-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127480;&#127468;",
				name: "singapore",
				shortname: ":flag_sg:",
				category: "flags",
				emoji_order: "2390",
				aliases: [":sg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sh: {
				unicode: "1f1f8-1f1ed",
				unicode_alt: "",
				code_decimal: "&#127480;&#127469;",
				name: "saint helena",
				shortname: ":flag_sh:",
				category: "flags",
				emoji_order: "2391",
				aliases: [":sh:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_si: {
				unicode: "1f1f8-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127480;&#127470;",
				name: "slovenia",
				shortname: ":flag_si:",
				category: "flags",
				emoji_order: "2392",
				aliases: [":si:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sj: {
				unicode: "1f1f8-1f1ef",
				unicode_alt: "",
				code_decimal: "&#127480;&#127471;",
				name: "svalbard and jan mayen",
				shortname: ":flag_sj:",
				category: "flags",
				emoji_order: "2393",
				aliases: [":sj:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sk: {
				unicode: "1f1f8-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127480;&#127472;",
				name: "slovakia",
				shortname: ":flag_sk:",
				category: "flags",
				emoji_order: "2394",
				aliases: [":sk:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sl: {
				unicode: "1f1f8-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127480;&#127473;",
				name: "sierra leone",
				shortname: ":flag_sl:",
				category: "flags",
				emoji_order: "2395",
				aliases: [":sl:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sm: {
				unicode: "1f1f8-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127480;&#127474;",
				name: "san marino",
				shortname: ":flag_sm:",
				category: "flags",
				emoji_order: "2396",
				aliases: [":sm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sn: {
				unicode: "1f1f8-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127480;&#127475;",
				name: "senegal",
				shortname: ":flag_sn:",
				category: "flags",
				emoji_order: "2397",
				aliases: [":sn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_so: {
				unicode: "1f1f8-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127480;&#127476;",
				name: "somalia",
				shortname: ":flag_so:",
				category: "flags",
				emoji_order: "2398",
				aliases: [":so:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sr: {
				unicode: "1f1f8-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127480;&#127479;",
				name: "suriname",
				shortname: ":flag_sr:",
				category: "flags",
				emoji_order: "2399",
				aliases: [":sr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ss: {
				unicode: "1f1f8-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127480;&#127480;",
				name: "south sudan",
				shortname: ":flag_ss:",
				category: "flags",
				emoji_order: "2400",
				aliases: [":ss:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_st: {
				unicode: "1f1f8-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127480;&#127481;",
				name: "s\u00e3o tom\u00e9 and pr\u00edncipe",
				shortname: ":flag_st:",
				category: "flags",
				emoji_order: "2401",
				aliases: [":st:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sv: {
				unicode: "1f1f8-1f1fb",
				unicode_alt: "",
				code_decimal: "&#127480;&#127483;",
				name: "el salvador",
				shortname: ":flag_sv:",
				category: "flags",
				emoji_order: "2402",
				aliases: [":sv:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sx: {
				unicode: "1f1f8-1f1fd",
				unicode_alt: "",
				code_decimal: "&#127480;&#127485;",
				name: "sint maarten",
				shortname: ":flag_sx:",
				category: "flags",
				emoji_order: "2403",
				aliases: [":sx:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sy: {
				unicode: "1f1f8-1f1fe",
				unicode_alt: "",
				code_decimal: "&#127480;&#127486;",
				name: "syria",
				shortname: ":flag_sy:",
				category: "flags",
				emoji_order: "2404",
				aliases: [":sy:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_sz: {
				unicode: "1f1f8-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127480;&#127487;",
				name: "swaziland",
				shortname: ":flag_sz:",
				category: "flags",
				emoji_order: "2405",
				aliases: [":sz:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ta: {
				unicode: "1f1f9-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127481;&#127462;",
				name: "tristan da cunha",
				shortname: ":flag_ta:",
				category: "flags",
				emoji_order: "2406",
				aliases: [":ta:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tc: {
				unicode: "1f1f9-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127481;&#127464;",
				name: "turks and caicos islands",
				shortname: ":flag_tc:",
				category: "flags",
				emoji_order: "2407",
				aliases: [":tc:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_td: {
				unicode: "1f1f9-1f1e9",
				unicode_alt: "",
				code_decimal: "&#127481;&#127465;",
				name: "chad",
				shortname: ":flag_td:",
				category: "flags",
				emoji_order: "2408",
				aliases: [":td:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tf: {
				unicode: "1f1f9-1f1eb",
				unicode_alt: "",
				code_decimal: "&#127481;&#127467;",
				name: "french southern territories",
				shortname: ":flag_tf:",
				category: "flags",
				emoji_order: "2409",
				aliases: [":tf:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tg: {
				unicode: "1f1f9-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127481;&#127468;",
				name: "togo",
				shortname: ":flag_tg:",
				category: "flags",
				emoji_order: "2410",
				aliases: [":tg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_th: {
				unicode: "1f1f9-1f1ed",
				unicode_alt: "",
				code_decimal: "&#127481;&#127469;",
				name: "thailand",
				shortname: ":flag_th:",
				category: "flags",
				emoji_order: "2411",
				aliases: [":th:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tj: {
				unicode: "1f1f9-1f1ef",
				unicode_alt: "",
				code_decimal: "&#127481;&#127471;",
				name: "tajikistan",
				shortname: ":flag_tj:",
				category: "flags",
				emoji_order: "2412",
				aliases: [":tj:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tk: {
				unicode: "1f1f9-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127481;&#127472;",
				name: "tokelau",
				shortname: ":flag_tk:",
				category: "flags",
				emoji_order: "2413",
				aliases: [":tk:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tl: {
				unicode: "1f1f9-1f1f1",
				unicode_alt: "",
				code_decimal: "&#127481;&#127473;",
				name: "timor-leste",
				shortname: ":flag_tl:",
				category: "flags",
				emoji_order: "2414",
				aliases: [":tl:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tm: {
				unicode: "1f1f9-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127481;&#127474;",
				name: "turkmenistan",
				shortname: ":flag_tm:",
				category: "flags",
				emoji_order: "2415",
				aliases: [":turkmenistan:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tn: {
				unicode: "1f1f9-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127481;&#127475;",
				name: "tunisia",
				shortname: ":flag_tn:",
				category: "flags",
				emoji_order: "2416",
				aliases: [":tn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_to: {
				unicode: "1f1f9-1f1f4",
				unicode_alt: "",
				code_decimal: "&#127481;&#127476;",
				name: "tonga",
				shortname: ":flag_to:",
				category: "flags",
				emoji_order: "2417",
				aliases: [":to:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tr: {
				unicode: "1f1f9-1f1f7",
				unicode_alt: "",
				code_decimal: "&#127481;&#127479;",
				name: "turkey",
				shortname: ":flag_tr:",
				category: "flags",
				emoji_order: "2418",
				aliases: [":tr:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tt: {
				unicode: "1f1f9-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127481;&#127481;",
				name: "trinidad and tobago",
				shortname: ":flag_tt:",
				category: "flags",
				emoji_order: "2419",
				aliases: [":tt:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tv: {
				unicode: "1f1f9-1f1fb",
				unicode_alt: "",
				code_decimal: "&#127481;&#127483;",
				name: "tuvalu",
				shortname: ":flag_tv:",
				category: "flags",
				emoji_order: "2420",
				aliases: [":tuvalu:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tw: {
				unicode: "1f1f9-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127481;&#127484;",
				name: "the republic of china",
				shortname: ":flag_tw:",
				category: "flags",
				emoji_order: "2421",
				aliases: [":tw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_tz: {
				unicode: "1f1f9-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127481;&#127487;",
				name: "tanzania",
				shortname: ":flag_tz:",
				category: "flags",
				emoji_order: "2422",
				aliases: [":tz:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ua: {
				unicode: "1f1fa-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127482;&#127462;",
				name: "ukraine",
				shortname: ":flag_ua:",
				category: "flags",
				emoji_order: "2423",
				aliases: [":ua:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ug: {
				unicode: "1f1fa-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127482;&#127468;",
				name: "uganda",
				shortname: ":flag_ug:",
				category: "flags",
				emoji_order: "2424",
				aliases: [":ug:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_um: {
				unicode: "1f1fa-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127482;&#127474;",
				name: "united states minor outlying islands",
				shortname: ":flag_um:",
				category: "flags",
				emoji_order: "2425",
				aliases: [":um:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_us: {
				unicode: "1f1fa-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127482;&#127480;",
				name: "united states",
				shortname: ":flag_us:",
				category: "flags",
				emoji_order: "2427",
				aliases: [":us:"],
				aliases_ascii: [],
				keywords: ["america",
					"country", "flag"]
			},
			flag_uy: {
				unicode: "1f1fa-1f1fe",
				unicode_alt: "",
				code_decimal: "&#127482;&#127486;",
				name: "uruguay",
				shortname: ":flag_uy:",
				category: "flags",
				emoji_order: "2428",
				aliases: [":uy:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_uz: {
				unicode: "1f1fa-1f1ff",
				unicode_alt: "",
				code_decimal: "&#127482;&#127487;",
				name: "uzbekistan",
				shortname: ":flag_uz:",
				category: "flags",
				emoji_order: "2429",
				aliases: [":uz:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_va: {
				unicode: "1f1fb-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127483;&#127462;",
				name: "the vatican city",
				shortname: ":flag_va:",
				category: "flags",
				emoji_order: "2430",
				aliases: [":va:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_vc: {
				unicode: "1f1fb-1f1e8",
				unicode_alt: "",
				code_decimal: "&#127483;&#127464;",
				name: "saint vincent and the grenadines",
				shortname: ":flag_vc:",
				category: "flags",
				emoji_order: "2431",
				aliases: [":vc:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ve: {
				unicode: "1f1fb-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127483;&#127466;",
				name: "venezuela",
				shortname: ":flag_ve:",
				category: "flags",
				emoji_order: "2432",
				aliases: [":ve:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_vg: {
				unicode: "1f1fb-1f1ec",
				unicode_alt: "",
				code_decimal: "&#127483;&#127468;",
				name: "british virgin islands",
				shortname: ":flag_vg:",
				category: "flags",
				emoji_order: "2433",
				aliases: [":vg:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_vi: {
				unicode: "1f1fb-1f1ee",
				unicode_alt: "",
				code_decimal: "&#127483;&#127470;",
				name: "u.s. virgin islands",
				shortname: ":flag_vi:",
				category: "flags",
				emoji_order: "2434",
				aliases: [":vi:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_vn: {
				unicode: "1f1fb-1f1f3",
				unicode_alt: "",
				code_decimal: "&#127483;&#127475;",
				name: "vietnam",
				shortname: ":flag_vn:",
				category: "flags",
				emoji_order: "2435",
				aliases: [":vn:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_vu: {
				unicode: "1f1fb-1f1fa",
				unicode_alt: "",
				code_decimal: "&#127483;&#127482;",
				name: "vanuatu",
				shortname: ":flag_vu:",
				category: "flags",
				emoji_order: "2436",
				aliases: [":vu:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_wf: {
				unicode: "1f1fc-1f1eb",
				unicode_alt: "",
				code_decimal: "&#127484;&#127467;",
				name: "wallis and futuna",
				shortname: ":flag_wf:",
				category: "flags",
				emoji_order: "2437",
				aliases: [":wf:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ws: {
				unicode: "1f1fc-1f1f8",
				unicode_alt: "",
				code_decimal: "&#127484;&#127480;",
				name: "samoa",
				shortname: ":flag_ws:",
				category: "flags",
				emoji_order: "2438",
				aliases: [":ws:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_xk: {
				unicode: "1f1fd-1f1f0",
				unicode_alt: "",
				code_decimal: "&#127485;&#127472;",
				name: "kosovo",
				shortname: ":flag_xk:",
				category: "flags",
				emoji_order: "2439",
				aliases: [":xk:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_ye: {
				unicode: "1f1fe-1f1ea",
				unicode_alt: "",
				code_decimal: "&#127486;&#127466;",
				name: "yemen",
				shortname: ":flag_ye:",
				category: "flags",
				emoji_order: "2440",
				aliases: [":ye:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_yt: {
				unicode: "1f1fe-1f1f9",
				unicode_alt: "",
				code_decimal: "&#127486;&#127481;",
				name: "mayotte",
				shortname: ":flag_yt:",
				category: "flags",
				emoji_order: "2441",
				aliases: [":yt:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_za: {
				unicode: "1f1ff-1f1e6",
				unicode_alt: "",
				code_decimal: "&#127487;&#127462;",
				name: "south africa",
				shortname: ":flag_za:",
				category: "flags",
				emoji_order: "2442",
				aliases: [":za:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_zm: {
				unicode: "1f1ff-1f1f2",
				unicode_alt: "",
				code_decimal: "&#127487;&#127474;",
				name: "zambia",
				shortname: ":flag_zm:",
				category: "flags",
				emoji_order: "2443",
				aliases: [":zm:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			flag_zw: {
				unicode: "1f1ff-1f1fc",
				unicode_alt: "",
				code_decimal: "&#127487;&#127484;",
				name: "zimbabwe",
				shortname: ":flag_zw:",
				category: "flags",
				emoji_order: "2444",
				aliases: [":zw:"],
				aliases_ascii: [],
				keywords: ["country", "flag"]
			},
			regional_indicator_z: {
				unicode: "1f1ff",
				unicode_alt: "",
				code_decimal: "&#127487;",
				name: "regional indicator symbol letter z",
				shortname: ":regional_indicator_z:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_y: {
				unicode: "1f1fe",
				unicode_alt: "",
				code_decimal: "&#127486;",
				name: "regional indicator symbol letter y",
				shortname: ":regional_indicator_y:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_x: {
				unicode: "1f1fd",
				unicode_alt: "",
				code_decimal: "&#127485;",
				name: "regional indicator symbol letter x",
				shortname: ":regional_indicator_x:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_w: {
				unicode: "1f1fc",
				unicode_alt: "",
				code_decimal: "&#127484;",
				name: "regional indicator symbol letter w",
				shortname: ":regional_indicator_w:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_v: {
				unicode: "1f1fb",
				unicode_alt: "",
				code_decimal: "&#127483;",
				name: "regional indicator symbol letter v",
				shortname: ":regional_indicator_v:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_u: {
				unicode: "1f1fa",
				unicode_alt: "",
				code_decimal: "&#127482;",
				name: "regional indicator symbol letter u",
				shortname: ":regional_indicator_u:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_t: {
				unicode: "1f1f9",
				unicode_alt: "",
				code_decimal: "&#127481;",
				name: "regional indicator symbol letter t",
				shortname: ":regional_indicator_t:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_s: {
				unicode: "1f1f8",
				unicode_alt: "",
				code_decimal: "&#127480;",
				name: "regional indicator symbol letter s",
				shortname: ":regional_indicator_s:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_r: {
				unicode: "1f1f7",
				unicode_alt: "",
				code_decimal: "&#127479;",
				name: "regional indicator symbol letter r",
				shortname: ":regional_indicator_r:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_q: {
				unicode: "1f1f6",
				unicode_alt: "",
				code_decimal: "&#127478;",
				name: "regional indicator symbol letter q",
				shortname: ":regional_indicator_q:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_p: {
				unicode: "1f1f5",
				unicode_alt: "",
				code_decimal: "&#127477;",
				name: "regional indicator symbol letter p",
				shortname: ":regional_indicator_p:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_o: {
				unicode: "1f1f4",
				unicode_alt: "",
				code_decimal: "&#127476;",
				name: "regional indicator symbol letter o",
				shortname: ":regional_indicator_o:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_n: {
				unicode: "1f1f3",
				unicode_alt: "",
				code_decimal: "&#127475;",
				name: "regional indicator symbol letter n",
				shortname: ":regional_indicator_n:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_m: {
				unicode: "1f1f2",
				unicode_alt: "",
				code_decimal: "&#127474;",
				name: "regional indicator symbol letter m",
				shortname: ":regional_indicator_m:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_l: {
				unicode: "1f1f1",
				unicode_alt: "",
				code_decimal: "&#127473;",
				name: "regional indicator symbol letter l",
				shortname: ":regional_indicator_l:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_k: {
				unicode: "1f1f0",
				unicode_alt: "",
				code_decimal: "&#127472;",
				name: "regional indicator symbol letter k",
				shortname: ":regional_indicator_k:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_j: {
				unicode: "1f1ef",
				unicode_alt: "",
				code_decimal: "&#127471;",
				name: "regional indicator symbol letter j",
				shortname: ":regional_indicator_j:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_i: {
				unicode: "1f1ee",
				unicode_alt: "",
				code_decimal: "&#127470;",
				name: "regional indicator symbol letter i",
				shortname: ":regional_indicator_i:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_h: {
				unicode: "1f1ed",
				unicode_alt: "",
				code_decimal: "&#127469;",
				name: "regional indicator symbol letter h",
				shortname: ":regional_indicator_h:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_g: {
				unicode: "1f1ec",
				unicode_alt: "",
				code_decimal: "&#127468;",
				name: "regional indicator symbol letter g",
				shortname: ":regional_indicator_g:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_f: {
				unicode: "1f1eb",
				unicode_alt: "",
				code_decimal: "&#127467;",
				name: "regional indicator symbol letter f",
				shortname: ":regional_indicator_f:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_e: {
				unicode: "1f1ea",
				unicode_alt: "",
				code_decimal: "&#127466;",
				name: "regional indicator symbol letter e",
				shortname: ":regional_indicator_e:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_d: {
				unicode: "1f1e9",
				unicode_alt: "",
				code_decimal: "&#127465;",
				name: "regional indicator symbol letter d",
				shortname: ":regional_indicator_d:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_c: {
				unicode: "1f1e8",
				unicode_alt: "",
				code_decimal: "&#127464;",
				name: "regional indicator symbol letter c",
				shortname: ":regional_indicator_c:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_b: {
				unicode: "1f1e7",
				unicode_alt: "",
				code_decimal: "&#127463;",
				name: "regional indicator symbol letter b",
				shortname: ":regional_indicator_b:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			},
			regional_indicator_a: {
				unicode: "1f1e6",
				unicode_alt: "",
				code_decimal: "&#127462;",
				name: "regional indicator symbol letter a",
				shortname: ":regional_indicator_a:",
				category: "regional",
				emoji_order: "12345",
				aliases: [],
				aliases_ascii: [],
				keywords: []
			}
		}, emojiTextComplete = {
			strategies: [{
				match: /\B:([\-+\w]{2,})$/, search: function (a, c) {
					var d = [], b = [], e = [];
					$.each(emojiStrategy, function (c, f) {
						-1 < c.indexOf(a) ? d.push(c) : null !== f.aliases && -1 < f.aliases.indexOf(a) ? b.push(c) : null !== f.keywords && -1 < f.keywords.indexOf(a) && e.push(c)
					});
					3 <= a.length && (d.sort(function (a, b) {
						return a.length > b.length
					}), b.sort(function (a,
					                     b) {
						return a.length > b.length
					}), e.sort());
					var f = d.concat(b).concat(e);
					c(f)
				}, template: function (a) {
					return '<img class="emojione" alt="' + emojiStrategy[a].unicode + '" title=":' + a + ':" src="https://cdn.jsdelivr.net/emojione/assets/png/' + emojiStrategy[a].unicode + '.png?v=2.2.7" /> :' + a + ":"
				}, replace: function (a) {
					return ":" + a + ": "
				}, index: 1, maxCount: 10
			}], options: {
				placement: "top", onKeydown: function (a, c) {
					if (13 === a.keyCode) return a.stopPropagation();
					if (a.ctrlKey && 74 === a.keyCode) return c.KEY_ENTER
				}
			}
		}, getEmojiView = function (a,
		                            c) {
			var d = $(HandlebarsTemplates.emojiDropDown({emojiMap: emojiMap}));
			a.append(d);
			d.delegate(".open-emoji-tab", "click", function () {
				var a = $(this).attr("data-id");
				d.find(".open-emoji-tab").removeClass("active");
				$(this).addClass("active");
				openEmojiTab(d, a)
			});
			d.delegate(".select-emoji", "click", function () {
				var a = $(this).attr("data-id");
				c.val(c.val() + a);
				c.focus()
			});
			d.delegate(".search-emoji", "keyup", function (a) {
				var c = "";
				a = $(this).val().trim().replace(/:/g, "");
				var f = RegExp(a);
				a && Object.keys(emojiStrategy).forEach(function (a) {
					f.test(a) &&
					(c += '<a href="javascript:void(0);" data-id="' + emojiStrategy[a].shortname + '" class="select-emoji" title="' + emojiStrategy[a].shortname + '">' + emojione.shortnameToImage(emojiStrategy[a].shortname) + "</a>")
				});
				c.length ? d.find(".search-results").html(c) : d.find(".search-results").html("<p>No results</p>")
			});
			d.find('.open-emoji-tab[data-id="people"]').addClass("active");
			openEmojiTab(d, "people");
			return d
		}, openEmojiTab = function (a, c) {
			var d = emojiMap[c],
				d = "search" === c ? $(HandlebarsTemplates.emojiSearchPane()) : $(HandlebarsTemplates.emojiTabPane({content: d.content}));
			a.find(".tab-content").html(d)
		}, replybackTimeout = null, returnCallback = null, ongoingWebRTCCall = !1, webrtcCallWindow = null,
		tempWebrtcWin = null, hasOngoingWebRTCCall = function (a) {
			webrtcCallWindow && !webrtcCallWindow.closed && (returnCallback = a, window.addEventListener("message", listenOnPostMessage), webrtcCallWindow.postMessage("hasOngoingCall", WEBRTC_LINK), replybackTimeout = setTimeout(function () {
				window.removeEventListener("message", listenOnPostMessage);
				returnCallback = null;
				a()
			}, 1E3))
		}, listenOnPostMessage = function (a) {
			returnCallback =
				returnCallback || function () {
				};
			a.origin === WEBRTC_LINK && (clearTimeout(replybackTimeout), returnCallback(!0 === a.data), returnCallback = null, window.removeEventListener("message", listenOnPostMessage))
		}, listenOnPostMessageDesktopApp = function (a) {
			returnCallback = returnCallback || function () {
			};
			"hasOngoingWebRTCCallReply" === a.cmd && (clearTimeout(replybackTimeout), returnCallback(!0 === a.data), returnCallback = null, window.removeEventListener("message", listenOnPostMessageDesktopApp))
		}, joinWebRTCCall = function (a, c, d, b) {
			var e =
				function () {
					d ? joinOngoingCall(d, a, b) : initiateCall(a, c, b)
				};
			b = b || function () {
			};
			if (desktopConnector.enabled() && !desktopConnector.canUseWebRTC()) return alert("This app does not support WebRTC. Please try in the latest Chrome or Firefox browsers."), b(!0);
			if (!Tawk.webProperties.isWebRTCActivated(a.pgid)) return b(!0, {message: "WEBRTC_NOT_ACTIVATED"});
			if (!Tawk.webProperties.isWebRTCEnabled(a.pgid)) return b(!0, {message: "WEBRTC_DISABLED"});
			desktopConnector.enabled() ? (returnCallback = b, window.removeEventListener("message",
				listenOnPostMessageDesktopApp), window.addEventListener("message", listenOnPostMessageDesktopApp), initiateCallForDesktopApp(a, c, d, b)) : webrtcCallWindow && !webrtcCallWindow.closed ? hasOngoingWebRTCCall(function (a) {
				if (a) return b(!0, {message: "ONGOING_CALL"});
				endWebRTCCall();
				e()
			}) : e()
		}, initiateCall = function (a, c, d) {
			c = {propertyId: a.pgid, chatSessionId: a.isHistory ? a.sk : a._id, video: c.video, screen: c.screen};
			tempWebrtcWin ? webrtcCallWindow = tempWebrtcWin : (endWebRTCCall(), webrtcCallWindow = window.open(""));
			notificationController.stopIncomingCall();
			a.set("incomingCall", !1);
			socketConnector.initCall(c, function (a, c) {
				if (a) return webrtcCallWindow.close(), d(!0, a);
				Tawk.liveMonitoringController.stopAllIncomingWebRTCCall();
				webrtcCallWindow.location.href = WEBRTC_LINK + "/v2/call?token=" + c.data.token;
				d()
			})
		}, declineWebRTCCall = function (a, c, d) {
			socketConnector.rejectCall({callId: a, propertyId: c}, function (a, c) {
				if (a) return d(!0);
				notificationController.stopIncomingCall();
				d()
			})
		}, joinOngoingCall = function (a, c, d) {
			a = {callId: a, propertyId: c.pgid};
			tempWebrtcWin ? webrtcCallWindow =
				tempWebrtcWin : (endWebRTCCall(), webrtcCallWindow = window.open(""));
			notificationController.stopIncomingCall();
			c.set("incomingCall", !1);
			socketConnector.joinCall(a, function (a, c) {
				if (a) return webrtcCallWindow.close(), d(!0, a);
				Tawk.liveMonitoringController.stopAllIncomingWebRTCCall();
				webrtcCallWindow.location.href = WEBRTC_LINK + "/v2/call?token=" + c.data.token;
				d()
			})
		}, endWebRTCCall = function () {
			webrtcCallWindow && (webrtcCallWindow.close(), webrtcCallWindow = null);
			closeTmpWindow()
		}, closeTmpWindow = function () {
			tempWebrtcWin &&
			(tempWebrtcWin.close(), tempWebrtcWin = null)
		}, initiateCallForDesktopApp = function (a, c, d, b) {
			var e = function (a, c) {
				if (a) return b(!0, a);
				Tawk.liveMonitoringController.stopAllIncomingWebRTCCall();
				desktopConnector.send("openWebRTCCAll", WEBRTC_LINK + "/v2/call?token=" + c.data.token);
				b()
			};
			notificationController.stopIncomingCall();
			a.set("incomingCall", !1);
			c ? (a = {
				propertyId: a.pgid,
				chatSessionId: a._id,
				video: c.video,
				screen: c.screen
			}, socketConnector.initCall(a, e)) : (a = {callId: d, propertyId: a.pgid}, socketConnector.joinCall(a,
				e))
		};
	Tawk.AgentInterface = Ember.Mixin.create({
		cver: 0,
		noToday: !0,
		invitedAgents: null,
		isProcessingHistory: !1,
		conversationStartedOn: null,
		previousConversation: null,
		conversationBlock: null,
		conversationEndedTime: null,
		hasOlder: !1,
		newChat: !1,
		conversationQueue: null,
		isAgentChat: !0,
		inView: !1,
		currentOngoing: null,
		init: function () {
			this.set("invitedAgents", []);
			this.set("conversationBlock", []);
			this.set("previousConversation", []);
			this.set("currentOngoing", []);
			this.set("conversationQueue", []);
			this.set("c", [])
		},
		processHistory: function (a) {
			this.currentOngoing.clear();
			this.previousConversation.clear();
			this.processOlderHistory(a);
			this.set("isProcessingHistory", !1);
			this.set("previousConversationUpdated", !0)
		},
		processOlderHistory: function (a, c) {
			a.chunks.length ? (c || this.set("lastCorrectVersion", {
				conversationId: a.chunks[0].cid,
				cver: a.chunks[0].c[a.chunks[0].c.length - 1].cv,
				co: new Date(a.chunks[0].c[a.chunks[0].c.length - 1].co)
			}), this.set("conversationEndedTime", a.chunks[a.chunks.length - 1].cso), this.set("hasMoreUnseen", conversationProcess.processPreviousConversation(this.previousConversation,
				a.chunks, a.lastSeenId, c)), this.set("hasOlder", !0)) : this.set("hasOlder", !1);
			this.previousConversation.length && 0 === this.previousConversation[this.previousConversation.length - 1].dayDiff ? this.set("noToday", !1) : this.set("noToday", !0);
			this.set("previousConversationUpdated", !0)
		},
		incomingMessage: function (a) {
			"c" === a.mt && a.uid !== Tawk.userController.user.id && this.isOpen && (this.set("newMessage", !0), notificationController.notifyAgentChatMessage(a.n, a.m, "s" === a.ctyp ? a.uid : this.groupId));
			a.ut = "a";
			this.addToMessageBlock(a)
		},
		updateChatMessages: function (a) {
			this.get("c") || this.set("c", []);
			this.get("c").push(a);
			(!this.lastCorrectVersion || a.co > this.lastCorrectVersion.co) && this.set("lastCorrectVersion", {
				cver: a.cver,
				conversationId: a.cid,
				co: a.co
			})
		},
		addToMessageBlock: function (a) {
			var c, d = this.lastBlock;
			this.previousConversation.length && this.noToday && (this.set("newBlock", '<div class="date-container"><div class="line"></div><div class="date">' + languageParser.translate("generic", "today") + "</div></div>"), this.set("noToday", !1));
			c =
				conversationProcess.addToAgentMesssageBlock(a, d);
			this.set("newBlock", null);
			this.set("newRow", null);
			this.conversationStartedOn || this.set("conversationStartedOn", moment(a.co).format("dddd, MMMM D YYYY, HH:mm"));
			if (c.newBlock) c.newBlock.first().append(c.newRow), d = c.lastBlock, this.conversationBlock.pushObject(c.newBlock), this.set("newBlock", c.newBlock); else if (!c.newBlock && d && d.id === a.uid) {
				if (a = this.conversationBlock.get("lastObject")) this.conversationBlock.popObject(), this.conversationBlock.pushObject(d.block);
				this.set("newRow", {block: d.block.first(), row: c.newRow})
			}
			-1 === this.currentOngoing.indexOf(d) && this.currentOngoing.pushObject(d);
			this.set("lastBlock", d);
			return c.newRow
		},
		clearConversations: function () {
			this.set("previousConversationUpdated", !1);
			this.set("conversationUpdated", !1);
			this.set("lastBlock", null);
			this.set("conversationEndedTime", null);
			this.c.clear();
			this.previousConversation.clear();
			this.conversationBlock.clear();
			this.currentOngoing.clear()
		},
		fileId: function () {
			return "file-" + this.groupId
		}.property("groupId"),
		clearUnseen: function () {
		}
	});
	Tawk.AgentModel = Ember.Object.extend(Tawk.AgentInterface, {
		status: function () {
			var a = [];
			if (!this.sessions || !this.sessions.length) return "offline";
			a = this.sessions.getEach("st");
			return -1 !== a.indexOf("o") ? "online" : -1 !== a.indexOf("a") ? "away" : "invisible"
		}.property("sessions.length", "sessions.@each.st"), userCard: function () {
			return "<div class='usr-card'>" + (this.aliasImage ? "<img src='" + this.aliasImage + "' alt='" + this.name + "' />" : "<em class='badge padding-5 no-border-radius bg-color-blueLight txt-color-white'><i class='fa fa-user fa-fw fa-2x'></i></em>") +
				"<div class='usr-card-content'><h3>" + this.name + "</h3><span class='label label-" + this.get("status") + "'>" + languageParser.translate("generic", this.get("status")) + "</label></div></div>"
		}.property("name", "status"), countryFlag: function () {
			return this.get("lastKnown") && this.get("lastKnown.cc") ? "flag flag-" + this.get("lastKnown.cc").toLowerCase() : "flag-ukn"
		}.property("cc")
	});
	Tawk.AgentGroupModel = Ember.Object.extend(Tawk.AgentInterface, {
		isGroup: !0, status: "online", groupName: function () {
			return this.name ? decodeStr(this.name) :
				this.get("participants") ? this.get("participants").filterProperty("isOwn", !1).length ? decodeStr(this.get("participants").filterProperty("isOwn", !1).getEach("name").join(", ")) : decodeStr(Tawk.userController.user.fullName) : ""
		}.property("participants.@each.name", "name")
	});
	Tawk.VisitorModel = Ember.Object.extend({
		isVisitorPresent: !0,
		messagePreview: null,
		isOpen: !1,
		cr: !1,
		ha: !1,
		participatingAgents: null,
		isNewMessage: !1,
		lastSeenChat: null,
		isOwn: !1,
		ignore: !1,
		customAttributes: null,
		customTags: null,
		timeline: null,
		incomingWebRTCTimeout: null,
		callData: null,
		callStatusData: null,
		init: function () {
			this.set("agentProfiles", []);
			this.set("conversationBlock", []);
			this.set("agentProfileIds", []);
			this.set("typingAgents", []);
			this.set("profiles", {});
			this.set("conversationQueue", []);
			this.set("lastSeenChat", this.cver);
			this.set("isClientProperty", Tawk.webProperties.isClientProperty(this.pgid));
			this.set("agentPrensence", {});
			this.set("callData", {});
			this.set("callStatusData", {});
			if (this.cr && (!this.ha && this.dpt) && !Tawk.webProperties.isAgentAttachedToDepartment(this.dpt)) return this.set("anotherDepartment",
				!0);
			this.updateParticipatingAgents();
			this.set("customAttributes", {version: 0, data: []});
			this.set("customTags", {version: 0, data: null});
			this.set("timeline", []);
			this.updateDuration()
		},
		updateDuration: function () {
			var a;
			a = moment().diff(this.so, "seconds", !0);
			var c = moment.duration(a, "seconds");
			this.isVisitorPresent && (0 > a ? this.set("formattedDuration", "00:00:00") : (a = Math.floor(c.asHours()), 10 > a && (a = "0" + a), this.set("formattedDuration", a + moment.utc(c.asMilliseconds()).format(":mm:ss"))))
		},
		updateVisitorLocalTime: function () {
			var a;
			this.isVisitorPresent && (a = moment().utcOffset(-1 * this.tzo), this.set("visitorLocalTime", a.format("LT")))
		},
		departmentName: function () {
			return Tawk.webProperties.getDepartmentName(this.pgid, this.dpt)
		}.property("dpt"),
		isInactiveChanged: function () {
			this.isInactive || this.set("activeTimestamp", Date.now())
		}.observes("isInactive"),
		isInactive: function () {
			return !this.cr && !this.ha && !this.open
		}.property("cr", "ha", "open"),
		highlightColor: function () {
			return this.ignore ? "ignored" : this.incomingCall && !this.ha ? "waiting unseen" :
				this.cr && !this.ha ? this.anotherDepartment ? "department-chat-request" : "waiting unseen" : "max" === this.cw ? "clicked" : ""
		}.property("cr", "cw", "ignore", "incomingCall", "ha"),
		countryFlag: function () {
			return this.get("cc") ? "flag flag-" + this.get("cc").toLowerCase() : "flag-ukn"
		}.property("cc"),
		browser: function () {
			return this.get("bw") ? "sprite-background " + this.get("bw") + "-browser" : ""
		}.property("bw"),
		operatingSystem: function () {
			return this.get("os") ? "sprite-background " + this.get("os") + "-os" : ""
		}.property("os"),
		lastVisitDate: function () {
			return this.lvd ?
				moment(this.lvd).fromNow() : null
		}.property("lvd"),
		lastChatAgent: function () {
			return this.lci && this.lci.aid.length ? decodeStr(Tawk.agentsController.getName(this.lci.aid[0])) : null
		}.property("lci"),
		lastChatDate: function () {
			return this.lci && this.get("lastChatAgent") ? moment(this.lci.tm).fromNow() : null
		}.property("lci"),
		enteredTime: function () {
			return this.so ? moment(this.so).fromNow() : null
		}.property("so"),
		changePageUrl: function (a) {
			this.cver > a.cver || (!a.md.pu || -1 !== a.md.pu.indexOf("static.tawk")) || (this.set("pu",
				decodeStr(a.md.pu)), this.set("pt", decodeStr(a.md.pt)))
		},
		chatEnded: function (a) {
			this.set("hasJoinedConversation", !1);
			this.set("ha", !1);
			this.set("agentPrensence", {});
			this.set("conversationStarted", !1);
			this.set("messagePreview", null);
			void 0 !== a && (this.set("chatEndVersion", a.cev), this.chids ? this.chids.push(a.nchid) : this.set("chids", [a.pchid, a.nchid]))
		},
		windowStateChanged: function (a, c) {
			a !== this.cw && (this.set("cw", a), c && this.addToMessageBlock({
				t: "n",
				ut: "v",
				m: a,
				co: new Date
			}, this.n))
		},
		popoutStateChanged: function (a) {
			a =
				a ? "pop" : "pop_in";
			this.set("cw", a);
			this.addToMessageBlock({t: "n", ut: "v", m: a, co: new Date}, this.n)
		},
		participatingAgentsNames: function () {
			return Tawk.agentsController.getAgentsName(this.participatingAgents).join(", ")
		}.property("participatingAgents"),
		participatingAgentsNamesArr: function () {
			return Tawk.agentsController.getAgentsName(this.participatingAgents)
		}.property("participatingAgents"),
		processHistory: function (a) {
			var c = this, d = [];
			this.c && (a = conversationProcess.processHistory(this.c, this.n, !0), this.set("c",
				this.c), this.set("conversationBlock", a.transcriptData), this.set("lastBlock", a.lastBlock), this.set("agentPrensence", a.agentPrensence), this.set("agents", a.agents), this.set("profiles", a.profiles), this.set("cver", this.cver), this.set("lastSeenChat", this.cver), this.set("conversationUpdated", !0), this.set("timeline", a.timeline), this.set("conversationStarted", a.chatStarted && !a.chatEnded), this.set("chatEndVersion", a.chatEndVersion), a.callInfo.length && (this.set("syncCallData", !0), a.callInfo.forEach(function (a) {
				conversationProcess.processWebRTCCallBlock(a.callId,
					c.pgid, a.callView, !0, function (d, f) {
						f && c.set("callData." + a.callId, f)
					})
			})));
			this.attr && this.attrv > this.customAttributes.version && (Object.keys(this.attr).forEach(function (a) {
				null !== c.attr[a] && d.pushObject({key: beautifyAPIKey(a), value: beautifyAPIValue(c.attr[a])})
			}), this.set("customAttributes.data", d), this.set("customAttributes.version", this.attrv));
			this.set("isProcessingHistory", !1);
			this.autoJoinConversation();
			this.clearConversationQueue()
		},
		autoJoinConversation: function () {
			var a;
			!this.hasJoinedConversation &&
			(0 !== Object.keys(this.profiles).length && 0 !== Object.keys(this.agentPrensence).length) && (a = Tawk.userController.user.id + Tawk.userController.user.resourceId, a = this.agentPrensence[a], void 0 !== a && (a = a.aliasId)) && (a = this.profiles[a], void 0 !== a && (this.set("_conversationProfile", a), this.set("_agentName", a.displayName), this.set("hasJoinedConversation", !0)))
		},
		clearConversationQueue: function () {
			var a = this;
			this.conversationQueue.length && this.conversationQueue.sort(function (a, d) {
				if (a.cver < d.cver) return -1;
				if (a.cver >
					d.cver) return 1
			}).forEach(function (c) {
				c.cver < a.cver || (a.addToMessageBlock(c), a.set("cver", c.cver), a.set("lastSeenChat", c.cver))
			})
		},
		clearConversations: function () {
			if (null !== this.conversationBlock) for (var a = 0, c = this.conversationBlock.length; a < c; a++) this.conversationBlock.popObject().remove();
			this.set("conversationUpdated", !1);
			this.set("conversationBlock", null);
			this.set("newRow", null);
			this.set("newBlock", null);
			this.set("lastBlock", null);
			this.set("agentPrensence", {});
			this.set("copyFormat", null)
		},
		incomingMessage: function (a) {
			var c;
			if (a) if (this.isProcessingHistory) this.conversationQueue.pushObject(a); else if (this.isOpen) {
				c = this.get("n");
				this.set("isNewMessage", !1);
				this.set("cver", a.cver);
				this.set("isOwn", !1);
				"n" === a.t && "a" === a.ut ? "AGENT_JOIN_CONVERSATION" === a.m && a.uid === Tawk.userController.user.id && a.md.rsc === Tawk.userController.user.resourceId && this.set("hasJoinedConversation", !0) : "n" === a.t && "v" === a.ut && "VISITOR_RATING" === a.m && (a.m = 0 === a.md.rt ? "VISITOR_REMOVED_RATING" : 1 === a.md.rt ? "VISITOR_POSITIVE_RATING" : "VISITOR_NEGATIVE_RATING");
				"c" === a.t && "v" === a.ut && (this.messagePreview && this.set("messagePreview", null), this.isOpen && this.ha && (notificationController.notifyNewMessage(c, a.m, a.vsk), this.set("isNewMessage", !0)));
				if ("c" === a.t && "a" === a.ut) {
					var d = this.typingAgents.findProperty("agentId", a.uid);
					d && this.typingAgents.removeObject(d);
					a.uid !== Tawk.userController.user.id ? this.set("isNewMessage", !0) : (this.set("isOwn", !0), this.set("showFlash", !1))
				}
				this.isNewMessage || this.set("lastSeenChat", a.cver);
				this.addToMessageBlock(a, c)
			} else this.c ||
			this.set("c", []), this.c.push(a)
		},
		addToMessageBlock: function (a, c) {
			var d, b, e;
			if (this.conversationBlock && (e = this.lastBlock, b = conversationProcess.addToMesssageBlock(a, e, c))) {
				this.set("newBlock", null);
				this.set("newRow", null);
				this.timeline || this.set("timeline", []);
				this.conversationStarted || ("c" !== a.t || "s" === a.ut) || (this.set("conversationStarted", !0), this.timeline.insertAt(0, {
					title: languageParser.translate("visitors", "chat_started"),
					time: moment(a.co).format("HH:mm")
				}));
				if ("n" === a.t) this.conversationBlock.pushObject(b.newBlock),
					e = null, this.set("newBlock", b.newBlock), "v" === a.ut && ("EVENT" === a.m ? this.timeline.insertAt(0, {
					title: a.md.event,
					time: moment(a.co).format("HH:mm"),
					data: conversationProcess.parseEventData(a.md.eventData)
				}) : "CHAT_ENDED" === a.m || "VISITOR_LEFT" === a.m ? this.timeline.insertAt(0, {
					title: languageParser.translate("visitors", "chat_end"),
					time: moment(a.co).format("HH:mm")
				}) : "VISITOR_NAVIGATION" === a.m ? this.timeline.insertAt(0, {
					title: languageParser.translate("visitors", a.m, {
						url: conversationProcess.parseUrlWithTitle(a.md.pu,
							a.md.pt)
					}), time: moment(new Date).format("HH:mm")
				}) : this.timeline.insertAt(0, {
					title: languageParser.translate("visitors", a.m),
					time: moment(new Date).format("HH:mm")
				})); else if (b.newBlock) b.newBlock.first().append(b.newRow), e = b.lastBlock, this.conversationBlock.pushObject(b.newBlock), this.set("newBlock", b.newBlock); else if (!b.newBlock && e && e.id === a.uid && ("a" === a.ut || a.md && a.md.rsc && b.lastBlock.rsc === a.md.rsc || "v" === a.ut) && e.ut === a.ut) {
					if (d = this.conversationBlock.get("lastObject")) this.conversationBlock.popObject(),
						this.conversationBlock.pushObject(e.block);
					this.set("newRow", {block: e.block.first(), row: b.newRow})
				}
				this.set("lastBlock", e);
				this.get("c") && a.co && this.get("c").push(a);
				return b.newRow
			}
		},
		updateParticipatingAgents: function () {
			var a = [];
			this.al && this.al.length && this.al.forEach(function (c) {
				c = c.split("-");
				-1 === a.indexOf(c[0]) && a.push(c[0])
			});
			this.set("participatingAgents", a)
		}.observes("al"),
		updateAgentList: function () {
			this.get("ha") || this.set("participatingAgents", [])
		}.observes("ha"),
		propertyName: function () {
			return decodeStr(Tawk.webProperties.getPropertyName(this.pgid))
		}.property("pgid"),
		visitorName: function () {
			return decodeStr(this.n)
		}.property("n"),
		displayName: function () {
			return /^V[0-9]{16}$/.test(this.n) && this.ip ? this.ip : decodeStr(this.n)
		}.property("n"),
		ring: function () {
			var a = !1;
			if (this.ignore) return this.incomingCall && notificationController.stopIncomingCall(), !1;
			if (this.incomingCall || !this.cr) return !1;
			this.dpt && (a = Tawk.webProperties.isAgentAttachedToDepartment(this.dpt), a || (this.set("anotherDepartment", !0), a = Tawk.webProperties.isDepartmentOffline(this.pgid, this.dpt)));
			if ((!this.dpt ||
					a) && !this.ha) return !0
		}.property("cr", "ha", "ignore"),
		clearUnseen: function () {
			this.set("showFlash", !1);
			this.set("lastSeenChat", this.cver)
		},
		fileId: function () {
			return "file-" + this._id
		}.property("_id"),
		notesValueChanged: function () {
			this.ns ? this.set("notesValue", decodeStr(this.ns)) : this.set("notesValue", "")
		}.observes("ns"),
		propertyShortName: function () {
			return this.get("propertyName").charAt(0)
		}.property("propertyName"),
		propertyColor: function () {
			return "background : " + Tawk.webProperties.getColorCode(this.pgid)
		}.property("propertyName"),
		visitorDetails: function () {
			return "Name : " + this.n
		}.property("n", "e", "ns"),
		locationDetails: function () {
			return this.cy ? this.cy + ", " + this.cn : this.cn
		}.property("cy", "cn"),
		joinedFromOtherResource: function () {
			var a = 0;
			this.al.forEach(function (c) {
				-1 !== c.indexOf(Tawk.userController.user.id) && a++
			});
			return a
		}.property("al"),
		decodedReferrer: function () {
			return decodeStr(this.rf)
		}.property("rf"),
		notesUpdated: function () {
			this.ldub && (this.set("notesUpdatedBy", decodeStr(Tawk.agentsController.getName(this.ldub.aid))), this.set("notesUpdatedOn",
				moment(this.ldub.uo).format("D MMM YYYY")))
		}.observes("ldub"),
		latestChatId: function () {
			return 1 === this.chids.length ? this.chids[0] : this.conversationStarted ? this.chids[this.chids.length - 1] : this.chids[this.chids.length - 2]
		}.property("chids", "conversationStarted"),
		incomingCallChanged: function () {
			!1 === this.incomingCall && (clearTimeout(this.incomingWebRTCTimeout), notificationController.stopIncomingCall())
		}.observes("incomingCall"),
		tagsChanged: function () {
			if (this.tags && this.tagsv > this.customTags.version) {
				var a =
					[];
				this.tags.forEach(function (c) {
					a.pushObject(decodeStr(c))
				});
				this.set("tags", a);
				this.set("customTags.data", this.tags.join(", "));
				this.set("customTags.version", this.tagsv)
			}
		}.observes("tagsv"),
		startIncomingCallNotification: function (a, c) {
			var d = this, b = (new Date).getTime(), e = (new Date(c)).getTime(), b = a - (b - e);
			notificationController.notifyIncomingCall();
			clearTimeout(this.incomingWebRTCTimeout);
			this.incomingWebRTCTimeout = setTimeout(function () {
				d.setProperties({incomingCall: !1, ongoingCall: !1})
			}, b)
		}
	});
	Tawk.ShortcutModel =
		Ember.Object.extend(Ember.Copyable, {
			copy: function () {
				var a = this, c = new this.constructor;
				Object.keys(this).forEach(function (d) {
					"_" !== d.charAt("0") && "toString" !== d && (a.get(d) instanceof Array ? c.set(d, a.get(d).slice()) : c.set(d, a.get(d)))
				});
				return c
			}, isPublicAccess: function () {
				return "public" === this.dataType
			}.property("dataType"), isPersonalAccess: function () {
				return "personal" === this.dataType
			}.property("dataType"), isMessageType: function () {
				return "message" === this.shortcutType
			}.property("shortcutType"), isSurveyType: function () {
				return "survey" ===
					this.shortcutType
			}.property("shortcutType")
		});
	Tawk.PropertyModel = Ember.Object.extend({
		id: null,
		name: null,
		tawkId: null,
		siteLink: null,
		isAdmin: null,
		sortable: null,
		enabled: null,
		isSite: null,
		hasAgents: null,
		canBeDeleted: null,
		hasDepartments: null,
		agentList: null,
		departmentList: null,
		triggerList: null,
		settings: null,
		isProcessed: null,
		invitedList: null,
		addOnList: null,
		initialize: function (a, c) {
			this.setProperties({
				id: a.id,
				name: decodeStr(a.propertyName),
				tawkId: decodeStr(a.tawkId),
				isAdmin: a.isAdmin,
				sortable: decodeStr(a.propertyName).toLowerCase(),
				enabled: a.enabled,
				isSite: c,
				hasAgents: a.currentAgents && 1 < a.currentAgents.length,
				canBeDeleted: a.isAdmin,
				isProcessed: !1,
				agentList: [],
				invitedList: [],
				triggerList: [],
				departmentList: [],
				widgetList: [],
				settings: {},
				agentAccess: a.currentAgents,
				hasDepartments: a.departments && Object.keys(a.departments).length,
				type: a.type,
				propertyType: a.propertyType
			})
		},
		loadSettings: function (a) {
			this.set("settings.domain", a.dmn);
			this.set("settings.apiKey", a.apik);
			this.set("settings.forwardingEmail", a.efwd + GLOBAL_TICKETS_DOMAIN);
			this.set("agentAccess",
				a.a);
			this.loadDepartments(a.dpts);
			this.isSite ? (delete a.wdgts.page, this.set("settings.secureJSAPI", a.secureJSAPI)) : (this.set("settings.categoryId", a.cat), this.set("settings.subCategoryId", a.scat));
			this.loadWidgets(a.wdgts);
			this.loadCustomization(a);
			this.loadEmailSettings(a.transcript)
		},
		loadAgents: function (a) {
			var c = this, d = [];
			this.set("agentList", []);
			a && (a.forEach(function (a) {
				var e = c.agentAccess.findProperty("aid", a.aid);
				e && !e.ha && d.pushObject(Ember.Object.create({
					id: a.aid,
					name: decodeStr(a.n),
					role: e.rl,
					enabled: e.en ? "enabled" : "disabled",
					isEnabled: e.en,
					isDisabled: !e.en,
					isAdmin: "admin" === e.rl,
					isAgent: "agent" === e.rl,
					isCurrentAgent: a.aid === Tawk.userController.user.id,
					country: a.lk ? "flag flag-" + a.lk.cc.toLowerCase() : "",
					canBeDeleted: a.aid !== Tawk.userController.user.id && c.isAdmin,
					toBeDeleted: !1
				}))
			}), this.set("agentList", sortList(d, "name")))
		},
		loadInvitedAgents: function (a) {
			var c = [], d = this;
			a.forEach(function (a) {
				c.pushObject(Ember.Object.create({
					id: a._id,
					email: a.e,
					tawkId: a.twid,
					isInvitation: !0,
					isExisting: a.aid,
					role: a.rl,
					isAdmin: "admin" === a.rl,
					isAgent: "agent" === a.rl,
					isEnabled: !0,
					canBeDeleted: d.isAdmin,
					toBeDeleted: !1
				}))
			});
			this.set("invitedList", c)
		},
		loadDepartments: function (a) {
			var c = [], d = this;
			this.set("departmentList", []);
			a && (Object.keys(a).forEach(function (b) {
				b = a[b];
				var e = [];
				b.dltd || (b.a.forEach(function (a) {
					var b = d.agentAccess.findProperty("aid", a);
					b && b.en && e.pushObject(Ember.Object.create({aid: a, name: Tawk.agentsController.getName(a)}))
				}), c.pushObject(Ember.Object.create({
					id: b.did,
					name: decodeStr(b.n),
					description: decodeStr(b.dsc),
					enabled: b.en ? "enabled" : "disabled",
					isEnabled: b.en,
					agents: b.a || [],
					assignedAgents: e,
					agentNames: e.length ? "<p>" + e.getEach("name").join("</p><p>") + "</p>" : null,
					canBeDeleted: d.isAdmin,
					totalAssignedText: languageParser.translate("admin", "member_total", {num: e.length})
				})))
			}), this.set("departmentList", sortList(c, "name")), this.set("hasDepartments", c.length))
		},
		updateAgentAccess: function (a, c, d) {
			a = this.agentAccess.findProperty("aid", a);
			a.rl = c;
			a.en = d
		},
		loadWidgets: function (a) {
			var c = this, d = [];
			Object.keys(a).forEach(function (b) {
				if (a[b].vis ||
					"page" === b) b = extractWidgetSettings(a[b], b), b.siteId = c.id, c.isAdmin && (b.canBeDeleted = !0), d.pushObject(Tawk.WidgetModel.create(b))
			});
			this.set("widgetList", d)
		},
		getPageWidget: function () {
			return this.isSite || !this.widgetList.length ? null : this.widgetList[0]
		},
		loadCustomization: function (a) {
			var c, d, b = this;
			this.isSite || (a.scat ? (d = languageParser.translate("site_subcategories_" + a.cat, a.scat), this.set("categoryName", d), this.set("subCategoryName", d)) : a.cat && this.set("categoryName", languageParser.translate("site_categories",
				a.cat)), c = {
				description: decodeStr(a.dsc),
				logo: a.lg ? GLOBAL_AWS_LG_URL + "/" + a.lg + "?=" + randomString(5, !0) : null,
				profileImage: Tawk.webProperties.personalPage.alias.aliasImage,
				header: a.bnnr ? GLOBAL_AWS_BN_URL + "/" + a.bnnr + "?=" + randomString(5, !0) : null,
				slogan: a.slg ? decodeStr(a.slg) : "",
				summary: a.smry ? decodeStr(a.smry) : "",
				tagList: a.tags,
				tags: a.tags ? decodeStr(a.tags.join(", ")) : "",
				links: []
			}, a.loc && (c.location = Tawk.CopyableModel.create({
				country: a.loc.cc,
				city: a.loc.cy ? decodeStr(a.loc.cy) : null,
				state: a.loc.sta ? decodeStr(a.loc.sta) :
					null,
				locationId: a.loc.locid,
				locationInfo: null
			}), a.loc.cy && (d = decodeStr(a.loc.cy) + (a.loc.sta ? "," + decodeStr(a.loc.sta) : ""), c.location.set("locationInfo", d)), c.location.set("countryName", getCountryByCode(a.loc.cc) || ""), b.set("countryCode", a.loc.cc)), a.scls && a.scls.forEach(function (a) {
				c[a.t] || (c[a.t] = []);
				linkData = {value: a.lnk, type: a.t, index: b.id + a.t + Date.now()};
				c[a.t].pushObject(linkData);
				c.links.pushObject(linkData)
			}), a.lnks && (c.otherLinks = [], a.lnks.forEach(function (a) {
				linkData = {
					value: a.lnk, type: "other",
					index: b.id + "other" + Date.now()
				};
				c.otherLinks.pushObject(linkData);
				c.links.pushObject(linkData)
			})), this.set("customization", Tawk.CustomizationModel.create(c)))
		},
		loadEmailSettings: function (a) {
			var c = {};
			c.all = Tawk.CopyableModel.create({selected: !1});
			c.chat = Tawk.CopyableModel.create({selected: !1});
			c.offline = Tawk.CopyableModel.create({selected: !1});
			a ? a.all ? (c.all.setProperties(a.all), c.all.set("selected", !0), c.chat.set("selected", !0), c.offline.set("selected", !0)) : (a.chat && (c.chat.setProperties(a.chat), c.chat.set("selected",
				!0)), a.offline && (c.offline.setProperties(a.offline), c.offline.set("selected", !0))) : c.offline.setProperties({
				selected: !0,
				group: "all"
			});
			c.enabled = c.all.selected || c.chat.selected || c.offline.selected ? !0 : !1;
			this.set("emailSettings", Tawk.CopyableModel.create(c))
		},
		siteLink: function () {
			return GLOBAL_TAWK_URL + "/" + decodeStr(this.tawkId)
		}.property("tawkId")
	});
	Tawk.CopyableMixin = Ember.Mixin.create({
		copy: function () {
			var a = this, c = new this.constructor;
			Object.keys(this).forEach(function (d) {
				"_" !== d.charAt("0") && "toString" !==
				d && (a.get(d) instanceof Array ? c.set(d, a.get(d).map(function (a) {
					return Ember.copy(a, !0)
				})) : a.get(d) instanceof Ember.Object ? c.set(d, a.get(d).copy()) : c.set(d, a.get(d)))
			});
			return c
		}
	});
	Tawk.CopyableModel = Ember.Object.extend(Ember.Copyable, Tawk.CopyableMixin);
	Tawk.BubbleModel = Ember.Object.extend(Ember.Copyable, Tawk.CopyableMixin, {
		isDefaultBubble: function () {
			return this.bubbleName && "default" !== this.bubbleName ? !1 : !0
		}.property("bubbleName"), uploadedBubbleImage: function () {
			return "upload" !== this.bubbleType ? "" :
				GLOBAL_FILE_STORAGE_URL + "/" + this.bubbleName
		}.property("bubbleName"), galleryBubbleImage: function () {
			return "gallery" !== this.bubbleType || this.get("isDefaultBubble") ? "" : GLOBAL_STATIC_URL + "/images/bubbles/" + this.bubbleName.replace("bubble-", "") + ".png"
		}.property("bubbleName")
	});
	Tawk.FormField = Ember.Object.extend(Ember.Copyable, Tawk.CopyableMixin, {
		selections: null, init: function () {
			var a = [];
			this.set("id", "id" + randomString(10, !0));
			this.set("name", "name" + randomString(10, !0));
			this.tempSelections && (this.tempSelections.forEach(function (c) {
				a.pushObject({text: c})
			}),
				this.set("selections", a))
		}, canAddSelection: function () {
			return 20 >= this.selections.length
		}.property("selections.length"), addSelection: function () {
			this.selections.pushObject({text: "Lorem ipsum"})
		}
	});
	Tawk.FormFields = Ember.Object.extend(Ember.Copyable, Tawk.CopyableMixin, {
		fields: null, parsedFields: null, init: function () {
			var a = this, c = [];
			Array.isArray(this.fields) && this.fields.forEach(function (d) {
				var b = {
					label: decodeStr(d.label),
					isRequired: !!d.isRequired,
					type: d.type,
					isName: "name" === d.type,
					isEmail: "email" === d.type,
					isMessage: "message" === d.type,
					isInputText: "inputText" === d.type,
					isTextArea: "textArea" === d.type,
					isMultiChoice: "choice" === d.type,
					isOptions: "option" === d.type,
					isPhone: "phone" === d.type,
					isDepartment: "department" === d.type,
					canBeDeleted: !0,
					allowRequiredToggle: !0
				};
				if (b.isMultiChoice || b.isOptions) b.tempSelections = d.selections;
				"offline" === a.formType && (b.isName || b.isEmail || b.isMessage) && (b.canBeDeleted = !1, b.allowRequiredToggle = !1);
				c.pushObject(Tawk.FormField.create(b))
			});
			this.set("parsedFields", c)
		}, canAddFields: function () {
			return 10 >
				this.parsedFields.length
		}.property("parsedFields.length"), isNameAvailable: function () {
			return !this.parsedFields.findProperty("isName", !0)
		}.property("parsedFields.@each.isName"), isEmailAvailable: function () {
			return !this.parsedFields.findProperty("isEmail", !0)
		}.property("parsedFields.@each.isEmail"), isDepartmentAvailable: function () {
			return !this.parsedFields.findProperty("isDepartment", !0)
		}.property("parsedFields.@each.isDepartment"), isPhoneNumberAvailable: function () {
			return !this.parsedFields.findProperty("isPhone",
				!0)
		}.property("parsedFields.@each.isPhone"), addPhoneNumber: function (a) {
			this.parsedFields.pushObject(Tawk.FormField.create({
				label: languageParser.translate("widget_preview_translation", a + "-phone"),
				isRequired: !1,
				type: "phone",
				isPhone: !0,
				canBeDeleted: !0,
				allowRequiredToggle: !0
			}))
		}, addInputTextQuestion: function (a) {
			this.parsedFields.pushObject(Tawk.FormField.create({
				label: languageParser.translate("widget_preview_translation", a + "-question"),
				isRequired: !1,
				type: "inputText",
				isInputText: !0,
				canBeDeleted: !0,
				allowRequiredToggle: !0
			}))
		},
		addTextAreaQuestion: function (a) {
			this.parsedFields.pushObject(Tawk.FormField.create({
				label: languageParser.translate("widget_preview_translation", a + "-question"),
				isRequired: !1,
				type: "textArea",
				isTextArea: !0,
				canBeDeleted: !0,
				allowRequiredToggle: !0
			}))
		}, addDepartment: function (a) {
			this.parsedFields.pushObject(Tawk.FormField.create({
				label: languageParser.translate("widget_preview_translation", a + "-department"),
				isRequired: !1,
				type: "department",
				isDepartment: !0,
				canBeDeleted: !0,
				allowRequiredToggle: !0
			}))
		}, addName: function (a) {
			this.parsedFields.pushObject(Tawk.FormField.create({
				label: languageParser.translate("widget_preview_translation",
					a + "-name"), isRequired: !1, type: "name", isName: !0, canBeDeleted: !0, allowRequiredToggle: !0
			}))
		}, addEmail: function (a) {
			this.parsedFields.pushObject(Tawk.FormField.create({
				label: languageParser.translate("widget_preview_translation", a + "-email"),
				isRequired: !1,
				type: "email",
				isEmail: !0,
				canBeDeleted: !0,
				allowRequiredToggle: !0
			}))
		}, addMultiChoice: function (a) {
			this.parsedFields.pushObject(Tawk.FormField.create({
				label: languageParser.translate("widget_preview_translation", a + "-question"),
				isRequired: !1,
				type: "choice",
				isMultiChoice: !0,
				canBeDeleted: !0,
				allowRequiredToggle: !0,
				selections: [{text: "Lorem ipsum"}, {text: "Lorem ipsum"}]
			}))
		}, addOptions: function (a) {
			this.parsedFields.pushObject(Tawk.FormField.create({
				label: languageParser.translate("widget_preview_translation", a + "-question"),
				isRequired: !1,
				type: "option",
				isOptions: !0,
				canBeDeleted: !0,
				allowRequiredToggle: !0,
				selections: [{text: "Lorem ipsum"}, {text: "Lorem ipsum"}]
			}))
		}, addSelection: function (a) {
			(a = this.parsedFields.findProperty("id", a)) && a.addSelection()
		}, removeSelection: function (a,
		                              c) {
			var d = this.parsedFields.findProperty("id", a);
			d && (d.selections && d.selections.length && !(0 > c || c > d.selections.length)) && d.selections.removeAt(c)
		}, removeField: function (a) {
			a = this.parsedFields.findProperty("id", a);
			!a || "offline" === a.formType && (a.isName || a.isEmail || formType.isMessage) || this.parsedFields.removeObject(a)
		}, moveField: function (a, c) {
			var d, b = this.parsedFields.findProperty("id", a);
			d = this.parsedFields.findProperty("id", c);
			b && (this.parsedFields.removeObject(b), d = d ? this.parsedFields.indexOf(d) : this.parsedFields.length,
				this.parsedFields.insertAt(d, b))
		}, toggleRequired: function (a) {
			a = this.parsedFields.findProperty("id", a);
			"offline" === a.formType && (a.isName || a.isEmail || formType.isMessage) || (a.isRequired ? a.set("isRequired", !1) : a.set("isRequired", !0))
		}, fieldHasEmptySelections: function (a) {
			return 0 === this.parsedFields.findProperty("id", a).selections.length
		}
	});
	Tawk.WidgetModel = Ember.Object.extend(Ember.Copyable, Tawk.CopyableMixin, {
		widgetCode: function () {
			return this.isInline ? inlineWidgetCode.replace("__SITE_ID__", this.siteId).replace("__WIDGET_ID__",
				this.id) : embedWidgetCode.replace(/__EMBED_ID__/gm, "tawk_" + this.siteId).replace("__SITE_ID__", this.siteId).replace("__WIDGET_ID__", this.id)
		}.property("id"), whiteList: function () {
			var a = [], c = this;
			Object.keys(this.domainWhiteList).length && this.domainWhiteList.stdom.forEach(function (d) {
				a.pushObject({value: d, id: c.id + randomString("5", !0)})
			});
			return Tawk.CopyableModel.create({domains: a})
		}.property("domainWhiteList")
	});
	Tawk.BanEntryModel = Ember.Object.extend({
		id: null,
		type: null,
		propertyId: null,
		property: null,
		entry: null,
		displayText: null,
		country: null,
		city: null,
		reason: null,
		bannedBy: null,
		createdOn: null,
		toBeDeleted: !1,
		transcript: null,
		init: function () {
			null === this.transcript && this.set("transcript", Ember.Object.create({
				isLoaded: !1,
				isError: !1,
				content: null
			}))
		},
		isVisitor: function () {
			return "id" === this.type
		}.property("type"),
		propertyName: function () {
			return this.property ? this.property.get("propertyName") : null
		}.property("property"),
		isAdmin: function () {
			return this.property ? this.property.get("isAdmin") : !1
		}.property("property"),
		clone: function () {
			return Tawk.BanEntryModel.create({
				id: this.get("id"),
				type: this.get("type"),
				propertyId: this.get("propertyId"),
				property: this.get("property"),
				entry: this.get("entry"),
				displayText: this.get("displayText"),
				country: this.get("country"),
				city: this.get("city"),
				reason: this.get("reason"),
				bannedBy: this.get("bannedBy"),
				createdOn: this.get("createdOn"),
				transcript: this.get("transcript")
			})
		}
	});
	Tawk.createBanEntryFromJSON = function (a) {
		var c = Tawk.webProperties.getProperty(a.pgid), d = "trigger" === a.bannedBy ?
			languageParser.translate("ban_list", "trigger_display_name") : Tawk.agentsController.getName(a.bannedBy);
		return c ? Tawk.BanEntryModel.create({
			id: a.opid,
			type: a.valueType,
			propertyId: a.pgid,
			property: c,
			entry: a.value,
			displayText: a.valueDisplay,
			reason: decodeStr(a.reason),
			bannedBy: d,
			createdOn: moment(a.createdOn).format("DD/MMM/YYYY"),
			co: a.createdOn,
			country: a.lastKnown && a.lastKnown.cc ? "flag flag-" + a.lastKnown.cc.toLowerCase() : null,
			city: a.lastKnown ? a.lastKnown.cy : null
		}) : null
	};
	Tawk.CustomizationModel = Ember.Object.extend(Ember.Copyable,
		Tawk.CopyableMixin, {
			description: null,
			summary: null,
			logo: null,
			profileImage: null,
			header: null,
			logoHash: null,
			bannerHash: null,
			profileImageHash: null,
			tags: null,
			tagList: null,
			facebook: null,
			flickr: null,
			instagram: null,
			twitter: null,
			youtube: null,
			vimeo: null,
			linkedin: null,
			gplus: null,
			otherLinks: null,
			widgetSetting: null,
			location: null,
			positionTitle: null,
			countryName: null,
			init: function () {
				this.location || this.set("location", Tawk.CopyableModel.create({
					country: null,
					city: null,
					state: null,
					locationId: null,
					locationInfo: null,
					countryName: null
				}));
				this.tagList || this.set("tagList", []);
				this.facebook || this.set("facebook", []);
				this.flickr || this.set("flickr", []);
				this.instagram || this.set("instagram", []);
				this.twitter || this.set("twitter", []);
				this.youtube || this.set("youtube", []);
				this.vimeo || this.set("vimeo", []);
				this.linkedin || this.set("linkedin", []);
				this.gplus || this.set("gplus", []);
				this.otherLinks || this.set("otherLinks", [])
			},
			getAllLinksValue: function () {
				var a = [], a = a.concat(this.facebook.getEach("value")), a = a.concat(this.flickr.getEach("value")),
					a = a.concat(this.instagram.getEach("value")),
					a = a.concat(this.twitter.getEach("value")), a = a.concat(this.youtube.getEach("value")),
					a = a.concat(this.vimeo.getEach("value")), a = a.concat(this.linkedin.getEach("value")),
					a = a.concat(this.gplus.getEach("value"));
				return a = a.concat(this.otherLinks.getEach("value"))
			},
			getAllLinks: function () {
				var a = [], a = a.concat(this.facebook), a = a.concat(this.flickr), a = a.concat(this.instagram),
					a = a.concat(this.twitter), a = a.concat(this.youtube), a = a.concat(this.vimeo),
					a = a.concat(this.linkedin), a = a.concat(this.gplus);
				return a = a.concat(this.otherLinks)
			},
			logoBackgroundStyle: function () {
				return this.logo ? "background-image: url('" + this.logo + "')" : ""
			}.property("logo"),
			headerBackgroundStyle: function () {
				return this.header ? "background-image: url('" + this.header + "')" : ""
			}.property("header")
		});
	Tawk.PagingListModel = Ember.Object.extend({
		currentData: null,
		perpage: null,
		totalItems: null,
		currentHead: null,
		from: null,
		to: null,
		pendingData: null,
		init: function () {
			this.set("currentData", []);
			this.set("pendingData", []);
			this.set("currentHead", 0)
		},
		setList: function (a) {
			this.currentData.pushObjects(a);
			this.to > this.totalItems && this.set("to", this.totalItems)
		},
		startList: function () {
			this.set("from", 1);
			this.set("to", this.perpage);
			this.set("currentHead", 0);
			this.currentData.clear();
			this.pendingData.clear()
		},
		nextList: function () {
			this.set("from", this.from + this.perpage);
			this.to + this.perpage > this.totalItems ? this.set("to", this.totalItems) : this.set("to", this.to + this.perpage);
			this.set("currentHead", this.currentHead + this.perpage)
		},
		previousList: function () {
			0 < this.from - this.perpage ? (this.set("from", this.from - this.perpage),
				this.set("to", this.from + this.perpage - 1)) : (this.set("from", 1), this.set("to", this.perpage));
			this.set("currentHead", this.currentHead - this.perpage)
		},
		hasNext: function () {
			return this.currentHead + this.perpage < this.totalItems
		}.property("currentHead", "totalItems", "currentData.length"),
		hasPrevious: function () {
			return 0 < this.currentHead
		}.property("currentHead", "totalItems", "currentData.length"),
		setTotal: function (a) {
			this.set("totalItems", a)
		},
		isLastPage: function () {
			return 0 < this.currentData.length && this.to >= this.totalItems
		},
		reset: function () {
			this.currentData.clear();
			this.set("currentHead", 0);
			this.set("from", 0);
			this.set("to", 0)
		},
		getItem: function (a) {
			return this.currentData.findProperty("_id", a) || this.currentData.findProperty("id", a)
		},
		removeItem: function (a) {
			this.currentData.removeObject(a);
			this.set("totalItems", this.totalItems - 1);
			this.refreshPaging()
		},
		refreshPaging: function () {
			this.to > this.totalItems && this.set("to", this.totalItems)
		},
		addPendingData: function (a) {
			this.pendingData.pushObject(a)
		},
		clearPendingData: function () {
			var a =
				this;
			this.pendingData.forEach(function (c) {
				a.currentData.insertAt(0, c)
			});
			this.pendingData.clear()
		}
	});
	Tawk.BaseController = Ember.Mixin.create({
		range: null, perpage: null, currentPage: null, nextDisabled: null, previousDisabled: null, init: function () {
			this.set("currentPage", 0);
			this.set("perpage", 10);
			this.set("range", {startRange: 1, endRange: this.perpage});
			this.set("previousDisabled", !0);
			this.set("nextDisabled", !1)
		}, updateRange: function () {
			var a, c = {};
			this.get("list").length ? (a = Math.floor(this.get("list").length / this.perpage),
				a <= this.currentPage ? (a < this.currentPage && this.set("currentPage", a), c.startRange = 0 === a ? 1 : this.get("list").length - this.perpage + 1, c.endRange = this.get("list").length) : 0 === this.currentPage ? (c.startRange = this.perpage * this.currentPage + 1, c.endRange = this.perpage) : (c.startRange = this.perpage * (this.currentPage - 1) + 1, c.endRange = this.perpage * this.currentPage)) : (c.startRange = 0, c.endRange = 0);
			this.set("range", c);
			this.allowPageMove()
		}.observes("perpage", "list.length"), allowPageMove: function () {
			1 >= this.range.startRange ?
				this.set("previousDisabled", !0) : this.set("previousDisabled", !1);
			this.range.endRange >= this.get("list").length ? this.set("nextDisabled", !0) : this.set("nextDisabled", !1)
		}, changePage: function (a) {
			var c = {};
			this.set("currentPage", this.currentPage + a);
			a = (this.currentPage + 1) * this.perpage;
			this.get("list").length ? c.startRange = this.currentPage * this.perpage + 1 : c.startRange = 0;
			a >= this.get("list").length ? c.endRange = this.get("list").length : c.endRange = a;
			this.set("range", c);
			this.allowPageMove()
		}, toggleDelete: function (a) {
			(a =
				this.get("list").findProperty("id", a)) && (a.toBeDeleted ? a.set("toBeDeleted", !1) : a.set("toBeDeleted", !0))
		}, hasItemsToDelete: function () {
			return this.get("list").filterProperty("toBeDeleted", !0).get("length")
		}.property("list.@each.toBeDeleted"), actions: {
			nextPage: function () {
				this.changePage(1)
			}, previousPage: function () {
				this.changePage(-1)
			}
		}
	});
	Tawk.IntercomController = Ember.Controller.extend({
		stack: [], isBooted: !1, bootLoadedCheck: null, boot: function (a) {
		}, execute: function (a, c) {
		}, addToStack: function (a, c) {
		}, clearStack: function () {
		},
		update: function (a) {
		}, trackEvent: function (a) {
		}
	});
	Tawk.intercomController = Tawk.IntercomController.create();
	var NotificationController = function () {
		this.totalUnread = 0;
		this.originalTitle = document.title;
		this.titleInterval = null;
		this.desktopNotifications = [];
		this.newChatRequests = {};
		this.isLegacyNotification = "webkitNotifications" in window && !desktopConnector.enabled();
		this.audioPlayer = new AudioPlayer
	};
	NotificationController.prototype.notifyNewChatRequest = function () {
		this.audioPlayer.reset("icr");
		this.audioPlayer.play("icr")
	};
	NotificationController.prototype.stopNewChatRequest = function () {
		this.audioPlayer.stop("icr")
	};
	NotificationController.prototype.notifyNewMessage = function (a, c, d) {
		this.audioPlayer.play("im");
		a && (c && d) && this.showMessageNotification(a, c, d)
	};
	NotificationController.prototype.notifyNewVisitor = function () {
		this.audioPlayer.play("iv")
	};
	NotificationController.prototype.notifyAppDisconnect = function () {
		this.audioPlayer.play("dc")
	};
	NotificationController.prototype.notifyAgentChatMessage = function (a, c, d) {
		this.audioPlayer.play("acm");
		a && (c && d) && this.showMessageNotification(a, c, d)
	};
	NotificationController.prototype.notifyIncomingCall = function () {
		this.audioPlayer.reset("webrtc-call");
		this.audioPlayer.play("webrtc-call")
	};
	NotificationController.prototype.stopIncomingCall = function () {
		this.audioPlayer.stop("webrtc-call")
	};
	NotificationController.prototype.playAudio = function (a, c) {
		a && "none" !== a && (this.audioPlayer.update(a, {n: a, vl: c}), this.audioPlayer.play(a))
	};
	NotificationController.prototype.isWindowFocused = function () {
		return null === document.querySelector(":focus") ?
			!1 : !0
	};
	NotificationController.prototype.hasDesktopNotificationFeature = function () {
		return window.webkitNotifications || window.Notification ? !0 : !1
	};
	NotificationController.prototype.isDesktopNotificationEnabled = function () {
		return this.checkNotificationPermission() && "on" === main.storageSettings.notification
	};
	NotificationController.prototype.checkNotificationPermission = function () {
		return this.isLegacyNotification ? 0 === window.webkitNotifications.checkPermission() : "granted" === window.Notification.permission
	};
	NotificationController.prototype.checkNotificationPermissionIsDefault =
		function () {
			return this.isLegacyNotification ? 1 === window.webkitNotifications.checkPermission() : "default" === window.Notification.permission
		};
	NotificationController.prototype.enableDesktopNotification = function (a) {
		function c() {
			d.checkNotificationPermission() ? (Tawk.userController.set("desktopNotificationEnabled", !0), main.updateStorageSettings("notification", "on")) : (Tawk.userController.set("isNotificationOptionHidden", !0), Tawk.userController.set("desktopNotificationEnabled", !1), main.updateStorageSettings("notification",
				"off"));
			a && a(d.checkNotificationPermission())
		}

		var d = this;
		if (window.webkitNotifications || window.Notification) this.checkNotificationPermission() ? main.updateStorageSettings("notification", "on") : this.isLegacyNotification ? window.webkitNotifications.requestPermission(c) : window.Notification.requestPermission(c)
	};
	NotificationController.prototype.disableDesktopNotification = function () {
		main.updateStorageSettings("notification", "off")
	};
	NotificationController.prototype.createDesktopNotification = function (a, c, d) {
		var b,
			e, f = this;
		main.storageSettings && (main.storageSettings.notification && "off" !== main.storageSettings.notification) && (e = GLOBAL_STATIC_URL + "/images/" + (desktopConnector.enabled() ? "tawky-200w.png" : "dashboard-tawky.png"), a = decodeStr(a), c = decodeStr(c), this.isLegacyNotification ? (b = window.webkitNotifications.createNotification(e, a, c), b.show()) : b = new window.Notification(a, {
			body: c,
			icon: e
		}), this.desktopNotifications.push(b), b.onclick = function () {
			window.focus();
			desktopConnector.send("maximizeWindow");
			f.removeDesktopNotification(b);
			Tawk.liveMonitoringController.openChat(d);
			Tawk.agentChatController.openChat(d)
		}, setTimeout(function () {
			f.removeDesktopNotification(b)
		}, 1E4))
	};
	NotificationController.prototype.removeDesktopNotification = function (a) {
		-1 !== this.desktopNotifications.indexOf(a) && (this.desktopNotifications.removeObject(a), this.isLegacyNotification ? a.cancel() : a.close())
	};
	NotificationController.prototype.showMessageNotification = function (a, c, d) {
		var b = this, e = function () {
			if (0 === b.totalUnread && !b.isWindowFocused()) return b.resetNotification();
			b.isWindowFocused() ? b.resetNotification() : (Tawk.routing.titlePath.chatNotification = languageParser.translate("header", "unread_messages", {number: b.totalUnread}), Tawk.routing.setTitle())
		};
		if (!this.isWindowFocused()) {
			clearInterval(this.titleInterval);
			this.totalUnread++;
			try {
				this.createDesktopNotification(a, c, d)
			} catch (f) {
				this.disableDesktopNotification()
			}
			e();
			this.titleInterval = setInterval(e, 1E3)
		}
	};
	NotificationController.prototype.resetNotification = function () {
		var a = this;
		clearInterval(this.titleInterval);
		Tawk.routing.titlePath.chatNotification = null;
		Tawk.routing.setTitle();
		this.totalUnread = 0;
		this.desktopNotifications.forEach(function (c) {
			a.removeDesktopNotification(c)
		})
	};
	NotificationController.prototype.updateTotalForChatServed = function () {
		this.isWindowFocused() ? this.resetNotification() : 0 === this.totalUnread ? this.resetNotification() : this.totalUnread -= 1
	};
	NotificationController.prototype.notifyMonitoringTimeout = function () {
		var a;
		!this.isWindowFocused() && (main.storageSettings && main.storageSettings.notification &&
			"off" !== main.storageSettings.notification) && (a = GLOBAL_STATIC_URL + "/images/" + (desktopConnector.enabled() ? "tawky-200w.png" : "dashboard-tawky.png"), title = languageParser.translate("monitoring", "timeout_title"), message = languageParser.translate("monitoring", "timeout_message"), this.isLegacyNotification ? (a = window.webkitNotifications.createNotification(a, title, message), a.show()) : a = new window.Notification(title, {
			body: message,
			icon: a
		}), this.desktopNotifications.push(a), a.onclick = function () {
			window.focus();
			desktopConnector.send("maximizeWindow")
		})
	};
	NotificationController.prototype.notifyTicketEvent = function (a, c) {
		if (this.isDesktopNotificationEnabled()) {
			icon = GLOBAL_STATIC_URL + "/images/" + (desktopConnector.enabled() ? "tawky-200w.png" : "dashboard-tawky.png");
			if (c) title = "New Ticket Created"; else {
				if (!a.event) return;
				title = a.event.data && a.event.data.private ? a.event.crtrN + " posted a note" : a.event.crtrN + " posted a reply"
			}
			message = "#" + a.hId + " : " + a.subj;
			this.isLegacyNotification ? (notification = window.webkitNotifications.createNotification(icon, title, message),
				notification.show()) : notification = new window.Notification(title, {body: message, icon: icon});
			this.desktopNotifications.push(notification);
			notification.onclick = function () {
				window.focus();
				Tawk.conversationsController.openTicketDirect(a.pgid, c ? a._id : a.tId)
			}
		}
	};
	Tawk.LASchedulerController = Ember.Controller.extend({
		propertiesSchedule: null, checkInterval: null, isGlobalEnabled: null, init: function () {
			this.set("propertiesSchedule", [])
		}, setupProperties: function (a) {
			var c = [], d = main.storageSettings.laScheduler || {};
			if (Tawk.userController.user.isHiredAgent) {
				for (var b =
					0; b < a.length; b++) {
					var e, f = a[b], g = {};
					e = moment().diff(f.settings.expiry);
					e = Ember.Object.create({
						timezone: f.settings.settings.tz,
						isFulltime: 168 === f.settings.entitlements.hours,
						hasExpired: !f.settings.expiry || 0 < e,
						noSchedule: !(f.settings.settings.tz || 168 === f.settings.entitlements.hours),
						property: f.property,
						toggleName: f.property.id + "t",
						forceDisable: !!this.isGlobalEnabled,
						autoSchedule: d[f.property.id] ? !1 : !0,
						forceOn: f.property.isStatusEnabled,
						isEnabled: f.settings.settings.enabled,
						hoursPurchased: f.settings.entitlements.hours
					});
					f.settings.settings.schedule && f.settings.settings.schedule.forEach(function (a) {
						var b, c, d, e;
						g[a.day] || (g[a.day] = []);
						0 === a.start ? c = b = 0 : (b = moment.duration(a.start, "minutes").hours(), c = moment.duration(a.start, "minutes").minutes());
						1440 === a.end ? (d = 24, e = 0) : (d = moment.duration(a.end, "minutes").hours(), e = moment.duration(a.end, "minutes").minutes());
						g[a.day].push({startHour: b, startMinute: c, endHour: d, endMinute: e})
					});
					e.set("schedule", g);
					c.pushObject(e)
				}
				this.propertiesSchedule.pushObjects(sortList(c, "property.propertyName"));
				null === this.isGlobalEnabled && (d && d.notifyAll ? this.set("isGlobalEnabled", "on" === d.notifyAll ? !0 : !1) : this.set("isGlobalEnabled", !0));
				this.setupScheduleTimer()
			}
		}, setupScheduleTimer: function () {
			var a = this, c = new Date,
				c = new Date(c.getFullYear(), c.getMonth(), c.getDate(), c.getHours(), c.getMinutes() - c.getMinutes() % 15 + 15, 3, 0) - c;
			Tawk.userController.user.isHiredAgent && (this.calculateSchedule(), clearTimeout(this.checkInterval), this.isGlobalEnabled && this.set("checkInterval", setTimeout(function () {
					a.setupScheduleTimer()
				},
				c)))
		}, calculateSchedule: function () {
			var a = this, c = 0, d = function () {
				c++
			};
			Tawk.userController.user.isHiredAgent && this.propertiesSchedule.forEach(function (b) {
				var e, f = moment.tz(b.timezone);
				e = f.day();
				clientCurrentHour = f.hours();
				clientCurrentMinutes = f.minutes();
				shouldAnswer = !1;
				if (!1 === a.isGlobalEnabled && b.autoSchedule) b.set("toBeAnswered", !1), b.property.isStatusEnabled && Tawk.webProperties.changePageStatus(b.property.id, !1, d.bind(a)); else if (!b.isEnabled || b.hasExpired || b.noSchedule && !b.isFulltime) b.set("toBeAnswered",
					!1), b.property.isStatusEnabled ? Tawk.webProperties.changePageStatus(b.property.id, !1, d.bind(a)) : c++; else {
					if (b.autoSchedule) {
						if (0 === Object.keys(b.schedule).length && b.isFulltime) {
							b.set("toBeAnswered", !0);
							b.property.isStatusEnabled ? c++ : Tawk.webProperties.changePageStatus(b.property.id, !0, d.bind(a));
							return
						}
						(e = b.schedule[e]) && e.forEach(function (a) {
							var b = 60 * clientCurrentHour + clientCurrentMinutes, c = 60 * a.endHour + a.endMinute;
							b >= 60 * a.startHour + a.startMinute && b < c && (shouldAnswer = !0)
						})
					} else shouldAnswer = b.forceOn;
					shouldAnswer && !b.property.isStatusEnabled ? (b.set("toBeAnswered", shouldAnswer), Tawk.webProperties.changePageStatus(b.property.id, shouldAnswer, d.bind(a))) : !shouldAnswer && b.property.isStatusEnabled ? Tawk.leftPanelController.agentHasOngoingChatsForProperty(b.property.id) ? checkAndSetConfirmView(!1, function (c) {
							c && (b.set("toBeAnswered", shouldAnswer), Tawk.webProperties.changePageStatus(b.property.id, shouldAnswer, d.bind(a)))
						}, "It's time to stop answering chats for " + b.property.propertyName + ". However you have ongoing chats for this property. Do you want to proceed to turn off this property? If you turn it off, you will be pushed out of the chat. If you don't want to turn off now, the scheduler will try turn it off again in the next quarter.",
						null, "Property Turn Off", "Yes, turn it off") : (b.set("toBeAnswered", shouldAnswer), Tawk.webProperties.changePageStatus(b.property.id, shouldAnswer, d.bind(a))) : (b.set("toBeAnswered", shouldAnswer), c++)
				}
			})
		}, toggleGlobalAnswerStatus: function (a) {
			if (Tawk.userController.user.isHiredAgent) {
				var c = main.storageSettings.laScheduler || {};
				this.set("isGlobalEnabled", a);
				c.notifyAll = a ? "on" : "off";
				main.updateStorageSettings("laScheduler", c);
				this.setupScheduleTimer()
			}
		}, changePropertyAnswerStatus: function (a, c) {
			var d = this.propertiesSchedule.findProperty("property.id",
				c), b = main.storageSettings.laScheduler || {};
			Tawk.userController.user.isHiredAgent && d && (a ? ("auto" === a ? (d.setProperties({
				autoSchedule: !0,
				forceOn: !1
			}), delete b[c]) : ("yes" === a ? d.set("forceOn", !0) : "no" === a && d.set("forceOn", !1), b[c] = "no-auto"), main.updateStorageSettings("laScheduler", b), this.setupScheduleTimer()) : d.setProperties({
				autoSchedule: !1,
				forceOn: !!d.toBeAnswered
			}))
		}, updateSchedule: function (a) {
			var c = {}, d = this.propertiesSchedule.findProperty("property.id", a.propertyId);
			Tawk.userController.user.isHiredAgent &&
			d && (d.setProperties({
				timezone: a.settings.tz,
				isFulltime: 168 === a.entitlements.hours,
				noSchedule: !(a.settings.tz || 168 === a.entitlements.hours),
				isEnabled: a.settings.enabled,
				hoursPurchased: a.entitlements.hours
			}), a.settings.schedule && a.settings.schedule.forEach(function (a) {
				var d, f, g, h;
				c[a.day] || (c[a.day] = []);
				0 === a.start ? f = d = 0 : (d = moment.duration(a.start, "minutes").hours(), f = moment.duration(a.start, "minutes").minutes());
				1440 === a.end ? (g = 24, h = 0) : (g = moment.duration(a.end, "minutes").hours(), h = moment.duration(a.end,
					"minutes").minutes());
				c[a.day].push({startHour: d, startMinute: f, endHour: g, endMinute: h})
			}), d.set("schedule", c), this.setupScheduleTimer())
		}, addProperty: function (a, c) {
			var d, b = {};
			d = moment().diff(c.expiry);
			Tawk.userController.user.isHiredAgent && (d = Ember.Object.create({
				timezone: c.settings.tz,
				isFulltime: 168 === c.entitlements.hours,
				hasExpired: !c.expiry || 0 < d,
				noSchedule: !(c.settings.tz || 168 === c.entitlements.hours),
				property: a,
				toggleName: a.id + "t",
				forceDisable: !!this.isGlobalEnabled,
				autoSchedule: !0,
				forceOn: a.isStatusEnabled,
				isEnabled: c.settings.enabled,
				hoursPurchased: c.entitlements.hours
			}), c.settings.schedule && c.settings.schedule.forEach(function (a) {
				var c, d, h, k;
				b[a.day] || (b[a.day] = []);
				0 === a.start ? d = c = 0 : (c = moment.duration(a.start, "minutes").hours(), d = moment.duration(a.start, "minutes").minutes());
				1440 === a.end ? (h = 24, k = 0) : (h = moment.duration(a.end, "minutes").hours(), k = moment.duration(a.end, "minutes").minutes());
				b[a.day].push({startHour: c, startMinute: d, endHour: h, endMinute: k})
			}), d.set("schedule", b), this.propertiesSchedule.pushObject(d),
				this.setupScheduleTimer())
		}
	});
	Tawk.laScheduler = Tawk.LASchedulerController.create();
	Tawk.WebProperties = Ember.Controller.extend({
		personalPage: null,
		pages: null,
		sites: null,
		attachedDepartments: null,
		colorCodes: null,
		updatedData: null,
		reorderList: !1,
		loadProperties: function (a) {
			var c = this, d = [], b = [], e = [], f = [], g = Tawk.userController.user.id;
			this.set("sites", []);
			this.set("pages", []);
			this.set("colorCodes", []);
			this.set("attachedDepartments", []);
			this.set("processed", !1);
			a.forEach(function (a) {
				var k;
				a.dptst && a.dptst.length &&
				a.dptst.forEach(function (b) {
					a.dpts && a.dpts[b.did] && (a.dpts[b.did].st = b.st)
				});
				k = Ember.Object.create({
					id: a._id,
					propertyName: a.pgn,
					tawkId: a.twid,
					departments: a.dpts,
					type: a.t,
					enabled: a.en,
					currentAgents: a.a || [],
					statusVersion: a.asver,
					departmentVersion: a.dptsver || 0,
					propertyType: a.pt,
					createdInWizard: a.cw,
					createdBy: a.cb,
					propertyUrl: a.dmn,
					widgetVersion: a.wdgtv || 0,
					tabSettings: [],
					kbCategories: [],
					isKbCategoriesLoaded: !1,
					kbContent: [],
					isKbContentLoaded: !1,
					isClientProperty: !1,
					webrtcActivated: !1,
					webrtcEnabled: !1
				});
				"profile" === a.t && (k.set("profilePageLink", GLOBAL_TAWK_URL + "/" + a.twid), k.set("propertyName", Tawk.userController.user.fullName), k.set("alias", {
					aliasId: "ac355b50-c86b-11e2-9572-db036bbd95f2",
					positionTitle: a.pst,
					aliasImage: a.ai,
					displayName: Tawk.userController.user.fullName
				}), c.set("personalPage", k));
				a.a.every(function (a) {
					return a.aid === g ? (k.set("isAdmin", "admin" === a.rl), k.set("isStatusEnabled", a.pen), k.set("isClientProperty", !!a.ha), a.ha && Tawk.userController.user.set("isHiredAgent", !0), !1) : !0
				});
				a.addons &&
				(Tawk.userController.bannerClosed || Tawk.userController.closeBanner(!0), a.addons.webrtc && (0 < moment(a.addons.webrtc.expiry || 0).diff(moment()) && k.set("webrtcActivated", !0), a.addons.webrtc.settings && (k.set("webrtcEnabled", !!a.addons.webrtc.settings.enabled), k.set("webrtcVideoEnabled", a.addons.webrtc.settings.video ? a.addons.webrtc.settings.video : !0), k.set("webrtcScreenEnabled", a.addons.webrtc.settings.screen ? a.addons.webrtc.settings.screen : !0))), a.addons.liveAnswering && k.isClientProperty && f.push({
					property: k,
					settings: a.addons.liveAnswering
				}));
				"page" === k.propertyType ? e.pushObject(k) : b.pushObject(k);
				a.dpts && Object.keys(a.dpts).forEach(function (b) {
					a.dpts[b].dltd || a.dpts[b].a.contains(g) && c.attachedDepartments.push(b)
				});
				if (a.wdgts && Object.keys(a.wdgts).length) {
					var l = [];
					Object.keys(a.wdgts).forEach(function (b) {
						a.wdgts[b] ? l.push({id: b, name: a.wdgts[b]}) : l.push({id: b, name: b})
					});
					k.set("widgets", l)
				}
				c.getAlert(k.id);
				d.push(a._id)
			});
			this.sites.pushObjects(sortList(b, "propertyName"));
			this.pages.pushObjects(sortList(e,
				"propertyName"));
			this.loadTabSettings(d);
			this.set("processed", !0);
			Tawk.userController.user.isHiredAgent && Tawk.laScheduler.setupProperties(f);
			Tawk.agentsController.processAgents()
		},
		loadTabSettings: function (a) {
			var c = this;
			socketConnector.getAllPropertiesTabSettings(a, function (a, b) {
				b && b.forEach(function (a) {
					c.updateTabSettings(a)
				})
			})
		},
		loadKBCategory: function (a, c) {
			var d = this.getProperty(a);
			if (!d) return c(!0);
			d.isKbCategoriesLoaded ? c(null, d.kbCategories) : socketConnector.getKBCategories(a, function (a, e) {
				var f =
					[];
				if (a) return c(a);
				e.forEach(function (a) {
					a = Ember.Object.create({id: a.categoryId, isDeleted: a.deleted, name: a.name});
					f.pushObject(a)
				});
				d.kbCategories.clear();
				d.kbCategories.pushObjects(sortList(f, "name"));
				d.set("isKbCategoriesLoaded", !0);
				f = null;
				c(null, d.kbCategories)
			})
		},
		updateKBCategory: function (a, c) {
			var d, b = this.getProperty(a.propertyId);
			b && ((d = b.kbCategories.findProperty("id", a.categoryId)) ? c ? d.set("isDeleted", !0) : d.set("name", a.name) : (d = Ember.Object.create({
				id: a.categoryId,
				isDeleted: !1,
				name: a.name
			}),
				b.kbCategories.pushObject(d)), d = b.kbCategories.toArray(), b.kbCategories.clear(), b.kbCategories.pushObjects(sortList(d, "name")))
		},
		getKbContent: function (a, c) {
			var d = [], b = this.getProperty(a);
			if (!b) return null;
			b.isKbContentLoaded ? c(b.kbContent) : socketConnector.getKBList(a, {
				status: "published",
				size: 10
			}, function (a, f) {
				a || (f.hits.forEach(function (a) {
					d.pushObject({
						id: a.contentId,
						title: encodeStr(a.title),
						snippet: markdownConverter.makeHtml(encodeStr(a.snippet) + "..."),
						createdOn: moment(a.createdOn).format("MMM Do"),
						categoryName: b.kbCategories.findProperty("id", a.categories[0]).name
					})
				}), b.kbContent.pushObjects(d));
				b.set("isKbContentLoaded", !0);
				c(b.kbContent)
			})
		},
		getTabSettings: function (a) {
			return (a = this.getProperty(a)) ? a.tabSettings : null
		},
		updateTabSettings: function (a) {
			var c = this.getProperty(a.propertyId), d = [];
			!c || (c.tabVersion && c.tabVersion >= a.tabsv || !a.tabs) || (a.tabs.forEach(function (a) {
				a.enabled && ("internal" === a.tabType || "integration" === a.tabType ? (a.isInternal = !0, a.title = languageParser.translate("admin", a.label),
					a.isMenu = !1, a.isURL = !1, a.isText = !1, a.fontClass = tabsIconClass[a.label]) : (a.isURL = "url" === a.tabType, a.isMenu = "menu" === a.tabType, a.isText = "text" === a.tabType, "menu" === a.tabType && (a.items = [], a.content.forEach(function (c) {
					c.enabled && a.items.push({
						id: "i" + a.items.length,
						label: c.label,
						title: "internal" === c.tabType ? languageParser.translate("admin", c.label) : c.label,
						isText: "text" === c.tabType,
						isInternal: "internal" === c.tabType,
						isMenu: !1,
						isURL: "url" === c.tabType,
						content: c.content,
						beautifiedText: "text" === c.tabType ?
							markdownConverter.makeHtml(encodeStr(c.content)) : "",
						fontClass: "internal" === c.tabType ? tabsIconClass[c.label] : ""
					})
				})), a.isText && (a.beautifiedText = markdownConverter.makeHtml(encodeStr(a.content))), a.isInternal = !1, a.title = a.label), a.id = "t" + d.length, d.pushObject(a))
			}), c.isClientProperty && d.pushObject({
				title: "Client Data",
				isText: !0,
				isInternal: !1,
				isMenu: !1,
				isURL: !1,
				label: "client_data",
				id: "t" + d.length
			}), c.set("tabSettings", d), c.set("tabVersion", a.tabsv))
		},
		getProperty: function (a) {
			return this.get("allProperties").findProperty("id",
				a)
		},
		allProperties: function () {
			return this.sites || this.pages ? this.sites.concat(this.pages) : []
		}.property("sites.@each", "pages.@each"),
		isAgentActive: function (a) {
			var c = !1;
			this.get("allProperties").every(function (d) {
				if (!d.currentAgents) return !0;
				d = d.currentAgents.filterProperty("aid", a);
				return d.length && d.findProperty("en", !0) ? (c = !0, !1) : !0
			});
			return c
		},
		getPropertyName: function (a) {
			return (a = this.get("allProperties").findProperty("id", a)) ? a.propertyName : ""
		},
		updateDepartmentStatus: function (a) {
			a.dptst && a.dptst.length &&
			this.get("allProperties").forEach(function (c) {
				!c.departments || c.statusVersion >= a.asver || (a.dptst.forEach(function (a) {
					c.departments[a.did] && (c.departments[a.did].st = a.st)
				}), c.set("statusVersion", a.asver))
			})
		},
		isAgentAttachedToDepartment: function (a) {
			return -1 !== this.attachedDepartments.indexOf(a)
		},
		isDepartmentOffline: function (a, c) {
			var d = this.getProperty(a);
			return d && d.departments[c] && "offline" !== d.departments[c].st ? !1 : !0
		},
		getDepartmentName: function (a, c) {
			var d = this.getProperty(a);
			return d ? d.departments[c] ?
				d.departments[c].n : null : null
		},
		addProperty: function (a, c, d) {
			var b, e = !1, f = this, g = this.getProperty(a.pgid), h = Tawk.userController.user.id;
			d = d || function () {
			};
			if (g) return d();
			g = Ember.Object.create({
				id: a._id || a.pgid,
				propertyName: a.pgn,
				tawkId: a.twid,
				departments: a.dpts,
				type: a.t,
				enabled: a.en,
				currentAgents: a.a || [],
				statusVersion: a.asver,
				departmentVersion: a.dptsver || 0,
				propertyType: a.pt,
				createdInWizard: a.cw,
				createdBy: a.cb,
				propertyUrl: a.dmn,
				widgetVersion: a.wdgtv || 0,
				tabSettings: [],
				kbCategories: [],
				isKbCategoriesLoaded: !1,
				kbContent: [],
				isKbContentLoaded: !1,
				isClientProperty: !1,
				webrtcActivated: !1,
				webrtcEnabled: !1
			});
			a.rl && g.set("isAdmin", "admin" === a.rl);
			a.addons && (a.addons.webrtc && (0 < moment(a.addons.webrtc.expiry || 0).diff(moment()) && g.set("webrtcActivated", !0), a.addons.webrtc.settings && (g.set("webrtcEnabled", !!a.addons.webrtc.settings.enabled), g.set("webrtcVideoEnabled", a.addons.webrtc.settings.video ? a.addons.webrtc.settings.video : !0), g.set("webrtcScreenEnabled", a.addons.webrtc.settings.screen ? a.addons.webrtc.settings.screen :
				!0))), a.addons.liveAnswering && (g.isClientProperty && Tawk.userController.user.isHiredAgent) && Tawk.laScheduler.addProperty(g, a.addons.liveAnswering));
			b = "page" === g.propertyType ? "pages" : "sites";
			for (var k = 0; k < this[b].length; k++) if (this[b].objectAt(k).propertyName.toLowerCase() > g.propertyName.toLowerCase()) {
				this[b].insertAt(k, g);
				e = !0;
				break
			}
			e || this[b].pushObject(g);
			a.dpts && Object.keys(a.dpts).forEach(function (b) {
				a.dpts[b].dltd || a.dpts[b].a.contains(h) && f.attachedDepartments.push(b)
			});
			if (a.wdgts && Object.keys(a.wdgts).length) {
				var l =
					[];
				Object.keys(a.wdgts).forEach(function (b) {
					a.wdgts[b] ? l.push({id: b, name: a.wdgts[b]}) : l.push({id: b, name: b})
				});
				g.set("widgets", l)
			}
			a.a.forEach(function (a) {
				a.aid === h ? (g.set("isAdmin", "admin" === a.rl), g.set("isStatusEnabled", a.pen), g.set("isClientProperty", !!a.ha), a.ha && Tawk.userController.user.set("isHiredAgent", !0)) : Tawk.agentsController.addAgent(a)
			});
			c && (this.notifyUpdate(g), SHOW_WIZARD = null);
			Tawk.liveMonitoringController.addProperty(g);
			Tawk.shortcutsController.initializeShortcuts();
			this.loadTabSettings([g.id]);
			return d(g)
		},
		updatePropertyData: function (a, c, d) {
			var b = !1, e = this, f = !1, g = this.getProperty(a.pgid);
			d = d || function () {
			};
			if (!g) return socketConnector.getPropertyInformation(a.pgid, function (a, b) {
				a || e.addProperty(b, c, d)
			});
			a.pgn && (a.pgn.toLowerCase() !== g.propertyName.toLowerCase() && (f = !0), g.set("propertyName", a.pgn), Tawk.liveMonitoringController.updatePropertyName(g.id, g.propertyType, g.propertyName));
			a.twid && g.set("tawkId", a.twid);
			"profile" === g.type && g.set("profilePageLink", GLOBAL_TAWK_URL + "/" + a.twid);
			if (f) {
				this.set("reorderList",
					!1);
				a = "page" === g.propertyType ? "pages" : "sites";
				this[a].removeObject(g);
				for (f = 0; f < this[a].length; f++) if (this[a].objectAt(f).propertyName.toLowerCase() > g.propertyName.toLowerCase()) {
					this[a].insertAt(f, g);
					b = !0;
					break
				}
				b || this[a].pushObject(g);
				this.set("updatedData", {
					type: "propertyName",
					id: g.id,
					name: g.propertyName,
					propertyType: g.propertyType
				});
				this.set("reorderList", !0)
			}
			c && this.notifyUpdate(g);
			return d(g)
		},
		notifyUpdate: function (a) {
			this.set("updatedProperty", null);
			"admin" === Tawk.routeManager.get("currentState.name") &&
			("site" === a.propertyType && (a.isSite = !0), this.set("updatedProperty", a))
		},
		removeAgentAccess: function (a, c) {
			var d, b = this.getProperty(a.pgid);
			if (b) {
				if (a.aid === Tawk.userController.user.id) this.pages.removeObject(b), Tawk.shortcutsController.removeShortcutsForProperty(a.pgid), b.currentAgents.forEach(function (a) {
					Tawk.agentsController.removeAgent(a)
				}), b.set("toBeDeleted", !0); else {
					d = b.currentAgents.findProperty("aid", a.aid);
					if (!d) return;
					b.currentAgents.removeObject(d);
					Tawk.agentsController.removeAgent(a)
				}
				c &&
				(this.set("updatedData", {
					type: "agent",
					ids: a.aid,
					pgid: a.pgid,
					operation: "remove"
				}), this.notifyUpdate(b))
			}
		},
		removeProperty: function (a, c) {
			var d = this.getProperty(a);
			d && ("site" === d.propertyType ? this.sites.removeObject(d) : this.pages.removeObject(d), d.currentAgents.forEach(function (a) {
				Tawk.agentsController.removeAgent(a)
			}), Tawk.shortcutsController.removeShortcutsForProperty(a), Tawk.liveMonitoringController.removeProperty(a, d.propertyType), c && this.notifyUpdate(d))
		},
		updateDepartment: function (a, c) {
			var d, b = this.getProperty(a.pgid);
			!b || (!a.dptsver || b.departmentVersion >= a.dptsver) || (b.departments || (b.departments = {}), b.departments[a.did] = a, d = this.attachedDepartments.indexOf(a.did), a.a.contains(Tawk.userController.user.id) || -1 === d ? -1 === d && a.a.contains(Tawk.userController.user.id) && this.attachedDepartments.push(a.did) : this.attachedDepartments.splice(d, 1), b.set("departmentVersion", a.dptsver), c && (this.set("updatedData", {
				type: "department",
				ids: [a.did],
				operation: "update"
			}), this.notifyUpdate(b)))
		},
		removeDepartment: function (a, c) {
			var d =
				this, b = this.getProperty(a.pgid);
			!b || (!a.dptsver || b.departmentVersion >= a.dptsver) || (a.dids.forEach(function (a) {
				var c = d.attachedDepartments.indexOf(a);
				b.departments[a].dltd = !0;
				b.departments[a].en = !1;
				-1 !== c && d.attachedDepartments.splice(c, 1)
			}), b.set("departmentVersion", a.dptsver), c && (this.set("updatedData", {
				type: "department",
				ids: a.dids,
				operation: "remove"
			}), this.notifyUpdate(b)))
		},
		getDepartmentsByProperty: function (a) {
			return (a = this.getProperty(a)) ? a.departments : null
		},
		changePageStatus: function (a, c, d) {
			var b =
				this;
			socketConnector.changePageStatus(a, c, function (e, f) {
				var g;
				if (e) return d(!0);
				(g = b.getProperty(a)) && g.set("isStatusEnabled", c);
				Tawk.liveMonitoringController.changePageStatus(g, c, f);
				d()
			})
		},
		updatePropertyStatus: function (a, c) {
			var d = this.getProperty(a);
			d && (d.set("isStatusEnabled", c), Tawk.liveMonitoringController.changePageStatus(d, c))
		},
		disableProperty: function (a, c) {
			var d;
			c = c || function () {
			};
			d = this.getProperty(a);
			if (!d || !d.isAdmin) return c(!0);
			socketConnector.disableProperty(d.id, function (a) {
				if (a) return c(a);
				"profile" === d.type ? Tawk.intercomController.execute("trackEvent", {eventType: "disabled-profile-page"}) : "site" === d.pageType ? Tawk.intercomController.execute("trackEvent", {eventType: "disabled-site"}) : Tawk.intercomController.execute("trackEvent", {eventType: "disabled-page"});
				d.set("enabled", !1);
				return c()
			})
		},
		enableProperty: function (a, c) {
			var d;
			c = c || function () {
			};
			d = this.getProperty(a);
			if (!d || !d.isAdmin) return c(!0);
			socketConnector.enableProperty(d.id, function (a) {
				if (a) return c(a);
				"profile" === d.type ? Tawk.intercomController.execute("trackEvent",
					{eventType: "enabled-profile-page"}) : "site" === d.pageType ? Tawk.intercomController.execute("trackEvent", {eventType: "enabled-site"}) : Tawk.intercomController.execute("trackEvent", {eventType: "enabled-page"});
				d.set("enabled", !0);
				return c()
			})
		},
		getPropertyInformation: function (a, c) {
			var d = this.getProperty(a);
			c = c || function () {
			};
			if (!d) return c(!0);
			socketConnector.getPropertyDetails(d.id, function (a, d) {
				if (a) return c(a);
				c(null, d)
			})
		},
		propertyDisabled: function (a, c) {
			var d = this.getProperty(a);
			d && (d.set("enabled", !1),
			c && this.notifyUpdate(d), Tawk.liveMonitoringController.changePageStatus(d, !1))
		},
		propertyEnabled: function (a, c) {
			var d = this.getProperty(a);
			d && (d.set("enabled", !0), c && this.notifyUpdate(d), Tawk.liveMonitoringController.changePageStatus(d, !0))
		},
		addAgent: function (a, c) {
			var d = this.getProperty(a.pgid);
			d && (d.currentAgents.findProperty("aid", a.aid) || (d.currentAgents.pushObject({
				aid: a.aid,
				en: !0,
				pen: !0,
				rl: a.rl,
				ha: a.ha
			}), a.aid === Tawk.userController.user.id && (d.set("isAdmin", "admin" === a.rl), d.set("isStatusEnabled",
				!0)), Tawk.agentsController.addAgent(a)), c && (this.set("updatedData", {
				type: "agent",
				operation: "add",
				item: a
			}), this.notifyUpdate(d)))
		},
		updateAgentAccess: function (a, c) {
			var d = this, b = this.getProperty(a.pgid);
			if (b || a.en) {
				if (!b && a.en) return socketConnector.getPropertyInformation(a.pgid, function (b, f) {
					b || (f.pgid = a.pgid, f.rl = a.rl, d.addProperty(f, c))
				});
				a.aid === Tawk.userController.user.id && (a.en ? b.set("isAdmin", "admin" === a.rl) : (this.removeProperty(a.pgid), b.set("toBeDeleted", !0)));
				b.currentAgents.forEach(function (c,
				                                  d) {
					c.aid === a.aid && (b.set("currentAgents." + d + ".en", a.en), b.set("currentAgents." + d + ".rl", a.rl));
					Tawk.agentsController.addAgent(c)
				});
				c && this.notifyUpdate(b)
			}
		},
		getColorCode: function (a) {
			var c = this.getProperty(a);
			if (!c) return "";
			a = c.colorCode;
			if (!a) {
				for (a = generateLightColors(); -1 !== this.colorCodes.indexOf(a);) a = generateLightColors();
				c.set("colorCode", a);
				this.colorCodes.push(a)
			}
			return a || ""
		},
		updateWidgetData: function (a) {
			var c = this.getProperty(a.pgid);
			if (!c || c.widgetVersion >= a.wdgtv) return "";
			c.widgets.clear();
			a.wdgts && Object.keys(a.wdgts).length && (Object.keys(a.wdgts).forEach(function (d) {
				a.wdgts[d] ? c.widgets.pushObject({id: d, name: a.wdgts[d]}) : c.widgets.pushObject({id: d, name: d})
			}), Tawk.liveMonitoringController.updateWidgetsForProperty(c.id, c.propertyType, c.widgets))
		},
		getAlert: function (a, c) {
			var d = this.getProperty(a);
			c = c || function () {
			};
			if (!d) return c();
			d.alertVersion ? c(d.alertContent) : socketConnector.getAlert(d.id, function (a, e) {
				a || (d.set("alertContent", e.alert), d.set("alertVersion", e.alertV), c(d.alertContent))
			})
		},
		updateAlert: function (a) {
			var c = this.getProperty(a.propertyId);
			c && (!c.alertVersion || c.alertVersion < a.alertV) && (c.set("alertContent", a.alert), c.set("alertVersion", a.alertV), this.set("updateAlertInView", {
				propertyId: a.propertyId,
				alertContent: a.alert,
				alertVersion: a.alertv
			}), c.alertContent && Tawk.visitorChatController.notifyAlertInChat(c.id, c.alertContent))
		},
		isOnlyHiredAgent: function (a) {
			var c = !0;
			this.get("allProperties").every(function (d) {
				return d.currentAgents && 1 !== d.currentAgents.length ? (agent = d.currentAgents.findProperty("aid",
					a)) && !agent.ha ? c = !1 : !0 : !0
			});
			return c
		},
		isOnlyClientAgent: function (a) {
			var c = !0;
			this.get("allProperties").every(function (d) {
				var b;
				if (d.currentAgents) return (b = d.currentAgents.findProperty("aid", a)) && !d.isClientProperty ? c = !1 : !0
			});
			return c
		},
		isClientProperty: function (a) {
			return (a = this.sites.findProperty("id", a)) ? a.isClientProperty : !1
		},
		getHiredAgentsIds: function (a) {
			var c = [];
			a ? (a = this.sites.findProperty("id", a)) && (c = c.concat(a.currentAgents.filterProperty("ha", !0).filterProperty("en", !0).getEach("aid"))) : this.sites.forEach(function (a) {
				c =
					c.concat(a.currentAgents.filterProperty("ha", !0).filterProperty("en", !0).getEach("aid"))
			});
			return c.uniq()
		},
		loadHiredAgentContent: function (a, c) {
			var d = this.sites.findProperty("id", a);
			if (!d) return c(null);
			if (d.hiredContent) return c(d.hiredContent);
			socketConnector.getHiredAgentContent(a, function (a, e) {
				if (a) return c(null);
				e.hiredAgent.objectives && e.hiredAgent.objectives.forEach(function (a) {
					"predefined" === a.type && (a.content = languageParser.translate("admin", a.content))
				});
				d.set("hiredContent", Ember.Object.create(e.hiredAgent));
				d.set("hiredContentV", e.hiredAgentv);
				c(d.hiredContent)
			})
		},
		updateHiredAgentContent: function (a) {
			var c = this.sites.findProperty("id", a.propertyId);
			!c || (!c.hiredContentV || c.hiredContentV >= a.hiredAgentv) || socketConnector.getHiredAgentContent(a.propertyId, function (a, b) {
				a || (b.hiredAgent.objectives && b.hiredAgent.objectives.forEach(function (a) {
					"predefined" === a.type && (a.content = languageParser.translate("admin", a.content))
				}), c.set("hiredContent", Ember.Object.create(b.hiredAgent)), c.set("hiredContentV", b.hiredAgentv))
			})
		},
		addonSettingsUpdate: function (a) {
			var c = this.sites.findProperty("id", a.propertyId);
			c && ("webrtc" === a.addonId ? (c.set("webrtcEnabled", !!a.settings.enabled), c.set("webrtcVideoEnabled", !!a.settings.video), c.set("webrtcScreenEnabled", !!a.settings.screen)) : "live-answering" === a.addonId && Tawk.laScheduler.updateSchedule(a))
		},
		addonActivated: function (a) {
			var c = this.sites.findProperty("id", a.propertyId);
			c && "webrtc" === a.addonId && (0 < moment(a.expiry || 0).diff(moment()) ? c.set("webrtcActivated", !0) : c.set("webrtcActivated",
				!1), socketConnector.getAddOnDetail(a.propertyId, a.addonId, function (a, b) {
				a || (c.set("webrtcEnabled", !!b.settings.enabled), c.set("webrtcVideoEnabled", !!b.settings.video), c.set("webrtcScreenEnabled", !!b.settings.screen))
			}))
		},
		isWebRTCActivated: function (a) {
			var c = !1;
			a === this.personalPage.id ? c = !!this.personalPage.webrtcActivated : (a = this.sites.findProperty("id", a), c = !!a.webrtcActivated);
			return c
		},
		isWebRTCEnabled: function (a) {
			var c = !1;
			a === this.personalPage.id ? c = !!this.personalPage.webrtcEnabled : (a = this.sites.findProperty("id",
				a), c = !!a.webrtcEnabled);
			return c
		},
		getAllMembers: function () {
			var a = [];
			this.get("allProperties").forEach(function (c) {
				c.enabled && !c.personalPage && c.currentAgents.forEach(function (d) {
					if (d.en && d.aid !== Tawk.userController.user.id) {
						var b = a.findProperty("id", d.aid);
						b && -1 === b.properties.indexOf(c.id) ? b.properties.pushObject(c.id) : b || (b = Tawk.agentsController.getAgent(d.aid)) && a.pushObject(Ember.Object.create({
							id: d.aid,
							name: b.name,
							selected: !1,
							properties: [c.id],
							status: b.get("status"),
							isOwn: !1
						}))
					}
				})
			});
			return a
		},
		getShopifySettings: function (a, c) {
			var d = this.sites.findProperty("id", a);
			if (!d) return c(!0);
			d.shopifySettings ? c(null, d.shopifySettings) : socketConnector.getShopifyConfig(a, function (a, e) {
				if (a) return c(a);
				e && e.data && d.set("shopifySettings", {
					customerSettings: e.data.config.customer,
					orderSettings: e.data.config.order,
					configVersion: e.data.version
				});
				c(null, d.shopifySettings)
			})
		},
		updateIntegrationConfig: function (a) {
			var c = this.sites.findProperty("id", a.propertyId);
			c && ("shopify" !== a.integrationId || c.shopifySettings &&
				c.shopifySettings.configVersion >= a.version || c.set("shopifySettings", {
					customerSettings: a.config.customer,
					orderSettings: a.config.order,
					configVersion: a.version
				}))
		},
		saveShopifyConfig: function (a, c, d) {
			var b = this, e = this.sites.findProperty("id", a);
			if (!e || !e.isAdmin) return d(!0);
			socketConnector.saveShopifyConfig(a, c, function (e, g) {
				if (e) return d(e);
				b.updateIntegrationConfig({propertyId: a, version: g.data.version, config: c});
				d(null, g.data.version)
			})
		}
	});
	Tawk.webProperties = Tawk.WebProperties.create();
	Tawk.AgentsController =
		Ember.Controller.extend({
			agentsList: {},
			initAgentsTimeout: null,
			agentDropDownList: [],
			agents: [],
			groups: [],
			userAgent: null,
			initAgents: function () {
				var a = this;
				clearTimeout(this.initAgentsTimeout);
				this.set("initAgentsTimeout", setTimeout(function () {
					socketConnector.getAgents(function (c, d) {
						c ? a.initAgents() : a.loadAgents(d)
					})
				}, 0))
			},
			loadAgents: function (a) {
				this.set("agentsList", {});
				this.set("agentDropDownList", []);
				this.set("agentsPending", a);
				Tawk.webProperties.processed && this.processAgents()
			},
			processAgents: function () {
				var a,
					c = Tawk.userController.user.id, d = this, b = [];
				this.agentsPending && (this.set("agentsProcessed", !1), a = this.agentsPending, this.set("agentsPending", null), a.forEach(function (a) {
					var f = {}, g, h, k = Tawk.webProperties.isAgentActive(a._id);
					a._id !== c && (g = Tawk.webProperties.isOnlyHiredAgent(a._id), h = Tawk.webProperties.isOnlyClientAgent(a._id));
					d.agentDropDownList.pushObject(Ember.Object.create({
						id: a._id,
						name: a.n,
						isActive: k,
						isHiredOnly: g
					}));
					a.isHiredOnly = g;
					k && c !== a._id ? b.pushObject(Tawk.AgentModel.create({
						id: a._id,
						name: a.n,
						tawkId: a.twid,
						sessions: a.sessions ? a.sessions : null,
						lastKnown: a.lk,
						aliasImage: a.ai ? GLOBAL_AWS_PI_URL + "/" + a.ai : null,
						isOwn: !1,
						isHiredOnly: g,
						isClientOnly: h
					})) : c === a._id && d.set("userAgent", Tawk.AgentModel.create({
						id: a._id,
						name: a.n,
						tawkId: a.twid,
						sessions: a.sessions ? a.sessions : null,
						lastKnown: a.lk,
						aliasImage: a.ai ? GLOBAL_AWS_PI_URL + "/" + a.ai : null,
						isOwn: !0
					}));
					a.sessions && a.sessions.forEach(function (a) {
						f[a.rsc] = a
					});
					a._id === c && a.sessions.length && (g = f[Tawk.userController.user.resourceId], window.userLogData = {
						agentId: a._id,
						name: a.n, resourceId: g.rsc, ip: g.ip, city: g.cy, countryCode: g.cc, os: g.os, browser: g.bw
					});
					d.agentsList[a._id] = a;
					d.agentsList[a._id].sessions = f
				}), this.set("agents", sortList(b, "name")), this.set("agentsProcessed", !0))
			},
			processGroups: function () {
				var a = [], c = this;
				socketConnector.getChatGroups(function (d, b) {
					b.forEach(function (b) {
						var d, g = [], h = [];
						"agent" !== b.t && ((d = c.groups.findProperty("groupId", b._id)) || (d = Tawk.AgentGroupModel.create()), d.set("groupId", b._id), g.pushObject(Tawk.agentsController.userAgent), 1 !== b.p.length &&
						(b.p.forEach(function (a) {
							var b;
							a !== Tawk.userController.user.id && ((b = Tawk.agentsController.getAgent(a)) ? g.pushObject(b) : h.push(a))
						}), h.length ? socketConnector.getAgentNames(h, function (a, b) {
							a || (b.forEach(function (a) {
								g.pushObject(Ember.Object.create({id: a._id, name: a.n, status: "invisible"}))
							}), d.set("participants", sortList(g, "name")))
						}) : d.set("participants", sortList(g, "name")), a.pushObject(d)))
					});
					c.set("groups", a)
				})
			},
			getName: function (a) {
				return a === Tawk.userController.user.id ? Tawk.userController.user.fullName :
					(a = this.agentDropDownList.findProperty("id", a)) ? a.isHiredOnly && !Tawk.userController.user.isHiredAgent ? "Hired Agent" : a.name : ""
			},
			getAgentsName: function (a) {
				var c = [], d = this;
				a && (Array.isArray(a) || (a = [a]), a.forEach(function (a, e) {
					var f = d.getName(a);
					f && c.push(f)
				}));
				return c
			},
			getAgentNameForMessage: function (a) {
				var c, d, b;
				c = "";
				if (a.uid === Tawk.userController.user.id) return decodeStr(a.md && a.md.ao ? a.n : a.n + " (" + languageParser.translate("generic", "me") + ")");
				c = this.agentsList[a.uid];
				(d = Tawk.liveMonitoringController.getSubscribedVisitor(a.vsk)) &&
				(b = d.agentPrensence ? d.agentPrensence[a.uid + a.md.rsc] : null);
				c = c.isHiredOnly ? a.md.ao ? b ? b.displayName : "Hired Agent" : a.n || (b ? b.displayName : "Hired Agent") : a.n ? a.n + (a.md.ao ? "" : " (" + c.n + ")") : c.n;
				return decodeStr(c)
			},
			getAgent: function (a) {
				return this.agents.findProperty("id", a)
			},
			sessionStart: function (a) {
				var c = this.agents.findProperty("id", a.aid);
				this.agentsList[a.aid] && c && (this.agentsList[a.aid].sessions || (this.agentsList[a.aid].sessions = {}), this.agentsList[a.aid].sessions[a.rsc] = a, c.sessions || c.set("sessions",
					[]), c.sessions.findProperty("rsc", a.rsc) || (c.sessions.pushObject(a), c.id === Tawk.userController.user.id && (window.userLogData = {
					agentId: c.id,
					name: c.name,
					resourceId: a.rsc,
					ip: a.ip,
					city: a.cy,
					countryCode: a.cc,
					os: a.os,
					browser: a.bw
				})))
			},
			sessionEnd: function (a) {
				var c, d = this.agents.findProperty("id", a.aid);
				this.agentsList[a.aid] && (this.agentsList[a.aid].sessions && d && d.sessions) && ((c = d.sessions.findProperty("rsc", a.rsc)) && d.sessions.removeObject(c), d.sessions.length || d.set("sessions", null), delete this.agentsList[a.aid].sessions[a.rsc])
			},
			removeAgent: function (a) {
				var c = this.agents.findProperty("id", a.aid);
				c && !Tawk.webProperties.isAgentActive(a.aid) && (delete this.agentsList[a.aid].twid, this.agents.removeObject(c), Tawk.liveMonitoringController.removeAgent(a.aid))
			},
			updateAgentName: function (a) {
				var c = this.agentDropDownList.findProperty("id", a.aid);
				(agent = this.getAgent(a.aid)) && agent.set("name", a.n);
				this.agentsList[a.aid] && (this.agentsList[a.aid].n = a.n);
				c && c.set("name", a.n);
				Tawk.liveMonitoringController.updateAgentName(a.aid, a.n)
			},
			addAgent: function (a) {
				var c =
					this;
				this.agentsList[a.aid] && this.agentsList[a.aid].twid ? this.updateAgentList(a) : socketConnector.getAgentsInformations([a.aid], function (d, b) {
					var e = {};
					!d && b.length && (b = b[0], b.aid = a.aid, b.isHiredOnly = Tawk.webProperties.isOnlyHiredAgent(b.aid), b.isClientOnly = Tawk.webProperties.isOnlyClientAgent(b.aid), b.sessions && b.sessions.forEach(function (a) {
						e[a.rsc] = a
					}), c.updateAgentList(b), c.agentsList[b.aid] = b, c.agentsList[b.aid].sessions = e)
				})
			},
			updateAgentList: function (a) {
				var c = this.getAgent(a.aid), d = Tawk.webProperties.isOnlyHiredAgent(a.aid),
					b = Tawk.webProperties.isOnlyClientAgent(a.aid);
				a.aid !== Tawk.userController.user.id && (c && !Tawk.webProperties.isAgentActive(a.aid) ? (delete this.agentsList[a.aid].twid, this.agents.removeObject(c), Tawk.liveMonitoringController.removeAgent(a.aid)) : c ? c.setProperties({
					isHiredOnly: d,
					isClientOnly: b
				}) : (c = Tawk.AgentModel.create({
					id: a.aid,
					name: a.n,
					tawkId: a.twid,
					sessions: a.sessions ? a.sessions : null,
					lastKnown: a.lk,
					isHiredOnly: d,
					isClientOnly: b
				}), this.agents.pushObject(c), this.agentDropDownList.pushObject(Ember.Object.create({
					id: a.aid,
					name: a.n, isActive: Tawk.webProperties.isAgentActive(a.aid), isHiredOnly: d
				})), Tawk.liveMonitoringController.addAgent(c)))
			},
			updateAgentStatus: function (a) {
				var c = this.getAgent(a.aid);
				this.agentsList[a.aid] && (this.agentsList[a.aid].sessions && c && c.sessions) && ((session = c.sessions.findProperty("rsc", a.rsc)) && c.set("sessions." + c.sessions.indexOf(session) + ".st", a.st), this.agentsList[a.aid].sessions[a.rsc] || (this.agentsList[a.aid].sessions[a.rsc].st = a.st))
			},
			nonHiredAgents: function () {
				return this.agents.filterProperty("isHiredOnly",
					!1).filterProperty("isClientOnly", !1)
			}.property("agents.@each.isHiredOnly")
		});
	Tawk.agentsController = Tawk.AgentsController.create();
	var statusOptions = {online: "o", away: "a", invisible: "i"};
	Tawk.UserController = Ember.Controller.extend({
		sessionKey: null,
		socketServer: null,
		user: Ember.Object.create({
			id: null,
			fullName: null,
			firstName: null,
			lastName: null,
			email: null,
			role: null,
			resourceId: null,
			status: null
		}),
		alias: [],
		localeCode: null,
		defaultAlias: null,
		soundSettings: Ember.Object.create({
			icr: {name: null, volume: 0, loop: 0},
			im: {name: null, volume: 0},
			iv: {name: null, volume: 0},
			dc: {name: null, volume: 0},
			acm: {name: null, volume: 0}
		}),
		desktopNotificationEnabled: !1,
		soundNotificationEnabled: !1,
		visitorDetailsHoverEnabled: !1,
		sidebarChatListAll: !0,
		sidebarIncomingRequests: !0,
		groupIncomingRequests: !1,
		existingSessions: Ember.Object.create({list: [], status: "EMPTY"}),
		isNotificationOptionHidden: !1,
		existingCards: [],
		isAddOnSeen: !1,
		newAddonSeen: !1,
		initialize: function (a) {
			var c, d = [], b = {};
			this.user.setProperties({
				id: a.aid, fullName: a.n, firstName: a.fn,
				lastName: a.ln, email: a.e, role: a.rl, resourceId: a.rsc, status: a.st
			});
			desktopConnector.send("agentStatusChanged", a.st);
			this.user.reopen({
				decodedName: function () {
					return this.fullName ? decodeStr(this.fullName) : null
				}.property("fullName")
			});
			a.sg && (this.set("localeCode", a.sg.lc), Object.keys(a.sg.sd).forEach(function (c) {
				b[c] = {name: a.sg.sd[c].n, volume: a.sg.sd[c].vl, loop: a.sg.sd[c].loop};
				11 === a.sg.sd[c].loop && (a.sg.sd[c].loop = "infinity");
				notificationController.audioPlayer.add(c, a.sg.sd[c])
			}), b.acm || (b.acm = {
				name: "sound8",
				volume: 100
			}, notificationController.audioPlayer.add("acm", {
				n: "sound8",
				vl: 100
			})), a.sg.cwc && Tawk.chatController.setTotalColumns(a.sg.cwc), this.soundSettings.setProperties(b), a.sg.ac && (a.sg.ac.agentView && Tawk.agentChatController.set("inlineDirectMessage", "max" === a.sg.ac.agentView), a.sg.ac.groupView && Tawk.agentChatController.set("inlineGroupChat", "max" === a.sg.ac.groupView)), this.set("canCreateApiKey", !(!a.sg.flg || !a.sg.flg.api)));
			notificationController.audioPlayer.add("webrtc-call", {
				n: "webrtc-call", vl: 100,
				loop: "infinity"
			});
			a.als.forEach(function (b) {
				var f = Tawk.CopyableModel.create({
					aliasId: b.alsid,
					displayName: b.dn,
					aliasImage: b.ai,
					enabled: b.en,
					positionTitle: b.pst,
					isDefault: !1
				});
				d.push(f);
				b.alsid === a.dals && (f.set("isDefault", !0), c = f)
			});
			this.set("aliases", d);
			this.set("defaultAlias", c);
			main.extractStorageSettings();
			this.set("desktopNotificationEnabled", "on" === main.storageSettings.notification || !main.storageSettings && desktopConnector.enabled());
			this.set("soundNotificationEnabled", "off" !== main.storageSettings.sound);
			this.set("visitorDetailsHoverEnabled", "off" !== main.storageSettings.leftSideBarHover);
			this.set("sidebarChatListAll", "off" !== main.storageSettings.chatlistAll);
			this.set("sidebarIncomingRequests", "off" !== main.storageSettings.incomingRequests);
			this.set("isAddOnSeen", this.isNewFeatureSeen("add-on"));
			this.set("groupIncomingRequests", main.storageSettings.groupIncomingRequests && "off" !== main.storageSettings.groupIncomingRequests);
			this.set("newAddonSeen", !!main.storageSettings.newAddonSeen);
			this.set("webrtcAddonSeen",
				!!main.storageSettings.webrtcAddonSeen);
			this.set("bannerClosed", !!main.storageSettings.bannerClosed);
			this.soundNotificationEnabled ? notificationController.audioPlayer.turnOnSound() : notificationController.audioPlayer.turnOffSound();
			notificationController.hasDesktopNotificationFeature() && !notificationController.checkNotificationPermission() && notificationController.enableDesktopNotification()
		},
		setSocketServer: function (a) {
			this.set("socketServer", a)
		},
		setSessionKey: function (a) {
			this.set("sessionKey", a)
		},
		changeStatus: function (a, c) {
			var d = this;
			statusOptions[a] && (a = statusOptions[a]);
			return a === this.user.status ? c() : socketConnector.changeStatus(a, function (b) {
				if (b) return c(!0);
				desktopConnector.send("agentStatusChanged", a);
				d.user.set("status", a);
				c()
			})
		},
		toggleDesktopNotificationFinalStep: function (a) {
			this.set("desktopNotificationEnabled", a);
			a ? notificationController.enableDesktopNotification() : notificationController.disableDesktopNotification()
		},
		toggleDesktopNotification: function (a, c) {
			var d = this, b = function (a) {
				c.checked =
					a;
				d.toggleDesktopNotificationFinalStep(a)
			};
			a && notificationController.checkNotificationPermissionIsDefault() ? notificationController.enableDesktopNotification(b) : a && !notificationController.checkNotificationPermission() ? (checkAndSetAlertBoxView(languageParser.translate("action_messages", "attention"), languageParser.translate("action_messages", "notification_desktop_warning")), c.checked = !1) : (this.toggleDesktopNotificationFinalStep(a), c.checked = a)
		},
		toggleSidebarChatlist: function (a) {
			this.set("sidebarChatListAll",
				a);
			a ? main.updateStorageSettings("chatlistAll", "on") : main.updateStorageSettings("chatlistAll", "off")
		},
		toggleGroupIncomingList: function (a) {
			this.set("groupIncomingRequests", a);
			a ? main.updateStorageSettings("groupIncomingRequests", "on") : main.updateStorageSettings("groupIncomingRequests", "off")
		},
		toggleVisitorDetailsHover: function (a) {
			this.set("visitorDetailsHoverEnabled", a);
			a ? main.updateStorageSettings("leftSideBarHover", "on") : main.updateStorageSettings("leftSideBarHover", "off")
		},
		isNewFeatureSeen: function (a) {
			return !(!main.storageSettings.newFeatureSeen ||
				-1 === main.storageSettings.newFeatureSeen.indexOf(a))
		},
		setNewFeatureSeen: function (a) {
			var c = main.storageSettings.newFeatureSeen || [];
			-1 === c.indexOf(a) && (c.push(a), main.updateStorageSettings("newFeatureSeen", c), "add-on" === a && (this.set("isAddOnSeen", !0), this.setNewAddonSeen()))
		},
		closeBanner: function (a) {
			this.set("bannerClosed", a);
			main.updateStorageSettings("bannerClosed", a)
		},
		setNewAddonSeen: function () {
			main.updateStorageSettings("newAddonSeen", !0);
			this.set("newAddonSeen", !0)
		},
		toggleSoundNotification: function (a) {
			this.set("soundNotificationEnabled",
				a);
			a ? (notificationController.audioPlayer.turnOnSound(), main.updateStorageSettings("sound", "on"), Tawk.intercomController.execute("trackEvent", {eventType: "turned-on-sound-"})) : (notificationController.audioPlayer.turnOffSound(), main.updateStorageSettings("sound", "off"), Tawk.intercomController.execute("trackEvent", {eventType: "turned-off-sound"}))
		},
		saveSoundSettings: function (a, c, d) {
			var b = this, e = {
				ivn: a.iv.name,
				ivvl: parseInt(a.iv.volume, 10),
				icrn: a.icr.name,
				icrvl: parseInt(a.icr.volume, 10),
				icrloop: parseInt(a.icr.loop,
					10),
				imn: a.im.name,
				imvl: parseInt(a.im.volume, 10),
				dcn: a.dc.name,
				dcvl: parseInt(a.dc.volume, 10),
				acmn: a.acm.name,
				acmvl: parseInt(a.acm.volume, 10)
			};
			socketConnector.saveSoundSettings(e, function (a) {
				a || (b.updateSoundSettings(e, c), Tawk.intercomController.execute("trackEvent", {eventType: "updated-sound-settings"}));
				d(a)
			})
		},
		updateSoundSettings: function (a, c) {
			var d = this, b = {};
			["iv", "icr", "im", "dc", "acm"].forEach(function (c) {
				b[c] = {name: a[c + "n"], volume: a[c + "vl"], loop: a[c + "loop"]};
				"none" === b[c].name ? notificationController.audioPlayer.remove(c) :
					(d.soundSettings.setProperties(b), notificationController.audioPlayer.update(c, {
						n: b[c].name,
						vl: b[c].volume,
						loop: 11 === b[c].loop ? "infinity" : b[c].loop
					}))
			});
			a.origin || d.soundNotificationEnabled === c || this.toggleSoundNotification(c)
		},
		userTawkId: function () {
			return Tawk.webProperties.personalPage.tawkId
		}.property("Tawk.webProperties.personalPage.tawkId"),
		saveUserSettings: function (a, c) {
			var d = this;
			a.pageId = Tawk.webProperties.personalPage.id;
			a.password && (a.password = decodeStr(a.password));
			a.tawkId !== this.get("tawkId") ?
				a.tawkId = decodeStr(a.tawkId) : a.tawkId = null;
			a.email = a.email !== this.user.email ? decodeStr(a.email) : null;
			socketConnector.saveProfileSettings(a, function (b) {
				if (b) return c(b);
				Tawk.intercomController.execute("trackEvent", {eventType: "edit-profile"});
				d.user.set("fullName", encodeStr(a.name));
				a.email && d.user.set("email", a.email);
				Tawk.webProperties.updatePropertyData({pgid: a.pageId, pgn: encodeStr(a.name), twid: a.tawkId});
				Tawk.agentsController.updateAgentName({aid: d.user.id, n: encodeStr(a.name)});
				c()
			})
		},
		loadBrowserAppSessions: function () {
			var a =
				this;
			this.set("existingSessions.status", "LOADING");
			socketConnector.getBrowserAppSessions(function (c, d) {
				var b = [];
				if (c) return a.set("existingSessions.status", "ERROR");
				d.forEach(function (a) {
					var c = {id: a._id, ip: a.ip, country: a.cc, removing: !1, errorRemoving: !1};
					a.cc && (c.countryFlag = "flag flag-" + a.cc.toLowerCase());
					a.bw && (c.browser = a.bw + "-browser sprite-background");
					a.os && (c.operatingSystem = a.os + "-os sprite-background");
					b.pushObject(Ember.Object.create(c))
				});
				a.set("existingSessions.list", b);
				a.set("existingSessions.status",
					"LOADED")
			})
		},
		clearBrowserAppSessions: function () {
			this.set("existingSessions.list", []);
			this.set("existingSessions.status", "EMPTY")
		},
		signOutSession: function (a) {
			var c = this, d = c.existingSessions.list.findProperty("id", a);
			d && (d.set("removing", !0), d.set("errorRemoving", !1));
			socketConnector.signOutOtherSession(a, function (b) {
				var d = c.existingSessions.list.findProperty("id", a);
				b ? d && (d.set("removing", !1), d.set("errorRemoving", !0)) : (d && c.existingSessions.list.removeObject(d), Tawk.intercomController.execute("trackEvent",
					{eventType: "ended-existing-sessions"}))
			})
		},
		deleteAliases: function (a) {
			var c = this;
			a.alsids.forEach(function (a) {
				(a = c.aliases.findProperty("aliasId", a)) && c.aliases.removeObject(a)
			});
			Tawk.visitorChatController.deleteAliases(a)
		},
		updateAlias: function (a) {
			var c = this.aliases.findProperty("aliasId", a.alsid);
			c ? (c.set("displayName", a.dn), a.ai && c.set("aliasImage", a.ai), c.set("enabled", a.en), c.set("positionTitle", a.pst)) : (c = Tawk.CopyableModel.create({
				aliasId: a.alsid, displayName: a.dn, aliasImage: a.ai, enabled: a.en,
				positionTitle: a.pst
			}), this.aliases.pushObject(c));
			a.dals && (this.aliases.setEach("isDefault", !1), c.set("isDefault", !0), this.set("defaultAlias", c));
			Tawk.visitorChatController.updateAlias(c)
		},
		updateUserData: function (a) {
			a.pgid = Tawk.webProperties.personalPage.id;
			a.n && (this.user.set("fullName", a.n), Tawk.agentsController.updateAgentName({aid: this.user.id, n: a.n}));
			a.e && this.user.set("email", a.e);
			Tawk.webProperties.updatePropertyData(a, !0);
			a.lc && (getLocaleCookie() && getLocaleCookie() !== a.lc) && (setLocaleCookie(a.lc),
				window.location = "/")
		},
		changeLanguage: function (a, c) {
			socketConnector.saveProfileSettings({locale: a}, function (d) {
				if (d) return c(d);
				Tawk.intercomController.execute("trackEvent", {eventType: "changed-language", metaData: {language: a}});
				c()
			})
		},
		saveLastSubView: function () {
		},
		closeView: function () {
			return !0
		},
		getExistingCCCards: function (a, c) {
			var d = this, b = [];
			c = c || function () {
			};
			if (this.existingCards.length && !a) return c();
			this.existingCards.clear();
			socketConnector.getExistingCard(function (a, f) {
				if (a) return c();
				f.forEach(function (a,
				                    c) {
					0 === c && (a.selected = !0);
					a.cardBrand = a.cardBrand.capitalize().replace("-", " ");
					a.pretifyNumber = "x-" + a.cardNumber;
					b.push(a)
				});
				d.existingCards.pushObjects(b);
				c()
			})
		}
	});
	Tawk.userController = Tawk.UserController.create();
	Tawk.DashboardController = Ember.Controller.extend({
		analytics: null, history: null, feeds: null, init: function () {
			this.set("analytics", Tawk.DashboardAnalyticsController.create());
			this.set("history", Tawk.conversationsController);
			this.set("feeds", Tawk.DashboardFeedsController.create())
		}
	});
	Tawk.DashboardAnalyticsController =
		Ember.Controller.extend({
			realtime: Ember.Object.create({
				status: "EMPTY",
				visitsCount: {total: 0, maxEntry: 200, graphData: [], graphListener: null, fillerTimeout: null}
			}), recent: Ember.Object.create({
				status: "EMPTY",
				today: {
					summary: {
						chats: 0,
						missedChats: 0,
						positiveSentiment: 0,
						visitors: 0,
						returnVisitors: 0,
						visits: 0,
						onlineTime: 0,
						availabilityTime: 0
					}
				},
				series: {
					visitors: {
						values: [0, 0, 0, 0, 0, 0, 0],
						summary: {current: 0, growth: 0, highest: 0, lowest: 0, sum: 0, average: 0, l24h: 0}
					},
					visits: {
						values: [0, 0, 0, 0, 0, 0, 0], summary: {
							current: 0, growth: 0,
							highest: 0, lowest: 0, sum: 0, average: 0, l24h: 0
						}
					},
					pageViews: {
						values: [0, 0, 0, 0, 0, 0, 0],
						summary: {current: 0, growth: 0, highest: 0, lowest: 0, sum: 0, average: 0, l24h: 0}
					},
					chats: {
						values: [0, 0, 0, 0, 0, 0, 0],
						summary: {current: 0, growth: 0, highest: 0, lowest: 0, sum: 0, average: 0, l24h: 0}
					}
				}
			}), historical: Ember.Object.create({from: null, to: null, status: "EMPTY", data: []}), init: function () {
				var a = new Date, a = new Date(a.getFullYear(), a.getMonth(), a.getDate() - 1),
					c = new Date(a.getFullYear(), a.getMonth(), a.getDate() - 6);
				this.set("historical.from", c);
				this.set("historical.to", a)
			}, loadVisitorCount: function () {
				var a = this;
				this.set("realtime.status", "LOADING");
				this.set("realtime.visitsCount.graphListener", function (c) {
					isNaN(parseInt(c.t, 10)) || (a.set("realtime.visitsCount.total", c.t), a.set("realtime.status", "LOADED"), a.generateGraphData())
				});
				this.realtime.visitsCount.graphListener({t: Tawk.liveMonitoringController.totalVisitorsCount});
				socketConnector.socket.on("tvc", this.realtime.visitsCount.graphListener)
			}, unSubscribeVisitorCount: function () {
				this.stopVisitorCountFiller();
				"function" === typeof this.realtime.visitsCount.graphListener && socketConnector.socket.removeListener("tvc", this.realtime.visitsCount.graphListener);
				this.set("realtime.visitsCount.graphListener", null)
			}, generateGraphData: function () {
				this.stopVisitorCountFiller();
				0 < this.realtime.visitsCount.graphData.length && this.realtime.visitsCount.graphData.length > this.realtime.visitsCount.maxEntry && this.realtime.visitsCount.graphData.removeAt(0);
				if (0 === this.realtime.visitsCount.graphData.length) for (var a = 0; a < this.realtime.visitsCount.maxEntry; a++) this.realtime.visitsCount.graphData.pushObject(this.realtime.visitsCount.total);
				else this.realtime.visitsCount.graphData.pushObject(this.realtime.visitsCount.total);
				this.startVisitorCountFiller()
			}, startVisitorCountFiller: function () {
				this.set("realtime.visitsCount.fillerTimeout", setTimeout(this.generateGraphData.bind(this), 1E3))
			}, stopVisitorCountFiller: function () {
				clearTimeout(this.realtime.visitsCount.fillerTimeout);
				this.set("realtime.visitsCount.fillerTimeout", null)
			}, loadRecentAnalytics: function () {
				var a = this, c = new Date, d = new Date(c.getFullYear(), c.getMonth(), c.getDate() - 6), c =
					new Date(c.getFullYear(), c.getMonth(), c.getDate(), 24);
				this.set("recent.status", "LOADING");
				socketConnector.getHourlyStats({
					from: d.getTime(),
					to: c.getTime(),
					count: 168,
					merge: !0
				}, function (b, c) {
					if (b) return a.set("recent.status", "ERROR");
					var d = 0, g = 0, h = 0, k = 0, l = [0, 0, 0, 0, 0, 0, 0], m = [0, 0, 0, 0, 0, 0, 0],
						n = [0, 0, 0, 0, 0, 0, 0], p = [0, 0, 0, 0, 0, 0, 0], q = [0, 0, 0, 0, 0, 0, 0],
						r = [0, 0, 0, 0, 0, 0, 0], s = [0, 0, 0, 0, 0, 0, 0], u = [0, 0, 0, 0, 0, 0, 0],
						v = [0, 0, 0, 0, 0, 0, 0], w = 0, t = 0, y = new Date,
						z = new Date(y.getFullYear(), y.getMonth(), y.getDate(), y.getHours(), 59, 59,
							999), A = new Date(y.getFullYear(), y.getMonth(), y.getDate(), y.getHours() - 24, 0, 0, 0);
					c.forEach(function (a) {
						var b = new Date(a.tm);
						l[t] += a.cs + a.msc;
						m[t] += a.msc;
						n[t] += (a.rts + a.rtc) / 2;
						p[t] += a.uv;
						q[t] += a.rv;
						r[t] += a.v;
						s[t] += a.onlt;
						u[t] += a.onlt + a.awt + a.oflt;
						v[t] += a.pv;
						b > A && b < z && (d += a.uv, g += a.v, h += a.pv, k += a.cs + a.msc);
						w++;
						24 === w && (w = 0, t++)
					});
					a.recent.set("today.summary", Ember.Object.create({
						chats: l[6],
						missedChats: m[6],
						positiveSentiment: n[6],
						visitors: p[6],
						returnVisitors: q[6],
						visits: r[6],
						onlineTime: s[6],
						availabilityTime: u[6]
					}));
					a.recent.set("series.visitors.values", p);
					a.recent.set("series.visitors.summary", Ember.Object.create(a.summarize(p, d)));
					a.recent.set("series.visits.values", r);
					a.recent.set("series.visits.summary", Ember.Object.create(a.summarize(r, g)));
					a.recent.set("series.pageViews.values", v);
					a.recent.set("series.pageViews.summary", Ember.Object.create(a.summarize(v, h)));
					a.recent.set("series.chats.values", l);
					a.recent.set("series.chats.summary", Ember.Object.create(a.summarize(l, k)));
					a.set("recent.status", "LOADED")
				})
			},
			summarize: function (a, c) {
				var d = a[6], b = 0, e = 0, f = 0, g = Number.NEGATIVE_INFINITY, h = Number.POSITIVE_INFINITY;
				a.forEach(function (a, c) {
					a > g && (g = a);
					a < h && (h = a);
					b += a
				});
				b -= c;
				e = b / 6;
				f = 0 === e && 0 === c ? 0 : 0 === e ? 100 : Math.round(100 * ((c - e) / e));
				return {
					current: d,
					growth: f,
					highest: g === Number.NEGATIVE_INFINITY ? 0 : g,
					lowest: h === Number.POSITIVE_INFINITY ? 0 : h,
					sum: b,
					average: e,
					l24h: c
				}
			}, loadHistorialData: function (a, c) {
				var d, b, e = this;
				a && this.set("historical.from", a);
				c && this.set("historical.to", c);
				this.set("historical.status", "LOADING");
				d = Date.UTC(this.historical.from.getFullYear(), this.historical.from.getMonth(), this.historical.from.getDate());
				b = Date.UTC(this.historical.to.getFullYear(), this.historical.to.getMonth(), this.historical.to.getDate());
				socketConnector.getDailyStats({from: d, to: b, count: 365, merge: !0}, function (a, b) {
					var c = [], d = [], l = [], m = [], n = [], p = [];
					if (a) return e.set("historical.status", "ERROR");
					b.forEach(function (a, b) {
						-1 === c.indexOf(a.tm) && (c.push(a.tm), d[b] = 0, l[b] = 0, m[b] = 0, n[b] = 0);
						d[b] += a.cs + a.msc;
						l[b] += a.pv;
						m[b] += a.v;
						n[b] +=
							a.uv
					});
					for (var q = 0, r = c.length; q < r; q++) p.push([new Date(c[q]), d[q], l[q], m[q], n[q]]);
					e.set("historical.data", p);
					e.set("historical.status", "LOADED")
				})
			}
		});
	Tawk.DashboardFeedsController = Ember.Controller.extend({
		feedsList: [], errorOnLoad: !1, loadFeeds: function () {
			var a = this;
			this.set("feedsList", []);
			a.set("errorOnLoad", !1);
			$.ajax({
				url: "https://proxy.tawk.to/feed", dataType: "json", success: function (c) {
					c ? c.forEach(function (c) {
						a.feedsList.pushObject({title: c.title[0], link: c.link[0]})
					}) : a.set("errorOnLoad", !0)
				}
			})
		},
		clearList: function () {
			this.feedsList.clear()
		}
	});
	Tawk.HistoryInterface = Ember.Mixin.create({
		getCopyFormat: function (a) {
			var c;
			a && (c = conversationProcess.convertTransciptToCopyFormat(a.c, a.n, a.startedOn), a.set("copyFormat", c))
		}, printTranscript: function (a) {
			a && (a = conversationProcess.convertTransciptToPrintFormat(a.c, a.n, a.startedOn), Tawk.intercomController.execute("trackEvent", {eventType: "printed-chat-history"}), printChatTranscript(a))
		}, emailTranscript: function (a, c, d) {
			var b = null;
			c && (c.isAgentChat && (b = moment().zone()),
				socketConnector.emailTranscript(a, c.pgid, c.chatId, b, d))
		}, loadTranscript: function (a, c, d) {
			socketConnector.getChat(c, a, function (b, e) {
				var f, g = {};
				if (b || !e || !e.c) return d(null);
				Tawk.intercomController.execute("trackEvent", {eventType: "viewed-history"});
				g = e;
				g.startedOn = moment(e.so || e.cso).format("dddd, MMMM D YYYY, HH:mm");
				g.countryFlag = e.cc ? "flag flag-" + e.cc.toLowerCase() : "";
				g.browser = e.bw ? e.bw + "-browser sprite-background" : "";
				g.operatingSystem = e.os ? e.os + "-os sprite-background" : "";
				g.enteredTime = e.so ? languageParser.translate("visitors",
					"entered_time", {enteredTime: moment(e.so).format("HH:mm:ss")}) : null;
				g.chatId = a;
				g.isAgentChat = "agent" === e.t;
				e.rf && (g.referrer = languageParser.translate("history", "navigated_from", {url: '<a href="' + e.rf + '" title="' + e.rf + '" target="_blank">' + encodeStr(e.rf) + "</a>"}));
				"v" === e.t && (g.departmentName = Tawk.C.pages.getDepartmentName(c, e.dpt));
				g.isAgentChat ? (f = conversationProcess.processAgentHistory(e), g.conversationEndedTime = e.ceo, g.hasOlder = !0, g.hasNewer = !0) : (f = conversationProcess.processHistory(e.c, e.n, !1, e.ceo),
				e.attr && (g.customAttributes = [], Object.keys(e.attr).forEach(function (a) {
					null !== e.attr[a] && g.customAttributes.pushObject({
						key: beautifyAPIKey(a),
						value: beautifyAPIValue(e.attr[a])
					})
				})), e.tags && (g.customTags = decodeStr(e.tags.join(", "))));
				g.messages = f.transcriptData;
				g.timeline = f.timeline;
				d(g)
			})
		}, banVisitor: function (a, c, d, b) {
			var e = 0, f = 1, g = function (a) {
				if (a) return b(a);
				e++;
				if (e === f) return b()
			};
			c && (f = 2, socketConnector.banVisitorByIp(d.pgid, d.ip, a, g));
			socketConnector.banVisitor(d.pgid, d.nvid || d.vid, a, g)
		}
	});
	Tawk.HistoryController = Ember.Controller.extend(Tawk.HistoryInterface, {
		historyList: null,
		modalTranscriptData: null,
		newHistoryList: null,
		totalHistory: 0,
		currentTotal: 0,
		confirmation: !1,
		initialize: function () {
			var a = this;
			this.set("listenOnNewHistory", function (c) {
				a.storeNewHistory(c)
			});
			socketConnector.socket.on("newHistoryEntry", this.listenOnNewHistory);
			this.set("totalHistory", 0);
			this.set("currentTotal", 0);
			this.set("historyList", []);
			this.set("queryData", {
				pageId: "", agentId: "", limit: 50, visitorName: "", messageCount: "",
				conversionFacet: !1
			});
			this.set("historyList", []);
			this.set("modalTranscriptData", null);
			this.set("newHistoryList", []);
			this.set("isLoading", !0)
		},
		loadList: function (a, c) {
			var d, b = this;
			a = a || function () {
			};
			if (0 < this.totalHistory && this.totalHistory === this.currentTotal) return this.set("isLoading", !1), a();
			this.set("queryData.from", this.currentTotal);
			c && this.set("queryData.limit", c);
			d = moment();
			socketConnector.loadVisitorChatHistory(this.queryData, function (c, f) {
				if (c) return b.set("isLoading", !1), a(c);
				f.hits.forEach(function (a) {
					var c =
						Tawk.webProperties.getProperty(a.pgid), e = moment(a.ceo);
					e.isSame(d, "day") ? a.time = e.format("HH:mm") : e.isSame(d, "year") ? a.time = e.format("DD/MMM") : a.time = e.format("DD/MMM/YYYY");
					a.cd = moment.duration(1E3 * a.cd).humanize();
					a.agentsName = Tawk.agentsController.getAgentsName(a.a).join(", ");
					a.propertyName = c ? c.propertyName : "";
					a.countryFlag = a.cc && "ukn" !== a.cc ? "flag flag-" + a.cc.toLowerCase() : "flag-ukn";
					a.canBeDeleted = c ? c.isAdmin : !1;
					b.historyList.pushObject(Ember.Object.createWithMixins(a))
				});
				b.set("totalHistory",
					f.total);
				b.set("currentTotal", b.historyList.length);
				b.set("isLoading", !1);
				a()
			})
		},
		loadVisitor: function (a, c, d) {
			if (this.modalTranscriptData && this.modalTranscriptData.visitor && this.modalTranscriptData.vid === a) return d(this.modalTranscriptData.visitor);
			socketConnector.getVisitorInfo(a, c, function (a, c) {
				if (a) return d(null);
				c.lastVisitDate = c.lvd ? languageParser.translate("visitors", "last_visit", {lastVisitDate: moment(c.lvd).fromNow()}) : null;
				c.lastChatAgent = c.lci && c.lci.aid.length ? decodeStr(Tawk.agentsController.getName(c.lci.aid[0])) :
					null;
				c.lastChatDate = c.lci && c.lastChatAgent ? moment(c.lci.tm).fromNow() : null;
				c.notesUpdatedOn = c.ldub ? moment(c.ldub.uo).format("D MMM YYYY") : null;
				c.notesUpdatedBy = c.ldub ? decodeStr(Tawk.agentsController.getName(c.ldub.aid)) : null;
				c.n = decodeStr(c.n);
				c.ns = decodeStr(c.ns);
				return d(c)
			})
		},
		getCopyFormat: function () {
			this._super(this.modalTranscriptData)
		},
		printTranscript: function () {
			this._super(this.modalTranscriptData)
		},
		getTranscriptData: function (a, c) {
			var d, b = this;
			if (this.modalTranscriptData && this.modalTranscriptData.chatId ===
				a) return c();
			d = this.historyList.findProperty("_id", a);
			this.loadTranscript(a, d.pgid, function (a) {
				if (!a) return c(!0);
				if (a.isAgentChat) b.loadAgentChatDetails(a, function (d) {
					a.visitor = d;
					b.set("modalTranscriptData", Ember.Object.create(a));
					return c()
				}); else {
					d.vid = a.vid;
					if (null === d.nvid) return logger({
						message: "History nvid is null",
						stack: JSON.stringify(d)
					}), c(!0);
					b.loadVisitor(d.nvid, d.pgid, function (d) {
						a.visitor = d;
						socketConnector.getGeoLocation([a.ip], function (d, f) {
							!d && f.length && (a.latitude = f[0].latitude,
								a.longitude = f[0].longitude);
							b.set("modalTranscriptData", Ember.Object.create(a));
							return c()
						})
					})
				}
			})
		},
		emailTranscript: function (a, c) {
			this._super(a, this.modalTranscriptData, c)
		},
		banVisitor: function (a, c, d) {
			var b = this;
			this._super(a, c, this.modalTranscriptData, function (a) {
				a || b.set("modalTranscriptData.visitor.b", !0);
				d(a)
			})
		},
		loadOlder: function (a) {
			var c, d = this,
				b = {before: this.modalTranscriptData.olderConversationEndedTime ? this.modalTranscriptData.olderConversationEndedTime : this.modalTranscriptData.conversationEndedTime};
			if (!this.modalTranscriptData.hasOlder) return a();
			socketConnector.getAgentConversationHistory(this.modalTranscriptData.pgid, this.modalTranscriptData.cah, b, function (b, f) {
				if (b || !f) return d.set("modalTranscriptData.hasOlder", !1), a();
				c = conversationProcess.processAgentHistory(f);
				d.set("modalTranscriptData.olderConversationEndedTime", f[0].ceo);
				d.set("modalTranscriptData.messages", c.modalTranscriptData.concat(d.modalTranscriptData.messages));
				a()
			})
		},
		loadNewer: function (a) {
			var c, d = this, b = {
				after: this.modalTranscriptData.newerConversationEndedTime ?
					this.modalTranscriptData.newerConversationEndedTime : this.modalTranscriptData.conversationEndedTime
			};
			if (!this.modalTranscriptData.hasNewer) return a();
			socketConnector.getAgentConversationHistory(this.modalTranscriptData.pgid, this.modalTranscriptData.cah, b, function (b, f) {
				if (b || !f) return d.set("modalTranscriptData.hasNewer", !1), a();
				c = conversationProcess.processAgentHistory(f);
				d.set("modalTranscriptData.newerConversationEndedTime", f[f.length - 1].ceo);
				d.set("modalTranscriptData.messages", d.modalTranscriptData.messages.concat(c.modalTranscriptData));
				a()
			})
		},
		searchHistory: function (a, c) {
			var d, b = this, e = [];
			a.from = 0;
			this.set("queryData", a);
			this.set("totalHistory", 0);
			this.set("currentTotal", 0);
			this.set("historyList", []);
			this.set("modalTranscriptData", null);
			this.set("isSearchResults", !0);
			d = moment();
			socketConnector.searchVisitorChatHistory(this.queryData, function (a, g) {
				if (a) return c();
				Tawk.intercomController.execute("trackEvent", {eventType: "searched-history"});
				g.hits.forEach(function (a) {
					var b = Tawk.webProperties.getProperty(a.pgid), c = moment(a.ceo);
					c.isSame(d,
						"day") ? a.time = c.format("HH:mm") : c.isSame(d, "year") ? a.time = c.format("DD/MMM") : a.time = c.format("DD/MMM/YYYY");
					a.cd = moment.duration(1E3 * a.cd).humanize();
					a.agentsName = Tawk.agentsController.getAgentsName(a.a).join(", ");
					a.propertyName = b ? b.propertyName : "";
					a.canBeDeleted = b ? b.isAdmin : !1;
					a.countryFlag = a.cc && "ukn" !== a.cc ? "flag flag-" + a.cc.toLowerCase() : "flag-ukn";
					e.pushObject(Ember.Object.createWithMixins(a))
				});
				b.set("historyList", e);
				b.set("totalHistory", g.total);
				b.set("currentTotal", e.length);
				c()
			})
		},
		storeNewHistory: function (a) {
			this.isSearchResults ?
				this.queryData.queryString || (this.queryData.pageId === a.pgid || -1 !== a.a.indexOf(this.queryData.agentId) || this.queryData.conversionKey === a.ck || this.queryData.messageCount <= a.cmc) && this.newHistoryList.pushObject(a) : this.newHistoryList.pushObject(a)
		},
		retrieveNewHistory: function () {
			var a = this, c = moment();
			this.newHistoryList.forEach(function (d) {
				var b = Tawk.webProperties.getProperty(d.pgid), e = moment(d.ceo);
				e.isSame(c, "day") ? d.time = e.format("HH:mm") : e.isSame(c, "year") ? d.time = e.format("DD/MMM") : d.time = e.format("DD/MMM/YYYY");
				d.cd = moment.duration(1E3 * d.cd).humanize();
				d.agentsName = Tawk.agentsController.getAgentsName(d.a).join(", ");
				d.propertyName = b ? b.propertyName : "";
				d.countryFlag = d.cc && "ukn" !== d.cc ? "flag flag-" + d.cc.toLowerCase() : "flag-ukn";
				d.canBeDeleted = b ? b.isAdmin : !1;
				a.historyList.insertAt(0, Ember.Object.create(d))
			});
			this.newHistoryList.clear()
		},
		removeEvent: function () {
			"function" === typeof this.listenOnNewHistory && socketConnector.socket.removeListener("newHistoryEntry", this.listenOnNewHistory);
			socketConnector.unsubscribeVisitorChatHistory()
		},
		hasHistoryToDelete: function () {
			var a = this.get("historyList");
			return a ? a.filterProperty("toBeDeleted", !0).get("length") : !1
		}.property("historyList.@each.toBeDeleted"),
		toggleDelete: function (a) {
			(a = this.historyList.findProperty("_id", a)) && (a.toBeDeleted ? a.set("toBeDeleted", !1) : a.set("toBeDeleted", !0))
		},
		setListPropertyToValue: function (a, c) {
			this.historyList.setEach(a, c)
		},
		deleteSingleItem: function (a) {
			var c, d = this;
			if (!this.modalTranscriptData) return a(!0);
			this.setListPropertyToValue("toBeDeleted", !1);
			c = this.historyList.findProperty("_id",
				this.modalTranscriptData.chatId);
			c.set("toBeDeleted", !0);
			this.deleteItems(function (b) {
				d.modalTranscriptData || (b = !1);
				b && c.set("toBeDeleted", !1);
				Tawk.confirmDeleteView.checkBeforeClose(b);
				return a(b)
			})
		},
		deleteItems: function (a) {
			var c = this, d = [], b = this.historyList.filterProperty("toBeDeleted", !0);
			a = a || function () {
			};
			if (0 === b.length) return a(!0);
			b.forEach(function (a) {
				d.push({pageId: a.pgid, conversationId: a._id})
			});
			socketConnector.deleteHistory(d, function (b, d) {
				var g;
				if (b) return a(!0);
				Tawk.intercomController.execute("trackEvent",
					{eventType: "deleted-chat-history"});
				d.forEach(function (b) {
					g = c.historyList.findProperty("_id", b.conversationId);
					if (!g) return a(!0);
					c.historyList.removeObject(g);
					c.modalTranscriptData && g._id === c.modalTranscriptData.chatId && c.set("modalTranscriptData", null)
				});
				return a()
			})
		},
		getMonthWithGoodFormat: function () {
			return "function" === typeof Language.momentjs.monthsShort ? Language.momentjs.monthsShortWithoutDots : Language.momentjs.monthsShort
		},
		clearList: function () {
			this.historyList.clear();
			this.newHistoryList.clear();
			this.set("modalTranscriptData", null)
		}
	});
	var ConversationProcess = function () {
		this.linkRegex = RegExp('(?:^(?:(?:[a-z]+:)?//)?(?:\\S+(?::\\S*)?@)?(?:localhost|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#][^\\s"]*)?$)', "i");
		this.agentBlockTemplate = Handlebars.compile('<div class="conversation-block"><p class="agent-name" agent="{{uid}}">{{{name}}}</p></div><div class="clear"></div>');
		this.visitorBlockTemplate = Handlebars.compile('<div class="conversation-block visitor"><p class="visitor-name">{{{name}}}</p></div><div class="clear"></div>');
		this.serverBlockTemplate = Handlebars.compile('<div class="conversation-block"><p class="">{{{name}}}</p></div><div class="clear"></div>');
		this.notificationBlockTemplate = Handlebars.compile('<div class="conversation-participant"><div class="msg-time">{{time}}</div><div class="conversation-content italic">{{I18n message context="visitors" variables=templateVars}}</div></div><div class="clear"></div>');
		this.eventBlockTemplate = Handlebars.compile('<div class="conversation-participant"><div class="msg-time">{{time}}</div><div class="conversation-content italic"><i class="fa  fa-bullhorn"></i> {{eventName}}</div><ul class="event-data">{{#each eventData}}<li>{{key}} : {{{value}}}</li>{{/each}}</ul></div><div class="clear"></div>');
		this.whisperBlockTemplate = Handlebars.compile('<div class="conversation-block whisper-message"><p class="agent-name">{{{name}}}</p></div><div class="clear"></div>')
	};
	ConversationProcess.prototype.addToMesssageBlock =
		function (a, c, d, b) {
			var e = this.parseText(a.m), f = null, g = null, h = a.co ? moment(a.co).format("HH:mm") : null;
			"a" === a.ut && (d = Tawk.agentsController.getAgentNameForMessage(a));
			d = encodeStr(decodeStr(d));
			if ("n" === a.t) {
				if ("AGENT_JOIN_CONVERSATION" === a.m || "AGENT_LEFT_CONVERSATION" === a.m) {
					if (a.uid === Tawk.userController.user.id) return;
					f = this.createNotificationMessageBlock({name: "<b>" + d + "</b>"}, h, a.m)
				} else "VISITOR_POSITIVE_RATING" === a.m || "VISITOR_NEGATIVE_RATING" === a.m || "VISITOR_REMOVED_RATING" === a.m ? f = this.createNotificationMessageBlock({rating: a.md.rt},
					moment(a.co).format("HH:mm"), a.m) : "VISITOR_NAVIGATION" === a.m ? f = this.createNavigationNotificationMessageBlock({
					pu: a.md.pu,
					pt: a.md.pt
				}, moment(a.co).format("HH:mm"), a.m) : "min" === a.m || "max" === a.m || "pop" === a.m || "pop_in" === a.m || "resize" === a.m ? f = this.createNotificationMessageBlock({}, h, a.m) : "EVENT" === a.m ? f = this.createEventMessageBlock(a.md, h) : "WEBRTC_SESSION_MISSED" === a.m ? (e = "a" === a.ut ? "VISITOR_WEBRTC_SESSION_MISSED" : "AGENT_WEBRTC_SESSION_MISSED", f = this.createNotificationMessageBlock({name: d ? d : a.n}, h, e)) :
					"WEBRTC_SESSION_JOINED" === a.m ? ("a" === a.ut ? (e = "AGENT_WEBRTC_SESSION_JOINED", d = "<b>" + (d ? d : a.n) + "</b>") : (e = "VISITOR_WEBRTC_SESSION_JOINED", d = d ? d : a.n), f = this.createNotificationMessageBlock({name: d}, h, e)) : "WEBRTC_SESSION_REJECTED" === a.m ? ("a" === a.ut ? (e = "AGENT_WEBRTC_SESSION_REJECTED", d = "<b>" + (d ? d : a.n) + "</b>") : e = "VISITOR_WEBRTC_SESSION_REJECTED", f = this.createNotificationMessageBlock({name: d}, h, e)) : "WEBRTC_SESSION_LEFT" == a.m ? ("a" === a.ut ? (e = "AGENT_WEBRTC_SESSION_LEFT", d = "<b>" + (d ? d : a.n) + "</b>") : e = "VISITOR_WEBRTC_SESSION_LEFT",
						f = this.createNotificationMessageBlock({name: d}, h, e)) : f = this.createNotificationMessageBlock({name: d ? d : a.n}, h, e);
				c = null
			} else if ("s" === a.ut) d = a.n + " (" + languageParser.translate("visitors", "system_message", {}, translation) + ")", f = this.createChatMessageBlock(d, a.ut), g = $('<div class="msg-time">' + h + '</div><div class="conversation-content">' + e + "</div>"), c = null; else if ("WEBRTC_SESSION_REQUESTED" === a.m) f = "a" === a.ut ? this.createNotificationMessageBlock({name: "<b>" + d + "</b>"}, h, "AGENT_WEBRTC_SESSION_REQUESTED") : this.createNotificationMessageBlock({
				name: d ?
					d : a.n
			}, h, "VISITOR_WEBRTC_SESSION_REQUESTED"), c = null; else {
				g = a.md && a.md.file ? this.parseUpload(a.md.file, b) : $('<div class="conversation-content">' + e + "</div>");
				if (!c || c.id !== a.uid || c.ut !== a.ut || a.md && a.md.rsc && c.rsc !== a.md.rsc || c.ao && (!a.md || !a.md.ao) || !c.ao && a.md && a.md.ao) f = a.md && a.md.ao ? $(this.whisperBlockTemplate({name: d})) : this.createChatMessageBlock(d ? d : a.n, a.ut, a.uid), c = {
					id: a.uid,
					rsc: a.md && a.md.rsc ? a.md.rsc : null,
					ut: a.ut,
					block: f,
					ao: a.md && a.md.ao ? a.md.ao : null
				};
				if (h && c) {
					if (!c.timeVal || c.timeVal && c.timeVal !==
						h) g = $('<div class="msg-time">' + h + "</div>").add(g), c.timeVal = h
				} else g = $('<div class="msg-time"><div class="small-transparent-spinner"></div></div>').add(g)
			}
			return {newBlock: f, newRow: g, lastBlock: c}
		};
	ConversationProcess.prototype.parseUpload = function (a, c) {
		var d = formatFileSize(a.size), b = GLOBAL_FILE_STORAGE_URL + "/" + a.name, e = null;
		a.fileName = encodeStr(decodeStr(a.fileName));
		e = $('<div class="conversation-content padding-10"><p class="uploaded-file-name">' + a.fileName + '</p><a class="download-file" href="' + b +
			'" title="' + languageParser.translate("generic", "download_file") + '" target="_blank">' + d + ' <span style="text-transform: uppercase">' + a.type + '</span> <i class="fa fa-download"></i></a></div>');
		-1 !== ["jpeg", "png", "gif"].indexOf(a.type) && 2E6 >= a.size ? c ? $('<img class="uploaded-image" src="' + b + '"/>').insertAfter(e.find(".uploaded-file-name")) : ($('<div class="loader" style="background : url(' + GLOBAL_STATIC_URL + '/images/ajax-loader-big.gif); background-repeat: no-repeat; background-position: center; display: block; width : 60px; height : 60px;"></div>').insertAfter(e.find(".uploaded-file-name")),
			$('<img class="uploaded-image"/>').load(function () {
				e.parents("article").trigger("image-file-ready", {newRow: e, imageTag: $(this)})
			}).attr("src", b)) : -1 !== ["video/mp4", "video/ogg", "video/webm"].indexOf(a.mimeType) ? $('<video width="320px" height="auto" controls style="display: block;"><source src="' + b + '" type="' + a.mimeType + '"></source></video>').insertAfter(e.find(".uploaded-file-name")) : -1 !== ["audio/mp3", "audio/ogg"].indexOf(a.mimeType) && $('<audio controls style="display: block;"><source src="' + b + '" type="' +
			a.mimeType + '"></source></audio>').insertAfter(e.find(".uploaded-file-name"));
		return e
	};
	ConversationProcess.prototype.addToAgentMesssageBlock = function (a, c, d) {
		var b = this.parseText(a.m), e = null, f = null, g = a.co ? moment(a.co).format("HH:mm") : null,
			f = $('<div class="msg-time">' + (g ? g : '<div class="small-transparent-spinner"></div>') + '</div></div><div class="conversation-content">' + b + "</div>");
		c && c.id === a.uid ? g && c && (f = c.timeVal && c.timeVal === g ? $('<div class="conversation-content">' + b + "</div>") : $('<div class="msg-time">' +
			(g ? g : '<div class="small-transparent-spinner"></div>') + '</div></div><div class="conversation-content">' + b + "</div>")) : (e = this.createChatMessageBlock(d ? d : a.n, a.ut, a.uid), c = {
			id: a.uid,
			rsc: a.md && a.md.rsc ? a.md.rsc : null,
			ut: a.ut,
			block: e
		});
		g && c && (c.timeVal = g);
		return {newBlock: e, newRow: f, lastBlock: c}
	};
	ConversationProcess.prototype.createChatMessageBlock = function (a, c, d) {
		return "a" === c ? $(this.agentBlockTemplate({
			name: a,
			uid: d
		})) : "s" === c ? $(this.serverBlockTemplate({name: a})) : $(this.visitorBlockTemplate({name: a}))
	};
	ConversationProcess.prototype.createNotificationMessageBlock = function (a, c, d) {
		a = JSON.stringify(a);
		return $(this.notificationBlockTemplate({message: d, templateVars: a, time: c}))
	};
	ConversationProcess.prototype.createNavigationNotificationMessageBlock = function (a, c, d) {
		a.url = a.pt ? this.parseUrlWithTitle(a.pu, a.pt) : this.parseUrl(a.pu);
		a = JSON.stringify(a);
		return $(this.notificationBlockTemplate({message: d, templateVars: a, time: c}))
	};
	ConversationProcess.prototype.createEventMessageBlock = function (a, c) {
		var d = this.parseEventData(a.eventData),
			b = beautifyAPIKey(a.event);
		return $(this.eventBlockTemplate({eventName: b, eventData: d, time: c}))
	};
	ConversationProcess.prototype.parseEventData = function (a) {
		var c = [];
		a && Object.keys(a).forEach(function (d) {
			c.push({key: beautifyAPIKey(d), value: beautifyAPIValue(a[d])})
		});
		return c
	};
	ConversationProcess.prototype.parseText = function (a) {
		var c = /\[option\]/g, d = /\n/g;
		if ("undefined" !== typeof a || null !== a) a = a.toString();
		return "string" === typeof a ? (a = a.replace(c, '<input type="radio" disabled="disabled" class="survey-option"/>'),
			a = a.replace(d, "<br/>"), a = this.createUrl(a.split(/\s/), " "), a = emojione.toImage(a)) : ""
	};
	ConversationProcess.prototype.createUrl = function (a, c) {
		var d, b = this, e = /^((mailto:){0,1}[a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]+)$/,
			f = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?\/([a-zA-Z0-9!$&'()*+.=-_~:@\/\?#]+)+)\b/gi;
		a.forEach(function (c, h) {
			-1 !== c.indexOf("<br/>") ? (d = c.split(/<br\/>/),
				c = b.createUrl(d, "<br/>")) : c.match(e) ? c = c.replace(e, b.parseEmail) : (c = c.replace(b.linkRegex, b.parseUrl), c = c.replace(f, b.parseUrl));
			a[h] = c
		});
		return a.join(c)
	};
	ConversationProcess.prototype.parseEmail = function (a) {
		var c = "";
		if (emojione.toImage(a) !== a) return a;
		-1 === a.indexOf("mailto:") && (c = "mailto:");
		return '<a href="' + (c + a) + '" title="' + (c + a) + '">' + a + "</a> "
	};
	ConversationProcess.prototype.parseUrl = function (a) {
		var c = "";
		if (emojione.toImage(a) !== a) return a;
		0 !== a.toLowerCase().indexOf("http") && 0 !== a.toLowerCase().indexOf("ftp") &&
		(c = "http://");
		return -1 !== a.indexOf(window.location.host + "/#/") ? '<a href="' + a + '" class="change-route">' + a + "</a> " : '<a target="_blank" href="' + (c + a) + '" title="' + (c + a) + '">' + a + "</a> "
	};
	ConversationProcess.prototype.parseUrlWithTitle = function (a, c) {
		if (-1 === a.indexOf("http") || 0 < a.indexOf("http")) a = "http://" + a;
		return '<a target="_blank" href="' + a + '" title="' + a + '">' + (c ? encodeStr(c) : a) + "</a> "
	};
	ConversationProcess.prototype.processAgentPresence = function (a, c, d, b) {
		var e = a.uid + a.md.rsc, f = c[e];
		if (f) {
			if (f.seqTime >
				a.md.seq.time || f.seqTime === a.md.seq.time && f.seqInc > a.md.seq.inc) return;
			d[e].seqTime = a.md.seq.time;
			d[e].seqInc = a.md.seq.inc
		} else d[e] = {aid: a.uid, rsc: a.md.rsc, seqTime: a.md.seq.time, seqInc: a.md.seq.inc};
		"AGENT_JOIN_CONVERSATION" === a.m ? (d = {
			displayName: a.n,
			aliasId: a.md.pid,
			aliasImage: a.md.pi,
			positionTitle: a.md.pst
		}, c[e] = {
			displayName: a.n,
			aliasId: a.md.pid
		}, b[d.aliasId] = d) : "AGENT_LEFT_CONVERSATION" === a.m && delete c[e]
	};
	ConversationProcess.prototype.convertTransciptToCopyFormat = function (a, c, d) {
		a = this.processHistoryToText(a,
			c, d);
		a = decodeStr(a);
		a = a.replace(/<b>|<\/b>/g, "");
		a = a.replace(/<i>|<\/i>/g, "");
		a = a.replace(/<br \/>/g, "\r\n");
		return a = a.replace(/&emsp;/g, "\t")
	};
	ConversationProcess.prototype.convertTransciptToPrintFormat = function (a, c, d) {
		return this.processHistoryToText(a, c, d, !0)
	};
	ConversationProcess.prototype.processHistory = function (a, c, d, b) {
		var e, f, g = !1, h = null, k = {}, l = {}, m = {}, n = [], p = [], q = this, r = 1, s = [];
		a.forEach(function (a) {
			var b;
			if ("n" === a.t) if ("a" === a.ut && ("AGENT_JOIN_CONVERSATION" === a.m || "AGENT_LEFT_CONVERSATION" ===
					a.m)) d && conversationProcess.processAgentPresence(a, k, l, m); else {
				if ("v" === a.ut) if ("CHAT_ENDED" === a.m) d && (k = {}, l = {}), h = !1, g = !0, r++, p.insertAt(0, {
					title: languageParser.translate("visitors", "chat_end"),
					time: moment(a.co).format("HH:mm")
				}); else if ("VISITOR_NAVIGATION" === a.m) if (!f || f && f !== a.md.pu) {
					if (!a.md.pu || -1 !== a.md.pu.indexOf("static.tawk")) return;
					f = a.md.pu;
					d && (a.md.pt = decodeStr(a.md.pt));
					p.insertAt(0, {
						title: languageParser.translate("visitors", a.m, {url: q.parseUrlWithTitle(a.md.pu, a.md.pt)}),
						time: moment(a.co).format("HH:mm")
					})
				} else {
					if ("VISITOR_NAVIGATION" ===
						a.m && f === a.md.pu) return
				} else "VISITOR_RATING" === a.m ? (a.m = 0 === a.md.rt ? "VISITOR_REMOVED_RATING" : 1 === a.md.rt ? "VISITOR_POSITIVE_RATING" : "VISITOR_NEGATIVE_RATING", p.insertAt(0, {
					title: languageParser.translate("visitors", a.m),
					time: moment(a.co).format("HH:mm")
				})) : "EVENT" === a.m && p.insertAt(0, {
					title: beautifyAPIKey(a.md.event),
					time: moment(a.co).format("HH:mm"),
					data: q.parseEventData(a.md.eventData)
				})
			} else g = !1;
			h || ("c" !== a.t || "s" === a.ut) || (h = !0, p.insertAt(0, {
				title: languageParser.translate("visitors", "chat_started"),
				time: moment(a.co).format("HH:mm")
			}));
			d || (a.m = encodeStr(a.m));
			"WEBRTC_SESSION_REQUESTED" === a.m ? p.insertAt(0, {
				title: languageParser.translate("visitors", "a" === a.ut ? "AGENT_WEBRTC_SESSION_REQUESTED" : "VISITOR_WEBRTC_SESSION_REQUESTED", {name: a.n}),
				time: moment(a.co).format("HH:mm")
			}) : "WEBRTC_SESSION_JOINED" === a.m || "WEBRTC_SESSION_MISSED" === a.m ? p.insertAt(0, {
				title: languageParser.translate("visitors", "a" === a.ut ? "AGENT_" + a.m : "VISITOR_" + a.m, {name: a.n}),
				time: moment(a.co).format("HH:mm")
			}) : "WEBRTC_SESSION_REJECTED" ===
			a.m && a.uid === Tawk.userController.user.id ? p.insertAt(0, {
				title: languageParser.translate("visitors", "a" === a.ut ? "AGENT_" + a.m : "VISITOR_" + a.m, {name: a.n}),
				time: moment(a.co).format("HH:mm")
			}) : "WEBRTC_SESSION_LEFT" !== a.m || a.uid !== Tawk.userController.user.id && "v" !== a.ut || p.insertAt(0, {
				title: languageParser.translate("visitors", "a" === a.ut ? "AGENT_" + a.m : "VISITOR_" + a.m, {name: a.n}),
				time: moment(a.co).format("HH:mm")
			});
			if ("WEBRTC_CALL" === a.m && a.md && a.md.webrtc) return b = $(HandlebarsTemplates.callDetailsView({callId: a.md.clid})),
				d ? n.pushObject(b) : n.pushObject(b[0].outerHTML), s.pushObject({
				callId: a.md.clid,
				callView: b
			}), e = null;
			b = conversationProcess.addToMesssageBlock(a, e, c, !0);
			if ("n" === a.t || "WEBRTC_SESSION_REQUESTED" === a.m) return e && (d ? n.pushObject(e.block) : n.pushObject(e.block[0].outerHTML)), b && b.newBlock && (d ? n.pushObject(b.newBlock) : n.pushObject(b.newBlock[0].outerHTML)), e = null;
			if ("s" === a.ut) return e && (d ? n.pushObject(e.block) : n.pushObject(e.block[0].outerHTML)), b.newBlock.first().append(b.newRow), e = b.lastBlock, d ? n.pushObject(b.newBlock) :
				n.pushObject(b.newBlock[0].outerHTML), e;
			b.newBlock ? (e && (d ? n.pushObject(e.block) : n.pushObject(e.block[0].outerHTML)), b.newBlock.first().append(b.newRow), e = b.lastBlock) : !b.newBlock && e && (e.id === a.uid && ("a" === a.ut || a.md && a.md.rsc && b.lastBlock.rsc === a.md.rsc || "v" === a.ut) && e.ut === a.ut) && e.block.first().append(b.newRow)
		});
		e && e.block && (d ? n.pushObject(e.block) : n.pushObject(e.block[0].outerHTML));
		g || d || (p.insertAt(0, {
			title: languageParser.translate("visitors", "chat_end"),
			time: moment(b).format("HH:mm")
		}), g = !0);
		return {
			transcriptData: n,
			lastBlock: e,
			currentPageUrl: f,
			agentPrensence: k,
			agents: l,
			profiles: m,
			timeline: p,
			chatEnded: g,
			chatStarted: h,
			chatEndVersion: r,
			callInfo: s
		}
	};
	ConversationProcess.prototype.processHistoryToText = function (a, c, d, b) {
		var e, f = this, g = "";
		c = encodeStr(decodeStr(c));
		a.forEach(function (a) {
			var k;
			k = a.m;
			a.n = encodeStr(decodeStr(a.n));
			if ("WEBRTC_SESSION_REQUESTED" === a.m) a.m = "a" === a.ut ? "AGENT_WEBRTC_SESSION_REQUESTED" : "VISITOR_WEBRTC_SESSION_REQUESTED", k = languageParser.translate("visitors", a.m, {name: a.n});
			else if ("WEBRTC_SESSION_MISSED" === a.m) a.m = "a" === a.ut ? "VISITOR_WEBRTC_SESSION_MISSED" : "AGENT_WEBRTC_SESSION_MISSED", k = languageParser.translate("visitors", a.m, {name: a.n}); else if ("WEBRTC_SESSION_JOINED" === a.m) a.m = "a" === a.ut ? "AGENT_WEBRTC_SESSION_JOINED" : "VISITOR_WEBRTC_SESSION_JOINED", k = languageParser.translate("visitors", a.m, {name: a.n}); else if ("WEBRTC_SESSION_REJECTED" === a.m) a.m = "a" === a.ut ? "AGENT_WEBRTC_SESSION_REJECTED" : "VISITOR_WEBRTC_SESSION_REJECTED", k = languageParser.translate("visitors", a.m,
				{name: a.n}); else if ("WEBRTC_SESSION_LEFT" == a.m) a.m = "a" === a.ut ? "AGENT_WEBRTC_SESSION_LEFT" : "VISITOR_WEBRTC_SESSION_LEFT", k = languageParser.translate("visitors", a.m, {name: a.n}); else if ("WEBRTC_CALL" === a.m && a.md && a.md.webrtc) k = "Video/voice call started"; else if ("n" === a.t) {
				k = {name: a.n};
				if ("v" === a.ut) {
					if ("VISITOR_NAVIGATION" === a.m) {
						if (!e || e && e !== a.md.pu) {
							if (!a.md.pu || -1 !== a.md.pu.indexOf("static.tawk")) return;
							e = a.md.pu
						} else if ("VISITOR_NAVIGATION" === a.m && e === a.md.pu) return;
						k = {url: e}
					} else "VISITOR_RATING" ===
					a.m && (a.m = 0 === a.md.rt ? "VISITOR_REMOVED_RATING" : 1 === a.md.rt ? "VISITOR_POSITIVE_RATING" : "VISITOR_NEGATIVE_RATING");
					if ("VISITOR_REMOVED_RATING" === a.m || "VISITOR_POSITIVE_RATING" === a.m || "VISITOR_NEGATIVE_RATING" === a.m) k = {}
				}
				if (k = languageParser.translate("visitors", a.m, k)) k = k.replace(/<b>|<\/b>/g, ""), k = "<i>" + k + "</i>"
			} else {
				if (a.md && a.md.ao) return;
				k = "v" === a.ut ? "<i>" + c + "</i>" : "s" === a.ut ? a.n + " (" + languageParser.translate("visitors", "system_message") + ")" : "<b>" + a.n + "</b>";
				d || (d = moment(a.co).format("dddd, MMMM D YYYY, HH:mm"));
				k += " : ";
				k = a.md && a.md.file ? k + (GLOBAL_FILE_STORAGE_URL + "/" + a.md.file.name) : k + a.m
			}
			"EVENT" === a.m && (k = a.md.event, a.md.eventData && (k += "\n" + JSON.stringify(a.md.eventData)));
			k && (k = k.replace(/\n/g, "<br />"), k = k.replace(/\[option\]/g, "&emsp;*"), b && (k = f.parseText(k), a.md && a.md.file && (k += '<br/ ><img src="' + GLOBAL_FILE_STORAGE_URL + "/" + a.md.file.name + '" style="max-width: 200px; max-height :200px; border : 1px solid #ddd; margin : 3px 0;" />')), g += "[" + moment(a.co).format("HH:mm") + "] ", g += k + "<br />")
		});
		return g =
			d ? languageParser.translate("history", "conversation_started_on", {time: d}) + "<br />================================================================<br /><br />" + g : languageParser.translate("visitors", "no_conversation", {}) + "<br />================================================================<br /><br />" + g
	};
	ConversationProcess.prototype.processAgentHistory = function (a) {
		var c, d = null, b = null, e = [];
		Array.isArray(a) || (a = [a]);
		a.forEach(function (a) {
			a.c.forEach(function (a) {
				var f;
				a.ut = "a";
				f = conversationProcess.addToAgentMesssageBlock(a,
					c, name);
				b = moment(a.co).format("DD MMM YYYY");
				d && d === b || (e.pushObject('<div class="date-container"><div class="line"></div><div class="date">' + b + "</div></div>"), d = b);
				f.newBlock ? (c && e.pushObject(c.block[0].outerHTML), f.newBlock.first().append(f.newRow), c = f.lastBlock) : !f.newBlock && c && c.id === a.uid && c.block.first().append(f.newRow)
			});
			c && c.block && e.pushObject(c.block[0].outerHTML)
		});
		return {transcriptData: e, lastBlock: c}
	};
	ConversationProcess.prototype.processPreviousConversation = function (a, c, d, b) {
		var e, f,
			g = moment().endOf("day"), h = !1, k = !1;
		d && (e = d.split(":"), f = parseInt(e[1], 10), c[0].cid < e[0] && (e = null));
		d = b ? c : c.reverse();
		for (var l = 0; l < d.length; l++) {
			c = b ? d[l].c.reverse() : d[l].c;
			e && e[0] <= d[l].cid && (k = !0);
			for (var m = 0; m < c.length; m++) {
				var n, p, q, r, s;
				p = c[m];
				q = moment(p.co);
				p.m = this.parseText(p.m);
				dayDiff = g.diff(q, "days");
				n = 0 === dayDiff ? languageParser.translate("generic", "today") : 7 > dayDiff ? moment(p.co).format("dddd") : moment(p.co).format("DD MMM YYYY");
				r = a.findProperty("dayDiff", dayDiff);
				q = {
					m: p.m, t: moment(p.co).format("HH:mm"),
					timestamp: p.co, co: moment(p.co).format("HH:mm")
				};
				if (k && e[0] === d[l].cid && f === p.cv) {
					if (m !== c.length - 1 || m === c.length - 1 && l !== d.length - 1) q.isNew = !0;
					k = !1;
					h = !0;
					e = null
				}
				r ? (s = b ? r.inner.get("firstObject") : r.inner.get("lastObject"), s.agentId !== p.uid ? (s = {
					messages: [q],
					agentId: p.uid,
					firstTimestamp: p.co,
					agentName: p.uid === Tawk.userController.user.id ? "Me" : p.n
				}, b ? r.inner.insertAt(0, s) : r.inner.pushObject(s)) : b ? (p = s.messages.get("firstObject")) ? (p && p.t === q.t && (p.co = ""), s.messages.insertAt(0, q)) : s.messages.pushObject(q) :
					((p = s.messages.get("lastObject")) && p.t === q.co && (q.co = ""), s.messages.pushObject(q))) : (s = {
					messages: [q],
					agentId: p.uid,
					firstTimestamp: p.co,
					agentName: p.uid === Tawk.userController.user.id ? "Me" : p.n
				}, r = Ember.Object.create({
					date: n,
					inner: [s],
					dayDiff: dayDiff
				}), a.length && a.get("firstObject").dayDiff < dayDiff ? a.insertAt(0, r) : a.pushObject(r))
			}
		}
		return !k || h ? !1 : !0
	};
	ConversationProcess.prototype.processWebRTCCallBlock = function (a, c, d, b, e) {
		var f, g, h, k = !1, l = {}, m = {}, n = [], p = this;
		c = {callId: a, propertyId: c};
		e = e || function () {
		};
		if (!b && (d = $("#" + a), 0 === d.length)) return e();
		d.find(".loader").removeClass("hidden");
		d.find(".webrtc-error").addClass("hidden");
		d.find(".webrtc-info").addClass("hidden");
		socketConnector.getCallInfo(c, function (a, b) {
			a ? (d.find(".loader").addClass("hidden"), d.find(".webrtc-error").removeClass("hidden")) : (g = b.events.pop(), b.events.forEach(function (a) {
				var b;
				"joined" === a.t && "a" === a.p.t ? (b = Tawk.agentsController.getName(a.p.id), a.p.id === Tawk.userController.user.id && (k = !0), l[a.p.id] = b, delete m[a.p.id]) : "left" ===
					a.t && "a" === a.p.t && (a.p.id === Tawk.userController.user.id && (k = !1), b = l[a.p.id], m[a.p.id] = b, delete l[a.p.id])
			}), f = b.f.vid ? "fa-video-camera" : b.f.scrn ? "fa-desktop" : "fa-phone", b.so && moment(b.so).format("HH:mm"), h = {
				ver: b.ver,
				joinedParticipants: l,
				leftParticipants: m,
				startedOn: b.so,
				caller: b.cllr,
				isCurrentlyJoined: k,
				status: b.stts,
				isIgnored: !!b.ignr
			}, Object.keys(l).forEach(function (a) {
				a !== Tawk.userController.user.id && n.pushObject(l[a])
			}), d.find(".webrtc-call-type .fa").addClass(f), d.find(".loader").addClass("hidden"),
				n.length ? (d.find(".webrtc-call-participants-details").removeClass("hidden"), d.find(".webrtc-call-participants").html(n.join(", "))) : (d.find(".webrtc-call-participants-details").addClass("hidden"), d.find(".webrtc-call-participants").html("")), p.displayCallInformation(g, h, d), e(null, h))
		})
	};
	ConversationProcess.prototype.displayCallInformation = function (a, c, d) {
		var b, e, f = !1, g = [], h = !0;
		b = moment(c.startedOn);
		"joined" !== a.t && "left" !== a.t || "a" !== a.p.t ? "completed" === a.t ? (a.mssd || a.rjctd ? (e = a.rjctd ? languageParser.translate("visitors",
			"rejected_call") : languageParser.translate("visitors", ("v" === c.caller.t ? "agent_" : "visitor_") + "missed"), "a" === c.caller.t && d.find(".webrtc-call-end-details").html("Started by " + Tawk.agentsController.getName(c.caller.id)).removeClass("hidden"), a = languageParser.translate("visitors", "call_start_time", {time: b.format("HH:mm")}), d.find(".webrtc-call-end-details").html(a).removeClass("hidden"), d.find(".webrtc-call-header").addClass("missed"), d.find(".webrtc-call-participants-details").addClass("hidden"), d.find(".webrtc-call-participants").html("")) :
			(e = languageParser.translate("visitors", "completed_call"), h = moment(a.ts).from(moment(b), !0), a = languageParser.translate("visitors", "call_duration_details", {
				time: b.format("HH:mm"),
				duration: "<b>" + h + "</b>"
			}), Object.keys(c.joinedParticipants).forEach(function (a) {
				g.pushObject(c.joinedParticipants[a])
			}), Object.keys(c.leftParticipants).forEach(function (a) {
				g.pushObject(c.leftParticipants[a])
			}), d.find(".webrtc-call-end-details").html(a).removeClass("hidden"), d.find(".webrtc-call-participants-details").removeClass("hidden"),
				d.find(".webrtc-call-participants").html(g.join(", "))), h = !1) : "in-progress" === a.t ? e = languageParser.translate("visitors", "inprogress_call") : "ringing" === a.t && (h = "a" === c.caller.t && c.caller.id !== Tawk.userController.user.id ? !0 : !1, f = !0, e = languageParser.translate("visitors", ("a" === c.caller.t ? "agent_" : "visitor_") + "ringing"), a = languageParser.translate("visitors", "call_start_time", {time: b.format("HH:mm")}), d.find(".webrtc-call-end-details").html(a).removeClass("hidden")) : (b = Tawk.agentsController.getName(a.p.id),
			"joined" === a.t ? (a.p.id === Tawk.userController.user.id && (c.isCurrentlyJoined = !0), c.joinedParticipants[a.p.id] = b, delete c.leftParticipants[a.p.id]) : "left" === a.t && (a.p.id === Tawk.userController.user.id && (c.isCurrentlyJoined = !1), c.leftParticipants[a.p.id] = b, delete c.joinedParticipants[a.p.id]), Object.keys(c.joinedParticipants).forEach(function (a) {
			a !== Tawk.userController.user.id && g.pushObject(c.joinedParticipants[a])
		}), g.length ? (d.find(".webrtc-call-participants-details").removeClass("hidden"), d.find(".webrtc-call-participants").html(g.join(", "))) :
			(d.find(".webrtc-call-participants-details").addClass("hidden"), d.find(".webrtc-call-participants").html("")));
		f && c.isIgnored || h && !c.isCurrentlyJoined ? d.find(".webrtc-join-container").removeClass("hidden") : d.find(".webrtc-join-container").addClass("hidden");
		d.find(".webrtc-info").removeClass("hidden");
		d.find(".webrtc-call-header").html(e)
	};
	var conversationProcess = new ConversationProcess;
	Tawk.LiveMonitoringController = Ember.Controller.extend({
		initInitialTimeout: null,
		isSubscribed: !1,
		subscribedList: [],
		allUnansweredList: [],
		allServedList: [],
		urlMessageQueue: [],
		sitesList: [],
		pagesList: [],
		agentsList: [],
		countriesList: [],
		tagsList: [],
		totalChatRequest: 0,
		durationInterval: null,
		waitingSessions: [],
		filters: null,
		isLoading: !1,
		allCountriesIncluded: !0,
		allSitesIncluded: !0,
		allPagesIncluded: !0,
		allPropertiesIncluded: !0,
		allAgentsIncluded: !0,
		allTagsIncluded: !0,
		countriesDirectory: [],
		activeVisitors: [],
		hasActiveVisitors: !1,
		idleVisitors: [],
		hasIdleVisitors: !1,
		currentPage: 1,
		perpage: 50,
		currentList: [],
		maxListSize: 50,
		totalVisitorsCount: 0,
		servedList: [],
		unansweredList: [],
		pageCount: [],
		removeBucket1: [],
		removeBucket2: [],
		bucket1Processing: !1,
		bucket2Processing: !1,
		removeVisitorTimeout: null,
		initialListLoaded: null,
		callStatusWaitList: [],
		syncCallList: !1,
		init: function () {
			this.set("filters", {pages: null, countries: null, status: null, tags: null, agents: null});
			this.set("formattedFilter", null)
		},
		actions: {
			toggleCountrySelection: function (a) {
				if (a = this.countriesList.findProperty("id", a)) a.isSelected ? a.set("isSelected", !1) : a.set("isSelected", !0), this.isAllCountriesIncluded()
			},
			toggleAllCountries: function () {
				this.allCountriesIncluded ? (this.set("allCountriesIncluded", !1), this.countriesList.setEach("isSelected", !1)) : (this.set("allCountriesIncluded", !0), this.countriesList.setEach("isSelected", !0))
			}, toggleSiteSelection: function (a) {
				if (a = this.sitesList.findProperty("id", a)) a.isSelected ? a.set("isSelected", !1) : a.set("isSelected", !0), this.isAllSitesIncluded()
			}, togglePageSelection: function (a) {
				if (a = this.pagesList.findProperty("id", a)) a.isSelected ? a.set("isSelected", !1) : a.set("isSelected",
					!0), this.isAllPagesIncluded()
			}, toggleAllSites: function () {
				this.allSitesIncluded ? (this.set("allSitesIncluded", !1), this.sitesList.setEach("isSelected", !1)) : (this.set("allSitesIncluded", !0), this.sitesList.setEach("isSelected", !0))
			}, toggleAllPages: function (a) {
				this.allPagesIncluded ? (this.set("allPagesIncluded", !1), this.pagesList.setEach("isSelected", !1)) : (this.set("allPagesIncluded", !0), this.pagesList.setEach("isSelected", !0))
			}, toggleAllProperties: function () {
				this.allPropertiesIncluded ? (this.set("allPropertiesIncluded",
					!1), this.set("allSitesIncluded", !1), this.set("allPagesIncluded", !1), this.sitesList.setEach("isSelected", !1), this.pagesList.setEach("isSelected", !1)) : (this.set("allPropertiesIncluded", !0), this.set("allSitesIncluded", !0), this.set("allPagesIncluded", !0), this.sitesList.setEach("isSelected", !0), this.pagesList.setEach("isSelected", !0))
			}, toggleAllWidgetForSite: function (a) {
				if (a = this.sitesList.findProperty("id", a)) a.isAllWidgetSelected ? (a.set("isAllWidgetSelected", !1), a.widgetsList.setEach("isSelected", !1)) :
					(a.set("isAllWidgetSelected", !0), a.widgetsList.setEach("isSelected", !0))
			}, toggleWidgetSelectionForSite: function (a, c) {
				var d, b = this.sitesList.findProperty("id", c);
				b && b.widgetsList.length && (d = b.widgetsList.findProperty("id", a)) && (d.isSelected ? d.set("isSelected", !1) : d.set("isSelected", !0), b.widgetsList.isEvery("isSelected", !0) && b.set("isAllWidgetSelected", !0))
			}, toggleAllDepartment: function (a, c) {
				var d;
				if (d = "site" === c ? this.sitesList.findProperty("id", a) : this.pagesList.findProperty("id", a)) d.isAllDepartmentSelected ?
					(d.set("isAllDepartmentSelected", !1), d.departmentsList.setEach("isSelected", !1)) : (d.set("isAllDepartmentSelected", !0), d.departmentsList.setEach("isSelected", !0))
			}, toggleDepartmentSelection: function (a, c, d) {
				(c = "site" === d ? this.sitesList.findProperty("id", c) : this.pagesList.findProperty("id", c)) && c.departmentsList.length && (a = c.departmentsList.findProperty("id", a)) && (a.isSelected ? a.set("isSelected", !1) : a.set("isSelected", !0), c.departmentsList.isEvery("isSelected", !0) && c.set("isAllDepartmentSelected", !0))
			},
			toggleAllAgents: function () {
				this.allAgentsIncluded ? (this.set("allAgentsIncluded", !1), this.agentsList.setEach("isSelected", !1)) : (this.set("allAgentsIncluded", !0), this.agentsList.setEach("isSelected", !0))
			}, toggleAgentSelection: function (a) {
				if (a = this.agentsList.findProperty("id", a)) a.isSelected ? a.set("isSelected", !1) : a.set("isSelected", !0), this.agentsList.isEvery("isSelected") ? this.set("allAgentsIncluded", !0) : this.set("allAgentsIncluded", !1)
			}, toggleAllTags: function () {
				this.allTagsIncluded ? (this.set("allTagsIncluded",
					!1), this.tagsList.setEach("isSelected", !1)) : (this.set("allTagsIncluded", !0), this.tagsList.setEach("isSelected", !0))
			}, toggleTagSelection: function (a) {
				if (a = this.tagsList.findProperty("id", a)) a.isSelected ? a.set("isSelected", !1) : a.set("isSelected", !0), this.tagsList.isEvery("isSelected", !0) ? this.set("allTagsIncluded", !0) : this.set("allTagsIncluded", !1)
			}, nextPage: function () {
				this.set("currentPage", this.currentPage + 1)
			}, previousPage: function () {
				this.set("currentPage", this.currentPage - 1)
			}, ignoreChat: function (a) {
				this.ignoreChat(a)
			}
		},
		loadProperties: function () {
			var a = [], c = [];
			Tawk.webProperties.sites.forEach(function (c) {
				var b, e = [], f = [];
				c.enabled && (c.widgets.length && c.isStatusEnabled) && (b = Ember.Object.create({
					id: c.id,
					name: decodeStr(c.propertyName),
					isSelected: !0,
					isAllWidgetSelected: !0,
					isAllDepartmentSelected: !0
				}), c.widgets.forEach(function (a) {
					f.pushObject(Ember.Object.create({id: a.id, name: decodeStr(a.name), isSelected: !0}))
				}), c.departments && Object.keys(c.departments).forEach(function (a) {
					c.departments[a].en && !c.departments[a].dltd &&
					e.pushObject(Ember.Object.create({id: a, name: decodeStr(c.departments[a].n), isSelected: !0}))
				}), b.set("widgetsList", sortList(f, "name")), b.set("departmentsList", sortList(e, "name")), a.pushObject(b))
			});
			Tawk.webProperties.pages.forEach(function (a) {
				var b, e = [];
				a.enabled && a.isStatusEnabled && (b = Ember.Object.create({
					id: a.id,
					name: decodeStr(a.propertyName),
					isSelected: !0,
					isAllDepartmentSelected: !0
				}), a.departments && Object.keys(a.departments).forEach(function (b) {
					a.departments[b].en && !a.departments[b].dltd && e.pushObject(Ember.Object.create({
						id: b,
						name: decodeStr(a.departments[b].n), isSelected: !0
					}))
				}), b.set("departmentsList", sortList(e, "name")), c.pushObject(b))
			});
			this.set("sitesList", sortList(a, "name"));
			this.set("pagesList", sortList(c, "name"))
		},
		loadAgents: function () {
			var a = [], c = !1, d = Tawk.userController.user.isHiredAgent;
			a.pushObject(Ember.Object.create({
				id: Tawk.userController.user.id,
				name: decodeStr(Tawk.userController.user.fullName),
				isSelected: !0
			}));
			Tawk.agentsController.agents.forEach(function (b) {
				b.isHiredOnly && !d ? c = !0 : a.pushObject(Ember.Object.create({
					id: b.id,
					name: decodeStr(b.name), isSelected: !0
				}))
			});
			c && a.pushObject(Ember.Object.create({id: "hired_agent", name: "Hired Agents", isSelected: !0}));
			this.set("agentsList", sortList(a, "name"))
		},
		loadCountries: function () {
			var a = [], c = [], d = {};
			countryList2.forEach(function (b) {
				var c, f = b.value.charAt(0);
				c = Ember.Object.create({id: b.id, name: b.value, isSelected: !0});
				d[f] || (b = Ember.Object.create({label: f, countries: []}), b.reopen({
					isViewable: function () {
						return this.countries.isAny("isHighlighted", !0) || this.countries.isEvery("isNotHighlighted",
							void 0)
					}.property("countries.@each.isHighlighted", "countries.@each.isNotHighlighted")
				}), d[f] = b);
				d[f].countries.pushObject(c);
				a.pushObject(c)
			});
			Object.keys(d).forEach(function (a) {
				c.pushObject(d[a])
			});
			this.set("countriesDirectory", c);
			this.set("countriesList", a)
		},
		loadTags: function () {
			var a = this, c = [];
			socketConnector.getAllTags(function (d, b) {
				d || (b.forEach(function (a) {
					c.pushObject(Ember.Object.create({id: decodeStr(a), name: decodeStr(a), isSelected: !0}))
				}), a.set("tagsList", sortList(c, "name")))
			})
		},
		loadFilters: function () {
			this.agentsList.length ||
			this.loadAgents();
			this.countriesList.length || this.loadCountries();
			this.sitesList.length || this.pagesList.length || this.loadProperties();
			this.loadTags()
		},
		isAllCountriesIncluded: function () {
			this.countriesList.length && (this.countriesList.isEvery("isSelected", !0) ? this.set("allCountriesIncluded", !0) : this.set("allCountriesIncluded", !1))
		},
		isAllSitesIncluded: function () {
			this.sitesList.length && (this.sitesList.isEvery("isSelected", !0) ? this.set("allSitesIncluded", !0) : this.set("allSitesIncluded", !1))
		},
		isAllPagesIncluded: function () {
			this.sitesList.length &&
			(this.pagesList.isEvery("isSelected", !0) ? this.set("allPagesIncluded", !0) : this.set("allPagesIncluded", !1))
		},
		isAllPropertiesIncluded: function () {
			this.allPagesIncluded && this.allSitesIncluded ? this.set("allPropertiesIncluded", !0) : this.set("allPropertiesIncluded", !1)
		}.observes("allPagesIncluded", "allSitesIncluded"),
		visitorsStatusDidChange: function () {
			var a, c, d = this, b = this.get("currentList").filterProperty("st", "away"),
				e = this.get("currentList").filterProperty("st", "online");
			a = e.filter(function (a) {
				if (d.activeVisitors.contains(a)) return !1;
				e.indexOf(a) < d.activeVisitors.length - 1 ? d.activeVisitors.insertAt(e.indexOf(a), a) : d.activeVisitors.pushObject(a);
				return !0
			});
			this.activeVisitors.removeObjects(this.activeVisitors.filter(function (a) {
				return e.contains(a) ? !1 : !0
			}));
			c = b.filter(function (a) {
				if (d.idleVisitors.contains(a)) return !1;
				b.indexOf(a) < d.idleVisitors.length ? d.idleVisitors.insertAt(b.indexOf(a), a) : d.idleVisitors.pushObject(a);
				return !0
			});
			this.idleVisitors.removeObjects(this.idleVisitors.filter(function (a) {
				return b.contains(a) ? !1 : !0
			}));
			this.activeVisitors.removeObjects(c);
			this.idleVisitors.removeObjects(a);
			this.updateTotalInactiveCounts();
			0 < this.activeVisitors.length ? this.set("hasActiveVisitors", !0) : this.set("hasActiveVisitors", !1);
			0 < this.idleVisitors.length ? this.set("hasIdleVisitors", !0) : this.set("hasIdleVisitors", !1)
		}.observes("currentList.@each.st", "currentList.@each.isInactive"),
		getOngoingConversations: function (a) {
			socketConnector.getOngoingConvesations(function (c, d) {
				a(c, d)
			})
		},
		initInitialVisitors: function (a) {
			var c = this;
			clearTimeout(this.initInitialTimeout);
			a = a || function () {
			};
			this.set("isSubscribed", !1);
			this.set("initialListLoaded", !1);
			this.allUnansweredList.clear();
			this.allServedList.clear();
			this.subscribedList.clear();
			this.waitingSessions.clear();
			Tawk.chatController.chatList.clear();
			this.set("initInitialTimeout", setTimeout(function () {
				c.getOngoingConversations(function (d, b) {
					d ? c.initInitialVisitors(a) : (c.loadInitialList(b), a())
				})
			}, 0))
		},
		loadInitialList: function (a) {
			var c, d = this, b = [], e = [], f = [], g = [];
			moment();
			var h = function () {
				d.set("syncCallList", !0);
				socketConnector.getCallList(function (a,
				                                      b) {
					!a && b.data.calls && (b.data.calls.forEach(function (a) {
						d.callStatusUpdate(a)
					}), d.set("initialListLoaded", !0), d.startDurationInterval(), d.clearMessageUrl(), d.clearCallWaitingList(), d.startRemoveVisitorTimeout())
				})
			};
			clearTimeout(this.initInitialTimeout);
			a.forEach(function (a) {
				c = d.waitingSessions.findProperty("vsk", a._id) || d.waitingSessions.findProperty("_id", a._id);
				c || (c = Tawk.VisitorModel.create(a), d.waitingSessions.pushObject(c), b.push({
					vsk: a._id,
					pgid: a.pgid
				}))
			});
			b.length ? this.subscribeVisitorSession(b,
				function (a, b) {
					a || (Object.keys(b).forEach(function (a) {
						var h = b[a];
						if (c = d.waitingSessions.findProperty("_id", a)) d.waitingSessions.removeObject(c), h && (Tawk.visitorChatController.getChatByVisitor(h.vid) && (c = Tawk.visitorChatController.getChatByVisitor(h.vid), Tawk.visitorChatController.restartChat(c), c.setProperties(h)), c.setProperties(h), c.set("isSubscribed", !0), c.cr ? f.pushObject(c) : c.ha && (0 <= c.al.indexOf(Tawk.userController.user.id) && g.pushObject(c._id), e.pushObject(c)))
					}), d.allServedList.pushObjects(e),
						d.allUnansweredList.pushObjects(f), g.forEach(function (a) {
						d.openChat(a)
					}), h())
				}) : h()
		},
		getVisitor: function (a) {
			var c = null;
			if (!1 === this.isSubscribed) return c;
			for (var d = 0, b = this.subscribedList.length; d < b; d++) if (this.subscribedList[d]._id === a) {
				c = this.subscribedList[d];
				break
			}
			return c
		},
		getSubscribedVisitor: function (a) {
			for (var c, d = 0, b = this.allServedList.length; d < b; d++) if (this.allServedList[d]._id === a) {
				c = this.allServedList[d];
				break
			}
			if (!c) for (d = 0, b = this.allUnansweredList.length; d < b; d++) if (this.allUnansweredList[d]._id ===
				a) {
				c = this.allUnansweredList[d];
				break
			}
			return c
		},
		subscribeVisitorSession: function (a, c) {
			Array.isArray(a) || (a = [a]);
			socketConnector.subscribeVisitorSessions(a, function (a, b) {
				c(a, b)
			})
		},
		unsubscribeVisitorSession: function (a) {
			socketConnector.unsubscribeVisitorSessions([{vsk: a._id, pgid: a.pgid}], function (c) {
				c || (a.set("isSubscribed", !1), a.set("isMessageSubscribed", !1))
			})
		},
		performSubscribe: function () {
			var a = this;
			socketConnector.subscribeVisitorList(this.filters, function (c, d) {
				a.set("isLoading", !1);
				c || (clearTimeout(a.removeVisitorTimeout),
					a.performVisitorRemove(), a.subscribedList.pushObjects(sortList(a.processVisitors(d), "_id", !0)), a.set("isSubscribed", !0))
			})
		},
		loadSubscribedList: function () {
			this.isSubscribed || (this.set("isLoading", !0), this.loadFilters(), this.subscribedList.clear(), this.currentList.clear(), this.performSubscribe())
		},
		startRemoveVisitorTimeout: function () {
			var a = this;
			this.set("removeVisitorTimeout", setTimeout(function () {
				a.performVisitorRemove()
			}, 1E3))
		},
		addVisitor: function (a) {
			if (this.isSubscribed && a.length) if (a = this.processVisitors(a),
				0 === this.subscribedList.length) this.subscribedList.pushObjects(sortList(a, "_id", !0)); else {
				for (var c = 0, d = a.length; c < d; c++) {
					for (var b = !1, e = a[c], f = 0, g = this.subscribedList.length; f < g; f++) if (this.subscribedList[f]._id < e._id) {
						this.subscribedList.insertAt(f, e);
						b = !0;
						break
					} else if (this.subscribedList[f]._id === e._id) {
						b = !0;
						break
					}
					b || this.subscribedList.pushObject(e)
				}
				a.clear()
			}
		},
		removeVisitor: function (a, c) {
			this.bucket1Processing ? this.removeBucket2.push({
				visitorId: a,
				stillHasSession: c
			}) : this.removeBucket1.push({
				visitorId: a,
				stillHasSession: c
			})
		},
		performVisitorRemove: function () {
			var a = this;
			this.set("bucket1Processing", !0);
			this.removeBucket1.length && (this.removeBucket1.forEach(function (c) {
				a.executeRemove(c)
			}), this.removeBucket1.clear());
			this.set("bucket1Processing", !1);
			this.set("bucket2Processing", !0);
			this.removeBucket2.length && (this.removeBucket2.forEach(function (c) {
				a.executeRemove(c)
			}), this.removeBucket2.clear());
			this.set("bucket2Processing", !1);
			this.startRemoveVisitorTimeout()
		},
		executeRemove: function (a) {
			var c = this.getSubscribedVisitor(a.visitorId) ||
				this.getVisitor(a.visitorId);
			c && (this.subscribedList.removeObject(c), a.stillHasSession || (this.allServedList.removeObject(c), this.allUnansweredList.removeObject(c), c.isOpen && (c.chatEnded(), c.setProperties({
				isVisitorPresent: !1,
				messagePreview: null,
				isSubscribed: !1,
				al: [],
				alv: 0,
				ha: !1,
				cr: !1,
				ignore: !1,
				hasJoinedConversation: !1,
				isMessageSubscribed: !1
			}), c.incomingMessage({
				vsk: a.visitorId,
				m: "VISITOR_LEFT",
				co: Date.now(),
				t: "n",
				ut: "v"
			}))), c.setProperties({incomingCall: !1, ongoingCall: !1}), delete c)
		},
		unloadSubscribedList: function () {
			var a =
				this;
			this.set("maxListSize", 50);
			socketConnector.unsubscribeVisitorList(function (c) {
				a.set("isSubscribed", !1);
				clearTimeout(a.removeVisitorTimeout);
				a.performVisitorRemove();
				a.subscribedList.clear();
				a.unansweredList.clear();
				a.servedList.clear()
			})
		},
		processVisitors: function (a) {
			var c, d = [], b = this;
			a.forEach(function (a) {
				(c = Tawk.visitorChatController.getChatByVisitor(a.vid)) && !b.subscribedList.contains(c) ? (c.setProperties(a), d.pushObject(c), b.allServedList.contains(c) || b.allUnansweredList.contains(c) || (Tawk.visitorChatController.restartChat(c),
					b.allServedList.pushObject(c))) : (c = b.getSubscribedVisitor(a._id)) ? (c.setProperties(a), d.pushObject(c)) : (c = b.getVisitor(a._id)) ? c.setProperties(a) : (c = Tawk.VisitorModel.create(a), c.ha ? b.allServedList.pushObject(c) : c.cr ? b.allUnansweredList.pushObject(c) : d.pushObject(c))
			});
			return d
		},
		updateVisitorStatus: function (a, c) {
			var d = this.getVisitor(a.vsk) || this.getSubscribedVisitor(a.vsk);
			d && d.set("st", c)
		},
		queueMessageUrl: function (a) {
			var c;
			this.isClearingUrl ? setTimeout(function () {
				self.queueMessageUrl(a)
			}) : ((c = this.urlMessageQueue.findProperty("vsk",
				a.vsk)) && c.cver < a.cver && this.urlMessageQueue.removeObject(c), this.urlMessageQueue.pushObject(a))
		},
		clearMessageUrl: function () {
			var a;
			self = this;
			setTimeout(function () {
				self.set("isClearingUrl", !0);
				self.urlMessageQueue.forEach(function (c) {
					a = self.getVisitor(c.vsk) || self.getSubscribedVisitor(c.vsk);
					!a || c.cver < a.cver || a.changePageUrl(c)
				});
				self.urlMessageQueue.clear();
				self.set("isClearingUrl", !1);
				self.clearMessageUrl()
			}, 1E3)
		},
		newChatRequest: function (a) {
			var c, d = this, b = "WEBRTC_SESSION_REQUESTED" === a.m;
			visitor =
				this.waitingSessions.findProperty("vsk", a.vsk) || this.waitingSessions.findProperty("_id", a.vsk);
			this.initialListLoaded && !visitor && ((visitor = this.getSubscribedVisitor(a.vsk) || this.getVisitor(a.vsk)) || (visitor = Tawk.VisitorModel.create(a)), b ? (visitor.set("incomingCall", !0), c = languageParser.translate("visitors", "VISITOR_WEBRTC_SESSION_REQUESTED")) : c = a.m, visitor.isSubscribed ? (visitor.set("cr", !0), this.allServedList.removeObject(visitor), this.subscribedList.removeObject(visitor), this.allUnansweredList.contains(visitor) ||
			this.allUnansweredList.pushObject(visitor), visitor.get("ring") && notificationController.showMessageNotification(a.n, a.m, a.vsk)) : (this.waitingSessions.pushObject(visitor), this.subscribeVisitorSession({
				vsk: a.vsk,
				pgid: a.pgid
			}, function (b, f) {
				var g = f[a.vsk];
				if (!b && g && (Tawk.visitorChatController.getChatByVisitor(g.vid) ? (visitor = Tawk.visitorChatController.getChatByVisitor(g.vid), Tawk.visitorChatController.restartChat(visitor)) : visitor = d.waitingSessions.findProperty("vsk", a.vsk) || d.waitingSessions.findProperty("_id",
						a.vsk), visitor)) {
					d.waitingSessions.removeObject(visitor);
					if (!visitor.alv || visitor.alv && visitor.alv <= g.alv) visitor.setProperties(g), visitor.set("isSubscribed", !0), visitor.isOpen && visitor.processHistory(), visitor.cr && !visitor.ha && (d.allServedList.removeObject(visitor), d.subscribedList.removeObject(visitor), d.allUnansweredList.findProperty("vsk", a.vsk) || d.allUnansweredList.pushObject(visitor));
					visitor.isOpen && !visitor.isMessageSubscribed && socketConnector.subscribeVisitorMessage({
						vsk: visitor._id, pgid: visitor.pgid,
						from: 0
					}, function (a, b) {
						!a && (b.c && b.c.length) && (visitor.set("isMessageSubscribed", !0), b.c.forEach(function (a) {
							visitor.incomingMessage(a)
						}))
					});
					visitor.get("ring") && notificationController.showMessageNotification(a.n, c, a.vsk)
				}
			})))
		},
		updateChatServed: function (a) {
			if (a = this.getSubscribedVisitor(a.vsk) || this.getVisitor(a.vsk)) a.set("cr", !1), a.anotherDepartment && a.set("anotherDepartment", !1), notificationController.updateTotalForChatServed()
		},
		updateAgentJoined: function (a) {
			var c = this, d = this.getSubscribedVisitor(a.vsk) ||
				this.getVisitor(a.vsk);
			d || (d = this.waitingSessions.findProperty("vsk", a.vsk));
			d || (d = Tawk.VisitorModel.create(a));
			d.setProperties({al: a.al, alv: a.alv, ha: !0, cr: !1});
			d.isSubscribed ? (this.allServedList.contains(d) || this.allServedList.pushObject(d), this.allUnansweredList.removeObject(d)) : this.subscribeVisitorSession({
				vsk: a.vsk,
				pgid: a.pgid
			}, function (b, e) {
				var f = e[a.vsk];
				!b && f && (!d.alv || d.alv && d.alv <= f.alv) && (c.waitingSessions.removeObject(d), d.set("isSubscribed", !0), d.setProperties(f), c.allServedList.findProperty("vsk",
					a.vsk) || c.allServedList.pushObject(d), c.allUnansweredList.removeObject(d))
			})
		},
		updateAgentLeft: function (a) {
			var c = this.getSubscribedVisitor(a.vsk) || this.getVisitor(a.vsk);
			c && (c.set("al", a.al), c.set("alv", a.alv), c.set("ha", !1), c.set("ongoingCall", !1), c.isOpen ? c.set("hasJoinedConversation", !1) : this.allServedList.removeObject(c))
		},
		updateAgentList: function (a) {
			var c = this.getSubscribedVisitor(a.vsk) || this.getVisitor(a.vsk);
			c && (c.set("al", a.al), c.set("alv", a.alv))
		},
		resetVisitorStatus: function (a) {
			var c = this.getSubscribedVisitor(a.vsk) ||
				this.getVisitor(a.vsk);
			c && (c.set("al", a.al), c.set("alv", a.alv), c.set("cr", !1), c.set("ha", !1), c.set("ignore", !1), this.allUnansweredList.removeObject(c), c.isOpen || this.allServedList.removeObject(c))
		},
		visitorDataUpdate: function (a) {
			var c = this.getSubscribedVisitor(a.vsk) || this.getVisitor(a.vsk);
			c && (c.setProperties(a), a.ns || c.set("ns", ""), a.n && c.isOpen && Tawk.visitorChatContainerView.updateVisitorName(a.vsk, a.n))
		},
		chatWindowResized: function (a) {
			(a = this.getSubscribedVisitor(a.vsk)) && a.isOpen && a.addToMessageBlock({
				t: "n",
				ut: "v", m: "resize", co: new Date
			})
		},
		updateChatWindowState: function (a) {
			var c = this.getSubscribedVisitor(a.vsk) || this.getVisitor(a.vsk);
			c && c.windowStateChanged(a.cw, !0)
		},
		updatePopoutState: function (a) {
			var c = this.getSubscribedVisitor(a.vsk);
			c && c.isOpen && c.popoutStateChanged(a.hpt)
		},
		removeFromServed: function (a) {
			(a = this.allServedList.findProperty("_id", a)) && !a.ha && (this.allServedList.removeObject(a), this.unsubscribeVisitorSession(a))
		},
		openChat: function (a) {
			var c = this, d = this.getSubscribedVisitor(a) || this.getVisitor(a),
				b = function () {
					socketConnector.subscribeVisitorMessage({vsk: d._id, pgid: d.pgid, from: 0}, function (a, b) {
						a ? logger({
							message: "subscribeVisitorMessage returned error",
							stack: JSON.stringify({vsk: d._id, pgid: d.pgid, from: 0})
						}) : b ? (d.setProperties(b), d.set("isMessageSubscribed", !0)) : (d.setProperties({
							isVisitorPresent: !1,
							messagePreview: null,
							isSubscribed: !1,
							al: [],
							alv: 0,
							ha: !1,
							cr: !1,
							ignore: !1,
							isMessageSubscribed: !1
						}), d.incomingMessage({vsk: d._id, m: "VISITOR_LEFT", co: Date.now(), t: "n", ut: "v"}));
						c.allServedList.contains(d) ||
						c.allUnansweredList.contains(d) || c.allServedList.pushObject(d);
						Tawk.visitorChatController.openChat(d)
					})
				};
			d && (d.isSubscribed ? b() : this.subscribeVisitorSession({vsk: d._id, pgid: d.pgid}, function (a, c) {
				!a && c[d._id] && (d.setProperties(c[d._id]), d.set("isSubscribed", !0), b())
			}))
		},
		openOldestChat: function () {
			var a = this.allUnansweredList.filterProperty("ignore", !1).get("firstObject");
			a && this.openChat(a._id)
		},
		ignoreChat: function (a) {
			(a = this.getSubscribedVisitor(a) || this.getVisitor(a)) && (a.ignore ? a.set("ignore", !1) :
				a.set("ignore", !0))
		},
		handleChatRequests: function () {
			var a = this.allUnansweredList.filterProperty("ring", !0).length;
			0 !== a ? a > this.totalChatRequest && notificationController.notifyNewChatRequest() : notificationController.stopNewChatRequest();
			this.set("totalChatRequest", a)
		}.observes("allUnansweredList.@each.ring"),
		updateTags: function (a) {
			var c = this.getSubscribedVisitor(a.vsk) || this.getVisitor(a.vsk);
			!c || c.customTags.version > a.tagsv || c.setProperties({tags: a.tags, tagsv: a.tagsv})
		},
		startDurationInterval: function () {
			var a,
				c, d = this;
			this.stopDurationInterval();
			this.set("durationInterval", setTimeout(function () {
				if (d.isSubscribed) for (a = 0, c = d.currentList.length; a < c; a++) d.currentList[a].updateDuration();
				a = 0;
				for (c = d.allUnansweredList.length; a < c; a++) d.allUnansweredList[a].updateDuration();
				a = 0;
				for (c = d.allServedList.length; a < c; a++) d.allServedList[a].updateDuration();
				d.startDurationInterval()
			}, 1E3))
		},
		stopDurationInterval: function () {
			clearTimeout(this.durationInterval);
			this.set("durationInterval", null)
		},
		banVisitor: function (a, c,
		                      d, b) {
			var e = this;
			banVisitor(c, d, a, function (c) {
				if (c) return b(c);
				a.set("b", !0);
				a.set("hasJoinedConversation", !1);
				a.set("isVisitorPresent", !1);
				a.set("messagePreview", null);
				e.removeVisitor(a._id);
				b()
			})
		},
		updateWidgetsForProperty: function (a, c, d) {
			var b, e = [];
			(b = "site" === c ? this.sitesList.findProperty("id", a) : this.pagesList.findProperty("id", a)) && d.forEach(function (a) {
				var c = b.widgetsList.findProperty("id", a.id);
				c ? c.set("name", decodeStr(a.name)) : (c = Ember.Object.create({
					id: a.id,
					name: decodeStr(a.name)
				}), b.isAllWidgetSelected &&
				c.set("isSelected", !0), e.pushObject(c))
			})
		},
		updatePropertyName: function (a, c, d) {
			(a = "site" === c ? this.sitesList.findProperty("id", a) : this.pagesList.findProperty("id", a)) && a.set("name", decodeStr(d))
		},
		addProperty: function (a) {
			var c, d, b, e = !1, f = [], g = [], h = this;
			a.departments && Object.keys(a.departments).forEach(function (b) {
				a.departments[b].en && !a.departments[b].dltd && f.pushObject(Ember.Object.create({
					id: b,
					name: decodeStr(a.departments[b].n),
					isSelected: !0
				}))
			});
			c = Ember.Object.create({
				id: a.id, name: decodeStr(a.propertyName),
				isAllDepartmentSelected: !0, departmentsList: f
			});
			if ("site" === a.propertyType) {
				a.widgets.forEach(function (a) {
					g.pushObject(Ember.Object.create({id: a.id, name: decodeStr(a.name), isSelected: !0}))
				});
				c.setProperties({isAllWidgetSelected: !0, widgetsList: sortList(g, "name")});
				this.allPropertiesIncluded || this.allSitesIncluded ? c.set("isSelected", !0) : c.set("isSelected", !1);
				d = 0;
				for (b = this.sitesList.length; d < b; d++) if (this.sitesList[d].name > c.name) {
					this.sitesList.insertAt(d, c);
					e = !0;
					break
				}
				e || this.sitesList.pushObject(c)
			} else {
				this.allPropertiesIncluded ||
				this.allPagesIncluded ? c.set("isSelected", !0) : c.set("isSelected", !1);
				d = 0;
				for (b = this.pagesList.length; d < b; d++) if (this.pagesList[d].name > c.name) {
					this.pagesList.insertAt(d, c);
					e = !0;
					break
				}
				e || this.pagesList.pushObject(c)
			}
			this.isSubscribed ? this.performSubscribe() : this.getOngoingConversations(function (b, c) {
				b || h.loadInitialList(c.filterProperty("pgid", a.id))
			})
		},
		removeProperty: function (a, c) {
			var d;
			"site" === c ? (d = this.sitesList.findProperty("id", a)) && this.sitesList.removeObject(d) : (d = this.pagesList.findProperty("id",
				a)) && this.pagesList.removeObject(d);
			this.isSubscribed && this.performFilter(this.filters.status)
		},
		updateAgentName: function (a, c) {
			var d = this.agentsList.findProperty("id", a);
			d && d.set("name", decodeStr(c))
		},
		removeAgent: function (a) {
			var c = this.agentsList.findProperty("id", a);
			Tawk.webProperties.isOnlyHiredAgent(a) && 0 === Tawk.webProperties.getHiredAgentsIds().length && (c = this.agentsList.findProperty("id", "hired_agent"));
			c && this.agentsList.removeObject(c);
			c && c.isSelected && this.performFilter(this.filters.status)
		},
		addAgent: function (a) {
			var c, d = !1, b = this.agentsList.findProperty("id", a.id);
			if (!b) {
				b = Ember.Object.create({id: a.id, name: decodeStr(a.name)});
				this.allAgentsIncluded ? b.set("isSelected", !0) : b.set("isSelected", !1);
				a = 0;
				for (c = this.agentsList.length; a < c; a++) if (this.agentsList[a].name > b.name) {
					this.agentsList.insertAt(a, b);
					d = !0;
					break
				}
				d || this.agentsList.pushObject(b)
			}
		},
		performFilter: function (a) {
			var c, d, b, e = [], f = [], g = [], h = [], k = [], l = [], m = [], n = [], p = [], q = {};
			this.set("isLoading", !0);
			if (!1 === this.allPropertiesIncluded ||
				this.pagesList.findProperty("isAllDepartmentSelected", !1) || this.pagesList.findProperty("isAllWidgetSelected", !1) || this.sitesList.findProperty("isAllDepartmentSelected", !1) || this.sitesList.findProperty("isAllWidgetSelected", !1)) {
				c = 0;
				for (d = this.pagesList.length; c < d; c++) {
					var r = this.pagesList[c];
					b = {};
					r.isSelected && (b.pgid = r.id, b.wgid = null, b.dpt = null, m.push(r.id), r.departmentsList && !1 === r.isAllDepartmentSelected && (b.dpt = r.departmentsList.filterProperty("isSelected", !0).getEach("id"), 0 === b.dpt.length &&
					(b.dpt = [""])), e.push(b))
				}
				c = 0;
				for (d = this.sitesList.length; c < d; c++) m = this.sitesList[c], b = {}, m.isSelected && (b.pgid = m.id, b.wgid = null, b.dpt = null, k.push(m.name), m.widgetsList && !1 === m.isAllWidgetSelected && (b.wgid = m.widgetsList.filterProperty("isSelected", !0).getEach("id"), 0 === b.wgid.length && (b.wgid = null)), m.departmentsList && !1 === m.isAllDepartmentSelected && (b.dpt = m.departmentsList.filterProperty("isSelected", !0).getEach("id"), 0 === b.dpt.length && (b.dpt = [""])), e.push(b))
			}
			k.length && (q.filterByProperties = {values: k.join(", ")},
			5 < k.length && (q.filterByProperties.shortValues = k.slice(0, 5).join(", ")));
			if (!1 === this.allCountriesIncluded) {
				c = 0;
				for (d = this.countriesList.length; c < d; c++) b = this.countriesList[c], b.isSelected && (f.push(b.id), l.push(b.name));
				l.length && (q.filterByCountries = {values: l.join(", ")}, 5 < l.length && (q.filterByCountries.shortValues = l.slice(0, 5).join(", ")))
			}
			if (!1 === this.allAgentsIncluded) {
				c = 0;
				for (d = this.agentsList.length; c < d; c++) l = this.agentsList[c], l.isSelected && ("hired_agent" === l.id ? (g = g.concat(Tawk.webProperties.getHiredAgentsIds()),
					n.push("Hired Agents")) : (g.push(l.id), n.push(l.name)));
				n.length && (q.filterByAgentsInclude = {values: n.join(", ")}, 5 < n.length && (q.filterByAgentsInclude.shortValues = n.slice(0, 5).join(", ")))
			}
			if (!1 === this.allTagsIncluded) {
				c = 0;
				for (d = this.tagsList.length; c < d; c++) n = this.tagsList[c], n.isSelected && (h.push(n.id), p.push(n.id));
				p.length && (q.filterByTagsInclude = {values: p.join(", ")}, 5 < p.length && (q.filterByTagsInclude.shortValues = p.slice(0, 5).join(", ")))
			}
			a && (q.filterByStatus = {
				values: languageParser.translate("status_types",
					a)
			});
			0 === Object.keys(q).length && (q = null);
			this.set("filters", {
				pages: e.length ? e : null,
				countries: f.length ? f : null,
				agents: g.length ? g : null,
				tags: h.length ? h : null,
				status: a ? a : null
			});
			this.set("formattedFilter", q);
			this.subscribedList.clear();
			this.performSubscribe()
		},
		setCurrentFilterList: function () {
			var a, c = this;
			a = (this.currentPage - 1) * this.perpage;
			var d = this.currentPage * this.perpage, b = this.subscribedList.filterProperty("isInactive", !0);
			b.length ? (b.sort(function (a, b) {
				if ("online" === a.st && "online" === b.st || "away" ===
					a.st && "away" === b.st) return a.so < b.so ? 1 : a.so > b.so ? -1 : 0;
				if ("online" === a.st && "away" === b.st) return -1;
				if ("away" === a.st && "online" === b.st) return 1
			}), b = b.slice(a, d), 0 === b.length ? this.currentList.clear() : (a = this.currentList.filter(function (a) {
				return b.contains(a) ? !1 : !0
			}), this.currentList.removeObjects(a), b.forEach(function (a) {
				c.currentList.contains(a) || (b.indexOf(a) < c.currentList.length - 1 ? c.currentList.insertAt(b.indexOf(a), a) : c.currentList.pushObject(a))
			})), 0 === this.currentList.length && this.get("hasPreviousPage") &&
			this.send("previousPage")) : this.currentList.clear()
		}.observes("currentPage", "subscribedList.@each.isInactive"),
		updateTotalInactiveCounts: function () {
			for (var a = 0, c = 0, d = 0, b = this.subscribedList.length; d < b; d++) {
				var e = this.subscribedList[d];
				e.get("isInactive") && ("online" === e.st ? a++ : c++)
			}
			this.set("totalActiveVisitors", a);
			this.set("totalIdleVisitors", c)
		},
		totalPages: function () {
			return Math.ceil(this.subscribedList.length / this.perpage)
		}.property("subscribedList.length"),
		hasNextPage: function () {
			return this.currentPage <
				this.get("totalPages")
		}.property("currentPage", "totalPages"),
		hasPreviousPage: function () {
			return 1 < this.currentPage
		}.property("currentPage", "totalPages"),
		extendMonitoringSubscription: function () {
			var a = this;
			socketConnector.extendMonitoringList(function (c, d) {
				c || a.set("maxListSize", d)
			})
		},
		isNextListAvailable: function () {
			this.get("hasNextPage") || this.currentList.length <= this.perpage && (this.subscribedList.length === this.maxListSize && this.subscribedList.length < this.totalVisitorsCount) && this.extendMonitoringSubscription()
		}.observes("hasNextPage"),
		removeSingleFilter: function (a) {
			var c = this.formattedFilter;
			this.set("isLoading", !0);
			"properties" === a && (this.set("allPropertiesIncluded", !0), this.set("allPagesIncluded", !0), this.set("allSitesIncluded", !0), Tawk.liveMonitoringController.pagesList.setEach("isSelected", !0), Tawk.liveMonitoringController.pagesList.setEach("isAllDepartmentSelected", !0), Tawk.liveMonitoringController.sitesList.setEach("isSelected", !0), Tawk.liveMonitoringController.sitesList.setEach("isAllWidgetSelected", !0), Tawk.liveMonitoringController.sitesList.setEach("isAllDepartmentSelected",
				!0), c && c.filterByProperties && delete c.filterByProperties);
			"countries" === a && (this.set("allCountriesIncluded", !0), Tawk.liveMonitoringController.countriesList.setEach("isSelected", !0), c && c.filterByCountries && delete c.filterByCountries);
			"agents-include" === a && (Tawk.liveMonitoringController.agentsList.setEach("isSelected", !0), this.set("allAgentsIncluded", !0), c && c.filterByAgentsInclude && delete c.filterByAgentsInclude);
			"tags-include" === a && (Tawk.liveMonitoringController.tagsList.setEach("isSelected", !0), this.set("allTagsIncluded",
				!0), c && c.filterByTagsInclude && delete c.filterByTagsInclude);
			"status" === a && (c && c.filterByStatus) && (delete c.filterByStatus, this.set("filters.status", null));
			0 === Object.keys(c).length && (c = null);
			this.set("formattedFilter", null);
			this.set("formattedFilter", c);
			this.performFilter(this.filters.status)
		},
		clearFilters: function () {
			this.set("isLoading", !0);
			this.set("allPropertiesIncluded", !0);
			this.set("allPagesIncluded", !0);
			this.set("allSitesIncluded", !0);
			this.set("allCountriesIncluded", !0);
			this.set("allAgentsIncluded",
				!0);
			this.set("allTagsIncluded", !0);
			Tawk.liveMonitoringController.pagesList.setEach("isSelected", !0);
			Tawk.liveMonitoringController.sitesList.setEach("isSelected", !0);
			Tawk.liveMonitoringController.sitesList.setEach("isAllWidgetSelected", !0);
			Tawk.liveMonitoringController.sitesList.setEach("isAllDepartmentSelected", !0);
			Tawk.liveMonitoringController.pagesList.setEach("isAllDepartmentSelected", !0);
			Tawk.liveMonitoringController.countriesList.setEach("isSelected", !0);
			Tawk.liveMonitoringController.agentsList.setEach("isSelected",
				!0);
			Tawk.liveMonitoringController.tagsList.setEach("isSelected", !0);
			this.set("formattedFilter", null);
			this.performFilter()
		},
		visitorCountUpdate: function (a) {
			a && (1 === a.n && notificationController.notifyNewVisitor(), isNaN(parseInt(a.t, 10)) || this.set("totalVisitorsCount", 1E3 > a.t ? a.t : "999+"))
		},
		filterServedList: function () {
			var a, c, d = [], b = this;
			this.isSubscribed && (d = this.filters ? this.allServedList.filter(function (d) {
				var f = !0;
				if (!d.ha) return !1;
				if (null !== b.filters.pages) {
					a = 0;
					for (c = b.filters.pages.length; a < c; a++) {
						var g =
							b.filters.pages[a];
						if (g.pgid !== d.pgid) {
							f = !1;
							break
						}
						if (null !== g.wgid && !g.wgid.contains(d.wgid)) {
							f = !1;
							break
						}
						if (null !== g.dpt && !g.dpt.contains(d.dpt)) {
							f = !1;
							break
						}
					}
					if (!f) return !1
				}
				if (null !== b.filters.countries && !b.filters.countries.contains(d.cc) || null !== b.filters.status && b.filters.status !== d.st) return !1;
				if (null !== b.filters.agents) {
					a = 0;
					for (c = d.al.length; a < c; a++) {
						if (b.filters.agents.contains(d.al[a])) {
							f = !0;
							break
						}
						f = !1
					}
					if (!f) return !1
				}
				if (null !== b.filters.tags) {
					if (!d.tags || !d.tags.length) return !1;
					a = 0;
					for (c = d.tags.length; a <
					c; a++) {
						f = decodeStr(d.tags[a]);
						if (b.filters.tags.contains(f)) {
							f = !0;
							break
						}
						f = !1
					}
					if (!f) return !1
				}
				return !0
			}) : this.allServedList.filterProperty("ha", !0), d.length ? (d.forEach(function (a, c) {
				!b.servedList.contains(a) && a.ha && (c < b.servedList.length - 1 ? b.servedList.insertAt(c, a) : b.servedList.pushObject(a))
			}), this.servedList.removeObjects(this.servedList.filter(function (a) {
				return d.contains(a) ? !1 : !0
			}))) : this.servedList.clear())
		}.observes("filters", "allServedList.length", "isSubscribed"),
		filterUnansweredList: function () {
			var a,
				c, d = [], b = this;
			if (this.isSubscribed) {
				if (this.filters) {
					if (null !== this.filters.agents) {
						this.unansweredList.clear();
						return
					}
					d = this.allUnansweredList.filter(function (d) {
						var f = !0;
						if (null !== b.filters.pages) {
							a = 0;
							for (c = b.filters.pages.length; a < c; a++) {
								var g = b.filters.pages[a];
								if (g.pgid !== d.pgid) {
									f = !1;
									break
								}
								if (null !== g.wgid && !g.wgid.contains(d.wgid)) {
									f = !1;
									break
								}
								if (null !== g.dpt && !g.dpt.contains(d.dpt)) {
									f = !1;
									break
								}
							}
							if (!f) return !1
						}
						if (null !== b.filters.countries && !b.filters.countries.contains(d.cc) || null !== b.filters.status &&
							b.filters.status !== d.st) return !1;
						if (null !== b.filters.tags) {
							if (!d.tags || !d.tags.length) return !1;
							a = 0;
							for (c = d.tags.length; a < c; a++) {
								f = decodeStr(d.tags[a]);
								if (b.filters.tags.contains(f)) {
									f = !0;
									break
								}
								f = !1
							}
							if (!f) return !1
						}
						return !0
					})
				} else d = this.allUnansweredList;
				d.length ? (d.forEach(function (a, c) {
					b.unansweredList.contains(a) || (c < b.unansweredList.length - 1 ? b.unansweredList.insertAt(c, a) : b.unansweredList.pushObject(a))
				}), this.unansweredList.removeObjects(this.unansweredList.filter(function (a) {
					return d.contains(a) ?
						!1 : !0
				}))) : this.unansweredList.clear()
			}
		}.observes("filters", "allUnansweredList.length", "isSubscribed"),
		allUnansweredCount: function () {
			return 1E3 > this.allUnansweredList.length ? this.allUnansweredList.length : "999+"
		}.property("allUnansweredList.length"),
		allServedCount: function () {
			return 1E3 > this.allServedList.length ? this.allServedList.length : "999+"
		}.property("allServedList.length"),
		hasNoFilteredVisitors: function () {
			return 0 === this.allServedList.length && 0 == this.allUnansweredList.length && 0 === this.currentList.length &&
				null !== this.formattedFilter
		}.property("allServedList.length", "allUnansweredList.length", "currentList.length", "formattedFilter"),
		hasNoVisitors: function () {
			return 0 === this.allServedList.length && 0 === this.allUnansweredList.length && 0 === this.currentList.length && null === this.formattedFilter && !1 === this.isLoading
		}.property("currentList.length", "allServedList.length", "allUnansweredList.length", "formattedFilter", "isLoading"),
		changePageStatus: function (a, c, d) {
			var b, e = this;
			b = "site" === a.propertyType ? this.sitesList.findProperty("id",
				a.id) : this.pagesList.findProperty("id", a.id);
			if (c) this.getOngoingConversations(function (c, d) {
				c || e.loadInitialList(d.filterProperty("pgid", a.id));
				!b && e.isSubscribed && e.addProperty(a)
			}); else if (Array.isArray(d) && (d[0] && Array.isArray(d[0])) && d[0].forEach(function (a) {
					e.updateAgentLeft(a)
				}), b && this.isSubscribed) return this.removeProperty(a.id, a.propertyType)
		},
		saveMonitoringTimeout: function (a) {
			socketConnector.saveMonitoringTimeout(a, function (a) {
			})
		},
		stopAllIncomingWebRTCCall: function () {
			var a = this.allUnansweredList.filterProperty("incomingCall",
				!0).concat(this.allServedList.filterProperty("incomingCall", !0));
			a.length && a.setEach("incomingCall", !1)
		},
		openFirstICRByProperty: function (a) {
			var c = this;
			a = this.allUnansweredList.filterProperty("pgid", a);
			a.length && a.every(function (a) {
				return a.isOpen ? !0 : (c.openChat(a._id), !1)
			})
		},
		clearCallWaitingList: function () {
			var a = this;
			this.set("syncCallList", !1);
			this.callStatusWaitList.forEach(function (c) {
				a.callStatusUpdate(c)
			});
			this.callStatusWaitList.clear()
		},
		callStatusUpdate: function (a) {
			var c, d = this, b = function () {
				c =
					visitor.callStatusData[a.clid];
				c && c.ver >= a.ver || (visitor.set("callStatusData." + a.clid, a), visitor.set("incomingCallId", a.clid), "ringing" === a.stts && "v" === a.cllr.t ? (visitor.setProperties({
					incomingCall: !0,
					ongoingCall: !0
				}), visitor.startIncomingCallNotification(a.rt, a.so), visitor.ha || (visitor.isOpen || -1 !== d.allUnansweredList.indexOf(visitor)) || (d.allUnansweredList.pushObject(visitor), d.allServedList.removeObject(visitor), d.subscribedList.removeObject(visitor)), notificationController.showMessageNotification(visitor.n,
					"Incoming Call", a.vsk)) : "in-progress" === a.stts ? visitor.setProperties({
					incomingCall: !1,
					ongoingCall: !0
				}) : "completed" === a.stts && (visitor.setProperties({
					incomingCall: !1,
					ongoingCall: !1
				}), visitor.cr || (d.allUnansweredList.removeObject(visitor), visitor.isOpen && !d.allServedList.contains(visitor) ? d.allServedList.pushObject(visitor) : d.subscribedList.contains(visitor) || d.subscribedList.pushObject(visitor))))
			};
			this.syncCallList ? this.callStatusWaitList.push(a) : a.ignr ? this.callIgnored(a) : ((visitor = this.getSubscribedVisitor(a.vsk) ||
				this.getVisitor(a.vsk)) || (visitor = this.waitingSessions.findProperty("vsk", a.vsk)), visitor ? b() : (visitor = Tawk.VisitorModel.create(), this.waitingSessions.pushObject(visitor), this.subscribeVisitorSession({
				vsk: a.vsk,
				pgid: a.pgid
			}, function (c, f) {
				!c && f[a.vsk] && (visitor.setProperties(f[a.vsk]), visitor.set("isSubscribed", !0), d.waitingSessions.removeObject(visitor), b())
			})))
		},
		callIgnored: function (a) {
			var c = this.getSubscribedVisitor(a.vsk) || this.getVisitor(a.vsk);
			c || (c = this.waitingSessions.findProperty("vsk", a.vsk));
			c && (c.setProperties({
				incomingCall: !1,
				ongoingCall: !1
			}), c.cr || (self.allUnansweredList.removeObject(c), c.isOpen && !self.allServedList.contains(c) ? self.allServedList.pushObject(c) : self.subscribedList.contains(c) || self.subscribedList.pushObject(c)), Tawk.visitorChatController.webRTCCAllIgnored(a))
		}
	});
	Tawk.liveMonitoringController = Tawk.LiveMonitoringController.create();
	Tawk.ChatController = Ember.Controller.extend({
		chatList: [], totalColumns: 1, detailsClosed: null, setTotalColumns: function (a) {
			this.totalColumns !==
			a && this.set("totalColumns", a)
		}, changeColumn: function (a) {
			var c = this, d = parseInt(a, 10);
			if (1 > d || 4 < d) return callback();
			socketConnector.updateWindowCount(d, function (a) {
				a || c.set("totalColumns", d)
			})
		}, getChat: function (a) {
			for (var c = null, d = 0; d < this.chatList.length; d++) if (this.chatList[d]._id === a) {
				c = this.chatList[d];
				break
			}
			return c
		}, getChatByVisitor: function (a) {
			for (var c = null, d = 0; d < this.chatList.length; d++) if (this.chatList[d].vid === a) {
				c = this.chatList[d];
				break
			}
			return c
		}, updateDetailsDisplay: function (a) {
			"undefined" !==
			typeof a ? this.set("detailsClosed", a) : this.set("detailsClosed", !1)
		}, toggleDetailsClosed: function (a) {
			this.set("detailsClosed", a);
			main.updateStorageSettings("closeDetails", a)
		}, chatFocused: function (a, c) {
			if (Tawk.liveMonitoringController.allServedList || this.chatList.length) a ? (this.chatList.setEach("inView", !1), a.set("inView", !0), a.clearUnseen()) : "undefined" !== typeof c && this.chatList.length && (c >= this.chatList.length ? this.chatList.objectAt(c - 1).set("inView", !0) : this.chatList.objectAt(c).set("inView", !0))
		},
		focusNextChat: function () {
			var a, c = this.chatList.findProperty("inView", !0);
			c && 1 !== this.chatList.length && (a = this.chatList.indexOf(c), a = a === this.chatList.length - 1 ? 0 : a + 1, c.set("inView", !1), this.chatList.objectAt(a).setProperties({
				inView: !0,
				show: !0,
				autoFocus: !0
			}))
		}
	});
	Tawk.chatController = Tawk.ChatController.create();
	Tawk.AgentChatController = Ember.Controller.extend({
		chatListBinding: "Tawk.chatController.chatList",
		popoutChatList: [],
		agentChatQueue: [],
		hiddenChatList: [],
		groupMessagesList: [],
		directMessagesListBinding: "Tawk.agentsController.nonHiredAgents",
		inlineGroupChat: !1,
		inlineDirectMessage: !1,
		latestDirectMessagesList: [],
		latestGroupMessagesList: [],
		isProcessing: !0,
		agentsProcessed: function () {
			Tawk.agentsController.agentsProcessed && (this.latestDirectMessagesList.clear(), this.latestGroupMessagesList.clear(), this.groupMessagesList.clear(), this.getGroupsList())
		}.observes("Tawk.agentsController.agentsProcessed"),
		getGroupsList: function () {
			var a, c, d = [], b = this, e = !1, f = moment(), g = [], h = [], k = [], l = [];
			this.set("isProcessing", !0);
			socketConnector.getGroups(function (m,
			                                    n) {
				if (!m) {
					a = n.groups;
					c = n.unseen;
					for (var p = 0; p < a.length; p++) {
						var q, r = a[p], s = [], u = [];
						if ("agent" === r.t) {
							if (2 !== r.p.length) continue;
							q = r.p[0] === Tawk.userController.user.id ? b.directMessagesList.findProperty("id", r.p[1]) : b.directMessagesList.findProperty("id", r.p[0]);
							if (!q) continue;
							q.setProperties({groupId: r.ch, pin: r.pin});
							r.pin ? l.pushObject(q) : r.lmt && 10 >= f.diff(moment(r.lmt), "days") && h.pushObject(q)
						} else {
							(q = b.groupMessagesList.findProperty("groupId", r.ch)) || (q = Tawk.AgentGroupModel.create({
								name: r.n,
								groupId: r.ch
							}));
							q.set("pin", r.pin);
							s.pushObject(Tawk.agentsController.userAgent);
							for (var v = 0; v < r.p.length; v++) {
								var w;
								r.p[v] !== Tawk.userController.user.id && ((w = Tawk.agentsController.getAgent(r.p[v])) ? s.pushObject(w) : u.push(r.p[v]))
							}
							u.length ? b.getUnknownAgentNames(q, u, s) : q.set("participants", sortList(s, "name"));
							d.pushObject(q);
							r.pin ? k.pushObject(q) : r.lmt && 10 >= f.diff(moment(r.lmt), "days") && g.pushObject(q)
						}
						-1 !== c.indexOf(q.groupId) && (q.isGroup && !k.findProperty("groupId", q.groupId) ? (k.pushObject(q), -1 !== g.indexOf(q) &&
						g.removeObject(q)) : q.isGroup || l.findProperty("groupId", q.groupId) || (l.pushObject(q), -1 !== h.indexOf(q) && h.removeObject(q)), q.setProperties({
							newChat: !0,
							unSeen: !0
						}), e = !0)
					}
					e && notificationController.notifyAgentChatMessage();
					10 > k.length && k.pushObjects(g.slice(0, 10 - k.length));
					10 > l.length && l.pushObjects(h.slice(0, 10 - l.length));
					b.latestGroupMessagesList.pushObjects(sortList(k, "groupName"));
					b.latestDirectMessagesList.pushObjects(sortList(l, "name"));
					b.groupMessagesList.pushObjects(d)
				}
				b.set("isProcessing", !1);
				b.clearChatQueue()
			})
		},
		getUnknownAgentNames: function (a, c, d) {
			socketConnector.getAgentNames(c, function (b, c) {
				b || (c.forEach(function (a) {
					d.pushObject(Ember.Object.create({id: a._id, name: a.n, status: "invisible", isOwn: !1}))
				}), a.set("participants", sortList(d, "name")))
			})
		},
		moveChatToFront: function (a) {
			var c = this.popoutChatList.findProperty("groupId", a);
			c && (this.popoutChatList.removeObject(c), this.popoutChatList.pushObject(c), this.showChat(a))
		},
		hideChat: function (a) {
			var c = this.popoutChatList.findProperty("groupId",
				a);
			c && this.hiddenChatList.pushObject(Ember.Object.create({
				groupId: a,
				name: c.isGroup ? c.get("groupName") : c.name
			}))
		},
		showChat: function (a) {
			(a = this.hiddenChatList.findProperty("groupId", a)) && this.hiddenChatList.removeObject(a)
		},
		closeHiddenChat: function (a) {
			var c = this.hiddenChatList.findProperty("groupId", a);
			(a = this.popoutChatList.findProperty("groupId", a)) && c && (this.hiddenChatList.removeObject(c), this.closeChat(a))
		},
		openGroupChat: function (a) {
			var c, d = this;
			if (c = this.groupMessagesList.findProperty("groupId",
					a)) c.setProperties({
				showFlash: !1,
				show: !1,
				focus: !1
			}), Tawk.leftPanel.closeMembersMessageList(!0), c.isOpen ? c.isInline ? (Tawk.chatController.chatFocused(c), c.set("show", !0), window.location.hash = "/chat") : c.set("focus", !0) : (c.setProperties({
				isOpen: !0,
				previousConversationUpdated: !1,
				isProcessingHistory: !0
			}), this.inlineGroupChat ? (c.set("isInline", !0), this.chatList.pushObject(c), Tawk.chatController.chatFocused(c), window.location.hash = "/chat") : (this.set("isInline", !1), this.popoutChatList.pushObject(c)), this.addGroupToLatest(c),
				socketConnector.loadGroupChatHistory({groupId: c.groupId}, function (a, e) {
					a ? (c.set("loadError", !0), c.set("isProcessingHistory", !1)) : (c.processHistory(e), c.lastCorrectVersion && c.lastCorrectVersion.conversationId && c.lastCorrectVersion.cver && !c.hasMoreUnseen ? d.acknowledgeSeen(c) : c.invited && c.setProperties({
						unSeen: !1,
						newChat: !1,
						hasMoreUnseen: !1
					}))
				}))
		},
		openChat: function (a) {
			var c, d = this;
			if (c = this.directMessagesList.findProperty("id", a)) c.setProperties({
				showFlash: !1,
				show: !1,
				focus: !1
			}), Tawk.leftPanel.closeMembersMessageList(!0),
				c.isOpen ? c.isInline ? (Tawk.chatController.chatFocused(c), c.set("show", !0), window.location.hash = "/chat") : c.set("focus", !0) : (c.setProperties({
					isOpen: !0,
					previousConversationUpdated: !1,
					isProcessingHistory: !0
				}), this.inlineDirectMessage ? (c.set("isInline", !0), this.chatList.pushObject(c), Tawk.chatController.chatFocused(c), window.location.hash = "/chat") : (c.set("isInline", !1), this.popoutChatList.pushObject(c)), this.addAgentToLatest(c), socketConnector.loadAgentChatHistory({receiverId: c.id}, function (a, e) {
					a ? (c.set("loadError",
						!0), c.set("isProcessingHistory", !1)) : (c.set("loadError", !1), c.processHistory(e), c.lastCorrectVersion && (c.lastCorrectVersion.conversationId && c.lastCorrectVersion.cver && !c.hasMoreUnseen) && d.acknowledgeSeen(c))
				}))
		},
		closeChat: function (a) {
			var c;
			a.isInline ? (a.inView && (c = this.chatList.indexOf(a)), this.chatList.removeObject(a), Tawk.chatController.chatFocused(null, c)) : this.popoutChatList.removeObject(a);
			a.setProperties({isOpen: !1, inView: !1, newMessage: !1, showFlash: !1, show: !1, isInline: !1});
			a.draftText ? a.set("hasDraft",
				!0) : a.set("hasDraft", !1);
			a.clearConversations()
		},
		popInChat: function (a) {
			a.set("isInline", !0);
			this.popoutChatList.removeObject(a);
			Tawk.chatController.chatFocused(a);
			this.chatList.pushObject(a);
			"chat" !== Tawk.routeManager.get("currentState.name") && (window.location.hash = "/chat")
		},
		popOutChat: function (a) {
			var c;
			a.inView && (c = this.chatList.indexOf(a));
			a.setProperties({isInline: !1, inView: !1});
			this.popoutChatList.pushObject(a);
			this.chatList.removeObject(a);
			Tawk.chatController.chatFocused(null, c)
		},
		loadAgentChatHistory: function (a,
		                                c, d) {
			var b = {}, e = this, f = this.chatList.findProperty("groupId", a);
			done = function (a, b) {
				if (a) return f.set("loadError", !0), f.set("isProcessingHistory", !1), d();
				f.set("loadError", !1);
				f.processOlderHistory(b, !0);
				f.hasMoreUnseen || e.acknowledgeSeen(f);
				return d()
			};
			d = d || function () {
			};
			f || (f = this.popoutChatList.findProperty("groupId", a));
			if (!f || !f.hasOlder && !f.loadError) return d();
			f.set("previousConversationUpdated", !1);
			c && (b.before = c);
			f.isGroup ? (b.groupId = a, socketConnector.loadGroupChatHistory(b, done)) : (b.receiverId =
				f.id, socketConnector.loadAgentChatHistory(b, done))
		},
		getAgentList: function (a) {
			var c = [];
			this.directMessagesList.forEach(function (d) {
				d.id === a || d.isHiredOnly || c.pushObject(Ember.Object.create({
					id: d.id,
					name: d.name,
					isSelected: !1,
					isShown: !0,
					status: d.get("status")
				}))
			});
			return c
		},
		updateAgentChatMessages: function (a, c, d, b) {
			var e, f = this;
			e = c.cver;
			b = b || function () {
			};
			if (this.isSyncingAgentChat) return this.agentChatQueue.push({chat: a, messageData: c}), b();
			if (!a && (a = "s" === c.ctyp ? this.directMessagesList.findProperty("groupId",
					c.ch) : this.groupMessagesList.findProperty("groupId", c.ch), !a)) return b();
			if (!a.isOpen && d) return a.setProperties({newChat: !0, unSeen: !0}), b();
			"string" === typeof c.co && (c.co = new Date(c.co));
			if (a.lastCorrectVersion && a.lastCorrectVersion.conversationId === c.cid && a.lastCorrectVersion.cver === e) return b();
			if (!a.lastCorrectVersion || a.lastCorrectVersion.co <= c.co && (a.lastCorrectVersion.conversationId !== c.cid || a.lastCorrectVersion.conversationId === c.cid && a.lastCorrectVersion.cver === e - 1)) return d && (a.set("newMessage",
				!0), a.incomingMessage(c)), a.updateChatMessages(c), b();
			f.set("isSyncingAgentChat", !0);
			e = {
				chunkId: a.lastCorrectVersion.conversationId,
				version: a.lastCorrectVersion.cver,
				lastMsgTime: a.lastCorrectVersion.co
			};
			a.isGroup ? e.groupId = a.groupId : e.receiverId = a.id;
			socketConnector.syncAgentChat(a.isGroup, e, function (e, h) {
				if (e || !h || !h.chunks) return b();
				h.chunks = h.chunks.reverse();
				for (var k = 0; k < h.chunks.length; k++) for (var l = h.chunks[k], m = 0; m < l.c.length; m++) {
					var n = l.c[m];
					if (l.cid !== c.cid || n.cv !== c.cver) a.updateChatMessages(n),
						a.incomingMessage(n)
				}
				d && (a.set("newMessage", !0), a.incomingMessage(c));
				a.updateChatMessages(c);
				f.set("isSyncingAgentChat", !1);
				f.clearChatQueue();
				b()
			})
		},
		clearChatQueue: function () {
			var a;
			0 !== this.agentChatQueue.length && (a = this.agentChatQueue.shift(), this.updateAgentChatMessages(a.chat, a.messageData, !0))
		},
		sendMessage: function (a, c) {
			var d, b = null, e = this, f = function (c, f) {
				var k;
				if (c) return b.first().html('<i class="fa fa-warning txt-color-red"></i>');
				d.cver = f.cver;
				d.cid = f._id;
				d.groupId = f.ch;
				d.co = new Date;
				e.updateAgentChatMessages(a,
					d);
				k = moment(Date.now()).format("HH:mm");
				a.lastBlock && (!a.lastBlock.timeVal || a.lastBlock.timeVal && a.lastBlock.timeVal !== k) ? (b.first().html(k), a.lastBlock.timeVal = k) : b.first().html("")
			};
			c && (d = {
				uid: Tawk.userController.user.id,
				ut: "a",
				t: "c",
				n: languageParser.translate("generic", "me"),
				m: encodeStr(c),
				md: {rsc: Tawk.userController.user.resourceId}
			}, b = a.addToMessageBlock(d), a.set("invited", !1), b && (a.isGroup ? socketConnector.sendGroupChatMessage(a.groupId, c, f) : socketConnector.sendAgentMessage(a.id, c, f)))
		},
		incomingAgentMessage: function (a) {
			var c,
				d = this;
			if (this.isProcessing) this.agentChatQueue.push({messageData: a}); else {
				if ("s" === a.ctyp) {
					c = this.directMessagesList.findProperty("id", a.uid);
					if (!c) return;
					this.addAgentToLatest(c)
				} else {
					c = this.groupMessagesList.findProperty("groupId", a.ch);
					if (!c) return this.restartAgentGroupChat(a.ch);
					this.addGroupToLatest(c)
				}
				c.set("groupId", a.ch);
				c.set("invited", !1);
				a.uid === Tawk.userController.user.id ? c.isOpen && (a.n = languageParser.translate("generic", "me"), d.updateAgentChatMessages(c, a, !0)) : c.isOpen ? c.hasMoreUnseen ?
					d.updateAgentChatMessages(c, a, !0) : d.updateAgentChatMessages(c, a, !0, function () {
						d.acknowledgeSeen(c)
					}) : (notificationController.notifyAgentChatMessage(a.n, a.m, "s" === a.ctyp ? a.uid : c.groupId), c.set("newChat", !0), c.set("unSeen", !0), Tawk.leftPanel && Tawk.leftPanel.$() && Tawk.leftPanel.$().trigger("unseen-messages"))
			}
		},
		addGroup: function (a) {
			this.groupMessagesList.findProperty("groupId", a.groupId) || this.groupMessagesList.pushObject(a)
		},
		startGroupChat: function (a, c, d) {
			var b, e = this;
			d = d || function () {
			};
			socketConnector.startGroupChat({
				receiverIds: c.getEach("id"),
				name: a
			}, function (f, g) {
				if (f) return d(f);
				b = Tawk.AgentGroupModel.create({name: a, participants: c, groupId: g.ch, groupVersion: g.cver});
				e.addGroup(b);
				e.openGroupChat(b.groupId);
				d()
			})
		},
		removeInvitedAgents: function (a, c) {
			var d = c.getEach("id"), b = [];
			a.forEach(function (a) {
				d.contains(a.id) || b.pushObject(a)
			});
			return b
		},
		addAgentsToExistingGroup: function (a, c, d) {
			var b = this.chatList.findProperty("groupId", a) || this.popoutChatList.findProperty("groupId", a);
			d = d || function () {
			};
			if (!b) return d(!0);
			c.setEach("isOwn", !1);
			socketConnector.inviteAgentGroupChat(a,
				c.getEach("id"), function (a) {
					if (a) return d(a);
					b.participants.pushObjects(c);
					return d()
				})
		},
		addAgentToExistingGroups: function (a, c, d) {
			var b = this.groupMessagesList.findProperty("groupId", a);
			d = d || function () {
			};
			if (!b) return d(!0);
			socketConnector.inviteAgentGroupChat(a, [c.id], function (a) {
				if (a) return d(a);
				b.participants.pushObject(c);
				return d()
			})
		},
		restartAgentGroupChat: function (a) {
			var c = this;
			socketConnector.getAgentGroupChatDetails([a], function (d, b) {
				!d && (b && b.length) && (b[0].ch = a, c.groupChatInvitation(b[0]))
			})
		},
		addGroupToLatest: function (a) {
			var c = this, d = !1;
			-1 === this.latestGroupMessagesList.indexOf(a) && (this.latestGroupMessagesList.every(function (b, e) {
				return a.get("groupName").toLowerCase() < b.get("groupName").toLowerCase() ? (c.latestGroupMessagesList.insertAt(e, a), d = !0, !1) : !0
			}), d || this.latestGroupMessagesList.pushObject(a))
		},
		addAgentToLatest: function (a) {
			var c = this, d = !1;
			-1 === this.latestDirectMessagesList.indexOf(a) && (this.latestDirectMessagesList.every(function (b, e) {
				return a.name.toLowerCase() < b.name.toLowerCase() ?
					(c.latestDirectMessagesList.insertAt(e, a), d = !0, !1) : !0
			}), d || this.latestDirectMessagesList.pushObject(a))
		},
		groupChatInvitation: function (a) {
			var c, d = [], b = [], e = this, f = function () {
				c = e.groupMessagesList.findProperty("groupId", a.ch);
				c || (c = Tawk.AgentGroupModel.create({
					name: a.n,
					participants: d,
					groupId: a.ch,
					invited: !0
				}), e.addGroup(c));
				c.set("newChat", !0);
				e.addGroupToLatest(c);
				notificationController.notifyAgentChatMessage(c.get("groupName"), languageParser.translate("agent_chat", "invited_group"), a.ch)
			};
			d.push({
				id: Tawk.userController.user.id,
				name: Tawk.userController.user.fullName, status: "online", isOwn: !0
			});
			a.p.forEach(function (a) {
				var c;
				a !== Tawk.userController.user.id && ((c = Tawk.agentsController.getAgent(a)) ? d.push({
					id: c.id,
					name: c.name,
					status: c.get("status"),
					isOwn: !1
				}) : b.push(a))
			});
			if (!b.length) return f();
			socketConnector.getAgentNames(b, function (a, b) {
				a || (b.forEach(function (a) {
					d.pushObject({id: a._id, name: a.n, status: "invisible", isOwn: !1})
				}), f())
			})
		},
		leaveGroup: function (a) {
			var c = this, d = this.groupMessagesList.findProperty("groupId", a);
			d && socketConnector.leaveAgentGroupChatPermanent(a,
				function (a) {
					a || (c.groupMessagesList.removeObject(d), c.latestGroupMessagesList.removeObject(d), d.isInline ? c.chatList.removeObject(d) : c.popoutChatList.removeObject(d))
				})
		},
		updateGroupInformation: function (a) {
			var c = this.groupMessagesList.findProperty("groupId", a.ch), d = [], b = [], e = function () {
				b.length && c.set("participants", sortList(b, "name"))
			};
			if (c && !(c.groupVersion > a.cver)) {
				c.set("groupVersion", a.cver);
				a.n && c.set("name", a.n);
				b.pushObject(Tawk.agentsController.userAgent);
				a.p.forEach(function (a) {
					var c = Tawk.agentsController.getAgent(a);
					a !== Tawk.userController.user.id && (c ? b.pushObject(c) : d.push(a))
				});
				if (!d.length) return e();
				socketConnector.getAgentNames(d, function (a, c) {
					a || (c.forEach(function (a) {
						b.pushObject({id: a._id, name: a.n, status: "invisible", isOwn: !1})
					}), e())
				})
			}
		},
		hiddenNewMessage: function (a) {
			(a = this.hiddenChatList.findProperty("groupId", a)) && a.set("newMessage", !0)
		},
		actions: {
			showHiddenChat: function (a) {
				var c = this.hiddenChatList.findProperty("groupId", a);
				a = this.popoutChatList.findProperty("groupId", a);
				c && a && (a.isGroup ? this.openGroupChat(a.id) :
					this.openChat(a.id))
			}
		},
		saveGroupChatName: function (a, c, d) {
			var b = this, e = this.groupMessagesList.findProperty("groupId", a);
			if (!e) return d(!0);
			socketConnector.saveGroupChatName({name: c, groupId: a}, function (a) {
				if (a) return d(!0);
				e.set("name", c);
				b.addGroupToLatest(e);
				d()
			})
		},
		saveChatViewSettings: function (a, c) {
			var d = {}, b = this;
			d[a] = c ? "max" : "min";
			socketConnector.saveAgentChatSettings(d, function (d) {
				d || ("groupView" === a ? b.set("inlineGroupChat", c) : b.set("inlineDirectMessage", c))
			})
		},
		acknowledgeSeen: function (a, c) {
			c =
				c || function () {
				};
			socketConnector.acknowledgeAgentMessage(a.groupId, a.lastCorrectVersion.conversationId, a.lastCorrectVersion.cver, function () {
				a.setProperties({unSeen: !1, newChat: !1, hasMoreUnseen: !1});
				c()
			})
		},
		pinChatToSidebar: function (a, c) {
			var d = this, b = this.groupMessagesList.findProperty("groupId", a), e = function () {
				b.set("pin", !0);
				b.isGroup ? d.addGroupToLatest(b) : d.addAgentToLatest(b)
			};
			if (b) {
				if (c) return e();
				socketConnector.pinGroupChat({groupId: a}, function (a) {
					a || e()
				})
			} else if (b = this.directMessagesList.findProperty("id",
					a)) {
				if (c) return e();
				socketConnector.pinDMChat({receiverId: a}, function (a) {
					a || e()
				})
			}
		},
		unpinChatToSidebar: function (a, c) {
			var d = this.groupMessagesList.findProperty("groupId", a), b = function () {
				d.set("pin", !1)
			};
			if (d) {
				if (c) return b();
				socketConnector.unpinGroupChat({groupId: a}, function (a) {
					a || b()
				})
			} else if (d = this.directMessagesList.findProperty("id", a)) {
				if (c) return b();
				socketConnector.unpinDMChat({receiverId: a}, function (a) {
					a || b()
				})
			}
		}
	});
	Tawk.agentChatController = Tawk.AgentChatController.create();
	Tawk.VisitorChatController =
		Ember.Controller.extend(Tawk.HistoryInterface, {
			chatListBinding: "Tawk.chatController.chatList",
			totalColumns: 1,
			uploadHandles: {},
			detailsClosed: null,
			detailsClosedTriggered: null,
			visitorTimeInterval: null,
			syncCallUpdate: {},
			getChat: function (a) {
				for (var c = null, d = 0; d < this.chatList.length; d++) if (this.chatList[d]._id === a) {
					c = this.chatList[d];
					break
				}
				return c
			},
			getChatByVisitor: function (a) {
				for (var c = null, d = 0; d < this.chatList.length; d++) if (this.chatList[d].vid === a) {
					c = this.chatList[d];
					break
				}
				return c
			},
			hasJoinedConversation: function () {
				return 0 <
					this.chatList.filterProperty("hasJoinedConversation", !0).length
			},
			openChat: function (a) {
				var c;
				a.setProperties({showFlash: !1, isNewMessage: !1, show: !1, unSeen: !1});
				Tawk.leftPanel.closeMembersMessageList(!0);
				Tawk.chatController.chatFocused(a);
				if (this.getChat(a._id)) a.set("show", !0), window.location.hash = "/chat"; else {
					this.chatList.pushObject(a);
					a.set("isOpen", !0);
					a.set("messagePreview", null);
					a.set("isProcessingHistory", !0);
					a.processHistory();
					a.updateVisitorLocalTime();
					Tawk.webProperties.getAlert(a.pgid, function (c) {
						a.set("newAlertContent",
							c)
					});
					for (c in a.profiles) -1 === a.agentProfileIds.indexOf(c) && (a.agentProfiles.pushObject(a.profiles[c]), a.agentProfileIds.push(c));
					a.pgid === Tawk.webProperties.personalPage.id ? a.set("isPersonalPage", !0) : (c = Tawk.userController.defaultAlias, a.set("isPersonalPage", !1), Tawk.userController.aliases.forEach(function (c) {
						-1 === a.agentProfileIds.indexOf(c.aliasId) && c.enabled && (a.agentProfiles.pushObject(c), a.agentProfileIds.push(c.aliasId))
					}), a.agentProfiles.removeObject(c), a.agentProfiles.insertAt(0, c));
					"chat" !==
					Tawk.routeManager.get("currentState.name") && (window.location.hash = "/chat");
					null === this.visitorTimeInterval && this.startVisitorTimeInterval()
				}
			},
			closeChat: function (a) {
				var c;
				if (a = this.getChat(a)) a.inView && (c = this.chatList.indexOf(a)), this.chatList.removeObject(a), a.setProperties({
					isOpen: !1,
					inView: !1,
					show: !1,
					unSeen: !1,
					showFlash: !1,
					isNewMessage: !1
				}), Tawk.chatController.chatFocused(null, c), a.hasJoinedConversation ? this.leaveChat(a) : this.unsubscribeChat(a), 0 === this.chatList.length && (this.stopVisitorTimeInterval(),
					Tawk.routeManager.goToPreviousView())
			},
			restartChat: function (a, c) {
				if (-1 !== this.chatList.indexOf(a) && (a.set("hasJoinedConversation", !1), a.set("isVisitorPresent", !0), a.set("messagePreview", null), a.set("conversationUpdated", !1), !a.isPersonalPage)) {
					var d = Tawk.userController.defaultAlias;
					-1 === a.agentProfileIds.indexOf(d.aliasId) && (d.set("isDefault", !0), a.agentProfiles.insertAt(0, d), a.agentProfileIds.push(d.aliasId));
					Tawk.userController.aliases.forEach(function (b) {
						-1 === a.agentProfileIds.indexOf(b.aliasId) &&
						b.enabled && (a.agentProfiles.pushObject(b), a.agentProfileIds.push(b.aliasId))
					})
				}
			},
			leaveChat: function (a) {
				var c;
				if (a && a.hasJoinedConversation) return a.set("hasJoinedConversation", !1), c = {
					sessionKey: a._id,
					pageId: a.pgid,
					agentDisplayName: a.get("_agentName")
				}, 1 < a.get("joinedFromOtherResource") ? c.subscribe = !1 : c.subscribe = !0, a.ongoingCall && (a.set("ongoingCall", !1), endWebRTCCall()), socketConnector.leaveConversation(c, function (c, b) {
					Tawk.liveMonitoringController.unsubscribeVisitorSession(a)
				})
			},
			unsubscribeChat: function (a) {
				!a ||
				a.hasJoinedConversation || 0 < a.get("joinedFromOtherResource") || a.cr || (a.ha ? socketConnector.unsubscribeVisitorMessage(a._id, a.pgid, function (a) {
				}) : Tawk.liveMonitoringController.removeFromServed(a._id))
			},
			joinChat: function (a, c, d, b) {
				var e = null, e = {}, e = c ? c : Tawk.userController.defaultAlias;
				if (!e) return b(!0);
				a.set("_agentName", e.displayName);
				e = {
					sessionKey: a._id,
					pageId: a.pgid,
					agentProfileId: e.aliasId,
					agentDisplayName: decodeStr(e.displayName),
					agentProfileImage: e.aliasImage,
					agentPosition: null !== e.positionTitle ?
						decodeStr(e.positionTitle) : "",
					forceJoin: d
				};
				return socketConnector.joinConversation(e, function (c, d) {
					if (c) return b(c);
					void 0 === c && void 0 === d && a.set("hasJoinedConversation", !0);
					a.set("ignore", !1);
					b();
					if (d) return a.incomingMessage(d)
				})
			},
			sendMessage: function (a, c, d) {
				var b, e = null, f = null;
				c && (e = this.getChat(a)) && (b = d ? encodeStr(Tawk.userController.user.fullName) : e._agentName, f = e.addToMessageBlock({
					uid: Tawk.userController.user.id,
					ut: "a",
					t: "c",
					n: b,
					m: encodeStr(c),
					md: {rsc: Tawk.userController.user.resourceId, ao: d},
					vsk: a
				}), e.set("isOwn", !0), f && socketConnector.sendVisitorMessage({
					sessionKey: e._id,
					pageId: e.pgid,
					aliasName: decodeStr(b),
					message: c,
					agentOnly: d
				}, function (a, b) {
					var c, d = f.first();
					if (a) return e = null, d.html('<i class="fa fa-warning txt-color-red"></i>');
					e.get("c") ? e.get("c").push(b) : e.set("c", [b]);
					e.set("cver", b.cver);
					e.set("lastSeenChat", b.cver);
					c = moment(b.co).format("HH:mm");
					e.lastBlock && (!e.lastBlock.timeVal || e.lastBlock.timeVal && e.lastBlock.timeVal !== c) ? (d.html(c), e.lastBlock.timeVal = c) : d.html("");
					e =
						null
				}))
			},
			incomingMessage: function (a) {
				var c = this.getChat(a.vsk);
				if ("WEBRTC_CALL" === a.m && a.md && a.md.webrtc) return this.webRTCIncomingCall(c, a);
				if ("VISITOR_NAVIGATION" === a.m) c ? c.changePageUrl(a) : Tawk.liveMonitoringController.queueMessageUrl(a); else if ("CHAT_ENDED" === a.m) {
					if (!c) return;
					c.chatEnded(a.md)
				}
				c || (c = Tawk.liveMonitoringController.getSubscribedVisitor(a.vsk) || Tawk.liveMonitoringController.getVisitor(a.vsk));
				c && c.incomingMessage(a)
			},
			showMessagePreview: function (a) {
				var c = this.getChat(a.vsk);
				c && c.set("messagePreview",
					emojione.toImage(a.msg))
			},
			agentIsTyping: function (a) {
				var c, d = this.getChat(a.vsk);
				d && (c = d.typingAgents.findProperty("agentId", a.aid), c || (c = {
					uid: a.aid,
					md: {rsc: a.rsc, ao: !!a.ao},
					vsk: a.vsk
				}, c = encodeStr(decodeStr(Tawk.agentsController.getAgentNameForMessage(c))), d.typingAgents.pushObject(Ember.Object.create({
					agentId: a.aid,
					message: a.ao ? languageParser.translate("visitors", "agent_whispering", {name: c}) : languageParser.translate("visitors", "agent_typing", {name: c})
				}))))
			},
			agentStoppedTyping: function (a) {
				var c = this.getChat(a.vsk);
				c && (a = c.typingAgents.findProperty("agentId", a.aid)) && c.typingAgents.removeObject(a)
			},
			updateAgentPresence: function (a) {
				var c, d = this.getChat(a.vsk) || Tawk.liveMonitoringController.getSubscribedVisitor(a.vsk);
				d && (d.incomingMessage(a), a.md.pid && (conversationProcess.processAgentPresence(a, d.agentPrensence, d.agents, d.profiles), c = {
					aliasId: a.md.pid,
					displayName: a.n,
					positionTitle: a.md.pst,
					aliasImage: a.md.pi
				}, -1 === d.agentProfileIds.indexOf(c.aliasId) && (d.agentProfiles.pushObject(c), d.agentProfileIds.push(c.aliasId)),
				a.md.rsc === Tawk.userController.user.resourceId && d.set("_agentName", a.n)))
			},
			banVisitor: function (a, c, d, b) {
				Tawk.liveMonitoringController.banVisitor(a, c, d, function (c) {
					if (c) return b(c);
					a.set("b", !0);
					a.set("hasJoinedConversation", !1);
					a.set("isVisitorPresent", !1);
					a.set("messagePreview", null);
					b()
				})
			},
			showTranscript: function (a, c, d, b) {
				var e = this.getChat(a);
				if (!e) return b(!0);
				a = e.historyList.getItem(c);
				if (!d && !a) return b(!0);
				loadTranscript(c, e.pgid, function (a) {
					if (!a) return b(!0);
					b(null, a)
				})
			},
			printTranscript: function (a) {
				printTranscript(a)
			},
			getCopyFormat: function (a) {
				getCopyFormat(a)
			},
			changeColumn: function (a) {
				var c = this, d = parseInt(a, 10);
				if (1 > d || 4 < d) return callback();
				socketConnector.updateWindowCount(d, function (a) {
					a || c.set("totalColumns", d)
				})
			},
			updateAlias: function (a) {
				for (var c, d, b = this.chatList.filterProperty("isPersonalPage", !1), e = 0; e < b.length; e++) d = b[e], c = d.agentProfiles.findProperty("aliasId", a.aliasId), a.enabled ? (a.isDefault ? (d.agentProfiles.setEach("isDefault", !1), d.agentProfiles.removeObject(c), d.agentProfiles.insertAt(0, a)) : d.agentProfiles.pushObject(a),
				-1 === d.agentProfileIds.indexOf(a.aliasId) && d.agentProfileIds.push(a.aliasId)) : c && (d.agentProfiles.removeObject(c), d.agentProfileIds.removeAt(d.agentProfileIds.indexOf(c.aliasId)))
			},
			deleteAliases: function (a) {
				for (var c, d, b = this.chatList.filterProperty("isPersonalPage", !1), e = 0; e < b.length; e++) {
					c = b[e];
					for (var f = 0; f < a.alsids.length; f++) if (d = a.alsids[f], d = c.agentProfiles.findProperty("aliasId", d)) c.agentProfiles.removeObject(d), c.agentProfileIds.removeAt(c.agentProfileIds.indexOf(d.aliasId))
				}
			},
			addHandle: function (a,
			                     c) {
				this.getChat(c) && this.set("uploadHandles." + a, c)
			},
			uploadComplete: function (a) {
				var c, d = this, b = this.uploadHandles[a.handle];
				b && (c = this.getChat(b)) && (delete this.uploadHandles[a.handle], socketConnector.sendFileUpload(b, c.pgid, c._agentName, {
					fileName: a.filename,
					name: a.name,
					type: a.extension,
					mimeType: a.mimeType,
					size: a.size
				}, function (b, c) {
					b || (Tawk.visitorChatContainerView.uploadComplete(a.handle), d.incomingMessage(c))
				}))
			},
			updateAttribute: function (a) {
				var c = [], d = this.getChat(a.vsk);
				!d || d.customAttributes.version >
				a.attrv || (Object.keys(a.attr).forEach(function (b) {
					null !== a.attr[b] && c.pushObject({key: beautifyAPIKey(b), value: beautifyAPIValue(a.attr[b])})
				}), d.set("customAttributes.data", c), d.set("customAttributes.version", a.attrv))
			},
			getTagListForChat: function (a, c) {
				var d = [], b = this.getChat(a);
				if (!b) return c(!0);
				socketConnector.getChatTagsByProperty(b.pgid, function (a, b) {
					if (a) return c(a);
					b.forEach(function (a) {
						d.push(decodeStr(a))
					});
					return c(null, d)
				})
			},
			updateChatTags: function (a, c, d) {
				var b = this.getChat(a), e = [], f = [];
				if (!b) return d(!0);
				b.tags && b.tags.length ? (c.forEach(function (a) {
					-1 === b.tags.indexOf(a) && e.push(a)
				}), b.tags.forEach(function (a) {
					-1 === c.indexOf(a) && f.push(a)
				})) : e = c;
				if (0 === e.length && 0 === f.length) return d();
				socketConnector.updateOpenedChatTags(a, b.pgid, e, f, function (a, c) {
					var e = [];
					a || (c.tags.forEach(function (a) {
						e.push(decodeStr(a))
					}), b.setProperties({tags: c.tags, tagsv: c.tagsv}));
					return d(a)
				})
			},
			createTicket: function (a, c, d) {
				socketConnector.createTicket(a.propertyId, a, function (b, c) {
					if (b) return d(!0);
					socketConnector.getTicket(a.propertyId,
						c.ticketId, function (a, b) {
							if (a) return d(null);
							d(null, b.hId)
						})
				})
			},
			getTicketTagListForProperty: function (a, c) {
				var d = [];
				socketConnector.getTags(a, function (a, e) {
					!a && e.tags.length && e.tags.forEach(function (a) {
						d.push(decodeStr(a))
					});
					c(a, d.sort())
				})
			},
			notifyAlertInChat: function (a, c) {
				var d = this.chatList.filterProperty("pgid", a);
				d.length && d.forEach(function (a) {
					a.set("newAlertContent", c)
				})
			},
			disconnectWebRTC: function () {
				this.webrtcWin && this.webrtcWin.close()
			},
			declineCall: function (a, c) {
				var d = {propertyId: a.pgid, callId: a.incomingCallId};
				c = c || function () {
				};
				a.setProperties({incomingCall: !1, incomingCallId: null});
				socketConnector.rejectCall(d, function (a, d) {
					if (a) return c(!0);
					c()
				})
			},
			loadPropertyHistory: function (a, c, d) {
				var b = [];
				d = d || function () {
				};
				c.includeTickets = !1;
				c.includeChats = !0;
				c.sort = sortType.UPDATE_DESC;
				c.assigneeId && (c.assignees = "0" === c.assigneeId ? [] : "hired_agent" === c.assigneeId ? Tawk.webProperties.getHiredAgentsIds(a) : [c.assigneeId], delete c.assigneeId);
				socketConnector.getConversationsList(a, c, function (a, c) {
					if (a) return d(!0);
					c.hits.forEach(function (a) {
						a.time =
							formatDate(a.updatedOn);
						a.agentsName = Tawk.agentsController.getAgentsName(a.agents).join(", ");
						b.pushObject(Ember.Object.createWithMixins(a))
					});
					d(null, {list: b, total: c.total})
				})
			},
			getPropertyAgents: function (a) {
				var c = [], d = !1, b = Tawk.webProperties.getProperty(a);
				b && (b.currentAgents.forEach(function (a) {
					a.en && (!b.isClientProperty && a.ha ? d = !0 : c.pushObject(Ember.Object.create({
						id: a.aid,
						name: decodeStr(Tawk.agentsController.getName(a.aid))
					})))
				}), d && c.pushObject(Ember.Object.create({id: "hired_agent", name: "Hired Agents"})));
				return sortList(c, "name")
			},
			addAttachment: function (a, c, d, b, e, f) {
				var g;
				f && (b ? g = "new-ticket" : e(!0), fileUploader.uploadAttachment(a, c, f, g, d, function (a, b) {
					a && e(!0, b);
					e()
				}))
			},
			startVisitorTimeInterval: function () {
				var a, c, d = this, b = new Date, b = 6E4 - 1E3 * b.getSeconds() + b.getMilliseconds();
				this.stopVisitorTimeInterval();
				this.set("visitorTimeInterval", setTimeout(function () {
					a = 0;
					for (c = d.chatList.length; a < c; a++) d.chatList[a].isAgentChat || d.chatList[a].updateVisitorLocalTime();
					d.startVisitorTimeInterval()
				}, b))
			},
			stopVisitorTimeInterval: function () {
				clearTimeout(this.visitorTimeInterval);
				this.set("visitorTimeInterval", null)
			},
			webRTCIncomingCall: function (a, c) {
				var d = $(HandlebarsTemplates.callDetailsView({callId: c.md.clid}));
				a.set("syncCallData", !0);
				a.set("newBlock", d);
				conversationProcess.processWebRTCCallBlock(c.md.clid, a.pgid, d, !0, function (b, d) {
					a.set("syncCallData", !1);
					d && a.set("callData." + c.md.clid, d)
				})
			},
			webRTCCallUpdate: function (a) {
				var c, d, b = !1, e = this, f = this.getChat(a.vsk);
				f || (Tawk.conversationsController.conversationData && Tawk.conversationsController.conversationData.sk === a.vsk ?
					(f = Tawk.conversationsController.conversationData, b = !0) : Tawk.conversationsController.modalTranscriptData && Tawk.conversationsController.modalTranscriptData.sk === a.vsk && (f = Tawk.conversationsController.modalTranscriptData, b = !0));
				if (f) {
					c = f.callData[a.clid];
					callView = $("#" + a.clid);
					if (f.syncCallData) {
						if ((d = this.syncCallUpdate[a.clid]) && d.ver >= a.ver) return;
						this.syncCallUpdate[a.clid] = a
					}
					if (!c || c.ver !== a.ver - 1) return f.set("syncCallData", !0), conversationProcess.processWebRTCCallBlock(a.clid, f.pgid, callView,
						b ? !1 : !0, function (a, b) {
							f.set("syncCallData", !1);
							if (d = e.syncCallUpdate[b.clid]) delete e.syncCallUpdate[b.clid], e.webRTCCallUpdate(d);
							calllData && f.set("callData." + b.clid, calllData)
						});
					f.set("callData." + a.clid + ".ver", a.ver);
					conversationProcess.displayCallInformation(a.event, c, callView)
				}
			},
			webRTCCAllIgnored: function (a) {
				var c;
				if (c = this.getChat(a.vsk)) if (c = c.callData[a.clid]) a = $("#" + a.clid), a.length && a.find(".webrtc-join-container").removeClass("hidden")
			}
		});
	Tawk.visitorChatController = Tawk.VisitorChatController.create();
	Tawk.VisitorProperty = Ember.Object.extend({
		id: null, name: null, list: null, init: function () {
			this.set("list", [])
		}, firstCharName: function () {
			return this.name && this.name.length ? this.name.charAt(0) : ""
		}.property("name")
	});
	Tawk.LeftPanelController = Ember.Controller.extend({
		chatsListBinding: Ember.Binding.oneWay("Tawk.liveMonitoringController.allServedList"),
		chatsListByProperty: [],
		myChatsListByProperty: [],
		chatsList: [],
		urlMessageQueue: [],
		myChatsList: [],
		init: function () {
			this.chatsList.addArrayObserver(this, {
				willChange: this.chatsListWillChange,
				didChange: this.chatsListDidChange
			});
			this.myChatsList.addArrayObserver(this, {
				willChange: this.myChatsListWillChange,
				didChange: this.myChatsListDidChange
			})
		},
		chatsListWillChange: function (a, c, d, b) {
			d = c + d;
			if (!(c >= a.length)) for (d > a.length && (d = a.length); c < d; c++) {
				b = a[c];
				var e = this.chatsListByProperty.findProperty("id", b.pgid);
				if (!e) break;
				e.list.removeObject(b)
			}
		},
		chatsListDidChange: function (a, c, d, b) {
			d = c + b;
			if (!(c >= a.length)) for (d > a.length && (d = a.length); c < d; c++) {
				b = a[c];
				var e = this.chatsListByProperty.findProperty("id",
					b.pgid);
				e || (e = Tawk.VisitorProperty.create({
					id: b.pgid,
					name: decodeStr(Tawk.webProperties.getPropertyName(b.pgid)),
					isOpen: !0
				}), this.chatsListByProperty.pushObject(e), this.set("chatsListByProperty", sortList(this.chatsListByProperty, "name")));
				e.list.pushObject(b)
			}
		},
		myChatsListWillChange: function (a, c, d, b) {
			d = c + d;
			if (!(c >= a.length)) for (d > a.length && (d = a.length); c < d; c++) {
				b = a[c];
				var e = this.myChatsListByProperty.findProperty("id", b.pgid);
				if (!e) break;
				e.list.removeObject(b)
			}
		},
		myChatsListDidChange: function (a, c, d,
		                                b) {
			d = c + b;
			if (!(c >= a.length)) for (d > a.length && (d = a.length); c < d; c++) {
				b = a[c];
				var e = this.myChatsListByProperty.findProperty("id", b.pgid);
				e || (e = Tawk.VisitorProperty.create({
					id: b.pgid,
					name: decodeStr(Tawk.webProperties.getPropertyName(b.pgid)),
					isOpen: !0
				}), this.myChatsListByProperty.pushObject(e), this.set("myChatsListByProperty", sortList(this.myChatsListByProperty, "name")));
				e.list.pushObject(b)
			}
		},
		agentHasOngoingChatsForProperty: function (a) {
			return (a = this.myChatsListByProperty.findProperty("id", a)) ? 0 < a.list.length ?
				!0 : !1 : !1
		},
		updatePropertyIsOpen: function (a, c) {
			var d = this.chatsListByProperty.findProperty("id", a);
			d && d.set("isOpen", c)
		},
		totalNewAgentChat: function () {
			return Tawk.agentsController.agents.filterProperty("newChat", !0).length
		}.property("Tawk.agentsController.agents.@each.newChat"),
		totalNewGroupChat: function () {
			return Tawk.agentsController.groups.filterProperty("newChat", !0).length
		}.property("Tawk.agentsController.groups.@each.newChat"),
		allChats: function () {
			return this.chatsList.sortBy("activeTimestamp").reverse()
		}.property("chatsList.@each.activeTimestamp"),
		myChats: function () {
			return this.myChatsList.sortBy("activeTimestamp").reverse()
		}.property("myChatsList.@each.activeTimestamp"),
		participatingAgentChanged: function () {
			var a, c = this;
			a = this.chatsList.filter(function (a) {
				return a.get("participatingAgents").contains(Tawk.userController.user.id) || a.isOpen ? !0 : !1
			});
			a.forEach(function (a) {
				c.myChatsList.contains(a) || c.myChatsList.pushObject(a)
			});
			this.myChatsList.removeObjects(this.myChatsList.filter(function (c) {
				return a.contains(c) ? !1 : !0
			}))
		}.observes("chatsList.@each.participatingAgents.length",
			"chatsList.@each.isOpen"),
		unAnsweredCount: function () {
			return {num: Tawk.liveMonitoringController.allUnansweredList.filterProperty("ignore", !1).length}
		}.property("Tawk.liveMonitoringController.allUnansweredList.@each.ignore"),
		unAnsweredIgnoredCount: function () {
			return {num: Tawk.liveMonitoringController.allUnansweredList.filterProperty("ignore", !0).length}
		}.property("Tawk.liveMonitoringController.allUnansweredList.@each.ignore"),
		hasMoreICR: function () {
			return 1 < Tawk.liveMonitoringController.allUnansweredList.length
		}.property("Tawk.liveMonitoringController.allUnansweredList.length"),
		compressICR: function () {
			var a = [];
			Tawk.liveMonitoringController.allUnansweredList.forEach(function (c) {
				var d = a.findProperty("propertyId", c.pgid);
				d || (d = {
					propertyId: c.pgid,
					propertyName: c.pgn,
					chatsTotal: 0,
					isClientProperty: !!c.isClientProperty
				}, a.pushObject(d));
				d.chatsTotal += 1
			});
			return a
		}.property("Tawk.liveMonitoringController.allUnansweredList.length")
	});
	Tawk.leftPanelController = Tawk.LeftPanelController.create();
	Tawk.IAdminSubViewController = Ember.Mixin.create({
		lastViews: null, getLastViews: function () {
			var a =
				null, c = main.storageSettings["admin-view"];
			if (c) try {
				a = JSON.parse(c)
			} catch (d) {
				a = null
			}
			null === a ? this.set("lastViews", {}) : this.set("lastViews", a)
		}, saveLastSubView: function (a) {
			var c = this.lastViews;
			Tawk.routing.getPath();
			for (var d in a) a.hasOwnProperty(d) && (c[d] = a[d]);
			c.view = "admin";
			main.updateStorageSettings("admin-view", JSON.stringify(c));
			this.set("lastViews", c)
		}
	});
	Tawk.ShortcutsController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		shortcutsList: [],
		filteredList: [],
		pagedList: null,
		activeShortcut: null,
		activeProperty: null,
		currentVersion: 7,
		isReset: !0,
		storedShortcuts: null,
		isGlobalShortcut: null,
		showAddoptionButton: !1,
		optionListChanged: function () {
			this.set("showAddoptionButton", this.activeShortcut && 4 > this.activeShortcut.options.length)
		}.observes("activeShortcut.options.length"),
		init: function () {
			this._super();
			this.resetData()
		},
		initializeShortcuts: function () {
			this.getShortcuts()
		},
		getShortcuts: function (a) {
			var c, d = this, b = [],
				e = main.storageSettings && null !== main.storageSettings.shortcuts ? JSON.parse(main.storageSettings.shortcuts) :
					null;
			a = a || function () {
			};
			if (e) {
				if (!e.currentVersion || e.currentVersion < this.currentVersion) e = {};
				for (var f in e) e[f].public && b.push({
					pgid: f,
					aid: e[f].public.aid,
					scver: e[f].public.scver
				}), e[f].personal && b.push({pgid: f, aid: e[f].personal.aid, scver: e[f].personal.scver})
			} else e = {};
			socketConnector.getShortcutsChanges(b, function (b, f) {
				if (b) setTimeout(function () {
					d.getShortcuts(a)
				}, 0); else {
					if (f.shortcuts && 0 < f.shortcuts.length) for (c = 0; c < f.shortcuts.length; c++) {
						var k = f.shortcuts[c];
						e[k.pgid] || (e[k.pgid] = {});
						"global" ===
						k.pgid ? e[k.pgid].personal = k : e[k.pgid][k.t] = k
					}
					if (f.deactivated && 0 < f.deactivated.length) for (c = 0; c < f.deactivated.length; c++) delete e[f.deactivated[c].pgid];
					e.currentVersion = d.currentVersion;
					main.updateStorageSettings("shortcuts", JSON.stringify(e));
					d.set("storedShortcuts", e);
					a(f)
				}
			})
		},
		openProperty: function (a, c, d) {
			var b = Tawk.routing.getPath();
			this.resetData();
			this.set("isLoading", !0);
			d ? (this.set("isGlobalShortcut", !0), this.set("activeProperty", null)) : (this.set("isGlobalShortcut", !1), this.set("activeProperty",
				a));
			this.set("activeShortcut", null);
			this.set("pagedList", Tawk.PagingListModel.create({perpage: c}));
			this.loadList();
			this.getLastViews();
			Tawk.routing.titlePath.subviewName = languageParser.translate("shortcuts", "view_title");
			Tawk.routing.setTitle();
			this.isGlobalShortcut ? this.saveLastSubView({itemId: null}) : b.itemId ? this.openItem(b.itemId) : this.lastViews && "shortcuts" === this.lastViews.subView && this.lastViews.itemId ? this.openItem(this.lastViews.itemId) : this.saveLastSubView({itemId: null})
		},
		resetData: function () {
			this.set("isReset",
				!0);
			this.set("searchQuery", null);
			this.shortcutsList.clear();
			this.filteredList.clear();
			this.set("activeShortcut", null);
			this.set("activeProperty", null);
			this.set("pagedList", null);
			this.set("isGlobalShortcut", null)
		},
		loadList: function () {
			var a, c, d;
			a = this.storedShortcuts;
			var b = [];
			if (this.activeProperty || this.isGlobalShortcut) {
				this.set("isReset", !1);
				this.pagedList.reset();
				this.pagedList.startList();
				this.shortcutsList.clear();
				d = this.isGlobalShortcut ? "global" : this.activeProperty.id;
				if (c = a[d]) for (var e in c) {
					var f =
						0, g = c[e];
					a = {
						shortcutId: g._id,
						propertyId: d,
						dataType: e,
						dataTypeText: languageParser.translate("shortcuts", e),
						toBeDeleted: !1,
						isGlobal: this.isGlobalShortcut,
						isProfile: this.activeProperty && this.activeProperty.isPersonal
					};
					for (var h in g.scs) if (g.scs[h].sck) {
						a.key = decodeStr(g.scs[h].sck);
						a.shortcutType = "m" === g.scs[h].t ? "message" : "survey";
						a.shortcutTypeText = languageParser.translate("shortcuts", a.shortcutType);
						a.type = g.scs[h].t;
						a.message = decodeStr(g.scs[h].m);
						a.index = f;
						a.options = [];
						a.id = g._id + "-" + a.key;
						if (Array.isArray(g.scs[h].o)) for (var k =
							0; k < g.scs[h].o.length; k++) a.options.pushObject({
							val: decodeStr(g.scs[h].o[k]),
							id: Date.now()
						});
						a.showOptions = a.options.length;
						b.pushObject(Tawk.ShortcutModel.create(a));
						f++
					}
				}
				this.shortcutsList.pushObjects(sortList(b, "key"));
				this.pagedList.setTotal(this.shortcutsList.length);
				this.pagedList.setList(this.getList())
			}
			this.set("isLoading", !1)
		},
		loadNextList: function (a) {
			a = a || function () {
			};
			if (this.pagedList.isLastPage()) return a(null, !1);
			this.set("isLoading", !0);
			this.pagedList.nextList();
			this.pagedList.setList(this.getList());
			this.set("isLoading", !1);
			return a(null, !0)
		},
		getList: function () {
			var a = [];
			return a = this.searchQuery ? this.filteredList.slice(this.pagedList.currentHead, this.pagedList.to) : this.shortcutsList.slice(this.pagedList.currentHead, this.pagedList.to)
		},
		searchList: function (a) {
			var c = !1, d = null, b = null;
			this.set("isLoading", !0);
			this.set("searchQuery", a);
			this.filteredList.clear();
			a.queryString && "/" === a.queryString.charAt(0) ? (c = !0, a.queryString = a.queryString.substring(1, a.queryString.length), b = RegExp("^" + a.queryString,
				"gi")) : b = RegExp(a.queryString, "gi");
			d = this.shortcutsList.filter(function (d) {
				if ((a.isPublic && "public" === d.dataType || a.isPersonal && "personal" === d.dataType) && (a.isSurvey && "s" === d.type || a.isMessage && "m" === d.type)) {
					if (!a.queryString) return !0;
					if (c) return !!d.key.match(b);
					if (d.message.match(b) || d.key.match(b)) return !0
				}
			});
			this.filteredList.pushObjects(d);
			this.pagedList.startList();
			this.pagedList.setList(this.getList());
			this.set("isLoading", !1)
		},
		resetSearch: function () {
			this.set("searchQuery", null);
			this.filteredList.clear();
			this.pagedList.startList();
			this.pagedList.setList(this.getList())
		},
		toggleAllMark: function (a) {
			this.pagedList && (this.activeProperty || this.isGlobalShortcut) && this.pagedList.currentData.setEach("isMarked", a)
		},
		toggleMark: function (a, c) {
			var d = this.pagedList.getItem(a);
			(this.activeProperty || this.isGlobalShortcut) && d && d.set("isMarked", c)
		},
		openItem: function (a) {
			this.shortcutsList && (this.pagedList.currentData.setEach("isMarked", !1), (a = a ? this.shortcutsList.findProperty("id", a) : Tawk.ShortcutModel.create({
				dataType: "public",
				shortcutType: "message",
				options: [],
				isGlobal: this.isGlobalShortcut,
				isProfile: this.activeProperty && this.activeProperty.isPersonal
			})) ? (this.set("activeShortcut", a.copy()), this.activeShortcut.id && this.saveLastSubView({itemId: this.activeShortcut.id}), this.isGlobalShortcut || (this.activeShortcut.id ? (this.saveLastSubView({itemId: this.activeShortcut.id}), Tawk.routing.titlePath.itemName = this.activeShortcut.key) : Tawk.routing.titlePath.itemName = "Add Shortcut", "profile" === this.activeProperty.type ? Tawk.routing.changeRoute({
				view: "account",
				subView: "shortcuts", itemId: this.activeShortcut.id || null
			}) : Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "shortcuts",
				itemId: this.activeShortcut.id || null,
				widgetId: null
			}), Tawk.routing.setTitle())) : Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "shortcuts",
				itemId: null,
				widgetId: null
			}))
		},
		closeView: function () {
			if (this.activeShortcut) return this.closeItem(), !1;
			this.resetData();
			return !0
		},
		closeItem: function (a) {
			this.pagedList.currentData.setEach("isMarked",
				!1);
			this.set("activeShortcut", null);
			this.saveLastSubView({itemId: null})
		},
		changeShortcutType: function (a) {
			this.activeShortcut && ("s" === a ? (this.activeShortcut.options.length || this.addOption(), this.activeShortcut.set("showOptions", !0)) : this.activeShortcut.set("showOptions", !1))
		},
		addOption: function () {
			this.activeShortcut && this.activeShortcut.options.pushObject({val: "", id: Date.now()})
		},
		removeOption: function (a) {
			this.activeShortcut && this.activeShortcut.options.removeAt(a)
		},
		saveShortcutFromVisitorChat: function (a,
		                                       c) {
			this.submitShortcutSave(a, c)
		},
		saveShortcut: function (a, c) {
			var d, b;
			this.set("isLoading", !0);
			if (!this.activeProperty && !this.isGlobalShortcut) return this.set("isLoading", !1), c(!0);
			b = this.activeShortcut;
			a.pageId = this.isGlobalShortcut ? "global" : this.activeProperty.id;
			a.shortcutId = b.shortcutId;
			"global" === a.pageId && (a.dataType = "personal");
			b.id && (d = this.shortcutsList.findProperty("id", b.id));
			!d || a.pageId === d.propertyId && a.key === d.key && a.dataType === d.dataType || (a.previousValues = {
				pageId: d.propertyId, dataType: d.dataType,
				key: d.key
			});
			this.submitShortcutSave(a, c)
		},
		submitShortcutSave: function (a, c) {
			var d = this, b = !1, e = this.storedShortcuts[a.pageId];
			if (!a.shortcutId || a.previousValues && a.dataType !== a.previousValues.dataType) b = !0;
			if (b && e && e[a.dataType] && e[a.dataType].scs[a.key]) return this.set("isLoading", !1), c("DUPLICATE_SHORTCUT_KEY");
			socketConnector.saveShortcut(a, function (b, e) {
				if (b) return d.set("isLoading", !1), c(b);
				d.updateShorcutData(e, a.previousValues, c)
			})
		},
		updateShorcutData: function (a, c, d) {
			var b, e, f, g = this.activeShortcut,
				h = this.storedShortcuts, k = !1, l = Tawk.routing.getPath(), m = function (a) {
					e.setProperties({
						id: f,
						key: decodeStr(a.sck),
						shortcutType: "m" === a.t ? "message" : "survey",
						type: a.t,
						message: decodeStr(a.m),
						options: [],
						dataType: a.dt,
						dataTypeText: languageParser.translate("shortcuts", a.dt)
					});
					if (Array.isArray(a.o)) for (var b = 0; b < a.o.length; b++) e.options.pushObject({
						val: decodeStr(a.o[b]),
						id: Date.now()
					});
					e.set("showOptions", e.options.length);
					e.set("shortcutTypeText", languageParser.translate("shortcuts", e.shortcutType))
				};
			d = d ||
				function () {
				};
			f = a._id + "-" + decodeStr(a.sck);
			if (!h) return this.reloadShortcutUpdate(d, a);
			(b = h[a.pgid]) ? b = b[a.dt] : (h[a.pgid] = {}, h[a.pgid][a.dt] = {});
			b || (b = {scs: {}});
			if (b.scver && 1 !== a.scver - b.scver) return this.reloadShortcutUpdate(d, a);
			b.scs[a.sck] || (k = !0);
			b._id = a._id;
			b.pgid = a.pgid;
			b.aid = a.aid;
			b.t = a.dt;
			b.scver = a.scver;
			if (c) {
				if (g) {
					var n = this.shortcutsList.findProperty("id", g.id);
					n && this.shortcutsList.removeObject(n)
				}
				h[c.pageId] && h[c.pageId][c.dataType] && (h[c.pageId][c.dataType].scver++, delete h[c.pageId][c.dataType].scs[encodeStr(c.key)])
			}
			b.scs[a.sck] =
				{sck: a.sck, m: a.m, t: a.t, o: a.o};
			h[a.pgid][a.dt] = b;
			main.updateStorageSettings("shortcuts", JSON.stringify(h));
			this.set("storedShortcuts", h);
			if (this.activeProperty || this.isGlobalShortcut) {
				if (a.otherOrigin) g && f === g.id ? (e = this.shortcutsList.findProperty("id", g.id), m(a)) : this.loadList(), this.set("isLoading", !1); else {
					k ? e = Tawk.ShortcutModel.create({
						id: f,
						shortcutId: a._id,
						toBeDeleted: !1,
						isGlobal: this.isGlobalShortcut,
						isProfile: this.activeProperty && this.activeProperty.isPersonal,
						propertyId: a.pgid
					}) : g && g.id && (e =
						this.shortcutsList.findProperty("id", g.id));
					if (!e) return d();
					m(a);
					k && this.shortcutsList.pushObject(e);
					g && g.id !== e.id && this.reSortList()
				}
				l && ("shortcuts" === l.subView && g && (g.id === f || !a.otherOrigin && k)) && this.openItem(e.id)
			}
			this.set("isLoading", !1);
			d(null, a._id)
		},
		deleteSingle: function (a) {
			var c;
			a = a || function () {
			};
			if (!this.activeShortcut) return a(!0);
			c = this.pagedList.getItem(this.activeShortcut.id);
			if (!c) return a(!0);
			c.set("isMarked", !0);
			this.bulkDelete(function (d) {
				c.set("isMarked", !1);
				a(d)
			})
		},
		bulkDelete: function (a) {
			var c,
				d = this, b = [];
			a = a || function () {
			};
			if (!this.activeProperty && !this.isGlobalShortcut) return a(!0);
			c = this.pagedList.currentData.filterProperty("isMarked", !0);
			if (0 === c.length) return a(!0);
			checkAndSetConfirmView(!1, function (e) {
				if (!e) return a(!0);
				for (e = 0; e < c.length; e++) b.push({
					pageId: c[e].propertyId,
					dataType: c[e].dataType,
					key: c[e].key
				});
				socketConnector.deleteShortcuts(b, function (b, c) {
					b || d.removeShortcutData(c, a)
				})
			})
		},
		removeShortcutData: function (a, c) {
			var d, b = this.storedShortcuts, e = [];
			c = c || function () {
			};
			Array.isArray(a) ||
			(a = [a]);
			this.set("hasBeenUpdated", !1);
			for (d = 0; d < a.length; d++) {
				var f = a[d];
				this.activeShortcut && this.activeShortcut.id === f._id + "-" + f.sck && (this.set("previousName", this.activeShortcut.key), this.set("activeShortcut", null), this.set("hasBeenUpdated", !0));
				b && (b[f.pgid] && b[f.pgid][f.dt] && b[f.pgid][f.dt].scs[f.sck]) && (delete b[f.pgid][f.dt].scs[f.sck], b[f.pgid][f.dt].scver = f.scver, e.pushObject(this.shortcutsList.findProperty("id", decodeStr(f._id + "-" + f.sck))))
			}
			main.updateStorageSettings("shortcuts", JSON.stringify(b));
			this.set("storedShortcuts", b);
			this.shortcutsList.removeObjects(e);
			(this.activeProperty || this.isGlobalShortcut) && this.reSortList();
			this.set("isLoading", !1);
			c()
		},
		removeShortcutsForProperty: function (a) {
			var c = this.storedShortcuts;
			delete c[a];
			main.updateStorageSettings("shortcuts", JSON.stringify(c));
			this.set("storedShortcuts", c)
		},
		getPropertyShortcuts: function (a) {
			var c, d;
			d = this.storedShortcuts;
			c = [];
			var b = {};
			if (a = d[a]) a.personal && this.formatPropertyShortcuts(a.personal, b), a.public && this.formatPropertyShortcuts(a.public,
				b);
			d.global && d.global.personal && this.formatPropertyShortcuts(d.global.personal, b, !0);
			d = Object.keys(b);
			if (d.length) for (d = d.sort(), a = 0; a < d.length; a++) c.push(b[d[a]]);
			return c
		},
		formatPropertyShortcuts: function (a, c, d) {
			if (!a.scs) return c;
			for (var b in a.scs) {
				var e = a.scs[b], f = b.toLowerCase(), g = "";
				if (!c[f]) {
					if ("s" === e.t && Array.isArray(e.o)) for (var h = 0; h < e.o.length; h++) g += "[option] " + decodeStr(e.o[h]) + "\n";
					c[f] = {m: decodeStr(e.m), o: g, dataType: a.t, key: b, id: a._id, isGlobal: d}
				}
			}
		},
		reloadShortcutUpdate: function (a,
		                                c) {
			var d = this;
			a = a || function () {
			};
			this.getShortcuts(function (b) {
				d.loadList();
				d.reSortList();
				c ? (d.openItem(c._id + "-" + c.sck), a(null, c._id)) : a()
			})
		},
		saveLastSubView: function (a) {
			this.isGlobalShortcut || this._super(a)
		},
		reSortList: function () {
			var a = Ember.copy(this.shortcutsList);
			this.shortcutsList.clear();
			this.shortcutsList.pushObjects(sortList(a, "key"));
			this.searchQuery && this.searchList(this.searchQuery);
			this.pagedList && (this.pagedList.reset(), this.pagedList.startList(), this.pagedList.setTotal(this.shortcutsList.length),
				this.pagedList.setList(this.getList()))
		},
		hasShortcuts: function (a) {
			return (a = this.storedShortcuts[a]) && (a.public || a.personal)
		},
		bulkAddShortcuts: function (a, c, d) {
			var b = {};
			d = d || function () {
			};
			if (this.activeProperty) b.propertyId = this.activeProperty.id; else return d(!0);
			b.type = c;
			b.shortcuts = a;
			socketConnector.bulkAddShortcuts(b, function (a, b) {
				d(a, b)
			})
		}
	});
	Tawk.shortcutsController = Tawk.ShortcutsController.create();
	Tawk.AgentsController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null,
		agentList: null,
		agentPagedList: null,
		invitedList: null,
		invitedPagedList: null,
		currentView: null,
		openProperty: function (a, c) {
			this.set("activeProperty", a);
			this.set("agentPagedList", Tawk.PagingListModel.create({perpage: c}));
			this.set("invitedPagedList", Tawk.PagingListModel.create({perpage: c}));
			this.set("currentView", "accepted");
			this.set("activeAgent", null);
			this.getLastViews();
			this.getAgents();
			Tawk.routing.titlePath.subviewName = languageParser.translate("admin", "members");
			Tawk.routing.setTitle()
		},
		getAgents: function (a) {
			var c =
				this, d = Tawk.routing.getPath(), b = 0, e = function () {
				b++;
				2 === b && (c.set("isLoading", !1), d.itemId ? c.openItem(d.itemId) : c.lastViews && "members" === c.lastViews.subView && c.lastViews.itemId ? c.openItem(c.lastViews.itemId) : c.saveLastSubView({itemId: null}), a())
			};
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			this.set("isLoading", !0);
			this.agentPagedList.startList();
			this.invitedPagedList.startList();
			socketConnector.getPropertyInfo(this.activeProperty.id, {agents: "full"}, function (a, b) {
				if (a) return e();
				b && (b.data &&
					b.data.a) && (c.activeProperty.loadAgents(b.data.a), c.set("agentList", c.activeProperty.agentList), c.agentPagedList.setTotal(c.agentList.length), c.loadAgentList());
				e()
			});
			socketConnector.getInvitationList({propertyId: this.activeProperty.id}, function (a, b) {
				if (a) return e();
				b && b.data && (c.activeProperty.loadInvitedAgents(b.data), c.set("invitedList", c.activeProperty.invitedList), c.invitedPagedList.setTotal(c.invitedList.length), c.loadInvitedList());
				e()
			})
		},
		loadAgentList: function (a) {
			var c, d;
			a ? (c = this.agentList.filter(function (b) {
				return b.name.match(a) ?
					!0 : !1
			}), d = c.length, c = c.slice(this.agentPagedList.currentHead, this.agentPagedList.to)) : (d = this.agentList.length, c = this.agentList.slice(this.agentPagedList.currentHead, this.agentPagedList.to));
			this.agentPagedList.setTotal(d);
			this.agentPagedList.setList(c)
		},
		loadInvitedList: function (a) {
			var c, d;
			a ? (c = this.invitedList.filter(function (b) {
				return b.tawkId && b.tawkId.match(a) || b.email && b.email.match(a) ? !0 : !1
			}), d = c.length, c = c.slice(this.invitedPagedList.currentHead, this.invitedPagedList.to)) : (d = this.invitedList.length,
				c = this.invitedList.slice(this.invitedPagedList.currentHead, this.invitedPagedList.to));
			this.invitedPagedList.setTotal(d);
			this.invitedPagedList.setList(c)
		},
		searchList: function (a) {
			a = RegExp(a, "gi");
			this.set("isLoading", !0);
			this.agentPagedList.reset();
			this.agentPagedList.startList();
			this.invitedPagedList.reset();
			this.invitedPagedList.startList();
			this.loadAgentList(a);
			this.loadInvitedList(a);
			this.set("isLoading", !1)
		},
		loadNextList: function (a) {
			a = a || function () {
			};
			if ("accepted" === this.currentView) {
				if (this.agentPagedList.isLastPage()) return a(null,
					!1);
				this.agentPagedList.nextList();
				this.loadAgentList()
			} else {
				if (this.invitedPagedList.isLastPage()) return a(null, !1);
				this.invitedPagedList.nextList();
				this.loadInvitedList()
			}
			return a(null, !0)
		},
		toggleAllMark: function (a) {
			"accepted" === this.currentView ? this.agentPagedList.currentData.filterProperty("canBeDeleted").setEach("isMarked", a) : this.invitedPagedList.currentData.setEach("isMarked", a)
		},
		toggleMark: function (a, c) {
			var d;
			d = "accepted" === this.currentView ? this.agentPagedList.getItem(a) : this.invitedPagedList.getItem(a);
			this.activeProperty.isAdmin && d && d.set("isMarked", c)
		},
		inviteAgents: function (a, c) {
			var d, b = 0, e = [], f = [], g = this, h = function (a, h, m, n) {
				b++;
				a ? f.push({index: h, error: m}) : e.push({index: h, email: n});
				b === d && (g.invitedPagedList.reset(), g.invitedPagedList.startList(), g.invitedPagedList.setTotal(g.invitedList.length), g.loadInvitedList(), g.set("isLoading", !1), c(f, e))
			};
			if (!this.activeProperty || !this.activeProperty.isAdmin) return c(!0);
			this.set("isLoading", !0);
			d = a.length;
			a.forEach(function (a, b) {
				socketConnector.inviteAgentByEmail({
					propertyId: g.activeProperty.id,
					email: a.email, role: a.role
				}, function (c, d) {
					var e;
					d && (d.warnings && d.warnings.length) && (c = d.warnings[0]);
					if (c) return errorMessage = languageParser.translate("admin", "invitation_fail"), c.code ? "InternalServerError" === c.code ? errorMessage = languageParser.translate("generic", "internal_server_error") : "UnauthorizedError" === c.code ? errorMessage = languageParser.translate("generic", "unauthorized_error") : "InvalidArgument" === c.code ? errorMessage = "email" === c.message ? languageParser.translate("form_validation_messages", "invalid_email") :
						"role" === c.message ? languageParser.translate("admin", "invalid_role") : languageParser.translate("generic", "invalid_property") : "TooManyRequestsError" === c.code && "over-quota" === c.message && (errorMessage = languageParser.translate("admin", "overexceeded_pending_invites")) : "existing-member" === c ? errorMessage = languageParser.translate("form_validation_messages", "AGENT_ALREADY_EXIST") : "invite-exists" === c ? errorMessage = languageParser.translate("form_validation_messages", "AGENT_ALREADY_INVITED") : "send-email-failed" ===
						c && (errorMessage = languageParser.translate("admin", "invitation_email_fail")), h(!0, b, errorMessage);
					e = Ember.Object.create({
						id: d.data.id,
						email: a.email,
						isInvitation: !0,
						role: a.rl,
						isAdmin: "admin" === a.role,
						isEnabled: !0,
						canBeDeleted: !0
					});
					g.invitedList.pushObject(e);
					h(!1, b, null, a.email)
				})
			})
		},
		getAgent: function (a) {
			return this.agentList.findProperty("id", a)
		},
		getInvitation: function (a) {
			return this.invitedList.findProperty("id", a)
		},
		openItem: function (a) {
			(a = this.agentPagedList.getItem(a)) ? (this.set("activeAgent", a),
				this.activeAgent.id ? (this.saveLastSubView({itemId: this.activeAgent.id}), Tawk.routing.titlePath.itemName = this.activeAgent.name) : Tawk.routing.titlePath.itemName = languageParser.translate("buttons", "invite_agent"), Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "members",
				itemId: this.activeAgent.id || null,
				widgetId: null
			}), Tawk.routing.setTitle()) : Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "members",
				itemId: null,
				widgetId: null
			})
		},
		openInvitation: function (a) {
			(a =
				this.invitedPagedList.getItem(a)) && this.set("activeAgent", a)
		},
		editAccess: function (a, c, d) {
			var b = this;
			d = d || function () {
			};
			if (!this.activeProperty || !this.activeProperty.isAdmin || !this.activeAgent) return d(!0);
			this.activeAgent.isInvitation ? socketConnector.editInvitationAccess({
				propertyId: this.activeProperty.id,
				inviteId: this.activeAgent.id,
				role: c
			}, function (a) {
				if (a) {
					if (a.code) {
						if ("InternalServerError" === a.code) return d(!0, languageParser.translate("generic", "internal_server_error"));
						if ("UnauthorizedError" ===
							a.code) return d(!0, languageParser.translate("generic", "unauthorized_error"));
						if ("InvalidArgument" === a.code) {
							if ("propertyId" === a.message) return d(!0, languageParser.translate("generic", "invalid_property"));
							if ("role" === a.message) return d(!0, languageParser.translate("admin", "invalid_role"));
							if ("inviteId" === a.message) return d(!0, languageParser.translate("admin", "invalid_invitation"))
						}
					}
					return d(!0)
				}
				b.activeAgent.set("role", c);
				b.activeAgent.set("isAdmin", "admin" === c);
				b.activeAgent.set("isAgent", "agent" ===
					c);
				return d()
			}) : socketConnector.editAgentAccess({
				propertyId: this.activeProperty.id,
				agentId: this.activeAgent.id,
				role: c,
				enabled: a
			}, function (e) {
				if (e) {
					if (e.code) {
						if ("InternalServerError" === e.code) return d(!0, languageParser.translate("generic", "internal_server_error"));
						if ("UnauthorizedError" === e.code) return d(!0, languageParser.translate("generic", "unauthorized_error"));
						if ("InvalidArgument" === e.code) {
							if ("propertyId" === e.message) return d(!0, languageParser.translate("generic", "invalid_property"));
							if ("role" ===
								e.message) return d(!0, languageParser.translate("admin", "invalid_role"));
							if ("agentId" === e.message) return d(!0, languageParser.translate("generic", "invalid_agent"));
							if ("enabled" === e.message) return d(!0, languageParser.translate("admin", "invalid_status"))
						}
						if ("ConflictError" === e.code) {
							if ("modifying_self" === e.message) return d(!0, languageParser.translate("admin", "modifying_self"));
							if ("has_active_subscriptions" === e.message) return d(!0, languageParser.translate("admin", "agent_has_subscription_error"));
							if ("not_member" ===
								e.message) return d(!0, languageParser.translate("admin", "not_member"))
						}
					}
					return d(!0)
				}
				b.activeAgent.set("role", c);
				b.activeAgent.set("isAdmin", "admin" === c);
				b.activeAgent.set("isAgent", "agent" === c);
				b.activeAgent.set("isEnabled", a);
				b.activeAgent.set("isDisabled", !a);
				b.activeAgent.set("enabled", a ? "enabled" : "disabled");
				b.activeProperty.updateAgentAccess(b.activeAgent.id, c, a);
				return d()
			})
		},
		resendInvitation: function (a) {
			if (!this.activeProperty || !this.activeAgent || !this.activeProperty.isAdmin) return a(!0);
			socketConnector.resendInvitation({
				propertyId: this.activeProperty.id,
				inviteId: this.activeAgent.id
			}, function (c) {
				if (c) {
					if (c.code) {
						if ("InternalServerError" === c.code) return a(!0, languageParser.translate("generic", "internal_server_error"));
						if ("UnauthorizedError" === c.code) return a(!0, languageParser.translate("generic", "unauthorized_error"));
						if ("NotFoundError" === c.code) return a(!0, languageParser.translate("generic", "invitation_not_found"));
						if ("InvalidArgument" === c.code) {
							if ("propertyId" === c.message) return a(!0, languageParser.translate("generic", "invalid_property"));
							if ("inviteId" ===
								c.message) return a(!0, languageParser.translate("admin", "invalid_invitation"))
						}
						if ("ConflictError" === c.code && "existing_agent" === c.message) return a(!0, languageParser.translate("admin", "resend_existing_agent"))
					}
					return a(!0)
				}
				return a()
			})
		},
		closeView: function () {
			if (this.activeAgent) return this.closeItem(), !1;
			this.resetData();
			return !0
		},
		resetData: function () {
			this.set("activeAgent", null)
		},
		closeItem: function () {
			this.set("activeAgent", null);
			this.saveLastSubView({itemId: null})
		},
		bulkDelete: function (a) {
			var c, d = [],
				b = [], e = this, f = "", g = 0, h = function (b, d) {
					g++;
					b ? b.code && ("InternalServerError" === b.code && (f += languageParser.translate("generic", "internal_server_error")), "UnauthorizedError" === b.code && (f += languageParser.translate("generic", "unauthorized_error")), "NotFoundError" === b.code && (f += languageParser.translate("generic", "invitation_not_found")), "InvalidArgument" === b.code && ("propertyId" === b.message && (f += languageParser.translate("generic", "invalid_property")), "agentId" === b.message && (f += languageParser.translate("generic",
						"invalid_agent")), "inviteId" === b.message && (f += languageParser.translate("admin", "invalid_invitation"))), "ConflictError" === b.code && ("modifying_self" === b.message && (f += languageParser.translate("admin", "modifying_self")), "has_active_subscriptions" === b.message && (f += languageParser.translate("admin", "agent_has_subscription_error")), "not_member" === b.message && (f += languageParser.translate("admin", "not_member")))) : d && Tawk.webProperties.removeAgentAccess({
						pgid: e.activeProperty.id,
						aid: d
					});
					g === c && e.getAgents(function () {
						e.set("isUpdating",
							!1);
						e.set("isUpdated", !0);
						return a(!!f, f)
					})
				};
			a = a || function () {
			};
			this.set("isUpdated", !1);
			this.set("isUpdating", !1);
			if (!this.activeProperty || !this.activeProperty.isAdmin) return a(!0);
			d = this.agentPagedList.currentData.filterProperty("isMarked", !0);
			b = this.invitedPagedList.currentData.filterProperty("isMarked", !0);
			if (0 === d.length && 0 === b.length) return a(!0);
			checkAndSetConfirmView(!1, function (f) {
				if (!f) return a(!0);
				e.set("isUpdating", !0);
				d.length ? (c = d.length, d.forEach(function (a) {
					socketConnector.removeAgentAccess({
						propertyId: e.activeProperty.id,
						agentId: a.id
					}, function (b) {
						h(b, a.id)
					})
				})) : b.length && (c = b.length, b.forEach(function (a) {
					socketConnector.removeInvitation({propertyId: e.activeProperty.id, inviteId: a.id}, h)
				}))
			})
		},
		propertyUpdated: function () {
			var a = Tawk.webProperties.updatedProperty, c = Tawk.webProperties.updatedData;
			c && (a && this.activeProperty && "agent" === c.type) && (this.set("hasBeenUpdated", !1), this.activeAgent && (c.ids === this.activeAgent.id && "remove" === c.operation) && (this.set("previousName", this.activeAgent.name), this.set("activeAgent", null),
				this.set("hasBeenUpdated", !0)), Tawk.webProperties.set("updatedData", null))
		}
	});
	Tawk.DepartmentsController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null,
		departmentList: null,
		pagedList: null,
		activeDepartment: null,
		openProperty: function (a, c) {
			var d = Tawk.routing.getPath();
			this.set("activeProperty", a);
			this.set("departmentList", a.departmentList);
			this.set("pagedList", Tawk.PagingListModel.create({perpage: c}));
			this.pagedList.startList();
			this.loadList();
			this.getLastViews();
			Tawk.routing.titlePath.subviewName =
				languageParser.translate("sites", "departments");
			Tawk.routing.setTitle();
			d.itemId && this.openItem(d.itemId)
		},
		loadList: function (a) {
			var c;
			a ? (searchRegex = RegExp(a, "gi"), c = this.departmentList.filter(function (a) {
				return a.name.match(searchRegex) ? !0 : !1
			}), a = c.length, c = c.slice(this.pagedList.currentHead, this.pagedList.to)) : (a = this.departmentList.length, c = this.departmentList.slice(this.pagedList.currentHead, this.pagedList.to));
			this.pagedList.setTotal(a);
			this.pagedList.setList(c)
		},
		searchList: function (a) {
			this.pagedList.reset();
			this.pagedList.startList();
			this.loadList(a)
		},
		loadNextList: function (a) {
			a = a || function () {
			};
			if (this.pagedList.isLastPage()) return a(null, !1);
			this.pagedList.nextList();
			this.loadList();
			return a(null, !0)
		},
		openItem: function (a) {
			this.activeProperty && (this.activeProperty.isAdmin && this.departmentList) && ((a = a ? this.departmentList.findProperty("id", a) : Ember.Object.create({agents: []})) ? (this.set("activeDepartment", a), this.loadDepartmentAgents(), this.activeDepartment.id ? (this.saveLastSubView({itemId: this.activeDepartment.id}),
				Tawk.routing.titlePath.itemName = a.name) : Tawk.routing.titlePath.itemName = "New Department", Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "department",
				itemId: this.activeDepartment.id || null,
				widgetId: null
			}), Tawk.routing.setTitle()) : Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "department",
				itemId: null,
				widgetId: null
			}))
		},
		loadDepartmentAgents: function () {
			var a = this, c = [];
			this.activeDepartment && (this.activeProperty.agentAccess.filterProperty("en",
				!0).forEach(function (d) {
				d.name = decodeStr(Tawk.agentsController.getName(d.aid));
				a.activeDepartment.agents.contains(d.aid) ? d.isSelected = !0 : d.isSelected = !1;
				c.pushObject(Ember.Object.create(d))
			}), this.activeDepartment.set("agentList", sortList(c, "name")))
		},
		assignAgentToDepartment: function (a) {
			this.activeDepartment && (a = this.activeDepartment.unassignedAgents.findProperty("aid", a)) && (this.activeDepartment.unassignedAgents.removeObject(a), this.activeDepartment.assignedAgents.pushObject(a))
		},
		unassignAgentFromDepartment: function (a) {
			this.activeDepartment &&
			(a = this.activeDepartment.assignedAgents.findProperty("aid", a)) && (this.activeDepartment.assignedAgents.removeObject(a), this.activeDepartment.unassignedAgents.pushObject(a), this.activeDepartment.set("unassignedAgents", sortList(this.activeDepartment.unassignedAgents, "n")))
		},
		saveDepartment: function (a, c) {
			var d = this;
			if (!this.activeProperty || !this.activeProperty.isAdmin || !this.activeDepartment) return c(!0);
			this.activeDepartment.id && (a.departmentId = this.activeDepartment.id);
			socketConnector.saveDepartment(this.activeProperty.id,
				a, function (b, e) {
					if (b) return c(b);
					Tawk.webProperties.updateDepartment({
						pgid: d.activeProperty.id,
						did: a.departmentId ? a.departmentId : e.did,
						n: a.name,
						dsc: a.description,
						en: void 0 !== a.isEnabled ? a.isEnabled : !0,
						a: a.agents ? a.agents : [],
						dptsver: e.dptsver ? e.dptsver : e
					});
					d.activeProperty.loadDepartments(Tawk.webProperties.getDepartmentsByProperty(d.activeProperty.id));
					d.set("departmentList", d.activeProperty.departmentList);
					d.pagedList.startList();
					d.loadList();
					d.openItem(a.departmentId || e.did);
					return c()
				})
		},
		deleteSingle: function (a) {
			var c;
			if (!this.activeProperty || !this.activeDepartment || !this.activeProperty.isAdmin) return a(!0);
			c = this.activeDepartment;
			c.set("isMarked", !0);
			this.bulkDelete(function (d) {
				d && c.set("isMarked", !1);
				return a(d)
			})
		},
		bulkDelete: function (a) {
			var c, d = this;
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			c = this.pagedList.currentData.filterProperty("isMarked", !0);
			if (0 === c.length) return a(!0);
			checkAndSetConfirmView(!1, function (b) {
				if (!b) return a(!0);
				socketConnector.deleteDepartments(d.activeProperty.id, c.getEach("id"),
					function (b) {
						if (b) return a(b);
						Tawk.webProperties.removeDepartment({
							pgid: d.activeProperty.id,
							dids: c.getEach("id"),
							dptsver: Tawk.webProperties.getProperty(d.activeProperty.id).departmentVersion + 1
						}, !1);
						d.activeProperty.departmentList.removeObjects(c);
						d.set("departmentList", d.activeProperty.departmentList);
						d.pagedList.startList();
						d.loadList();
						a()
					})
			})
		},
		closeView: function () {
			if (this.activeDepartment) return this.closeItem(), !1;
			this.resetData();
			return !0
		},
		resetData: function () {
			this.set("departmentList", null);
			this.set("pagedList", null);
			this.set("activeDepartment", null)
		},
		closeItem: function () {
			this.set("activeDepartment", null);
			this.saveLastSubView({itemId: null})
		},
		toggleAllMark: function (a) {
			this.activeProperty.isAdmin && this.pagedList && this.pagedList.currentData.setEach("isMarked", a)
		},
		toggleMark: function (a, c) {
			var d = this.pagedList.getItem(a);
			this.activeProperty.isAdmin && d && d.set("isMarked", c)
		},
		propertyUpdated: function () {
			var a = Tawk.webProperties.updatedProperty, c = Tawk.webProperties.updatedData;
			c && (c.ids && a && this.activeProperty &&
				"department" === c.type && this.activeProperty.id === a.id) && (this.set("hasBeenUpdated", !1), this.activeDepartment && ("remove" === c.operation && -1 < c.ids.indexOf(this.activeDepartment.id)) && (this.set("previousName", this.activeDepartment.name), this.set("activeDepartment", null), this.set("hasBeenUpdated", !0)), Tawk.webProperties.set("updatedData", null))
		}
	});
	Tawk.TriggersController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null, pagedList: null, activeTrigger: null, canAddTrigger: !1, openProperty: function (a) {
			this.set("activeProperty",
				a);
			this.set("pagedList", Tawk.PagingListModel.create({perpage: 20}));
			this.getLastViews();
			this.getTriggers();
			Tawk.routing.titlePath.subviewName = languageParser.translate("sites", "triggers");
			Tawk.routing.setTitle()
		}, getTriggers: function (a) {
			var c = this, d = [], b = Tawk.routing.getPath();
			a = a || function () {
			};
			if (!this.activeProperty || this.activeProperty.triggerList.length) return a(!0);
			this.set("isLoading", !0);
			this.pagedList.reset();
			this.pagedList.startList();
			socketConnector.getTriggers(this.activeProperty.id, function (e,
			                                                              f) {
				e ? (c.set("isLoading", !1), a(!0)) : (f.forEach(function (a) {
					var b, e, f = "", m = Tawk.CopyableModel.create({
						id: a.id,
						_id: a.id,
						name: decodeStr(a.n),
						description: decodeStr(a.dsc),
						execute: a.exec,
						isEnabled: a.en,
						type: a.t,
						typeName: languageParser.translate("triggers", a.t),
						canBeDeleted: c.activeProperty.isAdmin
					});
					"advanced" === a.t ? (a.tgr && (b = "send_message" !== a.tgr ? languageParser.translate("triggers", a.tgr) : languageParser.translate("triggers", "chat_sent")), m.setProperties({
						isAdvanced: !0, match: a.mch, trigger: a.tgr, triggerRun: b,
						conditions: [], actions: []
					}), a.cdns.forEach(function (a) {
						m.conditions.pushObject(Tawk.CopyableModel.create({
							field: a.fld,
							operation: a.op,
							value: a.val,
							fieldId: "field" + randomString(10, !0),
							operationId: "operation" + randomString(10, !0),
							valueId: "value" + randomString(10, !0)
						}))
					}), m.set("conditionsLimit", 10 === a.cdns.length), a.acns.forEach(function (a) {
						m.actions.pushObject(Tawk.CopyableModel.create({
							action: a.acn,
							actionId: "action" + randomString(10, !0),
							value: a.val,
							valueId: "value" + randomString(10, !0)
						}))
					}), m.set("actionsLimit",
						5 === a.acns.length)) : (m.setProperties({
						isAdvanced: !1,
						senderName: a.acns.length ? decodeStr(a.acns[0].val[0]) : null,
						message: a.acns.length ? decodeStr(a.acns[0].val[1]) : null
					}), a.cdns.length && (a.cdns.forEach(function (b) {
						if ("still_on_page" === b.fld || "still_on_site" === b.fld) e = b.val;
						"basic_page" === a.t && "page_url" === b.fld && (f = b.val)
					}), m.set("delay", e)), "basic_page" === a.t ? (m.set("pageUrl", f), m.set("isPageTrigger", !0)) : "basic_site" === a.t && c.set("disableBasicSite", !0));
					d.pushObject(m)
				}), c.pagedList.setTotal(d.length),
					c.pagedList.setList(d), 20 > d.length ? c.set("canAddTrigger", !0) : c.set("canAddTrigger", !1), c.set("isLoading", !1), b.itemId ? c.openItem(b.itemId) : c.lastViews && ("triggers" === c.lastViews.subView && c.lastViews.itemId) && c.openItem(c.lastViews.itemId), a())
			})
		}, toggleAllMark: function (a) {
			this.activeProperty.isAdmin && this.pagedList.currentData.setEach("isMarked", a)
		}, toggleMark: function (a, c) {
			var d = this.pagedList.getItem(a);
			this.activeProperty.isAdmin && d && d.set("isMarked", c)
		}, openItem: function (a) {
			this.activeProperty &&
			this.activeProperty.isAdmin && (this.pagedList.currentData.setEach("isMarked", !1), (a = a ? this.pagedList.getItem(a) : Tawk.CopyableModel.create({
				isPageTrigger: !0,
				canBeDeleted: !0,
				type: "basic_page",
				typeName: languageParser.translate("triggers", "basic_page")
			})) ? (this.set("activeTrigger", a.copy()), this.pagedList.currentData.findProperty("type", "basic_site") ? this.set("disableBasicSite", !0) : this.set("disableBasicSite", !1), "advanced" === this.activeTrigger.type && (this.activeTrigger.conditions && this.activeTrigger.conditions.length ||
			(this.activeTrigger.set("conditions", []), this.addTriggerCondition()), this.activeTrigger.actions && this.activeTrigger.actions.length || (this.activeTrigger.set("actions", []), this.addTriggerAction())), this.activeTrigger.id ? (this.saveLastSubView({itemId: this.activeTrigger.id}), Tawk.routing.titlePath.itemName = this.activeTrigger.name) : Tawk.routing.titlePath.itemName = "Add Trigger", Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "triggers",
				itemId: this.activeTrigger.id || null,
				widgetId: null
			}), Tawk.routing.setTitle()) : Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "triggers",
				itemId: null,
				widgetId: null
			}))
		}, closeView: function () {
			if (this.activeTrigger) return this.closeItem(), !1;
			this.resetData();
			return !0
		}, closeItem: function () {
			this.pagedList.currentData.setEach("isMarked", !1);
			this.set("activeTrigger", null);
			this.saveLastSubView({itemId: null})
		}, resetData: function () {
			this.set("activeTrigger", null);
			this.set("pagedList", null)
		}, changeAddFormType: function (a) {
			this.activeProperty &&
			(this.activeTrigger && !this.activeTrigger.id) && (this.activeTrigger.set("type", a), this.activeTrigger.set("typeName", languageParser.translate("triggers", a)), "advanced" === a ? (this.activeTrigger.setProperties({
				isPageTrigger: !1,
				isAdvanced: !0,
				conditions: [],
				actions: []
			}), this.addTriggerCondition(), this.addTriggerAction()) : (this.activeTrigger.set("isAdvanced", !1), "basic_page" === a ? this.activeTrigger.set("isPageTrigger", !0) : this.activeTrigger.set("isPageTrigger", !1)))
		}, addTriggerCondition: function () {
			this.activeProperty &&
			(this.activeTrigger && 10 !== this.activeTrigger.conditions.length) && (this.activeTrigger.conditions.pushObject(Tawk.CopyableModel.create({
				fieldId: "field" + randomString(10, !0),
				field: null,
				operation: null,
				operationId: "operation" + randomString(10, !0),
				value: null,
				valueId: "value" + randomString(10, !0)
			})), 10 === this.activeTrigger.conditions.length && this.activeTrigger.set("conditionsLimit", !0))
		}, addTriggerAction: function () {
			this.activeProperty && (this.activeTrigger && 5 !== this.activeTrigger.actions.length) && (this.activeTrigger.actions.pushObject(Tawk.CopyableModel.create({
				action: null,
				actionId: "action" + randomString(10, !0), value: null, valueId: "value" + randomString(10, !0)
			})), 5 === this.activeTrigger.actions.length && this.activeTrigger.set("actionsLimit", !0))
		}, removeCondition: function (a) {
			this.activeProperty && (this.activeTrigger && !(1 >= this.activeTrigger.conditions.length)) && (a = this.activeTrigger.conditions.findProperty("valueId", a)) && (this.activeTrigger.conditions.removeObject(a), 10 > this.activeTrigger.conditions.length && this.activeTrigger.set("conditionsLimit", !1))
		}, removeAction: function (a) {
			this.activeProperty &&
			(this.activeTrigger && !(1 >= this.activeTrigger.actions.length)) && (a = this.activeTrigger.actions.findProperty("valueId", a)) && (this.activeTrigger.actions.removeObject(a), 5 > this.activeTrigger.actions.length && this.activeTrigger.set("actionsLimit", !1))
		}, saveBasicTrigger: function (a, c) {
			var d = {};
			if (!this.activeProperty || !this.activeProperty.isAdmin || !this.activeTrigger) return c(!0);
			this.activeTrigger.id && this.pagedList.getItem(this.activeTrigger.id);
			"basic_chat_rescue" === this.activeTrigger.type ? d = basicChatTemplate :
				"basic_site" === this.activeTrigger.type ? d = basicSiteTemplate : (d = basicPageTemplate, d.conditions[1].value = a.pageUrl);
			d.id = this.activeTrigger.id;
			d.enabled = void 0 !== a.enabled ? a.enabled : !0;
			d.conditions[0].value = parseInt(a.delay, 10);
			d.actions[0].value = [a.sender, a.message];
			d.name = a.name;
			this.saveTrigger(d, c)
		}, saveTrigger: function (a, c) {
			var d, b = this;
			if (!this.activeProperty || !this.activeProperty.isAdmin || !this.activeTrigger) return c(!0);
			d = this.activeTrigger.id ? this.pagedList.getItem(this.activeTrigger.id) : this.activeTrigger;
			a.id = d.id;
			a.type = d.type;
			void 0 === a.enabled && (a.enabled = !0);
			socketConnector.saveTrigger(this.activeProperty.id, a, function (a, d) {
				if (a) return c(!0);
				b.getTriggers(function (a) {
					if (a) return c(a);
					b.openItem(d.id);
					c()
				})
			})
		}, deleteSingle: function (a) {
			var c;
			if (!this.activeProperty || !this.activeTrigger || !this.activeProperty.isAdmin) return a(!0);
			this.toggleAllMark(!1);
			c = this.pagedList.getItem(this.activeTrigger.id);
			if (!c) return a(!0);
			c.set("isMarked", !0);
			this.bulkDelete(function (d) {
				c.set("isMarked", !1);
				return a(d)
			})
		},
		bulkDelete: function (a) {
			var c, d = this;
			a = a || function () {
			};
			if (!this.activeProperty || !this.activeProperty.isAdmin) return a(!0);
			c = this.pagedList.currentData.filterProperty("isMarked", !0);
			if (0 === c.length) return a(!0);
			checkAndSetConfirmView(!1, function (b) {
				if (!b) return a(!0);
				socketConnector.deleteTriggers(d.activeProperty.id, c.getEach("id"), function (b) {
					if (b) return a(b);
					d.getTriggers(a)
				})
			})
		}
	});
	Tawk.WhitelabelAddOnController = Ember.Controller.extend({
		propertyId: null, whitelabelAddOn: null, originalData: null, currentView: null,
		loadWhitelabelData: function (a) {
			var c = this;
			a = a || function () {
			};
			if (!this.propertyId) return a(!1);
			this.set("canUsePaypal", desktopConnector.canUsePaypal());
			socketConnector.getAddOnDetail(this.propertyId, "whitelabel", function (d, b) {
				if (d) return a(!0);
				c.set("whitelabelAddOn", null);
				c.set("originalData", b);
				c.resetSettings(a)
			})
		}, saveWhitelabelSettings: function (a, c) {
			var d = this;
			socketConnector.saveWhitelabelSettings(this.propertyId, a, function (b, e) {
				if (b) return c(b);
				d.set("originalData.settings", a);
				d.whitelabelAddOn.set("settings.email",
					a.email);
				d.whitelabelAddOn.set("settings.whitelabel", a.whitelabel);
				d.whitelabelAddOn.set("settings.enabled", a.enabled);
				return c()
			})
		}, handlePayment: function (a, c, d) {
			var b = this, e = function (e, g) {
				var h = function () {
					e ? d(e, g) : (ga("send", "event", "Whitelabel Purchase", b.currentView, "Add-on purchased location tracking"), b.set("originalData.hasSubscription", !0), b.set("originalData.expiry", new Date), b.whitelabelAddOn.set("isSubscribed", !0), b.whitelabelAddOn.set("isActive", !0), b.whitelabelAddOn.set("subscriptionId",
						g), d())
				};
				"cc" === a && "new-card" === c.customerId ? Tawk.userController.getExistingCCCards(!0, h.bind(b)) : h()
			};
			d = d || function () {
			};
			c.addOnId = "whitelabel";
			c.propertyId = this.propertyId;
			c.subscriptionId = this.whitelabelAddOn.subscriptionId;
			c.action = "create";
			"cc" === a ? handleCCPayment(c, e) : handlePaypalPayment(c, e)
		}, resetSettings: function (a) {
			var c, d, b = [];
			a = a || function () {
			};
			if (!this.propertyId || !this.originalData) return a();
			c = this.originalData;
			this.whitelabelAddOn ? d = this.whitelabelAddOn : (d = Ember.Object.create(), c.plans.forEach(function (a) {
				a =
					Ember.Object.create({
						id: a.planId,
						price: a.price,
						pricePretify: languageParser.translate("admin", a.planId),
						stripeId: a.stripeId,
						cycle: a.cycle
					});
				b.pushObject(a)
			}), d.set("plans", b.sortBy("price").reverse()), d.set("settings", Ember.Object.create()), c.hasSubscription ? (d.set("isSubscribed", !0), d.set("isActive", !0)) : (d.set("isSubscribed", !1), 0 > moment().diff(this.originalData.expiry) && d.set("isActive", !0)));
			d.isActive || (c.settings.widget = {
				label: "Powered by *tawk.to*",
				url: "https://www.tawk.to",
				textColor: "#000000"
			},
				c.settings.email = {
					label: "No tawk.to live chat account? Create one for free here",
					url: "https://www.tawk.to"
				});
			d.settings.setProperties(c.settings);
			this.whitelabelAddOn || this.set("whitelabelAddOn", d);
			a()
		}
	});
	Tawk.WidgetsController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null,
		activeWidget: null,
		previouslySaved: !0,
		unusedUploadedBubbleList: [],
		whitelabelController: Tawk.WhitelabelAddOnController.create(),
		hasMoreWidgets: function () {
			return this.activeProperty && 1 < this.activeProperty.widgetList.length
		}.property("activeProperty.widgetList.length"),
		popoutWidgetCode: function () {
			return this.activeProperty && this.activeProperty.tawkId && this.activeWidget ? GLOBAL_TAWK_URL + "/chat/" + decodeStr(this.activeProperty.id) + "/" + this.activeWidget.id + "/?$_tawk_popout=true" : ""
		}.property("activeWidget.id", "activeProperty"),
		openProperty: function (a, c) {
			this.set("activeProperty", a);
			this.getLastViews();
			void 0 !== c ? this.openWidget(c) : this.openWidget(this.activeProperty.widgetList[0].id)
		},
		getWidget: function (a) {
			return this.activeProperty && this.activeProperty.widgetList ? this.activeProperty.widgetList.findProperty("id",
				a) : null
		},
		openWidget: function (a) {
			this.activeProperty && (void 0 === a || void 0 !== a && !this.getWidget(a) ? this.set("activeWidget", Tawk.WidgetModel.create({
				isDefault: !0,
				canBeDeleted: !1
			})) : this.resetWidget(a), this.activeWidget && (this.activeWidget.id && "profile" !== this.activeProperty.type) && this.saveLastSubView({widgetId: this.activeWidget.id}))
		},
		resetWidget: function (a, c) {
			var d = null;
			c = c || function () {
			};
			d = this.getWidget(a);
			this.set("activeWidget", null);
			this.set("onlineGreetings", null);
			this.set("onlineGreetingsPreview",
				null);
			this.set("awayGreetingsPreview", null);
			this.set("prechatFormPreview", null);
			this.set("domainWhiteList", null);
			this.set("prechatFormPreview", null);
			this.set("offlineFormPreview", null);
			this.set("scheduler", null);
			d && (d.bubbleSettings && d.bubbleSettings.bubbleName) && this.set("bubblePreview", null);
			if (!d) return c();
			this.set("activeWidget", d.copy());
			this.set("onlineGreetingsPreview", d.onlineGreetings.copy());
			this.set("awayGreetingsPreview", d.awayGreetings.copy());
			this.set("prechatFormPreview", d.prechatForm.copy());
			this.set("offlineFormPreview", d.offlineForm.copy());
			this.set("prechatFormPreview", d.prechatForm.copy());
			this.set("domainWhiteList", d.get("whiteList").copy());
			this.set("scheduler", Tawk.CopyableModel.create(d.get("scheduler")));
			d.bubbleSettings.bubbleName && this.set("bubblePreview", d.bubbleSettings.copy());
			20 <= this.domainWhiteList.domains.length ? this.domainWhiteList.set("disableAdd", !0) : this.domainWhiteList.set("disableAdd", !1);
			c()
		},
		saveBehavior: function (a, c) {
			var d;
			if (!(this.activeProperty && this.activeProperty.isAdmin &&
					this.activeWidget && this.activeWidget.id)) return c(!0);
			d = this.getWidget(this.activeWidget.id);
			a.type = this.activeWidget.isInline ? "inline" : "embed";
			socketConnector.saveBehavior(this.activeProperty.id, this.activeWidget.id, a, function (b) {
				if (b) return c(!0);
				d.setProperties({
					disableSound: a.disableSoundNotification,
					hideEstimatedWaitTime: a.hideEstimatedWaitTime,
					hideOffline: a.hideWidgetWhenOffline,
					onClick: a.onClick,
					hideOnload: a.hideWidgetOnload,
					hideOnMobile: a.hideWidgetOnMobile
				});
				return c()
			})
		},
		closeView: function () {
			this.closeItem();
			return !0
		},
		resetData: function () {
			if (this.activeWidget) {
				var a = this.getWidget(this.activeWidget.id);
				a ? this.resetWidget(a.id) : this.openWidget(this.activeProperty.widgetList[0].id)
			}
		},
		closeItem: function () {
			var a = this.getWidget(this.activeWidget.id);
			a ? this.resetWidget(a.id) : this.openWidget(this.activeProperty.widgetList[0].id);
			this.saveLastSubView({itemId: null})
		},
		isRTL: function () {
			return this.activeWidget && 0 <= rtlLanguages.indexOf(this.activeWidget.languageCode) ? !0 : !1
		}.property("activeWidget.languageCode"),
		optionsText: function () {
			return this.activeWidget ? languageParser.translate("widget_preview_translation", this.activeWidget.languageCode + "-options") : null
		}.property("activeWidget.languageCode"),
		checkAndAddOldBubble: function () {
			"upload" === this.bubblePreview.bubbleType && this.unusedUploadedBubbleList.push(this.bubblePreview.bubbleName)
		},
		checkAndRemoveOldBubble: function () {
			var a = this;
			"upload" === this.bubblePreview.bubbleType && this.unusedUploadedBubbleList.forEach(function (c, d) {
				c === a.bubblePreview.bubbleName &&
				a.unusedUploadedBubbleList.splice(d, 1)
			})
		},
		deleteAllUnusedUploadedBubble: function () {
			var a = this;
			this.unusedUploadedBubbleList.forEach(function (c) {
				fileUploader.removeBubbleFile(c, a.activeProperty.id, function () {
				})
			});
			this.unusedUploadedBubbleList = []
		},
		addNewidget: function (a, c, d) {
			var b, e = this;
			a = {type: c, name: a};
			if (!this.activeProperty || !this.activeProperty.isAdmin || this.activeWidget.id) return d(!0);
			a.propertyId = this.activeProperty.id;
			a.language = Tawk.userController.localeCode;
			socketConnector.addWidget(a, function (a,
			                                       c) {
				var h, k;
				if (a) return d(a);
				k = c.data.id;
				h = extractWidgetSettings(c.data, k);
				h.siteId = e.activeProperty.id;
				h.canBeDeleted = !0;
				b = Tawk.WidgetModel.create(h);
				e.activeProperty.widgetList.pushObject(b);
				e.openWidget(k);
				Tawk.routing.changeRoute({
					view: "admin",
					propertyId: e.activeProperty.id,
					subView: "widget-settings",
					itemId: null,
					widgetId: k
				});
				return d()
			})
		},
		saveAppearance: function (a) {
			var c, d, b = this;
			if (!(this.activeProperty && this.activeProperty.isAdmin && this.activeWidget && this.activeWidget.id && this.bubblePreview)) return a(!0);
			this.previouslySaved = !0;
			d = {};
			d.width = parseInt(this.activeWidget.width, 10);
			d.height = parseInt(this.activeWidget.height, 10);
			d.widgetHeaderBackgroundColor = this.activeWidget.backgroundColor;
			d.widgetHeaderTextColor = this.activeWidget.textColor;
			d.type = this.activeWidget.isInline ? "inline" : "embed";
			d.agentTextBackgroundColor = this.activeWidget.agentBubbleBg;
			d.agentTextColor = this.activeWidget.agentBubbleTxt;
			d.visitorTextBackgroundColor = this.activeWidget.visitorBubbleBg;
			d.visitorTextColor = this.activeWidget.visitorBubbleTxt;
			d.topCornerSize = parseInt(this.activeWidget.topCorner, 10);
			d.bottomCornerSize = parseInt(this.activeWidget.bottomCorner, 10);
			d.mobileWidget = this.activeWidget.mobileWidget;
			d.desktopWidget = this.activeWidget.desktopWidget;
			this.activeWidget.isInline ? (d.position = this.activeWidget.position, d.minimizedHeight = parseInt(this.activeWidget.minimizedHeight, 10), d.minimizedWidth = parseInt(this.activeWidget.minimizedWidth, 10), 320 === d.width && 400 === d.height && (d.width = 0, d.height = 0), 40 === d.minimizedHeight && 320 === d.minimizedWidth &&
			(d.minimizedHeight = 0, d.minimizedWidth = 0)) : 450 === d.width && 600 === d.height && (d.width = 0, d.height = 0);
			d.hideChatBubble = "min" === d.desktopWidget || !this.bubblePreview.enabled || !this.bubblePreview.bubbleName;
			d.hideChatBubble || (d.chatBubble = {
				text: this.bubblePreview.bubbleText,
				backgroundColor: this.bubblePreview.bubbleBgColor,
				foregroundColor: this.bubblePreview.bubbleTxColor,
				name: this.bubblePreview.bubbleName,
				width: parseInt(this.bubblePreview.bubbleWidth, 10),
				height: parseInt(this.bubblePreview.bubbleHeight, 10),
				zIndex: this.bubblePreview.bubbleInFront ? 1 : 0,
				rightOffset: parseInt(this.bubblePreview.bubbleRightOffset, 10),
				bottomOffset: parseInt(this.bubblePreview.bubbleBottomOffset, 10),
				leftOffset: parseInt(this.bubblePreview.bubbleLeftOffset, 10),
				topOffset: parseInt(this.bubblePreview.bubbleTopOffset, 10),
				type: this.bubblePreview.bubbleType,
				rotate: parseInt(this.bubblePreview.bubbleRotation, 10)
			});
			socketConnector.saveAppearance(this.activeProperty.id, this.activeWidget.id, d, function (e) {
				if (e) return a(!0);
				c = b.getWidget(b.activeWidget.id);
				c.setProperties({
					position: d.position,
					width: b.activeWidget.width,
					height: b.activeWidget.height,
					minimizedHeight: b.activeWidget.minimizedHeight,
					minimizedWidth: b.activeWidget.minimizedWidth,
					backgroundColor: b.activeWidget.backgroundColor,
					textColor: b.activeWidget.textColor,
					agentBubbleBg: b.activeWidget.agentBubbleBg,
					agentBubbleTxt: b.activeWidget.agentBubbleTxt,
					visitorBubbleBg: b.activeWidget.visitorBubbleBg,
					visitorBubbleTxt: b.activeWidget.visitorBubbleTxt,
					topCorner: b.activeWidget.topCorner,
					bottomCorner: b.activeWidget.bottomCorner,
					mobileWidget: b.activeWidget.mobileWidget,
					desktopWidget: b.activeWidget.desktopWidget,
					isRectangleMobile: "rectangle" === b.activeWidget.mobileWidget,
					isRoundMobile: "round" === b.activeWidget.mobileWidget,
					isRectangleDesktop: "full" === b.activeWidget.desktopWidget,
					isRoundDesktop: "min" === b.activeWidget.desktopWidget
				});
				d.hideChatBubble ? c.set("bubbleSettings", Tawk.BubbleModel.create({
					enabled: !1,
					bubbleName: "default",
					bubbleText: languageParser.translate("widgets", "chat_live_agent"),
					bubbleBgColor: "#7fb06f",
					bubbleTxColor: "#ffffff",
					bubbleWidth: 0,
					bubbleHeight: 0,
					bubbleBottomOffset: 0,
					bubbleRightOffset: 0,
					bubbleTopOffset: 0,
					bubbleLeftOffset: 0,
					bubbleInFront: !1,
					bubbleType: "default",
					bubbleRotation: 0
				})) : c.bubbleSettings.setProperties({
					enabled: b.bubblePreview.enabled,
					bubbleText: b.bubblePreview.bubbleText,
					bubbleBgColor: b.bubblePreview.bubbleBgColor,
					bubbleTxColor: b.bubblePreview.bubbleTxColor,
					bubbleName: b.bubblePreview.bubbleName,
					bubbleWidth: d.chatBubble.width,
					bubbleHeight: d.chatBubble.height,
					bubbleBottomOffset: d.chatBubble.bottomOffset,
					bubbleRightOffset: d.chatBubble.rightOffset,
					bubbleLeftOffset: d.chatBubble.leftOffset,
					bubbleTopOffset: d.chatBubble.topOffset,
					bubbleInFront: b.bubblePreview.bubbleInFront,
					bubbleType: d.chatBubble.type,
					bubbleRotation: d.chatBubble.rotate
				});
				b.resetWidget(c.id);
				a()
			})
		},
		actions: {
			resetHeaderBgColor: function () {
				var a;
				this.activeWidget && (a = this.getWidget(this.activeWidget.id)) && this.activeWidget.set("backgroundColor", a.backgroundColor)
			}, resetHeaderTxtColor: function () {
				var a;
				this.activeWidget && (a = this.getWidget(this.activeWidget.id)) &&
				this.activeWidget.set("textColor", a.textColor)
			}, resetAgentBgColor: function () {
				var a;
				this.activeWidget && (a = this.getWidget(this.activeWidget.id)) && this.activeWidget.set("agentBubbleBg", a.agentBubbleBg)
			}, resetAgentTxtColor: function () {
				var a;
				this.activeWidget && (a = this.getWidget(this.activeWidget.id)) && this.activeWidget.set("agentBubbleTxt", a.agentBubbleTxt)
			}, resetVisitorBgColor: function () {
				var a;
				this.activeWidget && (a = this.getWidget(this.activeWidget.id)) && this.activeWidget.set("visitorBubbleBg", a.visitorBubbleBg)
			},
			resetVisitorTxtColor: function () {
				var a;
				this.activeWidget && (a = this.getWidget(this.activeWidget.id)) && this.activeWidget.set("visitorBubbleTxt", a.visitorBubbleTxt)
			}, resetMaxWidth: function () {
				this.activeWidget && (this.activeWidget.isInline ? this.activeWidget.set("width", 320) : this.activeWidget.set("width", 450))
			}, resetMaxHeight: function () {
				this.activeWidget && (this.activeWidget.isInline ? this.activeWidget.set("height", 400) : this.activeWidget.set("height", 600))
			}, resetMinWidth: function () {
				this.activeWidget && this.activeWidget.isInline &&
				this.activeWidget.set("minimizedWidth", 320)
			}, resetMinHeight: function () {
				this.activeWidget && this.activeWidget.isInline && this.activeWidget.set("minimizedHeight", 40)
			}, resetPosition: function () {
				this.activeWidget && this.activeWidget.set("position", "br")
			}, resetBubbleSettings: function () {
				this.activeWidget && this.set("bubblePreview", this.activeWidget.bubbleSettings.copy())
			}
		},
		saveSettings: function (a, c, d, b) {
			var e, f = {}, g = this, h = 0, k = !1, l = function (a, c) {
				h++;
				a && (k = !0);
				2 === h && (g.resetWidget(g.activeWidget.id), b(k))
			};
			if (!(this.activeProperty && this.activeProperty.isAdmin && this.activeWidget && this.activeWidget.id)) return b(!0);
			f.enabled = null !== a ? a : this.activeWidget.isEnabled;
			f.whitelistDomains = this.domainWhiteList.domains.getEach("value");
			f.shareSessions = null === c ? this.activeWidget.sessionsShared : c;
			f.type = this.activeWidget.isInline ? "inline" : "embed";
			f.name = this.activeWidget.name;
			this.activeProperty.isSite ? socketConnector.saveWidgetSettings(this.activeProperty.id, this.activeWidget.id, f, function (a) {
				if (a) return l(!0,
					"settings");
				e = g.getWidget(g.activeWidget.id);
				e.set("isEnabled", f.enabled);
				e.set("name", f.name);
				e.set("sessionsShared", c);
				e.set("domainWhiteList", {stdom: f.whitelistDomains});
				return l()
			}) : l();
			d ? this.saveBehavior(d, function (a) {
				l(a, "behavior")
			}) : l()
		},
		deleteSingle: function (a) {
			var c, d = this;
			if (!this.activeProperty || !this.activeWidget || !this.activeProperty.isAdmin) return a(!0);
			c = this.getWidget(this.activeWidget.id);
			if (!c) return a(!0);
			checkAndSetConfirmView(!1, function (b) {
				if (!b) return a(!0);
				socketConnector.deleteWidgets(d.activeProperty.id,
					[c.id], function (b) {
						if (b) return a(b);
						d.activeProperty.widgetList.removeObject(c);
						a()
					})
			})
		},
		saveScheduler: function (a, c) {
			var d, b = this, e = {};
			if (!(this.activeProperty && this.activeProperty.isAdmin && this.activeWidget && this.activeWidget.id)) return c(!0);
			(d = this.scheduler.enabled) ? (e.cityName = this.scheduler.settings.city, e.googlePlaceId = this.scheduler.settings.gpid, e.schedule = a) : (e.cityName = null, e.googlePlaceId = null, e.schedule = null);
			socketConnector.editWidgetScheduler(this.activeProperty.id, this.activeWidget.id,
				d, e, function (f) {
					if (f) return c(!0);
					widget = b.getWidget(b.activeWidget.id);
					widget.set("scheduler.settings.sch", a);
					widget.set("scheduler.settings.city", e.cityName);
					widget.set("scheduler.settings.gpid", e.googlePlaceId);
					widget.set("scheduler.enabled", d);
					b.resetWidget(b.activeWidget.id);
					return c()
				})
		},
		changeGreetingsForLanguage: function (a, c) {
			var d, b, e = [];
			this.activeProperty && (this.activeProperty.isAdmin && this.activeWidget && this.activeWidget.id) && (this.prechatFormPreview && this.prechatFormPreview.enabled &&
			(this.activeProperty.isPersonal && this.prechatFormPreview.text === languageParser.translate("widget_preview_translation", c + "-prechat_title_profile") ? d = languageParser.translate("widget_preview_translation", a + "-prechat_title_profile") : this.prechatFormPreview.text === languageParser.translate("widget_preview_translation", c + "-prechat_title") && (d = languageParser.translate("widget_preview_translation", a + "-prechat_title")), d && (b = [], this.prechatFormPreview.fieldsData.parsedFields.every(function (d, e) {
				if (("inputText" ===
						d.type || "textArea" === d.type || "choice" === d.type || "option" === d.type) && d.label === languageParser.translate("widget_preview_translation", c + "-question")) return d.label = languageParser.translate("widget_preview_translation", a + "-question"), b.pushObject(d), !0;
				if (d.label === languageParser.translate("widget_preview_translation", c + "-" + d.type)) return d.label = languageParser.translate("widget_preview_translation", a + "-" + d.type), b.pushObject(d), !0;
				b = null;
				return !1
			}), this.prechatFormPreview.set("text", d), b && 0 < b.length &&
			(this.prechatFormPreview.set("languageUpdated", !0), this.prechatFormPreview.fieldsData.set("parsedFields", b)))), !this.offlineFormPreview || (this.offlineFormPreview.shortGreeting !== languageParser.translate("widget_preview_translation", c + "-offline") && this.offlineFormPreview.shortGreeting !== languageParser.translate("widget_preview_translation", c + "-status_message") + " - " + languageParser.translate("widget_preview_translation", c + "-offline") || this.offlineFormPreview.text !== languageParser.translate("widget_preview_translation",
				c + "-offline_title")) || (this.offlineFormPreview.fieldsData.parsedFields.every(function (b, d) {
				if (("inputText" === b.type || "textArea" === b.type || "choice" === b.type || "option" === b.type) && b.label === languageParser.translate("widget_preview_translation", c + "-question")) return b.label = languageParser.translate("widget_preview_translation", a + "-question"), e.pushObject(b), !0;
				if (b.label === languageParser.translate("widget_preview_translation", c + "-" + b.type)) return b.label = languageParser.translate("widget_preview_translation",
					a + "-" + b.type), e.pushObject(b), !0;
				e = null;
				return !1
			}), e && 0 < e.length && (this.offlineFormPreview.set("shortGreeting", languageParser.translate("widget_preview_translation", a + "-offline")), this.offlineFormPreview.set("text", languageParser.translate("widget_preview_translation", a + "-offline_title")), this.offlineFormPreview.set("fieldsData", Tawk.FormFields.create({
				fields: e,
				formType: "offline"
			})), this.offlineFormPreview.set("languageUpdated", !0))), !this.onlineGreetingsPreview || (this.onlineGreetingsPreview.actionMessage !==
				languageParser.translate("widget_preview_translation", c + "-say_something") || this.onlineGreetingsPreview.shortGreeting !== languageParser.translate("widget_preview_translation", c + "-online") && this.onlineGreetingsPreview.shortGreeting !== languageParser.translate("widget_preview_translation", c + "-status_message") + " - " + languageParser.translate("widget_preview_translation", c + "-online") || this.onlineGreetingsPreview.longGreeting !== languageParser.translate("widget_preview_translation", c + "-live_ready")) || this.set("onlineGreetingsPreview",
				{
					actionMessage: languageParser.translate("widget_preview_translation", a + "-say_something"),
					shortGreeting: languageParser.translate("widget_preview_translation", a + "-online"),
					longGreeting: languageParser.translate("widget_preview_translation", a + "-live_ready"),
					languageUpdated: !0
				}), !this.awayGreetingsPreview || (this.awayGreetingsPreview.shortGreeting !== languageParser.translate("widget_preview_translation", c + "-away") && this.awayGreetingsPreview.shortGreeting !== languageParser.translate("widget_preview_translation",
				c + "-status_message") + " - " + languageParser.translate("widget_preview_translation", c + "-away") || "" !== this.awayGreetingsPreview.longGreeting) || this.set("awayGreetingsPreview", {
				shortGreeting: languageParser.translate("widget_preview_translation", a + "-away"),
				longGreeting: "",
				languageUpdated: !0
			}))
		},
		updateAllContent: function (a, c) {
			var d = this, b = {};
			this.activeProperty && (this.activeProperty.isAdmin && this.activeWidget && this.activeWidget.id) && (b.onlineGreetings = this.onlineGreetingsPreview, b.awayGreetings = this.awayGreetingsPreview,
				this.prechatFormPreview.enabled ? (b.prechatForm = {
					prechatFormText: this.prechatFormPreview.text,
					questions: []
				}, this.prechatFormPreview.fieldsData.parsedFields.forEach(function (a) {
					b.prechatForm.questions.push({
						label: a.label,
						isRequired: a.isRequired,
						type: a.type,
						selections: a.selections && a.selections.length ? a.selections.getEach("text") : null
					})
				}), b.prechatForm.questions.length || (b.prechatForm = {
					prechatFormText: null,
					questions: null
				})) : b.prechatForm = {prechatFormText: null, questions: null}, b.offlineForm = {
				shortGreeting: decodeStr(this.offlineFormPreview.shortGreeting),
				offlineFormText: decodeStr(this.offlineFormPreview.text), questions: []
			}, this.offlineFormPreview.fieldsData.parsedFields.forEach(function (a) {
				b.offlineForm.questions.push({
					label: a.label,
					isRequired: a.isRequired,
					type: a.type,
					selections: a.selections && a.selections.length ? a.selections.getEach("text") : null
				})
			}), b.offlineForm.questions.length && !this.validateOfflineForm(b.offlineForm) && (b.offlineForm = null), b.offlineForm.questions.length || (b.offlineForm = null), b.languageCode = a, b.onlineGreetings.actionMessage = decodeStr(b.onlineGreetings.actionMessage),
				b.onlineGreetings.longGreeting = decodeStr(b.onlineGreetings.longGreeting), b.onlineGreetings.shortGreeting = decodeStr(b.onlineGreetings.shortGreeting), b.awayGreetings.longGreeting = decodeStr(b.awayGreetings.longGreeting), b.awayGreetings.shortGreeting = decodeStr(b.awayGreetings.shortGreeting), null !== b.prechatForm.prechatFormText && (b.prechatForm.prechatFormText = decodeStr(b.prechatForm.prechatFormText)), socketConnector.saveWidgetContent(this.activeProperty.id, this.activeWidget.id, b, function (e) {
				if (e) return c(!0);
				widget = d.getWidget(d.activeWidget.id);
				widget.set("languageCode", a);
				null === b.prechatForm.prechatFormText && null === b.prechatForm.questions ? (widget.prechatForm.set("enabled", !1), widget.prechatForm.set("text", ""), widget.prechatForm.set("fieldsData", Tawk.FormFields.create({
					fields: [],
					formType: "prechat"
				}))) : (widget.prechatForm.set("enabled", !0), widget.prechatForm.set("text", b.prechatForm.prechatFormText), widget.prechatForm.set("fieldsData", Tawk.FormFields.create({
					fields: b.prechatForm.questions,
					formType: "prechat"
				})));
				b.offlineForm && (widget.offlineForm.set("shortGreeting", b.offlineForm.shortGreeting), widget.offlineForm.set("text", b.offlineForm.offlineFormText), widget.offlineForm.set("fieldsData", Tawk.FormFields.create({
					fields: b.offlineForm.questions,
					formType: "offline"
				})));
				b.onlineGreetings && widget.set("onlineGreetings", Tawk.CopyableModel.create(b.onlineGreetings));
				b.awayGreetings && widget.set("awayGreetings", Tawk.CopyableModel.create(b.awayGreetings));
				d.resetWidget(d.activeWidget.id);
				return c()
			}))
		},
		updateLanguage: function (a,
		                          c) {
			var d = this;
			this.activeProperty && (this.activeProperty.isAdmin && this.activeWidget && this.activeWidget.id) && socketConnector.saveWidgetLanguage(this.activeProperty.id, this.activeWidget.id, a, function (b) {
				if (b) return c(!0);
				widget = d.getWidget(d.activeWidget.id);
				widget.set("languageCode", a);
				return c()
			})
		},
		validateOfflineForm: function (a) {
			var c = !0;
			a.questions.forEach(function (a) {
				if ("name" === a.type && !a.isRequired || "email" === a.type && !a.isRequired || "message" === a.type && !a.isRequired) a.isRequired = !0
			});
			a = a.questions.getEach("type");
			if (-1 === a.indexOf("name") || -1 === a.indexOf("email") || -1 === a.indexOf("message")) c = !1;
			return c
		},
		loadWhitelabelAddon: function (a, c) {
			var d = 0, b = function () {
				d++;
				2 === d && c(!0)
			};
			this.activeProperty.isSite ? (this.activeProperty.id !== this.whitelabelController.propertyId ? (this.whitelabelController.set("propertyId", this.activeProperty.id), this.whitelabelController.loadWhitelabelData(b)) : this.whitelabelController.resetSettings(b), this.whitelabelController.set("currentView", a)) : (this.whitelabelController.setProperties({
				whitelabelAddOn: null,
				originalData: null, propertyId: null, widgetView: null
			}), c(!1));
			Tawk.userController.getExistingCCCards(!1, b)
		}
	});
	Tawk.BanController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null, pagedList: null, searchQuery: null, openProperty: function (a, c) {
			this.set("activeProperty", a);
			this.set("pagedList", Tawk.PagingListModel.create({perpage: c}));
			this.set("searchQuery", {query: null, pageId: a.id, time: null, forward: null, limit: c});
			this.pagedList.reset();
			this.pagedList.startList();
			this.getLastViews();
			this.getList();
			Tawk.routing.titlePath.subviewName = languageParser.translate("ban_list", "view_title");
			Tawk.routing.setTitle()
		}, getList: function (a) {
			var c = this, d = Tawk.routing.getPath();
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			this.set("isLoading", !0);
			socketConnector.getBanList(this.searchQuery, function (b, e) {
				var f = [];
				if (b) return c.set("isLoading", !1), a(b);
				e.forEach(function (a) {
					a.createdOn !== c.searchQuery.time && (a = Tawk.createBanEntryFromJSON(a)) && f.pushObject(a)
				});
				c.pagedList.setList(f);
				f.length ?
					c.pagedList.setTotal(c.pagedList.currentData.length + 1) : c.pagedList.setTotal(c.pagedList.currentData.length);
				c.set("isLoading", !1);
				d.itemId ? c.openItem(d.itemId) : c.lastViews && ("ban-list" === c.lastViews.subView && c.lastViews.itemId) && c.openItem(c.lastViews.itemId);
				return a(null, f.length)
			})
		}, loadNextList: function (a) {
			a = a || function () {
			};
			if (this.pagedList.isLastPage()) return a(null, !1);
			this.set("searchQuery.forward", !1);
			this.set("searchQuery.time", this.pagedList.currentData.objectAt(this.pagedList.currentData.length -
				1).co);
			this.pagedList.nextList();
			this.getList(a)
		}, searchList: function (a) {
			a ? this.set("searchQuery.query", a) : this.set("searchQuery.query", null);
			this.set("searchQuery.forward", null);
			this.set("searchQuery.time", null);
			this.pagedList.reset();
			this.pagedList.startList();
			this.getList()
		}, toggleAllMark: function (a) {
			this.activeProperty.isAdmin && this.pagedList.currentData.setEach("isMarked", a)
		}, toggleMark: function (a, c) {
			var d = this.pagedList.getItem(a);
			this.activeProperty.isAdmin && d && d.set("isMarked", c)
		}, openItem: function (a) {
			this.activeProperty &&
			(this.pagedList.currentData.setEach("isMarked", !1), (a = a ? this.pagedList.getItem(a) : Tawk.BanEntryModel.create()) ? (this.set("activeBan", a.clone()), this.loadHistory(), this.activeBan.id ? (this.saveLastSubView({itemId: this.activeBan.id}), Tawk.routing.titlePath.itemName = this.activeBan.valueDisplay) : Tawk.routing.titlePath.itemName = "Add Ban", Tawk.routing.setTitle(), Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "ban-list",
				itemId: this.activeBan.id || null,
				widgetId: null
			})) : Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id, subView: "ban-list", itemId: null, widgetId: null
			}))
		}, closeView: function () {
			if (this.activeBan) return this.closeItem(), !1;
			this.resetData();
			return !0
		}, closeItem: function () {
			this.pagedList.currentData.setEach("isMarked", !1);
			this.set("activeBan", null);
			this.saveLastSubView({itemId: null})
		}, resetData: function () {
			this.set("activeBan", null);
			this.set("pagedList", null)
		}, loadHistory: function () {
			var a, c, d, b, e = this;
			this.activeBan && (this.activeBan.id && !this.activeBan.transcript.isLoaded) &&
			(a = this.activeBan.id, c = this.activeBan.entry, d = this.activeProperty.id, b = this.get("activeBan.isVisitor") ? "getHistoryByBannedVisitorId" : "getHistoryByBannedIp", this.activeBan.set("transcript.isError", !1), socketConnector[b](d, c, function (b, c) {
				e.processHistory(b, a, c)
			}))
		}, processHistory: function (a, c, d) {
			if (this.activeBan) {
				if (a) return this.activeBan.set("transcript.isError", !0);
				d && (a = conversationProcess.processHistory(d.c, d.n)) && this.activeBan.set("transcript.content", a.transcriptData);
				this.activeBan.set("transcript.isLoaded",
					!0)
			}
		}, deleteSingle: function (a) {
			var c;
			a = a || function () {
			};
			if (!this.activeBan) return a(!0);
			c = this.pagedList.getItem(this.activeBan.id);
			if (!c) return a(!0);
			c.set("isMarked", !0);
			this.bulkDelete(function (d) {
				c.set("isMarked", !1);
				if (d) return a(d);
				a()
			})
		}, bulkDelete: function (a) {
			var c, d = this, b = [], e = [];
			a = a || function () {
			};
			if (!this.pagedList || !this.pagedList.currentData.length || !this.activeProperty.isAdmin) return a();
			c = this.pagedList.currentData.filterProperty("isMarked", !0);
			if (0 === c.length) return a();
			checkAndSetConfirmView(!1,
				function (f) {
					if (!f) return a(!0);
					c.forEach(function (a) {
						"ip" === a.type ? b.push({banValue: a.entry, pageId: a.propertyId}) : e.push({
							banValue: a.entry,
							pageId: a.propertyId
						})
					});
					socketConnector.unBanVisitors(e, b, function (b, c) {
						if (b) return a(!0);
						d.pagedList.reset();
						d.pagedList.startList();
						d.getList(a)
					})
				})
		}, submitBan: function (a, c, d) {
			var b, e = this;
			if (!this.activeBan) return d(!0);
			b = this.pagedList.getItem(this.activeBan.id);
			if (this.activeBan.id && !b) return d(!0);
			if (this.activeBan.id) return socketConnector.editBanReason(this.activeProperty.id,
				this.activeBan.entry, c, function (a) {
					if (a) return d(!0);
					b.set("reason", c);
					e.openItem(b.id);
					d()
				});
			this.banByIp(a, c, d)
		}, banByIp: function (a, c, d) {
			var b = this;
			if (!this.activeProperty) return d(!0);
			socketConnector.banVisitorByIp(this.activeProperty.id, a, c, function (a) {
				if (a) return d(!0);
				b.pagedList.reset();
				b.pagedList.startList();
				b.getList(function () {
					b.set("activeBan", null)
				})
			})
		}
	});
	Tawk.PageContentController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		imageData: null, showCamera: !1, actions: {
			addLink: function () {
				this.customization.links.pushObject({
					value: "",
					type: null, index: Date.now()
				})
			}
		}, openPersonalPage: function (a) {
			var c, d = this, b = Tawk.webProperties.pages.findProperty("type", "profile");
			a = a || function () {
			};
			b && (c = Tawk.PropertyModel.create(), c.initialize(b), Tawk.webProperties.getPropertyInformation(b.id, function (b, f) {
				if (b) return a(b);
				c.loadSettings(f);
				c.set("isPersonal", !0);
				c.set("personalInfo", Tawk.userController.user);
				c.set("shareFbLink", "https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(c.siteLink));
				c.set("shareTwLink", "https://twitter.com/share?url=" +
					encodeURIComponent(c.siteLink));
				d.set("activeProperty", c);
				a()
			}))
		}, openProperty: function (a) {
			this.activeProperty && this.activeProperty.id === a.id || (this.set("activeProperty", a), this.set("customization", this.activeProperty.customization.copy()), this.set("countryCode", this.customization.location.country), this.set("cityList", []), this.set("imageData", null), this.getLastViews(), Tawk.routing.titlePath.subviewName = languageParser.translate("admin", "page_content"), Tawk.routing.setTitle())
		}, executeSave: function (a,
		                          c) {
			this.activeProperty.isPersonal ? socketConnector.saveProfilePageCustomization(this.activeProperty.id, a, c) : socketConnector.saveBusinessPageCustomization(this.activeProperty.id, a, c)
		}, removeExternalLink: function (a) {
			this.customization.links.removeAt(a);
			this.updateLinks()
		}, uploadPhoto: function (a, c, d, b) {
			this.set("imageData", {file: a, cropDimensions: c, imageDimensions: d, type: b, dataType: "file"})
		}, applyImage: function (a) {
			var c = this;
			this.imageData && ("page-profile" === this.imageData.type ? (this.customization.set("logo",
				a), this.customization.set("removeLogo", !1), resizeForChat(a, this.imageData.imageDimensions, {
				width: 75,
				height: 79
			}, function (a) {
				c.customization.set("profileImage", a)
			})) : (this.customization.set("header", a), this.customization.set("removeHeader", !1)), this.set("imageData", null))
		}, openCamera: function () {
			this.set("imageData", {
				cropDimensions: {width: 200, height: 200},
				imageDimensions: {width: 137, height: 137},
				type: "page-profile",
				dataType: "video"
			})
		}, updateCountryCode: function (a) {
			a ? this.set("countryCode", a) : this.set("countryCode",
				null);
			this.set("cityList", []);
			this.customization.location.set("city", null);
			this.customization.location.set("state", null);
			this.customization.location.set("locationId", null);
			this.customization.location.set("locationInfo", null)
		}, updatePageLocationDetails: function (a) {
			a = this.cityList[a];
			this.customization && a && (this.customization.location.set("country", this.countryCode.toUpperCase()), this.customization.location.set("city", a.city), this.customization.location.set("state", a.state), this.customization.location.set("locationId",
				a.id), this.customization.location.set("locationInfo", a.city + (a.state ? ", " + a.state : "")))
		}, searchCities: function (a, c) {
			var d = this;
			this.set("cityList", []);
			if (!a) return c();
			getCities(a, this.countryCode, function (a) {
				a && d.set("cityList", a);
				c()
			})
		}, extractUrl: function (a, c) {
			var d, b = this.customization.links[a];
			if (b) {
				d = -1 !== c.indexOf("facebook.com") ? "facebook" : -1 !== c.indexOf("flickr.com") ? "flickr" : -1 !== c.indexOf("instagram.com") ? "instagram" : -1 !== c.indexOf("twitter.com") ? "twitter" : -1 !== c.indexOf("youtube.com") ?
					"youtube" : -1 !== c.indexOf("vimeo.com") ? "vimeo" : -1 !== c.indexOf("linkedin.com") ? "linkedin" : -1 !== c.indexOf("plus.google.com") ? "gplus" : "other";
				var e = this.customization.links.findProperty("type", d);
				b.type = null !== e && b !== e && "other" !== d ? "other" : d;
				b.value = c;
				b.index = this.activeProperty.id + b.type + Date.now()
			}
			this.updateLinks()
		}, updateLinks: function () {
			this.customization.set("facebook", this.customization.links.filterProperty("type", "facebook"));
			this.customization.set("flickr", this.customization.links.filterProperty("type",
				"flickr"));
			this.customization.set("instagram", this.customization.links.filterProperty("type", "instagram"));
			this.customization.set("twitter", this.customization.links.filterProperty("type", "twitter"));
			this.customization.set("youtube", this.customization.links.filterProperty("type", "youtube"));
			this.customization.set("vimeo", this.customization.links.filterProperty("type", "vimeo"));
			this.customization.set("linkedin", this.customization.links.filterProperty("type", "linkedin"));
			this.customization.set("gplus",
				this.customization.links.filterProperty("type", "gplus"));
			this.customization.set("otherLinks", this.customization.links.filterProperty("type", "other"))
		}, savePageCustomization: function (a, c, d) {
			var b, e = this;
			if (!this.activeProperty || !this.activeProperty.isAdmin || !this.customization) return d(!0);
			b = {};
			b.logo = this.customization.logo !== this.activeProperty.customization.logo ? this.customization.logo : null;
			b.profileImage = this.customization.profileImage !== this.activeProperty.customization.profileImage ? this.customization.profileImage :
				null;
			b.banner = this.customization.header !== this.activeProperty.customization.header ? this.customization.header : null;
			b.slogan = this.customization.slogan;
			b.summary = this.customization.summary;
			b.description = this.customization.description;
			b.tags = decodeStr(this.customization.tagList.join(","));
			b.links = this.customization.getAllLinksValue();
			b.country = this.customization.location.country;
			b.city = this.customization.location.city;
			b.state = this.customization.location.state;
			b.locationId = this.customization.location.locationId;
			this.customization.removeLogo && (b.removeLogo = !0, Tawk.webProperties.personalPage.set("alias.aliasImage", null));
			this.customization.removeHeader && (b.removeBanner = !0);
			this.activeProperty.isPersonal && ("undefined" !== typeof c && this.activeProperty.tawkId !== c && (b.tawkId = c), "undefined" !== typeof a && this.activeProperty.enabled !== a && (a ? this.enablePage() : this.disablePage()));
			this.executeSave(b, function (a, c) {
				if (a) return d(!0);
				e.activeProperty.set("customization", e.customization.copy());
				c.logoHash && e.activeProperty.customization.set("logo",
					GLOBAL_AWS_LG_URL + "/" + c.logoHash + "?=" + randomString(5, !0));
				c.profileImageHash && (e.activeProperty.customization.set("profileImage", c.profileImageHash), Tawk.webProperties.personalPage.set("alias.aliasImage", c.profileImageHash + ("?_t" + Date.now())));
				c.bannerHash && e.activeProperty.customization.set("header", GLOBAL_AWS_BN_URL + "/" + c.bannerHash + "?=" + randomString(5, !0));
				b.tawkId && e.activeProperty.isPersonal ? Tawk.webProperties.updatePropertyData({
					pgid: e.activeProperty.id,
					twid: b.tawkId
				}, !1, function (a) {
					e.activeProperty.set("tawkId",
						b.tawkId);
					d()
				}) : d()
			})
		}, removeLogo: function () {
			this.activeProperty && (-1 !== this.customization.logo.indexOf("data:image/jpeg;base64") ? this.customization.set("logo", this.activeProperty.customization.logo) : (this.customization.set("removeLogo", !0), this.customization.set("logo", null), this.customization.set("profileImage", null)))
		}, removeHeader: function () {
			this.activeProperty && (-1 !== this.customization.header.indexOf("data:image/jpeg;base64") ? this.customization.set("header", this.activeProperty.customization.header) :
				(this.customization.set("removeHeader", !0), this.customization.set("header", null)))
		}, disablePage: function (a) {
			var c = this;
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			Tawk.webProperties.disableProperty(this.activeProperty.id, function (d) {
				if (d) return a(d);
				c.activeProperty.set("enabled", !1);
				return a()
			})
		}, enablePage: function (a) {
			var c = this;
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			Tawk.webProperties.enableProperty(this.activeProperty.id, function (d) {
				if (d) return a(d);
				c.activeProperty.set("enabled",
					!0);
				return a()
			})
		}, checkTawkId: function (a, c) {
			if (!this.activeProperty || !this.activeProperty.id) return socketConnector.checkTawkIdVacancy(a, null, c);
			if (this.activeProperty.tawkId === a) return c(null);
			socketConnector.checkTawkIdVacancy(a, this.activeProperty.id, c)
		}, closeView: function () {
			this.resetData();
			return !0
		}, resetData: function () {
			this.set("customization", this.activeProperty.customization.copy());
			this.set("countryCode", this.customization.location.country);
			this.set("cityList", []);
			this.set("imageData", null)
		}
	});
	var handleCCPayment = function (a, c) {
		var d = {}, b = {};
		Stripe.setPublishableKey(STRIPE_KEY);
		b.addonId = a.addOnId;
		b.planId = a.planId;
		b.paymentMethod = "stripe";
		b.action = a.action;
		a.subscriptionId && (b.currentSubscriptionId = a.subscriptionId);
		"new-card" === a.customerId ? (d.name = a["cardholder-name"], d.number = a["card-number"], d.cvc = a["card-cvc"], d.address_zip = a["zip-code"], d.exp = a["card-expiry"], Stripe.card.createToken(d, function (d, f) {
			if (f.error) return c(!0, f.error.message);
			socketConnector.createStripePayment(f.id, function (d,
			                                                    e) {
				if (d) return c(!0, languageParser.translate("admin", "payment_process_fail"), e ? e.customerId : null);
				b.source = e.customerId;
				createSubscription(a.propertyId, b, c)
			})
		})) : (b.source = a.customerId, createSubscription(a.propertyId, b, c))
	}, handlePaypalPayment = function (a, c) {
		var d, b, e, f, g, h, k, l = {}, m = {}, n = window.addEventListener ? "addEventListener" : "attachEvent",
			p = window.addEventListener ? "removeEventListener" : "detachEvent",
			q = "attachEvent" === n ? "onmessage" : "message", r = !1;
		if (desktopConnector.enabled() && !desktopConnector.canUsePaypal()) return c(!0,
			languageParser.translate("admin", "paypal_unsupported"));
		delete localStorage.paypal;
		window.paypalWindow && !window.paypalWindow.closed ? window.paypalWindow.focus() : (a.subscriptionId && (m.currentSubscriptionId = a.subscriptionId), m.addonId = a.addOnId, m.planId = a.planId, m.paymentMethod = "paypal", m.action = a.action, l.planId = a.planId, l.pageId = a.propertyId, l.addonId = a.addOnId, k = function () {
			clearTimeout(g);
			delete localStorage.paypal;
			$(window).off("storage.payPal");
			$(window).unbind("focus.payPal");
			window[p](q, d);
			window.paypalWindow &&
			"function" === typeof window.paypalWindow.close && (window.paypalWindow.close(), window.paypalWindow = null)
		}, e = function () {
			k();
			desktopConnector.enabled() && desktopConnector.canUsePaypal() && desktopConnector.send("closePayPalWindow");
			return createSubscription(a.propertyId, m, c)
		}, f = function () {
			k();
			desktopConnector.enabled() && desktopConnector.canUsePaypal() && desktopConnector.send("closePayPalWindow");
			return c(!0, languageParser.translate("admin", "paypal_cancel"))
		}, b = function (a) {
			r || (window.paypalWindow && window.paypalWindow.closed ?
				(r = !0, e()) : localStorage.paypal && "return" === localStorage.paypal ? (r = !0, e()) : localStorage.paypal && "cancel" === localStorage.paypal && (r = !0, f()))
		}, d = function (a) {
			if (!r) if ("return" === a.data) r = !0, e(); else if ("cancel" === a.data) r = !0, f(); else {
				try {
					data = JSON.parse(a.data)
				} catch (b) {
					return
				}
				data.cmd && "paypalWindowClosed" === data.cmd && (localStorage.paypal && "return" === localStorage.paypal ? (r = !0, e()) : (r = !0, f()))
			}
		}, h = function (a) {
			a.originalEvent && !r && "paypal" === a.originalEvent.key && ("return" === a.originalEvent.newValue ? (r =
				!0, e()) : "cancel" === a.originalEvent.newValue && (r = !0, f()))
		}, k(), desktopConnector.enabled() || (window.paypalWindow = window.open("", "", "resizable=yes, toolbar=no, location=no, menubar=no, personalbar=no")), socketConnector.createPaypalPayment(l, function (a, e) {
			if (a || !e.url) return window.paypalWindow && "function" === typeof window.paypalWindow.close && (window.paypalWindow.close(), window.paypalWindow = null), c(!0, languageParser.translate("admin", "paypal_no_connection"));
			m.source = e.token;
			window[n](q, d);
			$(window).bind("focus.payPal",
				b);
			$(window).on("storage.payPal", h);
			g = setTimeout(function () {
				k();
				return c(!0, languageParser.translate("admin", "paypal_token_expiration"))
			}, 36E5);
			desktopConnector.enabled() ? desktopConnector.send("paypal", e.url) : (window.paypalWindow.location.href = e.url, window.paypalWindow.focus())
		}))
	}, createSubscription = function (a, c, d) {
		socketConnector.createSubscription(a, c, function (a, c) {
			var f = languageParser.translate("admin", "payment_process_fail");
			return a ? (a.message ? f = "MEMBERSHIP_CHANGE" === a.message || "PROPERTY_REMOVAL" ===
			a.message ? languageParser.translate("admin", "no_access_addon") : languageParser.translate("admin", a.message) : "UnauthorizedError" === a.code ? f = languageParser.translate("admin", "no_access_addon") : "InternalServerError" === a.code && (f = languageParser.translate("form_validation_messages", "SERVER_ERROR")), d(!0, f)) : d(null, c.subcriptionId)
		})
	};
	Tawk.AddOnsController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null, activeAddOn: null, existingCards: [], addOnList: [], openProperty: function (a, c) {
			var d =
				this, b = Tawk.routing.getPath(), e = 0, f = function () {
				e++;
				2 === e && d.set("isLoading", !1)
			};
			this.set("isLoading", !0);
			this.set("activeProperty", a);
			this.hasAccess() && this.set("canUsePaypal", desktopConnector.canUsePaypal());
			this.getLastViews();
			Tawk.userController.getExistingCCCards(!1, f);
			this.getAddOnList(function () {
				b.itemId ? -1 !== b.itemId.indexOf("-settings") ? (d.saveLastSubView({viewType: "settings"}), d.openSettings(b.itemId.replace("-settings", ""))) : d.openItem(b.itemId) : d.saveLastSubView({itemId: null});
				f()
			});
			Tawk.routing.titlePath.subviewName =
				languageParser.translate("admin", "add_on_title");
			Tawk.routing.setTitle()
		}, hasAccess: function () {
			return this.activeProperty && this.activeProperty.isAdmin && this.activeProperty.isSite
		}, getAddOnList: function (a) {
			var c = this, d = [];
			this.addOnList.clear();
			Object.keys(addOnList).forEach(function (a) {
				d.pushObject(Ember.Object.create(addOnList[a]))
			});
			socketConnector.getAddOns(this.activeProperty.id, function (b, f) {
				var g;
				if (b) return a();
				f.forEach(function (a) {
					var b = [];
					if (g = d.findProperty("id", a.addonId)) a.hasSubscription ?
						(g.set("isSubscribed", !0), g.set("isActive", !0)) : (g.set("isSubscribed", !1), 0 > moment().diff(a.expiry) && g.set("isActive", !0)), a.plans.forEach(function (a) {
						a = Ember.Object.create({
							id: a.planId,
							price: a.price,
							pricePretify: languageParser.translate("admin", a.planId),
							stripeId: a.stripeId,
							cycle: a.cycle
						});
						b.pushObject(a)
					}), g.set("mainPrice", languageParser.translate("admin", a.addonId + "-main-price")), g.set("plans", b.sortBy("price").reverse())
				});
				c.set("addOnList", d);
				a()
			});
			if (!this.activeProperty.isAdmin) {
				var b = [];
				this.activeProperty.agentAccess.forEach(function (a) {
					"admin" === a.rl && a.en && b.push({id: a.aid, name: Tawk.agentsController.getName(a.aid)})
				});
				this.set("contactAdmins", b)
			}
		}, openItem: function (a, c, d) {
			var b, e = this;
			c = c || function () {
			};
			b = this.addOnList.findProperty("id", a);
			if (!b) return c(!0);
			d || (this.set("activeAddOn", b), this.saveLastSubView({itemId: a}), this.set("isLoading", !0));
			socketConnector.getAddOnDetail(this.activeProperty.id, b.id, function (f, g) {
				if (f) return d || e.set("isLoading", !1), c(!0);
				"whitelabel" === a &&
				(g.hasSubcription ? g.settings.address && (g.settings.address = e.createAddressData(g.settings.address), g.settings.candidate = {address: g.settings.address.address}) : (g.settings.widget = {
					label: "Powered by *tawk.to*",
					url: "https://www.tawk.to"
				}, g.settings.email = {
					label: "No tawk.to live chat account? Create one for free here",
					url: "https://www.tawk.to"
				}));
				g.subscription && b.set("subscriptionId", g.subscription.subscriptionId);
				b.set("settings", Ember.Object.create(g.settings));
				"live-answering" === a && b.isActive && (b.settings.set("entitlements",
					g.entitlements), 168 === g.entitlements.hours && b.settings.set("fulltime", !0), e.extractLiveAnsweringScheduler(g.settings, b));
				d || e.set("isLoading", !1);
				g.hasSubcription || (e.lastViews.viewType = null, e.saveLastSubView());
				Tawk.routing.titlePath.itemName = b.name;
				Tawk.routing.setTitle();
				return c()
			})
		}, openSettings: function (a, c) {
			var d, b = this;
			c = c || function () {
			};
			if (!this.hasAccess()) return c();
			addOn = this.addOnList.findProperty("id", a);
			if (!addOn) return c();
			this.set("isLoading", !0);
			d = function (d) {
				if (d) return b.set("isLoading",
					!1), c();
				b.saveLastSubView({itemId: a, viewType: "settings"});
				b.set("activeAddOn", addOn);
				"live-answering" === a ? b.getHiredAgentContent(function () {
					b.set("isLoading", !1);
					return c()
				}) : (b.set("isLoading", !1), c())
			};
			addOn.settings ? (d(), this.set("activeAddOn", addOn), this.saveLastSubView({
				itemId: a,
				viewType: "settings"
			})) : this.openItem(a, d.bind(this), !0)
		}, closeView: function () {
			if (this.activeAddOn) return this.closeItem(), !1;
			this.resetData();
			return !0
		}, closeItem: function () {
			this.set("activeAddOn", null);
			this.saveLastSubView({itemId: null})
		},
		resetData: function () {
			this.set("activeAddOn", null)
		}, saveWhitelabelSettings: function (a, c) {
			var d, b = this;
			this.hasAccess() && this.activeAddOn && socketConnector.saveWhitelabelSettings(this.activeProperty.id, a, function (e, f) {
				if (e) return c(e);
				d = b.addOnList.findProperty("id", "whitelabel");
				d.set("settings.email", a.email);
				d.set("settings.whitelabel", a.whitelabel);
				d.set("settings.enabled", a.enabled);
				b.openItem("whitelabel");
				return c()
			})
		}, handlePayment: function (a, c, d) {
			var b, e = this, f = function (f, h) {
				var k = function () {
					f ?
						d(f, h) : (b.set("subscriptionId", h), b.set("isSubscribed", !0), b.set("isActive", !0), b.set("settings", Ember.Object.create({
							enabled: !0,
							email: {label: "", url: ""},
							widget: {label: "", url: ""}
						})), e.openItem(b.id), d())
				};
				"cc" === a && "new-card" === c.customerId ? Tawk.userController.getExistingCCCards(!0, k.bind(e)) : k()
			};
			d = d || function () {
			};
			if (!this.hasAccess() || !this.activeAddOn) return d(!0);
			b = this.addOnList.findProperty("id", this.activeAddOn.id);
			if (!b) return d(!0);
			c.addOnId = b.id;
			c.propertyId = this.activeProperty.id;
			c.action =
				"create";
			"cc" === a ? handleCCPayment(c, f) : handlePaypalPayment(c, f)
		}, setupForwarding: function (a, c) {
			var d, b, e = this;
			if (!this.hasAccess() || !this.activeAddOn) return c(!0);
			b = this.addOnList.findProperty("id", "whitelabel");
			failedTimeout = setTimeout(function () {
				c(!0)
			}, 12E4);
			d = function (a) {
				clearTimeout(failedTimeout);
				b.set("settings.address", e.createAddressData(a));
				e.openItem("whitelabel");
				c()
			};
			socketConnector.socket.on("forwarderUpdate", d);
			socketConnector.setupForwarder(this.activeProperty.id, {email: a}, function (a,
			                                                                             e) {
				if (a) return socketConnector.socket.removeListener("forwarderUpdate", d), clearTimeout(failedTimeout), c(!0);
				b.set("candidate", e)
			})
		}, verifyForwarding: function (a) {
			var c, d = this;
			if (!this.hasAccess() || !this.activeAddOn || !this.activeAddOn.settings.address) return a(!0);
			c = this.addOnList.findProperty("id", "whitelabel");
			failedTimeout = setTimeout(function () {
				a(!0)
			}, 12E4);
			socketConnector.socket.on("forwarderUpdate", function (b) {
				clearTimeout(failedTimeout);
				c.set("settings.address", d.createAddressData(b));
				d.openItem("whitelabel");
				a()
			});
			socketConnector.verifyForwarding(this.activeProperty.id, {email: this.activeAddOn.settings.address.address}, function (b) {
				if (b) return a(!0)
			})
		}, verifySPF: function (a) {
			var c, d = this;
			if (!this.hasAccess() || !this.activeAddOn || !this.activeAddOn.settings.address) return a(!0);
			c = this.addOnList.findProperty("id", "whitelabel");
			socketConnector.verifySPF(this.activeProperty.id, {email: this.activeAddOn.settings.address.address}, function (b, e) {
				if (b) return a(!0);
				c.set("settings.address", d.createAddressData(e.address));
				d.openItem("whitelabel");
				a()
			})
		}, verifyDKIM: function (a) {
			var c, d = this;
			if (!this.hasAccess() || !this.activeAddOn || !this.activeAddOn.settings.address) return a(!0);
			c = this.addOnList.findProperty("id", "whitelabel");
			socketConnector.verifyDKIM(this.activeProperty.id, {email: this.activeAddOn.settings.address.address}, function (b, e) {
				if (b) return a(!0);
				c.set("settings.address", d.createAddressData(e.address));
				d.openItem("whitelabel");
				a()
			})
		}, createAddressData: function (a) {
			var c = a.address.split("@");
			a.dkim1 = "tawk1._domainkey." +
				c[1];
			a.dkim2 = "tawk1._domainkey.mta.tawk.to";
			a.dkim3 = "tawk2._domainkey." + c[1];
			a.dkim4 = "tawk2._domainkey.mta.tawk.to";
			a.fwdVerified && (a.fwdLastVerified = moment(a.fwdVerified).format("DD/MMM/YYYY"));
			a.spfVerified && (a.spfLastVerified = moment(a.spfVerified).format("DD/MMM/YYYY"));
			a.dkimVerified && (a.dkimLastVerified = moment(a.dkimVerified).format("DD/MMM/YYYY"));
			null === a.fwdVerifyRqst ? a.newFwdVerified = !0 : 12 < moment().diff(moment(a.fwdVerifyRqst), "hours") ? a.newFwdVerified = !1 : a.pendingFwdVerified = !0;
			return a
		},
		saveForwarderName: function (a, c) {
			var d, b = this;
			if (!this.hasAccess() || !this.activeAddOn || !this.activeAddOn.settings.address) return c(!0);
			d = this.addOnList.findProperty("id", "whitelabel");
			socketConnector.saveForwarderName(this.activeProperty.id, {name: a}, function (a, f) {
				if (a) return c(!0);
				d.set("settings.address", b.createAddressData(f.address));
				b.openItem("whitelabel");
				c()
			})
		}, removeForwarder: function (a) {
			var c, d = this;
			if (!this.hasAccess() || !this.activeAddOn || !this.activeAddOn.settings.address) return a(!0);
			c =
				this.addOnList.findProperty("id", "whitelabel");
			socketConnector.removeForwarder(this.activeProperty.id, function (b, e) {
				if (b) return a(!0);
				e.success && (c.set("settings.address", null), c.set("settings.candidate", null));
				d.openItem("whitelabel");
				a()
			})
		}, getHiredAgentContent: function (a) {
			var c = this, d = 0, b = function () {
				d++;
				3 === d && a()
			};
			if (!this.hasAccess() || !this.activeAddOn) return a(!0);
			socketConnector.getHiredAgentContent(this.activeProperty.id, function (a, d) {
				d && d.hiredAgent && (c.activeAddOn.settings.set("business",
					d.hiredAgent.business ? Ember.Object.create(d.hiredAgent.business) : null), c.activeAddOn.settings.set("offering", d.hiredAgent.offering), c.activeAddOn.settings.set("culture", d.hiredAgent.culture), c.activeAddOn.settings.set("faqs", []), c.activeAddOn.settings.set("emergency", []), c.activeAddOn.settings.set("objectives", d.hiredAgent.objectives || []), c.activeAddOn.settings.set("reputation", []), c.activeAddOn.settings.set("hiredContent", Ember.Object.create(d.hiredAgent)), d.hiredAgent.faqs ? d.hiredAgent.faqs.forEach(function (a) {
					a.id =
						"faq-" + (new Date).getTime();
					a.qId = "faqq-" + (new Date).getTime();
					a.aId = "faqa-" + (new Date).getTime();
					a.canDelete = !0;
					c.activeAddOn.settings.faqs.pushObject(Ember.Object.create(a))
				}) : (c.activeAddOn.settings.faqs.pushObject(Ember.Object.create({
					id: "faq-" + (new Date).getTime(),
					qId: "faqq-" + (new Date).getTime(),
					aId: "faqa-" + (new Date).getTime(),
					canDelete: !0
				})), c.activeAddOn.settings.faqs.pushObject(Ember.Object.create({
					id: "faq-" + (new Date).getTime(),
					qId: "faqq-" + (new Date).getTime(),
					aId: "faqa-" + (new Date).getTime(),
					canDelete: !0
				}))), 1 === c.activeAddOn.settings.faqs.length && c.activeAddOn.settings.faqs[0].set("canDelete", !1), d.hiredAgent.emergency ? d.hiredAgent.emergency.forEach(function (a) {
					a.id = "econtact-" + (new Date).getTime();
					a.nId = "econtactN-" + (new Date).getTime();
					a.eId = "econtactE-" + (new Date).getTime();
					a.pId = "pcontactE-" + (new Date).getTime();
					a.canDelete = !0;
					c.activeAddOn.settings.emergency.pushObject(Ember.Object.create(a))
				}) : c.activeAddOn.settings.emergency.pushObject(Ember.Object.create({
					id: "econtact-" + (new Date).getTime(),
					nId: "econtactN-" + (new Date).getTime(),
					eId: "econtactE-" + (new Date).getTime(),
					pId: "pcontactE-" + (new Date).getTime(),
					canDelete: !1
				})), 1 === c.activeAddOn.settings.emergency.length && c.activeAddOn.settings.emergency[0].set("canDelete", !1), d.hiredAgent.reputation ? d.hiredAgent.reputation.forEach(function (a, b) {
					a.id = "rep-" + (new Date).getTime() + b;
					a.qId = "repq-" + (new Date).getTime() + b;
					a.aId = "repa-" + (new Date).getTime() + b;
					a.canDelete = !0;
					c.activeAddOn.settings.reputation.pushObject(Ember.Object.create(a))
				}) : (c.activeAddOn.settings.reputation.pushObject(Ember.Object.create({
					id: "rep-" +
					(new Date).getTime() + 0,
					qId: "repq-" + (new Date).getTime() + 0,
					aId: "repa-" + (new Date).getTime() + 0,
					canDelete: !0
				})), c.activeAddOn.settings.reputation.pushObject(Ember.Object.create({
					id: "rep-" + (new Date).getTime() + 1,
					qId: "repq-" + (new Date).getTime() + 1,
					aId: "repa-" + (new Date).getTime() + 1,
					canDelete: !0
				}))), 1 === c.activeAddOn.settings.reputation.length && c.activeAddOn.settings.reputation[0].set("canDelete", !1), c.activeAddOn.settings.set("canAddFAQ", 50 > c.activeAddOn.settings.faqs.length), c.activeAddOn.settings.set("canAddEContact",
					3 > c.activeAddOn.settings.emergency.length), c.activeAddOn.settings.set("canAddReputation", 10 > c.activeAddOn.settings.faqs.length), c.activeAddOn.settings.set("isWizardSetup", d.hiredAgent.business && d.hiredAgent.offering && d.hiredAgent.culture && d.hiredAgent.faqs && d.hiredAgent.emergency && d.hiredAgent.objectives && d.hiredAgent.reputation), c.activeAddOn.settings.set("isShortcutsSetup", Tawk.shortcutsController.hasShortcuts(c.activeProperty.id)));
				b()
			});
			socketConnector.getAlert(this.activeProperty.id, function (a,
			                                                           d) {
				!a && d.alertv && c.activeAddOn.settings.set("isAlertSetup", !0);
				b()
			});
			socketConnector.getKBList(this.activeProperty.id, {
				query: void 0,
				status: void 0,
				size: 1,
				category: void 0
			}, function (a, d) {
				!a && d.hits.length && c.activeAddOn.settings.set("isKBSetup", !0);
				b()
			})
		}, extractLiveAnsweringScheduler: function (a, c) {
			var d = [{day: 0, time: []}, {day: 1, time: []}, {day: 2, time: []}, {day: 3, time: []}, {
				day: 4,
				time: []
			}, {day: 5, time: []}, {day: 6, time: []}];
			c.settings.set("isSchedulerSetup", !1);
			a && (c.settings.fulltime && !a.schedule ? (c.settings.set("isSchedulerSetup",
				!0), d = [{day: 0, time: [{start: 0, end: 1440}]}, {day: 1, time: [{start: 0, end: 1440}]}, {
				day: 2,
				time: [{start: 0, end: 1440}]
			}, {day: 3, time: [{start: 0, end: 1440}]}, {day: 4, time: [{start: 0, end: 1440}]}, {
				day: 5,
				time: [{start: 0, end: 1440}]
			}, {day: 6, time: [{start: 0, end: 1440}]}], c.settings.setProperties({
				isSchedulerSetup: !0,
				city: "Royal Borough of Greenwich, United Kingdom",
				lat: "51.483462",
				lng: "0.0586198",
				placeId: "ChIJJc-4yymo2EcRwqZo5HwjGEk"
			})) : a.schedule && a.schedule.length && (a.schedule.forEach(function (a) {
				d.findProperty("day", a.day).time.push({
					start: a.start,
					end: a.end
				})
			}), c.settings.set("isSchedulerSetup", !0)));
			c.settings.set("scheduler", d)
		}, saveHiredAgentContent: function (a, c) {
			var d = this;
			if (!this.hasAccess() || !this.activeAddOn) return c(!0);
			socketConnector.saveHiredAgentContent(this.activeProperty.id, a, function (b) {
				if (b) return c(!0);
				a.business && d.activeAddOn.settings.set("business", Ember.Object.create(a.business));
				a.offering && d.activeAddOn.settings.set("offering", a.offering);
				a.culture && d.activeAddOn.settings.set("culture", a.culture);
				a.objectives && d.activeAddOn.settings.set("objectives",
					a.objectives);
				a.faqs && (d.activeAddOn.settings.faqs.clear(), a.faqs.forEach(function (a) {
					a.id = "faq-" + (new Date).getTime();
					a.qId = "faqq-" + (new Date).getTime();
					a.aId = "faqa-" + (new Date).getTime();
					a.canDelete = !0;
					d.activeAddOn.settings.faqs.pushObject(Ember.Object.create(a))
				}), 1 === d.activeAddOn.settings.faqs.length && d.activeAddOn.settings.faqs[0].set("canDelete", !1), d.activeAddOn.settings.set("canAddFAQ", 50 > d.activeAddOn.settings.faqs.length));
				a.emergency && (d.activeAddOn.settings.emergency.clear(), a.emergency.forEach(function (a) {
					a.id =
						"econtact-" + (new Date).getTime();
					a.nId = "econtactN-" + (new Date).getTime();
					a.eId = "econtactE-" + (new Date).getTime();
					a.pId = "pcontactE-" + (new Date).getTime();
					a.canDelete = !0;
					d.activeAddOn.settings.emergency.pushObject(Ember.Object.create(a))
				}), 1 === d.activeAddOn.settings.emergency.length && d.activeAddOn.settings.emergency[0].set("canDelete", !1), d.activeAddOn.settings.set("canAddEContact", 3 > d.activeAddOn.settings.emergency.length));
				a.reputation && (d.activeAddOn.settings.reputation.clear(), a.reputation.forEach(function (a,
				                                                                                           b) {
					a.id = "rep-" + (new Date).getTime() + b;
					a.qId = "repq-" + (new Date).getTime() + b;
					a.aId = "repa-" + (new Date).getTime() + b;
					a.canDelete = !0;
					d.activeAddOn.settings.reputation.pushObject(Ember.Object.create(a))
				}), 1 === d.activeAddOn.settings.reputation.length && d.activeAddOn.settings.reputation[0].set("canDelete", !1), d.activeAddOn.settings.set("canAddReputation", 10 > d.activeAddOn.settings.faqs.length));
				d.activeAddOn.settings.hiredContent.setProperties(a);
				c()
			})
		}, addFAQQuestion: function () {
			this.hasAccess() && (this.activeAddOn &&
				this.activeAddOn.settings && 50 !== this.activeAddOn.settings.faqs.length) && (this.activeAddOn.settings.faqs.pushObject(Ember.Object.create({
				q: "",
				a: "",
				id: "faq-" + (new Date).getTime(),
				qId: "faqq-" + (new Date).getTime(),
				aId: "faqa-" + (new Date).getTime(),
				canDelete: !0
			})), this.activeAddOn.settings.faqs[0].set("canDelete", !0), this.activeAddOn.settings.set("canAddFAQ", 50 > this.activeAddOn.settings.faqs.length))
		}, removeFAQQuestion: function (a) {
			this.hasAccess() && (this.activeAddOn && this.activeAddOn.settings && 0 !== this.activeAddOn.settings.faqs.length) &&
			(a = this.activeAddOn.settings.faqs.findProperty("id", a)) && (this.activeAddOn.settings.faqs.removeObject(a), 1 === this.activeAddOn.settings.faqs.length && this.activeAddOn.settings.faqs[0].set("canDelete", !1), this.activeAddOn.settings.set("canAddFAQ", 50 > this.activeAddOn.settings.faqs.length))
		}, addEmergencyContact: function () {
			this.hasAccess() && (this.activeAddOn && this.activeAddOn.settings && 3 !== this.activeAddOn.settings.emergency.length) && (this.activeAddOn.settings.emergency.pushObject(Ember.Object.create({
				id: "econtact-" +
				(new Date).getTime(),
				nId: "econtactN-" + (new Date).getTime(),
				eId: "econtactE-" + (new Date).getTime(),
				pId: "pcontactE-" + (new Date).getTime(),
				canDelete: !0
			})), this.activeAddOn.settings.emergency[0].set("canDelete", !0), this.activeAddOn.settings.set("canAddEContact", 3 > this.activeAddOn.settings.emergency.length))
		}, removeEmergencyContact: function (a) {
			this.hasAccess() && (this.activeAddOn && this.activeAddOn.settings && 0 !== this.activeAddOn.settings.emergency.length) && (a = this.activeAddOn.settings.emergency.findProperty("id",
				a)) && (this.activeAddOn.settings.emergency.removeObject(a), 1 === this.activeAddOn.settings.emergency.length && this.activeAddOn.settings.emergency[0].set("canDelete", !1), this.activeAddOn.settings.set("canAddEContact", 3 > this.activeAddOn.settings.emergency.length))
		}, addReputationQuestion: function () {
			this.hasAccess() && (this.activeAddOn && this.activeAddOn.settings && 10 !== this.activeAddOn.settings.reputation.length) && (this.activeAddOn.settings.reputation.pushObject(Ember.Object.create({
				q: "", a: "", id: "rep-" + (new Date).getTime(),
				qId: "repq-" + (new Date).getTime(), aId: "repa-" + (new Date).getTime(), canDelete: !0
			})), this.activeAddOn.settings.reputation[0].set("canDelete", !0), this.activeAddOn.settings.set("canAddReputation", 10 > this.activeAddOn.settings.reputation.length))
		}, removeReputationQuestion: function (a) {
			this.hasAccess() && (this.activeAddOn && this.activeAddOn.settings && 0 !== this.activeAddOn.settings.reputation.length) && (a = this.activeAddOn.settings.reputation.findProperty("id", a)) && (this.activeAddOn.settings.reputation.removeObject(a),
			1 === this.activeAddOn.settings.reputation.length && this.activeAddOn.settings.reputation[0].set("canDelete", !1), this.activeAddOn.settings.set("canAddReputation", 10 > this.activeAddOn.settings.reputation.length))
		}, saveLiveAnsweringSettings: function (a, c) {
			var d = {}, b = this;
			if (!this.hasAccess() || !this.activeAddOn) return c(!0);
			this.set("isLoading", !0);
			a ? (d.city = this.activeAddOn.settings.city, d.placeId = this.activeAddOn.settings.placeId, d.enabled = this.activeAddOn.settings.enabled, d.schedule = [], a.forEach(function (a) {
				a.time.forEach(function (b) {
					d.schedule.push({
						day: a.day,
						start: b.startTime, end: b.endTime
					})
				})
			})) : d.enabled = this.activeAddOn.settings.enabled;
			socketConnector.saveLiveAnswerSettings(this.activeProperty.id, d, function (a, d) {
				b.set("isLoading", !1);
				!a && d.schedule && b.extractLiveAnsweringScheduler(d, b.activeAddOn);
				c(a)
			})
		}, saveWebRTCSettings: function (a, c) {
			var d = this;
			if (!this.hasAccess() || !this.activeAddOn) return c(!0);
			this.set("isLoading", !0);
			socketConnector.saveWebRTCSettings(this.activeProperty.id, a, function (b, e) {
				d.set("isLoading", !1);
				if (b) return c(b);
				addOnObj = d.addOnList.findProperty("id",
					"webrtc");
				addOnObj.set("settings.enabled", a.enabled);
				addOnObj.set("settings.video", a.video);
				addOnObj.set("settings.screen", a.screen);
				d.openItem("webrtc");
				return c()
			})
		}
	});
	Tawk.BillingController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null, subscriptionList: null, isLoading: !0, existingCards: [], openProperty: function (a, c) {
			var d = this, b = 0, e = function () {
				b++;
				2 === b && d.set("isLoading", !1)
			};
			this.set("isLoading", !0);
			this.set("activeProperty", a);
			this.set("canUsePaypal", desktopConnector.canUsePaypal());
			this.getLastViews();
			Tawk.userController.getExistingCCCards(!1, e);
			this.getSubscriptionList(e);
			Tawk.routing.titlePath.subviewName = languageParser.translate("admin", "billing");
			Tawk.routing.setTitle()
		}, hasAccess: function () {
			return this.activeProperty && this.activeProperty.isAdmin && this.activeProperty.isSite
		}, getSubscriptionList: function (a) {
			var c = this, d = [], b = 0, e = 0, f = function () {
				e++;
				e === b && (c.set("subscriptionList", d), a())
			};
			if (!this.hasAccess()) return a();
			this.subscriptionList ? this.subscriptionList.clear() :
				this.set("subscriptionList", []);
			socketConnector.getSubscriptions(this.activeProperty.id, function (e, h) {
				if (!e && h.length) b = h.length, h.forEach(function (a) {
					var b;
					if ("FAILED" === a.status) return f();
					b = addOnList[a.addonId];
					if (!b) return f();
					c.createSubscriptionObject(a, function (a) {
						subscriptionObj = Ember.Object.create(a);
						subscriptionObj.setProperties({
							addOnName: b.name,
							addOnShortDescription: b.shortDescription,
							addOnLogo: b.addOnLogo
						});
						d.pushObject(subscriptionObj);
						f()
					})
				}); else return a()
			})
		}, createSubscriptionObject: function (a,
		                                       c) {
			var d;
			c = c || function () {
			};
			a.plan.pricePretify = a.plan.price / a.plan.cycle / 100 + languageParser.translate("admin", "per_month");
			a.plan.subscriptionType = 1 === a.plan.cycle ? languageParser.translate("admin", "monthly_subscription") : languageParser.translate("admin", "yearly_subscription");
			d = {
				id: a.subscriptionId,
				addOnId: a.addonId,
				billingEmailEnabled: !!a.billingEmailEnabled,
				billingEmailAddress: a.billingEmailAddress,
				purchasedDate: moment(a.createdOn).format("DD/MMM/YYYY"),
				nextBillingDate: moment(a.nextBillingDate).format("DD/MMM/YYYY"),
				expiryDate: moment(a.expiresOn).format("DD/MMM/YYYY"),
				plan: a.plan,
				subscribedBy: Tawk.agentsController.getName(a.agentId),
				isAvailable: !0,
				isCanceled: !1,
				isEnabled: !0,
				isSubscribedByMe: a.agentId === Tawk.userController.user.id,
				billingAddress: a.billingAddress ? a.billingAddress : null,
				billingAddressRich: a.billingAddress ? a.billingAddress.replace(/\n/g, "<br/>") : null
			};
			if ("stripe" === a.paymentMethod) {
				var b = a.sourceId.split(":");
				2 === b.length && (d.source = "x-" + b[0], d.paymentMethod = b[1].replace("-", ""))
			} else d.source = a.sourceId,
				d.paymentMethod = "paypal";
			"CANCELED" === a.status && (d.isCanceled = !0, d.isAvailable = !1, d.isEnabled = !1);
			this.getPaymentReceipts(a.addonId, 0, function (a, b) {
				d.hasMore = a;
				d.paymentReceipts = b;
				c(d)
			})
		}, closeView: function () {
			this.set("subscriptionList", null);
			return !0
		}, cancelSubscription: function (a, c) {
			var d = this;
			c = c || function () {
			};
			if (!this.hasAccess()) return c(!0);
			subscription = this.subscriptionList.findProperty("id", a);
			if (!subscription) return c(!0);
			checkAndSetConfirmView(!1, function (b) {
				if (!b) return c(!0);
				socketConnector.cancelSubscription(d.activeProperty.id,
					a, {addonId: subscription.addOnId}, function (a) {
						if (a) return c(!0);
						subscription.set("isCanceled", !0);
						subscription.set("isAvailable", !1);
						subscription.set("expiryDate", subscription.nextBillingDate);
						c()
					})
			}, "Are you sure you want to stop subscribing to the '" + subscription.addOnName + "' add-on?", null, "Cancel Subscription", "Yes, cancel subscription")
		}, getPaymentReceipts: function (a, c, d) {
			var b = !1, e = this;
			if (!this.hasAccess()) return d(!1, []);
			socketConnector.getPayments(this.activeProperty.id, {addonId: a, from: c, size: 7},
				function (a, c) {
					var h = [];
					if (a) return d(b, []);
					7 === c.length && (b = !0, c.pop());
					c.forEach(function (a) {
						a.amountPretify = a.amount / 100;
						a.transactionDate = moment(a.paymentDate).format("DD/MMM/YYYY");
						a.downloadLink = ORIGIN + "/receipts?property=" + e.activeProperty.id + "&payment=" + a.paymentId;
						h.push(a)
					});
					return d(b, h)
				})
		}, updateEmailSettings: function (a, c, d) {
			var b;
			if (!this.hasAccess()) return d(!0);
			b = this.subscriptionList.findProperty("id", a);
			if (!b) return d(!0);
			c.addonId = b.addOnId;
			socketConnector.saveBillingEmail(this.activeProperty.id,
				a, c, function (a, f) {
					if (a) return d(!0);
					b.set("billingEmailEnabled", !!c.billingEmailEnabled);
					c.billingEmailAddress ? b.set("billingEmailAddress", c.billingEmailAddress) : b.set("billingEmailAddress", null);
					d()
				})
		}, changePaymentMethod: function (a, c, d) {
			var b, e = this, f = function (a, c) {
				a ? d(a, c) : socketConnector.getSubscription(e.activeProperty.id, {addonId: b.addOnId}, function (a, c) {
					if (a) return d();
					Array.isArray(c) && e.createSubscriptionObject(c[0], function (a) {
						b.setProperties(a)
					});
					d()
				})
			};
			d = d || function () {
			};
			if (!this.hasAccess()) return d(!0);
			b = this.subscriptionList.findProperty("id", c.subscriptionId);
			if (!b) return d(!0);
			c.addOnId = b.addOnId;
			c.propertyId = this.activeProperty.id;
			c.planId || (c.planId = b.plan.planId);
			c.action = b.isCanceled ? "create" : "modify";
			"cc" === a ? handleCCPayment(c, f) : handlePaypalPayment(c, f)
		}, updateBillingAddress: function (a, c, d) {
			var b;
			if (!this.hasAccess()) return d(!0);
			b = this.subscriptionList.findProperty("id", a);
			if (!b) return d(!0);
			c.addonId = b.addOnId;
			socketConnector.saveBillingAddress(this.activeProperty.id, a, c, function (a, f) {
				if (a) return d(!0);
				c.billingAddress ? (b.set("billingAddressRich", c.billingAddress.replace(/\n/g, "<br/>")), b.set("billingAddress", c.billingAddress)) : (b.set("billingAddress", null), b.set("billingAddressRich", null));
				d()
			})
		}, getAddOnPlans: function (a, c) {
			var d = [], b = this.subscriptionList.findProperty("id", a);
			if (!b) return c(!0);
			socketConnector.getAddOnDetail(this.activeProperty.id, b.addOnId, function (a, f) {
				if (a) return c(!0);
				f.plans.forEach(function (a) {
					a = Ember.Object.create({
						id: a.planId, price: a.price, pricePretify: languageParser.translate("admin",
							a.planId), stripeId: a.stripeId, cycle: a.cycle, selected: a.planId === b.plan.planId
					});
					d.pushObject(a)
				});
				b.set("plans", d.sortBy("price").reverse());
				c()
			})
		}
	});
	Tawk.TabsController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		tabList: null, previewList: null, canAddTabs: !0, previewImages: {
			chat_details: GLOBAL_STATIC_URL + "/images/tab-info.png",
			knowledge_base: GLOBAL_STATIC_URL + "/images/tab-kb.png",
			shortcuts: GLOBAL_STATIC_URL + "/images/tab-shortcut.png",
			history: GLOBAL_STATIC_URL + "/images/tab-history.png",
			shopify: GLOBAL_STATIC_URL +
			"/images/tab-shopify.png"
		}, newTab: null, openProperty: function (a, c) {
			var d = this, b = [];
			this.set("isLoading", !0);
			this.set("activeProperty", a);
			this.set("tabList", []);
			this.set("previewList", []);
			this.getLastViews();
			Tawk.routing.titlePath.subviewName = "Tabs";
			Tawk.routing.setTitle();
			socketConnector.getPropertyTabSettings(a.id, function (a, c) {
				!a && (c && c.tabs) && (c.tabs.forEach(function (a) {
					var c;
					a.id = "" + Date.now() + b.length;
					"internal" === a.tabType || "integration" === a.tabType ? (a.isInternal = !0, a.title = languageParser.translate("admin",
						a.label), a.isMenu = !1, a.isURL = !1, a.isText = !1, a.previewImage = d.previewImages[a.label], a.fontClass = tabsIconClass[a.label], a.canDelete = !1, a.isIntegration = "integration" === a.tabType) : (a.isURL = "url" === a.tabType, a.isMenu = "menu" === a.tabType, a.isText = "text" === a.tabType, a.canDelete = !0, a.items = [], "menu" === a.tabType && (a.content.forEach(function (b) {
						var c = Date.now() + "" + a.items.length;
						a.items.push(Ember.Object.create({
							id: Date.now() + "" + a.items.length,
							title: "internal" === b.tabType ? languageParser.translate("admin", b.label) :
								b.label,
							label: b.label,
							enabled: b.enabled,
							isText: "text" === b.tabType,
							isInternal: "internal" === b.tabType,
							isMenu: !1,
							isURL: "url" === b.tabType,
							noMenu: !0,
							content: b.content,
							tabType: b.tabType,
							titleId: "name-" + c,
							urlId: "url-" + c,
							textId: "text-" + c,
							fontClass: tabsIconClass[b.label] || "",
							previewImage: d.previewImages[b.label] || ""
						}))
					}), a.canAddItems = 5 > a.items.length), a.isInternal = !1, a.title = a.label, a.titleId = "name-" + a.id, a.urlId = "url-" + a.id, a.textId = "text-" + a.id);
					c = Ember.Object.create(a);
					b.pushObject(c)
				}), d.tabList.pushObjects(b),
					d.set("canAddTabs", 10 > d.tabList.length), d.set("isLoading", !1))
			})
		}, addTab: function () {
			var a = Ember.Object.create({
				id: "" + Date.now() + this.tabList.length,
				title: "Title",
				enabled: !0,
				isInternal: !1,
				isMenu: !1,
				isURL: !0,
				isText: !1,
				content: "",
				items: [],
				canAddItems: !0,
				tabType: "url",
				canDelete: !0
			});
			a.setProperties({titleId: "name-" + a.id, urlId: "url-" + a.id, textId: "text-" + a.id});
			this.tabList.pushObject(a);
			this.set("newTab", a);
			this.set("canAddTabs", 10 > this.tabList.length)
		}, removeTab: function (a) {
			var c = [];
			(a = this.tabList.findProperty("id",
				a)) && !a.isInternal && (a.items && a.items.length && (a.items.forEach(function (a) {
				a.isInternal && c.push(a)
			}), c.length && this.tabList.pushObjects(c)), this.tabList.removeObject(a), this.set("canAddTabs", 10 > this.tabList.length))
		}, addMenuItem: function (a) {
			var c = this.tabList.findProperty("id", a);
			c && (a = Ember.Object.create({
				id: "" + Date.now() + c.items.length,
				title: "Item",
				type: "",
				enabled: !0,
				isText: !1,
				isInternal: !1,
				isMenu: !1,
				isURL: !0,
				noMenu: !0,
				content: "",
				tabType: "url"
			}), a.setProperties({
				titleId: "name-" + a.id, urlId: "url-" +
				a.id, textId: "text-" + a.id
			}), c.items.length ? (c.items.setEach("canDelete", !0), a.set("canDelete", !0)) : a.set("canDelete", !1), c.items.pushObject(a), c.set("newItem", a), c.set("canAddItems", 5 > c.items.length))
		}, removeMenuItem: function (a, c) {
			var d, b = this.tabList.findProperty("id", c);
			b && ((d = b.items.findProperty("id", a)) && b.items.removeObject(d), b.set("canAddItems", 5 > b.items.length), 1 === b.items.length && b.items[0].set("canDelete", !1))
		}, changeTabType: function (a, c, d) {
			c ? (c = this.tabList.findProperty("id", c), c.items &&
			(c = c.items.findProperty("id", a))) : c = this.tabList.findProperty("id", a);
			c && c.setProperties({tabType: d, isMenu: "menu" === d, isURL: "url" === d, isText: "text" === d})
		}, moveToList: function (a, c, d, b, e) {
			var f = null;
			c = c ? (c = this.tabList.findProperty("id", c)) ? c.items : [] : this.tabList;
			if (a = c.findProperty("id", a)) {
				if (e) {
					if (e = (e = this.tabList.findProperty("id", e)) ? e.items : [], 5 === e.length) return
				} else if (e = this.tabList, 10 === e.length) return;
				c.removeObject(a);
				d ? (nextTab = e.findProperty("id", d)) && (f = e.indexOf(nextTab)) : (prevTab =
					e.findProperty("id", b)) && (f = e.indexOf(prevTab) + 1);
				null === f && (f = e.length);
				e.insertAt(f, a)
			}
		}, saveTabSettings: function (a) {
			var c = [];
			this.activeProperty && (this.activeProperty.id && this.activeProperty.isAdmin) && (this.tabList.forEach(function (a) {
				var b = {tabType: a.tabType, enabled: a.enabled, label: a.isInternal ? a.label : a.title};
				a.isMenu && (b.content = [], a.items.forEach(function (a) {
					b.content.push({
						tabType: a.tabType,
						enabled: a.enabled,
						label: a.isInternal ? a.label : a.title,
						content: a.content
					})
				}));
				if (a.isURL || a.isText) b.content =
					a.content;
				c.push(b)
			}), socketConnector.saveTabSettings(this.activeProperty.id, c, function (c) {
				a(c)
			}))
		}, closeView: function () {
			this.set("tabList", null);
			this.set("previewList", null);
			this.set("newTab", null);
			return !0
		}
	});
	Tawk.AlertsController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null, isLoading: !0, openProperty: function (a, c) {
			var d = this;
			this.set("activeProperty", a);
			this.getLastViews();
			socketConnector.getAlert(this.activeProperty.id, function (a, c) {
				a || (d.set("alert", c.alert), d.set("alertV",
					c.alertV))
			});
			Tawk.routing.titlePath.subviewName = languageParser.translate("admin", "alerts");
			Tawk.routing.setTitle()
		}, closeView: function () {
			this.set("alert", null);
			this.set("alertV", null);
			return !0
		}, saveAlert: function (a, c) {
			var d = this;
			c = c || function () {
			};
			if (!this.activeProperty) return c(!0);
			this.set("isAdding", !0);
			socketConnector.saveAlert(this.activeProperty.id, {alert: a}, function (b, e) {
				if (b) return d.set("isAdding", !1), c(b);
				d.set("alert", a);
				d.set("alertV", e.alertV);
				d.set("isAdding", !1);
				return c(null)
			})
		}, hasUpdate: function () {
			!this.activeProperty ||
			(this.isAdding || !Tawk.webProperties.updateAlertInView || Tawk.webProperties.updateAlertInView.propertyId !== this.activeProperty.id || Tawk.webProperties.updateAlertInView.alertVersion < this.alertV) || (this.set("alert", Tawk.webProperties.updateAlertInView.alertContent), this.set("alertV", Tawk.webProperties.updateAlertInView.alertVersion))
		}.observes("Tawk.webProperties.updateAlertInView", "isAdding")
	});
	Tawk.KnowledgebaseController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null,
		knowledgebaseList: null,
		activeKnowledgebase: null,
		pagedList: null,
		kbCategories: [],
		autoSavedDraft: null,
		loadingError: null,
		openProperty: function (a, c) {
			var d, b = this, e = Tawk.routing.getPath();
			this.set("isLoading", !0);
			this.set("activeProperty", a);
			this.set("pagedList", Tawk.PagingListModel.create({perpage: c}));
			this.set("queryData", {query: void 0, status: void 0, size: c, category: void 0});
			this.pagedList.startList();
			this.getLastViews();
			Tawk.routing.titlePath.subviewName = languageParser.translate("header", "knowledgebase");
			Tawk.routing.setTitle();
			d = function () {
				e.itemId ? b.openItem(e.itemId) : b.lastViews && ("knowledgebase" === b.lastViews.subView && b.lastViews.itemId) && b.openItem(b.lastViews.itemId)
			};
			this.kbCategories.clear();
			Tawk.webProperties.loadKBCategory(this.activeProperty.id, function (a, c) {
				a || b.kbCategories.pushObjects(c);
				b.loadList(d)
			})
		},
		resetCurrentList: function () {
			this.activeProperty && this.pagedList && this.pagedList.startList()
		},
		loadList: function (a) {
			var c = this, d = [];
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			this.set("isLoading",
				!0);
			this.set("queryData.from", this.pagedList.currentHead);
			socketConnector.getKBList(this.activeProperty.id, this.queryData, function (b, e) {
				c.set("isLoading", !1);
				if (b) return c.set("loadingError", !0), a(!0);
				e.hits.forEach(function (a) {
					var b, e = Ember.Object.create({
						id: a.contentId,
						categoryId: a.categories[0],
						createdOnStr: moment(a.createdOn).format("DD/MMM/YYYY"),
						snippet: a.snippet,
						title: a.title
					});
					a.categories && a.categories.length && (b = c.kbCategories.findProperty("id", a.categories[0]));
					b && !b.isDeleted ? e.set("categoryName",
						b.name) : e.set("categoryName", "Uncategorized");
					d.pushObject(e)
				});
				c.pagedList.setList(d);
				c.pagedList.setTotal(e.total);
				c.set("isLoading", !1);
				c.set("loadingError", !1);
				a()
			})
		},
		loadNextList: function (a) {
			a = a || function () {
			};
			if (!this.activeProperty || this.pagedList.isLastPage()) return a(null, !1);
			this.pagedList.nextList();
			this.loadList(a)
		},
		openItem: function (a, c) {
			var d, b = this;
			c = c || function () {
			};
			if (!this.activeProperty) return c();
			this.pagedList.currentData.setEach("isMarked", !1);
			d = a ? this.pagedList.getItem(a) : Ember.Object.create({content: ""});
			if (!d) return Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.activeProperty.id,
				subView: "knowledgebase",
				itemId: null,
				widgetId: null
			}), c();
			if (a && !d.content) socketConnector.getKBContent(this.activeProperty.id, d.id, function (a, f) {
				if (a) return c();
				d.set("content", f.content);
				d.set("status", f.status);
				b.set("activeKnowledgebase", d);
				b.saveLastSubView({itemId: d.id});
				Tawk.routing.titlePath.itemName = d.title;
				Tawk.routing.changeRoute({
					view: "admin", propertyId: b.activeProperty.id, subView: "knowledgebase", itemId: d.id ||
					null, widgetId: null
				});
				Tawk.routing.setTitle();
				return c()
			}); else return this.set("activeKnowledgebase", d), d.id ? (this.saveLastSubView({itemId: d.id}), Tawk.routing.titlePath.itemName = d.title) : (this.saveLastSubView({itemId: null}), Tawk.routing.titlePath.itemName = "New Content"), Tawk.routing.changeRoute({
				view: "admin",
				propertyId: b.activeProperty.id,
				subView: "knowledgebase",
				itemId: d.id || null,
				widgetId: null
			}), Tawk.routing.setTitle(), c()
		},
		closeView: function () {
			if (this.activeKnowledgebase) return this.closeItem(),
				!1;
			this.resetData();
			return !0
		},
		closeItem: function () {
			this.set("activeKnowledgebase", null)
		},
		resetData: function () {
			this.set("activeKnowledgebase", null);
			this.set("pagedList", null);
			this.set("queryData", null);
			this.kbCategories.clear()
		},
		saveKBContent: function (a, c) {
			var d, b, e, f, g = {}, h = this;
			this.activeProperty && this.activeProperty.isAdmin && (this.activeKnowledgebase.id && (e = this.activeKnowledgebase.id, f = this.pagedList.getItem(e)), d = socketConnector.saveKB.bind(socketConnector), b = function (b, d) {
				if (b) return b.message &&
				"updating" === b.message ? c(!0, "Unable to process your request. The service is being updated. Please try again in 5 minutes.") : c(!0, "Unable to save content");
				f ? (f.setProperties({
					categoryId: a.categoryId,
					categoryName: a.categoryId ? h.kbCategories.findProperty("id", a.categoryId).name : null,
					content: g.content,
					title: g.title
				}), h.autoSavedDraft = null, c()) : (h.pagedList.startList(), h.loadList(function (a) {
					a ? (h.autoSavedDraft = null, c(x)) : (h.openItem(d.contentId), h.autoSavedDraft = d.contentId, c())
				}))
			}, g.categories = a.isAutoSaved ?
				a.categoryId ? [a.categoryId] : [] : [a.categoryId], g.title = a.title, g.content = a.content, g.status = a.status, a.categoryId || a.isAutoSaved ? d(this.activeProperty.id, e, g, b) : this.addCategory(a.newCategory, function (f, l) {
				f ? c(f, l) : (g.categories = [l], a.categoryId = l, d(h.activeProperty.id, e, g, b))
			}))
		},
		addCategory: function (a, c) {
			var d = [], b = !1, e = this;
			if (this.activeProperty && this.activeProperty.isAdmin) {
				this.kbCategories.every(function (c) {
					return c.name.toLowerCase() === a.toLowerCase() && !1 === c.isDeleted ? (b = !0, !1) : !0
				});
				if (b) return c(!0,
					"Duplicate category is not allowed.");
				socketConnector.addKBCategory(this.activeProperty.id, {name: a}, function (b, g) {
					b ? c(b, "Unable to add category") : (d = e.kbCategories.toArray(), d.pushObject(Ember.Object.create({
						id: g.categoryId,
						isDeleted: !1,
						name: a
					})), e.kbCategories.clear(), e.kbCategories.pushObjects(sortList(d, "name")), c(null, g.categoryId))
				})
			}
		},
		updateCategory: function (a, c, d) {
			var b = this, e, f;
			if (!this.activeProperty || !this.activeProperty.isAdmin) return d(!0, "You do not have permission to perform this action.");
			f = this.kbCategories.findProperty("id", a);
			if (!f) return d(!0, "Invalid category selected.");
			this.set("isLoading", !1);
			socketConnector.updateKBCategory(this.activeProperty.id, a, {name: c}, function (a, h) {
				b.set("isLoading", !1);
				a ? d(a, "Unable to edit category") : (f.set("name", c), e = b.kbCategories.toArray(), b.kbCategories.clear(), b.kbCategories.pushObjects(sortList(e, "name")), d(null))
			})
		},
		deleteCategory: function (a, c) {
			var d = this, b;
			if (!this.activeProperty || !this.activeProperty.isAdmin) return c(!0, "You do not have permission to perform this action.");
			b = this.kbCategories.findProperty("id", a);
			if (!b) return c(!0, "Invalid category selected.");
			socketConnector.deleteKBCategory(this.activeProperty.id, a, function (a) {
				a ? c(!0) : (d.kbCategories.removeObject(b), c())
			})
		},
		filteredCategoryList: function () {
			var a = this;
			return this.categorySearchText ? this.kbCategories.filter(function (c) {
				return c.isDeleted ? !1 : -1 !== c.name.toLowerCase().indexOf(a.categorySearchText) ? !0 : !1
			}) : this.kbCategories.filterProperty("isDeleted", !1)
		}.property("kbCategories.@each.isDeleted", "categorySearchText"),
		deleteSingle: function (a) {
			var c = this;
			if (!this.activeProperty || !this.activeKnowledgebase || !this.activeProperty.isAdmin) return a(!0);
			this.deleteContent(this.activeKnowledgebase.id, function (d) {
				if (d) return a(d);
				c.set("activeKnowledgebase", null);
				a()
			})
		},
		deleteContent: function (a, c) {
			var d, b = this;
			if (!this.activeProperty || !this.activeProperty.isAdmin || !this.pagedList) return c(!0);
			d = this.pagedList.getItem(a);
			if (!d) return c(!0);
			this.set("isLoading", !0);
			socketConnector.deleteKBContent(this.activeProperty.id, a,
				function (a) {
					b.set("isLoading", !1);
					if (a) return a.message && "updating" === a.message ? c(!0, "Unable to process your request. The service is being updated. Please try again in 5 minutes.") : c(a);
					b.pagedList.removeItem(d);
					c()
				})
		},
		searchList: function (a, c) {
			if (!this.activeProperty) return c(!0);
			this.set("queryData", a);
			this.set("activeKnowledgebase", null);
			this.resetCurrentList();
			this.loadList(c)
		}
	});
	var addOnList = {
		whitelabel: {
			id: "whitelabel",
			name: languageParser.translate("admin", "rebrand_main_title"),
			shortDescription: languageParser.translate("admin",
				"rebrand_shortDescription"),
			previewImage: GLOBAL_STATIC_URL + "/images/rebrand-main.png",
			isAvailable: !0,
			addOnLogo: GLOBAL_STATIC_URL + "/images/rebrand-logo.png",
			isWhitelabel: !0
		},
		"live-answering": {
			id: "live-answering",
			name: languageParser.translate("admin", "liveAnswer_main_title"),
			shortDescription: languageParser.translate("admin", "liveAnswer_shortDescription", {
				strongStart: "<b>",
				strongEnd: "</b>"
			}),
			previewImage: GLOBAL_STATIC_URL + "/images/hireagent-main.png",
			isAvailable: !0,
			addOnLogo: GLOBAL_STATIC_URL + "/images/hireagent-logo.png",
			betaCodeLink: "https://www.tawk.to/hire-chat-agents-1hr/",
			oldBetaCode: ["la-KuB9uMtrhM", "la-cQDrvaRvdj", "la-cByzu1WmEW"],
			betaCode: "1408195zep",
			checkTerm: !0,
			needBetaCode: !0,
			isLiveAnswering: !0
		},
		webrtc: {
			id: "webrtc",
			name: languageParser.translate("admin", "webrtc_title"),
			shortDescription: languageParser.translate("header", "notification_video_screensharing_description"),
			previewImage: GLOBAL_STATIC_URL + "/images/video-chat-main.png",
			isAvailable: !0,
			addOnLogo: GLOBAL_STATIC_URL + "/images/video-chat-logo.png",
			betaCode: "wc-BKDEa119pd",
			needBetaCode: !1,
			betaCodeLink: "https://www.tawk.to/updates/join-the-video-chat-beta/"
		},
		translation: {
			id: "translation",
			name: languageParser.translate("admin", "translation_main_title"),
			shortDescription: languageParser.translate("admin", "translation_shortDescription"),
			previewImage: GLOBAL_STATIC_URL + "/images/translation-main.png",
			isAvailable: !1
		},
		shoppingCart: {
			id: "shoppingCart",
			name: languageParser.translate("admin", "shoppingCart_main_title"),
			shortDescription: languageParser.translate("admin", "shoppingCart_shortDescription"),
			previewImage: GLOBAL_STATIC_URL + "/images/shopping-c-main.png",
			isAvailable: !1
		},
		inChatPayment: {
			id: "inChatPayment",
			name: languageParser.translate("admin", "inChatPayment_main_title"),
			shortDescription: languageParser.translate("admin", "inChatPayment_shortDescription"),
			previewImage: GLOBAL_STATIC_URL + "/images/in-chat-main.png",
			isAvailable: !1
		},
		smsIntegration: {
			id: "smsIntegration",
			name: languageParser.translate("admin", "smsIntegration_main_title"),
			shortDescription: languageParser.translate("admin", "smsIntegration_shortDescription"),
			previewImage: GLOBAL_STATIC_URL + "/images/sms-main.png",
			isAvailable: !1
		}
	};
	Tawk.PropertiesController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		activeProperty: null,
		siteList: null,
		pageList: null,
		emailSettings: null,
		isLoading: !1,
		limit: 16,
		previousPropertyName: null,
		isReloadingList: !1,
		requestProperty: !1,
		requestWidget: !1,
		subViews: "settings members shortcuts triggers ban-list department mail-settings addon-store billing tabs alerts knowledgebase".split(" "),
		widgetSubViews: ["widget-settings", "widget-appearance",
			"widget-content", "widget-domains", "widget-scheduler"],
		init: function () {
			this.set("siteList", []);
			this.set("pageList", []);
			this.set("agentsController", Tawk.AgentsController.create());
			this.set("widgetsController", Tawk.WidgetsController.create());
			this.set("shortcutsController", Tawk.shortcutsController);
			this.set("triggersController", Tawk.TriggersController.create());
			this.set("banController", Tawk.BanController.create());
			this.set("departmentController", Tawk.DepartmentsController.create());
			this.set("pageContentController",
				Tawk.PageContentController.create());
			this.set("addOnsController", Tawk.AddOnsController.create());
			this.set("billingController", Tawk.BillingController.create());
			this.set("tabsController", Tawk.TabsController.create());
			this.set("alertsController", Tawk.AlertsController.create());
			this.set("knowledgebaseController", Tawk.KnowledgebaseController.create())
		},
		saveLastView: function (a) {
			var c = this.lastViews;
			this.activeProperty && this.activeProperty.id ? (c.propertyId = this.activeProperty.id, c.type = this.activeProperty.propertyType,
			a && void 0 !== a && (c.subView = null, c.itemId = null, "site" === this.activeProperty.propertyType ? c.widgetId = "default" : "page" === this.activeProperty.propertyType && (c.widgetId = "page")), c.view = "admin", this.set("lastViews", c), main.updateStorageSettings("admin-view", JSON.stringify(c))) : (this.set("lastViews", {}), main.updateStorageSettings("admin-view", null))
		},
		noProperties: function () {
			return 0 === this.siteList.length && 0 === this.pageList.length
		}.property("siteList.length", "pageList.length"),
		hasMoreProperties: function () {
			return 1 <
				this.siteList.length + this.pageList.length
		}.property("siteList.length", "pageList.length"),
		loadList: function () {
			var a = [], c = [];
			this.siteList.clear();
			this.pageList.clear();
			Tawk.webProperties.sites.forEach(function (c) {
				var b = Tawk.PropertyModel.create();
				b.initialize(c, !0);
				a.pushObject(b)
			});
			Tawk.webProperties.pages.forEach(function (a) {
				var b;
				"profile" !== a.type && (b = Tawk.PropertyModel.create(), b.initialize(a, !1), c.pushObject(b))
			});
			this.siteList.pushObjects(sortList(a, "name"));
			this.pageList.pushObjects(sortList(c,
				"name"))
		},
		reorderList: function () {
			var a, c, d = !1;
			if (Tawk.webProperties.reorderList && (Tawk.webProperties.updatedData && "propertyName" === Tawk.webProperties.updatedData.type) && (c = "page" === Tawk.webProperties.updatedData.propertyType ? "pageList" : "siteList", a = this[c].findProperty("id", Tawk.webProperties.updatedData.id))) {
				this[c].removeObject(a);
				a.set("name", decodeStr(Tawk.webProperties.updatedData.name));
				for (var b = 0; b < this[c].length; b++) if (this[c].objectAt(b).name.toLowerCase() > a.name.toLowerCase()) {
					this[c].insertAt(b,
						a);
					d = !0;
					break
				}
				d || this[c].pushObject(a)
			}
		}.observes("Tawk.webProperties.reorderList"),
		intializeView: function (a) {
			a = a || function () {
			};
			this.set("activeProperty", null);
			this.loadList();
			this.reloadPath(a)
		},
		reloadPath: function (a) {
			var c, d = null, b = Tawk.routing.getPath();
			a = a || function () {
			};
			this.getLastViews();
			if ("new-property" === b.subView) this.openProperty(null, d, a, !1); else {
				!b.propertyId || this.activeProperty && this.activeProperty.id === c || (c = b.propertyId);
				if (b.subView) {
					if (!c) {
						if (0 === this.siteList.length && "addon-store" ===
							b.subView) return a();
						-1 !== this.widgetSubViews.indexOf(b.subView) && this.set("requestWidget", !0);
						if (1 === this.siteList.length && 0 === this.pageList.length) c = this.siteList[0].id; else if (1 === this.pageList.length && 0 === this.siteList.length) c = this.pageList[0].id; else return this.set("requestProperty", !0), this.set("isLoading", !0), a()
					}
					this.lastViews.subView = this.siteList.length || this.pageList.length ? b.subView : null
				}
				this.set("requestProperty", !1);
				this.set("requestWidget", !1);
				this.set("isLoading", !1);
				this.set("subView",
					this.lastViews.subView);
				this.lastViews.itemId = b.itemId || null;
				this.lastViews.widgetId = b.widgetId || this.lastViews.widgetId;
				if (this.activeProperty && b.propertyId === this.activeProperty.id) return a();
				c || (this.lastViews && this.lastViews.propertyId && ("site" === this.lastViews.type && this.siteList.findProperty("id", this.lastViews.propertyId) || "page" === this.lastViews.type && this.pageList.findProperty("id", this.lastViews.propertyId)) ? c = this.lastViews.propertyId : this.siteList.length ? (c = this.siteList[0].id, d = "site") :
					this.pageList.length && (c = this.pageList[0].id, d = "page"));
				c ? (this.lastViews.propertyId !== c && (this.lastViews.widgetId = "default"), this.openProperty(c, d, a, !1)) : (this.saveLastView(!0), a())
			}
		},
		openProperty: function (a, c, d, b) {
			var e, f = this;
			d = d || function () {
			};
			Tawk.routing.titlePath.subviewName = null;
			Tawk.routing.titlePath.itemName = null;
			Tawk.routing.titlePath.widgetName = null;
			if (!a) return e = Tawk.PropertyModel.create(), this.set("activeProperty", e), f.activeProperty.set("isLoaded", !0), Tawk.routing.titlePath.propertyName =
				languageParser.translate("admin", "create_property"), Tawk.routing.setTitle(), d();
			(e = null === c ? this.siteList.findProperty("id", a) || this.pageList.findProperty("id", a) : "site" === c ? this.siteList.findProperty("id", a) : this.pageList.findProperty("id", a)) ? (this.lastViews.widgetId = e.isSite ? this.lastViews.widgetId && "page" === this.lastViews.widgetId ? "default" : this.lastViews.widgetId : "page", this.activeProperty && this.activeProperty.set("isSelected", !1), this.set("activeProperty", e), this.activeProperty.set("isSelected",
				!0), this.set("requestProperty", !1), this.set("requestWidget", !1), Tawk.routing.titlePath.propertyName = this.activeProperty.name, Tawk.routing.setTitle(), e.isAdmin ? (this.set("isLoading", !0), Tawk.webProperties.getPropertyInformation(a, function (a, c) {
				if (a) return d(a);
				e.loadSettings(c);
				f.set("emailSettings", e.emailSettings.copy());
				f.saveLastView(b);
				widgetId = f.lastViews ? f.lastViews.widgetId : null;
				f.widgetsController.openProperty(e, widgetId);
				f.activeProperty.set("isLoaded", !0);
				f.set("isLoading", !1);
				e.isSite ||
				f.openPage();
				d()
			})) : (this.lastViews && "addon-store" !== this.lastViews.subView && "knowledgebase" !== this.lastViews.subView && "ban-list" !== this.lastViews.subView && "shortcuts" !== this.lastViews.subView ? this.saveLastView(!0) : this.saveLastView(), this.activeProperty.set("isLoaded", !0), d())) : this.set("requestProperty", !0)
		},
		openAgentList: function (a) {
			this.activeProperty && (a = a || this.limit, this.agentsController.openProperty(this.activeProperty, a))
		},
		openDepartmentList: function (a) {
			this.activeProperty && (a = a || this.limit,
				this.departmentController.openProperty(this.activeProperty, a))
		},
		openShortcutsList: function (a) {
			this.activeProperty && (a = a || this.limit, this.shortcutsController.openProperty(this.activeProperty, a))
		},
		openTriggersList: function (a) {
			this.activeProperty && (a = a || this.limit, this.triggersController.openProperty(this.activeProperty, a))
		},
		openBanList: function (a) {
			this.activeProperty && (a = a || this.limit, this.banController.openProperty(this.activeProperty, a))
		},
		openPage: function () {
			this.activeProperty && this.pageContentController.openProperty(this.activeProperty)
		},
		openAddOnsStore: function () {
			this.activeProperty && this.addOnsController.openProperty(this.activeProperty)
		},
		openBilling: function () {
			this.activeProperty && this.billingController.openProperty(this.activeProperty)
		},
		openTabs: function () {
			this.activeProperty && this.tabsController.openProperty(this.activeProperty)
		},
		openAlerts: function () {
			this.activeProperty && this.alertsController.openProperty(this.activeProperty)
		},
		openKnowledgebase: function (a) {
			this.activeProperty && (a = a || this.limit, this.knowledgebaseController.openProperty(this.activeProperty,
				a))
		},
		resetData: function () {
			this.activeProperty && this.activeProperty.id ? this.set("emailSettings", this.activeProperty.emailSettings.copy()) : this.siteList.length ? this.openProperty(this.siteList[0].id, "site") : this.pageList.length && this.openProperty(this.pageList[0].id, "page");
			this.saveLastView()
		},
		closeItem: function () {
			this.set("emailSettings", this.activeProperty.emailSettings ? this.activeProperty.emailSettings.copy() : null);
			this.saveLastView()
		},
		closeView: function () {
			this.activeProperty && this.activeProperty.id &&
			this.emailSettings ? this.closeItem() : this.resetData();
			return !0
		},
		getEmailSettings: function (a) {
			var c = this;
			if (!this.activeProperty) return a(!0);
			a = a || function () {
			};
			socketConnector.getEmailSettings(this.activeProperty.id, function (d, b) {
				if (d) return a(d);
				c.set("emailSettings", b);
				return a()
			})
		},
		saveEmailSettings: function (a, c) {
			if (!this.activeProperty) return c(!0);
			socketConnector.saveEmailSettings(this.activeProperty.id, a, function (a) {
				return a ? c(a) : c()
			})
		},
		saveProperty: function (a, c, d) {
			var b, e = this, f = function (b) {
				b ?
					d(b) : c || e.activeProperty.enabled === a.isEnabled ? d() : a.isEnabled ? e.enableProperty(d) : e.disableProperty(d)
			};
			if (!c && this.activeProperty.id && !this.activeProperty.isAdmin) return d(!0);
			this.set("isLoading", !0);
			c ? b = a.propertyType : (b = this.activeProperty.propertyType, a.pageId = this.activeProperty.id);
			"page" !== b || !c && this.activeProperty.tawkId === a.pageTawkId || (a.tawkId = a.pageTawkId);
			socketConnector["page" === b ? "savePageSettings" : "saveSiteSettings"](a, function (d, h) {
				if (d) return f(d);
				Tawk.webProperties.updatePropertyData({
					pgid: a.pageId ||
					h.pgid || h,
					pgn: encodeStr(a.pageName),
					twid: void 0 !== a.tawkId ? a.tawkId : e.activeProperty.tawkId
				}, !1, function (d) {
					c ? (e.loadList(), e.openProperty(d.id, b, f)) : ("page" === b ? (e.activeProperty.set("tawkId", a.pageTawkId), e.activeProperty.set("settings.categoryId", a.category), e.activeProperty.set("settings.subCategoryId", a.subcategory)) : (e.activeProperty.set("settings.domain", a.domain), e.activeProperty.set("settings.secureJSAPI", !!a.secureJSAPI)), f());
					e.set("isLoading", !1)
				})
			})
		},
		deleteSingle: function (a) {
			var c, d,
				b = this;
			a = a || function () {
			};
			if (!this.activeProperty || !this.activeProperty.id || !this.activeProperty.isAdmin) return a(!0);
			this.activeProperty.isSite ? (c = "DELETE THIS SITE", d = languageParser.translate("generic", "confirm_delete_site", {
				text: c,
				lineBreak: "<br />"
			})) : (c = "DELETE THIS PAGE", d = languageParser.translate("generic", "confirm_delete_page", {
				text: c,
				lineBreak: "<br />"
			}));
			checkAndSetConfirmView(!0, function (c) {
				if (!c) return a(!0);
				socketConnector.removeProperty(b.activeProperty.id, function (c) {
					if (c) return a(c);
					Tawk.webProperties.removeProperty(b.activeProperty.id);
					b.set("activeProperty", null);
					b.saveLastView(!0);
					Tawk.routing.changeRoute({view: "admin"});
					b.intializeView(a)
				})
			}, d, c)
		},
		disableProperty: function (a) {
			var c = this;
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			Tawk.webProperties.disableProperty(this.activeProperty.id, function (d) {
				if (d) return a(d);
				c.activeProperty.set("enabled", !1);
				return a()
			})
		},
		enableProperty: function (a) {
			var c = this;
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			Tawk.webProperties.enableProperty(this.activeProperty.id,
				function (d) {
					if (d) return a(d);
					c.activeProperty.set("enabled", !0);
					return a()
				})
		},
		accountAccessCheck: function () {
			var a = Tawk.webProperties.updatedProperty, c = Tawk.webProperties.updatedData, d = this;
			if (!c || !a || !this.activeProperty || "agent" !== c.type) return !1;
			if ("remove" === c.operation && c.ids === Tawk.userController.user.id) {
				var b = this.activeProperty.name;
				Tawk.webProperties.removeProperty(a.id);
				this.activeProperty.id === a.id ? this.intializeView(function () {
					Tawk.webProperties.set("updatedData", null);
					d.set("previousPropertyName",
						b)
				}) : (this.loadList(), Tawk.webProperties.set("updatedData", null), this.set("propertyListToReset", !0));
				return !0
			}
			return !1
		},
		propertyUpdatedMain: function () {
			var a, c = this, d = Tawk.webProperties.updatedData, b = Tawk.webProperties.updatedProperty;
			b && ((this.siteList || this.pageList) && !this.accountAccessCheck()) && (this.getLastViews(), a = this.get("noProperties"), this.loadList(), this.set("propertyListToReset", !0), a ? this.intializeView() : this.activeProperty && (!b.toBeDelete && this.activeProperty.id === b.id) && (this.set("isUpdating",
				!0), this.openProperty(this.activeProperty.id, this.activeProperty.propertyType, function () {
				d && "department" === d.type && "department" === c.lastViews.subView ? (c.departmentController.propertyUpdated(), c.openDepartmentList(), c.set("isUpdating", !1)) : d && "agent" === d.type && "members" === c.lastViews.subView ? c.agentsController.isUpdating || c.agentsController.isUpdated ? c.agentsController.isUpdated && c.agentsController.set("isUpdated", !1) : (c.agentsController.propertyUpdated(), c.openAgentList(), c.set("isUpdating", !1)) :
					c.set("isUpdating", !1)
			})))
		}.observes("Tawk.webProperties.updatedProperty")
	});
	Tawk.InvitationsController = Ember.Controller.extend({
		invitations: [], initInvitations: function () {
			var a = this;
			socketConnector.getAgentInvites(function (c, d) {
				c ? a.initInvitations() : a.process(d)
			})
		}, loadInvitations: function (a) {
			var c = this;
			this.set("invitations", []);
			a.forEach(function (a) {
				c.invitations.pushObject(Ember.Object.create({
					id: a._id,
					propertyId: a.pgid,
					propertyName: a.pgn,
					inviterName: decodeStr(a.ivan)
				}))
			})
		}, getInvitation: function (a,
		                            c) {
			var d = this;
			socketConnector.getAgentInvite(a, function (b, e) {
				return b ? d.getInvitation(a, c) : c(e)
			})
		}, removeInvitation: function (a) {
			(a = this.invitations.findProperty("id", a)) && this.invitations.removeObject(a)
		}, addInvitation: function (a) {
			var c = this;
			this.invitations.findProperty("id", a.invid) || this.getInvitation(a.invid, function (a) {
				a && c.invitations.pushObject(Ember.Object.create({
					id: a._id,
					propertyId: a.pgid,
					propertyName: a.pgn,
					inviterName: decodeStr(a.ivan)
				}))
			})
		}, acceptInvitation: function (a, c) {
			var d = this, b =
				this.invitations.findProperty("id", a);
			b && socketConnector.acceptInvitation(a, function (a) {
				if (a) return c(!0);
				d.invitations.removeObject(b);
				c()
			})
		}, rejectInvitation: function (a, c) {
			var d = this, b = this.invitations.findProperty("id", a);
			b && socketConnector.rejectInvitation(a, function (a) {
				if (a) return c(!0);
				d.invitations.removeObject(b);
				c()
			})
		}
	});
	Tawk.invitationsController = Tawk.InvitationsController.create();
	Tawk.AliasesController = Ember.Controller.extend({
		activeAlias: null, pagedList: null, loadList: function () {
			var a =
				[];
			this.set("pagedList", Tawk.PagingListModel.create({perpage: 30}));
			this.pagedList.startList();
			Tawk.userController.aliases.forEach(function (c) {
				c = c.copy();
				c.set("displayName", decodeStr(c.displayName));
				c.set("positionTitle", decodeStr(c.positionTitle));
				a.pushObject(c)
			});
			this.pagedList.setTotal(a.length);
			this.pagedList.setList(sortList(a, "displayName"))
		}, toggleDefaultAlias: function (a) {
			this.pagedList.currentData.findProperty("isDefault", !1).set("isMarked", a)
		}, toggleAllMark: function (a) {
			this.pagedList && this.pagedList.currentData.setEach("isMarked",
				a)
		}, toggleMark: function (a, c) {
			var d = this.pagedList.currentData.findProperty("aliasId", a);
			d && d.set("isMarked", c)
		}, deleteSingle: function (a) {
			var c;
			a = a || function () {
			};
			if (!this.activeAlias) return a(!0);
			c = this.pagedList.currentData.findProperty("aliasId", this.activeAlias.aliasId);
			if (!c) return a(!0);
			c.set("isMarked", !0);
			this.bulkDelete(function (d) {
				c.set("isMarked", !1);
				return a(d)
			})
		}, bulkDelete: function (a) {
			var c = this;
			a = a || function () {
			};
			if (!this.pagedList.currentData.length) return a(!0);
			deleteList = this.pagedList.currentData.filterProperty("isMarked",
				!0);
			if (!deleteList.length) return a(!0);
			checkAndSetConfirmView(!1, function (d) {
				if (!d) return a(!0);
				socketConnector.deleteAliases(deleteList.getEach("aliasId"), function (b) {
					if (b) return a(b);
					Tawk.userController.deleteAliases({alsids: deleteList.getEach("aliasId")});
					c.pagedList.currentData.removeObjects(deleteList);
					a()
				})
			})
		}, openItem: function (a) {
			a = a ? this.pagedList.currentData.findProperty("aliasId", a) : Tawk.CopyableModel.create({
				isNew: !0,
				enabled: !0
			});
			a.aliasImage && !a.imagePreview && a.set("imagePreview", GLOBAL_AWS_PI_URL +
				"/" + a.aliasImage + "?v=" + Date.now());
			this.toggleAllMark(!1);
			this.set("activeAlias", a.copy())
		}, uploadPhoto: function (a, c, d) {
			this.set("imageData", {
				file: a,
				cropDimensions: {width: 200, height: 200},
				imageDimensions: {width: 75, height: 79},
				dataType: "file"
			})
		}, applyImage: function (a) {
			this.imageData && this.activeAlias && (this.activeAlias.set("imagePreview", a), this.set("imageData", null))
		}, openCamera: function () {
			this.set("imageData", {
				cropDimensions: {width: 200, height: 200},
				imageDimensions: {width: 75, height: 79},
				dataType: "video"
			})
		},
		removeAliasImage: function () {
			this.activeAlias && (-1 !== this.activeAlias.imagePreview.indexOf("data:image/jpeg;base64") ? this.activeAlias.set("imagePreview", this.activeAlias.aliasImage ? GLOBAL_AWS_PI_URL + "/" + this.activeAlias.aliasImage + "?v=" + Date.now() : null) : (this.activeAlias.set("removeImage", !0), this.activeAlias.set("imagePreview", null)))
		}, saveAlias: function (a, c, d) {
			var b, e = this;
			this.activeAlias && (b = {
				displayName: this.activeAlias.displayName,
				positionTitle: this.activeAlias.positionTitle,
				encodedAliasImage: this.activeAlias.imagePreview &&
				-1 !== this.activeAlias.imagePreview.indexOf("data:image/jpeg;base64") ? this.activeAlias.imagePreview : null,
				isEnabled: !0
			}, this.activeAlias.aliasId && (b.aliasId = this.activeAlias.aliasId, b.isEnabled = this.activeAlias.enabled, b.removeAliasImage = this.activeAlias.removeImage, b.imageFileName = this.activeAlias.aliasImage), null !== c && (b.isEnabled = c), null !== a && (b.isDefaultAlias = a), socketConnector.saveAlias(b, function (a, c) {
				var h, k;
				if (a) return d(a);
				h = e.pagedList.currentData.findProperty("aliasId", c.alsid);
				Tawk.userController.updateAlias({
					alsid: c.alsid,
					dn: c.dn, ai: c.ai ? c.ai : null, en: c.en, pst: c.pst, dals: !!c.dals
				});
				h ? (h.set("displayName", decodeStr(c.dn)), h.set("positionTitle", decodeStr(c.pst)), h.set("enabled", c.en)) : (h = Tawk.CopyableModel.create({
					aliasId: c.alsid,
					displayName: decodeStr(c.dn),
					positionTitle: decodeStr(c.pst),
					enabled: c.en
				}), e.pagedList.currentData.pushObject(h));
				c.ai && (h.set("aliasImage", c.ai), h.set("imagePreview", c.ai ? GLOBAL_AWS_PI_URL + "/" + c.ai + "?v=" + Date.now() : null));
				b.removeAliasImage && (h.set("aliasImage", null), h.set("imagePreview", null));
				c.dals ? (e.pagedList.currentData.setEach("isDefault", !1), h.set("isDefault", !0)) : h.set("isDefault", !1);
				k = sortList(e.pagedList.currentData, "displayName");
				e.pagedList.currentData.clear();
				e.pagedList.setTotal(k.length);
				e.pagedList.setList(k);
				e.set("activeAlias", h.copy());
				return d(null)
			}))
		}, closeView: function () {
			if (this.activeAlias) return this.closeItem(), !1;
			this.resetData();
			return !0
		}, closeItem: function () {
			this.imageData ? this.set("imageData", null) : this.set("activeAlias", null)
		}, resetData: function () {
			this.closeItem()
		},
		saveLastSubView: function () {
		}
	});
	Tawk.WizardController = Ember.Controller.extend({
		siteCreateDone: !1,
		inviteAgentDone: !1,
		site: null,
		decodedSiteName: null,
		invitedList: [],
		isLoading: !1,
		loadData: function () {
			var a = [], c = this, d = 0, b = function () {
				d++;
				3 === d && c.set("isLoading", !1)
			};
			this.set("isLoading", !0);
			this.set("invitedList", []);
			this.set("canUsePaypal", desktopConnector.canUsePaypal());
			Tawk.userController.getExistingCCCards(!1, b);
			Tawk.webProperties.sites.every(function (a) {
				return a.createdInWizard && a.createdBy === Tawk.userController.user.id ?
					(c.set("site", a), c.set("decodedSiteName", decodeStr(c.site.propertyName)), c.set("siteCreateDone", !0), !1) : !0
			});
			this.site ? (socketConnector.getInvitationList({propertyId: this.site.id}, function (d, f) {
				if (d) return b();
				c.set("inviteAgentDone", !0);
				f && f.data && (f.data.forEach(function (b) {
					a.pushObject(Ember.Object.create({
						agentEmail: b.e,
						role: b.rl,
						actualRole: b.rl,
						id: b._id,
						toBeDeleted: !1
					}))
				}), c.set("invitedList", a));
				b()
			}), this.loadWhitelabelData(b)) : this.set("isLoading", !1)
		},
		addInvitation: function () {
			this.invitedList.pushObject(Ember.Object.create({
				agentEmail: "",
				id: "" + Date.now(), toBeDeleted: !1
			}))
		},
		removeInvitation: function (a) {
			(a = this.invitedList.findProperty("id", a)) && (a.agentEmail ? a.set("toBeDeleted", !0) : this.invitedList.removeObject(a))
		},
		invitationChanged: function () {
			0 === this.invitedList.filterProperty("toBeDeleted", !1).length && (this.addInvitation(), this.addInvitation(), this.addInvitation())
		}.observes("invitedList.@each.toBeDeleted"),
		widgetCode: function () {
			return this.site ? inlineWidgetCode.replace("__SITE_ID__", this.site.id).replace("__WIDGET_ID__", "default") :
				""
		}.property("site"),
		saveSite: function (a, c, d) {
			var b = this, e = {domain: c, pageName: a};
			if (this.site) {
				if (e.pageName === this.decodedSiteName && e.domain === this.site.propertyUrl) return d();
				e.pageId = this.site.id
			} else e.createdByWizard = !0, e.languageCode = Tawk.userController.localeCode;
			e.domain || delete e.domain;
			socketConnector.saveSiteSettings(e, function (a, c) {
				if (a) return d(a);
				Tawk.webProperties.updatePropertyData({
					pgid: c && c.pgid || e.pageId,
					pgn: encodeStr(e.pageName)
				}, !0, function (a) {
					b.set("site", a);
					b.set("decodedSiteName",
						decodeStr(b.site.propertyName));
					b.loadWhitelabelData(d)
				})
			})
		},
		inviteAgents: function (a, c) {
			var d = 0, b = [], e = [], f = this, g = this.invitedList.filterProperty("toBeDeleted", !0),
				h = function (a, e, f) {
					d++;
					a && (a = languageParser.translate("admin", "invitation_fail"), e.code ? "InternalServerError" === e.code ? a = languageParser.translate("generic", "internal_server_error") : "UnauthorizedError" === e.code ? a = languageParser.translate("generic", "unauthorized_error") : "InvalidArgument" === e.code ? a = "email" === e.message ? languageParser.translate("form_validation_messages",
						"invalid_email") : "role" === e.message ? languageParser.translate("admin", "invalid_role") : "inviteId" === e.message ? languageParser.translate("admin", "invalid_invitation") : "agentId" === e.message ? languageParser.translate("generic", "invalid_agent") : languageParser.translate("generic", "invalid_property") : "TooManyRequestsError" === e.code && "over-quota" === e.message ? a = languageParser.translate("admin", "overexceeded_pending_invites") : "ConflictError" === e.code && ("modifying_self" === e.message ? a = languageParser.translate("admin",
						"modifying_self") : "has_active_subscriptions" === e.message ? a = languageParser.translate("admin", "agent_has_subscription_error") : "not_member" === e.message && (a = languageParser.translate("admin", "not_member"))) : "existing-member" === e ? a = languageParser.translate("form_validation_messages", "AGENT_ALREADY_EXIST") : "invite-exists" === e ? a = languageParser.translate("form_validation_messages", "AGENT_ALREADY_INVITED") : "send-email-failed" === e && (a = languageParser.translate("admin", "invitation_email_fail")), b.pushObject({
						id: f,
						message: a
					}));
					d === toBeDone && c(b)
				};
			if (!this.site || !this.site.id) return c(!0);
			this.invitedList.forEach(function (b) {
				var c;
				b.agentEmail && (c = a.findProperty("id", b.id)) && (a.removeObject(c), b.agentEmail && (b.role && c.role !== b.actualRole) && e.pushObject({
					id: c.id,
					role: c.role
				}))
			});
			toBeDone = e.length + a.length + g.length;
			if (0 === toBeDone) return c([]);
			g.length && g.forEach(function (a) {
				socketConnector.removeInvitation({propertyId: f.site.id, inviteId: a.id}, function (b) {
					if (b) return h(!0, b, a.id);
					f.invitedList.removeObjects(g);
					h()
				})
			});
			e.length && e.forEach(function (a) {
				socketConnector.editInvitationAccess({
					propertyId: f.site.id,
					inviteId: a.id,
					role: a.role
				}, function (b) {
					if (b) return h(!0, b, a.id);
					f.invitedList.findProperty("id", a.id).set("role", a.role).set("actualRole", a.role);
					h()
				})
			});
			a.length && a.forEach(function (a) {
				socketConnector.inviteAgentByEmail({
					propertyId: f.site.id,
					email: a.email,
					role: a.role
				}, function (b, c) {
					c && (c.warnings && c.warnings.length) && (b = c.warnings[0]);
					if (b) return h(!0, b, a.id);
					f.invitedList.findProperty("id", a.id).setProperties({
						id: c.data.id,
						agentEmail: a.email, role: a.role, actualRole: a.role
					});
					h()
				})
			})
		},
		emailDeveloper: function (a, c) {
			if (!this.site) return c(!0);
			socketConnector.sendInstallInstructions({
				propertyId: this.site.id,
				widgetId: "default",
				recipients: a
			}, function (a) {
				if (a) return c(a);
				c()
			})
		},
		resetData: function () {
			this.set("siteCreateDone", !1);
			this.set("inviteAgentDone", !1);
			this.set("site", null);
			this.set("decodedSiteName", null);
			this.set("invitedList", [])
		},
		loadWhitelabelData: function (a) {
			var c, d, b = this;
			a = a || function () {
			};
			if (!this.site) return a();
			c = Ember.Object.create();
			d = [];
			socketConnector.getAddOnDetail(this.site.id, "whitelabel", function (e, f) {
				if (e) return a(!0);
				f.plans.forEach(function (a) {
					a = Ember.Object.create({
						id: a.planId,
						price: a.price,
						pricePretify: languageParser.translate("admin", a.planId),
						stripeId: a.stripeId,
						cycle: a.cycle
					});
					d.pushObject(a)
				});
				c.set("plans", d.sortBy("price").reverse());
				c.set("settings", Ember.Object.create(f.settings));
				b.set("activeAddOn", c);
				return a()
			})
		},
		saveWhitelabelSettings: function (a, c) {
			socketConnector.saveWhitelabelSettings(this.site.id,
				a, function (a, b) {
					return a ? c(a) : c()
				})
		},
		handlePayment: function (a, c, d) {
			var b = this, e = function (e, g) {
				var h = function () {
					e ? d(e, g) : (ga("send", "event", "Whitelabel Purchase", "first-time-wizard", "Add-on purchased location tracking"), b.activeAddOn.set("isSubscribed", !0), b.activeAddOn.set("subscriptionId", g), d())
				};
				"cc" === a && "new-card" === c.customerId ? Tawk.userController.getExistingCCCards(!0, h.bind(b)) : h()
			};
			d = d || function () {
			};
			c.addOnId = "whitelabel";
			c.propertyId = this.site.id;
			c.subscriptionId = this.activeAddOn.subscriptionId;
			c.action = "create";
			"cc" === a ? handleCCPayment(c, e) : handlePaypalPayment(c, e)
		},
		delaySetup: function (a) {
			socketConnector.doWizardLater(a)
		}
	});
	var listType = {
			ALL: "all",
			MY_TICKETS: "my-tickets",
			SPAM: "spam",
			TRASH: "trash",
			CONTACTS: "contacts",
			ONLY_CHATS: "chats",
			UNASSIGNED_OPEN: "new-conversation"
		}, sortType = {
			CREATE_DESC: "co-new-old",
			CREATE_ASC: "co-old-new",
			UPDATE_DESC: "uo-new-old",
			UPDATE_ASC: "uo-old-new",
			PRIORITY_DESC: "p-high-low",
			PRIORITY_ASC: "p-low-high",
			STATUS_DESC: "st-open-closed",
			STATUS_ASC: "st-closed-open"
		},
		priorityType = {
			1E3: languageParser.translate("conversations", "priority_highest"),
			2E3: languageParser.translate("conversations", "priority_high"),
			3E3: languageParser.translate("conversations", "priority_medium"),
			4E3: languageParser.translate("conversations", "priority_low"),
			5E3: languageParser.translate("conversations", "priority_lowest")
		}, statusType = {
			1E3: languageParser.translate("conversations", "status_open"),
			2E3: languageParser.translate("conversations", "status_awaiting"),
			3E3: languageParser.translate("conversations",
				"status_close")
		};
	Tawk.ConversationsController = Ember.Controller.extend(Tawk.HistoryInterface, {
		propertiesList: [],
		activeProperty: null,
		conversationData: null,
		queryData: null,
		isLoading: !1,
		limit: 20,
		listType: null,
		sortType: null,
		statusType: null,
		isContactsList: !1,
		contactsQuery: null,
		showList: !0,
		autoOpenTicket: null,
		totalOpen: 0,
		hasToReload: !1,
		includeTickets: null,
		includeChats: null,
		draftReplies: null,
		assigneeIds: null,
		lastViews: null,
		ticketHasChanged: !1,
		isTicket: null,
		previousAssignee: "",
		previousStatus: null,
		defaultQuery: {
			assignees: "",
			deleted: !1, from: 0, includeChats: !0, includeTickets: !0, size: 20, sort: "uo-new-old", spam: !1
		},
		isFilter: !1,
		initialize: function () {
			var a = [], c = this;
			this.propertiesList.clear();
			Tawk.webProperties.get("allProperties").forEach(function (d) {
				a.pushObject(Ember.Object.create({
					id: d.id,
					propertyName: d.propertyName,
					isEnabled: d.enabled,
					isAdmin: d.isAdmin,
					isSelected: !1,
					list: Tawk.PagingListModel.create({perpage: c.limit}),
					tabSettings: d.tabSettings
				}))
			});
			a.length && this.propertiesList.pushObjects(sortList(a, "propertyName"));
			this.set("activeProperty",
				null);
			this.set("conversationData", null);
			this.set("contactData", null);
			this.set("isContactsList", !1);
			this.set("sortType", sortType.UPDATE_DESC);
			this.set("statusType", void 0);
			this.set("includeTickets", !0);
			this.set("includeChats", !0);
			this.set("contactsQuery", "");
			this.set("showList", !0);
			this.set("draftReplies", {});
			this.set("assigneeIds", "");
			this.set("queryData", {
				query: void 0,
				assignees: void 0,
				size: this.limit,
				status: void 0,
				tags: void 0,
				startData: void 0,
				endData: void 0,
				sort: void 0,
				messageCount: void 0
			});
			this.set("listenOnNewTranscript",
				function (a) {
					a.isChat = !0;
					c.storeNewConversation(a)
				});
			this.set("ticketListener", function (a) {
				c.displayTicketListener(a)
			});
			socketConnector.socket.on("newVisitorChatTranscript", this.listenOnNewTranscript);
			socketConnector.socket.on("ticketReplyListUpdate", this.ticketListener);
			this.autoOpenTicket && (this.openProperty(this.autoOpenTicket.propertyId), this.changeList(listType.ALL, function (a) {
				a || c.getTicketDetails(c.autoOpenTicket.ticketId, null, !0)
			}));
			lastViews = main.storageSettings["messaging-view"];
			lastDashboardHistoryData =
				main.storageSettings["dashboard-view"];
			lastViews ? (lastViews = JSON.parse(lastViews), this.set("lastViews", lastViews), this.previousStatus = this.lastViews.previousStatus) : this.set("lastViews", {});
			lastDashboardHistoryData ? (lastDashboardHistoryData = JSON.parse(lastDashboardHistoryData), this.set("lastDashboardHistoryData", lastDashboardHistoryData)) : this.set("lastDashboardHistoryData", {})
		},
		reorderList: function () {
			var a, c = !1;
			if (Tawk.webProperties.reorderList && (Tawk.webProperties.updatedData && "propertyName" ===
					Tawk.webProperties.updatedData.type) && (a = this.propertiesList.findProperty("id", Tawk.webProperties.updatedData.id))) {
				this.propertiesList.removeObject(a);
				a.set("propertyName", Tawk.webProperties.updatedData.name);
				for (var d = 0; d < this.propertiesList.length; d++) if (this.propertiesList.objectAt(d).propertyName.toLowerCase() > a.propertyName.toLowerCase()) {
					this.propertiesList.insertAt(d, a);
					c = !0;
					break
				}
				c || this.propertiesList.pushObject(a)
			}
		}.observes("Tawk.webProperties.reorderList"),
		limitChanged: function () {
			var a =
				this;
			this.listType && (!this.isLoading && this.limit) && (this.propertiesList.forEach(function (c) {
				c.list.set("perpage", a.limit)
			}), this.queryData.size = this.limit, "contacts" === this.listType ? this.loadContactsList() : this.reloadList())
		}.observes("this.limit"),
		loadAggregation: function () {
			var a = 0, c = this;
			socketConnector.getAggregation(function (d, b) {
				d || (c.propertiesList.setEach("aggregate", null), Object.keys(b).forEach(function (d) {
					var f = c.propertiesList.findProperty("id", d);
					a += b[d].all;
					f && f.set("aggregate", b[d])
				}),
					c.set("totalOpen", a))
			})
		},
		clearData: function (a) {
			this.clearConversationData(a);
			this.propertiesList.clear();
			this.set("activeProperty", null);
			this.set("queryData", {});
			this.set("autoOpenTicket", null);
			this.set("listType", null);
			this.set("statusType", null);
			this.set("assigneeIds", "")
		},
		openProperty: function (a, c) {
			var d, b, e = !1, f = !1, g = this;
			void 0 === a && (f = !0, this.lastViews.propertyId ? a = this.lastViews.propertyId : (e = !0, a = this.propertiesList[0].id));
			this.lastViews.propertyId !== a && (e = f = !0);
			d = this.lastViews[a];
			(b = this.propertiesList.findProperty("id",
				a)) || (b = this.propertiesList[0]);
			this.activeProperty && this.activeProperty.list.reset();
			d && (e = !1);
			this.activeProperty && this.activeProperty.id === a && (e = f = !0);
			this.propertiesList.setEach("isSelected", !1);
			b.set("isSelected", !0);
			this.set("activeProperty", b);
			c || this.loadAvailableTags();
			e || c || (this.lastViews.draftReplies && this.set("draftReplies", JSON.parse(this.lastViews.draftReplies)), d && void 0 !== d.detailsId && (b = function (a) {
				a && g.set("showList", !0)
			}, this.set("showList", !1), "chat" === d.detailsType ? g.openChatTranscript(d.detailsId,
				null, b) : "ticket" === d.detailsType ? g.getTicketDetails(d.detailsId, null, !1, b) : "contact" === d.detailsType && g.getContactDetails(d.detailsId, null, b)), this.lastViews.isContactsList ? g.loadContactsList() : (void 0 !== this.lastViews.includeTickets && this.set("includeTickets", this.lastViews.includeTickets), void 0 !== this.lastViews.includeChats && this.set("includeChats", this.lastViews.includeChats), void 0 === this.lastViews.statusType ? this.set("statusType", void 0) : this.set("statusType", parseInt(this.lastViews.statusType,
				10)), g.changeList(this.lastViews.listType)));
			f && (e && !c) && (this.changeList(listType.ALL), this.set("conversationData", null), this.set("contactData", null), this.set("showList", !0))
		},
		loadAvailableTags: function () {
			var a = this, c = [];
			this.activeProperty && socketConnector.getTags(this.activeProperty.id, function (d, b) {
				a.activeProperty && (!d && b.tags.length) && (b.tags.forEach(function (a) {
					c.push(decodeStr(a))
				}), a.activeProperty.set("availableTags", c.sort()))
			})
		},
		changeList: function (a, c) {
			c = c || function () {
			};
			a === listType.MY_TICKETS &&
			this.changeAssignee([Tawk.userController.user.id].concat(Tawk.webProperties.attachedDepartments));
			this.listType === listType.MY_TICKETS && this.changeAssignee("0");
			this.set("listType", a);
			this.set("sortType", sortType.UPDATE_DESC);
			this.reloadList(c)
		},
		resetCurrentList: function () {
			var a = this.activeProperty;
			a && a.list.startList()
		},
		loadList: function (a, c) {
			var d = this.activeProperty;
			a = a || function () {
			};
			this.set("isLoading", !0);
			c || this.loadAggregation();
			this.set("isContactsList", !1);
			if (!d) return this.set("isLoading",
				!1), a(!0);
			this.set("queryData.from", d.list.currentHead);
			this.set("queryData.sort", this.sortType);
			this.set("queryData.includeTickets", this.includeTickets);
			this.set("queryData.includeChats", this.includeChats);
			this.set("queryData.assignees", void 0);
			this.set("queryData.spam", !1);
			this.set("queryData.deleted", !1);
			this.set("queryData.status", this.statusType ? [this.statusType] : this.statusType);
			this.set("queryData.assignees", this.assigneeIds);
			d.list.pendingData.clear();
			this.listType === listType.SPAM ? this.set("queryData.spam",
				!0) : this.listType === listType.TRASH && this.set("queryData.deleted", !0);
			this.queryData.from !== this.defaultQuery.from || this.queryData.sort !== this.defaultQuery.sort || this.queryData.includeTickets !== this.defaultQuery.includeTickets || this.queryData.includeChats !== this.defaultQuery.includeChats || this.queryData.assignees !== this.defaultQuery.assignees || this.queryData.spam !== this.defaultQuery.spam || this.queryData.deleted !== this.defaultQuery.deleted || this.queryData.status !== this.defaultQuery.status || this.queryData.assigneeId &&
			"0" !== this.queryData.assigneeId || this.queryData.endDate || this.queryData.startDate || this.queryData.messageCount || this.queryData.query || this.queryData.statusSearch && "0" !== this.queryData.statusSearch || this.queryData.tags ? this.set("isFilter", !0) : (this.set("isFilter", !1), d.forwardingEmail || socketConnector.getPropertyInfo(d.id, {settings: !0}, function (a, c) {
				a || c.data && c.data.efwd && d.set("forwardingEmail", c.data.efwd + GLOBAL_TICKETS_DOMAIN)
			}));
			this.loadConversationList(d.id, a, this.handleCallback.bind(this))
		},
		searchList: function (a, c) {
			if (!this.checkChangeAllowed()) return c();
			(0 !== a.statusSearch && void 0 === this.statusType || this.statusType !== a.statusSearch || 0 === a.statusSearch && void 0 !== this.statusType) && this.changeStatus(a.statusSearch);
			(this.listType === listType.MY_TICKETS && "0" !== a.assigneeId || this.listType === listType.MY_TICKETS && "0" === a.assigneeId && this.assigneeIds[0] || this.listType !== listType.MY_TICKETS && ("0" === a.assigneeId && "" !== this.assigneeIds || "1" === a.assigneeId && "assigned" !== this.assigneeIds || "-1" ===
				a.assigneeId && null !== this.assigneeIds || a.assigneeId !== this.assigneeIds[0])) && this.changeAssignee(a.assigneeId);
			this.set("queryData", a);
			this.set("conversationData", null);
			this.toggleList(!0);
			this.resetCurrentList();
			this.loadList(c)
		},
		loadConversationList: function (a, c, d) {
			this.set("isContactsList", !1);
			socketConnector.getConversationsList(a, this.queryData, function (a, e) {
				d(a, e, c)
			})
		},
		loadContactsList: function (a, c) {
			var d = [], b = this, e = this.activeProperty;
			c = c || function () {
			};
			this.set("isLoading", !0);
			if (!e) return b.set("isLoading",
				!1), c(!0);
			a || (this.set("listType", listType.CONTACTS), this.clearConversationData(), this.resetCurrentList());
			this.isContactsList || (this.set("isContactsList", !0), this.resetCurrentList(), this.saveLastView());
			socketConnector.getContacts(e.id, {
				query: this.contactsQuery,
				from: e.list.currentHead,
				size: this.queryData.size
			}, function (a, g) {
				if (a) return b.set("isLoading", !1), c(a);
				g.hits.forEach(function (a) {
					a.lastActive = formatDate(a.lastEventOn);
					a.firstVisit = formatDate(a.firstEventOn);
					a.countryFlag = a.lastKnown && a.lastKnown.cc &&
					"ukn" !== a.lastKnown.cc ? "flag flag-" + a.lastKnown.cc.toLowerCase() : "flag flag-ukn";
					d.pushObject(Tawk.CopyableModel.create(a))
				});
				e.list.setTotal(g.total);
				e.list.setList(d);
				e.set("isSelected", !0);
				b.set("isLoading", !1);
				c()
			})
		},
		handleCallback: function (a, c, d) {
			var b = [], e = this, f = this.activeProperty;
			d = d || function () {
			};
			if (!f) return e.set("isLoading", !1), d(!0);
			if (a) return e.set("isLoading", !1), d(a);
			c.hits.forEach(function (a) {
				a = e.parseConversationData(a);
				e.draftReplies[a._id] && (a.hasDraft = !0);
				b.pushObject(Ember.Object.createWithMixins(a))
			});
			f.list.setTotal(c.total);
			f.list.setList(b);
			f.set("isSelected", !0);
			this.set("isLoading", !1);
			d(null, !!b.length)
		},
		changeSort: function (a) {
			a !== this.sortType && (this.set("sortType", a), this.reloadList())
		},
		changeStatus: function (a, c) {
			a !== this.statusType && (this.previousStatus = this.statusType, 0 === a ? this.set("statusType", void 0) : this.set("statusType", a), c && this.reloadList())
		},
		changeAssignee: function (a, c) {
			var d = !1;
			this.previousAssignee = this.assigneeIds;
			if (!("0" === a && "" === this.assigneeIds || "1" === a && "assigned" ===
					this.assigneeIds || "-1" === a && null === this.assigneeIds || JSON.stringify(this.assigneeIds) === JSON.stringify([a]))) {
				if (a === Tawk.userController.user.id) return this.changeList(listType.MY_TICKETS);
				this.listType === listType.MY_TICKETS && a !== Tawk.userController.user.id && (d = !0);
				"0" === a ? this.set("assigneeIds", "") : "1" === a ? this.set("assigneeIds", "assigned") : "-1" === a ? this.set("assigneeIds", null) : "hired_agent" === a ? this.set("assigneeIds", Tawk.webProperties.getHiredAgentsIds(this.activeProperty.id)) : (Array.isArray(a) ||
				(a = [a]), this.set("assigneeIds", a));
				d && this.set("listType", listType.ALL);
				c && this.reloadList()
			}
		},
		reloadList: function (a) {
			a = a || function () {
			};
			this.resetCurrentList();
			this.clearConversationData();
			this.saveLastView();
			this.loadList(a)
		},
		nextConversationsList: function (a) {
			if (!this.activeProperty || this.activeProperty.list.isLastPage()) return a();
			this.activeProperty.list.nextList();
			this.loadList(a)
		},
		nextContactsList: function (a) {
			if (!this.activeProperty || this.activeProperty.list.isLastPage()) return a();
			this.activeProperty.list.nextList();
			this.loadContactsList(!0, a)
		},
		openConversation: function (a, c) {
			var d, b = this.activeProperty;
			c = c || function () {
			};
			this.set("isLoading", !0);
			if (!b) return this.set("isLoading", !1), c();
			d = b.list.currentData.findProperty("_id", a);
			b.list.currentData.setEach("isMarked", !1);
			if (!d) return this.set("isLoading", !1), c();
			if ("chat" === d.type) {
				if (this.conversationData && this.conversationData._id === a) return this.set("isLoading", !1), c();
				this.openChatTranscript(a, d, c)
			} else {
				if (this.conversationData && this.conversationData.id ===
					a) return this.set("isLoading", !1), c();
				this.getTicketDetails(a, d, !1, c)
			}
		},
		openChatTranscript: function (a, c, d) {
			var b = this, e = this.activeProperty;
			d = d || function () {
			};
			loadTranscript(a, e.id, function (f) {
				if (!f) return b.set("isLoading", !1), d(!0);
				f.startDateTime = moment(f.cso).format("LLL");
				f.chatWith = languageParser.translate("conversations", "chat_with", {name: f.n});
				f.isChat = !0;
				f.isClosed = 3E3 === f.s;
				f.visitorName = decodeStr(f.n);
				f.isHistory = !0;
				null !== c && (f.indexNum = e.list.currentData.indexOf(c) + 1 + e.list.currentHead);
				b.set("conversationData", Ember.Object.create(f));
				b.loadVisitor(f.nvid, e.id, function (a) {
					a && (f.visitorName = decodeStr(a.n), f.visitor = a, f.notesUpdatedOn = a.ldub ? moment(a.ldub.uo).format("dddd, MMMM D YYYY, HH:mm") : null, f.notesUpdatedBy = a.ldub ? decodeStr(Tawk.agentsController.getName(a.ldub.aid)) : null, f.ns = a.ns, f.notesValue = decodeStr(a.ns), f.e = a.e);
					b.set("conversationData", Ember.Object.create(f));
					b.set("isLoading", !1);
					c && c.set("isRead", !0);
					f.callInfo.length && (b.conversationData.set("syncCallData", !0), b.conversationData.set("callData",
						{}), setTimeout(function () {
						f.callInfo.forEach(function (a) {
							conversationProcess.processWebRTCCallBlock(a.callId, e.id, a.callView, !1, function (c, d) {
								b.conversationData.set("syncCallData", !1);
								d && b.conversationData.set("callData." + a.callId, d)
							})
						})
					}, 1E3));
					b.saveLastView();
					return d()
				});
				socketConnector.markConversationRead(e.id, a, {type: "chat", eventOrderId: 0, messageEventOrderId: 0})
			})
		},
		openHistoryTranscript: function (a, c, d) {
			loadTranscript(a, c, function (a) {
				if (!a) return d(!0);
				d(null, a)
			})
		},
		loadVisitor: function (a, c, d) {
			if (this.conversationData &&
				this.conversationData.visitor && this.conversationData.vid === a) return d(this.conversationData.visitor);
			socketConnector.getVisitorInfo(a, c, function (a, c) {
				if (a) return d(null);
				c.lastVisitDate = c.lvd ? languageParser.translate("visitors", "last_visit", {lastVisitDate: moment(c.lvd).fromNow()}) : null;
				c.lastChatAgent = c.lci && c.lci.aid.length ? decodeStr(Tawk.agentsController.getName(c.lci.aid[0])) : null;
				c.lastChatDate = c.lci && c.lastChatAgent ? moment(c.lci.tm).fromNow() : null;
				c.countryFlag = c.lk && c.lk.cc ? "flag flag-" + c.lk.cc.toLowerCase() :
					"flag-ukn";
				return d(c)
			})
		},
		loadVisitorHistory: function (a, c) {
			var d = [], b = this;
			c = c || function () {
			};
			a.historyList || (a.set("historyList", Tawk.PagingListModel.create({perpage: 15})), a.historyList.startList());
			historyQuery = {
				visitorId: a.vid,
				size: 15,
				from: a.historyList.currentHead,
				includeTickets: !1,
				includeChats: !0,
				sort: sortType.UPDATE_DESC
			};
			socketConnector.getConversationsList(a.pgid, historyQuery, function (e, f) {
				if (e) return c();
				f.hits.forEach(function (a) {
					b.conversationData && a._id === b.conversationData._id || (a.time =
						formatDate(a.updatedOn), a.agentsName = Tawk.agentsController.getAgentsName(a.agents).join(", "), d.pushObject(Ember.Object.createWithMixins(a)))
				});
				a.historyList.setTotal(a.isHistory ? f.total - 1 : f.total);
				a.historyList.setList(d);
				c()
			})
		},
		clearConversationData: function (a) {
			this.set("conversationData", null);
			this.set("contactData", null)
		},
		openNextConversation: function () {
			var a, c, d = this;
			a = this.conversationData;
			var b = this.activeProperty;
			a && b && (this.set("isLoading", !0), a = a.indexNum - b.list.currentHead, (c = b.list.currentData.objectAt(a)) ||
			a !== b.list.currentData.length ? this.openConversation(c._id) : d.nextConversationsList(function (a) {
				a || d.openConversation(b.list.currentData[0]._id)
			}))
		},
		openPreviousConversation: function () {
			var a, c = this, d = this.conversationData, b = this.activeProperty;
			!d || (!b || 1 >= d.indexNum) || (this.set("isLoading", !0), a = d.indexNum - b.list.currentHead, a = b.list.currentData.objectAt(a - 2), !a && 1 < d.indexNum ? c.previousConversationsList(function (a) {
				a || c.openConversation(b.list.currentData.get("lastObject")._id)
			}) : c.openConversation(a._id))
		},
		openNextContact: function () {
			var a, c, d = this;
			a = this.contactData;
			var b = this.activeProperty;
			a && b && (this.set("isLoading", !0), a = a.indexNum - b.list.currentHead, (c = b.list.currentData.objectAt(a)) || a !== b.list.currentData.length ? this.openContact(c._id) : d.nextContactsList(function (a) {
				a || d.openContact(b.list.currentData[0]._id)
			}))
		},
		openPreviousContact: function () {
			var a, c = this, d = this.contactData, b = this.activeProperty;
			!d || (!b || 1 >= d.indexNum) || (this.set("isLoading", !0), a = d.indexNum - b.list.currentHead, a = b.list.currentData.objectAt(a -
				2), !a && 1 < d.indexNum ? c.previousConversationsList(function (a) {
				a || c.openContact(b.list.currentData.get("lastObject")._id)
			}) : c.openContact(a._id))
		},
		actions: {
			nextConversation: function () {
				this.checkChangeAllowed() && this.openNextConversation()
			}, previousConversation: function () {
				this.checkChangeAllowed() && this.openPreviousConversation()
			}, nextContact: function () {
				this.openNextContact()
			}, previousContact: function () {
				this.openPreviousContact()
			}
		},
		getModalTranscriptData: function (a, c, d) {
			var b = this.activeProperty, e = this;
			d = d || function () {
			};
			if (!b) return d(!0);
			loadTranscript(a, b.id, function (a) {
				if (!a) return d(!0);
				a.visitorName = decodeStr(a.n);
				a.isPopover = !1;
				a.isHistory = !0;
				e.loadVisitor(a.nvid, a.pgid, function (b) {
					b && (a.visitorName = decodeStr(b.n), a.visitor = b, a.notesUpdatedOn = b.ldub ? moment(b.ldub.uo).format("dddd, MMMM D YYYY, HH:mm") : null, a.notesUpdatedBy = b.ldub ? decodeStr(Tawk.agentsController.getName(b.ldub.aid)) : null, a.ns = b.ns, a.notesValue = decodeStr(b.ns), a.e = b.e);
					socketConnector.getGeoLocation([a.ip], function (b, g) {
						!b &&
						g.length && (a.latitude = g[0].latitude, a.longitude = g[0].longitude);
						c && (a.isConversationInView = !0);
						e.set("modalTranscriptData", Ember.Object.create(a));
						d()
					})
				})
			})
		},
		getCopyFormat: function () {
			getCopyFormat(this.conversationData)
		},
		printTranscript: function () {
			printTranscript(this.conversationData)
		},
		emailTranscript: function (a, c) {
			emailTranscript(a, this.conversationData, c)
		},
		toggleMark: function (a, c) {
			var d = this.activeProperty.list.getItem(a);
			d && d.set("isMarked", c)
		},
		assigneeList: function () {
			var a, c = !1, d = [], b = [], e = {
				departments: [],
				agents: []
			};
			if (!this.activeProperty) return null;
			a = Tawk.webProperties.getProperty(this.activeProperty.id);
			if (!a) return null;
			a.departments && Object.keys(a.departments).forEach(function (c) {
				var d = a.departments[c];
				d.en && d.a.length && b.pushObject(Ember.Object.create({id: c, name: d.n}))
			});
			a.currentAgents.forEach(function (b) {
				var e;
				b.en && b.aid !== Tawk.userController.user.id && (b.ha && !Tawk.userController.user.isHiredAgent ? c = !0 : (e = Tawk.agentsController.getAgent(b.aid)) && d.pushObject(Ember.Object.create({
					id: b.aid, name: e.name,
					isPropertyClient: Tawk.userController.user.isHiredAgent && !b.ha && a.isClientProperty
				})))
			});
			c && d.pushObject(Ember.Object.create({
				id: "hired_agent",
				name: "Hired Agents",
				isSelected: !0,
				disabled: !0
			}));
			e.departments = sortList(b, "name");
			e.agents = sortList(d, "name");
			d = b = null;
			return e
		}.property("activeProperty"),
		getActiveListAll: function () {
			return this.activeProperty.aggregate && this.activeProperty.aggregate.all ? this.activeProperty.aggregate.all : !1
		}.property("activeProperty"),
		getAssigneeType: function (a) {
			return this.get("assigneeList").departments.findProperty("id",
				a) ? "department" : "agent"
		},
		addAttachment: function (a, c, d, b, e) {
			var f, g = this.activeProperty;
			if (!g) return e(!0);
			b ? f = "new-ticket" : this.conversationData && !this.conversationData.isChat ? f = this.conversationData.id : e(!0);
			fileUploader.uploadAttachment(a, c, g.id, f, d, function (a, b) {
				a && e(!0, b);
				e()
			})
		},
		createTicket: function (a, c, d) {
			var b = this, e = this.activeProperty;
			if (!e) return d(!0);
			if (c) {
				if (!this.conversationData || !this.conversationData.isChat) return d(!0);
				a.chatId = this.conversationData.chatId
			}
			(this.get("isStatusPending") ||
				this.get("isStatusClosed")) && this.changeStatus(0);
			socketConnector.createTicket(e.id, a, function (a, c) {
				if (a) return d(!0);
				setTimeout(function () {
					b.loadAggregation()
				});
				b.toggleList(!1);
				b.reloadList(function (a) {
					a = e.list.getItem(c.ticketId);
					b.getTicketDetails(c.ticketId, a, !1, d)
				})
			})
		},
		getTicketDetails: function (a, c, d, b) {
			var e = this, f = this.activeProperty, g = 0;
			b = b || function () {
			};
			if (!f) return b(!0);
			socketConnector.getTicket(f.id, a, function (h, k) {
				var l = [];
				if (h) return b(!0);
				k.id = a;
				k.wroteTime = formatDate(k.cso);
				k.startDateTime =
					moment(k.cso).format("MMMM D YYYY, HH:mm");
				k.watchersString = Tawk.agentsController.getAgentsName(k.wtch).join(", ");
				k.messages = ticketProcess.processEvents(k.e, k.pgid, k.read, {
					message: k.msg,
					attachments: k.attch,
					wroteTime: formatDate(k.cso),
					creator: k.crtrN,
					creatorType: k.crtrT
				});
				k.tags && k.tags.forEach(function (a) {
					l.push(decodeStr(a))
				});
				k.tags = l;
				k.customTags = {data: l.join(", "), version: 1};
				if (void 0 !== e.draftReplies[a]) try {
					k.draftedText = JSON.parse(e.draftReplies[a])
				} catch (m) {
					k.draftedText = {message: decodeStr(e.draftReplies[a])}
				}
				k.isClosed =
					3E3 === k.s;
				d || (k.indexNum = f.list.currentData.indexOf(c) + 1 + f.list.currentHead);
				k.e && (k.e.length && k.e[k.e.length - 1]) && (g = k.e[k.e.length - 1].order);
				socketConnector.markConversationRead(f.id, a, {type: "ticket", eventOrderId: g});
				e.set("conversationData", Ember.Object.create(k));
				k.rplyLst.list.length && e.displayTicketListener({list: k.rplyLst.list, pgid: f.id, tId: a});
				c && c.set("isRead", !0);
				e.set("isLoading", !1);
				e.toggleList(!1);
				e.saveLastView();
				b()
			})
		},
		isAll: function () {
			return this.listType === listType.ALL
		}.property("listType"),
		isTickets: function () {
			return this.listType === listType.MY_TICKETS
		}.property("listType"),
		isMyTickets: function () {
			return this.listType === listType.MY_TICKETS
		}.property("listType"),
		isNewConversation: function () {
			return this.listType === listType.UNASSIGNED_OPEN
		}.property("listType"),
		isSpam: function () {
			return this.listType === listType.SPAM
		}.property("listType"),
		isTrash: function () {
			return this.listType === listType.TRASH
		}.property("listType"),
		isContacts: function () {
			return this.listType === listType.CONTACTS
		}.property("listType"),
		isCreatedOnSort: function () {
			return this.sortType === sortType.CREATE_DESC || this.sortType === sortType.CREATE_ASC
		}.property("sortType"),
		isUpdatedOnSort: function () {
			return this.sortType === sortType.UPDATE_DESC || this.sortType === sortType.UPDATE_ASC
		}.property("sortType"),
		isPrioritySort: function () {
			return this.sortType === sortType.PRIORITY_DESC || this.sortType === sortType.PRIORITY_ASC
		}.property("sortType"),
		isStatusSort: function () {
			return this.sortType === sortType.STATUS_DESC || this.sortType === sortType.STATUS_ASC
		}.property("sortType"),
		statusFilterTitle: function () {
			var a, c;
			1E3 === this.statusType ? c = this.previousStatus : this.previousStatus = c = this.statusType;
			c && void 0 !== c ? 1E3 === c ? a = languageParser.translate("conversations", "status_open") : 2E3 === c ? a = languageParser.translate("conversations", "status_awaiting") : 3E3 === c && (a = languageParser.translate("conversations", "status_close")) : a = languageParser.translate("generic", "any");
			return a
		}.property("statusType"),
		isStatusAll: function () {
			return void 0 === this.statusType
		}.property("statusType"),
		isStatusOpen: function () {
			return 1E3 ===
				this.statusType
		}.property("statusType"),
		isStatusPending: function () {
			return 2E3 === this.statusType
		}.property("statusType"),
		isStatusClosed: function () {
			return 3E3 === this.statusType
		}.property("statusType"),
		isMyMessageList: function () {
			return "assigned" !== this.assigneeIds && this.assigneeIds && this.assigneeIds[0] === Tawk.userController.user.id && "" !== this.assigneeIds
		}.property("assigneeIds"),
		isAssignedMessageList: function () {
			return "assigned" === this.assigneeIds
		}.property("assigneeIds"),
		isAllMessageList: function () {
			return null !==
				this.assigneeIds && "" === this.assigneeIds
		}.property("assigneeIds"),
		displayAllMessageListNumber: function () {
			return null !== this.assigneeIds && "" === this.assigneeIds || "assigned" !== this.assigneeIds && this.assigneeIds && this.assigneeIds[0] === Tawk.userController.user.id && "" !== this.assigneeIds && null !== this.previousAssignee && "" === this.previousAssignee
		}.property("assigneeIds"),
		isUnassignedMessageList: function () {
			return null === this.assigneeIds
		}.property("assigneeIds"),
		assigneeFilterTitle: function () {
			var a;
			"assigned" !==
			this.assigneeIds && this.assigneeIds && this.assigneeIds[0] === Tawk.userController.user.id && "" !== this.assigneeIds ? a = this.previousAssignee : this.previousAssignee = a = this.assigneeIds;
			return "assigned" === a ? languageParser.translate("conversations", "assigned_text") : null !== a && "" === a || "assigned" !== a && a && a[0] === Tawk.userController.user.id && "" !== a ? languageParser.translate("generic", "all_text") : null === a ? languageParser.translate("conversations", "unassigned") : Tawk.agentsController.getAgent(a[0]) ? Tawk.agentsController.getAgent(a[0]).name :
				Tawk.webProperties.getDepartmentName(this.activeProperty.id, a[0])
		}.property("assigneeIds"),
		isAscending: function () {
			return this.sortType === sortType.CREATE_ASC || this.sortType === sortType.UPDATE_ASC || this.sortType === sortType.PRIORITY_ASC || this.sortType === sortType.STATUS_ASC
		}.property("sortType"),
		parseConversationData: function (a) {
			var c = this.activeProperty;
			"chat" === a.type ? (a.duration = moment.duration(1E3 * a.chatDuration).humanize(), a.agentsNameList = Tawk.agentsController.getAgentsName(a.agents) || Tawk.webProperties.getDepartmentName(c.id,
				a.department), a.agentsName = a.agentsNameList.join(", "), !a.agentsNameList.length && a.department && a.agentsNameList.push(Tawk.webProperties.getDepartmentName(c.id, a.department)), a.countryFlag = a.countryCode && "ukn" !== a.countryCode ? "flag flag-" + a.countryCode.toLowerCase() : "flag flag-ukn", a.totalMessages = languageParser.translate("history", "total_message", {num: a.messageCount}), a.isChat = !0, a.visitorName = decodeStr(a.visitorName)) : (a.requester.name = decodeStr(a.requester.name), a.assigneeId && (a.assignee = "agent" ===
			a.assigneeType ? Tawk.agentsController.getAgentsName(a.assigneeId).join(", ") : Tawk.webProperties.getDepartmentName(c.id, a.assigneeId)));
			this.get("isCreatedOnSort") ? a.sorted = formatDate(a.createdOn) : this.get("isUpdatedOnSort") ? a.sorted = formatDate(a.updatedOn) : this.get("isPrioritySort") ? a.sorted = priorityType[a.priority] : this.get("isStatusSort") && (a.sorted = statusType[a.status]);
			a.currentStatus = statusType[a.status];
			a.statusLabel = "status-" + a.status;
			"ticket" === a.type && (a.requester.firstLetterName = a.requester.name[0]);
			3E3 === a.status ? a.isClosed = !0 : (a.isRead = a.read, !a.isRead && (a.assigneeId && a.assigneeId !== Tawk.userController.user.id) && (a.isRead = !0));
			a.hasAdminAccess = c ? c.isAdmin : !1;
			a.isMarked = !1;
			return a
		},
		sendTicketReply: function (a, c) {
			var d = this, b = [];
			c = c || function () {
			};
			if (!this.activeProperty || !this.conversationData) return c(!0);
			socketConnector.replyTicket(this.activeProperty.id, this.conversationData.id, a, function (e) {
				e ? c(e) : (b.push({
					event: {
						crtrN: Tawk.userController.user.fullName,
						cbe: !1,
						hAttch: a.attachments.length,
						co: (new Date).getTime(),
						op: "ticket-reply",
						crtrT: "agent",
						crtrId: Tawk.userController.user.id,
						data: {msg: a.message, msgP: a.plainMessage, "private": a.private},
						attch: a.attachments
					}
				}), a.status && (d.conversationData.set("st", a.status), b.push({
					event: {
						crtrN: Tawk.userController.user.fullName,
						cbe: !1,
						co: (new Date).getTime(),
						op: "ticket-change-status",
						crtrT: "agent",
						crtrId: Tawk.userController.user.id,
						data: {s: a.status}
					}
				})), a.status && 3E3 === a.status ? d.conversationData.set("isClosed", !0) : d.conversationData.set("isClosed",
					!1), d.set("draftReplies." + d.conversationData.id, void 0), d.conversationData.messages.pushObjects(ticketProcess.processEvents(b)), d.storeDraft(null), d.ticketHasChanged = !0, d.loadList(c))
			})
		},
		updateTicketPriority: function (a, c) {
			var d = this;
			c = c || function () {
			};
			if (!this.activeProperty || !this.conversationData || !priorityType[a]) return c(!0);
			socketConnector.changePriority(this.activeProperty.id, this.conversationData.id, {priority: a}, function (b) {
				if (b) return c(b);
				b = ticketProcess.processEvents([{
					event: {
						crtrN: Tawk.userController.user.fullName,
						co: (new Date).getTime(), op: "ticket-change-priority", data: {p: a}
					}
				}]);
				d.conversationData.messages.pushObjects(b);
				d.conversationData.set("p", a);
				c()
			})
		},
		updateTags: function (a, c) {
			var d = this, b = {tagsAdded: [], tagsRemoved: []};
			c = c || function () {
			};
			if (!this.activeProperty || !this.conversationData) return c(!0);
			this.conversationData.tags && this.conversationData.tags.length ? (this.conversationData.tags.forEach(function (c) {
				-1 === a.indexOf(c) && b.tagsRemoved.push(c)
			}), a.forEach(function (a) {
				-1 === d.conversationData.tags.indexOf(a) &&
				b.tagsAdded.push(a)
			})) : b.tagsAdded = a;
			if (0 === b.tagsAdded.length && 0 === b.tagsRemoved.length) return c();
			socketConnector[this.conversationData.isHistory ? "updateChatTags" : "updateTicketTags"](this.activeProperty.id, this.conversationData.isHistory ? this.conversationData.chatId : this.conversationData.id, b, function (a, b) {
				var g = [];
				if (a) return c(!0, a);
				d.conversationData.tags && d.conversationData.tags.length ? d.conversationData.tags.clear() : d.conversationData.set("tags", []);
				b.tags.forEach(function (a) {
					g.push(decodeStr(a))
				});
				d.conversationData.tags.pushObjects(g);
				d.conversationData.set("tagsv", 1);
				d.conversationData.set("customTags", {data: g.join(", "), version: 1});
				d.loadAvailableTags();
				c()
			})
		},
		updateTicketAssignee: function (a, c, d) {
			var b, e = this;
			d = d || function () {
			};
			if (!this.activeProperty || !this.conversationData) return d(!0);
			b = this.activeProperty.list.getItem(this.conversationData.id);
			if (!b) return d(!0);
			"0" === a ? socketConnector.unassignTicket(this.activeProperty.id, this.conversationData.id, function (a) {
				if (a) return d(a);
				a = ticketProcess.processEvents([{
					event: {
						crtrN: Tawk.userController.user.fullName,
						co: (new Date).getTime(), op: "ticket-unassigned"
					}
				}]);
				e.conversationData.messages.pushObjects(a);
				b.setProperties({assignee: null, assigneeId: null, assigneeType: null});
				e.conversationData.setProperties({assignee: null, assigneeId: null, assigneeType: null});
				setTimeout(function () {
					e.loadAggregation()
				});
				d()
			}) : socketConnector.updateAssignee(this.activeProperty.id, this.conversationData.id, {
				assigneeId: a,
				assigneeType: c
			}, function (f) {
				if (f) return d(f);
				f = "agent" === c ? Tawk.agentsController.getAgentsName(a).join(", ") : Tawk.webProperties.getDepartmentName(e.activeProperty.id,
					a);
				var g = ticketProcess.processEvents([{
					event: {
						crtrN: Tawk.userController.user.fullName,
						co: (new Date).getTime(),
						op: "ticket-assigned",
						data: {assgnId: a, assgnN: f, assgnT: c}
					}
				}]);
				e.conversationData.messages.pushObjects(g);
				b.setProperties({assignee: f, assigneeId: a, assigneeType: c});
				e.conversationData.setProperties({assignee: f, assigneeId: a, assigneeType: c});
				setTimeout(function () {
					e.loadAggregation()
				});
				d()
			})
		},
		markTicketAsSpam: function (a) {
			var c, d = this;
			if (!this.activeProperty || !this.conversationData) return a(!0);
			c =
				this.activeProperty.list.getItem(this.conversationData.id);
			socketConnector.bulkSpamUpdate(this.activeProperty.id, {spam: !0, tickets: [c._id]}, function (b) {
				if (b) return a(b);
				setTimeout(function () {
					d.loadAggregation()
				});
				d.clearConversationData();
				d.activeProperty.list.removeItem(c);
				a()
			})
		},
		removeTicketFromSpam: function (a) {
			var c, d = this;
			if (!this.activeProperty || !this.conversationData) return a(!0);
			c = this.activeProperty.list.getItem(this.conversationData.id);
			socketConnector.bulkSpamUpdate(this.activeProperty.id,
				{spam: !1, tickets: [c._id]}, function (b) {
					b && a(b);
					setTimeout(function () {
						d.loadAggregation()
					});
					d.clearConversationData();
					d.activeProperty.list.removeItem(c);
					a()
				})
		},
		deleteSingleItem: function (a) {
			this.isTicket ? this.deleteTicket(a) : this.deleteSingleHistory(a)
		},
		deleteSingleHistory: function (a) {
			var c, d;
			a = a || function () {
			};
			if (this.modalTranscriptData) return this.deleteModalHistory(a);
			if (this.conversationData) d = this.conversationData.chatId; else return a(!0);
			c = this.activeProperty.list.getItem(d);
			if (!c) return a(!0);
			c.set("isMarked", !0);
			this.bulkDeleteConversations(function (b) {
				c.set("isMarked", !1);
				a(b)
			})
		},
		deleteModalHistory: function (a) {
			var c, d = this;
			if (!(this.activeProperty && this.activeProperty.isAdmin && this.modalTranscriptData && this.modalTranscriptData._id)) return a(!0);
			this.conversationData && d.conversationData.historyList ? c = this.conversationData.historyList.getItem(this.modalTranscriptData._id) : this.activeProperty.list && (c = this.activeProperty.list.getItem(this.modalTranscriptData._id));
			if (!c) return a(!0);
			checkAndSetConfirmView(!1,
				function (b) {
					if (!b) return a(!0);
					socketConnector.deleteConversations(d.activeProperty.id, {
						chats: [d.modalTranscriptData._id],
						tickets: []
					}, function (b, f) {
						if (b || f.chats.errorsInItems) return a(!0);
						d.conversationData && d.conversationData.historyList && d.conversationData.historyList.currentData.removeObject(c);
						d.activeProperty.list && d.activeProperty.list.currentData.removeObject(c);
						d.set("modalTranscriptData", null);
						a()
					})
				})
		},
		deleteTicket: function (a) {
			var c;
			if (!this.activeProperty || !this.conversationData) return a(!0);
			c = this.activeProperty.list.getItem(this.conversationData.id);
			c.set("isMarked", !0);
			this.bulkDeleteConversations(function (d) {
				c.set("isMarked", !1);
				a(d)
			})
		},
		restoreTicket: function (a) {
			if (!this.activeProperty || !this.conversationData) return a(!0);
			this.activeProperty.list.getItem(this.conversationData.id).set("isMarked", !0);
			this.bulkConversationsRestore(a)
		},
		storeNewConversation: function (a) {
			!this.activeProperty || (a.pgid !== this.activeProperty.id || !this.listType || this.listType === listType.SPAM || this.listType ===
				listType.TRASH || this.listType === listType.CONTACTS || !this.get("isStatusAll") && a.s !== this.statusType || !this.includeTickets && !a.isChat || !this.includeChats && a.isChat) || (this.listType !== listType.MY_TICKETS || a.assgnId === Tawk.userController.user.id && -1 !== a.a.indexOf(Tawk.userController.user.id)) && this.activeProperty.list.addPendingData(Ember.Object.createWithMixins(a))
		},
		retrieveNewHistory: function () {
			this.activeProperty && (this.activeProperty.list.startList(), this.loadList())
		},
		removeEvent: function () {
			"function" ===
			typeof this.listenOnNewTranscript && socketConnector.socket.removeListener("newVisitorChatTranscript", this.listenOnNewTranscript)
		},
		changeTicketStatus: function (a, c) {
			var d, b = this;
			if (!this.activeProperty || !this.conversationData || !statusType[a]) return c(!0);
			d = this.activeProperty.list.getItem(this.conversationData.id);
			if (!d) return c(!0);
			socketConnector.updateTicketStatus(this.activeProperty.id, this.conversationData.id, {status: a}, function (e) {
				if (e) return c(e);
				e = ticketProcess.processEvents([{
					event: {
						crtrN: Tawk.userController.user.fullName,
						co: (new Date).getTime(), op: "ticket-change-status", data: {s: a}
					}
				}]);
				setTimeout(function () {
					b.loadAggregation()
				});
				3E3 === a ? d.set("isClosed", !0) : d.set("isClosed", !1);
				b.conversationData.messages.pushObjects(e);
				b.conversationData.set("s", a);
				b.ticketHasChanged = !0;
				b.loadList(c)
			})
		},
		closeTicket: function (a) {
			this.changeTicketStatus(3E3, a)
		},
		setListPropertyToValue: function (a, c) {
			this.activeProperty.list.currentData.setEach(a, c)
		},
		bulkDeleteConversations: function (a) {
			var c, d = this, b = {chats: [], tickets: []};
			a = a || function () {
			};
			if (!this.activeProperty || !this.activeProperty.isAdmin) return a(!0);
			c = this.activeProperty.list.currentData.filterProperty("isMarked", !0);
			if (0 === c.length) return a(!0);
			checkAndSetConfirmView(!1, function (e) {
				if (!e) return a(!0);
				c.forEach(function (a) {
					a.isChat ? b.chats.push(a._id) : b.tickets.push(a._id)
				});
				socketConnector.deleteConversations(d.activeProperty.id, b, function (b, e) {
					if (b || e.chats.errorsInItems || e.tickets.errorsInItems) return a(!0);
					setTimeout(function () {
						d.loadAggregation()
					});
					d.activeProperty.list.currentData.removeObjects(c);
					d.set("conversationData", null);
					a()
				})
			})
		},
		bulkConversationsRestore: function (a) {
			var c, d = this, b = {chats: [], tickets: []};
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			c = this.activeProperty.list.currentData.filterProperty("isMarked", !0);
			if (0 === c.length) return a(!0);
			c.forEach(function (a) {
				a.isChat ? b.chats.push(a._id) : b.tickets.push(a._id)
			});
			socketConnector.bulkRestore(this.activeProperty.id, b, function (b, f) {
				if (b || f.chats.errorsInItems || f.tickets.errorsInItems) return a(!0);
				setTimeout(function () {
					d.loadAggregation()
				});
				d.activeProperty.list.currentData.removeObjects(c);
				d.set("conversationData", null);
				a()
			})
		},
		bulkConversationsPurge: function (a) {
			var c, d = this, b = {chats: [], tickets: []};
			a = a || function () {
			};
			if (!this.activeProperty) return a(!0);
			c = this.activeProperty.list.currentData.filterProperty("isMarked", !0);
			if (0 === c.length) return a(!0);
			c.forEach(function (a) {
				a.isChat ? b.chats.push(a._id) : b.tickets.push(a._id)
			});
			socketConnector.bulkPurge(this.activeProperty.id, b, function (b, c) {
				if (b || c.chats.errorsInItems || c.tickets.errorsInItems) return a(!0);
				d.activeProperty.list.startList();
				setTimeout(function () {
					d.loadAggregation()
				});
				d.loadList(a)
			})
		},
		bulkUnspam: function (a) {
			var c = this, d = [];
			if (!this.activeProperty) return a(!0);
			d = this.activeProperty.list.currentData.filterProperty("isMarked", !0).getEach("_id");
			socketConnector.bulkSpamUpdate(this.activeProperty.id, {spam: !1, tickets: d}, function (b) {
				b && a(b);
				c.activeProperty.list.startList();
				setTimeout(function () {
					c.loadAggregation()
				});
				c.loadList(a)
			})
		},
		openContact: function (a, c) {
			var d, b;
			b = this.activeProperty;
			c =
				c || function () {
				};
			this.set("isLoading", !0);
			if (!b) return this.set("isLoading", !1), c(!0);
			b.list.currentData.setEach("isMarked", !1);
			d = b.list.currentData.findProperty("_id", a);
			if (!d) return this.set("isLoading", !1), c(!0);
			b = b.list.currentData.indexOf(d) + 1 + b.list.currentHead;
			this.getContactDetails(d.email, b, c)
		},
		getContactDetails: function (a, c, d) {
			var b = this;
			d = d || function () {
			};
			socketConnector.getContactDetails(this.activeProperty.id, a, function (a, f) {
				b.set("isLoading", !1);
				a && d(!0);
				b.set("contactData", f.contact);
				b.set("contactData.ticketCount", f.ticketCount);
				b.set("contactData.visitCount", f.visitCount);
				b.set("contactData.chatCount", f.chatCount);
				b.set("contactData.timeline", b.parseContactTimeline(f.events, f.contact.name));
				c && b.set("contactData.indexNum", c);
				20 > b.contactData.timeline.length && b.set("contactData.timelineEnded", !0);
				b.set("conversationData", null);
				b.saveLastView();
				d()
			})
		},
		parseContactTimeline: function (a, c) {
			var d = [];
			a.forEach(function (a) {
				var e = {};
				e.id = a.event_id;
				e.time = formatDate(a.event_on);
				if ("visit" ===
					a.event_type) e.title = "Visited site", e.isVisit = !0; else if ("ticket" === a.event_type) e.title = "Ticket Created : #" + a.event_info.hId + " " + a.event_info.subj, e.messages = [a.event_info.msg], e.isTicket = !0; else if ("chat" === a.event_type) e.title = a.event_info.uc ? "Unanswered conversation" : "Conversation with " + Tawk.agentsController.getAgentsName(a.event_info.a).join(", "), e.messages = conversationProcess.processHistory(a.event_info.m, c).transcriptData, e.isChat = !0; else return;
				d.push(e)
			});
			return d.reverse()
		},
		toggleList: function (a) {
			this.set("showList",
				a)
		},
		notifyStartReply: function (a) {
			if (!this.activeProperty || !this.conversationData || !this.conversationData.id) return a(!0);
			socketConnector.emitStartReply(this.activeProperty.id, this.conversationData.id, function (c) {
				if (c) return a(!0);
				a()
			})
		},
		notifyStopReply: function (a) {
			if (!this.activeProperty || !this.conversationData || !this.conversationData.id) return a(!0);
			socketConnector.emitStopReply(this.activeProperty.id, this.conversationData.id, function (c) {
				if (c) return a(!0);
				a()
			})
		},
		displayTicketListener: function (a) {
			var c,
				d = [];
			this.activeProperty && this.activeProperty.id === a.pgid && (a.list.forEach(function (a) {
				a !== Tawk.userController.user.id && d.push(a)
			}), c = d.length ? 1 === d.length ? languageParser.translate("conversations", "one_agent_reply", {agentName: Tawk.agentsController.getName(d[0])}) : 2 === d.length ? languageParser.translate("conversations", "two_agent_reply", {
				agentName1: Tawk.agentsController.getName(d[0]),
				agentName2: Tawk.agentsController.getName(d[1])
			}) : languageParser.translate("conversations", "many_agent_reply") : null, this.conversationData &&
			this.conversationData.id === a.tId && this.conversationData.set("repliersText", c))
		},
		loadContactEvents: function (a) {
			var c, d = this;
			a = a || function () {
			};
			if (!this.activeProperty || !this.contactData) return a(!0);
			this.set("isLoading", !0);
			socketConnector.getContactEvents(this.activeProperty.id, this.contactData.email, {offset: this.contactData.timeline[0].id}, function (b, e) {
				d.set("isLoading", !1);
				if (b) return a(!0);
				c = d.parseContactTimeline(e);
				d.contactData.set("timeline", c.concat(d.contactData.timeline));
				20 > e.length && d.contactData.set("timelineEnded",
					!0);
				a()
			})
		},
		closeChat: function (a) {
			var c = this;
			a = a || function () {
			};
			if (!this.activeProperty || !this.conversationData) return a(!0);
			this.set("isLoading", !0);
			socketConnector.closeChat(this.activeProperty.id, this.conversationData.chatId, {status: 3E3}, function (d) {
				c.set("isLoading", !1);
				d || (c.activeProperty.list.removeItem(c.conversationData), setTimeout(function () {
					c.loadAggregation()
				}), c.set("conversationData", null), c.toggleList(!0), c.reloadList(a))
			})
		},
		newTicketCreation: function (a) {
			var c = this;
			a.crtrId !== Tawk.userController.user.id &&
			(notificationController.notifyTicketEvent(a, !0), setTimeout(function () {
				c.loadAggregation()
			}), this.activeProperty && this.activeProperty.id === a.pgid && this.storeNewConversation(a))
		},
		openTicketDirect: function (a, c) {
			var d = this;
			"messaging" !== Tawk.routeManager.get("currentState.name") ? (this.set("autoOpenTicket", {
				propertyId: a,
				ticketId: c
			}), window.location.hash = "/messaging") : (this.openProperty(a), this.changeList(listType.ALL, function (a) {
				a || d.getTicketDetails(c, null, !0)
			}))
		},
		getModalTicketData: function (a, c) {
			var d =
				this, b = this.activeProperty;
			c = c || function () {
			};
			if (!b || !this.contactData) return c(!0);
			socketConnector.getTicket(this.contactData.pgid, a, function (b, f) {
				if (b) return c(!0);
				f.id = a;
				f.startDateTime = moment(f.cso).format("MMMM D YYYY, HH:mm");
				f.tagString = f.tags && f.tags.length ? f.tags.join(",") : "";
				f.watchersString = Tawk.agentsController.getAgentsName(f.wtch).join(", ");
				f.messages = ticketProcess.processEvents(f.e, f.pgid, f.read, {
					message: f.msg,
					attachments: f.attch,
					created: formatDate(f.cso),
					creator: f.crtrN
				});
				d.set("modalTicketData",
					Ember.Object.create(f));
				c()
			})
		},
		incomingTicketEvents: function (a) {
			var c, d = this;
			if (a.event && a.event.crtrId !== Tawk.userController.user.id) {
				if ("conversations" !== Tawk.routeManager.get("currentState.name")) "ticket-reply" === a.event.op && socketConnector.getTicket(a.pgid, a.tId, function (b, c) {
					b || c.assgnId !== Tawk.userController.user.id && -1 === c.wtch.indexOf(Tawk.userController.user.id) || notificationController.notifyTicketEvent(a)
				}); else {
					if (this.activeProperty.id !== a.pgid) return;
					if (!this.conversationData || a.tId !==
						this.conversationData.id) {
						this.activeProperty.list.startList();
						this.loadList();
						return
					}
					c = this.activeProperty.list.currentData.findProperty("_id", a.tId);
					this.getTicketDetails(this.conversationData.id, c, !0)
				}
				setTimeout(function () {
					d.loadAggregation()
				})
			}
		},
		conversationPurged: function (a) {
			this.listType && (this.listType === listType.TRASH && a.prgdBy !== Tawk.userController.user.id) && (this.conversationData && (this.conversationData.id === a.itemId || this.conversationData.isChat && this.conversationData.chatId === a.itemId) &&
			this.conversationData.set("isPurged", !0), this.resetCurrentList(), this.loadList())
		},
		toggleAllMark: function (a) {
			this.activeProperty && (this.activeProperty.list && this.activeProperty.list.currentData) && (a ? this.activeProperty.list.currentData.setEach("isMarked", !0) : this.activeProperty.list.currentData.setEach("isMarked", !1))
		},
		saveLastView: function () {
			var a;
			lastViewData = this.lastViews;
			this.activeProperty && (lastViewData.propertyId = this.activeProperty.id, lastViewData.listType = this.listType, lastViewData.statusType =
				this.statusType, lastViewData.includeTickets = this.includeTickets, lastViewData.includeChats = this.includeChats, lastViewData.isContactsList = this.isContactsList, lastViewData.previousStatus = this.previousStatus, this.isContactsList ? (lastViewData.listType = "contacts", this.contactData && (a = {
				detailsId: this.contactData.email,
				detailsType: "contact"
			})) : this.conversationData && (a = {
				detailsId: this.conversationData.id || this.conversationData.chatId,
				detailsType: this.conversationData.isChat ? "chat" : "ticket"
			}), lastViewData.draftReplies =
				JSON.stringify(this.draftReplies), a ? lastViewData[this.activeProperty.id] = a : delete lastViewData[this.activeProperty.id], this.set("lastViews", lastViewData), main.updateStorageSettings("messaging-view", JSON.stringify(lastViewData)))
		},
		saveLastDashbaordHistory: function () {
			var a = this.lastDashboardHistoryData;
			this.activeProperty && (a.propertyId = this.activeProperty.id, this.set("lastDashboardHistoryData", a), main.updateStorageSettings("dashboard-view", JSON.stringify(a)))
		},
		getDashboardHistory: function (a, c) {
			!a &&
			this.lastDashboardHistoryData && (a = this.lastDashboardHistoryData.propertyId);
			a || (a = this.propertiesList[0].id);
			this.set("includeTickets", !1);
			this.set("includeChats", !0);
			this.set("statusType", void 0);
			this.set("sortType", sortType.UPDATE_DESC);
			this.set("listType", listType.ALL);
			this.openProperty(a, !0);
			this.resetCurrentList();
			this.clearConversationData(!0);
			this.loadList(c, !0);
			this.saveLastDashbaordHistory()
		},
		storeDraft: function (a) {
			var c;
			this.conversationData && (this.conversationData.id && !this.conversationData.isChat) &&
			(c = this.activeProperty.list.getItem(this.conversationData.id), null === a ? (this.set("draftReplies." + this.conversationData.id, void 0), c && c.set("hasDraft", !1)) : (this.set("draftReplies." + this.conversationData.id, JSON.stringify(a)), c && c.set("hasDraft", !0)), this.saveLastView())
		},
		convertChatToTicket: function () {
			this.activeProperty && (this.conversationData && this.conversationData.isChat) && this.conversationData.setProperties({
				subj: "RE : " + this.conversationData.chatWith,
				isChat: !1,
				isNewConvert: !0,
				isHistory: !1
			})
		},
		discardTicketConvert: function () {
			this.activeProperty && this.conversationData && (this.clearConversationData(), this.toggleList(!0))
		},
		checkChangeAllowed: function () {
			return this.conversationData && this.conversationData.isNewConvert ? (this.set("conversationData.savePrompt", !0), !1) : !0
		},
		getVisitorShopifyData: function (a, c, d, b) {
			socketConnector.searchShopifyData({propertyId: a, query: c, includeConfig: d}, function (a, c) {
				b(a, c)
			})
		}
	});
	Tawk.conversationsController = Tawk.ConversationsController.create();
	var TicketProcess = function () {
		this.tagRegex =
			/@\[([a-z0-9]){24,24}(:)(.+?)\]/g;
		this.firstMessageBlock = Handlebars.compile('<div class="ticket-block first-message"><div class="ticket-header"><i class="fa fa-ticket"></i><span class="time">{{wroteTime}}</span>{{#if attachments.length}}<span class="has-attachment pull-right"><i class="fa fa-paperclip"></i></span>{{/if}}&nbsp;<span>{{creator}}</span></div><p class="ticket-body">{{{message}}}</p>{{#if attachments.length}}<div class="attachment-display-container"><span class="title">' + languageParser.translate("conversations",
			"attachments") + '</span><ul>{{{attachments}}}</ul></div>{{/if}}{{#if seenAgents}}<p class="ticket-seen"><i class="fa fa-circle"></i>Seen by {{seenAgents}}</p>{{/if}}</div>');
		this.agentBlockTemplate = Handlebars.compile('<div class="ticket-block {{#if isPrivate}}ticket-note-block{{/if}}"><div class="ticket-header"><i class="fa {{#if isPrivate}} fa-thumb-tack {{else}} fa-reply {{/if}}"></i><span class="time">{{time}}</span>{{#if attachments.length}}<span class="has-attachment pull-right"><i class="fa fa-paperclip"></i></span>{{/if}}<span>{{{name}}}</span></div><p class="ticket-body">{{{message}}}</p>{{#if attachments.length}}<div class="attachment-display-container"><span class="title">' +
			languageParser.translate("conversations", "attachments") + '</span><ul>{{{attachments}}}</ul></div>{{/if}}{{#if seenAgents}}<p class="ticket-seen"><i class="fa fa-circle"></i>Seen by {{seenAgents}}</p>{{/if}}<div class="clearfix"></div></div>');
		this.visitorBlockTemplate = Handlebars.compile('<div class="ticket-block"><div class="ticket-header">{{#if isEmail}}<i class="fa fa-envelope-o"></i>{{/if}}<span class="time">{{time}}</span>{{#if attachments.length}}<span class="has-attachment pull-right"><i class="fa fa-paperclip"></i></span>{{/if}}<span>{{{name}}}</span></div><p class="ticket-body">{{{message}}}</p>{{#if attachments.length}}<div class="attachment-display-container"><span class="title">' +
			languageParser.translate("conversations", "attachments") + '</span><ul>{{{attachments}}}</ul></div>{{/if}}{{#if seenAgents}}<p class="ticket-seen"><i class="fa fa-circle"></i>Seen by {{seenAgents}}</p>{{/if}}<div class="clearfix"></div></div>');
		this.notificationBlockTemplate = Handlebars.compile('<div class="ticket-block ticket-notification"><p class="ticket-body"><span class="time">{{time}}</span><span class="italic">{{{message}}}</span></p>{{#if seenAgents}}<p class="ticket-seen"><i class="fa fa-circle"></i>Seen by {{seenAgents}}</p>{{/if}}</div>');
		this.imageAttachmentBlock = Handlebars.compile('<li class="attachment-image-content"><div class="attachment-preview"><img class="uploaded-image" src="{{downloadUrl}}" /></div><p><a class="download-file" href="{{downloadUrl}}" title="' + languageParser.translate("generic", "download_file") + '" target="_blank">{{fName}}</a>{{formattedFileSize}}&nbsp;<span style="text-transform: uppercase">{{type}}</span></p></li>');
		this.audioAttachmentBlock = Handlebars.compile('<li class="attachment-other-content"><div><audio controls><source src="{{downloadUrl}}" type="{{mime}}"></source></audio><p><a class="download-file" href="{{downloadUrl}}" title="' +
			languageParser.translate("generic", "download_file") + '" target="_blank">{{fName}}</a>{{formattedFileSize}}&nbsp;<span style="text-transform: uppercase">{{type}}</span></a></div></li>');
		this.videoAttachmentBlock = Handlebars.compile('<li class="attachment-other-content"><div><video controls><source src="{{downloadUrl}}" type="{{mime}}"></source></video><p><a class="download-file" href="{{downloadUrl}}" title="' + languageParser.translate("generic", "download_file") + '" target="_blank">{{fName}}</a>{{formattedFileSize}}&nbsp;<span style="text-transform: uppercase">{{type}}</span></p></li>');
		this.otherAttachmentBlock = Handlebars.compile('<li class="attachment-other-content"><i class="fa fa-file-text-o"></i>&nbsp;<p><a class="download-file" href="{{downloadUrl}}" title="' + languageParser.translate("generic", "download_file") + '" target="_blank">{{fName}}</a>{{formattedFileSize}}&nbsp;<span style="text-transform: uppercase">{{type}}</span></p></li>')
	};
	TicketProcess.prototype.processEvents = function (a, c, d, b) {
		var e, f, g, h = this, k = [], l = [], m = {}, n = 0;
		d && d.length && d.forEach(function (a) {
			a.aId !== Tawk.userController.user.id &&
			(m[a.eoId] || (m[a.eoId] = []), m[a.eoId].push(a.aId))
		});
		k = a.filterProperty("event.op", "ticket-reply");
		e = k[k.length - 1];
		f = k[k.length - 2];
		n = k.length;
		if (b && b.message) {
			d = conversationProcess.parseText(encodeStr(b.message));
			var k = this.processAttachments(b.attachments || []), p;
			"agent" === b.creatorType && (d = this.highlightName(d));
			if (m[0]) {
				var q = Tawk.agentsController.getAgentsName(m[0]);
				q && 1 < q.length ? (p = q.slice(0, q.length - 1).join(", "), p += " & " + q[q.length - 1]) : p = q[0];
				p = decodeStr(p)
			}
			block = $(h.firstMessageBlock({
				message: d,
				wroteTime: b.wroteTime, creator: b.creator, attachments: k, seenAgents: p
			}));
			0 < n && block.addClass("single-line");
			l.pushObject(block[0].outerHTML)
		}
		a && a.length && a.forEach(function (a, b) {
			var d, k, p = "", q = h.processAttachments(a.event.attch || []);
			d = formatDate(a.event.co);
			m[a.order] && ((p = Tawk.agentsController.getAgentsName(m[a.order])) && 1 < p.length ? (k = p.slice(0, p.length - 1).join(", "), k += " & " + p[p.length - 1]) : k = p[0], k = decodeStr(k));
			if ("ticket-reply" === a.event.op) p = conversationProcess.parseText(encodeStr(a.event.data.msg)),
				"agent" === a.event.crtrT ? (p = h.highlightName(p), d = $(h.agentBlockTemplate({
					message: p,
					time: d,
					name: Tawk.agentsController.getName(a.event.crtrId),
					attachments: q,
					isPrivate: a.event.data.private,
					seenAgents: k
				}))) : d = $(h.visitorBlockTemplate({
					message: p,
					time: d,
					name: a.event.crtrN,
					isEmail: a.event.cbe,
					attachments: q,
					seenAgents: k
				})); else {
				p = h.processUpdateEvent(a.event, c);
				if (!p) return;
				d = $(h.notificationBlockTemplate({message: p, time: d, seenAgents: k}))
			}
			0 < n && a !== e && (4 >= n ? d.addClass("single-line") : a === f ? (d.addClass("single-line"),
				g = !0, l.pushObject('<div class="ticket-block single-line hidden-messages"><div class="line"></div><div class="line"></div><p>' + (n - 2) + " older messages</p></div>")) : g || d.addClass("no-line"));
			l.pushObject(d[0].outerHTML)
		});
		return l
	};
	TicketProcess.prototype.processUpdateEvent = function (a, c) {
		var d, b;
		b = "agent" === a.crtrT ? Tawk.agentsController.getName(a.crtrId) : a.crtrN;
		"ticket-deleted" === a.op ? d = languageParser.translate("conversations", "deleted_ticket", {name: b}) : "ticket-change-spam" === a.op ? d = a.data.spam ? languageParser.translate("conversations",
			"spammed_ticket", {name: b}) : languageParser.translate("conversations", "unspam_ticket", {name: b}) : "ticket-assigned" === a.op ? (d = "agent" === a.data.assgnT ? Tawk.agentsController.getName(a.data.assgnId) : a.data.assgnN, d = languageParser.translate("conversations", "assigned_ticket", {
			name: b,
			assignee: d
		})) : "ticket-change-priority" === a.op ? d = languageParser.translate("conversations", "changed_priority", {
			name: b,
			priority: priorityType[a.data.p]
		}) : "ticket-change-status" === a.op ? d = languageParser.translate("conversations", "changed_status",
			{
				name: b,
				status: statusType[a.data.s]
			}) : "ticket-restored" === a.op ? d = languageParser.translate("conversations", "restored_ticket", {name: b}) : "ticket-unassigned" === a.op && (d = "system" === a.crtrT ? languageParser.translate("conversations", "system_unassign") : languageParser.translate("conversations", "unassigned_ticket", {name: b}));
		return d
	};
	TicketProcess.prototype.highlightName = function (a) {
		var c = a.match(this.tagRegex);
		null !== c && c.forEach(function (c) {
			var b = c.substring(2, c.length - 1).split(":");
			a = a.replace(c, '<span class="highlight">' +
				b[1] + "</span>")
		});
		return a
	};
	TicketProcess.prototype.processAttachments = function (a) {
		var c = this, d = [], b = [], e = [], f = [];
		a.forEach(function (a) {
			a.formattedFileSize = formatFileSize(a.size);
			a.downloadUrl = GLOBAL_FILE_STORAGE_URL + "/" + a.name;
			-1 !== ["jpeg", "png", "gif", "jpg"].indexOf(a.type) && 2E6 >= a.size ? d.push(c.imageAttachmentBlock(a)) : -1 !== ["video/mp4", "video/ogg", "video/webm"].indexOf(a.mime) ? e.push(c.videoAttachmentBlock(a)) : -1 !== ["audio/mp3", "audio/ogg"].indexOf(a.mime) ? b.push(c.audioAttachmentBlock(a)) : f.push(c.otherAttachmentBlock(a))
		});
		return d.join("") + b.join("") + e.join("") + f.join("")
	};
	var ticketProcess = new TicketProcess;
	Tawk.RestApiKeysController = Ember.Controller.extend(Tawk.IAdminSubViewController, {
		keyList: null, list: null, loadList: function () {
			var a = this;
			this.set("list", []);
			Tawk.routing.titlePath.subviewName = "Rest API Keys";
			Tawk.routing.setTitle();
			socketConnector.getRestApiKeyList(function (c, d) {
				if (!c) {
					for (var b = 0; b < d.data.length; b++) d.data[b].formattedDate = moment(d.data[b].created).format("DD/MMM/YYYY");
					a.set("list", d.data)
				}
			})
		},
		createKey: function (a) {
			var c = this;
			a = a || function () {
			};
			socketConnector.createRestApiKey(function (d, b) {
				if (d || !b.ok) return a(!0);
				c.list.pushObject({key: b.data.key, formattedDate: moment().format("DD/MMM/YYYY")});
				a()
			})
		}, revokeKey: function (a, c) {
			var d, b = this;
			c = c || function () {
			};
			d = this.list.findProperty("key", a);
			if (!d) return c(!0, "Unable to find api key.");
			socketConnector.revokeRestApiKey(a, function (a, f) {
				if (a || !f.ok) return c(!0);
				if (!f.found) return c(!0, "Unable to find api key.");
				b.list.removeObject(d);
				c()
			})
		}, closeView: function () {
			return !0
		},
		saveLastSubView: function () {
		}
	});
	Tawk.AccountController = Ember.Controller.extend({
		activeProperty: null, isLoading: null, init: function () {
			this.set("aliasController", Tawk.AliasesController.create());
			this.set("shortcutsController", Tawk.shortcutsController);
			this.set("banController", Tawk.BanController.create());
			this.set("pageContentController", Tawk.PageContentController.create());
			this.set("widgetsController", Tawk.WidgetsController.create());
			this.set("tabsController", Tawk.TabsController.create());
			this.set("restApiKeysController",
				Tawk.RestApiKeysController.create())
		}, openProperty: function (a) {
			var c, d = this, b = Tawk.webProperties.pages.findProperty("type", "profile");
			a = a || function () {
			};
			this.set("isLoading", !0);
			b && (c = Tawk.PropertyModel.create(), c.initialize(b), Tawk.webProperties.getPropertyInformation(b.id, function (b, f) {
				if (b) return a(b);
				c.loadSettings(f);
				c.set("isPersonal", !0);
				c.set("personalInfo", Tawk.userController.user);
				c.set("shareFbLink", "https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(c.siteLink));
				c.set("shareTwLink",
					"https://twitter.com/share?url=" + encodeURIComponent(c.siteLink));
				d.set("activeProperty", c);
				d.widgetsController.openProperty(c);
				d.openPage();
				d.set("isLoading", !1);
				a()
			}))
		}, openShortcutsList: function (a, c) {
			this.activeProperty && this.shortcutsController.openProperty(this.activeProperty, a, c)
		}, openBanList: function (a) {
			this.activeProperty && this.banController.openProperty(this.activeProperty, a)
		}, openPage: function () {
			this.activeProperty && this.pageContentController.openProperty(this.activeProperty)
		}, openTabs: function () {
			this.activeProperty &&
			this.tabsController.openProperty(this.activeProperty)
		}, openApiList: function () {
			Tawk.userController.canCreateApiKey && this.restApiKeysController.loadList()
		}, closeView: function () {
		}
	});
	Tawk.ReportingController = Ember.Controller.extend({
		activeProperty: null,
		siteListBinding: Ember.Binding.oneWay("Tawk.webProperties.sites"),
		pageListBinding: Ember.Binding.oneWay("Tawk.webProperties.pages"),
		isLoading: null,
		graphData: null,
		propertyTags: null,
		propertyAgents: null,
		propertyDepartments: null,
		currentAnalytics: null,
		currentAnalyticsError: null,
		filters: null,
		graphLoaded: null,
		label: null,
		tableData: null,
		timeFrame: null,
		showFrameTimeTool: !1,
		showMonthSelector: !1,
		timeFrameDataList: null,
		timeZone: (new Date).getTimezoneOffset(),
		initializeView: function () {
			var a = new Date, c = new Date(a.getFullYear(), a.getMonth(), a.getDate() - 6);
			this.set("propertyTags", []);
			this.set("propertyAgents", []);
			this.set("propertyDepartments", []);
			this.set("timeFrameDataList", []);
			for (var d = 0; 12 > d; d++) this.timeFrameDataList.pushObject(Ember.Object.create({
				id: d, text: moment(new Date(a.getFullYear(),
					d, 1)).format("MMMM"), enabled: !1
			}));
			this.resetTimeFrameData();
			this.set("label", "chat_volume");
			this.set("timeFrame", "custom");
			this.set("graphData", Ember.Object.create());
			this.set("filters", Ember.Object.create({
				agentId: null,
				departmentId: null,
				tag: null,
				startDate: c,
				endDate: a
			}));
			this.set("currentAnalytics", "getChatVolume");
			this.siteList.length ? this.openProperty(this.siteList[0].id, "site") : this.pageList.length && this.openProperty(this.pageList[0].id, "page")
		},
		resetTimeFrameData: function () {
			var a = new Date;
			this.timeFrameDataList.forEach(function (c) {
				a <
				new Date(a.getFullYear(), c.id + 1, 0) ? c.set("enabled", !1) : c.set("enabled", !0)
			});
			this.timeFrameDataList[a.getMonth()].enabled = !0
		},
		clearData: function () {
			this.set("propertyTags", null);
			this.set("propertyAgents", null);
			this.set("propertyDepartments", null);
			this.set("currentAnalytics", null);
			this.set("graphData", null);
			this.set("filters", null)
		},
		loadAvailableTags: function (a) {
			var c = this, d = [];
			a = a || function () {
			};
			if (!this.activeProperty) return a();
			this.propertyTags.clear();
			socketConnector.getTags(this.activeProperty.id,
				function (b, e) {
					if (b) return a();
					e.tags.length && (e.tags.forEach(function (a) {
						d.pushObject(decodeStr(a))
					}), c.set("propertyTags", d.sort()));
					a()
				})
		},
		openProperty: function (a, c, d) {
			var b, e = this, f = [], g = [], h = !1, k = !1;
			d = function () {
				e.getData()
			};
			"site" === c ? b = this.siteList.findProperty("id", a) : "page" === c && (b = this.pageList.findProperty("id", a));
			b && (Tawk.userController.user.isHiredAgent && (h = !0), this.set("isLoading", !0), this.propertyAgents.clear(), this.propertyDepartments.clear(), this.set("activeProperty", b), this.filters.setProperties({
				agentId: null,
				departmentId: null, tag: null
			}), b.currentAgents.forEach(function (a) {
				a.en && (!h && a.ha ? k = !0 : f.pushObject(Ember.Object.create({
					id: a.aid,
					name: decodeStr(Tawk.agentsController.getName(a.aid))
				})))
			}), k && f.pushObject(Ember.Object.create({
				id: "hired_agent",
				name: "Hired Agents"
			})), b.departments && Object.keys(b.departments).forEach(function (a) {
				a = b.departments[a];
				a.en && g.pushObject(Ember.Object.create({id: a.did, name: decodeStr(a.n)}))
			}), this.propertyAgents.pushObjects(sortList(f, "name")), this.propertyDepartments.pushObjects(sortList(g,
				"name")), this.loadAvailableTags(d))
		},
		getAnalyticsData: function (a, c) {
			var d = 36E5 * (this.timeZone / 60),
				b = Date.UTC(this.filters.startDate.getFullYear(), this.filters.startDate.getMonth(), this.filters.startDate.getDate()) + d,
				d = "day" === this.timeFrame ? b + 864E5 : Date.UTC(this.filters.endDate.getFullYear(), this.filters.endDate.getMonth(), this.filters.endDate.getDate()) + (864E5 - 1) + d,
				b = {
					agents: this.filters.agentId,
					departments: this.filters.departmentId,
					tags: this.filters.tag,
					startTime: new Date(b),
					endTime: new Date(d),
					bucketSize: "day" === this.timeFrame ? "hour" : null,
					timezone: -1 * this.timeZone
				};
			if (!this.activeProperty) return c(!0);
			this.set("currentAnalyticsError", !1);
			this.set("graphLoaded", !1);
			socketConnector[a](this.activeProperty.id, b, c)
		},
		changeCurrentAnalytics: function (a) {
			var c = function () {
			};
			a && (this.set("currentAnalytics", a), this.getData(c))
		},
		timeFrameChanged: function () {
			this.timeFrame && ("custom" === this.timeFrame ? this.set("showFrameTimeTool", !1) : this.set("showFrameTimeTool", !0), "month" === this.timeFrame ? this.set("showMonthSelector",
				!0) : this.set("showMonthSelector", !1))
		}.observes("timeFrame"),
		getData: function (a) {
			var c = this;
			a = a || function () {
			};
			if (!this.activeProperty || !this.currentAnalytics) return a(!0);
			c.set("isLoading", !0);
			this.getAnalyticsData(c.currentAnalytics, function (d, b) {
				c.set("isLoading", !1);
				if (d) return c.set("currentAnalyticsError", !0), a(!0);
				if (c.timeZone) for (var e = 0; e < b.length; e++) b[e].key += 6E4 * -c.timeZone;
				c.parseData(b);
				a()
			})
		},
		parseData: function (a) {
			var c = [], d = [], b = [];
			if ("getChatVolume" === this.currentAnalytics || "getTicketVolume" ===
				this.currentAnalytics || "getSolvedTickets" === this.currentAnalytics) "getChatVolume" === this.currentAnalytics ? (c = languageParser.translate("reporting", "chat_volume"), d = languageParser.translate("reporting", "chat_volume_tooltip", {
				date: "<strong>%x</strong>",
				value: "<strong>%y</strong>",
				lineBreak: "<br />"
			})) : "getTicketVolume" === this.currentAnalytics ? (c = languageParser.translate("reporting", "volume_new_tickets"), d = languageParser.translate("reporting", "ticket_volume_tooltip", {
				date: "<strong>%x</strong>", value: "<strong>%y</strong>",
				lineBreak: "<br />"
			})) : (c = languageParser.translate("reporting", "solved_tickets"), d = languageParser.translate("reporting", "solved_tickets_tooltip", {
				date: "<strong>%x</strong>",
				value: "<strong>%y</strong>",
				lineBreak: "<br />",
				strongStart: "<strong>",
				strongEnd: "</strong>"
			})), b = this.orderData(a, null, ["doc_count"]), d = c = [{
				data: b,
				label: c,
				lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
				color: "#71a06a",
				points: {exists: !0, show: !0},
				tooltipContent: d,
				idx: 0
			}]; else if ("getMissedChatVolume" === this.currentAnalytics) {
				b = {
					missed: this.orderData(a,
						null, ["doc_count"]), offline: this.orderData(a, "offline", ["doc_count"]).doc_count
				};
				for (a = 0; a < b.missed.length; a++) b.missed[a][1] -= b.offline[a][1];
				d = c = [{
					data: b.missed,
					label: languageParser.translate("analytics", "missed_chats"),
					lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
					points: {exists: !0, show: !0},
					tooltipContent: languageParser.translate("reporting", "missed_chat_tooltip", {
						date: "<strong>%x</strong>",
						value: "<strong>%y</strong>",
						lineBreak: "<br />"
					}),
					idx: 0
				}, {
					data: b.offline,
					label: languageParser.translate("analytics",
						"offline_messages"),
					lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
					points: {exists: !0, show: !0},
					tooltipContent: languageParser.translate("reporting", "offline_message_tooltip", {
						date: "<strong>%x</strong>",
						value: "<strong>%y</strong>",
						lineBreak: "<br />"
					}),
					idx: 1
				}]
			} else "getChatDuration" === this.currentAnalytics ? (b = this.orderData(a, "stats", ["avg", "max", "min", "sum"]), c = [{
				data: this.getValueToMinutes(b.min),
				label: languageParser.translate("generic", "shortest"),
				lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
				points: {
					exists: !0,
					show: !0
				},
				tooltipContent: languageParser.translate("reporting", "min_duration_tooltip", {
					date: "<strong>%x</strong>",
					value: "<strong>%y</strong>",
					lineBreak: "<br />",
					strongStart: "<strong>",
					strongEnd: "</strong>"
				}),
				idx: 0
			}, {
				data: this.getValueToMinutes(b.avg),
				label: languageParser.translate("reporting", "average"),
				lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
				points: {exists: !0, show: !0},
				tooltipContent: languageParser.translate("reporting", "average_duration_tooltip", {
					date: "<strong>%x</strong>", value: "<strong>%y</strong>",
					lineBreak: "<br />", strongStart: "<strong>", strongEnd: "</strong>"
				}),
				idx: 1
			}, {
				data: this.getValueToMinutes(b.max),
				label: languageParser.translate("generic", "longest"),
				lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
				points: {exists: !0, show: !0},
				tooltipContent: languageParser.translate("reporting", "max_duration_tooltip", {
					date: "<strong>%x</strong>",
					value: "<strong>%y</strong>",
					lineBreak: "<br />",
					strongStart: "<strong>",
					strongEnd: "</strong>"
				}),
				idx: 2
			}], d = [{
				data: this.formatTimeData(b.min), label: languageParser.translate("generic",
					"shortest")
			}, {
				data: this.formatTimeData(b.avg),
				label: languageParser.translate("reporting", "average")
			}, {
				data: this.formatTimeData(b.max),
				label: languageParser.translate("generic", "longest")
			}, {
				data: this.formatTimeData(b.sum),
				label: languageParser.translate("reporting", "sum")
			}]) : "getChatWaitTime" === this.currentAnalytics || "getTicketFirstTimeResponse" === this.currentAnalytics ? (b = this.orderData(a, "stats", ["avg", "max", "min"]), c = [{
				data: this.getValueToMinutes(b.min),
				label: languageParser.translate("generic", "shortest"),
				lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
				points: {exists: !0, show: !0},
				tooltipContent: languageParser.translate("reporting", "min_wait_time_tooltip", {
					date: "<strong>%x</strong>",
					value: "<strong>%y</strong>",
					lineBreak: "<br />",
					strongStart: "<strong>",
					strongEnd: "</strong>"
				}),
				idx: 0
			}, {
				data: this.getValueToMinutes(b.avg),
				label: languageParser.translate("reporting", "average"),
				lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
				points: {exists: !0, show: !0},
				tooltipContent: languageParser.translate("reporting", "average_wait_time_tooltip",
					{
						date: "<strong>%x</strong>",
						value: "<strong>%y</strong>",
						lineBreak: "<br />",
						strongStart: "<strong>",
						strongEnd: "</strong>"
					}),
				idx: 1
			}, {
				data: this.getValueToMinutes(b.max),
				label: languageParser.translate("generic", "longest"),
				lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
				points: {exists: !0, show: !0},
				tooltipContent: languageParser.translate("reporting", "max_wait_time_tooltip", {
					date: "<strong>%x</strong>",
					value: "<strong>%y</strong>",
					lineBreak: "<br />",
					strongStart: "<strong>",
					strongEnd: "</strong>"
				}),
				idx: 2
			}], d = [{
				data: this.formatTimeData(b.min),
				label: languageParser.translate("generic", "shortest")
			}, {
				data: this.formatTimeData(b.avg),
				label: languageParser.translate("reporting", "average")
			}, {
				data: this.formatTimeData(b.max),
				label: languageParser.translate("generic", "longest")
			}]) : "getChatSatisfaction" === this.currentAnalytics ? (b = this.orderData(a, "satisfaction", ["positive", "negative", "neutral"]), c = [{
				data: b.negative,
				label: languageParser.translate("reporting", "negative"),
				bars: {exists: !0, show: !0, barWidth: 258E5, fill: !0, lineWidth: 2, order: 1},
				color: "#931313",
				tooltipContent: languageParser.translate("reporting", "negative_satisfaction_tooltip", {
					date: "<strong>%x</strong>",
					value: "<strong>%y</strong>",
					lineBreak: "<br />",
					strongStart: "<strong>",
					strongEnd: "</strong>"
				}),
				idx: 0
			}, {
				data: b.positive,
				label: languageParser.translate("reporting", "positive"),
				bars: {exists: !0, show: !0, barWidth: 258E5, fill: !0, lineWidth: 2, order: 2},
				color: "#71a06a",
				tooltipContent: languageParser.translate("reporting", "positive_satisfaction_tooltip", {
					date: "<strong>%x</strong>", value: "<strong>%y</strong>",
					lineBreak: "<br />", strongStart: "<strong>", strongEnd: "</strong>"
				}),
				idx: 1
			}], d = [{data: b.negative, label: languageParser.translate("reporting", "negative")}, {
				data: b.neutral,
				label: languageParser.translate("reporting", "neutral")
			}, {
				data: b.positive,
				label: languageParser.translate("reporting", "positive")
			}]) : "getTicketSource" === this.currentAnalytics ? (b = this.orderData(a, "source", ["chat", "email", "agent"]), d = c = [{
				data: b.chat,
				label: languageParser.translate("generic", "chat"),
				lines: {exists: !0, show: !0, lineWidth: 2},
				points: {
					exists: !0,
					show: !0
				},
				tooltipContent: languageParser.translate("reporting", "ticket_source_chat_tooltip", {
					date: "<strong>%x</strong>",
					value: "<strong>%y</strong>",
					lineBreak: "<br />",
					strongStart: "<strong>",
					strongEnd: "</strong>"
				}),
				idx: 0
			}, {
				data: b.email,
				label: languageParser.translate("generic", "email"),
				lines: {exists: !0, show: !0, lineWidth: 2},
				points: {exists: !0, show: !0},
				tooltipContent: languageParser.translate("reporting", "ticket_source_email_tooltip", {
					date: "<strong>%x</strong>", value: "<strong>%y</strong>", lineBreak: "<br />",
					strongStart: "<strong>", strongEnd: "</strong>"
				}),
				idx: 1
			}, {
				data: b.agent,
				label: languageParser.translate("generic", "agent"),
				lines: {exists: !0, show: !0, lineWidth: 2},
				points: {exists: !0, show: !0},
				tooltipContent: languageParser.translate("reporting", "ticket_source_agent_tooltip", {
					date: "<strong>%x</strong>",
					value: "<strong>%y</strong>",
					lineBreak: "<br />",
					strongStart: "<strong>",
					strongEnd: "</strong>"
				}),
				idx: 2
			}]) : "getTicketResolutionTime" === this.currentAnalytics ? (b = this.orderData(a, "stats", ["min", "avg", "max", "sum"]),
				c = [{
					data: this.getValueToMinutes(b.min),
					label: languageParser.translate("generic", "shortest"),
					lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
					points: {exists: !0, show: !0},
					tooltipContent: languageParser.translate("reporting", "ticket_resolution_min_time_tooltip", {
						date: "<strong>%x</strong>",
						value: "<strong>%y</strong>",
						lineBreak: "<br />",
						strongStart: "<strong>",
						strongEnd: "</strong>"
					}),
					idx: 0
				}, {
					data: this.getValueToMinutes(b.avg),
					label: languageParser.translate("reporting", "average"),
					lines: {
						exists: !0, show: !0, lineWidth: 2,
						fill: !0
					},
					points: {exists: !0, show: !0},
					tooltipContent: languageParser.translate("reporting", "ticket_resolution_average_time_tooltip", {
						date: "<strong>%x</strong>",
						value: "<strong>%y</strong>",
						lineBreak: "<br />",
						strongStart: "<strong>",
						strongEnd: "</strong>"
					}),
					idx: 1
				}, {
					data: this.getValueToMinutes(b.max),
					label: languageParser.translate("generic", "longest"),
					lines: {exists: !0, show: !0, lineWidth: 2, fill: !0},
					points: {exists: !0, show: !0},
					tooltipContent: languageParser.translate("reporting", "ticket_resolution_max_time_tooltip",
						{
							date: "<strong>%x</strong>",
							value: "<strong>%y</strong>",
							lineBreak: "<br />",
							strongStart: "<strong>",
							strongEnd: "</strong>"
						}),
					idx: 2
				}], d = [{
				data: this.formatTimeData(b.min),
				label: languageParser.translate("generic", "shortest")
			}, {
				data: this.formatTimeData(b.avg),
				label: languageParser.translate("reporting", "average")
			}, {
				data: this.formatTimeData(b.max),
				label: languageParser.translate("generic", "longest")
			}, {
				data: this.formatTimeData(b.sum),
				label: languageParser.translate("reporting", "sum")
			}]) : "getTicketReopened" ===
				this.currentAnalytics && (b = this.orderData(a, "reopenedBy", ["agent", "user"]), d = c = [{
					data: b.agent,
					label: languageParser.translate("reporting", "by_agent"),
					bars: {exists: !0, show: !0, barWidth: 258E5, fill: !0, lineWidth: 2, order: 1},
					tooltipContent: languageParser.translate("reporting", "ticket_reopened_agent_tooltip", {
						date: "<strong>%x</strong>",
						value: "<strong>%y</strong>",
						lineBreak: "<br />",
						strongStart: "<strong>",
						strongEnd: "</strong>"
					}),
					idx: 0
				}, {
					data: b.user,
					label: languageParser.translate("reporting", "by_user"),
					bars: {
						exists: !0,
						show: !0, barWidth: 258E5, fill: !0, lineWidth: 2, order: 2
					},
					tooltipContent: languageParser.translate("reporting", "ticket_reopened_user_tooltip", {
						date: "<strong>%x</strong>",
						value: "<strong>%y</strong>",
						lineBreak: "<br />",
						strongStart: "<strong>",
						strongEnd: "</strong>"
					}),
					idx: 1
				}]);
			this.graphData && (this.graphData.set("data", c), this.formatTableData(d));
			this.set("graphLoaded", !0)
		},
		getValueToMinutes: function (a) {
			var c = [];
			a.forEach(function (a) {
				c.push([a[0], a[1] / 60])
			});
			return c
		},
		formatTimeData: function (a) {
			var c = [], d = null,
				b = "getTicketFirstTimeResponse" === this.currentAnalytics || "getTicketResolutionTime" === this.currentAnalytics,
				e, f;
			a.forEach(function (a) {
				a[1] ? (e = moment.duration(a[1], "seconds"), f = Math.floor(e.asHours()), d = 10 > f ? "0" + f + moment.utc(e.asMilliseconds()).format(":mm:ss") : 24 > f && 10 <= f ? f + moment.utc(e.asMilliseconds()).format(":mm:ss") : b ? languageParser.translate("reporting", "days", {num: Math.floor(f / 24)}) : f + moment.utc(e.asMilliseconds()).format(":mm:ss")) : d = "-";
				c.pushObject([a[0], d])
			});
			return c
		},
		orderData: function (a,
		                     c, d) {
			var b = {};
			c ? a.forEach(function (a) {
				d.forEach(function (d) {
					void 0 === b[d] && (b[d] = []);
					b[d].pushObject([a.key, a[c][d]])
				})
			}) : (b = [], a.forEach(function (a) {
				d.forEach(function (c) {
					b.pushObject([a.key, a[c]])
				})
			}));
			return b
		},
		applyFilters: function (a, c) {
			this.filters.setProperties({
				agentId: a.agentId,
				departmentId: a.departmentId,
				tag: a.tagId,
				startDate: a.startDate,
				endDate: a.endDate
			});
			"hired_agent" === a.agentId ? this.filters.set("agentId", Tawk.webProperties.getHiredAgentsIds(this.activeProperty.id)) : this.filters.set("agentId",
				a.agentId);
			this.getData(c)
		},
		resetFilters: function (a) {
			var c = new Date, c = new Date(c.getFullYear(), c.getMonth(), c.getDate() - 1),
				d = new Date(c.getFullYear(), c.getMonth(), c.getDate() - 6);
			this.filters.setProperties({agentId: null, departmentId: null, tag: null, startDate: d, endDate: c});
			this.set("timeFrame", "custom");
			this.getData(a)
		},
		formatTableData: function (a) {
			var c = {header: [], values: []}, d = [];
			for (i = 0; i < a[0].data.length; i++) {
				if (!i) for (c.header.push(languageParser.translate("placeholders", "dates")), j = 0; j < a.length; j++) c.header.push(a[j].label);
				d = [];
				for (j = 0; j < a.length; j++) j || (date = new Date(a[j].data[i][0] + 6E4 * this.timeZone), "day" === this.timeFrame ? d.push(moment(date).format("D/MMM/YYYY - ha")) : d.push(moment(date).format("D/MMM/YYYY"))), d.push(a[j].data[i][1] || "-");
				c.values.push(d)
			}
			this.set("tableData", c)
		},
		isSelectAgentDisabled: function () {
			return "getMissedChatVolume" === this.currentAnalytics || "getTicketVolume" === this.currentAnalytics ? !0 : !1
		}.property("currentAnalytics")
	});
	Tawk.LeaderboardController = Ember.Controller.extend({
		tableData: null, filters: null,
		isLoading: null, isReversed: null, isTableDataEmpty: null, clientProperties: function () {
			return Tawk.webProperties.sites.filterProperty("isClientProperty", !0)
		}.property("Tawk.webProperties.sites.@each"), getAgentStatistics: function (a) {
			var c = this;
			this.set("isLoading", !0);
			this.set("isTableDataEmpty", !1);
			null === this.filters && this.set("filters", {
				propertyId: void 0,
				startTime: moment.utc().startOf("day").subtract(6, "days"),
				endTime: moment.utc()
			});
			socketConnector.agentStatistics(this.get("filters"), function (d, b) {
				var e,
					f, g, h;
				c.set("isReversed", !1);
				c.set("tableData", null);
				if (d) {
					c.set("isLoading", !1);
					switch (d.code) {
						case "InternalServerError":
							e = languageParser.translate("generic", "internal_server_error");
							break;
						case "UnauthorizedError":
							e = languageParser.translate("generic", "unauthorized_error");
							break;
						case "InvalidArgument":
							e = "INVALID_PROPERTY_ID" === d.message ? languageParser.translate("leaderboard", "invalid_argument_property") : languageParser.translate("leaderboard", "invalid_argument_date");
							break;
						default:
							e = "Unable to retrieve list. Please try again."
					}
					return a(!0,
						e)
				}
				f = function () {
					g++;
					g >= h && (c.set("isLoading", !1), c.set("tableData", b.data));
					return a(null)
				};
				b && b.data && (h = b.data.length, g = 0, c.set("isTableDataEmpty", !b.data.length), b.data.length ? b.data.forEach(function (a, b) {
					a.chatsPerHour = (a.chats / Math.ceil(a.hours)).toFixed(2);
					a.agentName = Tawk.agentsController.getName(a.agentId);
					a.index = b + 1;
					0 == b && (a.isFirst = !0);
					a.agentName ? f() : socketConnector.getAgentName({id: a.agentId}, function (b, c) {
						a.agentName = b ? "-" : c.name;
						f()
					})
				}) : f())
			})
		}, applyFilters: function (a, c) {
			this.set("filters",
				{propertyId: a.propertyId, startTime: a.startTime, endTime: a.endTime});
			this.getAgentStatistics(c)
		}, toggleSort: function () {
			var a = this.get("tableData");
			a && (a = a.reverse().slice());
			this.set("tableData", a);
			this.set("isReversed", this.isReversed ? !1 : !0)
		}, clearData: function () {
			this.set("filters", null)
		}
	});
	Tawk.ViewBase = Ember.Mixin.create({
		heightPerRow: 35, disablePrevious: function () {
			"inDOM" === this._state && this.$("#prev-page").length && (this.controller.previousDisabled ? this.$("#prev-page").addClass("disabled") : this.$("#prev-page").removeClass("disabled"))
		}.observes("controller.previousDisabled"),
		disableNext: function () {
			"inDOM" === this._state && this.$("#next-page").length && (this.controller.nextDisabled ? this.$("#next-page").addClass("disabled") : this.$("#next-page").removeClass("disabled"))
		}.observes("controller.nextDisabled"), setMaxPerpage: function () {
			var a = this.$("thead").height(),
				a = this.$(".innerContent").height() - this.$(".jarviswidget header").height() - (a ? a : 34) - 47;
			this.controller.set("perpage", Math.floor(a / this.heightPerRow))
		}, willDestroyElement: function () {
			this.$(".innerContent").unbind("scroll.viewscroll")
		},
		didInsertElement: function () {
			var a = this;
			this.disablePrevious();
			this.disableNext();
			this.setMaxPerpage();
			addPlaceholderSupport(this.$());
			this.$(".innerContent").bind("scroll.viewscroll", function () {
				0 !== $(this).scrollTop() ? $("#back-top").hasClass("hidden") && $("#back-top").removeClass("hidden") : $("#back-top").addClass("hidden")
			});
			$(window).resize(function () {
				"inDOM" === a._state && a.setMaxPerpage()
			})
		}
	});
	Tawk.ModalViewBase = Ember.Mixin.create({
		classNames: ["modal"],
		attributeBindings: ["tabindex:tabindex", "role:role",
			"labelledby:aria-labelledby", "ariahidden:aria-hidden"],
		tabindex: "-1",
		role: "dialog",
		ariahidden: "true",
		maxBodyHeight: 0,
		modalPadding: 60,
		didInsertElement: function () {
			var a = this;
			addPlaceholderSupport(this.$());
			this.$().on("shown.bs.modal", function (c) {
				a.resizeView()
			});
			this.$().on("hidden.bs.modal", function (c) {
				a.validator && a.validator.resetForm();
				a.$(".alert").remove();
				a.$(".state-error").removeClass("state-error");
				a.$(".state-success").removeClass("state-success")
			});
			$(window).bind("resize.Model", function () {
				a.resizeView()
			});
			this.openView()
		},
		willDestroyElement: function () {
			var a = $("#unsaved-alert");
			a.length && a.remove();
			$(window).unbind("resize.Model")
		},
		resizeView: function () {
			var a, c;
			this.$() && (a = this.$().height(), c = this.$(".modal-dialog"), "none" !== c.css("max-height") && (a = c.height()), this.set("maxBodyHeight", a - this.$(".modal-header").outerHeight(!0) - this.$(".modal-footer").outerHeight(!0) - this.modalPadding), this.$(".modal-body").css("max-height", this.maxBodyHeight), c.css({
				"margin-top": -c.outerHeight() / 2 + "px", "margin-left": -c.outerWidth() /
				2 + "px"
			}))
		},
		openView: function () {
			"inDOM" === this._state && this.$().modal({backdrop: "static"})
		},
		saveComplete: function (a, c, d) {
			"inDOM" === this._state && (this.clearSaveMessages(), this.$(".modal-footer").append('<div class="alert ' + a + ' fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa ' + c + '"></i>' + d + "</div>"))
		},
		saveError: function (a) {
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "error_save"), this.saveComplete("alert-danger", "fa-ban", a))
		},
		saveSuccess: function (a) {
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "success_update"), this.saveComplete("alert-success", "fa-check", a))
		},
		clearSaveMessages: function () {
			"inDOM" === this._state && this.$(".alert").remove()
		}
	});
	Tawk.WidgetTabBaseView = Ember.Mixin.create({
		classNames: ["tab-pane fade in"],
		attributeBindings: ["role:role"],
		role: "tabpanel",
		validator: null,
		resetView: function () {
			this.$(".alert").remove();
			this.$(".state-error").removeClass("state-error");
			this.$(".state-success").removeClass("state-success");
			this.controller.resetWidget()
		},
		didInsertElement: function () {
			var a = this;
			addPlaceholderSupport(this.$());
			this.$().on("resetTab", function (c) {
				a.resetView();
				return !1
			})
		}
	});
	Tawk.ScheduledPropertiesHeaderView = Ember.View.extend({
		elementId: "scheduled-properties-list",
		tagName: "li",
		classNames: ["dropdown-submenu"],
		template: Ember.TEMPLATES.headerScheduledProperties,
		controller: Tawk.laScheduler,
		didInsertElement: function () {
			var a = this;
			$("body").bind("click.statusDropDown", function (c) {
				(a.$("#client-properties-container").is(c.target) ||
					0 < a.$("#client-properties-container").has(c.target).length) && c.stopPropagation()
			});
			this.$("#global-answer-status").change(function () {
				var c = $(this).is(":checked");
				a.controller.toggleGlobalAnswerStatus(c)
			});
			this.$().delegate(".notification-status", "change", function () {
				var c = $(this).attr("data-id"), d = $(this).is(":checked");
				a.controller.changePropertyAnswerStatus(d ? "auto" : "", c)
			});
			this.$().delegate(".property-status", "change", function () {
				var c = $(this).attr("data-id"), d = $(this).is(":checked");
				a.controller.changePropertyAnswerStatus(d ?
					"yes" : "no", c)
			})
		},
		willDestroyElement: function () {
			$("body").unbind("click.statusDropDown")
		}
	});
	Ember.Handlebars.helper("ScheduledPropertiesHeaderView", Tawk.ScheduledPropertiesHeaderView);
	Tawk.SchedulerPropertiesView = Ember.View.extend({
		elementId: "schedules-properties-list",
		template: Ember.TEMPLATES.schedulesProperties,
		controller: Tawk.laScheduler,
		prettifiedSchedule: null,
		didInsertElement: function () {
			var a = this;
			this.getPrettifiedSchedule();
			this.$("#schedule-property-select").change(function () {
				var c;
				c = $(this).val();
				if ("0" === c) a.prettifiedSchedule.setEach("isSelected", !0), a.$("#my-schedule").addClass("hidden"), a.$("#properties-schedule").removeClass("hidden"); else if ("mine" === c) a.$("#my-schedule").removeClass("hidden"), a.$("#properties-schedule").addClass("hidden"); else if ("247" === c) a.$("#my-schedule").addClass("hidden"), a.$("#properties-schedule").removeClass("hidden"), a.prettifiedSchedule.setEach("isSelected", !1), a.prettifiedSchedule.filterProperty("isFullTime", !0).setEach("isSelected", !0); else if ("not-fulltime" ===
					c) a.$("#my-schedule").addClass("hidden"), a.$("#properties-schedule").removeClass("hidden"), a.prettifiedSchedule.setEach("isSelected", !1), a.prettifiedSchedule.filterProperty("isFullTime", !1).setEach("isSelected", !0); else {
					if (c = a.prettifiedSchedule.findProperty("propertyId", c)) a.prettifiedSchedule.setEach("isSelected", !1), c.set("isSelected", !0);
					a.$("#my-schedule").addClass("hidden");
					a.$("#properties-schedule").removeClass("hidden")
				}
			});
			this.$().delegate(".refresh-property-time", "click", function () {
				a.setClockTime()
			})
		},
		getPrettifiedSchedule: function () {
			for (var a = [], c = moment.tz.guess(), d = [], b = {}, e = 0; 25 > e; e++) for (var f = 0; 46 > f;) b[60 * e + f] = {
				label: (10 > e ? "0" : "") + e + ":" + (10 > f ? "0" : "") + f,
				data: {0: [], 1: [], 2: [], 3: [], 4: [], 5: [], 6: []}
			}, f = 24 === e && 0 === f ? 46 : f + 15;
			for (e = 0; e < this.controller.propertiesSchedule.length; e++) {
				var g = this.controller.propertiesSchedule[e], f = moment.tz(g.timezone), h = Ember.Object.create({
					propertyName: g.property.propertyName,
					timezone: g.timezone,
					formattedTimezone: g.timezone + " " + f.format("Z z"),
					propertyTime: g.timezone ?
						f.format("HH:mm") : "-",
					propertyDay: g.timezone ? f.format("dddd") : "-",
					schedule: [],
					isFullTime: g.isFulltime,
					propertyId: g.property.id,
					isSelected: !0,
					isEnabled: g.isEnabled,
					purchasedHours: g.hoursPurchased
				});
				if (g.isFulltime && !Object.keys(g.schedule).length) for (var k in b) b[k].data["0"].push(g.property.propertyName), b[k].data["1"].push(g.property.propertyName), b[k].data["2"].push(g.property.propertyName), b[k].data["3"].push(g.property.propertyName), b[k].data["4"].push(g.property.propertyName), b[k].data["5"].push(g.property.propertyName),
					b[k].data["6"].push(g.property.propertyName); else for (var l in g.schedule) {
					var m = moment().locale("en").weekday(l).format("dddd"), n = g.schedule[l],
						p = {dayName: m, slots: [], isSelected: f.day() === parseInt(l, 10)};
					n.forEach(function (a) {
						p.slots.push((10 > a.startHour ? "0" : "") + a.startHour + ":" + (10 > a.startMinute ? "0" : "") + a.startMinute + " - " + ((10 > a.endHour ? "0" : "") + a.endHour + ":" + (10 > a.endMinute ? "0" : "") + a.endMinute));
						var d = moment.tz(g.timezone).days(l).hours(a.startHour).minutes(a.startMinute).seconds(0).milliseconds(0);
						a = moment.tz(g.timezone).days(l).hours(a.endHour).minutes(a.endMinute).seconds(0).milliseconds(0);
						d = d.clone().tz(c);
						a = a.clone().tz(c);
						d = 60 * d.hours() + d.minutes();
						a = 60 * a.hours() + a.minutes();
						for (d; d <= a;) b[d].data[l].push(g.property.propertyName), d += 15
					});
					h.schedule.pushObject(p)
				}
				a.pushObject(h)
			}
			for (l in b) d.push(b[l]);
			this.set("prettifiedSchedule", a);
			this.set("mySchedule", d);
			this.set("todayHighlight", "day-" + moment().days())
		}.observes("controller.propertiesSchedule.@each.schedule"),
		setClockTime: function () {
			for (var a =
				0; a < this.prettifiedSchedule.length; a++) {
				var c = this.prettifiedSchedule[a];
				c.timezone && c.set("propertyTime", moment.tz(c.timezone).format("HH:mm"))
			}
		}
	});
	Tawk.CustomSelectInterface = Ember.Mixin.create({
		tagName: "label", classNames: ["select", "custom-select"], originalSelection: null, setSelected: function () {
			var a;
			if (a = this.$("select")) a = a.find(":selected"), a.length && this.$(".selected-value").html(a.html())
		}, selectedValueChanged: function () {
			var a;
			"inDOM" === this._state && this.get("selectedValue") && ((a = this.$("select")) &&
			this.get("selectedValue") !== a.val() && a.val(this.get("selectedValue")), this.setSelected())
		}.observes("selectedValue", "options"), didInsertElement: function () {
			var a = this;
			this.set("originalSelection", this.get("selectedValue"));
			this.customClass && this.$().addClass(this.customClass);
			this.$("select").change(function () {
				a.set("selectedValue", $(this).val())
			});
			this.$().on("reset", this.setSelected.bind(this));
			setTimeout(function () {
				a.selectedValueChanged()
			}, 0)
		}, willDestroyElement: function () {
			this.$().off();
			this.$().html("");
			this.$().remove()
		}
	});
	Tawk.GenericSelection = Ember.View.extend(Tawk.CustomSelectInterface, {template: Ember.TEMPLATES.genericSelect});
	Tawk.WebPropertySelection = Ember.View.extend(Tawk.CustomSelectInterface, {
		classNames: ["select", "custom-select", "property-select"],
		template: Ember.TEMPLATES.webPropertySelect,
		sites: function () {
			return Tawk.webProperties.sites ? this.get("adminOnly") ? sortList(Tawk.webProperties.sites.filterProperty("enabled", !0).filterProperty("isAdmin", !0), "propertyName") : sortList(Tawk.webProperties.sites.filterProperty("enabled",
				!0), "propertyName") : []
		}.property("Tawk.webProperties.sites.@each"),
		pages: function () {
			return Tawk.webProperties.pages ? this.get("adminOnly") ? sortList(Tawk.webProperties.pages.filterProperty("enabled", !0).filterProperty("isAdmin", !0), "propertyName") : sortList(Tawk.webProperties.pages.filterProperty("enabled", !0), "propertyName") : []
		}.property("Tawk.webProperties.pages.@each")
	});
	Tawk.AgentSelection = Ember.View.extend(Tawk.CustomSelectInterface, {
		classNames: ["select", "custom-select", "agent-select"],
		template: Ember.TEMPLATES.agentSelect
	});
	Tawk.CountrySelection = Ember.View.extend(Tawk.CustomSelectInterface, {
		classNames: ["select", "custom-select", "country-select"],
		template: Ember.TEMPLATES.countrySelect,
		list: countryList
	});
	Ember.Handlebars.helper("webPropertySelect", Tawk.WebPropertySelection);
	Ember.Handlebars.helper("agentSelect", Tawk.AgentSelection);
	Ember.Handlebars.helper("countrySelect", Tawk.CountrySelection);
	Ember.Handlebars.helper("GenericSelect", Tawk.GenericSelection);
	Tawk.Header = Ember.View.extend({
		template: Ember.TEMPLATES.header,
		elementId: "header",
		tagName: "header",
		enabledLanguages: JSON.parse('[{"code":"bg","title":"\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438","flagClass":"flag flag-bg"},{"code":"cat","title":"catal\u00e0","flagClass":"flag flag-cat"},{"code":"cs","title":"\u010de\u0161tina","flagClass":"flag flag-cs"},{"code":"de","title":"Deutsch","flagClass":"flag flag-de"},{"code":"en","title":"english","flagClass":"flag flag-en"},{"code":"es","title":"espa\u00f1ol","flagClass":"flag flag-es"},{"code":"fr","title":"fran\u00e7ais","flagClass":"flag flag-fr"},{"code":"hi","title":"\u0939\u093f\u0902\u0926\u0940","flagClass":"flag flag-hi"},{"code":"it","title":"italiano","flagClass":"flag flag-it"},{"code":"hu","title":"magyar","flagClass":"flag flag-hu"},{"code":"ko","title":"\ud55c\uad6d\uc5b4","flagClass":"flag flag-ko"},{"code":"nl","title":"Nederlands","flagClass":"flag flag-nl"},{"code":"pl","title":"polski","flagClass":"flag flag-pl"},{"code":"pt_br","title":"portugu\u00eas (Brasil)","flagClass":"flag flag-pt_br"},{"code":"ro","title":"rom\u00e2n\u0103","flagClass":"flag flag-ro"},{"code":"ru","title":"\u0420\u0443\u0441\u0441\u043a\u0438\u0439","flagClass":"flag flag-ru"},{"code":"sk","title":"sloven\u010dina","flagClass":"flag flag-sk"},{"code":"sv","title":"svenska","flagClass":"flag flag-sv_se"},{"code":"tr","title":"T\u00fcrk\u00e7e","flagClass":"flag flag-tr"},{"code":"vi","title":"Ti\u1ebfng Vi\u1ec7t","flagClass":"flag flag-vi"},{"code":"zh_tw","title":"\u4e2d\u6587","flagClass":"flag flag-zh_tw"}]'),
		logoutUrl: BASEPATH + "/logout",
		popoutReference: null,
		controller: Tawk.userController,
		notificationText: null,
		updateNotificationHeader: function () {
			var a = this;
			this.notificationText && setTimeout(function () {
				a.notificationText && a.set("notificationText", null)
			}, 5E3)
		}.observes("notificationText"),
		didInsertElement: function () {
			var a = this, c = this.$('button[data-target="#main-navigation"]');
			this.profileChanged();
			this.$("#headerNotification button.close").click(function () {
				a.set("notificationText", null)
			});
			this.$().delegate(".navigate-view",
				"click", function () {
					var a = $(this).attr("id");
					a && (a = a.replace("-select", ""), Tawk.routeManager.get("currentState.name") === a ? Tawk.routeManager.send("reopenView") : Tawk.routing.changeRoute({view: a}), c.hasClass("collapsed") || c.trigger("click"))
				});
			this.$().delegate(".navbar-nav .toggle", "click", function (a) {
				a.stopPropagation()
			});
			this.$().delegate(".edit-profile", "click", function (a) {
				var b, c = Tawk.PageContentController.create();
				c.openPersonalPage(function () {
					b = Tawk.ManagePageContentView.create({
						controller: c, closeCallback: function () {
							null !==
							b && b.destroy()
						}
					});
					b.append()
				})
			});
			this.$().delegate(".edit-account", "click", function (a) {
				var b;
				b = Tawk.EditAccountFormView.create({
					closeCallback: function () {
						null !== b && b.destroy()
					}
				});
				b.append()
			});
			this.$().delegate(".support-popout", "click", function (c) {
				null === a.popoutReference || a.popoutReference.closed ? a.popoutReference = window.open(GLOBAL_TAWK_URL + "/" + TAWK_ID + "/popout/default/?$_tawk_popout=true", "", "width=450, height=500") : a.popoutReference.focus();
				Tawk.intercomController.execute("trackEvent", {eventType: "started-support-chat"})
			});
			this.$().delegate(".desktop-notification-switch", "change", function (c) {
				a.controller.toggleDesktopNotification($(this).is(":checked"), this)
			});
			this.$().delegate(".sound-notification-switch", "change", function (c) {
				a.controller.toggleSoundNotification($(this).is(":checked"))
			});
			this.$().delegate(".manage-sounds", "click", function (a) {
				var b;
				b = Tawk.SoundSettingView.create({
					closeCallback: function () {
						b && "function" === typeof b.destroy && b.destroy()
					}
				});
				b.append()
			});
			this.$().delegate(".manage-sessions", "click", function (a) {
				var b;
				b = Tawk.BrowserAppSessionsView.create({
					closeCallback: function () {
						b && "function" === typeof b.destroy && b.destroy()
					}
				});
				b.append()
			});
			this.$().delegate(".change-language", "click", function (c) {
				var b = $(this).attr("id");
				a.controller.get("localeCode") !== b && null !== a.enabledLanguages.findProperty("code", b) && a.controller.changeLanguage(b, function (a) {
					a || (setLocaleCookie(b), window.location = "/")
				})
			});
			this.$(".menu-tooltip").tooltip()
		},
		profileChanged: function () {
			"inDOM" === this.state && Tawk.webProperties.personalPage && Tawk.webProperties.personalPage.alias &&
			(Tawk.webProperties.personalPage.alias.aliasImage ? this.$("#profile-image").css("background-image", 'url("' + GLOBAL_AWS_PI_URL + "/" + Tawk.webProperties.personalPage.alias.aliasImage + '")') : this.$("#profile-image").css("background-image", "none"))
		}.observes("Tawk.webProperties.personalPage.alias.aliasImage"),
		hasDesktopNotificationFeature: function () {
			return notificationController.hasDesktopNotificationFeature()
		}.property(),
		desktopNotificationIsEnabled: function () {
			return Tawk.userController.desktopNotificationEnabled
		}.property("controller.desktopNotificationEnabled"),
		soundNotificationIsEnabled: function () {
			return Tawk.userController.soundNotificationEnabled
		}.property("controller.soundNotificationEnabled"),
		selectedLanguage: function () {
			return this.enabledLanguages.findProperty("code", this.controller.get("localeCode"))
		}.property("controller.localeCode"),
		clientProperties: function () {
			return Tawk.webProperties.sites ? Tawk.webProperties.sites.filterProperty("enabled", !0).filterProperty("isClientProperty", !0) : []
		}.property("Tawk.webProperties.sites.@each")
	});
	Tawk.HeaderStatusDropDown =
		Ember.View.extend({
			elementId: "status",
			tagName: "li",
			classNames: ["header-dropdown-list"],
			template: Ember.TEMPLATES.headerStatusDropDown,
			controller: Tawk.userController,
			status: null,
			statusSelectClass: "status-select",
			previousStatus: null,
			willInsertElement: function () {
				this.set("statusLabel", languageParser.translate("header", "status"));
				this.set("statusOptions", [{
					value: "online",
					text: languageParser.translate("status_types", "online")
				}, {value: "away", text: languageParser.translate("status_types", "away")}, {
					value: "invisible",
					text: languageParser.translate("status_types", "invisible")
				}])
			},
			didInsertElement: function () {
				var a = this;
				this.statusChanged();
				$("body").bind("click.statusDropDown", function (c) {
					(a.$("#status-container").is(c.target) || 0 < a.$("#status-container").has(c.target).length) && c.stopPropagation()
				});
				this.$(".status-select").change(function () {
					var c = $(this), d = c.val();
					"invisible" !== d && (a.previousStatus = d);
					if (Tawk.visitorChatController.hasJoinedConversation() && "invisible" === d) return checkAndSetAlertBoxView(languageParser.translate("action_messages",
						"attention"), languageParser.translate("action_messages", "status_invisible_in_chat")), "invisible" !== a.previousStatus ? (a.controller.user.status = a.previousStatus[0], a.statusChanged(), a.resetStatusDropDown(), c.trigger("change")) : a.resetStatusDropDown();
					a.disableStatusDropDown();
					a.controller.changeStatus(d, function (b) {
						b && a.resetStatusDropDown();
						a.enableStatusDropDown()
					})
				});
				this.$().delegate(".toggle input", "change", function (a) {
					var d = $(this), b = d.parent(), e = $('<span class="small-transparent-spinner"></span>'),
						f = d.data("property-id");
					b.find(".fa-warning").remove();
					b.addClass("state-disabled").append(e);
					d.prop("disabled", !0);
					Tawk.webProperties.changePageStatus(f, d.prop("checked"), function (a) {
						var c = $('<span class="fa fa-warning" data-placement="bottom" data-original-title="' + languageParser.translate("tooltip", "status_update_fail") + '"></span>');
						e.remove();
						a && ((a = Tawk.webProperties.getProperty(f)) && d.prop("checked", a.get("isStatusEnabled")), b.append(c), c.tooltip());
						d.prop("disabled", !1);
						d.parent().removeClass("state-disabled")
					})
				})
			},
			willDestroyElement: function () {
				$("body").unbind("click.statusDropDown")
			},
			resetStatusDropDown: function () {
				this.$(".status-select").val(this.status);
				this.$(".status-select").parent().trigger("reset")
			},
			disableStatusDropDown: function () {
				this.$(".status-select").attr("disabled", !0);
				this.$(".status-select").parent().addClass("state-disabled")
			},
			enableStatusDropDown: function () {
				this.$(".status-select").attr("disabled", !1);
				this.$(".status-select").parent().removeClass("state-disabled")
			},
			sites: function () {
				return Tawk.webProperties.sites ?
					Tawk.webProperties.sites.filterProperty("enabled", !0).filterProperty("isClientProperty", !1) : []
			}.property("Tawk.webProperties.sites.@each"),
			pages: function () {
				return Tawk.webProperties.pages ? Tawk.webProperties.pages.filterProperty("enabled", !0) : []
			}.property("Tawk.webProperties.pages.@each"),
			statusChanged: function () {
				if ("inDOM" === this._state) {
					switch (this.controller.user.status) {
						case "o":
							this.set("status", "online");
							break;
						case "a":
							this.set("status", "away");
							break;
						case "i":
							this.set("status", "invisible")
					}
					this.status &&
					(this.previousStatus = this.status)
				}
			}.observes("controller.user.status"),
			statusDisplayText: function () {
				return null === this.status ? "" : languageParser.translate("status_types", this.status)
			}.property("status"),
			statusClassName: function () {
				return null === this.status ? "" : "status-" + this.status
			}.property("status")
		});
	Ember.Handlebars.helper("HeaderStatusDropDown", Tawk.HeaderStatusDropDown);
	Tawk.HeaderNotification = Ember.View.extend({
		template: Ember.TEMPLATES.headerNotification,
		controller: Tawk.invitationsController,
		elementId: "logo-group",
		totalNotifications: 0,
		hasNotifications: function () {
			var a = 0, c = moment(new Date(ACC_CREATED_ON)), d = moment();
			if (!Tawk.webProperties || !Tawk.webProperties.sites) return !1;
			this.controller.invitations.length && (a += this.controller.invitations.length);
			!Tawk.userController.isAddOnSeen && (0 < Tawk.webProperties.sites.length && 3 < d.diff(c, "days")) && a++;
			Tawk.userController.isAddOnSeen && !Tawk.userController.newAddonSeen && a++;
			Tawk.userController.isAddOnSeen && !Tawk.userController.webrtcAddonSeen && a++;
			this.set("totalNotifications", a);
			return 0 !== a
		}.property("controller.invitations.length", "Tawk.userController.isAddOnSeen", "Tawk.webProperties.sites.length", "Tawk.userController.newAddonSeen", "Tawk.userController.webrtcAddonSeen"),
		didInsertElement: function () {
			var a = this;
			this.$().delegate(".accept", "click", function (c) {
				var d = $(this);
				c = d.data("invite-id");
				d.prop("disabled", !0);
				a.controller.acceptInvitation(c, function (a) {
					a && d.prop("disabled", !1)
				})
			});
			this.$().delegate(".reject", "click", function (c) {
				var d =
					$(this);
				c = d.data("invite-id");
				d.prop("disabled", !0);
				a.controller.rejectInvitation(c, function (a) {
					a && d.prop("disabled", !1)
				})
			});
			this.$().delegate("#activity", "click", function (a) {
				var d = $(this);
				d.next(".ajax-dropdown").is(":visible") ? (d.next(".ajax-dropdown").fadeOut(150), d.removeClass("active")) : (d.next(".ajax-dropdown").fadeIn(150), d.addClass("active"));
				theUrlVal = null;
				a.preventDefault()
			});
			this.$().delegate(".view-add-on", "click", function () {
				var c = main.storageSettings["admin-view"] ? JSON.parse(main.storageSettings["admin-view"]) :
					{};
				if (0 !== Tawk.webProperties.sites.length) {
					if (c.propertyId && "page" === c.type || !c.propertyId) c.propertyId = Tawk.webProperties.sites[0].id, c.type = "site";
					c.subView = "addon-store";
					c.itemId = "whitelabel";
					main.updateStorageSettings("admin-view", JSON.stringify(c));
					a.$("#activity").trigger("click");
					window.location.hash = "/admin/addon-store/whitelabel"
				}
			});
			this.$().delegate(".dismiss-add-on", "click", function () {
				a.$("#activity").trigger("click");
				Tawk.userController.setNewFeatureSeen("add-on")
			});
			this.$().delegate(".view-hire-agent",
				"click", function () {
					Tawk.userController.setNewAddonSeen();
					var c = main.storageSettings["admin-view"] ? JSON.parse(main.storageSettings["admin-view"]) : {};
					if (0 !== Tawk.webProperties.sites.length) {
						if (c.propertyId && "page" === c.type || !c.propertyId) c.propertyId = Tawk.webProperties.sites[0].id, c.type = "site";
						c.subView = "addon-store";
						c.itemId = "live-answering";
						main.updateStorageSettings("admin-view", JSON.stringify(c));
						a.$("#activity").trigger("click");
						window.location.hash = "/admin/addon-store/live-answering"
					}
				});
			this.$().delegate(".dismiss-hire-agent",
				"click", function () {
					a.$("#activity").trigger("click");
					Tawk.userController.setNewAddonSeen()
				});
			this.$().delegate(".view-webrtc", "click", function () {
				Tawk.userController.set("webrtcAddonSeen", !0);
				main.updateStorageSettings("webrtcAddonSeen", !0);
				var c = main.storageSettings["admin-view"] ? JSON.parse(main.storageSettings["admin-view"]) : {};
				if (0 !== Tawk.webProperties.sites.length) {
					if (c.propertyId && "page" === c.type || !c.propertyId) c.propertyId = Tawk.webProperties.sites[0].id, c.type = "site";
					c.subView = "addon-store";
					c.itemId = "webrtc";
					main.updateStorageSettings("admin-view", JSON.stringify(c));
					a.$("#activity").trigger("click");
					window.location.hash = "/admin/addon-store/webrtc"
				}
			});
			this.$().delegate(".dismiss-webrtc", "click", function () {
				a.$("#activity").trigger("click");
				Tawk.userController.set("webrtcAddonSeen", !0);
				main.updateStorageSettings("webrtcAddonSeen", !0)
			});
			this.$().delegate("#group-icr", "click", function (a) {
				var d = $(this).hasClass("selected");
				a.preventDefault();
				a.stopPropagation();
				Tawk.userController.toggleGroupIncomingList(d ?
					!1 : !0)
			});
			this.$().delegate("#visitor-details-toggle", "click", function (a) {
				var d = $(this).hasClass("selected");
				a.preventDefault();
				a.stopPropagation();
				Tawk.userController.toggleVisitorDetailsHover(d ? !1 : !0)
			});
			this.$().delegate("#list-view-toggle", "click", function (a) {
				var d = $(this).hasClass("selected");
				a.preventDefault();
				a.stopPropagation();
				Tawk.userController.toggleSidebarChatlist(d ? !1 : !0)
			});
			this.$().delegate("#group-icr-min", "change", function (a) {
				var d = $(this).prop("checked");
				a.preventDefault();
				a.stopPropagation();
				Tawk.userController.toggleGroupIncomingList(d ? !1 : !0)
			});
			this.$().delegate("#visitor-details-toggle-min", "change", function (a) {
				var d = $(this).prop("checked");
				a.preventDefault();
				a.stopPropagation();
				Tawk.userController.toggleVisitorDetailsHover(d ? !1 : !0)
			});
			this.$().delegate("#list-view-toggle-min", "change", function (a) {
				var d = $(this).prop("checked");
				a.preventDefault();
				a.stopPropagation();
				Tawk.userController.toggleSidebarChatlist(d ? !1 : !0)
			});
			this.groupIncomingRequests();
			this.visitorDetailsHoverIsEnabled();
			this.showAllChats();
			this.$(".sidebar-visitors-action").tooltip()
		},
		visitorDetailsHoverIsEnabled: function () {
			Tawk.userController.visitorDetailsHoverEnabled ? this.$("#visitor-details-toggle").attr("data-original-title", languageParser.translate("tooltip", "disable_visitor_hover")) : this.$("#visitor-details-toggle").attr("data-original-title", languageParser.translate("tooltip", "enable_visitor_hover"))
		}.observes("Tawk.userController.visitorDetailsHoverEnabled"),
		showAllChats: function () {
			Tawk.userController.sidebarChatListAll ? this.$("#list-view-toggle").attr("data-original-title",
				languageParser.translate("header", "show_my_chats")) : this.$("#list-view-toggle").attr("data-original-title", languageParser.translate("tooltip", "show_all_chats"))
		}.observes("Tawk.userController.sidebarChatListAll"),
		groupIncomingRequests: function () {
			Tawk.userController.groupIncomingRequests ? this.$("#group-icr").attr("data-original-title", languageParser.translate("tooltip", "ungroup_icr")) : this.$("#group-icr").attr("data-original-title", languageParser.translate("tooltip", "group_icr"))
		}.observes("Tawk.userController.groupIncomingRequests")
	});
	Ember.Handlebars.helper("HeaderNotification", Tawk.HeaderNotification);
	Tawk.HeaderProfileMenu = Ember.View.extend({
		tagName: "li",
		classNames: ["header-dropdown-list"],
		template: Ember.TEMPLATES.headerProfileMenu
	});
	Ember.Handlebars.helper("HeaderProfileMenu", Tawk.HeaderProfileMenu);
	Tawk.HeaderSettingsMenu = Ember.View.extend({
		tagName: "li",
		classNames: ["header-dropdown-list"],
		template: Ember.TEMPLATES.headerSettingsMenu,
		didInsertElement: function () {
			var a = this;
			$("body").bind("click.settingsMenu", function (c) {
				(a.$("#desktop-notification-container").is(c.target) ||
					0 < a.$("#desktop-notification-container").has(c.target).length || a.$("#sound-notification-container").is(c.target) || 0 < a.$("#sound-notification-container").has(c.target).length) && c.stopPropagation()
			})
		},
		willDestroyElement: function () {
			$("body").unbind("click.settingsMenu")
		}
	});
	Ember.Handlebars.helper("HeaderSettingsMenu", Tawk.HeaderSettingsMenu);
	Tawk.MainNav = Ember.View.extend({
		template: Ember.TEMPLATES.mainNav,
		elementId: "main-nav",
		enabledLanguages: JSON.parse('[{"code":"bg","title":"\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438","flagClass":"flag flag-bg"},{"code":"cat","title":"catal\u00e0","flagClass":"flag flag-cat"},{"code":"cs","title":"\u010de\u0161tina","flagClass":"flag flag-cs"},{"code":"de","title":"Deutsch","flagClass":"flag flag-de"},{"code":"en","title":"english","flagClass":"flag flag-en"},{"code":"es","title":"espa\u00f1ol","flagClass":"flag flag-es"},{"code":"fr","title":"fran\u00e7ais","flagClass":"flag flag-fr"},{"code":"hi","title":"\u0939\u093f\u0902\u0926\u0940","flagClass":"flag flag-hi"},{"code":"it","title":"italiano","flagClass":"flag flag-it"},{"code":"hu","title":"magyar","flagClass":"flag flag-hu"},{"code":"ko","title":"\ud55c\uad6d\uc5b4","flagClass":"flag flag-ko"},{"code":"nl","title":"Nederlands","flagClass":"flag flag-nl"},{"code":"pl","title":"polski","flagClass":"flag flag-pl"},{"code":"pt_br","title":"portugu\u00eas (Brasil)","flagClass":"flag flag-pt_br"},{"code":"ro","title":"rom\u00e2n\u0103","flagClass":"flag flag-ro"},{"code":"ru","title":"\u0420\u0443\u0441\u0441\u043a\u0438\u0439","flagClass":"flag flag-ru"},{"code":"sk","title":"sloven\u010dina","flagClass":"flag flag-sk"},{"code":"sv","title":"svenska","flagClass":"flag flag-sv_se"},{"code":"tr","title":"T\u00fcrk\u00e7e","flagClass":"flag flag-tr"},{"code":"vi","title":"Ti\u1ebfng Vi\u1ec7t","flagClass":"flag flag-vi"},{"code":"zh_tw","title":"\u4e2d\u6587","flagClass":"flag flag-zh_tw"}]'),
		popoutReference: null,
		logoutUrl: BASEPATH + "/logout",
		didInsertElement: function () {
			var a = this;
			this.profileChanged();
			this.statusChanged();
			this.$(".menu-tooltip").tooltip();
			$("body").bind("click.accountMenu", function (c) {
				(0 < a.$("#status-container").has(c.target).length || 0 < a.$("#property-status-toggle").has(c.target).length || 0 < a.$("#desktop-notification-container").has(c.target).length || 0 < a.$("#sound-notification-container").has(c.target).length) && c.stopPropagation()
			});
			this.$().delegate(".navigate-view", "click",
				function () {
					var a = $(this).attr("id"), d = Tawk.routing.getPath();
					a && (a = a.replace("-select", ""), "addon" === a ? ($(".navigate-view").removeClass("active"), $(this).addClass("active"), "admin" === d.view && "addon-store" === d.subView || Tawk.routing.changeRoute({
						view: "admin",
						subView: "addon-store",
						propertyId: d.propertyId || null
					})) : Tawk.routeManager.get("currentState.name") === a ? "admin" === a && "addon-store" === d.subView ? ($(".navigate-view").removeClass("active"), $(this).addClass("active"), Tawk.routing.changeRoute({
						view: "admin",
						subView: null, propertyId: null
					})) : Tawk.routeManager.send("reopenView") : Tawk.routing.changeRoute({view: a}))
				});
			this.$(".status-select").click(function () {
				var c = $(this).attr("id");
				"invisible" !== c && (a.previousStatus = c);
				Tawk.visitorChatController.hasJoinedConversation() && "invisible" === c && (checkAndSetAlertBoxView(languageParser.translate("action_messages", "attention"), languageParser.translate("action_messages", "status_invisible_in_chat")), "invisible" !== a.previousStatus && (Tawk.userController.user.status = a.previousStatus[0],
					a.statusChanged()));
				a.disableStatusDropDown();
				Tawk.userController.changeStatus(c, function (c) {
					c || a.enableStatusDropDown()
				})
			});
			this.$().delegate("#property-status-toggle .toggle input", "change", function (c) {
				var d = $(this), b = d.parent(), e = $('<span class="small-transparent-spinner"></span>'),
					f = d.data("property-id");
				b.find(".fa-warning").remove();
				b.addClass("state-disabled").append(e);
				d.prop("disabled", !0);
				a.disableStatusDropDown();
				Tawk.webProperties.changePageStatus(f, d.prop("checked"), function (c) {
					var h =
						$('<span class="fa fa-warning" data-placement="bottom" data-original-title="' + languageParser.translate("tooltip", "status_update_fail") + '"></span>');
					e.remove();
					c && ((c = Tawk.webProperties.getProperty(f)) && d.prop("checked", c.get("isStatusEnabled")), b.append(h), h.tooltip());
					d.prop("disabled", !1);
					d.parent().removeClass("state-disabled");
					a.enableStatusDropDown()
				})
			});
			this.$().delegate(".change-language", "click", function (c) {
				var d = $(this).attr("id");
				Tawk.userController.get("localeCode") !== d && null !== a.enabledLanguages.findProperty("code",
					d) && Tawk.userController.changeLanguage(d, function (a) {
					a || (setLocaleCookie(d), window.location = "/")
				})
			});
			this.$().delegate(".desktop-notification-switch", "change", function (a) {
				Tawk.userController.toggleDesktopNotification($(this).is(":checked"), this)
			});
			this.$().delegate(".sound-notification-switch", "change", function (a) {
				Tawk.userController.toggleSoundNotification($(this).is(":checked"))
			});
			this.$().delegate(".manage-sounds", "click", function (a) {
				var d;
				d = Tawk.SoundSettingView.create({
					closeCallback: function () {
						d &&
						"function" === typeof d.destroy && d.destroy()
					}
				});
				d.append()
			});
			this.$().delegate(".manage-sessions", "click", function (a) {
				var d;
				d = Tawk.BrowserAppSessionsView.create({
					closeCallback: function () {
						d && "function" === typeof d.destroy && d.destroy()
					}
				});
				d.append()
			});
			this.$().delegate(".support-popout", "click", function (c) {
				null === a.popoutReference || a.popoutReference.closed ? a.popoutReference = window.open(GLOBAL_TAWK_URL + "/" + TAWK_ID + "/popout/default/?$_tawk_popout=true", "", "width=450, height=500") : a.popoutReference.focus();
				Tawk.intercomController.execute("trackEvent", {eventType: "started-support-chat"})
			})
		},
		profileChanged: function () {
			"inDOM" === this.state && Tawk.webProperties.personalPage && Tawk.webProperties.personalPage.alias && (Tawk.webProperties.personalPage.alias.aliasImage ? this.$("#profile-image").css("background-image", 'url("' + GLOBAL_AWS_PI_URL + "/" + Tawk.webProperties.personalPage.alias.aliasImage + '")') : this.$("#profile-image").css("background-image", "none"))
		}.observes("Tawk.webProperties.personalPage.alias.aliasImage"),
		statusChanged: function () {
			if ("inDOM" === this._state) {
				switch (Tawk.userController.user.status) {
					case "o":
						this.set("status", "online");
						break;
					case "a":
						this.set("status", "away");
						break;
					case "i":
						this.set("status", "invisible")
				}
				this.status && (this.previousStatus = this.status)
			}
		}.observes("Tawk.userController.user.status"),
		statusDisplayText: function () {
			return this.status ? languageParser.translate("status_types", this.status) : ""
		}.property("status"),
		statusClassName: function () {
			return null === this.status ? "" : "status-" + this.status
		}.property("status"),
		disableStatusDropDown: function () {
			this.$("#account-menu-container").addClass("disabled")
		},
		enableStatusDropDown: function () {
			this.$("#account-menu-container").removeClass("disabled")
		},
		hasDesktopNotificationFeature: function () {
			return notificationController.hasDesktopNotificationFeature()
		}.property(),
		desktopNotificationIsEnabled: function () {
			return Tawk.userController.desktopNotificationEnabled
		}.property("controller.desktopNotificationEnabled"),
		soundNotificationIsEnabled: function () {
			return Tawk.userController.soundNotificationEnabled
		}.property("controller.soundNotificationEnabled"),
		selectedLanguage: function () {
			return this.enabledLanguages.findProperty("code", Tawk.userController.get("localeCode"))
		}.property("Tawk.userController.localeCode"),
		sites: function () {
			return Tawk.webProperties.sites ? Tawk.webProperties.sites.filterProperty("enabled", !0).filterProperty("isClientProperty", !1) : []
		}.property("Tawk.webProperties.sites.@each"),
		pages: function () {
			return Tawk.webProperties.pages ? Tawk.webProperties.pages.filterProperty("enabled", !0) : []
		}.property("Tawk.webProperties.pages.@each")
	});
	Tawk.VisitorBan =
		Ember.Mixin.create({
			didInsertElement: function () {
				var a, c = this;
				a = this.$(".ban-form form").validate({
					errorPlacement: function (a, b) {
						a.insertAfter(b.parent())
					}, submitHandler: function (a) {
						var b = $(a).find(".banReason").val(), e = $(a).find(".banIp").is(":checked");
						Tawk.liveMonitoringController.banVisitor(c.content, b, e, function (b) {
							b ? errorSave(a, languageParser.translate("form_validation_messages", "error_ban")) : (e ? Tawk.intercomController.execute("trackEvent", {eventType: "banned-ip-on-hover"}) : Tawk.intercomController.execute("trackEvent",
								{eventType: "banned-visitor-on-hover"}), c.get("parentView").clearHoverContent())
						});
						return !1
					}
				});
				this.$(".ban-visitor").click(function (a) {
					a.stopPropagation();
					c.$(".ban-form").css("display", "block");
					c.$(".visitor-details").css("display", "none")
				});
				this.$().delegate(".ignore-visitor", "click", function (a) {
					a.stopPropagation();
					Tawk.liveMonitoringController.ignoreChat(c.content._id)
				});
				this.$(".ban-form").click(function (a) {
					a.stopPropagation()
				});
				this.$(".close-ban-form").click(function (d) {
					c.$(".visitor-details").css("display",
						"block");
					c.$(".ban-form").css("display", "none");
					a.resetForm();
					c.$(".state-error").removeClass("state-error");
					c.$(".state-success").removeClass("state-success")
				})
			}
		});
	Tawk.VisitorItem = Ember.View.extend(Tawk.VisitorBan, {
		template: Ember.TEMPLATES.visitorItem, tagName: "li", hasChatRequest: function () {
			this.content.cr ? this.content.set("unSeen", !0) : this.content.set("unSeen", !1);
			Tawk.leftPanel.$().trigger("unseen-messages")
		}.observes("content.cr"), willDestroyElement: function () {
			this.$("a").unbind("mouseover.focus");
			this.$().remove()
		}, didInsertElement: function () {
			var a = this;
			this._super();
			this.$().attr("class", this.content.get("highlightColor"));
			this.hasChatRequest();
			this.$().click(function (c) {
				$(c.target).hasClass("toggle-details") || ($(c.target).parents(".toggle-details").length || $(c.target).hasClass("ignore-visitor")) || (a.get("parentView").clearHoverContent(), Tawk.liveMonitoringController.openChat(a.content._id))
			});
			this.$("a").bind("mouseover.focus", function () {
				var c = $(this), d = $(this).offset();
				"inDOM" === a._state &&
				(a.set("parentView.hoverContent", a.content), setTimeout(function () {
					"inDOM" === a._state && ($("#left-panel").outerHeight() - d.top - 50 < $("#hoverView").outerHeight() && (d.top -= $("#hoverView").outerHeight() - c.outerHeight()), 50 > d.top && (d.top = 51), $("body").hasClass("minified") ? $("#hoverView").css({
						top: d.top,
						left: "115px"
					}) : $("#hoverView").css({
						top: d.top,
						left: c.outerWidth() + d.left
					}), a.set("parentView.hoverContentVisible", !0))
				}, 0))
			});
			this.$(".ignore-visitor").tooltip()
		}, showFlash: function () {
			"inDOM" === this._state &&
			(this.content.showFlash ? (this.content.set("unSeen", !0), this.$("a.visitor-name").addClass("flash-new-message")) : (this.content.set("unSeen", !1), this.$("a.visitor-name").removeClass("flash-new-message")), Tawk.leftPanel.$().trigger("unseen-messages"))
		}.observes("content.showFlash"), totalUnseen: function () {
			return this.content.cver - this.content.lastSeenChat
		}.property("content.cver", "content.lastSeenChat")
	});
	Ember.Handlebars.helper("VisitorItem", Tawk.VisitorItem);
	Tawk.HoverView = Ember.View.extend(Tawk.VisitorBan,
		{
			template: Ember.TEMPLATES.visitorDetails,
			elementId: "hoverView",
			content: null,
			contentChanged: function () {
				"inDOM" === this._state && this.$(".close-ban-form").trigger("click")
			}.observes("content._id")
		});
	Ember.Handlebars.helper("HoverView", Tawk.HoverView);
	Tawk.LeftPanel = Ember.View.extend({
		template: Ember.TEMPLATES.leftPanel,
		elementId: "left-panel",
		tagName: "aside",
		controller: Tawk.leftPanelController,
		topUnseen: 0,
		bottomUnseen: 0,
		hoverContent: null,
		hoverContentVisible: !1,
		membersMessageList: null,
		triggerTimeout: null,
		groupSearch: [],
		dmSearch: [],
		visitorDetailsHoverIsEnabled: function () {
			return Tawk.userController.visitorDetailsHoverEnabled
		}.property("Tawk.userController.visitorDetailsHoverEnabled"),
		showAllChats: function () {
			return Tawk.userController.sidebarChatListAll
		}.property("Tawk.userController.sidebarChatListAll"),
		willDestroyElement: function () {
			this.$().unbind("mouseleave.unfocus");
			this.$("nav#visitors").unbind("mouseout.paneunfocus")
		},
		triggerUnseen: function () {
			var a, c, d, b, e, f = this;
			clearTimeout(this.triggerTimeout);
			this.set("triggerTimeout", setTimeout(function () {
				"inDOM" === f._state && (a = f.$().find(".unseen").first(), c = f.$().find(".unseen").last(), a.length || c.length ? (d = f.$("#visitorsScrollContainer").scrollTop(), a.length ? (b = a.offset().top, b = 0 > b ? 0 : b, f.$("#unseen-top").removeClass("hidden"), f.$("#unseen-top").unbind("click.showtop"), 0 === b && 0 !== d ? f.$("#unseen-top").bind("click.showtop", function () {
						f.$("#visitorsScrollContainer").scrollTop(b)
					}) : (f.$("#unseen-top").addClass("hidden"), f.$("#unseen-top").unbind("click.showtop"))) :
					(f.$("#unseen-top").addClass("hidden"), f.$("#unseen-top").unbind("click.showtop")), a !== c && c.length ? (e = c.offset().top, e > d + f.$("#visitorsScrollContainer").height() && e > f.$("#visitorsScrollContainer").height() ? (f.$("#unseen-bottom").removeClass("hidden"), f.$("#unseen-bottom").unbind("click.showbottom"), f.$("#unseen-bottom").bind("click.showbottom", function () {
						f.$("#visitorsScrollContainer").scrollTop(e + 30)
					})) : (f.$("#unseen-bottom").addClass("hidden"), f.$("#unseen-bottom").unbind("click.showbottom"))) :
					(f.$("#unseen-bottom").addClass("hidden"), f.$("#unseen-bottom").unbind("click.showbottom"))) : (f.$("#unseen-top").addClass("hidden"), f.$("#unseen-top").unbind("click.showtop"), f.$("#unseen-bottom").addClass("hidden"), f.$("#unseen-bottom").unbind("click.showbottom")))
			}, 0))
		},
		didInsertElement: function () {
			var a = this;
			this.$().debounce("unseen-messages", function () {
				a.triggerUnseen()
			}, 50);
			this.$("#channelList, #agentList, .list-section").debounce("resize", function () {
				a.triggerUnseen()
			}, 50);
			this.$().delegate(".toggle-details",
				"click", function (c) {
					var d = $(this).parent().parent().find("ul");
					c.stopPropagation();
					d.is(":visible") ? d.slideUp("fast", function () {
						$(this).parent("li").removeClass("open")
					}) : (a.$(".chat-users.open a.toggleAgentList").trigger("click"), d.slideDown("fast", function () {
						$(this).parent("li").addClass("open")
					}))
				});
			this.$().delegate('.nonVisitorsList a[data-toggle="popover"]', "mouseover", function () {
				$(this).popover({trigger: "hover"});
				$(this).popover("show")
			});
			this.$('[data-action="minifyMenu"]').click(function (c) {
				a.$(".chat-users.open a.toggleAgentList").trigger("click");
				a.$(".visitor-list .open").removeClass("open");
				a.$(".visitor-list .ban-form").css("display", "none");
				a.$(".visitor-list .visitor-details").css("display", "none")
			});
			this.$().delegate(".list-name-container", "click", function (c) {
				var d = $(this).attr("data-id"), b = $(this).parent().find("ul.visitor-list");
				c.stopPropagation();
				b.is(":visible") ? b.slideUp("fast", function () {
					$(this).parent("li").removeClass("open");
					a.controller.updatePropertyIsOpen(d, !1)
				}) : (a.controller.updatePropertyIsOpen(d, !0), b.slideDown("fast",
					function () {
						$(this).parent("li").addClass("open")
					}))
			});
			this.$().bind("mouseleave.unfocus", function () {
				a.set("hoverContentVisible", !1)
			});
			this.$("nav#visitors").bind("mouseout.paneunfocus", function (c) {
				$(c.relatedTarget).parents(".visitor-list").length || $(c.relatedTarget).parents("#hoverView").length || a.set("hoverContentVisible", !1)
			});
			this.$("#hoverView").on("mouseleave", function () {
				a.set("hoverContentVisible", !1)
			});
			this.$().delegate(".chat-open.agent-chat", "click", function () {
				var a = $(this).parent().attr("data-chat-id");
				Tawk.agentChatController.openChat(a)
			});
			this.$().delegate(".chat-open.group-chat", "click", function () {
				var a = $(this).parent().attr("data-chat-id");
				Tawk.agentChatController.openGroupChat(a)
			});
			this.$().delegate(".pin-chat", "click", function () {
				var a = $(this).parent().attr("data-chat-id");
				Tawk.agentChatController.pinChatToSidebar(a)
			});
			this.$().delegate(".unpin-chat", "click", function () {
				var a = $(this).parent().attr("data-chat-id");
				Tawk.agentChatController.unpinChatToSidebar(a)
			});
			this.$().delegate("#active-chats-title .active-chats",
				"click", function (c) {
					a.membersMessageList && a.membersMessageList.closeView();
					window.location.hash = "/chat"
				});
			this.$().delegate("ul.dropdown-menu li", "click", function (a) {
				a.stopPropagation()
			});
			this.$(".sidebar-tooltip").tooltip({placement: "right"});
			this.$().delegate(".dropdown-toggle", "click", function () {
				var a = $(this).parent().find(".dropdown-menu");
				a && a.css("top", $(this).offset().top + 22 + "px")
			});
			this.$("#visitorsScrollContainer").debounce("scroll", function (c) {
					"inDOM" === a._state && a.$().trigger("unseen-messages")
				},
				50);
			this.$().delegate(".add-tooltip", "mouseover", function () {
				$(this).tooltip("show")
			});
			this.$().delegate(".open-dm-list", "click", function () {
				null !== a.membersMessageList ? $("#direct-message-view").is(":visible") ? a.membersMessageList.openView("dm") : $("#direct-message-view").show() : (a.set("membersMessageList", Tawk.MembersMessageListView.create({
					listType: "dm",
					closeForm: a.closeMembersMessageList.bind(a)
				})), a.membersMessageList.append())
			});
			this.$().delegate(".open-group-list", "click", function () {
				null !== a.membersMessageList ?
					$("#direct-message-view").is(":visible") ? a.membersMessageList.openView("group") : $("#direct-message-view").show() : (a.set("membersMessageList", Tawk.MembersMessageListView.create({
						listType: "group",
						closeForm: a.closeMembersMessageList.bind(a)
					})), a.membersMessageList.append())
			});
			this.$().delegate(".new-group", "click", function (c) {
				c.stopPropagation();
				null !== a.membersMessageList ? $("#direct-message-view").is(":visible") ? a.membersMessageList.openAddGroup() : $("#direct-message-view").show() : (a.set("membersMessageList",
					Tawk.MembersMessageListView.create({
						isNewGroupView: !0,
						closeForm: a.closeMembersMessageList.bind(a)
					})), a.membersMessageList.append())
			});
			this.$().delegate("#group-icr", "change", function (a) {
				a.preventDefault();
				a.stopPropagation();
				Tawk.userController.toggleGroupIncomingList($(this).is(":checked"))
			});
			this.$().delegate("#open-oldest", "click", function (a) {
				a.preventDefault();
				a.stopPropagation();
				Tawk.liveMonitoringController.openOldestChat()
			});
			this.$().delegate("#toggle-inline-group-chat", "click", function (a) {
				a.preventDefault();
				a.stopPropagation();
				Tawk.agentChatController.saveChatViewSettings("groupView", !$(this).hasClass("active"))
			});
			this.$().delegate("#toggle-inline-dm-chat", "click", function (a) {
				a.preventDefault();
				a.stopPropagation();
				Tawk.agentChatController.saveChatViewSettings("agentView", !$(this).hasClass("active"))
			});
			this.$().delegate("#group-chat-view", "change", function (a) {
				a.preventDefault();
				a.stopPropagation();
				Tawk.agentChatController.saveChatViewSettings("groupView", $(this).is(":checked"))
			});
			this.$().delegate("#dm-chat-view",
				"change", function (a) {
					a.preventDefault();
					a.stopPropagation();
					Tawk.agentChatController.saveChatViewSettings("agentView", $(this).is(":checked"))
				});
			this.$().delegate(".open-next-icr", "click", function () {
				var a = $(this).attr("data-id");
				Tawk.liveMonitoringController.openFirstICRByProperty(a)
			});
			this.$("#search-group").debounce("keyup", function () {
				var c = $(this).val().trim().toLowerCase();
				c.length ? ($(this).parent().find(".fa-search").addClass("hidden"), a.$(".clear-group-search").removeClass("hidden")) : ($(this).parent().find(".fa-search").removeClass("hidden"),
					a.$(".clear-group-search").addClass("hidden"));
				a.searchGroupList(c)
			}, 16);
			this.$("#search-dm").debounce("keyup", function () {
				var c = $(this).val().trim().toLowerCase();
				c.length ? ($(this).parent().find(".fa-search").addClass("hidden"), a.$(".clear-dm-search").removeClass("hidden")) : ($(this).parent().find(".fa-search").removeClass("hidden"), a.$(".clear-dm-search").addClass("hidden"));
				a.searchDMList(c)
			}, 16);
			this.$().delegate(".clear-group-search", "click", function () {
				a.$("#search-group").val("").trigger("keyup")
			});
			this.$().delegate(".clear-dm-search", "click", function () {
				a.$("#search-dm").val("").trigger("keyup")
			})
		},
		closeMembersMessageList: function (a) {
			this.membersMessageList && (a ? $("#direct-message-view").hide() : (this.membersMessageList.remove(), this.set("membersMessageList", null)))
		},
		clearHoverContent: function () {
			this.set("hoverContent", null);
			this.set("hoverContentVisible", !1)
		},
		inlineGroupTooltip: function () {
			return Tawk.agentChatController.inlineGroupChat ? languageParser.translate("sidebar", "open_group_pop") : languageParser.translate("sidebar",
				"open_group_inline")
		}.property("Tawk.agentChatController.inlineGroupChat"),
		inlineDMTooltip: function () {
			return Tawk.agentChatController.inlineDirectMessage ? languageParser.translate("sidebar", "open_dm_pop") : languageParser.translate("sidebar", "open_dm_inline")
		}.property("Tawk.agentChatController.inlineDirectMessage"),
		searchGroupList: function (a) {
			var c = [], d = RegExp(a, "gi");
			this.groupSearch.clear();
			a.length ? (Tawk.agentChatController.groupMessagesList.forEach(function (b) {
				-1 !== b.get("groupName").toLowerCase().indexOf(a) &&
				(b.highLighted = b.get("groupName").replace(d, function (a) {
					return '<span class="highlight">' + a + "</span>"
				}), c.push(b))
			}), this.set("hasGroupSearch", !0), this.groupSearch.pushObjects(sortList(c, "groupName"))) : this.set("hasGroupSearch", !1)
		},
		searchDMList: function (a) {
			var c = [], d = RegExp(a, "gi");
			this.dmSearch.clear();
			a.length ? (Tawk.agentChatController.directMessagesList.forEach(function (b) {
				-1 !== decodeStr(b.name).toLowerCase().indexOf(a) && (b.highLighted = encodeStr(decodeStr(b.name).replace(d, function (a) {
					return "%%matchStart%%" +
						a + "%%matchEnd%%"
				})), b.highLighted = b.highLighted.replace(/%%matchStart%%/g, '<span class="highlight">').replace(/%%matchEnd%%/g, "</span>"), c.push(b))
			}), this.set("hasDMSearch", !0), this.dmSearch.pushObjects(sortList(c, "name"))) : this.set("hasDMSearch", !1)
		},
		groupSearchPlaceholder: function () {
			return languageParser.translate("sidebar", "groups_text", {num: Tawk.agentChatController.groupMessagesList.length})
		}.property("Tawk.agentChatController.groupMessagesList.length"),
		dmSearchPlaceholder: function () {
			return languageParser.translate("sidebar",
				"dm_text", {num: Tawk.agentChatController.directMessagesList.length})
		}.property("Tawk.agentChatController.directMessagesList.length")
	});
	Tawk.leftPanel = Tawk.LeftPanel.create();
	Tawk.MessageSidebar = Ember.Mixin.create({
		banView: null, setupSidebarEvents: function () {
			var a = this,
				c = this.controller && this.controller.activeProperty ? this.controller.activeProperty : Tawk.webProperties.getProperty(this.content.pgid);
			this.$().delegate(".open-view", "click", function (d) {
				var b, e, f, g = $(this).attr("data-id");
				f = c.tabSettings;
				if (a.previousTabSelected !== g || a.floatingView) a.previousTabSelected = g, a.chatDetailsManuallyClosed = !1, $(this).hasClass("inner-item") && (b = $(this).parents(".dropdown-submenu").attr("data-id") || $(this).parents(".dropdown").attr("data-id")), b ? (f = f.findProperty("id", b)) && f.items && (e = f.items.findProperty("id", g)) : e = f.findProperty("id", g), e && (a.set("tabSettingTitle", e.title), a.showTabView(e, !!b, d), a.$(".minimized-tab").removeClass("open"), a.$(".dropdown").removeClass("open"))
			});
			this.$().delegate(".print-select",
				"click", function () {
					printTranscript(a.content)
				});
			this.$().delegate(".ban-visitor", "click", function () {
				null !== a.banView ? a.banView.openView() : (a.set("banView", Tawk.VisitorBanHoverView.create({
					elementId: null,
					classNames: ["modal", "ban-form-modal"]
				})), a.banView.appendTo(a.$()));
				a.banView.set("content", a.content)
			});
			this.$().delegate(".ticket-create", "click", function (c) {
				a.handleCreateTicket()
			});
			this.$().delegate(".open-ticket-transcript", "click", function () {
				var c = $(this).attr("data-id");
				$(this).attr("data-id");
				a.controller.set("modalTranscriptData", null);
				a.modalTranscriptView ? a.modalTranscriptView.openView() : (a.set("modalTranscriptView", Tawk.TranscriptView.create({controller: a.controller})), a.modalTranscriptView.append());
				a.controller.getModalTranscriptData(c, !0, function (a) {
				})
			});
			this.$().delegate(".tag-transcript", "click", function () {
				var c = !a.content.isHistory && !a.content.hId;
				a.floatingView && a.floatingView instanceof Tawk.MessageTagView || (a.floatingView && (a.floatingView.remove(), a.set("floatingView", null)),
					a.set("floatingView", Tawk.MessageTagView.create({
						closeFunction: function () {
							a.removeFloatingView(!0)
						}
					})));
				a.floatingView.setProperties({
					propertyId: a.content.pgid,
					currentTags: a.content.tags || [],
					customTags: a.customTags,
					isLiveChat: c,
					sessionId: c ? a.content._id : null
				});
				a.showFloatingView(!0)
			});
			this.$().delegate(".copy-select", "click", function () {
				a.floatingView && a.floatingView instanceof Tawk.TranscriptCopyView || (a.floatingView && (a.floatingView.remove(), a.set("floatingView", null)), a.set("floatingView", Tawk.TranscriptCopyView.create({
					closeFunction: function () {
						a.removeFloatingView(!0)
					}
				})));
				getCopyFormat(a.content);
				a.floatingView.set("copyContent", a.content.copyFormat);
				a.showFloatingView(!0)
			});
			this.$().delegate(".email-transcript", "click", function () {
				a.floatingView && a.floatingView instanceof Tawk.TranscriptEmailView || (a.floatingView && (a.floatingView.remove(), a.set("floatingView", null)), a.set("floatingView", Tawk.TranscriptEmailView.create({
					closeFunction: function () {
						a.removeFloatingView(!0)
					}
				})));
				a.floatingView.set("content", a.content);
				a.showFloatingView(!0)
			});
			this.$().delegate(".add-note",
				"click", function () {
					a.floatingView && a.floatingView instanceof Tawk.VisitorNotesView || (a.floatingView && (a.floatingView.remove(), a.set("floatingView", null)), a.set("floatingView", Tawk.VisitorNotesView.create({
						closeFunction: function () {
							a.removeFloatingView(!0)
						}
					})));
					a.floatingView.set("content", a.content);
					a.showFloatingView(!0)
				});
			this.$().delegate(".back-to-chat", "click", function () {
				a.$(".open-view").removeClass("active");
				a.$(".chat-details-container").addClass("hidden");
				a.$().addClass("no-sidebar");
				a.set("previousTabSelected",
					null)
			})
		}, showTabView: function (a, c, d) {
			var b = this;
			this.hasSwitchedTab = !0;
			d.stopPropagation();
			this.$(".open-view").removeClass("active");
			this.$(".dropdown").removeClass("active");
			this.$(".menu-content").addClass("hidden").show();
			this.$(".new-ticket-view").addClass("hidden");
			this.$(".chat-details-container").show();
			this.$(".chat-details-container").removeClass("hidden");
			this.$().removeClass("no-sidebar");
			this.removeSidebarViews(!0);
			c ? (c = $(d.currentTarget).parents(".dropdown"), c.addClass("active"), c.removeClass("open"),
				a.isInternal ? c.find(".menu-title").html('<i class="fa ' + a.fontClass + '"></i>') : c.find(".menu-title").html(a.title)) : $(d.currentTarget).addClass("active");
			if ("chat_details" === a.label) this.detailsView && this.detailsView.isDetached ? this.$(".details-view").append(this.detailsView.$()) : (this.content.hId || this.content.isNewConvert ? this.set("detailsView", Tawk.TicketDetailsView.create({
				content: b.controller.conversationData,
				controller: this.controller,
				showSavingOverlay: b.showSavingOverlay.bind(b),
				hideSavingOverlay: b.hideSavingOverlay.bind(b),
				showError: b.showError.bind(b)
			})) : this.set("detailsView", Tawk.VisitorDetailsView.create({content: b.content})), this.detailsView.appendTo(this.$(".details-view"))), this.updateSubView(this.$(".details-view")); else if ("history" === a.label) this.set("historyView", Tawk.VisitorHistoryListView.create({content: b.content})), this.historyView.appendTo(b.$(".history-view")), this.updateSubView(b.$(".history-view")); else if ("shortcuts" === a.label) this.shortcutsView && this.shortcutsView.isDetached ? this.$(".shortcuts-view").append(this.shortcutsView.$()) :
				(this.set("shortcutsView", Tawk.VisitorShortcutsListView.create({
					propertyId: b.content.pgid, autoPopulateInput: function (a) {
						(b.content.isHistory || b.content.hId || b.content.isNewConvert || b.content.hasJoinedConversation) && !b.content.isHistory && (b.content.hId || b.content.isNewConvert ? (b.$("#reply-ticket-message").focus(), b.$("#reply-ticket-message").html(b.$("#reply-ticket-message").html() + a)) : (b.$(".message-input").val(b.$(".message-input").val() + a), b.$(".message-input")[0].scrollTop = b.$(".message-input").height(),
							b.$(".message-input").focus()))
					}
				})), this.shortcutsView.appendTo(b.$(".shortcuts-view"))), this.updateSubView(this.$(".shortcuts-view")); else if ("knowledge_base" === a.label) this.set("kbView", Tawk.VisitorKBListView.create({propertyId: b.content.pgid})), this.kbView.appendTo(b.$(".knowledgebase-view")), this.updateSubView(this.$(".knowledgebase-view")); else if ("client_data" === a.label) this.set("clientDataView", Tawk.ClientDataView.create({propertyId: b.content.pgid})), this.clientDataView.appendTo(this.$(".client-data-view")),
				this.updateSubView(this.$(".client-data-view")); else if ("shopify" === a.label) this.set("shopifyView", Tawk.ShopifyDataView.create({
				propertyId: b.content.pgid,
				email: this.content.hId ? b.content.req.email : b.content.e
			})), this.shopifyView.appendTo(b.$(".shopify-data-view")), this.updateSubView(b.$(".shopify-data-view")); else {
				if (this.$(".custom-view").attr("data-id") === a.id) return this.updateSubView(this.$(".custom-view"));
				this.$(".custom-view .custom-element-container:not(.hidden)").addClass("hidden");
				var e =
					this.$(".custom-view #" + a.id);
				e.length ? e.removeClass("hidden") : (e = $(HandlebarsTemplates.visitorCustomMenuView({
					title: a.label,
					id: a.id
				})), a.isURL ? (c = $('<iframe width="100%" height="99%" frameborder="0" allowtransparency="false" class="hidden"></iframe>'), c.attr("src", a.content), c.on("load", function () {
					e.find(".iframe-loading").addClass("hidden");
					$(this).removeClass("hidden")
				}), e.find(".iframe-loading").length ? e.find(".iframe-loading").removeClass("hidden") : e.find(".section-content").append('<div class="iframe-loading text-center"><img src="' +
					GLOBAL_STATIC_URL + '/images/ajax-loader-big.gif"/></div>'), e.find(".section-content").append(c)) : e.find(".section-content").append('<div class="padding-10">' + a.beautifiedText + "</div>"), this.$(".custom-view").append(e));
				this.$(".custom-view").attr("data-id", a.id);
				this.updateSubView(this.$(".custom-view"))
			}
		}, updateSubView: function (a) {
			a.removeClass("hidden")
		}, removeSidebarViews: function (a) {
			this.banView && this.banView.destroy();
			this.historyView && (this.historyView.remove(), this.set("historyView", null));
			this.shortcutsView && (a ? (this.shortcutsView.$().detach(), this.shortcutsView.set("isDetached", !0)) : (this.shortcutsView.remove(), this.set("shortcutsView", null)));
			this.kbView && (this.kbView.remove(), this.set("kbView", null));
			this.detailsView && (a ? (this.detailsView.$().detach(), this.detailsView.set("isDetached", !0)) : (this.detailsView.remove(), this.set("detailsView", null)));
			this.clientDataView && (this.clientDataView.remove(), this.set("clientDataView", null));
			a ? this.$(".floating-view").addClass("hidden") : this.removeFloatingView();
			this.shopifyView && (this.shopifyView.remove(), this.set("shopifyView", null));
			a || this.$("iframe").each(function (a, d) {
				$(d).remove()
			});
			this.modalTranscriptView && (this.modalTranscriptView.remove(), this.set("modalTranscriptView", null));
			this.set("banView", null)
		}, handleCreateTicket: function () {
			var a = this;
			this.floatingView && this.floatingView instanceof Tawk.NewTicketView ? this.floatingView.setProperties({
				recipientName: decodeStr(this.content.n),
				recipientEmail: this.content.e
			}) : (this.floatingView && (this.floatingView.remove(),
				this.set("floatingView", null)), this.set("floatingView", Tawk.NewTicketView.create({
				controller: Tawk.visitorChatController,
				fromChat: !0,
				recipientName: decodeStr(this.content.n),
				recipientEmail: this.content.e,
				chatId: this.content.get("latestChatId"),
				currentProperty: this.content.pgid,
				sessionId: this.content._id,
				isNotModal: !0,
				closeFunction: function () {
					a.removeFloatingView(!0)
				}
			})));
			this.showFloatingView(!0)
		}, showFloatingView: function (a) {
			this.floatingView && ("inDOM" !== this.floatingView._state && this.floatingView.appendTo(this.$(".floating-view")),
				this.$(".floating-view").removeClass("hidden"), this.$(".chat-details-container").show().removeClass("hidden"), this.$(".minimized-tab").removeClass("open"), this.$().removeClass("no-sidebar"), a && (this.$(".menu-content").hide(), this.$(".open-view").removeClass("active")), this.isMinimized && Tawk.visitorChatContainerView.get("isChatDetailsHidden") && this.set("previousTabSelected", null))
		}, removeFloatingView: function (a) {
			this.floatingView && (this.previousTabSelected && (this.$('.open-view[data-id="' + this.previousTabSelected +
				'"]').addClass("active"), this.$(".menu-content").show()), this.$(".floating-view").addClass("hidden"), this.floatingView.remove(), this.set("floatingView", null), this.isMinimized && Tawk.visitorChatContainerView.get("isChatDetailsHidden") && this.$(".chat-details-container").hide())
		}
	});
	Tawk.TranscriptCopyView = Ember.View.extend({
		template: Ember.TEMPLATES.transcriptCopyView,
		classNames: "floating-view-container",
		didInsertElement: function () {
			var a = this;
			this.$(".close-copy-form").click(function () {
				a.closeFunction()
			});
			this.$(".copy-transcript").click(function () {
				$(this).select()
			});
			this.$(".copy-clipboard").click(function () {
				a.$(".copy-transcript").select();
				document.execCommand("copy");
				$.smallBox({
					title: "Copied",
					content: "<i class='fa fa-copy'></i> <i>Transcript copied to clipboard</i>",
					color: "#95CB8D",
					iconSmall: "fa fa-thumbs-up bounce animated",
					timeout: 4E3
				})
			})
		}
	});
	Tawk.TranscriptEmailView = Ember.View.extend({
		template: Ember.TEMPLATES.transcriptEmailView,
		classNames: "floating-view-container",
		didInsertElement: function () {
			var a =
				this;
			this.$(".close-email-form").click(function () {
				a.closeFunction()
			});
			this.$(".emailTranscript").validate({
				rules: {emails: {required: !0, multiemail: 10}},
				messages: {emails: {multiemail: languageParser.translate("form_validation_messages", "email") + "(" + languageParser.translate("form_validation_messages", "total_recipients") + ")"}},
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				},
				submitHandler: function (c) {
					var d = $("#emails").val().split(",");
					emailTranscript($.map(d, $.trim), a.content, function (a) {
						if (a) return errorSave($(c).find("footer"),
							languageParser.translate("form_validation_messages", "error_email_transcript"));
						successSave($(c).find("footer"), languageParser.translate("form_validation_messages", "success_email_transcript"))
					});
					return !1
				}
			})
		}
	});
	Tawk.VisitorDetailsView = Ember.View.extend({
		template: Ember.TEMPLATES.visitorDetailsView,
		classNames: ["visitor-details-view"],
		didInsertElement: function () {
			var a = this;
			this.$(".visitor-attributes").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					visitorUtils.saveVisitorData(a,
						c);
					return !1
				}
			});
			this.$().delegate(".save-visitor-attributes", "click", function () {
				a.$(".visitor-attributes").submit();
				return !1
			})
		},
		minifiedVisit: function () {
			var a;
			return this.content ? (a = this.content.lvd || (this.content.visitor ? this.content.visitor.lvd : null)) ? visitorUtils.calculateMinifiedVisit(a) : null : null
		}.property("content"),
		chatDuration: function () {
			var a;
			if (!this.content || !this.content.isHistory) return null;
			a = moment.duration({seconds: this.content.cd});
			return 0 < a.years() ? a.years() + "Y" : 0 < a.months() ? a.months() +
				"M" : 0 < a.days() ? a.days() + "d" : 0 < a.hours() ? a.hours() + "h" : 0 < a.minutes() ? a.minutes() + "m" : a.seconds() + "s"
		}.property("content.cd"),
		clearSaveMessages: function () {
			"inDOM" === this._state && (this.alertTimeout && clearTimeout(this.alertTimeout), this.$(".alert").remove())
		},
		notesUpdatedBy: function () {
			return this.content.notesUpdatedBy ? languageParser.translate("visitors", "last_note_update", {
				notesUpdatedBy: this.content.notesUpdatedBy,
				notesUpdatedOn: this.content.notesUpdatedOn
			}) : ""
		}.property("content.notesUpdatedBy"),
		hasCustomData: function () {
			return this.content ?
				this.content.customAttributes && this.content.customAttributes.data.length && 0 < this.content.customAttributes.version || this.content.customTags && this.content.customTags.data && 0 < this.content.customTags.version : !1
		}.property("content.customAttributes.version", "content.customTags.version")
	});
	Tawk.VisitorInnerTranscriptView = Ember.View.extend({
		template: Ember.TEMPLATES.visitorInnerTranscriptView,
		classNames: "transcript-view",
		didInsertElement: function () {
			var a = this;
			this.$().delegate(".close-transcript", "click",
				function () {
					a.set("transcriptData", null);
					a.closeFunction()
				});
			this.transcriptDataChanged()
		},
		transcriptDataChanged: function () {
			var a = this;
			"inDOM" === this._state && this.transcriptData && setTimeout(function () {
				a.transcriptData.callInfo.length && !a.transcriptData.syncCallData && (a.transcriptData.syncCallData = !0, a.transcriptData.callData = {}, a.transcriptData.callInfo.forEach(function (c) {
					conversationProcess.processWebRTCCallBlock(c.callId, a.transcriptData.pgid, c.callView, !1, function (d, b) {
						a.transcriptData.syncCallData =
							!1;
						b && (a.transcriptData.callData[c.callId] = b)
					})
				}))
			}, 1E3)
		}.observes("transcriptData")
	});
	Tawk.VisitorNotesView = Ember.View.extend({
		template: Ember.TEMPLATES.visitorNotesView,
		classNames: "floating-view-container",
		didInsertElement: function () {
			var a = this;
			this.$(".close-notes-form").click(function () {
				a.closeFunction()
			});
			this.$(".visitor-notes").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					a.$(".alert").remove();
					visitorUtils.saveVisitorData(a, c);
					return !1
				}
			})
		}
	});
	Tawk.VisitorHistoryListView =
		Ember.View.extend({
			template: Ember.TEMPLATES.visitorHistoryListView,
			classNames: ["visitor-chat-history-list"],
			isLoading: null,
			propertyHistory: null,
			didInsertElement: function () {
				var a = this, c = new Bloodhound({
					datumTokenizer: Bloodhound.tokenizers.whitespace,
					queryTokenizer: Bloodhound.tokenizers.whitespace,
					local: []
				});
				this.set("isLoading", !0);
				this.content.hId ? (this.$().addClass("no-visitor"), a.$(".property-history").removeClass("hidden"), a.loadPropertyHistory()) : Tawk.conversationsController.loadVisitorHistory(this.content,
					function () {
						a.set("isLoading", !1)
					});
				this.set("agentList", Tawk.visitorChatController.getPropertyAgents(this.content.pgid));
				this.$().delegate(".assignee", "change", function () {
					var a = $(":selected", this);
					a.parents(".custom-select").find(".selected-value").html(encodeStr(a.text()))
				});
				this.$().delegate(".open-transcript", "click", function () {
					var c = $(this).attr("id");
					a.handleOpenTranscript(c)
				});
				this.$().delegate(".open-property-transcript", "click", function () {
					var c = $(this).attr("id");
					a.handleOpenTranscript(c,
						!0)
				});
				this.$().delegate(".next-visitor-history-list", "click.nextHistory", function () {
					var c = $(this);
					a.set("isLoading", !0);
					c.addClass("loading disabled");
					a.content.historyList.nextList();
					Tawk.conversationsController.loadVisitorHistory(a.content, function () {
						c.removeClass("loading disabled");
						a.set("isLoading", !1)
					})
				});
				this.$().delegate(".prev-visitor-history-list", "click.prevHistory", function () {
					var c = $(this);
					a.set("isLoading", !0);
					c.addClass("loading disabled");
					a.content.historyList.previousList();
					Tawk.conversationsController.loadVisitorHistory(a.content,
						function () {
							c.removeClass("loading disabled");
							a.set("isLoading", !1)
						})
				});
				this.$().delegate(".next-property-history-list", "click.nextHistory", function () {
					var c = $(this);
					a.set("isLoading", !0);
					c.addClass("loading disabled");
					a.propertyHistory.nextList();
					a.loadPropertyHistory(null, function () {
						c.removeClass("loading disabled")
					})
				});
				this.$().delegate(".prev-property-history-list", "click.nextHistory", function () {
					var c = $(this);
					a.set("isLoading", !0);
					c.addClass("loading disabled");
					a.propertyHistory.previousList();
					a.loadPropertyHistory(null, function () {
						c.removeClass("loading disabled")
					})
				});
				this.$(".view-visitor-history").click(function () {
					a.$(".view-property-history").removeClass("active");
					a.$(".property-history").addClass("hidden");
					$(this).addClass("active");
					a.$(".visitor-history").removeClass("hidden")
				});
				this.$(".view-property-history").click(function () {
					a.$(".view-visitor-history").removeClass("active");
					a.$(".visitor-history").addClass("hidden");
					$(this).addClass("active");
					a.$(".property-history").removeClass("hidden");
					a.loadPropertyHistory()
				});
				this.$().delegate(".openPropertyHistoryFilter", "click", function (a) {
					$(this).parent().toggleClass("open")
				});
				this.$().delegate(".search-text", "focus", function (c) {
					a.$("#property-selected-name").addClass("focus")
				});
				this.$().delegate(".search-text", "blur", function (c) {
					a.$("#property-selected-name").removeClass("focus")
				});
				this.$(".tags").tagsinput({
					typeaheadjs: {
						source: c, highlight: !0, displayText: function (a) {
							return a || ""
						}
					}, freeInput: !0, maxChars: 255
				});
				this.$(".tags").tagsinput("input").on("blur",
					function () {
						a.$(".tags").tagsinput("add", $(this).val());
						$(this).val("")
					});
				this.$(".tags").tagsinput("input").on("keydown", function (c) {
					if (13 === c.keyCode) return a.$(".tags").tagsinput("add", $(this).val()), $(this).val(""), !1
				});
				this.$(".from-date").datepicker({
					dateFormat: "dd/mm/yy",
					prevText: '<i class="fa fa-chevron-left"></i>',
					nextText: '<i class="fa fa-chevron-right"></i>',
					onSelect: function (c) {
						a.$(".to-date").datepicker("option", "minDate", c)
					}
				});
				this.$(".to-date").datepicker({
					dateFormat: "dd/mm/yy", prevText: '<i class="fa fa-chevron-left"></i>',
					nextText: '<i class="fa fa-chevron-right"></i>', onSelect: function (c) {
						a.$(".from-date").datepicker("option", "maxDate", c)
					}
				});
				this.$(".closePropertyHistoryFilter").click(function (c) {
					c.stopPropagation();
					a.manualCloseFilter();
					return !1
				});
				this.$(".resetPropertyHistoryFilter").click(function () {
					a.$(".search-text").val("");
					a.$(".assignee").val("0");
					a.$(".from-date").val("");
					a.$(".to-date").val("");
					a.$(".min-messages").val("");
					a.$(".search").trigger("click");
					return !1
				});
				this.$(".search").click(function () {
					var c,
						b = {
							query: a.$(".search-text").val() || "",
							startDate: a.$(".from-date").val() || "",
							endDate: a.$(".to-date").val() || "",
							messageCount: a.$(".min-messages").val() || "",
							tags: a.$(".tags").tagsinput("items")
						};
					b.tags.length || (b.tags = "");
					c = a.$(".assignee option:selected");
					b.assigneeId = c.val();
					a.set("propertyHistoryQuery", b);
					a.propertyHistory.startList();
					a.loadPropertyHistory(b, function () {
						a.manualCloseFilter()
					});
					return !1
				});
				this.$().delegate(".open-subview", "click", function () {
					a.$().addClass("in-sub-view")
				})
			},
			handleOpenTranscript: function (a,
			                                c) {
				var d = this;
				this.$(".history-list").addClass("hidden");
				this.$(".transcript-view-container").removeClass("hidden");
				this.transcriptView ? this.transcriptView.set("isLoading", !0) : (this.set("transcriptView", Tawk.VisitorInnerTranscriptView.create({
					isLoading: !0,
					closeFunction: function () {
						d.$(".history-list").removeClass("hidden");
						d.$(".transcript-view-container").addClass("hidden")
					}
				})), this.transcriptView.appendTo(this.$(".transcript-view-container")));
				Tawk.conversationsController.openHistoryTranscript(a,
					this.content.pgid, function (a, c) {
						d.transcriptView.set("isLoading", !1);
						a ? d.transcriptView.set("transcriptError", !0) : d.transcriptView.setProperties({
							transcriptError: !1,
							transcriptData: c
						})
					})
			},
			currentPropertyHistoryList: function () {
				return null === this.propertyHistory ? [] : this.propertyHistory.currentData.slice(this.propertyHistory.currentHead, this.propertyHistory.to)
			}.property("propertyHistory.currentData.length"),
			loadPropertyHistory: function (a, c) {
				var d = this, b = {};
				c = c || function () {
				};
				this.propertyHistoryQuery &&
				(b = {
					query: this.propertyHistoryQuery.query,
					startDate: this.propertyHistoryQuery.startDate,
					endDate: this.propertyHistoryQuery.endDate,
					messageCount: this.propertyHistoryQuery.messageCount,
					tags: this.propertyHistoryQuery.tags,
					assigneeId: this.propertyHistoryQuery.assigneeId
				});
				b.size = 15;
				b.from = this.propertyHistory ? this.propertyHistory.currentHead : 0;
				null === this.propertyHistory ? (this.set("isLoading", !0), this.set("propertyHistory", Tawk.PagingListModel.create({perpage: 15})), this.propertyHistory.startList(), Tawk.visitorChatController.loadPropertyHistory(this.content.pgid,
					b, function (a, b) {
						d.set("isLoading", !1);
						a || (d.propertyHistory.setTotal(b.total), d.propertyHistory.setList(b.list));
						c()
					})) : Tawk.visitorChatController.loadPropertyHistory(this.content.pgid, b, function (a, b) {
					d.set("isLoading", !1);
					a || (d.propertyHistory.setTotal(b.total), d.propertyHistory.setList(b.list));
					c()
				})
			},
			manualCloseFilter: function () {
				this.$(".dropdown-menu-container").removeClass("open")
			},
			currentHistoryList: function () {
				return this.content.historyList && this.content.historyList.currentData.length ? this.content.historyList.currentData.slice(this.content.historyList.currentHead,
					this.content.historyList.to) : []
			}.property("content.historyList.currentData.length"),
			willDestroyElement: function () {
				this.transcriptView && (this.transcriptView.remove(), this.set("transcriptView", null))
			}
		});
	Tawk.VisitorShortcutsListView = Ember.View.extend({
		template: Ember.TEMPLATES.visitorShortcutsListView,
		classNames: ["chat-shortcuts-list"],
		isLoading: null,
		propertyShortcuts: null,
		shortcutFormOptions: [],
		isShortcutFormLoading: !1,
		activeShortcut: null,
		shortcuts: null,
		didInsertElement: function () {
			var a = this;
			this.getAllShortcutsForProperty("");
			this.resizeShortcutSearchbar();
			this.$().delegate(".clean-filter-shortcuts", "click", function () {
				a.$(".filter-shortcuts").val("");
				a.getAllShortcutsForProperty("")
			});
			this.$().delegate(".filter-shortcuts", "keyup", throttle(function (c) {
				var d = $(this).val(), b = 8 === c.keyCode || 46 === c.keyCode;
				(1 === c.key.length || b) && a.getAllShortcutsForProperty(d.trim())
			}, 50));
			this.$().delegate(".next-shortcut", "click", function () {
				a.propertyShortcuts && a.propertyShortcuts.get("hasNext") && a.propertyShortcuts.nextList()
			});
			this.$().delegate(".prev-shortcut",
				"click", function () {
					a.propertyShortcuts && a.propertyShortcuts.get("hasPrevious") && a.propertyShortcuts.previousList()
				});
			this.$().delegate(".tab-select-shortcut", "click", function () {
				var c = $(this).attr("data-id");
				(c = a.propertyShortcuts.getItem(c)) && a.autoPopulateInput(c.plainText + "\n" + c.options)
			});
			this.$().delegate(".edit-shortcut", "click", function (c) {
				var d = $(this).attr("data-id");
				if (d = a.propertyShortcuts.getItem(d)) {
					c.stopPropagation();
					c.preventDefault();
					c = d.options.split("[option] ");
					d.shortcutType = d.options.length ?
						"s" : "m";
					d.optionsList = [];
					d.isPublicShortcut = "public" === d.dataType;
					d.isPersonalShortcut = "personal" === d.dataType;
					d.isMessageShortcut = "m" === d.shortcutType;
					d.isSurveyShortcut = "s" === d.shortcutType;
					for (var b = 0; b < d.options; b++) c[b].length && d.optionsList.pushObject({
						id: Date.now(),
						val: c[b].replace(/[\n\r]+/g, "")
					});
					a.set("activeShortcut", d);
					a.$(".shortcut-list-container").addClass("hidden");
					a.$(".shortcut-form").removeClass("hidden")
				}
			});
			this.$().delegate(".show-shortcut-form button", "click", function () {
				var c =
					Tawk.ShortcutModel.create({options: [], isPublicShortcut: !0, isMessageShortcut: !0});
				a.set("activeShortcut", c);
				a.$(".details-container.shortcuts-view").toggleClass("show-form")
			});
			this.$().delegate("#cancel-form, .back-to-main-view", "click", function () {
				a.$(".details-container.shortcuts-view").toggleClass("show-form");
				a.resetShortcutForm();
				a.feedShortcutTooltips()
			});
			this.$().delegate('input[name="access-type"], #shortcutKey', "change", function () {
				a.$("#shortcutKey").removeClass("shortcut_exist")
			});
			this.$().delegate('input[name="shortcut-type"]',
				"change", function () {
					"s" !== $(this).val() || a.activeShortcut.optionsList.length || a.activeShortcut.optionsList.pushObject({
						val: "",
						id: Date.now()
					})
				});
			this.$().delegate("#add-shortcut-option", "click", function () {
				a.activeShortcut.optionsList.pushObject({val: "", id: Date.now()})
			});
			this.$().delegate(".delete-option", "click", function () {
				var c = $("input.shortcut-option").index($(this).nextAll("input"));
				0 > c || 3 < c || a.activeShortcut.optionsList.removeAt(c)
			});
			this.$(".shortcut-form").validate({
				errorPlacement: function (a,
				                          d) {
					a.insertAfter(d.parent())
				}, submitHandler: function () {
					var c = {
						key: a.$("#shortcutKey").val(),
						message: a.$("#message").val(),
						dataType: a.$('input[name ="access-type"]:checked').val(),
						options: [],
						pageId: a.propertyId,
						shortcutId: a.activeShortcut.shortcutId || null,
						previousValues: null
					};
					a.set("isShortcutFormLoading", !0);
					a.$("input.shortcut-option").each(function () {
						var a = $(this).val().trim();
						a && c.options.push(a)
					});
					c.type = 0 < c.options.length ? "s" : "m";
					!c.shortcutId || a.activeShortcut.dataType === c.dataType && a.activeShortcut.keyPlaintext ===
					c.key || (c.previousValues = {
						pageId: a.propertyId,
						dataType: a.activeShortcut.dataType,
						key: a.activeShortcut.keyPlaintext
					});
					Tawk.shortcutsController.submitShortcutSave(c, function (d, b) {
						d ? "DUPLICATE_SHORTCUT_KEY" === d ? ($.validator.messages.shortcut_exist = $.validator.format(languageParser.translate("form_validation_messages", "shortcut_exist", {
							siteName: Tawk.webProperties.getProperty(a.propertyId).propertyName,
							access: c.dataType
						})), a.$("#shortcutKey").addClass("shortcut_exist"), a.$(".shortcut-form").valid(), a.set("isShortcutFormLoading",
							!1)) : (a.set("isShortcutFormLoading", !1), errorSave(a.$(".shortcut-form"))) : (a.activeShortcut.setProperties({
							shortcutId: b,
							dataType: c.dataType,
							keyPlaintext: c.key
						}), a.getAllShortcutsForProperty(a.$(".filter-shortcuts").val().trim(), !0), successSave(a.$(".shortcut-form")), a.set("isShortcutFormLoading", !1))
					});
					return !1
				}
			});
			this.$(".open-shortcut-form").click(function () {
				a.$(".shortcut-list-container").addClass("hidden");
				a.$(".shortcut-form").removeClass("hidden")
			});
			this.$().delegate(".back-to-main-view", "click",
				function () {
					a.$(".shortcut-list-container").removeClass("hidden");
					a.$(".shortcut-form").addClass("hidden")
				});
			this.$().resize(function (c) {
				a.resizeShortcutSearchbar()
			});
			this.$().delegate(".expand-message", "click", function (a) {
				a.preventDefault();
				a.stopPropagation();
				$(this).parent().siblings(".hidden").removeClass("hidden");
				$(this).parent().addClass("hidden")
			});
			this.$().delegate(".compress-message", "click", function (a) {
				a.preventDefault();
				a.stopPropagation();
				$(this).parent().siblings(".hidden").removeClass("hidden");
				$(this).parent().addClass("hidden")
			})
		},
		willDestroyElement: function () {
			this.activeShortcut && this.activeShortcut.destroy()
		},
		getAllShortcutsForProperty: function (a, c) {
			var d = [];
			this.propertyShortcuts ? this.propertyShortcuts.reset() : this.set("propertyShortcuts", Tawk.PagingListModel.create({perpage: 20}));
			(null === this.shortcuts || c) && this.set("shortcuts", visitorUtils.getShortcuts(this.propertyId));
			this.shortcuts.length && (d = a ? visitorUtils.filterShortcutsSuggestions(this.shortcuts, a, !0, !0) : this.shortcuts);
			this.propertyShortcuts.startList();
			this.propertyShortcuts.setTotal(d.length);
			this.propertyShortcuts.setList(d)
		},
		pagedShortcutsList: function () {
			return this.propertyShortcuts ? this.propertyShortcuts.currentData.slice(this.propertyShortcuts.currentHead, this.propertyShortcuts.to) : []
		}.property("propertyShortcuts.currentData", "propertyShortcuts.to"),
		feedShortcutTooltips: function () {
			var a = this;
			setTimeout(function () {
				a.$(".tab-select-shortcut:last .expand-message").length && 2 < a.$(".tab-select-shortcut .tooltip-hover").length && a.$(".tab-select-shortcut:last .tooltip-hover").tooltip();
				a.$(".tab-select-shortcut .tooltip-hover").tooltip({placement: "bottom"})
			}, 0)
		}.observes("propertyShortcuts"),
		resetShortcutForm: function () {
			this.set("isShortcutFormLoading", !1);
			this.set("activeShortcut", null);
			this.$(".shortcut-form")[0].reset()
		},
		resizeShortcutSearchbar: function () {
			var a = this.$(".search-shortcuts-container label.input"), c = this.$();
			a.css("width", c.width() - 113 + "px")
		}
	});
	Tawk.VisitorKBListView = Ember.View.extend({
		template: Ember.TEMPLATES.visitorKBListView, classNames: ["chat-kb-list"], isLoading: null,
		didInsertElement: function () {
			var a = this;
			this.set("isLoading", !0);
			visitorUtils.loadKBData(this, this.propertyId, function () {
				a.set("isLoading", !1)
			});
			this.$().delegate(".view-kb", "click", function () {
				var c = $(this).attr("data-id");
				socketConnector.getKBContent(a.propertyId, c, function (c, b) {
					c || (b.content = markdownConverter.makeHtml(encodeStr(b.content)), a.$(".chat-details-container .details-container.knowledgebase-view:not(.in-sub-view)").addClass("in-sub-view"), a.$(".chat-details-container:not(.in-sub-view)").addClass("in-sub-view"),
						a.set("kbContent", b), a.$(".kb-list").addClass("hidden"), a.$(".kb-view").removeClass("hidden"), a.$(".section-header").show())
				})
			});
			this.$().delegate(" .back-to-main-view", "click", function () {
				a.set("kbContent", null);
				a.$(".kb-list").removeClass("hidden");
				a.$(".kb-view").addClass("hidden");
				a.$(".section-header").hide()
			});
			this.$().delegate(".clean-filter-kb", "click", function () {
				visitorUtils.loadKBList(a, a.propertyId, null, !0, function (c) {
					c || a.$(".search-kb-text").val("")
				});
				return !1
			});
			this.$().delegate(".search-kb",
				"submit", function () {
					visitorUtils.loadKBList(a, a.propertyId, null, !1);
					return !1
				});
			this.$().delegate(".search-kb-category", "change", function () {
				visitorUtils.loadKBList(a, a.propertyId, null, !1);
				return !1
			});
			this.$().delegate(".next-kb", "click", function () {
				visitorUtils.loadKBList(a, a.propertyId, 1, !1)
			});
			this.$().delegate(".prev-kb", "click", function () {
				visitorUtils.loadKBList(a, a.propertyId, -1, !1)
			})
		}
	});
	Tawk.ShopifyInnerDataView = Ember.View.extend({template: Ember.TEMPLATES.visitorShopifyInnerDataView});
	Ember.Handlebars.helper("ShopifyInnerDataView",
		Tawk.ShopifyInnerDataView);
	Tawk.ShopifyEditSettingsView = Ember.View.extend({
		template: Ember.TEMPLATES.visitorShopifySettingEdit, classNames: "inner-list", didInsertElement: function () {
			var a = this;
			this.$().hide();
			this.$().delegate(".field-selection", "change", function () {
				var c, d = $(this).is(":checked"), b = $(this).attr("data-id");
				if (c = a.content.fields.findProperty("label", b)) c.enabled = d, c.fields && c.fields.length && (c = $(this).parents("#" + b), c.length && (d ? (c.find(".inner-list .input").removeClass("disabled"), c.find(".inner-list .checkbox").removeClass("disabled"),
					c.find(".inner-list .field-selection").removeAttr("disabled"), c.find(".inner-list .field-header").removeAttr("readonly"), c.find(".sortable-list").sortable("enable")) : (c.find(".inner-list .input").addClass("disabled"), c.find(".inner-list .checkbox").addClass("disabled"), c.find(".inner-list .field-selection").attr("disabled", "disabled"), c.find(".inner-list .field-header").attr("readonly", "readonly"), c.find(".sortable-list").sortable("disable"))))
			})
		}
	});
	Ember.Handlebars.helper("ShopifyEditSettingsView",
		Tawk.ShopifyEditSettingsView);
	Tawk.RefundOrder = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.refundOrder, classNames: ["modal", "refund-modal"], didInsertElement: function () {
			var a, c = this, d = [];
			this._super();
			this.order.line_items.forEach(function (a) {
				d.pushObject({
					id: a.id,
					quantity: a.quantity,
					name: a.name,
					price: a.price,
					refundAmount: "0.00",
					selectedQuantity: 0
				})
			});
			this.set("lineItems", d);
			this.order.refunds.forEach(function (a) {
				a.refund_line_items.forEach(function (a) {
					if (a = c.lineItems.findProperty("id",
							a.line_item_id)) a.isRefunded = !0
				})
			});
			setTimeout(function () {
				c.resizeView();
				c.$(".spinner").spinner({
					stop: function (a, d) {
						var f = parseInt($(this).attr("id"), 10);
						if (f = c.lineItems.findProperty("id", f)) f.selectedQuantity = parseInt($(this).spinner("value"));
						c.getRefundCalculation()
					}
				})
			});
			this.getRefundCalculation();
			this.$().delegate(".shipping-refund", "keydown", function () {
				a = $(this).val()
			});
			this.$().delegate(".shipping-refund", "keyup", throttle(function () {
					a !== $(this).val() && (a = $(this).val(), c.getRefundCalculation())
				},
				50));
			this.$().delegate(".refund-amount", "keyup", throttle(function () {
				var a = parseFloat($(this).val()).toFixed(2);
				a !== c.calculatedAmount ? c.set("hasDiscrepancy", !0) : c.set("hasDiscrepancy", !1);
				0 === parseInt(c.calculatedAmount, 10) && 0 === parseInt(a, 10) ? c.$(".proceed-refund").attr("disabled", "disabled") : c.$(".proceed-refund").removeAttr("disabled")
			}, 50));
			this.$().delegate(".proceed-refund", "click", function () {
				var a = {
					propertyId: c.propertyId,
					orderId: c.order.id,
					restock: !1,
					shipping: {amount: 0},
					refundLineItems: [],
					transactions: []
				};
				c.$(".restock-items").length && (a.restock = c.$(".restock-items").is(":checked"));
				c.$(".discrepancy-reason").length && (a.discrepancyReason = c.$(".discrepancy-reason").val());
				a.notify = c.$(".notify-customer").is(":checked");
				a.note = c.$(".refund-reason").text();
				c.$(".shipping-refund").length && (a.shipping.amount = parseFloat(c.$(".shipping-refund").val()));
				c.lineItems.forEach(function (c) {
					0 !== c.selectedQuantity && a.refundLineItems.push({lineItemId: c.id, quantity: c.selectedQuantity})
				});
				c.gateways.forEach(function (c) {
					a.transactions.push({
						parentId: c.parentId,
						gateway: c.type, amount: parseFloat(c.amount)
					})
				});
				socketConnector.refundOrder(a, function (a) {
					a ? (a = "NotFound" === a.code && "integration" === a.message ? languageParser.translate("conversations", "shopify_not_available") : "InternalServerError" === a.code ? languageParser.translate("generic", "internal_server_error") : "UnauthorizedError" === a.code ? languageParser.translate("generic", "unauthorized_error") : languageParser.translate("conversations", "refund_order_error"), errorSave(c.$(".modal-footer"), a)) : c.closeCallback(languageParser.translate("conversations",
						"refund_order_success", {orderName: c.order.name}))
				})
			})
		}, getRefundCalculation: function () {
			var a = 0, c = this,
				d = {propertyId: this.propertyId, orderId: this.order.id, shipping: {amount: 0}, refundLineItems: []};
			if (this.$(".shipping-refund").length && (d.shipping.amount = parseFloat(this.$(".shipping-refund").val()), d.shipping.amount > parseFloat(c.shippingRefund))) {
				errorSave(c.$(".modal-footer"), "The specified shipping amount is greater than the allowed value.");
				return
			}
			this.lineItems.forEach(function (a) {
				0 !== a.selectedQuantity &&
				d.refundLineItems.push({lineItemId: a.id, quantity: a.selectedQuantity});
				a.refundAmount = "0.00"
			});
			this.set("isCalculating", !0);
			socketConnector.calculateOrderRefund(d, function (b, d) {
				var f = 0, g = 0, h = 0, k = 0, l = [];
				c.set("isCalculating", !1);
				d.data.refund.transactions.forEach(function (a) {
					f += parseFloat(a.maximum_refundable);
					l.pushObject({
						type: a.gateway,
						maximumAmount: a.maximum_refundable,
						amount: a.amount,
						parentId: a.parent_id
					});
					g += parseFloat(a.amount)
				});
				d.data.refund.refund_line_items.forEach(function (b) {
					var d = c.lineItems.findProperty("id",
						b.line_item_id);
					d && (d.refundAmount = parseFloat(b.subtotal), k += d.refundAmount, h += parseFloat(b.total_tax));
					a += b.quantity
				});
				d.data.refund.shipping && "0.00" !== d.data.refund.shipping.maximum_refundable && c.set("shippingRefund", d.data.refund.shipping.maximum_refundable);
				c.set("totalRefundValue", f.toFixed(2));
				c.set("subTotal", k.toFixed(2));
				c.set("totalTax", h.toFixed(2));
				c.set("gateways", l);
				c.set("calculatedAmount", g.toFixed(2));
				c.set("hasDiscrepancy", !1);
				c.set("refundQuantity", a);
				0 === g ? c.$(".proceed-refund").attr("disabled",
					"disabled") : c.$(".proceed-refund").removeAttr("disabled")
			})
		}, refundQuantityText: function () {
			return languageParser.translate("visitors", "restock_items", {num: this.refundQuantity})
		}.property("refundQuantity")
	});
	Tawk.CancelOrder = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.cancelOrder, classNames: ["modal", "refund-modal"], didInsertElement: function () {
			var a, c = this, d = [];
			this._super();
			this.order.line_items.forEach(function (a) {
				d.pushObject({
					id: a.id, quantity: a.quantity, name: a.name, price: a.price,
					refundAmount: "0.00", selectedQuantity: a.quantity
				})
			});
			this.set("lineItems", d);
			this.order.refunds.forEach(function (a) {
				a.refund_line_items.forEach(function (a) {
					if (a = c.lineItems.findProperty("id", a.line_item_id)) a.isRefunded = !0
				})
			});
			setTimeout(function () {
				c.resizeView();
				c.$(".spinner").spinner({
					stop: function (a, d) {
						var f = parseInt($(this).attr("id"), 10);
						if (f = c.lineItems.findProperty("id", f)) f.selectedQuantity = parseInt($(this).spinner("value"));
						c.getRefundCalculation()
					}
				})
			});
			this.getRefundCalculation();
			this.$().delegate(".shipping-refund",
				"keydown", function () {
					a = $(this).val()
				});
			this.$().delegate(".shipping-refund", "keyup", throttle(function () {
				a !== $(this).val() && (a = $(this).val(), c.getRefundCalculation())
			}, 50));
			this.$().delegate(".refund-amount", "keyup", throttle(function () {
					var a = parseFloat($(this).val()).toFixed(2);
					a !== c.calculatedAmount ? c.set("hasDiscrepancy", !0) : c.set("hasDiscrepancy", !1);
					0 === parseInt(c.calculatedAmount, 10) && 0 === parseInt(a, 10) ? c.$(".proceed-refund").attr("disabled", "disabled") : c.$(".proceed-refund").removeAttr("disabled")
				},
				50));
			this.$().delegate(".proceed-cancel", "click", function () {
				var a = {
					propertyId: c.propertyId,
					orderId: c.order.id,
					restock: !1,
					refund: {shipping: {amount: 0}, refundLineItems: [], transactions: [], restock: !1}
				};
				c.$(".restock-items").length && (a.refund.restock = c.$(".restock-items").is(":checked"), a.restock = a.refund.restock);
				c.$(".discrepancy-reason").length && (a.refund.discrepancyReason = c.$(".discrepancy-reason").val());
				a.email = c.$(".notify-customer").is(":checked");
				a.reason = c.$(".cancel-reason").val();
				a.refund.notify =
					a.email;
				c.$(".shipping-refund").length && (a.refund.shipping.amount = parseFloat(c.$(".shipping-refund").val()));
				c.lineItems.forEach(function (c) {
					0 !== c.selectedQuantity && a.refund.refundLineItems.push({
						lineItemId: c.id,
						quantity: c.selectedQuantity
					})
				});
				c.gateways.forEach(function (c) {
					a.refund.transactions.push({parentId: c.parentId, gateway: c.type, amount: parseFloat(c.amount)})
				});
				socketConnector.cancelOrder(a, function (a) {
					a ? (a = "NotFound" === a.code && "integration" === a.message ? "Shopify integration is not available for this property." :
						"InternalServerError" === a.code ? "Server is unavailable. Please try again." : "UnauthorizedError" === a.code ? "You do not have access to perform this action." : "Unable to cancel this order. Please try again", errorSave(c.$(".modal-footer"), a)) : c.closeCallback("Successfully canceled order " + c.order.name)
				})
			})
		}, getRefundCalculation: function () {
			var a = 0, c = this,
				d = {propertyId: this.propertyId, orderId: this.order.id, shipping: {amount: 0}, refundLineItems: []};
			if (this.$(".shipping-refund").length && (d.shipping.amount = parseFloat(this.$(".shipping-refund").val()),
				d.shipping.amount > parseFloat(c.shippingRefund))) {
				errorSave(c.$(".modal-footer"), "The specified shipping amount is greater than the allowed value.");
				return
			}
			this.lineItems.forEach(function (a) {
				0 !== a.selectedQuantity && d.refundLineItems.push({lineItemId: a.id, quantity: a.selectedQuantity});
				a.refundAmount = "0.00"
			});
			this.set("isCalculating", !0);
			socketConnector.calculateOrderRefund(d, function (b, d) {
				var f = 0, g = 0, h = 0, k = 0, l = [];
				c.set("isCalculating", !1);
				d.data.refund.transactions.forEach(function (a) {
					f += parseFloat(a.maximum_refundable);
					l.pushObject({
						type: a.gateway,
						maximumAmount: a.maximum_refundable,
						amount: a.amount,
						parentId: a.parent_id
					});
					g += parseFloat(a.amount)
				});
				d.data.refund.refund_line_items.forEach(function (b) {
					var d = c.lineItems.findProperty("id", b.line_item_id);
					d && (d.refundAmount = parseFloat(b.subtotal), k += d.refundAmount, h += parseFloat(b.total_tax));
					a += b.quantity
				});
				d.data.refund.shipping && "0.00" !== d.data.refund.shipping.maximum_refundable && c.set("shippingRefund", d.data.refund.shipping.maximum_refundable);
				c.set("totalRefundValue",
					f.toFixed(2));
				c.set("subTotal", k.toFixed(2));
				c.set("totalTax", h.toFixed(2));
				c.set("gateways", l);
				c.set("calculatedAmount", g.toFixed(2));
				c.set("hasDiscrepancy", !1);
				c.set("refundQuantity", a);
				0 === g ? c.$(".proceed-refund").attr("disabled", "disabled") : c.$(".proceed-refund").removeAttr("disabled")
			})
		}, refundQuantityText: function () {
			return languageParser.translate("visitors", "restock_items", {num: this.refundQuantity})
		}.property("refundQuantity")
	});
	Tawk.DuplicateOrder = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.duplicateOrder,
		classNames: ["modal"], didInsertElement: function () {
			var a = this;
			this._super();
			this.$().delegate(".submit-form", "click", function () {
				var c = {
					propertyId: a.propertyId,
					orderId: a.id,
					receipt: a.$(".send-receipt").is(":checked"),
					fufillmentReceipt: a.$(".send-fullfillment").is(":checked"),
					status: "same" === a.$(".payment-status").val() ? void 0 : a.$(".payment-status").val(),
					inventory: a.$(".inventory-status").val()
				};
				socketConnector.duplicateOrder(c, function (c, b) {
					var e;
					c ? (e = "NotFound" === c.code && "integration" === c.message ?
						languageParser.translate("conversations", "shopify_not_available") : "NotFound" === c.code && "order" === c.message ? "Specified order to be duplicated was not found." : "Unable to duplicate order. Please try again", errorSave(a.$(".modal-footer"), e)) : a.closeCallback("Successfully created a new order : " + b.data.order.name)
				});
				return !1
			})
		}
	});
	Tawk.ShopifyDataView = Ember.View.extend({
		template: Ember.TEMPLATES.visitorShopifyView,
		classNames: ["visitor-shopify-view"],
		isLoading: null,
		isEdit: !1,
		currentOrderCount: 0,
		orderValues: null,
		ordersRaw: null,
		didInsertElement: function () {
			var a = this, c = Tawk.webProperties.getProperty(this.propertyId);
			c && c.isAdmin ? this.set("isAdminAgent", !0) : this.set("isAdminAgent", !1);
			this.loadSettings();
			this.$().delegate(".edit-fields", "click", function () {
				a.formatEditFields();
				a.initSortable();
				a.set("isEdit", !0);
				return !1
			});
			this.$().delegate(".customer-select", "change", function () {
				var c = $(this).is(":checked");
				a.customerSettings.set("enabled", c);
				a.$(".sortable-list").sortable({containment: "parent", placeholder: "tab-sort-placeholder"})
			});
			this.$().delegate(".order-select", "change", function () {
				var c = $(this).is(":checked");
				a.orderSettings.set("enabled", c);
				a.$(".sortable-list").sortable({containment: "parent", placeholder: "tab-sort-placeholder"})
			});
			this.$().delegate(".cancel-edit", "click", function () {
				a.set("isEdit", !1);
				a.set("customerSettings", null);
				a.set("orderSettings", null)
			});
			this.$().delegate(".expand-list", "click", function () {
				var a = $(this).attr("data-id");
				(parent = $(this).parents("#" + a)) && parent.find(".inner-list").first().show();
				$(this).addClass("collapse-list").removeClass("expand-list");
				$(this).html('<i class="fa fa-lg fa-chevron-circle-up"></i>')
			});
			this.$().delegate(".collapse-list", "click", function () {
				var a = $(this).attr("data-id");
				(parent = $(this).parents("#" + a)) && parent.find(".inner-list").first().hide();
				$(this).addClass("expand-list").removeClass("collapse-list");
				$(this).html('<i class="fa fa-lg fa-chevron-circle-down"></i>')
			});
			a.$(".search-shopify").submit(function () {
				a.loadVisitorData();
				return !1
			});
			this.$().delegate(".clean-search-shopify", "click", function () {
				a.$(".search-query").val("");
				a.loadVisitorData(!0);
				return !1
			});
			this.$(".search-query").on("keyup", function () {
				$(this).val() ? a.$(".clean-search-shopify").removeClass("hidden") : a.$(".clean-search-shopify").addClass("hidden")
			});
			this.$().delegate(".refund_order", "click", function () {
				var c, b, e = $(this).attr("data-id");
				(e = a.orderValues.findProperty("mainId", e)) ? c = a.ordersRaw.findProperty("id", e.id) : errorSave(a.$(), languageParser.translate("conversations", "order_not_found"));
				c ? (b = Tawk.RefundOrder.create({
					order: c, propertyId: a.propertyId,
					closeCallback: function (c) {
						b.remove();
						c && (successSave(a.$(), c), a.loadVisitorData())
					}
				}), b.append()) : errorSave(a.$(), "Unable to find order")
			});
			this.$().delegate(".duplicate_order", "click", function () {
				var c = $(this).attr("data-id"), c = a.orderValues.findProperty("mainId", c),
					b = Tawk.DuplicateOrder.create({
						order_number: c.order_number,
						id: c.id,
						propertyId: a.propertyId,
						closeCallback: function (c) {
							b.remove();
							c && (successSave(a.$(), c), a.loadVisitorData())
						}
					});
				b.append()
			});
			this.$().delegate(".cancel_order", "click", function () {
				var c,
					b, e = $(this).attr("data-id");
				(e = a.orderValues.findProperty("mainId", e)) ? c = a.ordersRaw.findProperty("id", e.id) : errorSave(a.$(), languageParser.translate("conversations", "order_not_found"));
				c ? (b = Tawk.CancelOrder.create({
					order: c, propertyId: a.propertyId, closeCallback: function (c) {
						b.remove();
						c && (successSave(a.$(), c), a.loadVisitorData())
					}
				}), b.append()) : errorSave(a.$(), languageParser.translate("conversations", "order_not_found"))
			});
			this.$().delegate(".save-edit", "click", function () {
				var c = {};
				c.customer = a.settings.customerSettings;
				c.order = a.settings.orderSettings;
				c.customer.enabled = a.customerSettings.enabled;
				c.order.enabled = a.orderSettings.enabled;
				a.set("isLoading", !0);
				Tawk.webProperties.saveShopifyConfig(a.propertyId, c, function (b, e) {
					b ? (errorSave(a.$(".form-footer")), a.set("isLoading", !1)) : (successSave(a.$(".form-footer")), a.set("settings", {
						customerSettings: c.customer,
						orderSettings: c.order,
						version: e
					}), a.loadVisitorData())
				})
			});
			this.$().delegate(".field-header", "change", function () {
				var c = $(this).attr("name");
				"order" === c ? a.set("settings.orderSettings.header",
					$(this).val()) : "customer" === c && a.set("settings.customerSettings.header", $(this).val())
			});
			this.$().delegate(".load-orders", "click", function () {
				var c = $(this);
				c.attr("disabled", "disabled").html('<i class="fa fa-refresh fa-spin"></i>');
				a.loadMoreOrders(function () {
					c.removeAttr("disabled").html(languageParser.translate("conversations", "load_orders"))
				})
			});
			this.$().delegate(".edit-shipping-address", "click", function () {
				a.$(".edit-view").removeClass("hidden");
				a.$(".content-view").addClass("hidden");
				$(this).prev().hasClass("collapsed") &&
				$(this).prev().click()
			});
			this.$().delegate(".cancel-address-edit", "click", function () {
				a.$(".edit-view").addClass("hidden");
				a.$(".content-view").removeClass("hidden");
				return !1
			})
		},
		loadSettings: function () {
			var a = this;
			this.set("isLoading", !0);
			Tawk.webProperties.getShopifySettings(this.propertyId, function (c, d) {
				c ? a.set("isLoading", !1) : (a.set("settings", {
					customerSettings: d.customerSettings,
					orderSettings: d.orderSettings,
					version: d.configVersion
				}), a.loadVisitorData())
			})
		},
		loadVisitorData: function () {
			var a = this,
				c = this.$(".search-query").val();
			this.set("isLoading", !0);
			if (!c && !this.email) return this.orderValues ? this.orderValues.clear() : this.set("orderValues", []), this.set("customerValues", null), this.set("emptyResults", !1), this.set("showImage", !0), this.set("isLoading", !1);
			Tawk.conversationsController.getVisitorShopifyData(this.propertyId, c || this.email, !1, function (d, b) {
				a.set("isLoading", !1);
				!d && b.data && (null === b.data.customer && 0 === b.data.orders.length ? (c && a.set("emptyResults", !0), a.set("showImage", !0)) : (a.set("emptyResults",
					!1), a.set("showImage", !1)), b.data.shop && a.set("shopName", b.data.shop), b.data.customer && (a.settings.customerSettings.enabled ? a.setCustomerValues(b.data.customer) : a.set("customerValues", null), a.set("totalOrders", b.data.customer.orders_count), a.set("customerId", b.data.customer.id)), a.set("currentPage", 1), a.orderValues ? a.orderValues.clear() : a.set("orderValues", []), b.data.orders && a.settings.orderSettings.enabled && a.setOrderValues(b.data.orders), a.set("ordersRaw", b.data.orders), setTimeout(function () {
					a.$(".shipping-address-form").validate({
						errorPlacement: function (a,
						                          b) {
							a.insertAfter(b.parent())
						}, submitHandler: function (b) {
							var c, d, h, k = {propertyId: a.propertyId}, l = $(b).parents(".main-tab").attr("id");
							d = $(b).parents(".inner-tab").attr("id");
							if (c = a.orderValues.findProperty("mainId", l)) return k.orderId = c.id, k.address1 = $(b).find(".address1").val(), k.address2 = $(b).find(".address2").val(), k.city = $(b).find(".city").val(), k.zip = $(b).find(".zip").val(), socketConnector.changeShippingAddress(k, function (k, l) {
								var p;
								if (k) p = "NotFound" === k.code && "integration" === k.message ? languageParser.translate("conversations",
									"shopify_not_available") : "InternalServerError" === k.code ? languageParser.translate("generic", "internal_server_error") : "UnauthorizedError" === k.code ? languageParser.translate("generic", "unauthorized_error") : languageParser.translate("conversations", "shipping_address_error"), errorSave($(b), p); else {
									p = c.fields.findProperty("id", d);
									p = c.fields.indexOf(p);
									var q = a.settings.orderSettings.fields.findProperty("label", "shipping_address");
									if (q) {
										var r = [];
										q.fields.forEach(function (a) {
											var b = l.data.order.shipping_address[a.label];
											a.enabled && void 0 !== b && r.pushObject({
												title: beautifyAPIKey(a.label),
												value: b
											})
										});
										h = a.orderValues.indexOf(c);
										a.orderValues.set(h + ".fields." + p + ".fields", r)
									}
									successSave($(b), languageParser.translate("conversations", "shipping_address_changed"))
								}
							}), !1;
							errorSave($(b), languageParser.translate("conversations", "order_not_found"))
						}
					})
				}))
			})
		},
		setCustomerValues: function (a) {
			var c, d = 0, b = this, e = [], f = Ember.Object.create(),
				g = Handlebars.compile("<span>" + this.settings.customerSettings.header + "</span>"),
				h = (new Date).getTime();
			this.settings.customerSettings.fields.forEach(function (f) {
				var g;
				f.enabled && (g = a[f.label], void 0 !== g && ("id" === f.label && (c = g), d++, Array.isArray(g) ? g.forEach(function (a, c) {
					e = b.processObjectData(f.label, a, h + d + "" + c, f, e)
				}) : e = b.processObjectData(f.label, g, h + d + "", f, e)))
			});
			f.set("fields", e);
			f.set("header", $(g(a)).html());
			f.set("mainId", h);
			f.set("mainIdHref", "#" + h);
			this.set("customerValues", f);
			this.set("customerUrl", "http://" + this.shopName + ".myshopify.com/admin/customers/" + c)
		},
		setOrderValues: function (a) {
			var c =
				this, d = [];
			a.forEach(function (a) {
				var e, f = "", g = 0, h = Ember.Object.create({fields: []}), k = (new Date).getTime(), l = !0, m = !0;
				c.settings.orderSettings.header && (e = c.settings.orderSettings.header, e = Handlebars.compile("<span>" + e + "</span>"));
				c.settings.orderSettings.fields.forEach(function (d) {
					var e;
					e = a[d.label];
					if ("id" === d.label) h.set(d.label, e); else if ("order_number" === d.label) h.set(d.label, e); else if ("financial_status" === d.label) {
						if (f = "paid" === e ? f + ('<span class="label label-success">' + beautifyAPIKey(e) + "</span>") :
								f + ('<span class="label label-warning">' + beautifyAPIKey(e) + "</span>"), "pending" === e || "refunded" === e) m = !1
					} else "gateway" !== d.label || e ? "cancelled_at" === d.label && null !== e && (l = !1, f += '<span class="label label-danger">Cancelled</span>') : m = !1;
					d.enabled && void 0 !== e && (g++, Array.isArray(e) ? 0 !== e.length && ("object" === typeof e[0] ? e.forEach(function (a, b) {
						h.fields = c.processObjectData(d.label, a, k + "" + g + "" + b, d, h.fields)
					}) : h.fields = c.processObjectData(d.label, e.join(", "), k + "" + g, d, h.fields)) : h.fields = c.processObjectData(d.label,
						e, k + "" + g, d, h.fields))
				});
				h.set("header", $(e(a)).html());
				h.set("orderUrl", "http://" + c.shopName + ".myshopify.com/admin/orders/" + h.id);
				h.set("mainId", "" + k);
				h.set("mainIdHref", "#" + k);
				h.set("canRefund", m);
				h.set("canCancel", l);
				f && h.fields.insertAt(0, {
					title: languageParser.translate("header", "status"),
					value: f,
					id: k + "-1"
				});
				d.pushObject(h)
			});
			this.orderValues.pushObjects(d);
			this.set("currentOrderCount", this.orderValues.length);
			setTimeout(function () {
				c.$(".tooltip-button").tooltip()
			})
		},
		processObjectData: function (a,
		                             c, d, b, e) {
			var f, g = {}, h = this;
			if (b && !b.enabled || void 0 === c) return e;
			if (b.fields) {
				if (Array.isArray(c)) return 0 === c.length ? e : "object" === typeof c[0] ? (c.forEach(function (c, k) {
					g = {id: d + k + a, fields: []};
					g.href = "#" + g.id;
					g.isInner = !0;
					b.header && (f = Handlebars.compile("<span>" + b.header + "</span>"), g.header = $(f(c)).html());
					for (var l = 0; l < b.fields.length; l++) {
						var q = b.fields[l];
						q.enabled && (g.fields = h.processObjectData(q.label, c[q.label], k + "" + l, q, g.fields))
					}
					e.push(g)
				}), e) : e = this.processObjectData(a, c.join(", "), d, b, e);
				g = {id: d + a, fields: []};
				g.href = "#" + g.id;
				g.isInner = !0;
				b.header && (f = Handlebars.compile("<span>" + b.header + "</span>"), g.header = $(f(c)).html());
				"shipping_address" === a && (g.isShippingAddress = !0);
				for (var k = 0; k < b.fields.length; k++) {
					var l = b.fields[k];
					l.enabled && (g.fields = this.processObjectData(l.label, c[l.label], k, l, g.fields))
				}
			} else g.title = beautifyAPIKey(a), g.value = this.parseValue(c);
			e.pushObject(g);
			return e
		},
		parseValue: function (a) {
			return a && moment(a, [moment.ISO_8601], !0).isValid() ? moment(a).format("DD/MMM/YYYY HH:mm") :
				a && "string" === typeof a ? conversationProcess.createUrl([a]) : null === a ? "-" : a
		},
		formatEditFields: function () {
			var a = this;
			this.set("customerSettings", Ember.Object.create({fields: []}));
			this.set("orderSettings", Ember.Object.create({fields: []}));
			this.settings.customerSettings.fields.forEach(function (c) {
				a.customerSettings.fields.pushObject(c)
			});
			this.settings.orderSettings.fields.forEach(function (c) {
				a.orderSettings.fields.pushObject(c)
			});
			this.customerSettings.set("header", this.settings.customerSettings.header);
			this.customerSettings.set("enabled", this.settings.customerSettings.enabled);
			this.customerSettings.set("label", this.settings.customerSettings.label);
			this.orderSettings.set("header", this.settings.orderSettings.header);
			this.orderSettings.set("enabled", this.settings.orderSettings.enabled);
			this.orderSettings.set("label", this.settings.orderSettings.label)
		},
		initSortable: function () {
			var a = this;
			setTimeout(function () {
				a.$(".sortable-list").sortable({
					containment: "parent", placeholder: "tab-sort-placeholder", cancel: "label",
					stop: function (c, d) {
						var b, e;
						e = $(d.item);
						itemId = e.attr("id");
						list = e.parent();
						currentPosition = list.children("li.field").index(e);
						ancestors = e.parents(".field");
						configType = $(e.parents(".config-type"));
						e = "customer-select" === configType.attr("id") ? a.settings.customerSettings : a.settings.orderSettings;
						if (ancestors.length) for (b = ancestors.length - 1; 0 <= b; b--) {
							var f = $(ancestors[b]).attr("id");
							e = e.fields.findProperty("label", f)
						}
						if (b = e.fields.findProperty("label", itemId)) e.fields.removeObject(b), e.fields.insertAt(currentPosition,
							b), a.initSortable()
					}
				})
			})
		},
		hasMoreOrders: function () {
			var a, c = !1, d = /^[#]{0,1}[0-9]{1,50}$/;
			if ("inDOM" === this._state) return (a = this.$(".search-query").val()) && d.test(a) && (c = !0), this.settings && this.settings.orderSettings.enabled && this.totalOrders > this.currentOrderCount && !c
		}.property("settings", "currentOrderCount", "totalOrders"),
		loadMoreOrders: function (a) {
			var c = this;
			socketConnector.loadOrders({
				propertyId: this.propertyId,
				page: this.currentPage + 1,
				limit: 3,
				customerId: this.customerId
			}, function (d, b) {
				if (d) return errorSave(c.$(),
					languageParser.translate("conversations", "unable_load_shopify")), a();
				c.setOrderValues(b.data.orders);
				c.ordersRaw.pushObjects(b.data.orders);
				c.set("currentPage", c.currentPage + 1);
				a()
			})
		}
	});
	Tawk.ClientDataView = Ember.View.extend({
		template: Ember.TEMPLATES.clientDataView,
		classNames: "visitor-client-data-view",
		didInsertElement: function () {
			var a = this;
			this.set("isLoading", !0);
			visitorUtils.loadClientData(this, function () {
				a.set("isLoading", !1)
			});
			this.$().delegate("#client-data-select", "change", function () {
				var c =
					$(this).val();
				a.$(".client-data").addClass("hidden");
				a.$("#" + c + "-view").removeClass("hidden")
			})
		}
	});
	var visitorUtils = {
		commonEvents: function (a) {
			a.$(".chat-header").resize(function (c) {
				visitorUtils.headerResize(a)
			})
		}, headerResize: function (a) {
			"inDOM" === a._state && a.$(".emoji-container").length && a.$(".emoji-container").remove()
		}, scrollToBottomChat: function (a) {
			clearTimeout(a.scrollTimeout);
			a.set("scrollTimeout", null);
			a.set("scrollTimeout", setTimeout(function () {
				"inDOM" === a._state && a.$(".chat-body").length &&
				a.$(".chat-body").scrollTop(99999999)
			}, 10))
		}, shortcutMatchHighlight: function (a) {
			return '<span class="select2-match">' + a + "</span>"
		}, getShortcuts: function (a) {
			var c = Tawk.shortcutsController.getPropertyShortcuts(a), d = [];
			if (0 === c.length) return d;
			for (a = 0; a < c.length; a++) {
				var b = c[a], e = b.m, f = 150 < e.length ? e.replace(/\n/g, "").substring(0, 150) + "..." : null;
				d.pushObject(Tawk.CopyableModel.create({
					shortcutId: b.id,
					key: b.key,
					keyPlaintext: b.key,
					shortMessage: f,
					options: b.o,
					fullMessage: e,
					dataType: b.dataType,
					plainText: b.m,
					id: b.key + a,
					isGlobal: b.isGlobal
				}))
			}
			d.length && (d[0].selected = !0);
			return d
		}, filterShortcutsSuggestions: function (a, c, d, b) {
			var e = !1, f = [];
			c = c.replace("/", "").toLowerCase();
			replaceWith = function (a) {
				return '<span class="select2-match">' + a + "</span>"
			};
			"?" === c.charAt(0) ? (c = c.substring(1, c.length), e = !0) : b && (e = !0);
			b = RegExp(c, "gi");
			for (var g = 0; g < a.length; g++) {
				var h = a[g].copy(), k = h.key;
				if (!h.isGlobal || !d) if (0 === k.toLowerCase().indexOf(c) || e && (h.fullMessage.match(b) || k.match(b))) h.key = k.replace(b, replaceWith), e && (h.fullMessage =
					h.fullMessage.replace(b, replaceWith), h.shortMessage = h.shortMessage ? h.shortMessage.replace(b, replaceWith) : null), f.pushObject(h)
			}
			return f
		}, joinChat: function (a, c, d) {
			var b;
			a.content.isPersonalPage ? b = Tawk.webProperties.personalPage.alias : (b = a.$(".profile-id").val(), b = a.content.agentProfiles.findProperty("aliasId", b));
			if (!b) return d(!0);
			if ("i" === Tawk.userController.user.status) return checkAndSetAlertBoxView(languageParser.translate("action_messages", "attention"), languageParser.translate("action_messages",
				"status_invisible_join", {lineBreak: "<br />"})), d();
			a.content.set("_conversationProfile", b);
			Tawk.visitorChatController.joinChat(a.content, b, c, function (b) {
				if (b) return "ALREADY_HAS_AGENT" !== b || a.requireConfirmation || a.set("requireConfirmation", !0), d();
				setTimeout(function () {
					a.$(".message-input").length && a.$(".message-input").textcomplete(emojiTextComplete.strategies, emojiTextComplete.options)
				}, 50);
				d()
			})
		}, loadKBData: function (a, c, d) {
			var b = function () {
				a.set("kbContentList", Tawk.PagingListModel.create({perpage: 10}));
				visitorUtils.loadKBList(a, c, !1, !0, d)
			};
			d = d || function () {
			};
			if (a.kbContentList || a.kbContentList && a.isLoading) return d();
			a.kbCategories ? b() : Tawk.webProperties.loadKBCategory(c, function (c, d) {
				if (c) return b();
				a.set("kbCategories", d);
				b()
			})
		}, loadKBList: function (a, c, d, b, e) {
			var f = {};
			"inDOM" === a._state && (e = e || function () {
			}, f.query = b ? void 0 : a.$(".search-kb-text").val().trim() || void 0, 1 === d && a.kbContentList.get("hasNext") ? a.kbContentList.nextList() : -1 === d && a.kbContentList.get("hasPrevious") ? a.kbContentList.previousList() :
				(a.kbContentList.reset(), a.kbContentList.startList()), f.category = a.$(".search-kb-category").val() || void 0, f.size = 10, f.status = "published", f.from = a.kbContentList.currentHead, a.set("isLoading", !0), a.kbContentList.currentData.clear(), socketConnector.getKBList(c, f, function (b, c) {
				var d = [];
				a.set("isLoading", !1);
				if (b) return e(!0);
				c.hits.forEach(function (b) {
					var c, e = {
						id: b.contentId,
						createdOn: moment(b.createdOn).format("MMM Do"),
						categoryName: a.kbCategories.findProperty("id", b.categories[0]).name
					};
					b.categories &&
					b.categories.length && (c = a.kbCategories.findProperty("id", b.categories[0]));
					e.categoryName = c && !c.isDeleted ? c.name : "Uncategorized";
					b.highlight && (b.highlight.plainContent && (e.snippet = markdownConverter.makeHtml(encodeStr(b.highlight.plainContent[0]) + "..."), e.snippet = e.snippet.replace(/\[em\]/g, '<span class="highlight-search">'), e.snippet = e.snippet.replace(/\[\/em\]/g, "</span>")), b.highlight.title && (e.title = encodeStr(b.highlight.title[0]), e.title = e.title.replace(/\[em\]/g, '<span class="highlight-search">'),
						e.title = e.title.replace(/\[\/em\]/g, "</span>")));
					e.title || (e.title = encodeStr(b.title));
					e.snippet || (e.snippet = markdownConverter.makeHtml(encodeStr(b.snippet) + "..."));
					d.pushObject(e)
				});
				a.kbContentList.setList(d);
				a.kbContentList.setTotal(c.total);
				e()
			}))
		}, loadClientData: function (a, c) {
			Tawk.webProperties.loadHiredAgentContent(a.propertyId, function (d) {
				if (null === d) return c();
				a.set("content", d);
				c()
			})
		}, checkWebRTCSettings: function (a) {
			var c;
			"inDOM" === a._state && (c = Tawk.webProperties.getProperty(a.content.pgid),
				c.webrtcActivated ? c.webrtcEnabled ? (c.webrtcVideoEnabled ? a.$(".video-call-visitor").show() : a.$(".video-call-visitor").hide(), c.webrtcScreenEnabled ? a.$(".screen-share-visitor").show() : a.$(".screen-share-visitor").hide(), a.$(".phone-call-visitor").show()) : (a.$(".video-call-visitor").hide(), a.$(".phone-call-visitor").hide(), a.$(".screen-share-visitor").hide()) : (a.$(".video-call-visitor").hide(), a.$(".phone-call-visitor").hide(), a.$(".screen-share-visitor").hide()), a.$(".input-tooltip").tooltip())
		}, startUpload: function (a,
		                          c, d, b) {
			var e, f = toScrollBottom(a.$(".chat-body"));
			b = b || function () {
			};
			fileUploader.getUploadHandler(function (g, h) {
				var k, l;
				if (g) return visitorUtils.handleUploadError(a, c, l, k, d), b();
				k = h.handle;
				l = d ? $(c).find(".file-input").val().replace(/^.*\\/, "") : c.name || c.fileName;
				e = $('<div id="upload-' + k + '" class="upload-data"></div>');
				Tawk.visitorChatController.addHandle(k, a.content._id);
				e.append('<span><i class="fa fa-upload"></i>' + encodeStr(l) + "</span>");
				e.append('<div class="progress progress-sm progress-striped active"><div class="progress-bar" role="progressbar" style="width: 0.5%"></div></div>');
				e.on("progressUpdate", function (a, b) {
					$(this).find(".progress-bar").css("width", b + "%")
				});
				e.on("uploadComplete", function (a, b) {
					$(this).remove();
					Tawk.visitorChatController.uploadComplete(b)
				});
				a.$(".chat-content").append(e);
				f && visitorUtils.scrollToBottomChat(a);
				fileUploader.uploadFile(k, c, a.content.pgid, d, function (e, f) {
					e && visitorUtils.handleUploadError(a, c, l, k, d, f);
					b()
				})
			})
		}, handleUploadError: function (a, c, d, b, e, f) {
			var g, h = $('<a href="javascript:void(0);">' + languageParser.translate("visitors", "retry") + "</a>"),
				k = toScrollBottom(a.$(".chat-body"));
			d = d ? ' "' + encodeStr(d) + '"' : "";
			f = f || "upload_file_error";
			g = $('<div class="upload-error"><i class="fa fa-exclamation-triangle txt-color-red"></i>' + languageParser.translate("visitors", f, {fileName: d}) + "</div>");
			if (b) {
				d = a.$().find("#upload-" + b);
				if (!d.length) return;
				d.remove();
				!c || (e || f && "upload_file_error" !== f) || (g.append(h), h.click(function () {
					g.remove();
					a.startUpload(a, c, e)
				}))
			}
			a.$(".chat-content").append(g);
			k && visitorUtils.scrollToBottomChat(a)
		}, addNewMessageAtBottom: function (a) {
			var c,
				d = a.$().find(".new-message-container");
			!a.$(".chat-body").find(".unseen-message-container").length && d.length && (c = $('<div class="unseen-message-container"><span class="text">' + languageParser.translate("visitors", "new_messages") + '</span><i class="fa fa-arrow-down"></i></div>'), c.insertAfter(a.$(".chat-body")), a.$(".chat-body").on("scroll", function (b) {
				b = a.$(".chat-body").scrollTop();
				var e = b + a.$(".chat-body").height(), f = $(d)[0].offsetTop;
				f + $(d).height() <= e && f >= b && (c.off(), c.remove())
			}), c.click(function () {
				a.$(".chat-body")[0].scrollTop =
					$(d)[0].offsetTop;
				setTimeout(function () {
					d.remove()
				}, 1E3)
			}))
		}, hasNewMessage: function (a, c) {
			var d;
			if ("inDOM" === a._state && !a.content.showFlash && !a.content.isOwn) {
				d = !document.hasFocus() || 1 !== a.$().has($(document.activeElement)).length;
				if (!a.content.isNewMessage) return a.content.clearUnseen();
				d && !a.$().find(".new-message-container").length && $('<div class="new-message-container"><div class="left-border"><div class="border"></div></div><div class="text">' + languageParser.translate("visitors", "new_messages") +
					'</div><div class="right-border"><div class="border"></div></div></div>').insertBefore($(c)[0]);
				d ? a.content.set("showFlash", !0) : a.content.clearUnseen()
			}
		}, initCall: function (a, c, d) {
			a.$(".incoming-call").remove();
			visitorUtils.joinWebRTCCall(a, {video: c, screen: d})
		}, joinWebRTCCall: function (a, c, d) {
			var b;
			joinWebRTCCall(a.content, c, d, function (d, f) {
				d && (b = f ? languageParser.translate("visitors", f.message) : c ? c.screen ? languageParser.translate("visitors", "webrtc_screenshare_error") : languageParser.translate("visitors",
					"webrtc_call_error") : languageParser.translate("visitors", "join_call_error"), a.content.set("incomingCall", !1), a.content.lastBlock = null, errorSave(a.$(".chat-body"), b), visitorUtils.scrollToBottomChat(a))
			})
		}, calculateMinifiedVisit: function (a) {
			a = moment.duration(moment().diff(a));
			return 0 < a.years() ? a.years() + "Y" : 0 < a.months() ? a.months() + "M" : 0 < a.days() ? a.days() + "d" : 0 < a.hours() ? a.hours() + "h" : 0 < a.minutes() ? a.minutes() + "m" : a.seconds() + "s"
		}, saveVisitorData: function (a, c) {
			var d = {};
			a.content.isHistory ? (d.sessionKey =
				null, d.visitorId = a.content.nvid) : (d.sessionKey = a.content._id, d.visitorId = a.content.vid);
			d.propertyId = a.content.pgid;
			a.$(".visitor-note").length ? d.notes = a.$(".visitor-note").val().trim() : d.notes = "";
			a.$(".visitor-name-input").length ? d.name = a.$(".visitor-name-input").val().trim() : d.name = decodeStr(a.content.n);
			a.$(".visitor-email-input").length ? d.email = a.$(".visitor-email-input").val().trim() : d.email = a.content.e;
			a.clearSaveMessages && "function" === typeof a.clearSaveMessages && a.clearSaveMessages();
			updateVisitorDetails(d,
				a.content, function (a, d) {
					a ? errorSave(c) : successSave(c)
				})
		}, openFirstTab: function (a) {
			a && a.length && (a = a.find("li").first(), a.hasClass("dropdown") ? a.find(".inner-item").first().trigger("click") : a.trigger("click"))
		}, updateResizeMenuAndSidebar: function (a) {
			var c, d;
			"inDOM" === a._state && (a.$(".menu").removeClass("hidden"), c = a.$(".jarviswidget").width(), d = 600 > c ? 0.7 : 0.75, d = a.$(".menu").width() + 30 > a.$(".header-list").width() * d, 500 > c ? (a.$(".chat-details-container").addClass("full"), a.$(".chat-content-container").css({
				right: 0,
				width: "auto"
			})) : (a.$(".chat-details-container").removeClass("full"), a.$(".chat-content-container").css({
				right: a.$(".chat-details-container").width() + 2,
				width: "auto"
			})), 500 > c || d ? (a.$(".menu").addClass("hidden"), a.$(".minimized-tab").removeClass("hidden"), a.$(".minimized-dropdown").dropdown(), a.set("isMinimized", !0), visitorUtils.removeResizableSidebar(a), d ? a.set("menuFits", !1) : a.set("menuFits", !0)) : (a.$(".menu").removeClass("hidden"), a.$(".minimized-tab").addClass("hidden"), a.set("isMinimized", !1), a.set("menuFits",
				!0), visitorUtils.initResizableSidebar(a), (!Tawk.visitorChatContainerView.get("isChatDetailsHidden") || a.content.isHistory || a.content.hId) && a.openSidebar()), a.$(".name-text-container").width(a.$(".header-list").width() - a.$(".menu-container").width() - 8))
		}, initResizableSidebar: function (a) {
			a.isResizableInit ? a.$(".chat-details-container").resizable("option", "maxWidth", a.$(".jarviswidget").width() - 270) : (a.set("isResizableInit", !0), a.$(".chat-details-container").resizable({
				handles: "w", minWidth: 200, maxWidth: a.$(".jarviswidget").width() -
				270, resize: function (c, d) {
					a.$(".chat-content-container").css("right", d.size.width + 1 + "px")
				}
			}))
		}, removeResizableSidebar: function (a) {
			a.isResizableInit && ("inDOM" === a._state && a.$(".chat-details-container").is(".ui-resizable")) && (a.set("isResizableInit", !1), a.$(".chat-details-container").resizable("destroy"))
		}
	};
	Tawk.InlineChatView = Ember.Mixin.create({
		previousTabSelected: null, willDestroyElement: function () {
			this.$(".message-input").textcomplete("destroy");
			this.$(".whisper-input").textcomplete("destroy")
		}, scrollToView: function () {
			"inDOM" ===
			this._state && this.content.show && (Tawk.visitorChatContainerView.scrollToEl(this.elementId), this.set("content.show", !1))
		}.observes("content.show"), columnStyleChanged: function () {
			var a = this;
			"inDOM" === this._state && setTimeout(function () {
				"inDOM" === a._state && (a.$(".chat-content-container").removeAttr("style"), a.$(".chat-details-container").removeAttr("style"), a.$(".chat-content-container").css({
					right: a.$(".chat-details-container").width() + 2,
					width: "auto"
				}))
			})
		}.observes("Tawk.visitorChatContainerView.columnStyle"),
		detailsClosed: function () {
			"inDOM" === this._state && (Tawk.visitorChatContainerView.get("isChatDetailsHidden") ? this.closeSidebar() : (visitorUtils.updateResizeMenuAndSidebar(this), this.openSidebar()))
		}.observes("Tawk.visitorChatContainerView.isChatDetailsHidden"), hideAndResizeHeader: function () {
			var a = this.$(".jarviswidget.focus-chat").width() || this.$(".jarviswidget").width();
			500 < a && this.$(".minimized-tab").addClass("hidden");
			this.$().hasClass("agent-chat-container") ? 500 < a ? this.$(".menu-container .nav.nav-tabs").addClass("hidden") :
				500 >= a && this.$(".menu-container .nav.nav-tabs").removeClass("hidden") : (this.$(".menu-container .menu.nav.nav-tabs").addClass("hidden"), this.$(".name-text-container").width(this.$(".header-list").width() - this.$(".menu-container").width() - 2))
		}, inViewChanged: function () {
			var a = this;
			"inDOM" === this.state && this.content.inView && setTimeout(function () {
				a.$(".chat-input").focus()
			})
		}.observes("content.inView"), didInsertElement: function () {
			var a, c = this;
			this.content.set("autoFocus", !1);
			this.$(".chat-header").debounce("resize",
				function () {
					"inDOM" === c._state && (a && (c.$(".open-emoji").removeClass("selected"), a.remove(), a = null), visitorUtils.updateResizeMenuAndSidebar(c), visitorUtils.initResizableSidebar(c), c.checkAndResizeFooterForm())
				});
			c.$(".tab").tooltip({placement: "bottom"});
			setTimeout(function () {
				c.$(".chat-header").resize();
				c.detailsClosed();
				c.$(".message-input").length && c.$(".message-input").textcomplete(emojiTextComplete.strategies, emojiTextComplete.options);
				c.$(".whisper-input").length && c.$(".whisper-input").textcomplete(emojiTextComplete.strategies,
					emojiTextComplete.options)
			});
			this.$().delegate(".open-emoji", "click", function (d) {
				a || (d.stopPropagation(), $(this).addClass("selected"), a = getEmojiView($(this).parents(".textarea-div"), $(this).parent().find(".chat-input")), d = c.$().position().left + c.$(".chat-content-container").width(), d + a.width() >= $(window).width() ? a.css("right", "10px") : a.css("left", c.$().position().left + c.$(".chat-content-container").width()))
			});
			this.$().click(function (d) {
				0 === $(d.target).parents(".emoji-container").length && a && (d.stopPropagation(),
					c.$(".open-emoji").removeClass("selected"), a.remove(), a = null)
			});
			this.$().delegate(".chat-input", "focus", function () {
				a && (c.$(".open-emoji").removeClass("selected"), a.remove(), a = null)
			});
			this.$().delegate(".chat-input", "paste cut focus keydown change", function (a) {
				var b = $(this).val(), e = $(this)[0].scrollHeight, f = toScrollBottom(c.$(".chat-body")),
					g = c.$(".chat-footer").outerHeight(!0), h = c.content.isAgentChat ? 65 : 105;
				if (a.shiftKey || 13 !== a.keyCode) 9 === a.keyCode ? c.suggestions && c.suggestions.length || (a.preventDefault(),
					Tawk.chatController.focusNextChat()) : (b ? e + 65 > g && 200 < e && (e = 200) : e = 40, 40 > e && (e = 40), e && ($(this).css("height", e + "px"), c.$(".chat-footer").css("height", e + 65 + "px"), c.$(".chat-body").css("bottom", e + h + "px"), f && visitorUtils.scrollToBottomChat(c)))
			});
			this.$().delegate(".typearea", "click", function () {
				$(this).find(".chat-input").focus()
			});
			this.$().bind("sidebarClosed", this.closeSidebar.bind(this));
			this.$().bind("sidebarOpened", this.openSidebar.bind(this))
		}, checkAndResizeFooterForm: function () {
			var a = this;
			setTimeout(function () {
				a.$(".confirmation-requested").length &&
				(a.$(".confirmation-requested.multi-line").removeClass("multi-line"), 28 < a.$(".confirmation-requested .warning").outerHeight() && a.$(".confirmation-requested").addClass("multi-line"))
			})
		}, autoFocusChanged: function () {
			var a = this;
			"inDOM" === this._state && this.content.autoFocus && setTimeout(function () {
				a.$(".chat-input").focus();
				a.content.set("autoFocus", !1)
			})
		}.observes("content.autoFocus"), openSidebar: function () {
			if (!this.content.isAgentChat || this.content.isGroup) this.$().removeClass("no-sidebar"), this.previousTabSelected ?
				this.$(".open-view[data-id=" + this.previousTabSelected + "]").click().addClass("active") : visitorUtils.openFirstTab(this.$(".menu"))
		}, closeSidebar: function () {
			this.$().addClass("no-sidebar");
			this.set("previousTabSelected", null)
		}
	});
	var timelineRow = '<li class="parent_li"><div class="timeline-label"><span class="label">{{time}}</span>&nbsp;</div><div class="timeline-data">{{{title}}}{{#each data}}<p class="no-margin">{{key}} : {{{value}}}</p>{{/each}}</div></li>';
	Tawk.VisitorChatView = Ember.View.extend(Tawk.InlineChatView,
		Tawk.MessageSidebar, {
			template: Ember.TEMPLATES.visitorChat,
			tagName: "article",
			classNames: ["visitor-chat-container chat-container"],
			previewModal: null,
			hasSwitchedTab: !1,
			shortcuts: null,
			checkTagFormAndHide: function () {
				if ("inDOM" === this._state && !this.content.isVisitorPresent) {
					var a = this.$(".tag-form");
					a.length && !a.hasClass("hidden") && this.$(".close-tag-form").click()
				}
			}.observes("content.isVisitorPresent"),
			messagePreviewUpdate: function () {
				"inDOM" === this._state && toScrollBottom(this.$(".chat-body")) && visitorUtils.scrollToBottomChat(this)
			}.observes("content.messagePreview",
				"content.typingAgents.@each"),
			conversationBlockUpdated: function () {
				var a = this;
				"inDOM" === this._state && this.content.conversationUpdated && (this.content.conversationBlock.forEach(function (c) {
					a.$(".chat-content").append(c)
				}), visitorUtils.scrollToBottomChat(this))
			}.observes("content.conversationUpdated"),
			hasNewRow: function () {
				var a;
				"inDOM" === this._state && this.content.newRow && (a = toScrollBottom(this.$(".chat-body")), $(this.content.newRow.block).append(this.content.newRow.row), visitorUtils.hasNewMessage(this,
					this.content.newRow.row), a ? visitorUtils.scrollToBottomChat(this) : visitorUtils.addNewMessageAtBottom(this))
			}.observes("content.newRow"),
			hasNewBlock: function () {
				var a;
				"inDOM" === this._state && this.content.newBlock && (a = toScrollBottom(this.$(".chat-body")), this.$(".chat-content").append(this.content.newBlock), visitorUtils.hasNewMessage(this, this.content.newBlock), a ? visitorUtils.scrollToBottomChat(this) : this.content.lastBlock && visitorUtils.addNewMessageAtBottom(this))
			}.observes("content.newBlock"),
			nameChanged: function () {
				"inDOM" ===
				this._state && this.$(".visitor-name").html(encodeStr(decodeStr(this.content.n)))
			}.observes("content.n"),
			getSuggestions: function (a) {
				this.active = 0;
				this.clearSuggestions();
				null === this.shortcuts && this.set("shortcuts", visitorUtils.getShortcuts(this.content.pgid));
				this.shortcuts.length && (this.suggestions.pushObjects(visitorUtils.filterShortcutsSuggestions(this.shortcuts, a)), this.suggestions.length && (this.suggestions[0].selected = !0))
			},
			toggleSuggestions: function () {
				"inDOM" === this._state && (this.content.hasJoinedConversation &&
				this.suggestions && this.suggestions.length ? (this.$(".select2-results").css("max-height", this.$().height() - this.$(".chat-footer").outerHeight() - this.$("header").outerHeight() - 10), this.$(".select2-drop").removeClass("hidden")) : this.$(".select2-drop").addClass("hidden"))
			}.observes("suggestions.length", "content.hasJoinedConversation"),
			navigateShortcutList: function (a) {
				var c;
				c = 38 === a ? -1 : 1;
				a = this.$(".select2-results");
				if (list = $("li", a)) list.removeClass("select2-highlighted"), this.active += c, 0 > this.active ?
					this.active = list.size() - 1 : this.active >= list.size() && (this.active = 0), c = list.slice(this.active, this.active + 1).addClass("select2-highlighted"), a[0].scrollTop = c[0].offsetTop
			},
			clearSuggestions: function () {
				this.suggestions ? this.suggestions.clear() : this.set("suggestions", [])
			},
			didInsertElement: function () {
				var a = this, c = !0, d = Tawk.webProperties.getProperty(this.content.pgid);
				this._super();
				this.setupSidebarEvents();
				this.$(".back-to-chat").tooltip({placement: "bottom"});
				this.hasNewAlertContent();
				this.clearSuggestions();
				this.conversationBlockUpdated();
				this.hasIncomingCall();
				d && this.set("isSite", "site" === d.propertyType);
				this.$(".end-chat").click(function () {
					a.set("isTyping", !1);
					socketConnector.agentStoppedTyping(a.content._id);
					Tawk.visitorChatController.closeChat(a.content._id)
				});
				this.$().delegate(".join-chat", "click", function () {
					var b = $('<span class="join-small-transparent-spinner"></span>'),
						c = a.$(".join-container .profile-select .btn, .join-container .profile-select label.select");
					joinButton = $(this);
					if (a.requireConfirmation) return b.insertAfter(a.$(".join-container .profile-select .warning")),
						c.addClass("hidden"), visitorUtils.joinChat(a, !0, function () {
						b.remove();
						a.set("requireConfirmation", !1);
						c.removeClass("hidden")
					});
					b.insertAfter(joinButton);
					joinButton.hide();
					visitorUtils.joinChat(a, !1, function () {
						b.remove();
						joinButton.show();
						a.checkAndResizeFooterForm()
					})
				});
				this.$().delegate(".cancel-join-chat", "click", function () {
					a.set("requireConfirmation", !1)
				});
				this.$().delegate(".ignore-current-chat", "click", function (b) {
					b.stopPropagation();
					Tawk.visitorChatController.closeChat(a.content._id);
					Tawk.liveMonitoringController.ignoreChat(a.content._id)
				});
				this.$().delegate(".message-input", "keydown", function (b) {
					if (!b.shiftKey) if (9 === b.keyCode && a.suggestions.length) b.preventDefault(), b.stopPropagation(), a.navigateShortcutList(40); else {
						if (33 === b.keyCode || 34 === b.keyCode) return b.preventDefault();
						if (13 === b.keyCode) b.preventDefault(), a.suggestions.length ? a.$(".select2-highlighted").trigger("click") : (b = $(this).val().trim(), Ember.isEmpty(b) || (Tawk.visitorChatController.sendMessage(a.content._id, b), a.set("isTyping", !1), $(this).val("")), $(this).css("height",
							"40px"), a.$(".chat-footer").css("height", "105px"), a.$(".chat-body").css("bottom", "145px")); else {
							if ((38 === b.keyCode || 40 === b.keyCode) && a.suggestions.length) return b.preventDefault(), a.navigateShortcutList(b.keyCode);
							a.clearSuggestions()
						}
					}
				});
				this.$().delegate(".message-input", "keyup", function (b) {
					if (9 !== b.keyCode) {
						if (a.suggestions.length || "/" === $(this).val().charAt(0)) {
							if (38 === b.keyCode || 40 === b.keyCode || 13 === b.keyCode) return;
							a.getSuggestions($(this).val())
						} else a.clearSuggestions();
						!a.isTyping && 0 < $(this).val().trim().length ?
							(a.set("isTyping", !0), socketConnector.agentIsTyping(a.content._id)) : a.isTyping && 0 === $(this).val().trim().length && (a.set("isTyping", !1), socketConnector.agentStoppedTyping(a.content._id))
					}
				});
				this.$().delegate(".chat-input", "focus", function (b) {
					a.$(".textarea-div").addClass("text-focus");
					a.content.set("currentFocus", !0);
					a.content.clearUnseen()
				});
				this.$().delegate(".chat-input", "blur", function (b) {
					a.content.set("currentFocus", !1);
					a.$(".textarea-div").removeClass("text-focus");
					setTimeout(function () {
							a.clearSuggestions()
						},
						250)
				});
				this.$().delegate(".select2-result", "mouseover", function (b) {
					a.$(".select2-result").removeClass("select2-highlighted");
					$(this).addClass("select2-highlighted")
				});
				this.$().delegate(".select2-result", "click", function (b) {
					var c, d = $(this).attr("data-id");
					a.suggestions.every(function (a) {
						return a.id === d ? (c = a, !1) : !0
					});
					c && (a.$(".message-input").val(c.plainText + "\n" + c.options), a.$(".message-input")[0].scrollTop = a.$(".message-input").height(), a.$(".message-input").focus(), a.clearSuggestions())
				});
				this.$().delegate(".copy-transcript",
					"click", function () {
						$(this).select()
					});
				$(window).resize(function () {
					"inDOM" === a._state && (a.toggleSuggestions(), c && visitorUtils.scrollToBottomChat(a))
				});
				this.$(".chat-body").on("scrollstop", function (a) {
					c = toScrollBottom($(this))
				});
				this.$().click(function () {
					a.content.inView || Tawk.chatController.chatFocused(a.content);
					a.content.clearUnseen()
				});
				this.$().delegate(".file-input", "change", function (b) {
					var c, d = 0, g = 0;
					c = $(this)[0];
					b = function () {
						g++;
						g === d && a.$(".file-input").val("")
					};
					if (a.content.hasJoinedConversation) if (void 0 ===
						window.FormData) a.$(".file-input")[0].value && (d = 1, visitorUtils.startUpload(a, a.$(".upload-form")[0], !0, b)); else if ((c = c.files) && c.length) for (var d = c.length, h = 0; h < c.length; h++) visitorUtils.startUpload(a, c[h], null, b)
				});
				Modernizr.draganddrop && (this.$().on("dragover", function (b) {
					b.preventDefault();
					b.stopPropagation();
					a.content.hasJoinedConversation && !a.onWhisperContainer && a.$(".textarea-div").addClass("drag-over")
				}), this.$().on("dragleave", function (b) {
					b.preventDefault();
					b.stopPropagation();
					a.$(".textarea-div").removeClass("drag-over")
				}),
					this.$().on("dragend", function (b) {
						b.preventDefault();
						b.stopPropagation();
						a.$(".textarea-div").removeClass("drag-over")
					}), this.$().on("drop", function (b) {
					b.preventDefault();
					b.stopPropagation();
					if (a.content.hasJoinedConversation && !a.onWhisperContainer) {
						b = b.target.files || b.dataTransfer.files;
						var c = 0, d = 0, g = function () {
							d++;
							d === c && a.$(".file-input").val("")
						};
						a.$(".textarea-div").removeClass("drag-over");
						if (b && 0 !== b.length) for (var c = b.length, h = 0; h < b.length; h++) visitorUtils.startUpload(a, b[h], null, g)
					}
				}));
				this.$().on("image-file-ready",
					function (b, c) {
						var d = toScrollBottom(a.$(".chat-body"));
						c.imageTag.insertAfter(c.newRow.find(".uploaded-file-name"));
						c.newRow.find(".loader").remove();
						d && visitorUtils.scrollToBottomChat(a)
					});
				"function" === typeof this.$(".hover-location").popover && this.$(".hover-location").popover({html: !0});
				"function" === typeof this.$(".device-detail").popover && this.$(".device-detail").popover({viewport: this.$()});
				this.$(".open-tab-pane").click(function () {
					var b = $(this).attr("data-id");
					a.onWhisperContainer = $(this).hasClass("whisper-tab") ?
						!0 : !1;
					a.$(".open-tab-pane").removeClass("active");
					a.$(".tab-pane").removeClass("active");
					a.$("." + b).addClass("active");
					$(this).addClass("active");
					a.$("." + b).find(".chat-input").focus()
				});
				this.$().delegate(".whisper-input", "keydown", function (b) {
					b.shiftKey || 13 !== b.keyCode || (b.preventDefault(), b = $(this).val().trim(), Ember.isEmpty(b) || (Tawk.visitorChatController.sendMessage(a.content._id, b, !0), $(this).val("")), $(this).css("height", "40px"), a.$(".chat-footer").css("height", "105px"), a.$(".chat-body").css("bottom",
						"145px"))
				});
				this.$().delegate(".whisper-input", "keyup", function (b) {
					!a.isTyping && 0 < $(this).val().trim().length ? (a.set("isTyping", !0), socketConnector.agentIsTyping(a.content._id, !0)) : a.isTyping && 0 === $(this).val().trim().length && (a.set("isTyping", !1), socketConnector.agentStoppedTyping(a.content._id, !0))
				});
				this.$().delegate(".uploaded-image", "click", function () {
					var b = $(this).attr("src");
					null !== a.previewModal ? (a.previewModal.set("imageSrc", b), a.previewModal.openView()) : (a.set("previewModal", Tawk.ImagePreview.create({imageSrc: b})),
						a.previewModal.append())
				});
				this.$().delegate(".message-input", "paste", function (b) {
					var c, d = !1, g = null;
					if (c = (b.originalEvent || b).clipboardData) {
						if ((c = c.items) && c.length) for (var h = 0; h < c.length; h++) {
							if ("text/plain" === c[h].type) {
								d = !0;
								break
							}
							if (-1 !== c[h].type.indexOf("image")) {
								var k = c[h].getAsFile();
								null !== k && (g = k, g.name = languageParser.translate("generic", "pasted_image_title", {dateTime: moment().format("DD-MMM-YYYY hh:mmA")}))
							}
						}
						g && !d && (b.preventDefault(), visitorUtils.startUpload(a, g, null))
					}
				});
				setTimeout(function () {
					a.$(".main-menu").dropdown();
					a.$(".button-icon").tooltip();
					a.$(".tab").tooltip();
					visitorUtils.checkWebRTCSettings(a)
				});
				this.$().delegate(".video-call-visitor", "click", function () {
					visitorUtils.initCall(a, !0, !1)
				});
				this.$().delegate(".phone-call-visitor", "click", function () {
					visitorUtils.initCall(a, !1, !1)
				});
				this.$().delegate(".screen-share-visitor", "click", function () {
					visitorUtils.initCall(a, !1, !0)
				});
				this.$().delegate(".answer-call", "click", function () {
					visitorUtils.initCall(a, !1, !1)
				});
				this.$().delegate(".join-call", "click", function () {
					var b =
						$(this).parents(".webrtc-call").attr("id");
					visitorUtils.joinWebRTCCall(a, null, b)
				});
				this.$().delegate(".decline-call", "click", function () {
					var b = $(this).attr("data-id");
					declineWebRTCCall(b, a.content.pgid, function (b) {
						b ? (a.content.lastBlock = null, a.saveError("Unable to ignore call. Please try again.", ".chat-content-container"), visitorUtils.scrollToBottomChat(a)) : (a.$(".incoming-call").remove(), a.content.setProperties({
							incomingCall: !1,
							incomingCallId: null
						}))
					})
				});
				this.$().delegate(".retry-load", "click", function () {
					var b =
						$(this).parents(".webrtc-call").attr("id");
					conversationProcess.processWebRTCCallBlock(b, a.content.pgid, null, !1, function () {
						calllData && a.content.set("callData." + b, calllData)
					})
				})
			},
			clearSaveMessages: function () {
				"inDOM" === this._state && (this.alertTimeout && clearTimeout(this.alertTimeout), $(".alert").remove())
			},
			saveComplete: function (a, c, d, b) {
				"inDOM" === this._state && (this.clearSaveMessages(), this.$(b).append('<div class="alert ' + a + ' fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa ' +
					c + '"></i>' + d + "</div>"))
			},
			saveError: function (a, c) {
				"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "error_save"), this.saveComplete("alert-danger", "fa-ban", a, c))
			},
			saveSuccess: function (a, c) {
				var d = this;
				"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "success_update"), this.saveComplete("alert-success", "fa-check", a, c), clearTimeout(this.alertTimeout), this.set("alertTimeout", setTimeout(function () {
					d.clearSaveMessages()
				}, 3E3)))
			},
			willDestroyElement: function () {
				this._super();
				this.previewModal && this.previewModal.destroy();
				this.removeSidebarViews();
				this.set("scrollTimeout", null);
				this.set("previewModal", null);
				this.content.clearConversations();
				this.$().html("");
				this.$().remove()
			},
			showFlash: function () {
				"inDOM" === this._state && (this.content.showFlash ? this.$("header").addClass("flash-new-message") : this.$("header").removeClass("flash-new-message"))
			}.observes("content.showFlash"),
			ownMessage: function () {
				var a, c;
				"inDOM" === this.state && this.content.isOwn && (a = this.$().find(".new-message-container"),
					c = this.$().find(".unseen-message-container"), a.length && a.remove(), c.length && (c.off(), c.remove()), this.content.clearUnseen())
			}.observes("content.isOwn"),
			willInsertElement: function () {
				var a = Tawk.webProperties.getProperty(this.content.pgid);
				a && a.tabSettings && this.set("tabSettings", a.tabSettings)
			},
			hasNewAlertContent: function () {
				"inDOM" === this._state && this.content.newAlertContent && (this.content.lastBlock = null, this.$(".chat-content").append('<div class="conversation-block property-alert"><p>System</p><div class="conversation-content">' +
					this.content.newAlertContent + "</div></div>"), visitorUtils.scrollToBottomChat(this))
			}.observes("content.newAlertContent"),
			hasIncomingCall: function () {
				var a;
				"inDOM" === this._state && (this.content.incomingCall ? (a = $(HandlebarsTemplates.incomingConnectionView({callId: this.content.incomingCallId})), a.insertBefore(this.$(".chat-footer"))) : (a = this.$(".incoming-call"), a.remove()))
			}.observes("content.incomingCall"),
			callViewUpdated: function () {
				var a;
				"inDOM" === this._state && this.content.callViewUpdate && (a = this.content.callViewUpdate,
					this.content.set("callViewUpdate", null), this.$("#" + a.callId).html(a.el))
			}.observes("content.callViewUpdate"),
			hasJoinedConversationChanged: function () {
				var a = this;
				"inDOM" === this._state && this.content.hasJoinedConversation && setTimeout(function () {
					visitorUtils.checkWebRTCSettings(a)
				})
			}.observes("content.hasJoinedConversation")
		});
	Ember.Handlebars.helper("visitorChat", Tawk.VisitorChatView);
	Tawk.VisitorChatContainerView = Ember.View.extend({
		template: Ember.TEMPLATES.visitorChatContainer,
		elementId: "visitor-chat-view",
		controller: Tawk.chatController,
		maxColumns: 4,
		chatsListBinding: Ember.Binding.oneWay("Tawk.chatController.chatList"),
		chatListView: [],
		currentPosition: 0,
		tempCloseChatDetails: !1,
		willInsertElement: function () {
			this.chatsList.addArrayObserver(this, {
				willChange: this.chatsListWillChange,
				didChange: this.chatsListDidChange
			})
		},
		chatsListWillChange: function (a, c, d, b) {
			d = c + d;
			if (!(c >= a.length)) for (d > a.length && (d = a.length); c < d; c++) {
				var e;
				b = a[c];
				if (b = b.isAgentChat ? b.isGroup ? this.chatListView.findProperty("elementId", b.groupId) :
						this.chatListView.findProperty("elementId", b.id) : this.chatListView.findProperty("elementId", b.vid)) e = this.chatListView.indexOf(b), e === this.endIndex && e === this.chatListView.length - 1 ? (this.set("endIndex", e - 1), this.set("startIndex", this.endIndex - this.controller.totalColumns + 1)) : e === this.startIndex && 0 !== e && (this.set("startIndex", e - 1), this.set("endIndex", this.startIndex + this.controller.totalColumns - 1)), b.$().remove(), this.chatListView.removeObject(b), b.destroy(), this.endIndex >= this.chatListView.length -
				1 && (this.set("endIndex", this.chatListView.length - 1), this.set("startIndex", this.endIndex - this.controller.totalColumns + 1)), 0 > this.startIndex && this.set("startIndex", 0), 0 > this.endIndex && this.set("endIndex", 0), this.openChatView()
			}
		},
		chatsListDidChange: function (a, c, d, b) {
			d = c + b;
			if (!(c >= a.length)) for (d > a.length && (d = a.length); c < d; c++) b = a[c], b = b.isAgentChat ? b.isGroup ? Tawk.AgentChatView.create({
				content: b,
				elementId: b.groupId,
				isDetached: !0
			}) : Tawk.AgentChatView.create({
				content: b,
				elementId: b.id,
				isDetached: !0
			}) : Tawk.VisitorChatView.create({
				content: b,
				elementId: b.vid, isDetached: !0
			}), this.chatListView.pushObject(b), this.scrollToEl(b.elementId)
		},
		updateVisitorName: function (a, c) {
			this.$(".chat-" + a).find(".visitor .visitor-name").html(c)
		},
		updateTooltip: function (a) {
			var c = parseInt(this.slider.slider("option", "max"), 10),
				d = parseInt(this.slider.slider("option", "min"), 10);
			a = a ? parseInt(a, 10) : parseInt(this.slider.slider("value"), 10);
			this.tooltip.find(".tooltip-inner").html("View / " + a);
			this.tooltip[0].style.left = (c !== d ? 100 * ((a - d) / (c - d)) : 0) + "%"
		},
		columnStyleChange: function () {
			var a,
				c, d;
			"inDOM" === this._state && this.controller && (a = this.controller.totalColumns, this.maxColumns < this.controller.totalColumns && (a = this.maxColumns), d = this.chatListView.length, a > d && (a = 0 < this.chatListView.length ? this.chatListView.length % a : 1), c = "col-" + a, a = a > d ? d : a, a = this.$("#inner-content").innerWidth() / a, this.$(".chat-container").length && a && (500 >= a ? this.set("tempCloseChatDetails", !0) : this.set("tempCloseChatDetails", !1)), this.set("columnStyle", c))
		}.observes("controller.totalColumns", "chatListView.length"),
		detailsClosedDefault: function () {
			"inDOM" === this._state && (Tawk.chatController.detailsClosed ? $(".chat-container").trigger("sidebarClosed") : $(".chat-container").trigger("sidebarOpened"))
		}.observes("Tawk.chatController.detailsClosed"),
		columnChanged: function () {
			"inDOM" === this.state && (this.$(".change-column").removeClass("active"), this.$("#column-" + this.controller.totalColumns).addClass("active"), this.$("#slider").slider("value") !== this.controller.totalColumns && (this.$("#slider").slider("option", "value",
				this.controller.totalColumns), this.updateTooltip()), this.openChatView())
		}.observes("controller.totalColumns"),
		visibilityChanged: function () {
			"inDOM" === this._state && (this.isShown ? this.$().css("visibility", "visible") : this.$().css("visibility", "hidden"))
		}.observes("isShown"),
		scrollToEl: function (a) {
			"inDOM" === this._state && (a = this.chatListView.findProperty("elementId", a), a.isDetached && (a = this.chatListView.indexOf(a), 0 === a ? (this.set("startIndex", 0), this.set("endIndex", this.controller.totalColumns - 1)) : this.chatListView.length >
			this.controller.totalColumns ? (this.set("startIndex", a - this.controller.totalColumns + 1), this.set("endIndex", a)) : (this.set("startIndex", 0), this.set("endIndex", this.controller.totalColumns)), this.openChatView()))
		},
		openChatView: function () {
			var a;
			if ("inDOM" === this._state && void 0 !== this.startIndex && void 0 !== this.endIndex) {
				this.isShown ? this.$().css("visibility", "visible") : this.$().css("visibility", "hidden");
				0 > this.startIndex && this.set("startIndex", 0);
				this.endIndex > this.chatListView.length - 1 && this.set("endIndex",
					this.chatListView.length - 1);
				for (var c = 0; c < this.chatListView.length; c++) a = this.chatListView[c], c < this.startIndex || c > this.endIndex ? (a.set("isDetached", !0), "preRender" === a._state ? (a.set("autoHide", !0), a.isInserted || (a.set("isInserted", !0), a.appendTo(this.$("#chat-scroller")))) : a.$().hide()) : ("preRender" === a._state ? a.isInserted || (a.set("isInserted", !0), a.appendTo(this.$("#chat-scroller"))) : a.$().show(), a.set("isDetached", !1), visitorUtils.scrollToBottomChat(a));
				0 === this.startIndex && (0 === this.endIndex &&
					1 < this.chatListView.length) && (a = this.chatListView[0], "preRender" === a._state ? a.isInserted || (a.set("isInserted", !0), a.appendTo(this.$("#chat-scroller"))) : a.$().show(), a.set("isDetached", !1), visitorUtils.scrollToBottomChat(a));
				this.endIndex < this.chatListView.length - 1 && this.chatListView.length > this.controller.totalColumns ? this.$("#next-chat").removeClass("disabled") : this.$("#next-chat").addClass("disabled");
				0 < this.startIndex ? this.$("#prev-chat").removeClass("disabled") : this.$("#prev-chat").addClass("disabled")
			}
		},
		didInsertElement: function () {
			var a = null, c = this;
			this.set("startIndex", 0);
			this.set("endIndex", 0);
			this.$(".change-column").tooltip();
			this.$(".btn-circle").tooltip();
			this.$("#column-" + this.controller.totalColumns).addClass("active");
			this.set("tooltip", this.$(".tooltip"));
			this.set("slider", this.$("#slider"));
			this.$("#button-details-toggle").tooltip();
			this.slider.slider({
				min: 1, max: 4, value: c.controller.totalColumns, slide: function (a, b) {
					0 === c.endIndex ? c.set("endIndex", b.value - 1) : b.value > c.controller.totalColumns &&
						(b.value >= c.chatListView.length - 1 ? c.set("endIndex", c.chatListView.length - 1) : c.set("endIndex", c.endIndex + b.value - c.controller.totalColumns - 1));
					c.set("startIndex", c.endIndex - b.value + 1);
					c.controller.changeColumn(b.value);
					c.updateTooltip(b.value)
				}
			});
			this.updateTooltip();
			this.slider.on({
				mouseenter: $.proxy(function () {
					c.tooltip.addClass("in")
				}, this), mouseleave: $.proxy(function () {
					c.tooltip.removeClass("in")
				}, this)
			});
			this.$().delegate("#next-chat", "click", function () {
				c.set("endIndex", c.endIndex + c.controller.totalColumns);
				c.endIndex > c.chatListView.length - 1 && c.set("endIndex", c.chatListView.length - 1);
				c.set("startIndex", c.endIndex - c.controller.totalColumns + 1);
				c.openChatView()
			});
			this.$().delegate("#prev-chat", "click", function () {
				var a;
				a = c.startIndex - c.controller.totalColumns;
				0 > a && (a = 0);
				c.set("startIndex", a);
				a = a + c.controller.totalColumns - 1;
				a > c.chatListView.length - 1 && (a = c.chatListView.length - 1);
				c.set("endIndex", a);
				c.openChatView()
			});
			this.$().delegate("#view-sites", "click", function () {
				window.location.hash = "/admin"
			});
			this.$().delegate("#view-pages",
				"click", function () {
					window.location.hash = "/admin"
				});
			this.$().delegate("#simulate-chat", "click", function () {
				var c = "default",
					b = Tawk.webProperties.sites.filterProperty("enabled", !0).findProperty("isAdmin", !0);
				b || (b = Tawk.webProperties.personalPage, c = "page");
				b.enabled || (b = Tawk.webProperties.pages.filterProperty("enabled", !0).findProperty("isAdmin", !0), c = "page");
				if (!b) return alert(languageParser.translate("visitors", "simulate_error"));
				null === a || a.closed ? a = window.open(GLOBAL_TAWK_URL + "/" + b.tawkId + "/popout/" +
					c + "/?$_tawk_popout=true", "", "width=450, height=500") : a.focus()
			});
			this.$().delegate("#button-details-toggle", "click", function () {
				$(this).toggleClass("active");
				Tawk.chatController.toggleDetailsClosed(!$(this).hasClass("active"))
			});
			$("body").bind("click.chatView", function (a) {
				$(a.target).parents(".tag").length || ($(a.target).hasClass("tt-suggestion") || c.$(".search-text").is(a.target) || c.$(".openFilter").is(a.target) || 0 !== c.$(".open").has(a.target).length || $(a.target).hasClass("select2-result-label") || $(a.target).hasClass("close-selection") ||
					$(a.target).parents(".ui-datepicker-header").length) || c.$(".closePropertyHistoryFilter").trigger("click")
			});
			this.$().delegate(".hover-location", "mouseover", function () {
				"function" === typeof $(this).popover && $(this).popover("show")
			});
			this.$().delegate(".hover-location", "mouseout", function () {
				"function" === typeof $(this).popover && $(this).popover("hide")
			});
			this.$().delegate(".device-detail", "mouseenter", function () {
				"function" === typeof $(this).popover && $(this).popover("show")
			});
			this.$().delegate(".device-detail",
				"mouseleave", function () {
					"function" === typeof $(this).popover && $(this).popover("hide")
				});
			this.$().debounce("resize", function () {
				c.columnStyleChange()
			}, 250)
		},
		updateUploadProgress: function (a) {
			var c = this.$("#upload-" + a.handle);
			c.length && c.find(".progress-bar").css("width", a.progress + "%")
		},
		uploadComplete: function (a) {
			a = this.$("#upload-" + a);
			a.length && a.remove()
		},
		isChatDetailsHidden: function () {
			return Tawk.chatController.detailsClosed || this.tempCloseChatDetails
		}.property("Tawk.chatController.detailsClosed",
			"tempCloseChatDetails"),
		sidebarToggleTooltip: function () {
			return this.get("isChatDetailsHidden") ? languageParser.translate("tooltip", "toggle_on_all_chat_details") : languageParser.translate("tooltip", "toggle_off_all_chat_details")
		}.property("isChatDetailsHidden")
	});
	Tawk.visitorChatContainerView = Tawk.VisitorChatContainerView.create();
	Tawk.VisitorMonitoringContainerView = Ember.View.extend({
		template: Ember.TEMPLATES.visitorMonitoringContainer,
		elementId: "visitor-monitoring-view",
		controller: Tawk.liveMonitoringController,
		banView: null,
		inactiveInterval: null,
		hasActivity: null,
		lastExtend: null,
		inactiveTimeoutValue: null,
		monitoringTimeoutOptions: null,
		willInsertElement: function () {
			var a = [];
			this.controller.loadSubscribedList();
			"undefined" !== typeof main.storageSettings.monitoringTimeout ? this.set("inactiveTimeoutValue", parseInt(main.storageSettings.monitoringTimeout), 10) : (this.set("inactiveTimeoutValue", 10), main.updateStorageSettings("monitoringTimeout", 10));
			a.push({
				value: 10, text: moment.duration(10, "minutes").humanize(), isSelected: 10 ===
				this.inactiveTimeoutValue
			});
			a.push({
				value: 30,
				text: moment.duration(30, "minutes").humanize(),
				isSelected: 30 === this.inactiveTimeoutValue
			});
			a.push({
				value: 60,
				text: moment.duration(60, "minutes").humanize(),
				isSelected: 60 === this.inactiveTimeoutValue
			});
			a.push({
				value: 120,
				text: moment.duration(120, "minutes").humanize(),
				isSelected: 120 === this.inactiveTimeoutValue
			});
			a.push({
				value: -1,
				text: languageParser.translate("monitoring", "disable_sleep"),
				isSelected: -1 === this.inactiveTimeoutValue
			});
			this.set("monitoringTimeoutOptions",
				a)
		},
		statusSelectView: Ember.View.extend(Tawk.CustomSelectInterface, {
			template: Ember.TEMPLATES.genericSelect,
			label: languageParser.translate("header", "status"),
			selectedValue: "all",
			selectClass: "monitoring-status-select",
			options: [{value: "all", text: languageParser.translate("generic", "all_text")}, {
				value: "online",
				text: languageParser.translate("status_types", "online")
			}, {value: "away", text: languageParser.translate("status_types", "away")}]
		}),
		willDestroyElement: function () {
			this.controller.unloadSubscribedList();
			$("body").unbind("click.monitoringView");
			$("body").unbind("mousemove.monitoring click.monitoring keydown.monitoring");
			$(window).unbind("focus.monitoring");
			clearTimeout(this.inactiveTimeout);
			clearTimeout(this.endTimer);
			this.set("inactiveTimeout", null);
			this.set("endTimer", null);
			this.$().html("");
			this.$().remove()
		},
		didInsertElement: function () {
			var a = null, c = this;
			this.$().delegate(".select-country-index", "click", function () {
				var a = $(this).attr("data-id");
				c.$(".list-content").scrollTop(c.$("#" + a)[0].offsetTop);
				c.$(".select-country-index").removeClass("active");
				$(this).addClass("active")
			});
			this.$(".tooltip-hover").tooltip();
			this.$("#set-timeout").popover({trigger: "hover"});
			this.set("lastExtend", (new Date).getTime());
			this.startInactiveTimeout();
			this.controller.isLoading ? ($("#list-block").removeClass("hidden"), this.$("#openFilter").attr("disabled", !0)) : ($("#list-block").addClass("hidden"), this.$("#openFilter").removeAttr("disabled", !0));
			$("body").bind("click.monitoringView", function (a) {
				c.$("#filter-text").is(a.target) ||
				(c.$("#openFilter").is(a.target) || 0 !== c.$(".open").has(a.target).length || $(a.target).hasClass("select2-result-label") || $(a.target).hasClass("close-selection") || c.alertIsActive) || (c.$("#openFilter").parent().removeClass("open"), c.$(".selection-main-container").removeClass("open"), c.controller.isLoading || $("#list-block").addClass("hidden"))
			});
			$("body").bind("mousemove.monitoring click.monitoring keydown.monitoring", throttle(function () {
				c.resetTimeout()
			}, 6E4));
			$(window).bind("focus.monitoring", throttle(function () {
					c.resetTimeout()
				},
				6E4));
			this.$("#search-country-input").keyup(function () {
				c.searchField(Tawk.liveMonitoringController.countriesList, $(this).val().trim(), c.$("#countries-list-container .list-content"))
			});
			this.$("#search-agent-input").keyup(function () {
				c.searchField(Tawk.liveMonitoringController.agentsList, $(this).val().trim(), c.$("#agents-list-container .list-content"))
			});
			this.$("#search-property-input").keyup(function () {
				c.searchField(Tawk.liveMonitoringController.sitesList, $(this).val().trim(), c.$("#sites-selection-container"));
				c.searchField(Tawk.liveMonitoringController.pagesList, $(this).val().trim(), c.$("#pages-selection-container"))
			});
			this.$("#search-tag-input").keyup(function () {
				c.searchField(Tawk.liveMonitoringController.tagsList, $(this).val().trim(), c.$("#tags-list-container .list-content"))
			});
			this.$("#openFilter").on("click", function (a) {
				$(this).parent().toggleClass("open")
			});
			this.$("#closeFilter").click(function () {
				c.manualCloseFilter();
				return !1
			});
			this.$(".search").click(function () {
				var a = c.$(".monitoring-status-select").val();
				"all" === a && (a = null);
				c.controller.performFilter(a);
				c.manualCloseFilter();
				return !1
			});
			this.$("#resetFilter").click(function () {
				c.$(".monitoring-status-select").val("all");
				c.$(".monitoring-status-select").parent().trigger("reset");
				c.controller.clearFilters();
				c.manualCloseFilter();
				return !1
			});
			this.$().delegate(".open-selection", "click", function () {
				var a = $(this).attr("id");
				$("#list-block").removeClass("hidden");
				c.$(".selection-main-container").removeClass("open");
				c.$("#" + a + "-list-container").addClass("open")
			});
			this.$().delegate(".close-selection", "click", function () {
				$("#list-block").addClass("hidden");
				$(this).parents(".selection-main-container").removeClass("open")
			});
			this.$().delegate(".list-title", "click", function (a) {
				a = $(this).next();
				a.is(":visible") ? ($(this).find("i").removeClass("fa-chevron-down").addClass("fa-chevron-up"), a.slideUp("fast")) : ($(this).find("i").removeClass("fa-chevron-up").addClass("fa-chevron-down"), a.slideDown("fast"))
			});
			this.$().delegate(".ban-visitor", "click", function () {
				var a = $(this).attr("data-id");
				if (a = Tawk.liveMonitoringController.getSubscribedVisitor(a) || Tawk.liveMonitoringController.getVisitor(a)) c.banView || (c.set("banView", Tawk.VisitorBanHoverView.create()), c.banView.append()), c.banView.set("content", a), c.banView.openView()
			});
			this.$().delegate(".filters-popover", "mouseover", function () {
				$(this).popover();
				popover("show")
			});
			this.$().delegate(".filters-popover", "mouseout", function () {
				popover("destroy")
			});
			this.$().delegate(".remove-filter", "click", function () {
				var a = $(this).attr("data-type");
				a &&
				(c.controller.removeSingleFilter(a), "status" === a && ($(".monitoring-status-select").val("all"), $(".monitoring-status-select").parent().trigger("reset")))
			});
			this.$().delegate("#resubscribe-monitor", "click", function () {
				c.resubscribe()
			});
			this.$().delegate("#monitoring-view-sites", "click", function () {
				window.location.hash = "/admin"
			});
			this.$().delegate("#monitoring-view-pages", "click", function () {
				window.location.hash = "/admin"
			});
			this.$().delegate("#simulate-visitor", "click", function () {
				var c = "default", b = Tawk.webProperties.sites.filterProperty("enabled",
					!0).findProperty("isAdmin", !0);
				b || (b = Tawk.webProperties.personalPage, c = "page");
				b.enabled || (b = Tawk.webProperties.pages.filterProperty("enabled", !0).findProperty("isAdmin", !0), c = "page");
				if (!b) return alert(languageParser.translate("visitors", "simulate_error"));
				null === a || a.closed ? a = window.open(GLOBAL_TAWK_URL + "/" + b.tawkId + "/popout/" + c + "/?$_tawk_popout=true", "", "width=450, height=500") : a.focus()
			});
			this.$().delegate(".select-timeout", "click", function () {
				var a = parseInt($(this).attr("id"), 10);
				c.monitoringTimeoutOptions.setEach("isSelected",
					!1);
				c.monitoringTimeoutOptions.forEach(function (b, e) {
					b.value !== a || b.isSelected ? c.set("monitoringTimeoutOptions." + e + ".isSelected", !1) : (c.controller.saveMonitoringTimeout(10 === a ? 0 : a), c.set("monitoringTimeoutOptions." + e + ".isSelected", !0), c.set("inactiveTimeoutValue", a), main.updateStorageSettings("monitoringTimeout", a), c.resetTimeout())
				})
			});
			this.$().delegate("#continue-monitor", "click", function () {
				c.set("alertIsActive", !1);
				c.set("hasTimedOut", !1);
				c.resetTimeout();
				c.$("#timeout-notification-timer").addClass("hidden");
				c.$("#list-block").addClass("hidden")
			})
		},
		visibilityChanged: function () {
			"inDOM" === this._state && (this.isShown ? this.$().css("visibility", "visible") : (this.$().css("visibility", "hidden"), this.banView && (this.banView.remove(), this.set("banView", null))))
		}.observes("isShown"),
		manualCloseFilter: function () {
			this.$(".input-group-btn").removeClass("open");
			this.$(".selection-main-container").removeClass("open")
		},
		isListLoading: function () {
			"inDOM" === this._state && (this.controller.isLoading ? ($("#list-block").removeClass("hidden"),
				this.$("#openFilter").attr("disabled", !0)) : ($("#list-block").addClass("hidden"), this.$("#openFilter").removeAttr("disabled", !0)))
		}.observes("controller.isLoading"),
		searchField: function (a, c, d) {
			var b = [];
			a.setEach("isHighlighted", !1);
			a.setEach("isNotHighlighted", !1);
			!c || 2 > c.length ? a.setEach("isNotHighlighted", void 0) : (a.setEach("isNotHighlighted", !0), c = c.toLowerCase(), a.forEach(function (a) {
				-1 !== a.name.toLowerCase().indexOf(c) && b.push(a)
			}), b && b.length && (a = b[0], b.setEach("isHighlighted", !0), b.setEach("isNotHighlighted",
				!1), this.$("#" + a.id)[0] && d.scrollTop(this.$("#" + a.id)[0].offsetTop)))
		},
		startInactiveTimeout: function () {
			var a = this, c = 60, d = this.$("#timeout-notification-timer"), b = function () {
				a.set("endTimer", setTimeout(function () {
					0 === c ? (clearTimeout(a.inactiveTimeout), clearTimeout(a.endTimer), a.controller.unloadSubscribedList(), d.addClass("hidden"), a.$("#subscription-ended-container").removeClass("hidden"), a.$("#list-block").addClass("hidden"), a.set("hasTimedOut", !0), a.set("alertIsActive", !1)) : (d.find(".timer-update").html(c),
						c--, b())
				}, 1E3))
			};
			clearTimeout(this.inactiveTimeout);
			clearTimeout(this.endTimer);
			this.set("inactiveTimeout", null);
			this.set("endTimer", null);
			-1 !== this.inactiveTimeoutValue && this.set("inactiveTimeout", setTimeout(function () {
				a.manualCloseFilter();
				a.set("alertIsActive", !0);
				d.find(".timer-update").html(c);
				d.removeClass("hidden");
				b();
				notificationController.notifyMonitoringTimeout();
				a.$("#list-block").removeClass("hidden")
			}, 6E4 * this.inactiveTimeoutValue))
		},
		isMonitoringSubscribed: function () {
			"inDOM" === this._state &&
			(this.controller.isSubscribed ? this.$("#openFilter").removeAttr("disabled", !0) : this.$("#openFilter").attr("disabled", !0))
		}.observes("controller.isSubscribed"),
		resetTimeout: function () {
			this.alertIsActive || (-1 === this.inactiveTimeoutValue ? (clearTimeout(this.inactiveTimeout), clearTimeout(this.endTimer), this.set("inactiveTimeout", null), this.set("endTimer", null)) : this.hasTimedOut ? this.resubscribe() : (clearTimeout(this.inactiveTimeout), clearTimeout(this.endTimer), this.set("inactiveTimeout", null), this.set("endTimer",
				null), this.set("lastExtend", (new Date).getTime()), this.startInactiveTimeout()))
		},
		resubscribe: function () {
			this.set("hasTimedOut", !1);
			this.$("#subscription-ended-container").addClass("hidden");
			this.controller.loadSubscribedList();
			this.set("lastExtend", (new Date).getTime());
			this.startInactiveTimeout()
		}
	});
	Tawk.VisitorBanHoverView = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.hoverBan, elementId: "monitoring-ban", didInsertElement: function () {
			var a = this;
			this._super();
			this.visitorChanged();
			this.$(".ban-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					var d = $(c).find(".banReason").val(), b = $(c).find(".banIp").is(":checked");
					Tawk.liveMonitoringController.banVisitor(a.content, d, b, function (d) {
						d ? errorSave(c, languageParser.translate("form_validation_messages", "error_ban")) : (b ? Tawk.intercomController.execute("trackEvent", {eventType: "banned-ip-on-hover"}) : Tawk.intercomController.execute("trackEvent", {eventType: "banned-visitor-on-hover"}), a.$().modal("hide"))
					});
					return !1
				}
			});
			this.$().delegate(".submit-ban-form", "click", function () {
				a.$(".ban-form").submit();
				return !1
			});
			this.$().on("hidden.bs.modal", function (c) {
				a.$(".banReason").val("");
				a.$(".banIp").attr("checked", !1);
				a.set("visitor", null)
			})
		}, visitorChanged: function () {
			"inDOM" === this._state && this.content && this.set("ban_question", languageParser.translate("monitoring", "ban_question_with_name", {name: this.content.n}))
		}.observes("content._id")
	});
	Tawk.LiveListView = Ember.View.extend({
		template: Ember.TEMPLATES.liveListContainer,
		tagName: "table", classNames: ["table", "live-list"], didInsertElement: function () {
			this.$().delegate(".detail-hover", "mouseover", function () {
				$(this).popover({trigger: "hover"});
				$(this).popover("show")
			});
			this.$().delegate("tr", "click", function (a) {
				a = $(a.target);
				var c = $(this).attr("id");
				a.hasClass("btn") || (a.parents("button").length || "A" === a[0].tagName) || Tawk.liveMonitoringController.openChat(c)
			})
		}, willDestroyElement: function () {
			this.$(".detail-hover").each(function () {
				$(this).data("bs.popover") && $(this).popover("destroy")
			});
			this.$().html("");
			this.$().remove()
		}
	});
	Ember.Handlebars.helper("LiveListView", Tawk.LiveListView);
	Tawk.DynamicView = Ember.ContainerView.extend({currentView: null, classNames: ["dynamic-view"]});
	Tawk.dynamicView = Tawk.DynamicView.create();
	Tawk.mainPanel = Ember.ContainerView.create({
		elementId: "main",
		childViews: ["dynamicView", "visitorChatView"],
		dynamicView: Tawk.dynamicView,
		visitorChatView: Tawk.visitorChatContainerView
	});
	Tawk.DashboardView = Ember.View.extend(Tawk.ViewBase, {
		elementId: "dashboard", template: Ember.TEMPLATES.dashboardView,
		controller: Tawk.DashboardController.create(), feedsView: Ember.View.extend({
			elementId: "feeds-section", template: Ember.TEMPLATES.dashboardFeeds, didInsertElement: function () {
				this._parentView.controller.feeds.loadFeeds()
			}, errorOnLoadChange: function () {
				"inDOM" === this._state && this._parentView.controller.feeds.errorOnLoad && (this.$("#feed-content").addClass("error"), errorSave(this.$("#feed-content"), languageParser.translate("generic", "unable_to_load_feed")))
			}.observes("this._parentView.controller.feeds.errorOnLoad"),
			willDestroyElement: function () {
				this._parentView.controller.feeds.clearList();
				this.$().remove()
			}
		}), bannerView: Ember.View.extend({
			elementId: "banner-section",
			template: Ember.TEMPLATES.dashboardBanner,
			iconClassName: "fa fa-puzzle-piece",
			bannerTitle: languageParser.translate("dashboard", "banner_addon_title"),
			bannerSubtitle: languageParser.translate("dashboard", "addon_banner_subtitle"),
			bannerButton: languageParser.translate("dashboard", "browse_addons"),
			didInsertElement: function () {
				this.$().delegate(".close-banner",
					"click", function () {
						Tawk.userController.closeBanner(!0);
						ga("send", {
							hitType: "event",
							eventCategory: "Add-on banner",
							eventAction: "close",
							eventLabel: "Add-on banner tracking"
						})
					});
				this.$().delegate(".button-container a.btn", "click", function () {
					ga("send", {
						hitType: "event",
						eventCategory: "Add-on banner",
						eventAction: "view",
						eventLabel: "Add-on banner tracking"
					})
				})
			},
			willDestroyElement: function () {
				this.$().remove()
			}
		}), analyticsView: Ember.View.extend({
			elementId: "analytics-section", template: Ember.TEMPLATES.dashboardAnalytics,
			activeTab: "#today", didInsertElement: function () {
				var a = this;
				this.$('a[data-toggle="tab"]').on("shown.bs.tab", function (c) {
					a.set("activeTab", a.$(c.target).attr("href"))
				});
				this._parentView.controller.analytics.loadVisitorCount();
				this._parentView.controller.analytics.loadRecentAnalytics()
			}, willDestroyElement: function () {
				this._parentView.controller.analytics.unSubscribeVisitorCount();
				this.$().remove()
			}
		}), historyView: Ember.View.extend({
			elementId: "history-section", template: Ember.TEMPLATES.dashboardHistory,
			transcriptView: null, classNames: ["view-section"], willInsertElement: function () {
				this._parentView.controller.history.initialize()
			}, willDestroyElement: function () {
				this._parentView.controller.history.removeEvent();
				this._parentView.controller.history.clearData(!0);
				this.$().remove();
				this.transcriptView && this.transcriptView.destroy();
				this.set("transcriptView", null)
			}, handleOpenTranscript: function (a) {
				this.transcriptView ? this.transcriptView.openView() : (this.set("transcriptView", Tawk.TranscriptView.create({controller: this._parentView.controller.history})),
					this.transcriptView.append());
				this._parentView.controller.history.getModalTranscriptData(a, !1, function (c) {
					$(".open-transcript#" + a).removeClass("loading")
				})
			}, copyChanged: function () {
				"inDOM" === this._state && this.transcriptView && (this._parentView.controller.history.modalTranscriptData && this._parentView.controller.history.modalTranscriptData.copyFormat) && $(".copy-transcript").val(this._parentView.controller.history.modalTranscriptData.copyFormat)
			}.observes("_parentView.controller.history.modalTranscriptData.copyFormat"),
			newHistoryListChanged: function () {
				var a, c = this.$("#new-history");
				"inDOM" === this._state && (this._parentView.controller.history.newHistoryList.length ? (a = languageParser.translate("history", "new_history_message", {num: this._parentView.controller.history.newHistoryList.length}), c.length || (c = $('<div class="alert alert-info in text-center" style="position: absolute; width: 100%;" id="new-history"><button class="close" data-dismiss="alert" data-target="new-history">\ufffd</button><a id="retrieveHistory" href="javascript:void(0);" style="text-decoration:underline"><h4 class="alert-heading message"></h4></a></div>')),
					c.find(".message").html(a), this.$('div[role="content"]').prepend(c)) : this.$("#new-history .close").trigger("click"))
			}.observes("_parentView.controller.history.newHistoryList.length"), didInsertElement: function () {
				var a = this;
				this._parentView.controller.history.getDashboardHistory();
				this.$().delegate(".change-history-list", "click", function () {
					var c = $(this).attr("id");
					a._parentView.controller.history.getDashboardHistory(c)
				});
				this.$().delegate(".next", "click.nextHistory", function () {
					var c = $(this);
					c.addClass("loading disabled");
					a._parentView.controller.history.nextConversationsList(function () {
						c.removeClass("loading disabled")
					})
				});
				this.$().delegate(".prev", "click.prevHistory", function () {
					var c = $(this);
					c.addClass("loading disabled");
					a._parentView.controller.history.previousConversationsList(function () {
						c.removeClass("loading disabled")
					})
				});
				this.$().delegate(".open-transcript", "click.openTranscript", function () {
					var c = $(this).attr("id");
					$(this).hasClass("loading") || ($(this).addClass("loading"), a.handleOpenTranscript(c))
				});
				this.$().delegate("#retrieveHistory",
					"click.retrieveHistory", function () {
						a._parentView.controller.history.retrieveNewHistory();
						return !1
					})
			}
		}), willDestroyElement: function () {
			this.$().remove();
			this.controller.history.clearData()
		}, didInsertElement: function () {
			"minimal" === SHOW_WIZARD ? this.set("showResumeWizard", !0) : this.set("showResumeWizard", !1);
			this.$().delegate("#resume-wizard", "click", function () {
				main.showWizard()
			})
		}
	});
	Tawk.HeaderSpark = Ember.View.extend({
		tagName: "li", classNames: ["sparks-info"], template: Ember.TEMPLATES.dashboardHeaderSpark,
		didInsertElement: function () {
			this.$("h5").tooltip();
			this.renderSparkline()
		}, labelText: function () {
			return languageParser.translate("analytics", this.get("label"))
		}.property("label"), showAsPercentage: function () {
			return "percentage" === this.get("segmentFormat")
		}.property("segmentFormat"), isPostiveGrowth: function () {
			return 0 < this.get("data.summary.growth")
		}.property("data.summary.growth"), isNegativeGrowth: function () {
			return 0 > this.get("data.summary.growth")
		}.property("data.summary.growth"), iconClass: function () {
			return this.get("icon") ?
				"fa " + this.get("icon") : null
		}.property("icon"), tooltipText: function () {
			return languageParser.translate("tooltip", this.get("tooltip"))
		}.property("tooltip"), renderSparkline: function () {
			"inDOM" === this._state && this.$(".sparkline").sparkline(this.get("data.values"), {
				type: "bar",
				barColor: this.get("sparkColor"),
				height: "26px",
				barWidth: 5,
				barSpacing: 2,
				stackedBarColor: "#A90329 #0099c6 #98AA56 #da532c #4490B1 #6E9461 #990099 #B4CAD3".split(" "),
				negBarColor: "#A90329",
				zeroAxis: "false",
				tooltipOffsetX: -30,
				tooltipOffsetY: 20
			})
		}.observes("data.values",
			"data.values.@each"), willDestroyElement: function () {
			this.$().remove()
		}
	});
	Ember.Handlebars.helper("HeaderSpark", Tawk.HeaderSpark);
	Tawk.AnalyticsTodayTabView = Ember.View.extend({
		elementId: "latest",
		classNames: ["tab-pane fade active in padding-10 no-padding-bottom"],
		template: Ember.TEMPLATES.dashboardAnalyticsTodayTab,
		graph: null,
		loaded: !1,
		error: !1,
		liveGraphEl: null,
		graphListeners: {
			willChange: function () {
			}, didChange: function (a, c, d, b) {
				0 < b && this.renderGraph()
			}
		},
		didInsertElement: function () {
			var a = this;
			this.set("liveGraphEl",
				this.$("#live-graph"));
			this.$().delegate(".reload-view", "click", function () {
				a.controller.loadVisitorCount();
				a.controller.loadRecentAnalytics()
			});
			this.controller.realtime.visitsCount.graphData.addArrayObserver(this, this.graphListeners);
			this.renderGraph()
		},
		willDestroyElement: function () {
			this.controller.realtime.visitsCount.graphData.removeArrayObserver(this, this.graphListeners);
			null !== this.graph && this.graph.destroy();
			this.liveGraphEl.unbind("resize-special-event");
			null !== this.liveGraphEl && (this.liveGraphEl.html(""),
				this.liveGraphEl.remove());
			this.set("graph", null);
			this.set("template", null);
			this.set("loaded", null);
			this.set("error", null);
			this.set("liveGraphEl", null);
			this.$().html("");
			this.$().remove()
		},
		renderGraph: function () {
			var a, c = 0, d = 0, b = [];
			this.loaded && (null !== this.liveGraphEl && 0 !== this.liveGraphEl.length) && (this.controller.realtime.visitsCount.graphData.forEach(function (a) {
				b.push([c++, a]);
				a > d && (d = a)
			}), d = 10 * Math.ceil((d + 1) / 10), null === this.graph && "function" === typeof $.plot ? (a = this.liveGraphEl.find(".alert-danger"),
			a.length && a.remove(), this.liveGraphEl.removeClass("error"), this.set("graph", $.plot(this.liveGraphEl, [{data: b}], {
				yaxis: {
					min: 0,
					max: d
				},
				xaxis: {
					tickFormatter: function () {
						return ""
					}
				},
				colors: [this.liveGraphEl.css("color")],
				series: {
					lines: {
						lineWidth: 1,
						fill: !0,
						fillColor: {colors: [{opacity: 0.4}, {opacity: 0}]},
						steps: !1
					}
				},
				grid: {margin: 10}
			}))) : null !== this.graph ? (this.graph.getOptions().yaxes[0].max = d, this.graph.setData([{data: b}]), this.graph.setupGrid(), this.graph.draw()) : (this.set("graph", null), this.$("#live-graph-container .alert-danger").length ||
			(this.$("#live-graph-container").addClass("error"), errorSave(this.$("#live-graph-container"), languageParser.translate("pages", "graph_unavailable")))), b = a = null)
		},
		onLoadStatusChange: function () {
			"inDOM" === this._state && ("LOADED" === this.controller.realtime.status && "LOADED" === this.controller.recent.status ? this.set("loaded", !0) : this.set("loaded", !1), "ERROR" === this.controller.realtime.status || "ERROR" === this.controller.recent.status ? this.set("error", !0) : this.set("error", !1))
		}.observes("controller.realtime.status",
			"controller.recent.status")
	});
	Ember.Handlebars.helper("AnalyticsTodayTabView", Tawk.AnalyticsTodayTabView);
	Tawk.AnalyticsBarView = Ember.View.extend({
		classNames: ["col-xs-6 col-sm-6 col-md-12 col-lg-12"],
		template: Ember.TEMPLATES.dashboardAnalyticsBar,
		didInsertElement: function () {
			this.$(".progress-bar").addClass(this.get("barColor"))
		},
		labelText: function () {
			return languageParser.translate("analytics", this.get("label"))
		}.property("label"),
		percentage: function () {
			return 0 === this.get("total") || 0 === this.get("segment") ?
				"0%" : Math.round(100 * (this.get("segment") / this.get("total"))) + "%"
		}.property("segment", "total"),
		barWidth: function () {
			return "width: " + this.get("percentage")
		}.property("percentage"),
		showAsPercentage: function () {
			return "percentage" === this.get("segmentFormat")
		}.property("segmentFormat"),
		willDestroyElement: function () {
			this.$().remove()
		}
	});
	Ember.Handlebars.helper("AnalyticsBarView", Tawk.AnalyticsBarView);
	Tawk.AnalyticsMicroChartView = Ember.View.extend({
		classNames: ["col-xs-12 col-sm-3 col-md-3 col-lg-3"], template: Ember.TEMPLATES.dashboardAnalyticsMicroChart,
		sparkline: null, tooltipFormat: null, didInsertElement: function () {
			this.$(".easy-pie-chart").easyPieChart({
				barColor: this.get("circleColor"),
				trackColor: "rgba(0,0,0,0.04)",
				scaleColor: !1,
				lineCap: "butt",
				lineWidth: parseInt(50 / 8.5, 10),
				animate: 1500,
				rotate: -90,
				size: 50,
				onStep: function (a, c, d) {
					$(this.el).find(".percent").text(Math.round(d))
				}
			});
			this.$(".easy-pie-chart").tooltip();
			this.$("span.label").tooltip();
			this.renderSparkline();
			this.setGrowthTrend()
		}, labelText: function () {
			return languageParser.translate("analytics",
				this.get("label"))
		}.property("label"), tooltipText: function () {
			return languageParser.translate("tooltip", this.get("tooltip"))
		}.property("tooltip"), tooltipHighestText: function () {
			return languageParser.translate("tooltip", this.get("tooltipHighest"))
		}.property("tooltipHighest"), tooltipLowestText: function () {
			return languageParser.translate("tooltip", this.get("tooltipLowest"))
		}.property("tooltipLowest"), renderSparkline: function () {
			"inDOM" === this._state && "LOADED" === this.get("loaded") && (this.set("tooltipFormat",
				$.spformat('<span style="color: ' + this.get("sparkColor") + '">&#9679;</span> {{prefix}}{{y}}{{suffix}}')), this.set("sparkline", this.$(".sparkline").sparkline(this.get("data.values"), {
				type: "line",
				width: "70px",
				height: "33px",
				lineWidth: 1,
				lineColor: this.get("sparkColor"),
				fillColor: "transparent",
				spotColor: "#f08000",
				minSpotColor: "#ed1c24",
				maxSpotColor: "#f08000",
				highlightSpotColor: "#50f050",
				highlightLineColor: "f02020",
				spotRadius: 1.5,
				normalRangeColor: "#c0c0c0",
				drawNormalOnTop: !1,
				tooltipFormat: this.tooltipFormat
			})))
		}.observes("data.values",
			"loaded"), setGrowthTrend: function () {
			"inDOM" === this._state && (this.$(".segment-trend").removeClass("icon-color-good icon-color-bad fa-caret-up fa-caret-down"), 0 < this.get("data.summary.growth") ? this.$(".segment-trend").addClass("icon-color-good fa-caret-up") : 0 > this.get("data.summary.growth") && this.$(".segment-trend").addClass("icon-color-bad fa-caret-down"), this.$(".easy-pie-chart").data("easyPieChart").update(this.get("data.summary.growth")))
		}.observes("data.summary.growth"), willDestroyElement: function () {
			null !==
			this.sparkline && (this.sparkline.html(""), this.sparkline.remove(), this.set("sparkline", null));
			this.$(".easy-pie-chart").tooltip("destroy");
			this.$("span.label").tooltip("destroy");
			this.set("labelText", null);
			this.set("tooltipText", null);
			this.set("tooltipHighestText", null);
			this.set("tooltipLowestText", null);
			this.set("tooltipFormat", null);
			this.$().html("");
			this.$().remove()
		}
	});
	Ember.Handlebars.helper("AnalyticsMicroChartView", Tawk.AnalyticsMicroChartView);
	Tawk.AnalyticsHistoricalTabView = Ember.View.extend({
		elementId: "historical",
		classNames: ["tab-pane fade"],
		template: Ember.TEMPLATES.dashboardAnalyticsHistoricalTab,
		graph: null,
		labels: null,
		data: null,
		willInsertElement: function () {
			this.set("labels", ["Date", languageParser.translate("analytics", "chats"), languageParser.translate("analytics", "page_views"), languageParser.translate("analytics", "visits"), languageParser.translate("analytics", "visitors")]);
			this.controller.set("historical.status", "EMPTY")
		},
		didInsertElement: function () {
			var a = this, c = this.controller.historical.from, d = this.controller.historical.to;
			this.set("data", this.controller.historical.data);
			this.$().delegate(".reload-view", "click", function () {
				a.controller.loadHistorialData()
			});
			$("body").bind("click.historicalDateRangeForm", function (b) {
				a.$("#applyFilter").is(b.target) || (a.$("#closeFilter").is(b.target) || !(a.$("#date-range-form").is(b.target) || 0 < a.$("#date-range-form").has(b.target).length || $(".ui-datepicker-header").is(b.target) || 0 < $(b.target).parents(".ui-datepicker-header").length || 0 < $(b.target).parents("#ui-datepicker-div").length)) ||
				(b.stopPropagation(), b.preventDefault())
			});
			this.$("#historical-from").val(c.getDate() + "." + (c.getMonth() + 1) + "." + c.getFullYear());
			this.$("#historical-from").datepicker({
				defaultDate: c,
				changeMonth: !0,
				numberOfMonths: 3,
				minDate: "-365D",
				maxDate: "-1d",
				dateFormat: "dd.mm.yy",
				prevText: '<i class="fa fa-chevron-left"></i>',
				nextText: '<i class="fa fa-chevron-right"></i>',
				constrainInput: !0,
				onClose: function (b) {
					a.$("#historical-to").datepicker("option", "minDate", b)
				}
			});
			this.$("#historical-to").val(d.getDate() + "." + (d.getMonth() +
				1) + "." + d.getFullYear());
			this.$("#historical-to").datepicker({
				defaultDate: d,
				changeMonth: !0,
				numberOfMonths: 3,
				minDate: "-365D",
				maxDate: "-1d",
				dateFormat: "dd.mm.yy",
				prevText: '<i class="fa fa-chevron-left"></i>',
				nextText: '<i class="fa fa-chevron-right"></i>',
				constrainInput: !0,
				onClose: function (b) {
					a.$("#historical-from").datepicker("option", "maxDate", b)
				}
			});
			this.$().delegate(".icon-append", "click", function () {
				var a = $(this).next();
				0 !== a.length && a.datepicker("show")
			});
			this.$(".graph-filters").change(function () {
				switch ($(this).data("segment")) {
					case "chats":
						segment =
							0;
						break;
					case "pageViews":
						segment = 1;
						break;
					case "visits":
						segment = 2;
						break;
					case "visitors":
						segment = 3
				}
				a.graph && void 0 !== segment && a.graph.setVisibility(segment, $(this).is(":checked"))
			});
			this.$("#applyFilter").click(function () {
				a.controller.loadHistorialData(a.$("#historical-from").datepicker("getDate"), a.$("#historical-to").datepicker("getDate"))
			})
		},
		willDestroyElement: function () {
			this.graph && this.graph.destroy();
			$("body").unbind("click.historicalDateRangeForm");
			this.$().remove()
		},
		getHistorialTimeRange: function () {
			return moment(this.controller.historical.from).format("MMM Do[,] YYYY") +
				" - " + moment(this.controller.historical.to).format("MMM Do[,] YYYY")
		}.property("controller.historical.from", "controller.historical.to"),
		renderGraph: function () {
			null === this.data || Array.isArray(this.data) && 0 === this.data.length || (null === this.graph ? this.set("graph", new Dygraph(this.$("#historical-graph").get(0), this.data, {
				labels: this.labels,
				legend: "always",
				labelsDiv: this.$("#legends").get(0),
				labelsDivStyles: {textAlign: "right"},
				showRangeSelector: !0,
				colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d"],
				valueFormatter: function (a,
				                          c, d) {
					return "Date" === d ? moment(a).format("MMM Do YYYY") : a
				}
			})) : this.graph.updateOptions({file: this.data}))
		},
		onDataLoad: function () {
			"inDOM" === this._state && ("LOADED" === this.controller.historical.status ? (this.$("#historical-graph-container").removeClass("hidden"), this.$(".reload-view").addClass("hidden"), this.$(".loading-view").addClass("hidden"), this.set("data", this.controller.historical.data), "#historical" === this.activeTab && this.renderGraph()) : (this.$("#historical-graph-container").addClass("hidden"),
				"ERROR" === this.controller.historical.status ? (this.$(".reload-view").removeClass("hidden"), this.$(".loading-view").addClass("hidden")) : (this.$(".reload-view").addClass("hidden"), this.$(".loading-view").removeClass("hidden"))))
		}.observes("controller.historical.status"),
		onTabLoad: function () {
			"inDOM" === this._state && "#historical" === this.activeTab && ("LOADING" !== this.controller.historical.status && "LOADED" !== this.controller.historical.status ? this.controller.loadHistorialData() : "LOADED" === this.controller.historical.status &&
				this.renderGraph())
		}.observes("activeTab")
	});
	Ember.Handlebars.helper("AnalyticsHistoricalTabView", Tawk.AnalyticsHistoricalTabView);
	Tawk.AgentChatCommon = Ember.Mixin.create({
		isScrollingToBottom: null, scrollToBottom: function () {
			var a = this;
			this.set("isScrollingToBottom", !0);
			setTimeout(function () {
				"inDOM" === a._state && a.$(".scrollable-view").length && a.$(".scrollable-view").scrollTop(99999999);
				a.set("isScrollingToBottom", !1)
			}, 10)
		}, hasNewRow: function () {
			var a;
			"inDOM" === this._state && this.content.newRow && (a = this.isScrollingToBottom ?
				!0 : toScrollBottom(this.$(".scrollable-view")), $(this.content.newRow.block).append(this.content.newRow.row), this.hasNewMessage(this.content.newRow.row), a ? this.scrollToBottom() : this.addNewMessageAtBottom())
		}.observes("content.newRow"), hasNewBlock: function () {
			var a;
			"inDOM" === this._state && this.content.newBlock && (a = this.isScrollingToBottom ? !0 : toScrollBottom(this.$(".scrollable-view")), this.$(".chat-content").append(this.content.newBlock), this.hasNewMessage(this.content.newBlock), a ? this.scrollToBottom() :
				this.addNewMessageAtBottom())
		}.observes("content.newBlock"), clearUnseen: function () {
			this.content.hasMoreUnseen || this.content.set("unSeen", !1);
			this.content.set("showFlash", !1);
			Tawk.leftPanel.$().trigger("unseen-messages")
		}, loadOlder: function () {
			var a, c = this;
			"inDOM" !== this._state || this.isLoadingHistory || (scrollPane = this.$(".scrollable-view")[0], scrollPercentage = 100 * ((scrollPane.clientHeight + scrollPane.scrollTop) / scrollPane.scrollHeight), 0 === scrollPane.scrollTop && (a = this.$(".conversation-content").first(),
				this.set("isLoadingHistory", !0), Tawk.agentChatController.loadAgentChatHistory(c.content.groupId, c.content.conversationEndedTime, function () {
				c.set("isLoadingHistory", !1);
				setTimeout(function () {
					c.$(".scrollable-view").scrollTop(a[0].offsetTop - 100)
				})
			})))
		}, historyProcessingChanged: function () {
			var a = this;
			"inDOM" === this._state && (this.content.isProcessingHistory ? this.set("isLoadingHistory", !0) : (this.set("isLoadingHistory", !1), setTimeout(function () {
				a.hasNewMessage();
				a.$(".mark-read").tooltip();
				a.$().find(".new-message-container").length ?
					a.$(".scrollable-view").scrollTop(a.$().find(".new-message-container")[0].offsetTop - 50) : a.scrollToBottom()
			})))
		}.observes("content.isProcessingHistory"), addNewMessageAtBottom: function () {
			var a, c = this.$().find(".new-message-container"), d = this;
			!this.$().find(".unseen-message-container").length && c.length && (a = $('<div class="unseen-message-container"><span class="text">' + languageParser.translate("visitors", "new_messages") + '</span><i class="fa fa-arrow-down"></i><a class="mark-read" href="javascript:void(0);" style="position: absolute;right: 8px;color: #fff;border-left: 1px solid #fff;padding-left: 8px;top: 0;bottom: 0;"><i class="fa fa-close"></i></a></div>'),
				a.insertAfter(this.$(".scrollable-view")), "0px" !== this.$(".scrollable-view").css("bottom") && a.css("bottom", this.$(".scrollable-view").css("bottom")), this.$(".scrollable-view").debounce("scroll", function (b) {
				b = d.$(".scrollable-view").scrollTop();
				var e = b + d.$(".scrollable-view").height(), f = $(c)[0].offsetTop;
				f + $(c).height() <= e && f >= b && (a.off(), a.remove())
			}, 50), a.click(function () {
				d.$(".scrollable-view")[0].scrollTop = $(c)[0].offsetTop;
				setTimeout(function () {
					c.remove()
				}, 1E3)
			}))
		}, updateAgentList: function () {
			var a;
			a = [];
			"inDOM" === this._state && this.content.isGroup && (this.set("agentList", Tawk.agentChatController.removeInvitedAgents(this.propertyMembers, this.content.participants)), (a = this.$(".filter-agent").val().trim()) && a.length && (this.agentList.setEach("isShown", !1), a = filterList(this.agentList, "name", a), a.setEach("isShown", !0), this.set("filterMatch", a.length)))
		}.observes("propertyMembers"), agentTooltip: function () {
			return this.content.isGroup ? languageParser.translate("tooltip", "view_details") : languageParser.translate("tooltip",
				"add_agent")
		}.property("content.isGroup"), setupListeners: function () {
			var a = this, c = /Firefox/i.test(navigator.userAgent) ? "DOMMouseScroll" : "mousewheel";
			this.$(".scrollable-view").debounce(c, function (c) {
				a.isLoadingHistory || (c = c.originalEvent ? c.originalEvent : c, c = c.detail ? -40 * c.detail : c.wheelDelta, 0 < c && a.loadOlder())
			}, 100);
			this.$().delegate("#property-id", "change", function () {
				var c = $(this).val(), b = [];
				"0" === c ? b = a.members : a.members.forEach(function (a) {
					-1 !== a.properties.indexOf(c) && b.pushObject(a)
				});
				a.set("propertyMembers",
					b)
			});
			this.$().delegate(".leave-group", "click", function (c) {
				a.content.isGroup && (c.stopPropagation(), checkAndSetConfirmView(!1, function (b) {
					b && Tawk.agentChatController.leaveGroup(a.content.groupId)
				}, languageParser.translate("agent_chat", "leave_group_confirm"), null, languageParser.translate("agent_chat", "leave_group_title", {groupName: a.content.get("groupName")}), languageParser.translate("agent_chat", "leave_group_yes"), !0))
			});
			this.set("filterMatch", !0);
			this.historyProcessingChanged();
			this.$().delegate(".reload-message",
				"click", function () {
					a.set("isLoadingHistory", !0);
					Tawk.agentChatController.loadAgentChatHistory(a.content.groupId, a.content.conversationEndedTime, function () {
						a.set("isLoadingHistory", !1)
					})
				});
			this.$().delegate(".mark-read", "click", function () {
				Tawk.agentChatController.acknowledgeSeen(a.content)
			});
			this.$().delegate(".invite-groups", "click", function () {
				a.showAvailableGroups()
			});
			this.$().delegate(".close-groups-list", "click", function () {
				a.availableGroups && a.set("availableGroups", null);
				a.$().addClass("no-sidebar");
				a.$(".group-invitation-list").addClass("hidden").hide()
			});
			this.$().delegate(".select-groups", "click", function () {
				var c, b, e = [], f = [], g = 0, h = a.$(".group-participants:checked").length;
				0 === h ? errorSave(a.$(".message-container"), "Please select at least 1 group") : ($(this).attr("disabled", "disabled"), a.$(".close-groups-list").attr("disabled", "disabled"), a.$(".group-participants:checked").each(function (k, l) {
					var m = $(l).val(), n = $(l).attr("data-id");
					Tawk.agentChatController.addAgentToExistingGroups(m, a.content,
						function (k) {
							k ? e.push(n) : f.push(n);
							g++;
							g === h && (e.length && (c = "Failed to invite agents to the following groups : <br/>", c += e.join(", "), errorSave(a.$(".message-container"), c)), f.length && (b = "Successfully invited agents to the following groups : <br/>", b += f.join(", "), successSave(a.$(".message-container"), b)), a.$(".select-groups").removeAttr("disabled"), a.$(".close-groups-list").removeAttr("disabled"), a.$(".all-groups").prop("checked", !1), a.showAvailableGroups())
						})
				}))
			});
			this.$().delegate(".all-groups",
				"change", function () {
					var c = $(this).is(":checked");
					a.$(".group-participants").prop("checked", c).change()
				})
		}, showAvailableGroups: function () {
			var a = [], c = this;
			Tawk.agentChatController.groupMessagesList.forEach(function (d) {
				d.participants.findProperty("id", c.content.id) || a.pushObject(d)
			});
			this.set("availableGroups", sortList(a, "groupName"));
			this.$().removeClass("no-sidebar");
			this.$(".group-invitation-list").removeClass("hidden").show()
		}
	});
	Tawk.AgentChatView = Ember.View.extend(Tawk.AgentChatCommon, Tawk.InlineChatView,
		{
			template: Ember.TEMPLATES.agentChat,
			tagName: "article",
			classNames: ["agent-chat-container", "chat-container"],
			agentList: [],
			members: [],
			filterMatch: null,
			hasNewMessage: function (a) {
				var c;
				"inDOM" === this._state && (c = !document.hasFocus() || 1 !== this.$().has($(document.activeElement)).length, this.content.newMessage && !this.content.hasMoreUnseen && (c && (a && !this.$().find(".new-message-container").length) && $('<div class="new-message-container"><div class="left-border"><div class="border"></div></div><div class="text">' +
					languageParser.translate("visitors", "new_messages") + '</div><div class="right-border"><div class="border"></div></div></div>').insertBefore($(a)[0]), c ? (this.content.set("unSeen", !0), this.content.set("showFlash", !0), Tawk.leftPanel.$().trigger("unseen-messages")) : this.clearUnseen()))
			},
			showFlash: function () {
				"inDOM" === this._state && (this.content.showFlash ? this.$("header").addClass("flash-new-message") : this.$("header").removeClass("flash-new-message"))
			}.observes("content.showFlash"),
			didInsertElement: function () {
				var a =
					this;
				this._super();
				this.setupListeners();
				this.set("members", sortList(Tawk.webProperties.getAllMembers(), "name"));
				this.members.setEach("isShown", !0);
				this.set("propertyMembers", this.members);
				this.content.draftText && this.$(".chat-input").val(this.content.draftText);
				this.content.currentOngoing.length && this.content.currentOngoing.forEach(function (c) {
					a.$(".chat-content").append(c.block)
				});
				this.content.isGroup || this.$().addClass("no-sidebar");
				setTimeout(function () {
					a.$(".group-name-form").length && a.$(".group-name-form").validate({
						errorPlacement: function (a,
						                          d) {
							a.insertAfter(d.parent())
						}, submitHandler: function (c) {
							var d = $(".group-name", c).val();
							$(c).find(".alert").remove();
							Tawk.agentChatController.saveGroupChatName(a.content.groupId, d, function (b) {
								b ? errorSave(c) : a.$(".cancel-name-edit").click()
							});
							return !1
						}
					});
					a.$(".chat-input").focus();
					a.$(".button-icon").tooltip();
					a.$(".back-to-chat").tooltip({placement: "bottom"})
				});
				this.$().delegate(".back-to-chat", "click", function () {
					a.$(".open-view").removeClass("active");
					a.$(".chat-details-container").addClass("hidden");
					a.$().addClass("no-sidebar");
					a.set("previousTabSelected", null)
				});
				this.$().click(function (c) {
					a.clearUnseen();
					a.content.inView || Tawk.chatController.chatFocused(a.content)
				});
				this.$(".end-chat").click(function (c) {
					c.stopPropagation();
					Tawk.agentChatController.closeChat(a.content)
				});
				this.$().delegate(".close-agent-list", "click", function () {
					a.set("agentList", []);
					a.content.isGroup && a.$(".group-participants").css("display", "none");
					a.$(".agents-list").addClass("hidden");
					a.$(".group-members-container").removeClass("hidden");
					a.$(".group-name-form-container").addClass("hidden");
					a.isMinimized && a.$(".back-to-chat").click()
				});
				this.$().delegate(".chat-input", "keydown", function (c) {
					var d;
					if (!c.shiftKey) {
						if (33 === c.keyCode || 34 === c.keyCode) return c.preventDefault();
						13 === c.keyCode && (c.preventDefault(), c = $(this).val().trim(), Ember.isEmpty(c) || (Tawk.agentChatController.sendMessage(a.content, c), $(this).val(""), c = a.$().find(".new-message-container"), d = a.$().find(".unseen-message-container"), c.length && c.remove(), d.length && (d.off(), d.remove())),
							$(this).css("height", "40px"), a.$(".chat-footer").css("height", "105px"), a.$(".chat-body").css("bottom", "105px"), a.content.set("draftText", null), a.content.set("hasDraft", !1))
					}
				});
				this.$(".chat-body:focus").on("click", function () {
					this.blur();
					this.focus();
					a.content.set("newMessage", !1);
					a.clearUnseen()
				});
				this.$().delegate(".chat-input", "focus", function (c) {
					a.$(".textarea-div").addClass("text-focus");
					a.content.set("newMessage", !1);
					a.clearUnseen()
				});
				this.$().delegate(".chat-input", "blur", function (c) {
					a.content.set("draftText",
						$(this).val().trim());
					a.$(".textarea-div").removeClass("text-focus")
				});
				this.$().delegate(".agent-select", "click", function () {
					var c = $(this).val();
					a.agentList.findProperty("id", c).set("isSelected", $(this).is(":checked"))
				});
				this.$().delegate(".filter-agent", "keyup", function (c) {
					var d = $(this).val().trim(), b = [];
					!d || 40 !== c.keyCode && 38 !== c.keyCode && 13 !== c.keyCode ? (a.agentList.setEach("isShown", !1), b = filterList(a.agentList, "name", d), b.setEach("isShown", !0), a.set("filterMatch", b.length)) : (c.preventDefault(),
						c.stopPropagation())
				});
				this.$().delegate(".invite-member", "click", function (c) {
					a.set("agentList", Tawk.agentChatController.removeInvitedAgents(a.members, a.content.participants));
					a.$(".agents-list").removeClass("hidden");
					a.$(".group-members-container").addClass("hidden");
					a.$(".group-name-form-container").addClass("hidden");
					a.$(".open-group-details").click();
					a.set("sectionHeader", "Add member")
				});
				this.$().delegate(".select-agents", "click", function (c) {
					var d = [];
					c.stopPropagation();
					d = a.agentList.filterProperty("isSelected",
						!0);
					d.setEach("isOwn", !1);
					a.set("agentList", []);
					a.$(".agents-list").addClass("hidden");
					a.$(".group-members-container").removeClass("hidden");
					a.$(".group-name-form-container").addClass("hidden");
					a.content.isGroup && Tawk.agentChatController.addAgentsToExistingGroup(a.content.groupId, d, function (b) {
						b || (a.set("agentList", []), a.$(".group-participants").css("display", "none"))
					})
				});
				this.$().delegate(".chat-participants", "click", function () {
					a.$().removeClass("no-sidebar")
				});
				this.$().delegate(".open-group-details",
					"click", function (c) {
						$(this).addClass("active");
						a.$(".chat-details-container").show();
						a.$(".chat-details-container").removeClass("hidden");
						a.$().removeClass("no-sidebar");
						a.set("sectionHeader", "Group Details")
					});
				this.$(".popout-chat").click(function (c) {
					c.stopPropagation();
					Tawk.agentChatController.popOutChat(a.content)
				});
				this.$().delegate(".edit-group-name", "click", function () {
					a.$(".group-members-container").addClass("hidden");
					a.$(".agents-list").addClass("hidden");
					a.$(".group-name-form-container").removeClass("hidden");
					a.$(".open-group-details").click();
					a.set("sectionHeader", "Edit group name")
				});
				this.$().delegate(".cancel-name-edit", "click", function () {
					a.$(".group-members-container").removeClass("hidden");
					a.$(".agents-list").addClass("hidden");
					a.$(".group-name-form-container").addClass("hidden");
					a.isMinimized && a.$(".back-to-chat").click();
					return !1
				});
				this.$().delegate(".typearea", "click", function () {
					$(this).find(".chat-input").focus()
				})
			}
		});
	Ember.Handlebars.helper("agentChat", Tawk.AgentChatView);
	Tawk.PopoutAgentChatView =
		Ember.View.extend(Tawk.AgentChatCommon, {
			template: Ember.TEMPLATES.popoutAgentChat,
			classNames: ["agent-chat-panel"],
			agentList: [],
			filterMatch: null,
			moveFrontTrigger: function () {
				"inDOM" === this.state && this.content.focus && (this.$().is(":visible") ? this.$("textarea").focus() : Tawk.agentChatController.moveChatToFront(this.content.groupId), this.content.set("focus", !1))
			}.observes("content.focus"),
			focusMaximize: function () {
				this.content.focus && (this.content.isOpen && !this.content.isInline) && this.$(".ui-chatbox-content").show()
			}.observes("content.focus"),
			hasNewMessage: function (a) {
				var c;
				"inDOM" === this._state && this.content.newMessage && ((c = !document.hasFocus() || 1 !== this.$().has($(document.activeElement)).length || !this.$(".ui-chatbox-content").is(":visible")) ? (this.content.set("showFlash", !0), this.content.set("unSeen", !0), this.$().addClass("flash-new"), $("#hiddenList").find('li[data-groupid="' + this.content.groupId + '"]').addClass("new-message"), Tawk.leftPanel.$().trigger("unseen-messages")) : this.clearUnseen(), c && (a && !this.$().find(".new-message-container").length) &&
				$('<div class="new-message-container"><div class="left-border"><div class="border"></div></div><div class="text">' + languageParser.translate("visitors", "new_messages") + '</div><div class="right-border"><div class="border"></div></div></div>').insertBefore($(a)[0]), Tawk.agentChatController.hiddenNewMessage(this.content.groupId))
			},
			willDestroyElement: function () {
				this.$(".ui-chatbox-input-box").textcomplete("destroy");
				setTimeout(function () {
					Tawk.agentChatContainerView.resizeChatView()
				})
			},
			didInsertElement: function () {
				var a,
					c = this;
				this.setupListeners();
				this.set("members", sortList(Tawk.webProperties.getAllMembers(), "name"));
				this.members.setEach("isShown", !0);
				this.set("propertyMembers", this.members);
				this.$(".ui-chatbox-icon").tooltip();
				this.$(".control").tooltip();
				this.$("textarea").focus();
				this.content.draftText && this.$(".ui-chatbox-input-box").val(this.content.draftText);
				Tawk.agentChatContainerView.resizeChatView();
				this.content.currentOngoing.length && this.content.currentOngoing.forEach(function (a) {
					c.$(".chat-content").append(a.block)
				});
				this.$(".close-chat").click(function (a) {
					a.stopPropagation();
					Tawk.agentChatController.closeChat(c.content)
				});
				this.$(".minimize-chat, .ui-widget-header").click(function (a) {
					a.stopPropagation();
					c.$().toggleClass("minimized");
					c.clearUnseen()
				});
				this.$(".invite-agents").click(function () {
					c.content.isGroup ? c.$(".group-participants").css("display", "block") : c.set("agentList", Tawk.agentChatController.getAgentList(c.content.id))
				});
				this.$().delegate(".close-agent-list", "click", function () {
					c.content.isGroup && (c.$(".agents-list.show").length ?
						c.$(".agents-list.show").removeClass("show") : c.$(".group-participants").css("display", "none"));
					c.set("agentList", [])
				});
				this.$().delegate(".ui-chatbox-input-box", "keydown", function (a) {
					var b;
					if (!a.shiftKey) {
						if (33 === a.keyCode || 34 === a.keyCode) return a.preventDefault();
						13 === a.keyCode && (a.preventDefault(), a = $(this).val().trim(), Ember.isEmpty(a) || (Tawk.agentChatController.sendMessage(c.content, a), $(this).val(""), a = c.$().find(".new-message-container"), b = c.$().find(".unseen-message-container"), a.length && a.remove(),
						b.length && (b.off(), b.remove())), c.content.set("draftText", null), c.content.set("hasDraft", !1))
					}
				});
				this.$(".ui-chatbox-input-box:focus").on("click", function () {
					this.blur();
					this.focus()
				});
				this.$(".ui-chatbox-input-box").on("focus", function () {
					c.content.set("newMessage", !1);
					c.$().removeClass("flash-new");
					c.clearUnseen()
				});
				this.$(".ui-chatbox-input-box").on("blur", function () {
					c.content.set("draftText", $(this).val().trim())
				});
				this.$().delegate(".agent-select", "click", function () {
					var a = $(this).val();
					c.agentList.findProperty("id",
						a).set("isSelected", $(this).is(":checked"))
				});
				this.$().delegate(".ui-widget.ui-chatbox", "keydown", function (a) {
					27 === a.keyCode && (a.preventDefault(), a.stopPropagation(), nextSibling = c.$().prev(".agent-chat-panel"), 0 === nextSibling.length && (nextSibling = c.$().next(".agent-chat-panel")), 1 === nextSibling.length && nextSibling.find(".ui-chatbox-input-box").focus(), Tawk.agentChatController.closeChat(c.content))
				});
				this.$().delegate(".filter-agent", "keyup", function (a) {
					var b = $(this).val().trim(), e = [];
					!b || 40 !== a.keyCode &&
					38 !== a.keyCode && 13 !== a.keyCode ? (c.agentList.setEach("isShown", !1), e = filterList(c.agentList, "name", b), e.setEach("isShown", !0), c.set("filterMatch", e)) : (a.preventDefault(), a.stopPropagation())
				});
				this.$().delegate(".add-agents", "click", function (a) {
					a.stopPropagation();
					c.$('.agents-list:not(".show")').addClass("show");
					c.set("agentList", Tawk.agentChatController.removeInvitedAgents(c.members, c.content.participants))
				});
				this.$().delegate(".select-agents", "click", function (a) {
					var b = [];
					a.stopPropagation();
					b = c.agentList.filterProperty("isSelected",
						!0);
					b.setEach("isOwn", !1);
					c.set("agentList", []);
					c.$(".agents-list.show").removeClass("show");
					c.content.isGroup && Tawk.agentChatController.addAgentsToExistingGroup(c.content.groupId, b)
				});
				this.$(".popin-chat").click(function (a) {
					a.stopPropagation();
					Tawk.agentChatController.popInChat(c.content)
				});
				this.$().delegate(".edit-group", "click", function () {
					c.$(".group-name-container").show()
				});
				this.$().delegate(".close-group-form", "click", function () {
					c.$(".group-name-container").hide();
					c.$(".alert").remove();
					return !1
				});
				setTimeout(function () {
					c.$(".group-name-form").length && c.$(".group-name-form").validate({
						errorPlacement: function (a, b) {
							a.insertAfter(b.parent())
						}, submitHandler: function (a) {
							var b = $(".group-name", a).val();
							$(a).find(".alert").remove();
							Tawk.agentChatController.saveGroupChatName(c.content.groupId, b, function (b) {
								b ? errorSave(a) : successSave(a)
							});
							return !1
						}
					})
				});
				this.$(".ui-chatbox-input-box").textcomplete(emojiTextComplete.strategies, emojiTextComplete.options);
				this.$().delegate(".open-emoji", "click", function (d) {
					a ||
					(d.stopPropagation(), $(this).addClass("selected"), a = getEmojiView($(this).parents(".ui-chatbox-input"), $(this).parent().find(".ui-chatbox-input-box")), a.css("left", c.$().offset().left - c.$().width() / 2))
				});
				this.$().click(function (d) {
					0 === $(d.target).parents(".emoji-container").length && a && (d.stopPropagation(), c.$(".open-emoji").removeClass("selected"), a.remove(), a = null)
				});
				this.$(".ui-chatbox-input-box").on("focus", function () {
					a && (c.$(".open-emoji").removeClass("selected"), a.remove(), a = null)
				})
			}
		});
	Ember.Handlebars.helper("popoutAgentChat",
		Tawk.PopoutAgentChatView);
	Tawk.AgentChatContainerView = Ember.View.extend({
		elementId: "agent-chat-container",
		controller: Tawk.agentChatController,
		maxChatSize: 0,
		chatWidth: 234,
		viewWidth: 0,
		hiddenListWidth: 160,
		template: Ember.TEMPLATES.agentChatContainer,
		hiddenListChanged: function () {
			var a;
			"inDOM" === this.state && (a = this.$("#hiddenChatListContainer"), this.controller.hiddenChatList.length && a.hasClass("hidden") ? (a.removeClass("hidden"), this.$("#hiddenChatListContainer").css("right", this.$(".agent-chat-panel:visible").length *
				this.chatWidth)) : this.controller.hiddenChatList.length || a.addClass("hidden"))
		}.observes("controller.hiddenChatList.length"),
		resizeChatView: function () {
			var a, c = this;
			this.$(".agent-chat-panel:visible").length * this.chatWidth > this.viewWidth ? (a = this.$(".agent-chat-panel:visible").length - Math.floor(this.viewWidth / this.chatWidth), this.$(".agent-chat-panel:visible").splice(0, a).forEach(function (a) {
				$(a).css("display", "none");
				c.controller.hideChat($(a).attr("id"))
			})) : this.$(".agent-chat-panel:visible").length *
				this.chatWidth < this.viewWidth && 0 < this.$(".agent-chat-panel:hidden").length && (a = Math.floor(this.viewWidth / this.chatWidth) - this.$(".agent-chat-panel:visible").length, this.$(".agent-chat-panel:hidden").splice(this.$(".agent-chat-panel:hidden").length - a, a).reverse().forEach(function (a) {
					$(a).css("display", "block");
					c.controller.showChat($(a).attr("id"))
				}))
		},
		hasChatViews: function () {
			"inDOM" === this.state && (this.controller.popoutChatList.length ? $("body").addClass("agent-chat-active") : $("body").removeClass("agent-chat-active"))
		}.observes("controller.popoutChatList.length"),
		hiddenHasNewMessage: function () {
			"inDOM" === this.state && (this.controller.hiddenChatList.filterProperty("newMessage", !0).length ? this.$("#hiddenChatListContainer").addClass("flash-new") : this.$("#hiddenChatListContainer").removeClass("flash-new"))
		}.observes("controller.hiddenChatList.@each.newMessage"),
		didInsertElement: function () {
			var a = this;
			this.$().resize(function () {
				clearTimeout(a.resizeTimeout);
				a.set("resizeTimeout", setTimeout(function () {
					a.set("viewWidth", a.$().width() - a.hiddenListWidth);
					a.resizeChatView();
					a.$("#hiddenChatListContainer").css("right", a.$(".agent-chat-panel:visible").length * a.chatWidth)
				}, 1E3 / 66))
			});
			this.set("viewWidth", this.$().width() - this.hiddenListWidth);
			this.$().delegate(".agent-chat-panel", "focus", function () {
				$(this).find(".ui-widget-header").addClass("ui-state-focus");
				$(this).removeClass("flash-new")
			});
			this.$().delegate(".agent-chat-panel", "blur", function () {
				$(this).find(".ui-widget-header").removeClass("ui-state-focus")
			});
			this.$().delegate(".close-hidden-chat", "click", function (c) {
				var d =
					c.target;
				c.stopPropagation();
				a.controller.closeHiddenChat($(d).parents("li").attr("data-groupid"))
			})
		}
	});
	Tawk.agentChatContainerView = Tawk.AgentChatContainerView.create();
	Tawk.MembersMessageListView = Ember.View.extend({
		template: Ember.TEMPLATES.membersMessageList,
		elementId: "direct-message-view",
		controller: Tawk.agentChatController,
		classNames: "overlay-form",
		searchText: null,
		list: null,
		listType: null,
		isNewGroupView: !1,
		showBack: !1,
		selectedMembers: [],
		isDM: function () {
			return "dm" === this.listType
		}.property("listType"),
		loadList: function (a) {
			var c = [], c = this.get("isDM") ? this.controller.directMessagesList : this.controller.groupMessagesList;
			a && (c = c.filter(function (c) {
				return c.name && c.name.match(a) || c.get("groupName") && c.get("groupName").match(a) ? !0 : !1
			}));
			this.get("isDM") || (c = sortList(c, "groupName"));
			this.set("list", c)
		},
		willInsertElement: function () {
			this.loadList()
		},
		didInsertElement: function () {
			var a = this;
			!this.get("isDM") && this.isNewGroupView && this.openAddGroup();
			this.$("#close-view").click(function () {
				a.closeView()
			});
			$("body").bind("keydown.directMessageCloseView",
				function (c) {
					if (27 === c.keyCode) return c.stopPropagation(), a.closeView(), !1
				});
			this.$().delegate("#property-id", "change", function () {
				var c = $(this).val(), d = [];
				"0" === c ? d = a.members : a.members.forEach(function (a) {
					-1 !== a.properties.indexOf(c) && d.pushObject(a)
				});
				a.set("propertyMembers", d)
			});
			this.$().delegate(".agent-entry", "click", function () {
				var c = $(this).attr("id");
				a.closeView();
				$(this).hasClass("group-chat") ? Tawk.agentChatController.openGroupChat(c) : Tawk.agentChatController.openChat(c)
			});
			this.$("#search").keyup(function () {
				var c =
					$(this).val().trim();
				a.loadList(RegExp(c, "gi"))
			});
			this.$("#group-chat-form").validate({
				rules: {"group-participants[]": {required: !0, maxlength: 49}},
				messages: {
					"group-participants[]": {
						required: "Each group must have at least 2 participants, including you.",
						maxlength: "You can only select up to 50 members at a time."
					}
				},
				errorPlacement: function (c, d) {
					d.hasClass("group-participants") ? a.$("#error-container").html(c).removeClass("hidden") : c.insertAfter(d.parent())
				},
				submitHandler: function () {
					var c = a.$("#group-name").val(),
						d = [];
					a.$("#error-container").addClass("hidden");
					d.pushObject(Ember.Object.create({
						id: Tawk.userController.user.id,
						name: Tawk.userController.user.fullName,
						isOwn: !0,
						status: "online"
					}));
					a.members.forEach(function (a) {
						a.selected && d.pushObject(a)
					});
					Tawk.agentChatController.startGroupChat(c, d, function (b) {
						b ? a.$("#error-container").removeClass("hidden").html("Unable to create group.") : a.closeView()
					});
					return !1
				}
			});
			this.$().delegate("#create-group", "click", function () {
				a.set("showBack", !0);
				a.openAddGroup()
			});
			this.$().delegate("#cancel",
				"click", function () {
					a.showBack ? (a.set("showBack", !1), a.set("isNewGroupView", !1)) : a.closeView()
				});
			this.$().delegate("#back-view", "click", function (c) {
				c.preventDefault();
				a.set("showBack", !1);
				a.set("isNewGroupView", !1);
				return !1
			});
			this.$().delegate(".group-participants", "change", function () {
				var c;
				c = $(this).attr("id");
				var d = $(this).is(":checked");
				(c = a.members.findProperty("id", c)) && (d ? c.set("selected", !0) : c.set("selected", !1))
			});
			this.$().delegate(".pin-chat", "click", function (a) {
				var d = $(this).parent().attr("id");
				a.stopPropagation();
				Tawk.agentChatController.pinChatToSidebar(d)
			});
			this.$().delegate(".unpin-chat", "click", function (a) {
				var d = $(this).parent().attr("id");
				a.stopPropagation();
				Tawk.agentChatController.unpinChatToSidebar(d)
			})
		},
		willDestroyElement: function () {
			$("body").unbind("keydown.directMessageCloseView")
		},
		openView: function (a) {
			this.set("isVisible", !0);
			this.set("isNewGroupView", !1);
			this.set("listType", a);
			this.loadList()
		},
		closeView: function () {
			this.remove();
			this.closeForm()
		},
		openAddGroup: function () {
			var a =
				this, c = [];
			Tawk.webProperties.get("allProperties").forEach(function (a) {
				a.enabled && !a.personalPage && a.currentAgents.forEach(function (b) {
					if (b.en && b.aid !== Tawk.userController.user.id) {
						var e = c.findProperty("id", b.aid);
						e && -1 === e.properties.indexOf(a.id) ? e.properties.pushObject(a.id) : e || (e = Tawk.agentsController.getAgent(b.aid)) && c.pushObject(Ember.Object.create({
							id: b.aid,
							name: e.name,
							selected: !1,
							properties: [a.id],
							status: e.get("status"),
							isOwn: !1
						}))
					}
				})
			});
			this.set("members", sortList(c, "name"));
			this.set("isVisible",
				!0);
			this.set("isNewGroupView", !0);
			setTimeout(function () {
				a.$("#property-id").trigger("change")
			})
		}
	});
	Tawk.ImageCropView = Ember.View.extend({
		template: Ember.TEMPLATES.imageCropView,
		elementId: "image-crop-view",
		videoMedia: null,
		hasUserMedia: null,
		readImageFile: function () {
			var a = this;
			this.controller && this.controller.imageData && (this.$("#error-container").addClass("hidden"), readImageFile(this.controller.imageData.file, this.controller.imageData.cropDimensions.width, this.controller.imageData.cropDimensions.height,
				this.$("#source-image")[0], function (c, d, b) {
					c ? (errorSave(a.$().parent(), d), a.controller.set("imageData", null)) : a.editImage(b)
				}))
		},
		editImage: function (a) {
			var c = this;
			this.$("#image-camera-view").addClass("hidden");
			this.$("#image-crop").removeClass("hidden");
			this.$("#cropper").css({
				width: this.controller.imageData.cropDimensions.width,
				height: this.controller.imageData.cropDimensions.height
			});
			scaleImage(a, c.$("#moveable-image")[0], c.$("#static-image")[0], 1, function () {
				c.$(".jcrop-holder").css({
					width: c.$("#moveable-image")[0].width,
					height: c.$("#moveable-image")[0].height
				})
			})
		},
		getCameraImage: function () {
			var a = this.$("#source-image")[0], c = this, d = this.$("video");
			this.hasUserMedia = !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);
			this.hasUserMedia || (d = $('<div id="camera" />'), this.$("#camera-container").append(d));
			this.$("#image-camera-view").removeClass("hidden");
			this.$("#image-crop").addClass("hidden");
			d.removeClass("hidden");
			loadCamera(d, function (b, e) {
				if (b) errorSave(c.$().parent(),
					e), c.controller.set("imageData", null); else {
					c.videoMedia = e;
					a.setAttribute("width", 320);
					a.setAttribute("height", 240);
					ctx = a.getContext("2d");
					c.$("#image-camera-view").find(".button-container").removeClass("hidden");
					if (c.hasUserMedia) d[0].setAttribute("src", window.URL.createObjectURL(c.videoMedia)), d[0].play(), c.$("#capture-image").click(function () {
						ctx.drawImage(d[0], 0, 0, a.width, a.height);
						c.stopAllTracks(c.videoMedia);
						c.editImage(a)
					}); else {
						var f = c.videoMedia, g = $('<select id="camera-names" />');
						f.getCameraList().forEach(function (a,
						                                    b) {
							g.append($("<option></option>").val(b).html(a))
						});
						g.val(d);
						g.change(function () {
							f.setCamera($(this).val())
						});
						c.$("#camera-container").append(g);
						g.val("0");
						f.setCamera("0");
						c.$("#capture-image").click(function () {
							var b = f.save();
							if (b && b.length) {
								var e = new Image;
								e.onload = function () {
									d.remove();
									g.remove();
									ctx.drawImage(this, 0, 0, a.width, a.height);
									c.editImage(a)
								};
								e.src = "data:image/jpeg;base64," + b
							} else errorSave(c.$().parent(), languageParser.translate("pages", "camera_no_capture")), c.controller.set("imageData",
								null)
						})
					}
					c.$(".cancel").click(function () {
						c.stopAllTracks(c.videoMedia);
						c.controller.set("imageData", null)
					});
					c.$().on("hideTriggered", function () {
						c.stopAllTracks(c.videoMedia);
						c.controller.set("imageData", null)
					})
				}
			})
		},
		stopAllTracks: function (a) {
			this.hasUserMedia && a.getTracks().forEach(function (a) {
				a.stop()
			})
		},
		willDestroyElement: function () {
			this.videoMedia && (this.stopAllTracks(this.videoMedia), this.controller.set("imageData", null))
		},
		didInsertElement: function () {
			var a = this;
			"file" === this.controller.imageData.dataType ?
				this.readImageFile() : this.getCameraImage();
			this.$("#cropper").draggable({containment: "parent"});
			this.$("#cropper").on("drag", function (c, d) {
				a.$("#moveable-image").css({left: -1 * d.position.left, top: -1 * d.position.top})
			});
			$("#range-slider-3").ionRangeSlider({
				min: 1, from: 1, max: 2, type: "single", step: 0.1, prettify: !0, onChange: function (c) {
					scaleImage(a.$("#source-image")[0], a.$("#moveable-image")[0], a.$("#static-image")[0], c.from, function () {
						var c = parseInt(a.$("#cropper").css("top").replace("px", ""), 10),
							b = parseInt(a.$("#cropper").css("left").replace("px",
								""), 10), e = a.$("#cropper").parent(), f = a.$("#cropper").offset(), g = e.offset(),
							h = a.controller.imageData.width, k = a.controller.imageData.height;
						a.$(".jcrop-holder").css({
							width: a.$("#moveable-image")[0].width,
							height: a.$("#moveable-image")[0].height
						});
						f.top + k > g.top + e.height() && (c -= f.top + k - (g.top + e.height()), a.$("#cropper").css("top", c), a.$("#moveable-image").css("top", -1 * c));
						f.left + h > g.left + e.width() && (b -= f.left + h - (g.left + e.width()), a.$("#cropper").css("left", b), a.$("#moveable-image").css("left", -1 * b))
					})
				}
			});
			this.$("#apply-crop").click(function () {
				var c = parseInt(a.$("#cropper").css("top").replace("px", ""), 10),
					d = parseInt(a.$("#cropper").css("left").replace("px", ""), 10);
				cropImage(a.$("#static-image")[0], d, c, a.controller.imageData.imageDimensions.width, a.controller.imageData.imageDimensions.height, a.controller.imageData.cropDimensions.width, a.controller.imageData.cropDimensions.height, function (b) {
					a.controller.applyImage(b)
				})
			});
			this.$(".cancel").click(function () {
				a.controller.set("imageData", null)
			})
		}
	});
	Ember.Handlebars.helper("ImageCropView",
		Tawk.ImageCropView);
	Tawk.SoundSettingView = Ember.View.extend(Tawk.ModalViewBase, {
		elementId: "sound-settings",
		template: Ember.TEMPLATES.soundSettings,
		controller: Tawk.userController,
		newChatSelectClass: "sound-files icr-select",
		repeatSelectClass: "icr-loop-select",
		newVisitorSelectClass: "sound-files iv-select",
		newMessageSelectClass: "sound-files im-select",
		agentDisconnectSelectClass: "sound-files dc-select",
		agentChatSelectClass: "sound-files acm-select",
		soundSettings: Ember.Object.create({
			icr: {
				name: null, volume: 0,
				loop: 0
			},
			im: {name: null, volume: 0},
			iv: {name: null, volume: 0},
			dc: {name: null, volume: 0},
			acm: {name: null, volume: 0}
		}),
		willInsertElement: function () {
			notificationController.audioPlayer.preloadSounds();
			this.set("soundSettings.icr.name", this.controller.soundSettings.icr.name);
			this.set("soundSettings.icr.volume", this.controller.soundSettings.icr.volume);
			this.set("soundSettings.icr.loop", this.controller.soundSettings.icr.loop);
			this.set("soundSettings.im.name", this.controller.soundSettings.im.name);
			this.set("soundSettings.im.volume",
				this.controller.soundSettings.im.volume);
			this.set("soundSettings.iv.name", this.controller.soundSettings.iv.name);
			this.set("soundSettings.iv.volume", this.controller.soundSettings.iv.volume);
			this.set("soundSettings.dc.name", this.controller.soundSettings.dc.name);
			this.set("soundSettings.dc.volume", this.controller.soundSettings.dc.volume);
			this.set("soundSettings.acm.name", this.controller.soundSettings.acm.name);
			this.set("soundSettings.acm.volume", this.controller.soundSettings.acm.volume);
			this.set("newChatLabel",
				languageParser.translate("sound_settings", "new_chat"));
			this.set("repeatLabel", languageParser.translate("sound_settings", "repeat"));
			this.set("newVisitorLabel", languageParser.translate("sound_settings", "new_visitor"));
			this.set("newMessageLabel", languageParser.translate("sound_settings", "new_message"));
			this.set("agentDisconnectLabel", languageParser.translate("sound_settings", "agent_disconnect"));
			this.set("agentChatLabel", languageParser.translate("sound_settings", "agent_chat"));
			this.set("soundOptions",
				[{
					value: "none",
					text: languageParser.translate("sound_settings", "none")
				}].concat(notificationController.audioPlayer.playableFiles));
			for (var a = [], c = 1; 11 > c; c++) a.push({
				value: c,
				text: languageParser.translate("sound_settings", "times", {num: c})
			});
			a.push({value: 11, text: languageParser.translate("sound_settings", "forever")});
			this.set("repeatOptions", a)
		},
		didInsertElement: function () {
			var a = this;
			this._super();
			this.$().on("hidden.bs.modal", function () {
				"function" === typeof a.closeCallback && a.closeCallback()
			});
			this.$(".sound-files").change(function () {
				var c =
					$(this).parent().parent().data("event-name"), d = a.$("#" + c + "-slider").slider("value");
				a.set("soundSettings." + c + ".name", $(this).val());
				"none" === $(this).val() ? (a.$("#" + c + "-slider").slider("value", 100), $("#" + c + "-control").addClass("hidden")) : (notificationController.playAudio($(this).val(), d), $("#" + c + "-control").removeClass("hidden"))
			});
			this.$(".volume-slider").slider({
				min: 0, max: 100, range: "min", animate: !0, create: function () {
					var c = $(this).data("event-name");
					$(this).slider("value", a.controller.soundSettings[c].volume)
				},
				change: function (c, d) {
					var b = $(this).data("event-name"), e = a.$("." + b + "-select").val();
					e && (notificationController.playAudio(e, d.value), a.set("soundSettings." + b + ".volume", d.value))
				}
			});
			this.$(".icr-loop-select").change(function () {
				a.set("soundSettings.icr.loop", $(this).val())
			});
			Object.keys(this.soundSettings).forEach(function (c) {
				"none" === a.soundSettings[c].name ? $("#" + c + "-control").addClass("hidden") : $("#" + c + "-control").removeClass("hidden")
			});
			this.$("#sound-settings-form").validate({
				errorPlacement: function (a,
				                          d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					a.controller.saveSoundSettings(a.soundSettings, a.$("#status-enabled").is(":checked"), function (c) {
						c ? a.saveError() : a.saveSuccess()
					});
					return !1
				}
			});
			this.$("#submit").click(function () {
				a.$("form").submit()
			})
		},
		newChatSound: function () {
			return this.soundSettings.icr.name
		}.property("soundSettings.icr.name"),
		newChatRepeat: function () {
			return this.soundSettings.icr.loop
		}.property("soundSettings.icr.loop"),
		newMessageSound: function () {
			return this.soundSettings.im.name
		}.property("soundSettings.im.name"),
		newVisitorSound: function () {
			return this.soundSettings.iv.name
		}.property("soundSettings.iv.name"),
		agentDisconnectSound: function () {
			return this.soundSettings.dc.name
		}.property("soundSettings.dc.name"),
		agentChatSound: function () {
			return this.soundSettings.acm.name
		}.property("soundSettings.acm.name"),
		soundNotificationIsEnabled: function () {
			return Tawk.userController.soundNotificationEnabled
		}.property("Tawk.userController.soundNotificationEnabled")
	});
	Tawk.BrowserAppSessionsView = Ember.View.extend(Tawk.ModalViewBase,
		{
			elementId: "browser-app-sessions",
			template: Ember.TEMPLATES.browserAppSessions,
			controller: Tawk.userController,
			willInsertElement: function () {
				this.controller.loadBrowserAppSessions()
			},
			didInsertElement: function () {
				var a = this;
				this._super();
				this.$().on("hidden.bs.modal", function () {
					"function" === typeof a.closeCallback && a.closeCallback()
				});
				this.$().delegate(".end-session", "click", function (c) {
					a.controller.signOutSession($(this).data("id"));
					Tawk.intercomController.execute("trackEvent", {eventType: "ended-existing-sessions"})
				});
				this.$().delegate(".reload-view", "click", function () {
					a.controller.loadBrowserAppSessions()
				});
				Tawk.intercomController.execute("trackEvent", {eventType: "viewed-existing-sessions"})
			},
			willDestroyElement: function () {
				this.controller.clearBrowserAppSessions()
			},
			loaded: function () {
				return "LOADED" === this.controller.existingSessions.status
			}.property("controller.existingSessions.status"),
			error: function () {
				return "ERROR" === this.controller.existingSessions.status
			}.property("controller.existingSessions.status")
		});
	Tawk.ConfirmDeleteView =
		Ember.View.extend(Tawk.ModalViewBase, {
			template: Ember.TEMPLATES.confirmSimpleDelete,
			elementId: "confirmSimpleDelete",
			classNames: ["modal"],
			callback: null,
			needInput: !1,
			success: !1,
			confirmationAnswer: null,
			confirmationQuestion: languageParser.translate("action_messages", "confirm_delete"),
			confirmationHeader: languageParser.translate("action_messages", "title_confirm_delete"),
			confirmationProceedText: languageParser.translate("buttons", "delete_text"),
			positiveProceeed: !1,
			didInsertElement: function () {
				var a = this;
				this._super();
				this.$().delegate("#close", "click", function () {
					a.closeView()
				});
				this.$().delegate("#submit", "click", function () {
					a.$("#confirmation").submit()
				});
				this.set("validator", this.$("#confirmation").validate({
					submitHandler: function () {
						a.needInput ? a.$("#check").val().trim() === a.confirmationAnswer ? a.set("success", !0) : a.set("success", !1) : a.set("success", !0);
						a.closeView()
					}
				}))
			},
			closeView: function () {
				this.callback(this.success);
				this.resetAttributes();
				this.$().modal("hide")
			},
			resetAttributes: function () {
				this.set("success",
					!1);
				this.set("confirmationAnswer", null);
				this.set("needInput", !1);
				this.set("confirmationQuestion", null);
				this.set("confirmationHeader", null);
				this.set("confirmationYesText", null)
			},
			openView: function () {
				this._super();
				this.$().show()
			}
		});
	Tawk.confirmDeleteView = Tawk.ConfirmDeleteView.create({});
	Tawk.PropertySelectView = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.propertySelect,
		elementId: "propertySelect",
		classNames: ["modal"],
		widgetList: null,
		didInsertElement: function () {
			var a = this, c = Tawk.routing.getPath();
			this._super();
			this.set("showPageList", !c.subView || "widget-scheduler" !== c.subView && "widget-domains" !== c.subView ? !0 : !1);
			this.set("hideSiteList", c.subView && "page-content" === c.subView);
			this.$("#select").click(function () {
				var d = a.$("#property-path-select").find(":selected");
				c.propertyId = d.val();
				a.controller.requestWidget && (c.widgetId = a.$("#widget-path-select").val());
				Tawk.routing.changeRoute(c);
				a.closeView()
			});
			this.controller.requestWidget ? (this.constructWidgetList(), this.$("#property-path-select").change(function () {
					a.constructWidgetList()
				})) :
				this.$("#widget-selection-container").addClass("hidden")
		},
		constructWidgetList: function () {
			var a;
			a = this.$("#property-path-select").find(":selected").val();
			(a = Tawk.webProperties.getProperty(a)) ? (this.set("widgetList", a.widgets), this.$("#widget-selection-container").removeClass("hidden")) : (this.set("widgetList", null), this.$("#widget-selection-container").addClass("hidden"))
		},
		closeView: function () {
			this.$().modal("hide")
		},
		openView: function () {
			this._super();
			this.$().show()
		}
	});
	Ember.Handlebars.helper("PropertySelectView",
		Tawk.PropertySelectView);
	Tawk.AlertBox = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.alertBox,
		elementId: "alertBox",
		classNames: ["modal"],
		message: null,
		title: null,
		message: function () {
			return this.message
		}.property("message"),
		message: function () {
			return this.title
		}.property("title"),
		willDestroyElement: function () {
			this._super()
		},
		didInsertElement: function () {
			var a = this;
			a._super();
			a.$().delegate("#cancel", "click", function () {
				a.$().hide()
			})
		}
	});
	Tawk.alertBox = Tawk.AlertBox.create();
	Tawk.WizardView =
		Ember.View.extend(Tawk.ModalViewBase, {
			elementId: "wizard-container",
			template: Ember.TEMPLATES.wizard,
			controller: Tawk.WizardController.create(),
			emails: null,
			cmsLinks: [{
				value: "drupal",
				text: "Drupal",
				link: "http://storage.googleapis.com/tawk-plugins/tawk-drupal-1.0.zip"
			}, {
				value: "joomla",
				text: "Joomla",
				link: "http://extensions.joomla.org/extensions/extension/communication/live-support-hosted/tawk"
			}, {
				value: "magento",
				text: "Magento",
				link: "http://storage.googleapis.com/tawk-plugins/TawkTo-1.0.1.tgz"
			}, {
				value: "opencart1",
				text: "Opencart 1.x", link: "http://storage.googleapis.com/tawk-plugins/tawk-opencart-1.0.zip"
			}, {
				value: "opencart2",
				text: "Opencart 2.x",
				link: "http://storage.googleapis.com/tawk-plugins/tawk-opencart2-1.0.1.zip"
			}, {
				value: "pretashop",
				text: "Pretashop",
				link: "http://storage.googleapis.com/tawk-plugins/tawkto-prestashop.zip"
			}, {value: "shopify", text: "Shopify", link: "https://apps.shopify.com/tawk-to"}, {
				value: "whmcs",
				text: "WHMCS",
				link: "http://storage.googleapis.com/tawk-plugins/tawk-whmcs-1.1.zip"
			}, {
				value: "wordpress",
				text: "Wordpress", link: "https://wordpress.org/plugins/tawkto-live-chat/"
			}, {
				value: "zencart",
				text: "ZenCart",
				link: "http://storage.googleapis.com/tawk-plugins/tawk-zencart-1.0.zip"
			}],
			bootstrapWizard: null,
			willDestroyElement: function () {
				this.controller.resetData()
			},
			willInsertElement: function () {
				this.set("modalPadding", 0);
				this.set("roleSelectLabel", languageParser.translate("sites", "role"));
				this.set("roleSelectOptions", [{value: "admin", text: languageParser.translate("generic", "admin")}, {
					value: "agent", text: languageParser.translate("generic",
						"agent")
				}]);
				this.set("roleSelectClass", "agent-role-select");
				this.set("roleSelectValue", "admin");
				this.controller.loadData()
			},
			didInsertElement: function () {
				var a = this;
				this._super();
				this.$("#download-link").attr("href", this.cmsLinks[0].link);
				this.$("#cms-change").change(function () {
					var c = $(this).find("option:selected");
					a.$("#download-link").attr("href", c.attr("data-link"))
				});
				this.$().on("hidden.bs.modal", function () {
					"function" === typeof a.closeCallback && a.closeCallback()
				});
				this.$().bootstrapWizard({
					tabClass: "form-wizard",
					previousSelector: "#previous-step", onTabShow: function (c, d, b) {
						a.$("#wizard-done").addClass("hidden");
						a.$("#next-step").removeClass("hidden");
						a.$("#previous-step").removeClass("hidden");
						a.$("#skip-step").addClass("hidden");
						0 === b ? a.$("#previous-step").addClass("hidden") : 1 === b ? (c = a.$("#wizard-agent-intro").height(), a.$("#wizard-agent-form").css("max-height", 500 - c), a.$("#skip-step").removeClass("hidden")) : 2 === b && (a.$("#wizard-done").removeClass("hidden"), a.$("#next-step").addClass("hidden"));
						a.resizeView()
					}
				});
				this.set("bootstrapWizard", this.$().data("bootstrapWizard"));
				this.$("#add-another-email").click(function (c) {
					c.preventDefault();
					a.controller.addInvitation();
					return !1
				});
				this.$().delegate("#next-step", "click", function (c) {
					c = a.bootstrapWizard.currentIndex();
					0 === c ? a.$("#wizard-site-form").submit() : 1 === c && a.$("#wizard-agent-form").submit();
					return !1
				});
				this.$("#skip-step").click(function () {
					a.bootstrapWizard.next()
				});
				this.$("#widget-code").click(function () {
					$(this).select()
				});
				this.$("#wizard-site-form").validate({
					errorPlacement: function (a,
					                          d) {
						a.insertAfter(d.parent())
					}, submitHandler: function (c) {
						var d = !0, b = a.$("#site-name").val().trim(), e = a.$("#site-domain").val().trim();
						e.length && (-1 === e.indexOf("http://") && -1 === e.indexOf("https://")) && (e = "http://" + e);
						a.controller.site && (d = !1);
						a.controller.saveSite(b, e, function (b) {
							b ? errorSave(c, d ? languageParser.translate("form_validation_messages", "site_add_error") : null) : a.markStepComplete(a.$("li.active"))
						});
						return !1
					}
				});
				this.$("#wizard-agent-form").validate({
					errorPlacement: function (a, d) {
						a.insertAfter(d.parent())
					},
					submitHandler: function (c) {
						var d = [];
						a.controller.invitedList.forEach(function (b) {
							var c, f = a.$('section[data-emailId="' + b.id + '"]');
							f.length && (c = f.find(".email").val(), c.length && d.push({
								email: f.find(".email").val(),
								role: f.find("select").val(),
								id: b.id
							}))
						});
						a.controller.inviteAgents(d, function (b) {
							b.length ? b.forEach(function (b) {
								a.$('section[data-emailId="' + b.id + '"]').append('<p class="wizard-error">' + languageParser.translate("form_validation_messages", b.errorKey) + "</p>")
							}) : a.markStepComplete(a.$("li.active"))
						});
						return !1
					}
				});
				this.$().delegate(".delete-email", "click", function () {
					var c = $(this).next().find("input").attr("id");
					a.controller.removeInvitation(c)
				});
				this.$(".change-tab").click(function (a) {
					a.stopPropagation();
					return !1
				});
				this.$("#skip-wizard, #wizard-done").click(function () {
					a.$().modal("hide");
					a.closeCallback()
				});
				this.controller.siteCreateDone && this.markStepComplete(this.$('li[data-target="#step1"]'));
				this.$("#email-instructions").click(function () {
					a.$("#download-plugin-container").addClass("hidden");
					a.$("#email-container").removeClass("hidden")
				});
				this.$("#cancel-email").click(function (c) {
					c.preventDefault();
					a.$("#download-plugin-container").removeClass("hidden");
					a.$("#email-container").addClass("hidden")
				});
				this.$("#send-email").click(function () {
					a.$("#wizard-email-instructions-form").submit()
				});
				this.$("#wizard-email-instructions-form").validate({
					rules: {emails: {required: !0, multiemail: 10}}, messages: {
						emails: {
							multiemail: languageParser.translate("form_validation_messages", "email") + "(" + languageParser.translate("form_validation_messages",
								"total_recipients") + ")"
						}
					}, errorPlacement: function (a, d) {
						a.insertAfter(d.parent())
					}, submitHandler: function (c) {
						c = $("#emails").val().split(",");
						a.controller.emailDeveloper($.map(c, $.trim), function (c) {
							if (c) return a.saveError(languageParser.translate("form_validation_messages", "email_developer_error"));
							a.saveSuccess(languageParser.translate("form_validation_messages", "email_developer_success"))
						});
						return !1
					}
				})
			},
			openView: function () {
				this.$().modal({backdrop: "static", keyboard: !1})
			},
			markStepComplete: function (a) {
				a.addClass("complete").find(".step").html('<i class="fa fa-check"></i>');
				this.bootstrapWizard.next()
			},
			inviteAgentDoneChanged: function () {
				"inDOM" === this._state && this.controller.inviteAgentDone && this.markStepComplete(this.$('li[data-target="#step2"]'))
			}.observes("controller.inviteAgentDone")
		});
	Tawk.ImagePreview = Ember.View.extend({
		elementId: "image-preview",
		template: Ember.TEMPLATES.imagePreview,
		classNames: "overlay-form",
		didInsertElement: function () {
			var a = this;
			this.$("#close-view").click(function () {
				a.closeView()
			});
			$("body").bind("keydown.image-previewcloseView", function (c) {
				if (27 ===
					c.keyCode) return c.stopPropagation(), a.closeView(), !1
			});
			this.$().delegate(".zoomed-out", "click", function () {
				$(this).addClass("zoomed-in").removeClass("zoomed-out")
			});
			this.$().delegate(".zoomed-in", "click", function () {
				$(this).addClass("zoomed-out").removeClass("zoomed-in")
			});
			this.openView()
		},
		willDestroyElement: function () {
			$("body").unbind("keydown.image-previewcloseView")
		},
		openView: function () {
			this.set("isVisible", !0);
			this.loadImage()
		},
		closeView: function () {
			this.set("isVisible", !1);
			this.$("#preview").attr("src",
				"").removeClass("zoomed-out zoomed-in");
			this.$("#preview").off();
			this.parentCloseAck && this.parentCloseAck()
		},
		loadImage: function () {
			var a, c, d = this;
			imageEl = this.$("#preview");
			this.set("isLoading", !0);
			setTimeout(function () {
				a = d.$("#image-container").width();
				c = d.$("#image-container").height();
				imageEl.on("load", function (b) {
					d.set("isLoading", !1);
					(this.width > a || this.height > c) && imageEl.addClass("zoomed-out")
				}).on("error", function () {
					d.set("isLoading", !1)
				}).attr("src", d.get("imageSrc"))
			})
		}
	});
	Tawk.MessageTagView =
		Ember.View.extend({
			template: Ember.TEMPLATES.tagMessageView,
			classNames: "floating-view-container",
			didInsertElement: function () {
				var a, c = this;
				this.set("isLoading", !0);
				socketConnector.getChatTagsByProperty(this.propertyId, function (d, b) {
					var e = [];
					d || b.forEach(function (a) {
						e.push(decodeStr(a))
					});
					a = new Bloodhound({
						datumTokenizer: Bloodhound.tokenizers.whitespace,
						queryTokenizer: Bloodhound.tokenizers.whitespace,
						local: e
					});
					c.set("isLoading", !1);
					a.initialize();
					c.set("tags", a);
					c.setupTagsInput()
				});
				this.$().delegate(".close-tag-form",
					"click", function () {
						c.closeFunction()
					});
				this.$(".smart-form").validate({
					errorPlacement: function (a, b) {
						a.insertAfter(b.parent())
					}, submitHandler: function (a) {
						var b = c.$(".message-tags").tagsinput("items");
						c.$(".alert").remove();
						c.isLiveChat ? Tawk.visitorChatController.updateChatTags(c.sessionId, b, function (b) {
							b ? errorSave(a, languageParser.translate("form_validation_messages", b)) : successSave(a)
						}) : Tawk.conversationsController.updateTags(b, function (b, c) {
							b ? errorSave(a, c ? languageParser.translate("form_validation_messages",
								c) : null) : successSave(a)
						});
						return !1
					}
				})
			},
			setupTagsInput: function () {
				var a = this;
				this.$(".message-tags").tagsinput({
					typeaheadjs: {
						source: this.tags,
						highlight: !0,
						displayText: function (a) {
							return a || ""
						}
					}, freeInput: !0, maxChars: 255, maxTags: 10
				});
				this.$(".message-tags").tagsinput("input").on("keydown", function (c) {
					if (13 === c.keyCode) return a.$(".message-tags").tagsinput("add", $(this).val()), $(this).val(""), !1
				});
				this.$(".message-tags").tagsinput("input").on("blur", function () {
					a.$(".message-tags").tagsinput("add", $(this).val());
					$(this).val("")
				});
				this.$(".message-tags").on("beforeItemAdd", function (c) {
					c.item && 255 < c.item.length && (c.cancel = !0, a.$(".message-tags").tagsinput("input").val(""), errorSave(a.$(".tag-form form"), languageParser.translate("form_validation_messages", "tag_length_exceed")))
				});
				this.$(".message-tags").on("itemAdded", function () {
					var c, d = a.$(".bootstrap-tagsinput").width() - 55, b = 0;
					a.$(".tag").each(function (a, c) {
						b += $(c).outerWidth(!0);
						$(c).css("max-width", d)
					});
					c = d - b;
					100 > c && (c = 100);
					a.$(".tt-input")[0].style.cssText +=
						"min-width : " + c + "px !important";
					a.$(".message-tags").tagsinput("input").typeahead("val", "")
				});
				this.$(".message-tags").tagsinput("removeAll");
				this.currentTags.length && this.currentTags.forEach(function (c) {
					a.$(".message-tags").tagsinput("add", decodeStr(c))
				});
				this.customTags && this.customTags.data && this.customTags.data.length || (this.$(".tt-input")[0].style.cssText += "min-width : " + (this.$(".bootstrap-tagsinput").width() - 55) + "px !important")
			}
		});
	Tawk.TicketDetailsView = Ember.View.extend({
		template: Ember.TEMPLATES.ticketDetailsView,
		classNames: ["ticket-details-view"], didInsertElement: function () {
			var a = this;
			this.priorityChanged();
			this.assigneeChanged();
			this.statusChanged();
			if (this.controller.conversationData.isNewConvert) {
				var c = new Bloodhound({
					datumTokenizer: Bloodhound.tokenizers.whitespace,
					queryTokenizer: Bloodhound.tokenizers.whitespace,
					local: this.controller.activeProperty.availableTags
				});
				this.$("#ticket-tags").tagsinput({
					typeaheadjs: {
						source: c, highlight: !0, displayText: function (a) {
							return a || ""
						}
					}, freeInput: !0, maxChars: 255
				});
				this.$("#ticket-tags").tagsinput("input").on("blur",
					function () {
						a.$("#ticket-tags").tagsinput("add", $(this).val());
						$(this).val("")
					});
				this.$("#ticket-tags").on("itemAdded", function () {
					a.$("#ticket-tags").tagsinput("input").typeahead("val", "")
				})
			} else this.$("#current-ticket-priority").change(function () {
				var c = $(this).val(), c = parseInt(c, 10);
				c !== a.content.p && (a.showSavingOverlay(), a.controller.updateTicketPriority(c, function (b) {
					a.hideSavingOverlay();
					b ? a.showError("Unable to update ticket priority") : a.showError(null)
				}))
			}), this.$("#current-ticket-status").change(function () {
				var c =
					$(this).val(), c = parseInt(c, 10);
				c !== a.content.s && (a.showSavingOverlay(), a.controller.changeTicketStatus(c, function (b) {
					a.hideSavingOverlay();
					b ? a.showError("Unable to update ticket status") : (a.showError(null), 2E3 !== c && 3E3 !== c || $("#close-conversation").click())
				}))
			}), this.$().delegate("#current-ticket-assignee", "change", function () {
				var c = $(this).val(), b = a.controller.getAssigneeType(c);
				if (c !== a.content.assigneeId || b !== a.content.assigneeType) a.showSavingOverlay(), a.controller.updateTicketAssignee(c, b, function (b) {
					a.hideSavingOverlay();
					b ? a.showError("Unable to change ticket assignment") : a.showError(null)
				})
			})
		}, priorityChanged: function () {
			"inDOM" === this._state && this.content && this.$("#current-ticket-priority").val(this.content.p)
		}.observes("content.p"), assigneeChanged: function () {
			"inDOM" === this._state && this.content && (this.controller.conversationData.assgnId ? this.$("#current-ticket-assignee").val(this.content.assgnId) : this.$("#current-ticket-assignee").val("0"))
		}.observes("content.assgnId"), statusChanged: function () {
			"inDOM" === this._state &&
			this.content && this.$("#current-ticket-status").val(this.content.s)
		}.observes("content.s")
	});
	Tawk.ConversationsPropertiesView = Ember.View.extend({
		elementId: "conversations-properties",
		template: Ember.TEMPLATES.conversationsProperties,
		propertiesLoaded: function () {
			this.controller && (this.controller.propertiesList && this.controller.propertiesList.length && !this.controller.autoOpenTicket && "inDOM" === this._state) && this.controller.openProperty()
		}.observes("controller.propertiesList"),
		didInsertElement: function () {
			var a =
				this;
			this.$().delegate(".get-conversations", "click", function (c) {
				c.preventDefault();
				c.stopPropagation();
				a.controller.checkChangeAllowed() && a.controller.changeList(listType.ALL)
			});
			this.$().delegate(".get-tickets", "click", function (c) {
				var d = $(this).attr("id");
				c.preventDefault();
				c.stopPropagation();
				a.controller.checkChangeAllowed() && (a.controller.openProperty(d), a.controller.toggleList(!0))
			});
			this.$().delegate(".get-my-tickets", "click", function (c) {
				c.preventDefault();
				c.stopPropagation();
				a.controller.checkChangeAllowed() &&
				(a.controller.toggleList(!0), a.controller.changeList(listType.MY_TICKETS))
			});
			this.$().delegate(".get-spam", "click", function (c) {
				c.preventDefault();
				c.stopPropagation();
				a.controller.checkChangeAllowed() && (a.controller.changeList(listType.SPAM), a.controller.toggleList(!0))
			});
			this.$().delegate(".get-trash", "click", function (c) {
				c.preventDefault();
				c.stopPropagation();
				a.controller.checkChangeAllowed() && (a.controller.changeList(listType.TRASH), a.controller.toggleList(!0))
			});
			this.$().delegate(".get-contacts",
				"click", function (c) {
					c.preventDefault();
					c.stopPropagation();
					a.controller.checkChangeAllowed() && (a.controller.loadContactsList(), a.controller.toggleList(!0))
				});
			setTimeout(function () {
				a.propertiesLoaded();
				$("#close-properties-list").hide();
				$("#list-opacity-block").hide();
				a.scrollToPreviouslyOpenProperty()
			}, 0)
		},
		scrollToPreviouslyOpenProperty: function () {
			var a;
			this.controller && (this.controller.lastViews && this.controller.lastViews.propertyId && "inDOM" === this._state) && (a = this.$("ul.properties-list li#" + this.controller.lastViews.propertyId),
				this.$("ul.properties-list").scrollTop(a.offset().top + a.outerHeight() - this.$("ul.properties-list").offset().top))
		}
	});
	Ember.Handlebars.helper("ConversationsPropertiesView", Tawk.ConversationsPropertiesView);
	Tawk.ConversationsView = Ember.View.extend({
		elementId: "conversations",
		template: Ember.TEMPLATES.conversationsView,
		controller: Tawk.conversationsController,
		currentWidth: window.innerWidth,
		tagsList: null,
		calculateAndSetLimit: function () {
			var a;
			this.controller.isLoading || (this.$() && this.$(".view-section").length ?
				a = this.$(".view-section").height() : (a = this.$(".view-header") && this.$(".view-header").height() ? this.$(".view-header").height() : 767 <= $(window).width() ? 45 : 70, a = $(window).innerHeight() - ($("#header").innerHeight() + a + 41)), a = Math.ceil(a / 42), a > this.controller.limit && this.controller.set("limit", a))
		},
		willInsertElement: function () {
			var a = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.whitespace,
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				local: []
			});
			this.calculateAndSetLimit();
			this.controller.initialize();
			this.set("tagsList", a);
			this.tagsList.initialize()
		},
		willDestroyElement: function () {
			$("body").unbind("click.messagingView");
			$(window).unbind("resize.conversationView");
			this.controller.saveLastView();
			this.controller.removeEvent();
			this.controller.clearData()
		},
		activePropertyChanged: function () {
			if ("inDOM" === this._state && this.controller && this.controller.activeProperty) {
				var a = this.controller.get("assigneeList");
				this.set("departments", a.departments);
				this.set("agents", a.agents)
			}
		}.observes("controller.activeProperty.id"),
		isLoading: function () {
			"inDOM" === this._state && (this.controller.isLoading ? this.$("#list-loading").show() : this.$("#list-loading").hide())
		}.observes("controller.isLoading"),
		availableTagsChanged: function () {
			var a;
			"inDOM" === this._state && (this.controller && this.controller.activeProperty && this.controller.activeProperty.availableTags && this.tagsList) && (a = this.controller.activeProperty.get("availableTags"), this.tagsList.local.clear(), this.set("tagsList.local", a), this.tagsList.initialize(!0))
		}.observes("controller.activeProperty.availableTags"),
		didInsertElement: function () {
			var a = this;
			this.$().delegate("#create-ticket", "click", function () {
				a.handleCreateTicket()
			});
			$(window).bind("resize.conversationView", function () {
				var c = window.innerWidth;
				if (767 >= a.currentWidth && 768 <= c || 767 >= c && 768 <= a.currentWidth || 979 >= a.currentWidth && 980 <= c || 979 >= c && 980 <= a.currentWidth || 1049 >= a.currentWidth && 1050 <= c || 1049 >= c && 1050 <= a.currentWidth) a.$("#conversation-details-container").removeAttr("style"), a.$("#open-details-view").removeAttr("style"), a.$("#message-opacity-block").removeAttr("style"),
					a.$("#close-details-view").removeAttr("style"); else if (678 >= a.currentWidth && 679 <= c || 678 >= c && 679 <= a.currentWidth) a.$("#conversations-properties").removeAttr("style"), a.$("#close-properties-list").removeAttr("style"), a.$("#open-properties-list").removeAttr("style"), a.$("#list-opacity-block").removeAttr("style");
				a.currentWidth = c
			});
			$(window).debounce("resize", function () {
				a.calculateAndSetLimit()
			}, 250);
			this.$("#closeFilter").click(function () {
				a.manualCloseFilter();
				return !1
			});
			this.$().delegate("#openFilter",
				"click", function (a) {
					$(this).parent().toggleClass("open")
				});
			this.$().delegate("#search-text", "focus", function (c) {
				a.$("#property-selected-name").addClass("focus")
			});
			this.$().delegate("#search-text", "blur", function (c) {
				a.$("#property-selected-name").removeClass("focus")
			});
			this.$("#resetFilter").click(function () {
				a.$("#search-text").val("");
				a.$("#assignee").val("0");
				a.$("#status").val("0");
				a.$("#from-date").val("");
				a.$("#to-date").val("");
				a.$("#min-messages").val("");
				a.$(".search").trigger("click");
				return !1
			});
			this.$().delegate("#assignee, #search-status", "change", function () {
				var a = $(":selected", this);
				a.parents(".custom-select").find(".selected-value").html(encodeStr(a.text()))
			});
			this.$(".search").click(function () {
				var c, d = {
					query: a.$("#search-text").val() || "",
					statusSearch: a.$("#search-status").val() || "",
					startDate: a.$("#from-date").val() || "",
					endDate: a.$("#to-date").val() || "",
					messageCount: a.$("#min-messages").val() || "",
					tags: a.$("#tags").tagsinput("items")
				};
				d.tags.length || (d.tags = "");
				d.statusSearch = parseInt(d.statusSearch,
					10);
				c = a.$("#assignee option:selected");
				d.assigneeId = c.val();
				a.controller.searchList(d, function () {
					a.manualCloseFilter()
				});
				return !1
			});
			this.$("#contacts-search").on("submit", function (c) {
				c.stopPropagation();
				c = a.$("#contact-query").val().trim();
				a.controller.isContactsList && a.controller.set("contactsQuery", c);
				a.controller.loadContactsList();
				a.controller.toggleList(!0);
				return !1
			});
			this.$("#from-date").datepicker({
				dateFormat: "dd/mm/yy",
				prevText: '<i class="fa fa-chevron-left"></i>',
				nextText: '<i class="fa fa-chevron-right"></i>',
				onSelect: function (a) {
					$("#to-date").datepicker("option", "minDate", a)
				}
			});
			this.$("#to-date").datepicker({
				dateFormat: "dd/mm/yy",
				prevText: '<i class="fa fa-chevron-left"></i>',
				nextText: '<i class="fa fa-chevron-right"></i>',
				onSelect: function (a) {
					$("#from-date").datepicker("option", "maxDate", a)
				}
			});
			this.$().delegate("#open-properties-list", "click", function () {
				$(this).hide();
				a.$("#list-opacity-block").show();
				a.$("#conversations-properties").animate({left: "0"}, function () {
					a.$("#close-properties-list").show();
					679 >
					window.innerWidth && $("#conversations-properties").show()
				})
			});
			this.$().delegate("#close-properties-list", "click", function () {
				$(this).hide();
				a.$("#conversations-properties").animate({left: "-100%"}, function () {
					a.$("#open-properties-list").show();
					a.$("#list-opacity-block").hide();
					679 > window.innerWidth && $("#conversations-properties").removeAttr("style")
				})
			});
			this.$().delegate("#open-details-view", "click", function () {
				$(this).hide();
				a.$("#message-opacity-block").show();
				a.$("#conversation-details-container").animate({
					left: "50px",
					"border-left-width": "1px"
				}, function () {
					a.$("#close-details-view").show()
				})
			});
			this.$().delegate("#close-details-view", "click", function () {
				$(this).hide();
				a.$("#conversation-details-container").animate({left: "100%", "border-left-width": "0px"}, function () {
					a.$("#open-details-view").show();
					a.$("#message-opacity-block").hide()
				})
			});
			this.$().delegate("#close-conversation", "click", function (c) {
				a.controller.hasToReload ? (a.controller.changeList("trash"), a.controller.hasToReload = !1) : a.controller.ticketHasChanged &&
					(a.controller.reloadList(), a.controller.ticketHasChanged = !1);
				a.controller.toggleList(!0);
				a.controller.clearConversationData();
				a.controller.saveLastView()
			});
			this.$().delegate("#conversation-purged-notification .close", "click", function (a) {
				$("#conversation-purged-notification").hide()
			});
			$("body").bind("click.messagingView", function (c) {
				$(c.target).parents(".tag").length || ($(c.target).hasClass("tt-suggestion") || a.$("#search-text").is(c.target) || a.$("#openFilter").is(c.target) || 0 !== a.$(".open").has(c.target).length ||
					$(c.target).hasClass("select2-result-label") || $(c.target).hasClass("close-selection") || $(c.target).parents(".ui-datepicker-header").length || a.alertIsActive) || a.manualCloseFilter()
			});
			this.$().delegate("#retrieveHistory", "click", function () {
				a.controller.retrieveNewHistory()
			});
			this.$("#tags").tagsinput({
				typeaheadjs: {
					source: a.tagsList, highlight: !0, displayText: function (a) {
						return a || ""
					}
				}, freeInput: !0, maxChars: 255
			});
			this.$("#tags").tagsinput("input").on("blur", function () {
				a.$("#tags").tagsinput("add", $(this).val());
				$(this).val("")
			});
			this.$("#tags").tagsinput("input").on("keydown", function (c) {
				if (13 === c.keyCode) return a.$("#tags").tagsinput("add", $(this).val()), $(this).val(""), !1
			});
			this.$("#tags").on("beforeItemAdd", function (c) {
				10 === a.$("#tags").tagsinput("items").length ? (c.cancel = !0, a.$("#tags").tagsinput("input").val(""), errorSave(a.$("#history-filter"), languageParser.translate("form_validation_messages", "ADD_TAG_LIMIT_EXCEEDED"))) : c.item && 255 < c.item.length && (c.cancel = !0, a.$("#tags").tagsinput("input").val(""),
					errorSave(a.$("#history-filter"), languageParser.translate("form_validation_messages", "tag_length_exceed")))
			});
			this.$("#tags").on("itemAdded", function () {
				inputWidth = 80;
				a.$(".tt-input")[0].style.cssText += "min-width : " + inputWidth + "px !important";
				a.$("#tags").tagsinput("input").typeahead("val", "")
			});
			this.$().delegate(".sub-filter", "click", function () {
				var c = $(this).attr("id").replace("select-", "");
				a.$(".sub-filter").removeClass("active");
				$(this).addClass("active");
				a.controller.changeStatus(parseInt(c, 10),
					!0)
			});
			this.$().delegate("#only-chats", "change", function () {
				$(this).is(":checked") ? a.controller.set("includeChats", !0) : a.controller.set("includeChats", !1);
				a.controller.reloadList()
			});
			this.$().delegate("#only-tickets", "change", function () {
				$(this).is(":checked") ? a.controller.set("includeTickets", !0) : a.controller.set("includeTickets", !1);
				a.controller.reloadList()
			})
		},
		handleCreateTicket: function (a) {
			this.set("ticketFormView", Tawk.NewTicketViewModal.create({controller: this.controller, fromHistory: a}));
			this.ticketFormView.append()
		},
		manualCloseFilter: function () {
			this.$("#conversations-search .input-group-btn").removeClass("open")
		},
		listLengthChange: function () {
			"inDOM" === this._state && (this.controller && this.controller.activeProperty && this.controller.activeProperty.list) && (0 !== this.controller.activeProperty.list.currentData.length || this.controller.isLoading || this.$("#youtube-container").show())
		}.observes("controller.activeProperty.list.currentData.length", "controller.isLoading")
	});
	Tawk.ContactsListView = Ember.View.extend({
		elementId: "contacts-list",
		template: Ember.TEMPLATES.contactsListView, classNames: "hidden", transcriptDataChanged: function () {
			"inDOM" === this._state && (this.controller.showList ? this.$().removeClass("hidden") : this.$().addClass("hidden"))
		}.observes("controller.showList"), didInsertElement: function () {
			var a = !1, c = this;
			this.transcriptDataChanged();
			this.$(".btn").tooltip();
			this.$().delegate(".open-contact", "click", function (a) {
				var b = $(this).attr("id");
				$(a.target).hasClass("create-ticket-contact") || $(a.target.parentNode).hasClass("create-ticket-contact") ?
					a.stopPropagation() : c.controller.openContact(b, function (a) {
						a || c.controller.toggleList(!1)
					})
			});
			this.$().delegate(".create-ticket-contact", "click", function (a) {
				var b = $(this).attr("data-id"), b = c.controller.activeProperty.list.getItem(b);
				a.stopPropagation();
				b && (c.set("ticketFormView", Tawk.NewTicketViewModal.create({
					controller: c.controller,
					recipientName: decodeStr(b.name),
					recipientEmail: b.email
				})), c.ticketFormView.append())
			});
			this.$("#contacts").bind("scroll.contactsList", function (d) {
				!a && c.controller.activeProperty.list.currentData.length &&
				$(this).scrollTop() + $(this).height() >= $(this)[0].scrollHeight - 100 && (a = !0, c.controller.nextContactsList(function () {
					a = !1
				}))
			})
		}
	});
	Ember.Handlebars.helper("ContactsListView", Tawk.ContactsListView);
	Tawk.ConversationsListView = Ember.View.extend({
		elementId: "conversations-list",
		template: Ember.TEMPLATES.conversationListView,
		classNames: "hidden",
		transcriptDataChanged: function () {
			"inDOM" === this._state && (this.controller.showList ? this.$().removeClass("hidden") : this.$().addClass("hidden"))
		}.observes("controller.showList"),
		didInsertElement: function () {
			var a = !1, c = this;
			this.transcriptDataChanged();
			this.$(".btn").tooltip();
			this.$().delegate(".open-conversation", "click", function (a) {
				var b = $(this).attr("id");
				$(a.target).hasClass("bulk-check") || $(a.target).hasClass("mark-select") ? a.stopPropagation() : c.controller.openConversation(b, function (a) {
					a || c.controller.toggleList(!1)
				})
			});
			this.$().delegate(".bulk-check", "change", function () {
				var a = $(this).parents(".open-conversation").attr("id"), b = $(this).is(":checked");
				c.controller.toggleMark(a,
					b)
			});
			this.$("#bulk-conversations-delete").click(function () {
				c.controller.bulkDeleteConversations()
			});
			this.$("#bulk-conversations-unspam").on("click", function () {
				c.controller.bulkUnspam(function (a) {
					a ? c.showError("Unable to unspam tickets") : (c.showError(null), c.$(".bulk-check").prop("checked", !1))
				})
			});
			this.$("#bulk-conversations-restore").on("click", function () {
				c.controller.bulkConversationsRestore(function (a) {
					a ? c.showError("Unable to restore messages") : (c.showError(null), c.$(".bulk-check").prop("checked",
						!1))
				})
			});
			this.$("#bulk-conversations-purge").on("click", function () {
				c.controller.bulkConversationsPurge(function (a) {
					a ? c.showError("Unable to purge messages") : (c.showError(null), c.$(".bulk-check").prop("checked", !1))
				})
			});
			this.$().delegate("#sort-container li a", "click", function (a) {
				this.id ? c.controller.changeSort(this.id) : (a.preventDefault(), a.stopPropagation())
			});
			this.$("#conversation-list").bind("scroll.conversationList", function (d) {
				!a && c.controller.activeProperty.list.currentData.length && $(this).scrollTop() +
				$(this).height() >= $(this)[0].scrollHeight - 100 && (a = !0, c.controller.nextConversationsList(function (b, d) {
					a = !1;
					!b && d && c.$(".all-bulk-check").prop("checked", !1)
				}))
			});
			this.$().delegate(".all-bulk-check", "change", function () {
				var a = $(this).prop("checked");
				c.controller.toggleAllMark(a);
				c.$(".bulk-check").prop("checked", a)
			});
			this.$().delegate("#clear-bulk-selection", "click", function () {
				c.controller.toggleAllMark(!1)
			});
			0 !== this.$("#list-wrapper").outerHeight(!0) && this.$("#list-wrapper").css("top", this.$("#filter-header").outerHeight(!0));
			this.$("#filter-header").resize(function () {
				0 !== $(this).outerHeight(!0) && c.$("#list-wrapper") && c.$("#list-wrapper").length && c.$("#list-wrapper").css("top", $(this).outerHeight(!0))
			});
			this.$().delegate("#select-open-status", "click", function () {
				c.controller.changeStatus(1E3, !0)
			});
			this.$().delegate("#status-container li", "click", function () {
				c.controller.changeStatus(parseInt(this.id, 10), !0)
			});
			this.$().delegate("#status-container a.inactive", "click", function (a) {
				a.preventDefault();
				a.stopPropagation();
				c.controller.changeStatus(c.controller.previousStatus,
					!0)
			});
			this.$().delegate("#select-my-message.inactive", "click", function () {
				c.controller.changeAssignee(Tawk.userController.user.id, !0)
			});
			this.$().delegate("#filter-assignee li", "click", function (a) {
				this.id ? (c.controller.changeAssignee(this.id, !0), c.$("#filter-assignee").removeClass("open")) : (a.preventDefault(), a.stopPropagation())
			});
			this.$().delegate("#filter-assignee .inactive", "click", function (a) {
				a.preventDefault();
				a.stopPropagation();
				"" === c.controller.previousAssignee ? c.controller.changeAssignee("0",
					!0) : null === c.controller.previousAssignee ? c.controller.changeAssignee("-1", !0) : "assigned" === c.controller.previousAssignee ? c.controller.changeAssignee("1", !0) : Array.isArray(c.controller.previousAssignee) && c.controller.changeAssignee(c.controller.previousAssignee, !0)
			});
			this.$().delegate("#filter-assignee", "change", function () {
				var a = $(":selected", this);
				a.parents(".custom-select").find(".selected-value").html(encodeStr(a.text()));
				c.controller.changeAssignee(a.val(), !0)
			})
		},
		showError: function (a) {
			"inDOM" ===
			this._state && (this.$("#action-error").remove(), a && this.$().append('<div id="action-error" class="alert alert-danger fade in"><button class="close" data-dismiss="alert">\u00d7</button>' + a + "</div>"))
		},
		willDestroyElement: function () {
			this.$("#conversation-list").unbind("scroll.conversationList")
		},
		bulkMarkedChanged: function () {
			var a;
			"inDOM" === this._state && (this.controller && this.controller.activeProperty && this.controller.activeProperty.list && this.controller.activeProperty.list.currentData) && (a = this.controller.activeProperty.list.currentData.filterProperty("isMarked",
				!0).length, 0 < a ? this.set("bulkMarkedTotal", languageParser.translate("conversations", "bulk_message_selected", {num: a})) : (this.set("bulkMarkedTotal", null), this.$(".all-bulk-check").prop("checked", !1), this.$(".bulk-check").prop("checked", !1)))
		}.observes("controller.activeProperty.list.currentData.@each.isMarked"),
		defaultGreeting: function () {
			return languageParser.translate("conversations", "default_greeting", {
				lineStart: "<p>",
				lineEnd: "</p>",
				name: Tawk.userController.user.fullName
			})
		}.property()
	});
	Ember.Handlebars.helper("ConversationsListView",
		Tawk.ConversationsListView);
	Tawk.ConversationBase = Ember.Mixin.create({
		draw: !0, previewModal: null, currentIndexChanged: function () {
			"inDOM" === this._state && this.controller.conversationData && (this.controller.conversationData.indexNum ? (1 < this.controller.conversationData.indexNum ? this.$("#prev-conversation").removeClass("disabled") : this.$("#prev-conversation").addClass("disabled"), this.controller.conversationData.indexNum === this.controller.activeProperty.list.totalItems ? this.$("#next-conversation").addClass("disabled") :
				this.$("#next-conversation").removeClass("disabled")) : (this.$("#prev-conversation").addClass("disabled"), this.$("#next-conversation").addClass("disabled")))
		}.observes("controller.conversationData.indexNum"), conversationDataChanged: function () {
			"inDOM" === this._state && (this.controller.conversationData || this.controller.contactData ? (this.set("draw", !0), this.$().removeClass("hidden")) : this.$().addClass("hidden"))
		}.observes("controller.conversationData", "controller.contactData"), didInsertElement: function () {
			var a =
				this;
			this.conversationDataChanged();
			this.currentIndexChanged();
			this.$(".btn, .tab, .button-icon").tooltip();
			this.$().delegate(".uploaded-image", "click", function () {
				var c = $(this).attr("src");
				null !== a.previewModal ? (a.previewModal.set("imageSrc", c), a.previewModal.openView()) : (a.set("previewModal", Tawk.ImagePreview.create({imageSrc: c})), a.previewModal.append())
			})
		}, isPurgedChanged: function () {
			"inDOM" === this.state && this.controller && this.controller.conversationData && this.controller.conversationData.isPurged &&
			this.$().addClass("purged")
		}.observes("controller.conversationData.isPurged"), willDestroyElement: function () {
			this.previewModal && this.previewModal.remove();
			this.set("previewModal", null)
		}
	});
	Tawk.ConversationsTranscriptView = Ember.View.extend(Tawk.ConversationBase, Tawk.MessageSidebar, {
		elementId: "visitor-conversation-transcript",
		tagName: "article",
		classNames: ["visitor-chat-container chat-container conversation-transcript"],
		template: Ember.TEMPLATES.visitorTranscriptView,
		banView: null,
		didInsertElement: function () {
			var a =
				this;
			this._super();
			this.setupSidebarEvents();
			this.$(".chat-header").debounce("resize", function () {
				"inDOM" === a._state && (visitorUtils.updateResizeMenuAndSidebar(a), visitorUtils.initResizableSidebar(a))
			});
			this.$(".chat-header").resize();
			"function" === typeof this.$(".hover-location").popover && this.$(".hover-location").popover({html: !0});
			"function" === typeof this.$(".device-detail").popover && this.$(".device-detail").popover({viewport: this.$()});
			this.$().delegate(".hover-location", "mouseover", function () {
				"function" ===
				typeof $(this).popover && $(this).popover("show")
			});
			this.$().delegate(".hover-location", "mouseout", function () {
				"function" === typeof $(this).popover && $(this).popover("hide")
			});
			this.$().delegate(".device-detail", "mouseenter", function () {
				"function" === typeof $(this).popover && $(this).popover("show")
			});
			this.$().delegate(".device-detail", "mouseleave", function () {
				"function" === typeof $(this).popover && $(this).popover("hide")
			});
			this.$(".print-transcript").click(function () {
				a.$(".popover-details").addClass("hidden");
				a.controller.printTranscript()
			});
			this.$(".single-conversation-delete").click(function () {
				a.controller.deleteSingleHistory(function (c) {
					c ? errorSave(a.$(), "Unable to delete") : a.controller.toggleList(!0)
				});
				return !1
			});
			this.$().delegate("#open-past-conversations", "click", function () {
				a.controller.loadVisitorHistory()
			});
			this.$().delegate("#submit-notes", "click", function () {
				a.$("#notesForm").submit();
				return !1
			});
			this.$().delegate(".close-history", "click", function () {
				a.controller.closeChat()
			});
			this.$().delegate(".create-ticket-history",
				"click", function () {
					a.controller.convertChatToTicket()
				});
			this.$().delegate(".retry-load", "click", function () {
				var c = $(this).parents(".webrtc-call").attr("id");
				conversationProcess.processWebRTCCallBlock(c, a.controller.conversationData.pgid, null, !1, function (d, b) {
					b && a.controller.conversationData.set("calllData." + c, b)
				})
			});
			this.$().delegate(".join-call", "click", function () {
				var c = $(this).parents(".webrtc-call").attr("id");
				visitorUtils.joinWebRTCCall(a, null, c)
			})
		},
		tagsChanged: function () {
			var a = this;
			"inDOM" ===
			this._state && (this.controller.conversationData && this.controller.conversationData.tags) && (this.$(".transcript-tags").tagsinput("removeAll"), this.controller.conversationData.tags.forEach(function (c) {
				a.$(".transcript-tags").tagsinput("add", decodeStr(c))
			}))
		}.observes("controller.conversationData.tags"),
		willDestroyElement: function () {
			this.removeSidebarViews()
		},
		openSidebar: function () {
			this.$().removeClass("no-sidebar");
			this.previousTabSelected ? this.$(".open-view[data-id=" + this.previousTabSelected + "]").click().addClass("active") :
				visitorUtils.openFirstTab(this.$(".menu"))
		},
		closeSidebar: function () {
			this.$().addClass("no-sidebar");
			this.set("previousTabSelected", null)
		}
	});
	Ember.Handlebars.helper("ConversationsTranscriptView", Tawk.ConversationsTranscriptView);
	Tawk.TicketConversationsView = Ember.View.extend(Tawk.ConversationBase, Tawk.MessageSidebar, {
		elementId: "ticket-conversations",
		tagName: "article",
		template: Ember.TEMPLATES.ticketConversationsView,
		classNames: ["ticket-container chat-container conversation-transcript"],
		noteAttachedFiles: [],
		ticketAttachedFiles: [],
		messageTag: null,
		noteTag: null,
		convertDetails: {},
		willDestroyElement: function () {
			this.lastReplyStart && this.controller.notifyStopReply(function (a) {
			})
		},
		priorityChanged: function () {
			"inDOM" === this._state && this.controller.conversationData && this.$("#current-ticket-priority").val(this.controller.conversationData.p)
		}.observes("controller.conversationData.p"),
		assigneeChanged: function () {
			"inDOM" === this._state && this.controller.conversationData && (this.controller.conversationData.assgnId ? this.$("#current-ticket-assignee").val(this.controller.conversationData.assgnId) :
				this.$("#current-ticket-assignee").val("0"))
		}.observes("controller.conversationData.assgnId"),
		statusChanged: function () {
			"inDOM" === this._state && this.controller.conversationData && this.$("#current-ticket-status").val(this.controller.conversationData.s)
		}.observes("controller.conversationData.s"),
		replyTicketContainerEvent: function (a) {
			var c = $(a).text();
			1 === c.length && this.$("#reply-container").hasClass("state-error") && (this.$("#reply-container").removeClass("state-error"), this.$(".conversation-input-container #error-submit").addClass("hidden"));
			if (0 !== c.length && 0 === $(a).find(".placeholder").length) {
				if (this.controller.storeDraft(this.handleReply(null, !0)), !this.lastReplyStart || this.lastReplyStart + 45E3 < (new Date).getTime()) this.set("lastReplyStart", (new Date).getTime()), this.controller.notifyStartReply(function (a) {
				})
			} else this.set("lastReplyStart", null), this.controller.notifyStopReply(function (a) {
			}), this.controller.storeDraft(null)
		},
		pasteEventFunction: function (a) {
			var c, d = !1, b = null;
			if (c = (a.originalEvent || a).clipboardData) {
				if ((c = c.items) && c.length) for (var e =
					0; e < c.length; e++) {
					if ("text/plain" === c[e].type) {
						d = !0;
						break
					}
					if (-1 !== c[e].type.indexOf("image")) {
						var f = c[e].getAsFile();
						null !== f && (b = f, b.name = languageParser.translate("generic", "pasted_image_title", {dateTime: moment().format("DD-MMM-YYYY hh:mmA")}))
					}
				}
				if (b && !d) return a.preventDefault(), a.stopImmediatePropagation(), this.startUpload(b, null), !1
			}
		},
		didInsertElement: function () {
			var a = this, c = Tawk.shortcutsController.getPropertyShortcuts(a.controller.activeProperty.id),
				d = this.isNote ? this.noteAttachedFiles : this.ticketAttachedFiles,
				b = this.controller.get("assigneeList");
			this._super();
			this.setupSidebarEvents();
			0 === this.controller.activeProperty.tabSettings.length && (this.set("detailsView", Tawk.TicketDetailsView.create({
				content: this.controller.conversationData,
				controller: this.controller,
				showSavingOverlay: this.showSavingOverlay.bind(this),
				hideSavingOverlay: this.hideSavingOverlay.bind(this),
				showError: this.showError.bind(this)
			})), this.detailsView.appendTo(this.$(".details-view")), this.updateSubView(this.$(".details-view")));
			this.$(".chat-header").debounce("resize",
				function () {
					"inDOM" === a._state && (visitorUtils.updateResizeMenuAndSidebar(a), visitorUtils.initResizableSidebar(a))
				});
			this.$(".chat-header").resize();
			this.$().delegate("#close-conversation", "click", function (b) {
				a.controller.checkChangeAllowed() || b.stopPropagation();
				a.controller.notifyStopReply(function (a) {
				})
			});
			this.$("#open-reply").on("click", function () {
				a.set("isNote", !1)
			});
			this.$("#open-note").on("click", function () {
				a.set("isNote", !0)
			});
			this.$().delegate("#convert-name, #convert-email", "change", function () {
				a.$("#details-form").valid()
			});
			this.$().delegate(".hidden-messages", "click", function () {
				a.$(".no-line").removeClass("no-line").addClass("single-line");
				$(this).remove()
			});
			this.$().delegate(".single-line", "click", function () {
				$(this).removeClass("single-line").addClass("expand-line")
			});
			this.$().delegate(".expand-line .ticket-header", "click", function () {
				$(this).parent().removeClass("expand-line").addClass("single-line")
			});
			this.$("#reply-ticket-message").on("paste", function (b) {
				return a.pasteEventFunction(b)
			});
			this.$("#reply-note-message").on("paste",
				function (b) {
					return a.pasteEventFunction(b)
				});
			this.$().delegate("#single-ticket-spam", "click", function () {
				a.$(".overlay").show();
				a.controller.markTicketAsSpam(function (b) {
					a.$(".overlay").hide();
					b ? a.showError("Unable to mark ticket as spam") : (a.showError(null), a.controller.toggleList(!0))
				})
			});
			this.$().delegate("#single-ticket-not-spam", "click", function () {
				a.$(".overlay").show();
				a.controller.removeTicketFromSpam(function (b) {
					a.$(".overlay").hide();
					b ? a.showError("Unable to remove ticket from spam") : (a.showError(null),
						a.controller.toggleList(!0))
				})
			});
			this.$().delegate("#single-ticket-delete", "click", function () {
				a.controller.deleteTicket(function (b) {
					b ? a.showError("Unable to delete ticket") : (a.showError(null), a.controller.toggleList(!0))
				})
			});
			this.$().delegate("#single-ticket-restore", "click", function () {
				a.$(".overlay").show();
				a.controller.restoreTicket(function (b) {
					a.$(".overlay").hide();
					b ? a.showError("Unable to restore ticket") : (a.showError(null), a.controller.toggleList(!0))
				})
			});
			this.$().delegate("#single-ticket-close",
				"click", function () {
					a.$(".overlay").show();
					a.controller.closeTicket(function (b) {
						"inDOM" === a._state && (a.$(".overlay").hide(), b ? a.showError("Unable to close ticket") : a.$("#close-conversation").click())
					})
				});
			this.set("messageTag", new TagAgent(b.agents, c, this.$("#reply-ticket-watchers"), this.$("#reply-ticket-shortcuts"), this.$("#reply-ticket-message"), languageParser.translate("placeholders", "type_here")));
			this.set("noteTag", new TagAgent(b.agents, c, this.$("#reply-note-watchers"), this.$("#reply-note-shortcuts"),
				this.$("#reply-note-message"), languageParser.translate("placeholders", "add_private_note")));
			this.$(".inner-reply-container").resize(function () {
				var b;
				b = $(this).outerHeight(!0);
				"inDOM" === a._state && (38 < b ? (b += 70, b > a.$(".chat-body").height() - 150 && (b = a.$(".chat-body").height() - 150), a.$(".conversation-input-container").css("height", b + "px"), a.$(".message-container").css("bottom", b + 45 + "px")) : (a.$(".conversation-input-container").css("height", "120px"), a.$(".message-container").css("bottom", "165px")))
			});
			setTimeout(function () {
				if (a.controller.conversationData &&
					a.controller.conversationData.draftedText) {
					var b = [], b = /@\[([a-z0-9]){24,24}(:)(.+?)\]/g, c = /MSIE/.test(navigator.userAgent),
						g = a.controller.conversationData.draftedText.message,
						h = a.controller.conversationData.draftedText.attachments;
					a.controller.conversationData.draftedText.private && (a.set("isNote", !0), a.$("#open-note").trigger("click"));
					h && h.length && h.forEach(function (a) {
						d.pushObject({
							handle: a.handle,
							fileName: a.fName,
							fileSize: formatFileSize(a.size),
							name: a.name,
							downloadUrl: GLOBAL_FILE_STORAGE_URL + "/" +
							a.name,
							originalSize: a.size,
							mimeType: a.mime,
							type: a.type
						})
					});
					g && (b = g.match(b), null !== b && b.forEach(function (a) {
						var b = a.substring(2, a.length - 1).split(":");
						g = g.replace(a, '<span class="highlight" contentEditable="' + (c ? "true" : "false") + '" data-id="' + b[0] + '">&nbsp;' + encodeStr(b[1]) + "&nbsp;</span>")
					}), a.isNote ? a.$("#reply-note-message").html(g) : a.$("#reply-ticket-message").html(g))
				}
			});
			this.$("#reply-ticket-attachment").on("change", function () {
				var b, c = 0, d = 0;
				b = $(this)[0];
				var h = function () {
					d++;
					d === c && a.$("#reply-ticket-attachment").val("")
				};
				if (void 0 === window.FormData) a.$("#reply-ticket-attachment")[0].value && (c = 1, a.startUpload(a.$("#reply-upload-form")[0], !0, h)); else if ((b = b.files) && b.length) for (var k = 0; k < b.length; k++) a.startUpload(b[k], null, h)
			});
			Modernizr.draganddrop && (this.$().bind("dragenter", function (a) {
				a.preventDefault();
				a.stopPropagation()
			}), this.$().bind("dragover", function (b) {
				b.preventDefault();
				b.stopPropagation();
				a.controller.conversationData.isNewConvert || a.$("#reply-container").addClass("drag-over")
			}), this.$().bind("dragleave",
				function (b) {
					b.preventDefault();
					b.stopPropagation();
					a.controller.conversationData.isNewConvert || $(b.target).parents("#reply-container").length || a.$("#reply-container").removeClass("drag-over")
				}), this.$().bind("dragend", function (b) {
				b.preventDefault();
				b.stopPropagation();
				a.controller.conversationData.isNewConvert || a.$("#reply-container").removeClass("drag-over")
			}), this.$().bind("drop", function (b) {
				b.preventDefault();
				b.stopPropagation();
				if (!a.controller.conversationData.isNewConvert) {
					b = b.target.files ||
						b.dataTransfer.files;
					var c = 0, d = 0, h = function () {
						d++;
						d === c && a.$("#reply-ticket-attachment").val("")
					};
					a.$("#reply-container").removeClass("drag-over");
					if (b && 0 !== b.length) for (var c = b.length, k = 0; k < b.length; k++) a.startUpload(b[k], null, h)
				}
			}));
			this.$().delegate(".delete-attachment", "click", function () {
				var b = $(this).attr("id"), c = a.isNote ? a.noteAttachedFiles : a.ticketAttachedFiles;
				(b = c.findProperty("handle", b)) && c.removeObject(b)
			});
			this.$().delegate(".submit-reply", "click", function () {
				var b = $(this).attr("data-id");
				b && (b = parseInt(b, 10));
				a.set("lastReplyStart", null);
				a.controller.notifyStopReply(function (a) {
				});
				a.handleReply(b)
			});
			this.$().delegate("#reply-container", "click", function () {
				a.isNote ? a.$("#reply-note-message").focus() : a.$("#reply-ticket-message").focus()
			});
			this.$("#reply-ticket-message").on("keyup paste blur", function () {
				a.replyTicketContainerEvent(this)
			});
			this.$("#reply-note-message").on("keyup paste blur", function () {
				a.replyTicketContainerEvent(this)
			});
			this.$().delegate("#discard-convert", "click", function () {
				a.controller.discardTicketConvert()
			});
			this.controller.conversationData && this.controller.conversationData.isNewConvert ? this.set("convertDetails", {
				priority: a.controller.conversationData.p,
				assigneeId: a.controller.conversationData.assgnId || "0",
				name: a.content.visitor.n,
				email: a.content.visitor.e,
				tags: []
			}) : this.set("convertDetails", {});
			this.$().delegate("#current-ticket-priority", "change", function () {
				a.controller.conversationData.isNewConvert && a.set("convertDetails.priority", parseInt($(this).val(), 10))
			});
			this.$().delegate("#current-ticket-assignee",
				"change", function () {
					a.controller.conversationData.isNewConvert && a.set("convertDetails.assigneeId", $(this).val())
				});
			this.$().delegate("#convert-name", "change", function () {
				a.controller.conversationData.isNewConvert && a.set("convertDetails.name", $(this).val())
			});
			this.$().delegate("#convert-email", "change", function () {
				a.controller.conversationData.isNewConvert && a.set("convertDetails.email", $(this).val())
			});
			this.$().delegate("#ticket-tags", "change", function () {
				a.controller.conversationData.isNewConvert && a.set("convertDetails.tags",
					$(this).val().split(","))
			});
			this.$("#ticket-action-error .close").click(function (b) {
				b.stopPropagation();
				a.$("#ticket-action-error").addClass("hidden")
			})
		},
		showError: function (a) {
			"inDOM" === this._state && (a ? (this.$(".error-message").html(a), this.$("#ticket-action-error").removeClass("hidden")) : (this.$(".error-message").html(""), this.$("#ticket-action-error").addClass("hidden")))
		},
		messagesChanged: function () {
			var a = this;
			setTimeout(function () {
				"inDOM" === a._state && a.controller && a.controller.conversationData &&
				a.controller.conversationData && (a.controller.conversationData.messages && a.$(".message-container").length) && a.$(".message-container").scrollTop(9999999999)
			}, 10)
		}.observes("controller.conversationData.messages.length"),
		startUpload: function (a, c, d) {
			var b, e = this, f = this.isNote ? this.noteAttachedFiles : this.ticketAttachedFiles;
			d = d || function () {
			};
			fileUploader.getUploadHandler(function (g, h) {
				var k, l;
				if (g) return e.handleUploadError(a, l, k, c), d();
				k = h.handle;
				l = c ? $(a).find(".file-input").val().replace(/^.*\\/, "") :
					a.name || a.fileName;
				b = $('<div id="upload-' + k + '" class="upload-data"></div>');
				b.append("<span>" + encodeStr(l) + "</span>");
				b.append('<div class="progress progress-sm progress-striped active"><div class="progress-bar" role="progressbar" style="width: 0.5%"></div></div>');
				b.on("progressUpdate", function (a, b) {
					$(this).find(".progress-bar").css("width", b + "%")
				});
				b.on("uploadComplete", function (a, b) {
					f.pushObject({
						handle: b.handle,
						fileName: b.filename,
						fileSize: formatFileSize(b.size),
						name: b.name,
						downloadUrl: GLOBAL_FILE_STORAGE_URL +
						"/" + b.name,
						originalSize: b.size,
						mimeType: b.mimeType,
						type: b.extension
					});
					$(this).remove();
					e.$("#reply-container").scrollTop(9999999)
				});
				e.$("#reply-attachments-container").append(b);
				e.$("#reply-container").scrollTop(9999999);
				e.controller.addAttachment(k, a, c, !1, function (b, f) {
					b && e.handleUploadError(a, l, k, c, f);
					d()
				})
			})
		},
		handleUploadError: function (a, c, d, b, e) {
			c = c ? ' "' + encodeStr(c) + '"' : "";
			e = e || "upload_file_error";
			if (d) {
				a = this.$().find("#upload-" + d);
				if (!a.length) return;
				a.remove()
			}
			this.showError(languageParser.translate("visitors",
				e, {fileName: c}))
		},
		handleReply: function (a, c) {
			var d = this, b = {}, e = this.isNote ? this.noteTag : this.messageTag,
				f = this.isNote ? this.noteAttachedFiles : this.ticketAttachedFiles;
			e.parseContentDiv();
			b.watchers = e.getAgentsList();
			b.plainMessage = e.getPlainText();
			if (b.plainMessage.length) {
				a && (b.status = a);
				b.message = e.richMessage;
				b.private = this.isNote;
				b.attachments = f.map(function (a) {
					return {
						name: a.name,
						fName: a.fileName,
						mime: a.mimeType,
						type: a.type,
						size: a.originalSize,
						handle: a.handle
					}
				});
				if (c) return b.message = encodeStr(b.message),
					b;
				if (this.controller.conversationData.isNewConvert) {
					var g = this.convertDetails.assigneeId;
					this.$("#details-form").length && !this.$("#details-form").valid() ? this.showError("Please make sure all the details are correct in the details section.") : (b.tags = this.convertDetails.tags, b.priority = this.convertDetails.priority, b.requester = {
						name: this.convertDetails.name,
						email: this.convertDetails.email
					}, "0" === g ? (b.assigneeId = null, b.assigneeType = null) : (b.assigneeId = g, b.assigneeType = this.controller.getAssigneeType(g)),
						b.private = !1, b.subject = this.controller.conversationData.subj, b.chatId = this.controller.conversationData.chatId, this.controller.createTicket(b, !1, function (a) {
						a ? d.showError("Unable to create ticket") : (f.clear(), e.clearInputText())
					}))
				} else this.controller.sendTicketReply(b, function (a) {
					a ? d.showError("Unable to send reply") : (f.clear(), d.$("#close-conversation").click())
				})
			} else e.showEmptyError()
		},
		savePromptChanged: function () {
			var a;
			"inDOM" === this._state && (a = this.isNote ? this.noteTag : this.messageTag, this.controller.conversationData &&
			this.controller.conversationData.savePrompt && (a.parseContentDiv(), a.getPlainText().length ? this.$().append('<div class="alert alert-danger fade in"><button class="close" data-dismiss="alert">\ufffd</button><i class="fa-fw fa fa-ban"></i>This ticket hasn\'t been created, click \'Send\' to complete this or the \'Discard\' button below to cancel the ticket creation.</div>') : this.handleReply(), this.controller.set("conversationData.savePrompt", !1)))
		}.observes("controller.conversationData.savePrompt"),
		showSavingOverlay: function () {
			this.$(".overlay").show()
		},
		hideSavingOverlay: function () {
			this.$(".overlay").hide()
		},
		openSidebar: function () {
			this.$().removeClass("no-sidebar");
			this.previousTabSelected ? this.$(".open-view[data-id=" + this.previousTabSelected + "]").click().addClass("active") : visitorUtils.openFirstTab(this.$(".menu"))
		},
		closeSidebar: function () {
			this.$().addClass("no-sidebar");
			this.set("previousTabSelected", null)
		}
	});
	Ember.Handlebars.helper("TicketConversationsView", Tawk.TicketConversationsView);
	Tawk.NewTicketView = Ember.View.extend({
		template: Ember.TEMPLATES.newTicketView,
		attachedFiles: null,
		fromHistory: null,
		currentProperty: null,
		tagsList: null,
		classNames: ["new-ticket-form-view"],
		willInsertElement: function () {
			var a, c, d, b = this, e = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.whitespace,
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				local: []
			});
			this.set("attachedFiles", []);
			this.set("tagsList", e);
			this.tagsList.initialize();
			this.fromChat && (a = Tawk.webProperties.getProperty(this.currentProperty)) && (c = [], d = [], a.departments && Object.keys(a.departments).forEach(function (b) {
				var c =
					a.departments[b];
				c.en && c.a.length && d.pushObject(Ember.Object.create({id: b, name: c.n}))
			}), a.currentAgents.forEach(function (b) {
				var d;
				!b.en || b.aid === Tawk.userController.user.id || b.ha && !Tawk.userController.user.isHiredAgent || (d = Tawk.agentsController.getAgent(b.aid)) && c.pushObject(Ember.Object.create({
					id: b.aid,
					name: d.name,
					isPropertyClient: Tawk.userController.user.isHiredAgent && !b.ha && a.isClientProperty
				}))
			}), this.set("departments", sortList(d, "name")), this.set("agents", sortList(c, "name")), d = c = null, this.controller.getTicketTagListForProperty(this.currentProperty,
				function (a, c) {
					a || (b.tagsList.local.clear(), b.set("tagsList.local", c), b.tagsList.initialize(!0))
				}))
		},
		activePropertyChanged: function () {
			var a;
			"inDOM" === this._state && (!this.fromChat && this.controller && this.controller.activeProperty) && (a = this.controller.get("assigneeList"), this.set("currentProperty", this.controller.activeProperty.id), this.set("departments", a.departments), this.set("agents", a.agents))
		}.observes("controller.activeProperty.id"),
		availableTagsChanged: function () {
			var a;
			"inDOM" === this._state && (this.controller &&
				this.controller.activeProperty && this.controller.activeProperty.availableTags && this.tagsList) && (a = this.controller.activeProperty.get("availableTags"), this.tagsList.local.clear(), this.set("tagsList.local", a), this.tagsList.initialize(!0))
		}.observes("controller.activeProperty.availableTags"),
		didInsertElement: function () {
			var a, c = this, d = (new Date).getTime();
			this.$(".attach-files-list").attr("id", d);
			this.$(".attach-trigger-label").attr("for", d);
			this.activePropertyChanged();
			this.availableTagsChanged();
			a = this.fromChat ?
				[] : Tawk.shortcutsController.getPropertyShortcuts(this.controller.activeProperty.id);
			this.$(".ticket-message").on("paste", function (a) {
				var b, d = !1, h = null;
				if (b = (a.originalEvent || a).clipboardData) {
					if ((b = b.items) && b.length) for (var k = 0; k < b.length; k++) {
						if ("text/plain" === b[k].type) {
							d = !0;
							break
						}
						if (-1 !== b[k].type.indexOf("image")) {
							var l = b[k].getAsFile();
							null !== l && (h = l, h.name = languageParser.translate("generic", "pasted_image_title", {dateTime: moment().format("DD-MMM-YYYY hh:mmA")}))
						}
					}
					if (h && !d) return a.preventDefault(),
						a.stopImmediatePropagation(), c.startUpload(h, null), !1
				}
			});
			this.$(".new-ticket-tags").tagsinput({
				typeaheadjs: {
					source: c.tagsList,
					highlight: !0,
					displayText: function (a) {
						return a || ""
					}
				}, freeInput: !0, maxChars: 255
			});
			this.$(".new-ticket-tags").tagsinput("input").on("blur", function () {
				c.$(".new-ticket-tags").tagsinput("add", $(this).val());
				$(this).val("")
			});
			this.$(".new-ticket-tags").tagsinput("input").on("keydown", function (a) {
				if (13 === a.keyCode) return c.$(".new-ticket-tags").tagsinput("add", $(this).val()), $(this).val(""),
					!1
			});
			this.$(".new-ticket-tags").on("beforeItemAdd", function (a) {
				10 === c.$(".new-ticket-tags").tagsinput("items").length ? (a.cancel = !0, c.$(".new-ticket-tags").tagsinput("input").val(""), errorSave(c.$(".tag-form form"), languageParser.translate("form_validation_messages", "ADD_TAG_LIMIT_EXCEEDED"))) : a.item && 255 < a.item.length && (a.cancel = !0, c.$(".new-ticket-tags").tagsinput("input").val(""), errorSave(c.$(".tag-form form"), languageParser.translate("form_validation_messages", "tag_length_exceed")))
			});
			this.$(".new-ticket-tags").on("itemAdded",
				function () {
					var a, b = c.$(".bootstrap-tagsinput").width() - 55, d = 0;
					c.$(".tag").each(function (a, c) {
						d += $(c).outerWidth(!0);
						$(c).css("max-width", b)
					});
					a = b - d;
					100 > a && (a = 100);
					c.$(".tt-input")[0].style.cssText += "min-width : " + a + "px !important";
					c.$(".new-ticket-tags").tagsinput("input").typeahead("val", "")
				});
			var b = new TagAgent(this.agents, a, this.$(".ticket-watchers"), this.$(".ticket-shortcuts"), this.$(".ticket-message"));
			this.$().delegate(".submit", "click", function () {
				c.$(".ticket-form").submit();
				return !1
			});
			this.$(".ticket-form").validate({
				errorPlacement: function (a,
				                          b) {
					a.insertAfter(b.parent())
				}, submitHandler: function (a) {
					a = {
						attachments: [],
						watchers: [],
						requester: {
							name: c.$(".requester-name").val(),
							email: c.$(".requester-email").val(),
							firstNameLetter: c.$(".requester-name").val()[0]
						},
						subject: c.$(".ticket-subject").val(),
						message: "",
						tags: c.$(".new-ticket-tags").tagsinput("items"),
						priority: c.$(".ticket-priority").val(),
						assigneeId: c.$(".ticket-assignee").val()
					};
					b.parseContentDiv();
					a.watchers = b.getAgentsList();
					a.plainMessage = b.getPlainText();
					if (a.plainMessage.length) return a.message =
						b.richMessage, a.priority = parseInt(a.priority, 10), a.attachments = c.attachedFiles.map(function (a) {
						return {name: a.name, fName: a.fileName, mime: a.mimeType, type: a.type, size: a.originalSize}
					}), "0" === a.assigneeId ? (a.assigneeId = null, a.assigneeType = null) : c.departments.findProperty("id", a.assigneeId) ? a.assigneeType = "department" : a.assigneeType = "agent", c.chatId && (a.chatId = c.chatId), c.fromChat && (a.propertyId = c.currentProperty), c.controller.createTicket(a, c.fromHistory, function (a, b) {
						if (a) return errorSave(c.$(), languageParser.translate("form_validation_messages",
							"error_ticket_create"));
						c.resetForm();
						c.parentView ? c.parentView.$().modal("hide") : successSave(c.$(), languageParser.translate("form_validation_messages", "success_ticket_create") + (b ? "<br/>" + languageParser.translate("form_validation_messages", "ticket_create_id") + b : ""))
					}), !1;
					b.showEmptyError()
				}
			});
			this.$().on("hide.bs.modal", function (a) {
				c.$().remove()
			});
			this.$("#" + d).on("change", function (a) {
				var b, d = 0, h = 0;
				b = $(this)[0];
				var k = function () {
					h++;
					h === d && c.$("#reply-ticket-attachment").val("")
				};
				if (void 0 === window.FormData) $(this)[0].value &&
				(d = 1, c.startUpload(c.$(".new-upload-form")[0], !0, k)); else {
					b = b.files;
					if (!b || !b.length) return;
					for (var l = 0; l < b.length; l++) c.startUpload(b[l], null, k)
				}
				a.preventDefault();
				a.stopImmediatePropagation()
			});
			this.$().delegate(".delete-attachment", "click", function () {
				var a = $(this).attr("id");
				(a = c.attachedFiles.findProperty("handle", a)) && c.attachedFiles.removeObject(a)
			});
			this.$().delegate("#property-id", "change", function () {
				var a = $(this).val();
				c.controller.openProperty(a)
			});
			this.$().delegate(".cancel-ticket-form",
				"click", function () {
					"function" === typeof c.closeFunction && c.closeFunction()
				})
		},
		startUpload: function (a, c, d) {
			var b, e = this;
			d = d || function () {
			};
			fileUploader.getUploadHandler(function (f, g) {
				var h, k;
				if (f) return e.handleUploadError(a, k, h, c), d();
				h = g.handle;
				k = c ? $(a).find(".file-input").val().replace(/^.*\\/, "") : a.name || a.fileName;
				b = $('<div id="upload-' + h + '" class="upload-data"></div>');
				b.append("<span>" + encodeStr(k) + "</span>");
				b.append('<div class="progress progress-sm progress-striped active"><div class="progress-bar" role="progressbar" style="width: 0.5%"></div></div>');
				b.on("progressUpdate", function (a, b) {
					$(this).find(".progress-bar").css("width", b + "%")
				});
				b.on("uploadComplete", function (a, b) {
					e.attachedFiles.pushObject({
						handle: b.handle,
						fileName: b.filename,
						fileSize: formatFileSize(b.size),
						name: b.name,
						downloadUrl: GLOBAL_FILE_STORAGE_URL + "/" + b.name,
						originalSize: b.size,
						mimeType: b.mimeType,
						type: b.extension
					});
					$(this).remove();
					e.$(".modal-body").scrollTop(9999999)
				});
				e.$(".upload-attachment-container").append(b);
				e.$(".modal-body").scrollTop(9999999);
				e.controller.addAttachment(h,
					a, c, !0, function (b, f) {
						b && e.handleUploadError(a, k, h, c, f);
						d()
					}, e.isNotModal ? e.currentProperty : null)
			})
		},
		handleUploadError: function (a, c, d, b, e) {
			c = c ? ' "' + encodeStr(c) + '"' : "";
			e = e || "upload_file_error";
			if (d) {
				a = this.$().find("#upload-" + d);
				if (!a.length) return;
				a.remove()
			}
			this.saveError(languageParser.translate("visitors", e, {fileName: c}))
		},
		resetForm: function () {
			this.$(".ticket-subject").val("");
			this.$(".ticket-message").html('<p class="placeholder">' + languageParser.translate("placeholders", "enter_message") + "</p>");
			this.$(".ticket-assignee").val(Tawk.userController.user.id);
			this.$(".ticket-priority").val("3000");
			this.$(".new-ticket-tags").tagsinput("removeAll");
			this.attachedFiles.clear()
		}
	});
	Ember.Handlebars.helper("NewTicketView", Tawk.NewTicketView);
	Tawk.NewTicketViewModal = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.newTicketViewModal,
		elementId: "new-ticket",
		classNames: ["modal"],
		openView: function () {
			this.$().modal({backdrop: "static", keyboard: !1})
		}
	});
	Tawk.ContactView = Ember.View.extend(Tawk.ConversationBase,
		{
			elementId: "contact-container",
			classNames: "conversation-transcript",
			template: Ember.TEMPLATES.contactView,
			timelineChanged: function () {
				var a = this;
				"inDOM" === this._state && (this.controller && this.controller.contactData) && setTimeout(function () {
					a.$(".message-container")[0].scrollTop = 9999999
				}, 0)
			}.observes("controller.contactData.timeline"),
			didInsertElement: function () {
				var a = this;
				this._super();
				this.timelineChanged();
				this.$().delegate(".view-transcript", "click", function () {
					var c = $(this).attr("data-id");
					a.controller.set("modalTranscriptData",
						null);
					a.transcriptView ? a.transcriptView.openView() : (a.set("transcriptView", Tawk.TranscriptView.create({controller: a.controller})), a.transcriptView.append());
					a.controller.getModalTranscriptData(c, !0, function (a) {
					})
				});
				this.$().delegate(".view-ticket", "click", function () {
					var c = $(this).attr("data-id");
					a.controller.getModalTicketData(c, function (c) {
						c || (a.ticketView ? a.ticketView.openView() : (a.set("ticketView", Tawk.TicketView.create({controller: a.controller})), a.ticketView.append()))
					})
				});
				this.$().delegate("#loader-contact-timeline",
					"click", function () {
						a.controller.loadContactEvents()
					})
			},
			willDestroyElement: function () {
				this.ticketView && this.ticketView.destroy();
				this.transcriptView && this.transcriptView.destroy()
			},
			currentIndexChanged: function () {
				this.controller.contactData && (this.controller.contactData.indexNum ? (1 < this.controller.contactData.indexNum ? this.$("#prev-conversation").removeClass("disabled") : this.$("#prev-conversation").addClass("disabled"), this.controller.contactData.indexNum === this.controller.activeProperty.list.totalItems ?
					this.$("#next-conversation").addClass("disabled") : this.$("#next-conversation").removeClass("disabled")) : (this.$("#prev-conversation").addClass("disabled"), this.$("#next-conversation").addClass("disabled")))
			}.observes("controller.contactData.indexNum")
		});
	Ember.Handlebars.helper("ContactView", Tawk.ContactView);
	Tawk.TranscriptView = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.transcript,
		classNames: ["modal", "transcript-view"],
		controller: null,
		draw: !0,
		mapError: !1,
		previewModal: null,
		didInsertElement: function () {
			var a =
				this;
			this.$().on("hidden.bs.modal", function (c) {
				a.$().find('a[data-target="#transcript"]').trigger("click")
			});
			this.$().delegate(".transcript-btn", "click", function () {
				var c = $(this), d = $(this).attr("data-target");
				a.clearSaveMessages();
				if ("#print" === d) return printTranscript(a.controller.modalTranscriptData), !1;
				if ("#delete" === d) return a.controller.deleteSingleHistory(function (b) {
					b ? a.saveError(languageParser.translate("form_validation_messages", "delete_history_error")) : a.$().modal("hide")
				}), !1;
				a.$(".transcript-btn").removeClass("active");
				c.addClass("active");
				a.$(".transcript-pane").addClass("hidden");
				$(d).removeClass("hidden");
				a.$(".other-btn").addClass("hidden");
				"#email" === d ? a.$("#sendEmail").removeClass("hidden") : "#notes" === d ? a.$("#submit-notes").removeClass("hidden") : "#ban" === d ? a.$("#submitBan").removeClass("hidden") : "#copy" === d ? getCopyFormat(a.controller.modalTranscriptData) : "#details" === d && a.locationChanged();
				return !1
			});
			this.$().delegate(".copy-transcript", "click", function () {
				$(this).select()
			});
			this.$().delegate("#sendEmail",
				"click", function () {
					a.$("#emailTranscript").submit();
					return !1
				});
			this.$().delegate("#submit-notes", "click", function () {
				a.$("#notesForm").submit();
				return !1
			});
			this.$().delegate("#submitBan", "click", function () {
				a.$("#banVisitor").submit();
				return !1
			});
			this.$().delegate(".uploaded-image", "click", function () {
				var c = $(this).attr("src");
				null !== a.previewModal ? (a.previewModal.set("imageSrc", c), a.previewModal.openView()) : (a.set("previewModal", Tawk.ImagePreview.create({imageSrc: c})), a.previewModal.append())
			});
			this.$().delegate(".join-call",
				"click", function () {
					var c = $(this).parents(".webrtc-call").attr("id");
					joinWebRTCCall(a.controller.modalTranscriptData, null, c, function (c, b) {
						c && (errorMessage = b ? languageParser.translate("visitors", b.message) : feature ? feature.screen ? languageParser.translate("visitors", "webrtc_screenshare_error") : languageParser.translate("visitors", "webrtc_call_error") : languageParser.translate("visitors", "join_call_error"), a.saveError(errorMessage))
					})
				});
			this.$().delegate(".retry-load", "click", function () {
				var c = $(this).parents(".webrtc-call").attr("id");
				conversationProcess.processWebRTCCallBlock(c, a.controller.modalTranscriptData.pgid, null, !1, function () {
					calllData && a.controller.modalTranscriptData.set("callData." + c, calllData)
				})
			});
			this._super();
			this.transcriptChanged()
		},
		resizeView: function () {
			"inDOM" === this._state && (this._super(), this.$(".copy-transcript").css("height", this.maxBodyHeight - 56))
		},
		onModalShown: function () {
			var a = this;
			this.$(".transcript-btn").tooltip();
			this.$("#emailTranscript").validate({
				rules: {emails: {required: !0, multiemail: 10}}, messages: {
					emails: {
						multiemail: languageParser.translate("form_validation_messages",
							"email") + "(" + languageParser.translate("form_validation_messages", "total_recipients") + ")"
					}
				}, errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					c = $("#transcript-modal-emails").val().split(",");
					emailTranscript($.map(c, $.trim), a.controller.modalTranscriptData, function (c) {
						if (c) return a.saveError(languageParser.translate("form_validation_messages", "error_email_transcript"));
						a.saveSuccess(languageParser.translate("form_validation_messages", "success_email_transcript"))
					});
					return !1
				}
			});
			this.$("#banVisitor").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					c = $("#banReason").val();
					var d = $("#banIp").is(":checked");
					banVisitor(c, d, a.controller.modalTranscriptData, function (b) {
						if (b) return a.saveError(languageParser.translate("form_validation_messages", "error_ban"));
						Tawk.intercomController.execute("trackEvent", {eventType: "banned-visitor-from-history"});
						a.saveSuccess(languageParser.translate("form_validation_messages", "success_ban"))
					});
					return !1
				}
			});
			this.$("#notesForm").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					c = {
						sessionKey: null,
						visitorId: a.controller.modalTranscriptData.nvid,
						propertyId: a.controller.modalTranscriptData.pgid,
						name: $(c).find(".note-name").val().trim(),
						email: $(c).find(".note-email").val().trim(),
						notes: $(c).find(".note-text").val().trim()
					};
					updateVisitorDetails(c, a.controller.modalTranscriptData, function (c, b) {
						c ? a.saveError() : a.saveSuccess()
					});
					return !1
				}
			});
			this.resizeView()
		},
		copyChanged: function () {
			"inDOM" ===
			this._state && this.controller && (this.controller.modalTranscriptData && this.controller.modalTranscriptData.copyFormat) && this.$(".copy-transcript").val(this.controller.modalTranscriptData.copyFormat)
		}.observes("controller.modalTranscriptData.copyFormat"),
		transcriptChanged: function () {
			var a = this;
			"inDOM" === this._state && this.controller.modalTranscriptData && (setTimeout(function () {
				a.controller.modalTranscriptData.callInfo.length && !a.controller.modalTranscriptData.syncCallData && (a.controller.modalTranscriptData.set("syncCallData",
					!0), a.controller.modalTranscriptData.set("callData", {}), a.controller.modalTranscriptData.callInfo.forEach(function (c) {
					conversationProcess.processWebRTCCallBlock(c.callId, a.controller.modalTranscriptData.pgid, c.callView, !1, function (d, b) {
						a.controller.modalTranscriptData.set("syncCallData", !1);
						b && a.controller.modalTranscriptData.set("callData." + c.callId, b)
					})
				}));
				a.onModalShown()
			}, 1E3), this.set("draw", !0))
		}.observes("controller.modalTranscriptData.chatId"),
		locationChanged: function () {
			var a, c, d = [];
			a = this.controller.modalTranscriptData;
			var b = Handlebars.compile('<div class="marker-details"><h3>{{name}}</h3><p>{{location}}</p>');
			if (this.draw) if ("undefined" !== typeof google && void 0 !== google && a) if (this.set("mapError", !1), this.set("draw", !1), d = [{
					name: a.n,
					lastKnown: {cy: a.cy, cn: a.cn, latitude: a.latitude, longitude: a.longitude}
				}], a = {zoom: 1 < d.length ? 1 : 10, center: new google.maps.LatLng(0, 0)}, d.length) {
				var e, f, g = d[0], h = g.lastKnown,
					d = h && h.latitude && h.longitude ? new google.maps.LatLng(h.latitude, h.longitude) : new google.maps.LatLng(0, 0);
				a.center =
					d;
				c = new google.maps.Map(this.$(".map")[0], a);
				e = new google.maps.Marker({position: d, map: c, title: (h.cy ? h.cy + ", " : "") + h.cn});
				f = new google.maps.InfoWindow({
					content: $(b({
						name: g.name,
						location: (h.cy ? h.cy + ", " : "") + h.cn
					}))[0].outerHTML
				});
				google.maps.event.addListener(e, "click", function () {
					f.open(c, e)
				});
				this.$(".linkToMap").attr("href", "http://maps.google.com/maps?q=" + h.latitude + "," + h.longitude)
			} else c = new google.maps.Map(this.$(".map")[0], a), this.$(".linkToMap").attr("href", "http://maps.google.com/maps"); else this.set("mapError",
				!0)
		},
		willDestroyElement: function () {
			this.previewModal && this.previewModal.remove();
			this.set("previewModal", null)
		}
	});
	Tawk.TicketView = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.modalTicketView,
		classNames: ["modal", "transcript-view"],
		controller: null,
		didInsertElement: function () {
			var a = this;
			this.set("modalPadding", 0);
			this.$().on("shown.bs.modal", function (c) {
				setTimeout(function () {
					a.resizeView()
				}, 0)
			});
			this.$().delegate(".transcript-btn", "click", function () {
				var c = $(this), d = $(this).attr("data-target");
				a.$(".transcript-btn").removeClass("active");
				c.addClass("active");
				a.$(".transcript-pane").addClass("hidden");
				$(d).removeClass("hidden");
				return !1
			});
			this._super()
		}
	});
	Tawk.AdminBaseView = Ember.Mixin.create({
		classNames: "overlay-form", subViewId: null, alertTimeout: null, saveSubView: function () {
			this.subViewId && (this.controller.activeProperty && "profile" !== this.controller.activeProperty.type) && this.controller.saveLastSubView({subView: this.subViewId})
		}, didInsertElement: function () {
			var a = this, c = Tawk.routing.getPath();
			this.saveSubView();
			this.$("#close-view").bind("click.closeView", function () {
				a.closeView()
			});
			$("body").bind("keydown.closeView", this.closeView.bind(this));
			this.$().delegate(".all-bulk-check", "change", function () {
				var c = $(this).prop("checked");
				a.controller.toggleAllMark(c);
				a.$(".bulk-check").prop("checked", c)
			});
			this.$().delegate("#clear-bulk-selection", "click", function (c) {
				c.preventDefault();
				a.controller.toggleAllMark(!1);
				return !1
			});
			this.$().delegate("#bulk-delete", "click", function (c) {
				c.preventDefault();
				a.controller.bulkDelete(function (b, c) {
					b ? a.saveError(c ? c : languageParser.translate("admin", "bulk_delete_error")) : a.saveSuccess(languageParser.translate("admin", "bulk_delete_success"))
				});
				return !1
			});
			this.$().delegate("#delete", "click", function (d) {
				d.preventDefault();
				a.clearSaveMessages();
				a.controller.deleteSingle(function (b) {
					b ? a.saveError(languageParser.translate("admin", "single_delete_error")) : Tawk.routing.changeRoute({
						view: c.view,
						propertyId: "admin" === c.view && a.controller.activeProperty ? a.controller.activeProperty.id :
							null,
						subView: a.subViewId,
						itemId: null,
						widgetId: null
					})
				});
				return !1
			});
			this.$().delegate(".open-view", "click", function (c) {
				var b = $(this).attr("id");
				$(c.target).hasClass("bulk-check") || $(c.target).hasClass("mark-select") ? c.stopPropagation() : a.controller.openItem(b);
				a.clearSaveMessages()
			});
			this.$().delegate(".bulk-check", "change", function () {
				var c = $(this).parents(".open-view").attr("id"), b = $(this).is(":checked");
				a.controller.toggleMark(c, b)
			});
			this.$().delegate("#cancel", "click", function () {
				a.clearSaveMessages();
				a.controller.closeItem();
				return !1
			});
			this.$().delegate("#add-item", "click", function () {
				a.controller.openItem()
			})
		}, closeView: function (a) {
			var c = Tawk.routing.getPath();
			if (a) if (27 === a.keyCode) a.stopPropagation(); else return;
			if (a = this.controller.closeView()) this.controller.saveLastSubView({
				subView: null,
				itemId: null
			}), this.closeForm(), this.remove(), Tawk.routing.titlePath.subviewName = null;
			Tawk.routing.titlePath.widgetName = null;
			Tawk.routing.titlePath.itemName = null;
			Tawk.routing.setTitle();
			Tawk.routing.changeRoute({
				view: c.view,
				propertyId: "admin" === c.view && this.controller.activeProperty ? this.controller.activeProperty.id : null,
				subView: a ? null : this.subViewId,
				itemId: null,
				widgetId: null
			})
		}, willDestroyElement: function () {
			clearTimeout(this.alertTimeout);
			$("body").unbind("keydown.closeView");
			this.$("#close-view").unbind("click.closeView")
		}, saveComplete: function (a, c, d) {
			"inDOM" === this._state && (this.clearSaveMessages(), this.$("#content-container").append('<div class="alert ' + a + ' fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa ' +
				c + '"></i>' + d + "</div>"))
		}, saveError: function (a) {
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "error_save"), this.saveComplete("alert-danger", "fa-ban", a))
		}, saveSuccess: function (a) {
			var c = this;
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "success_update"), this.saveComplete("alert-success", "fa-check", a), clearTimeout(this.alertTimeout), this.set("alertTimeout", setTimeout(function () {
				c.clearSaveMessages()
			}, 3E3)))
		}, updateWarning: function (a) {
			"inDOM" ===
			this._state && this.$("#content-container").append('<div class="alert alert-warning fade in"><button class="close" data-dismiss="alert">\u00d7</button>' + a + "</div>")
		}, clearSaveMessages: function () {
			"inDOM" === this._state && (clearTimeout(this.alertTimeout), this.$(".alert").remove())
		}, bulkMarkedChanged: function () {
			var a = 0;
			"inDOM" === this._state && (this.controller && this.controller.pagedList) && (this.controller.pagedList && (a = this.controller.pagedList.currentData.filterProperty("isMarked", !0).length), 0 < a ? this.set("bulkMarkedTotal",
				languageParser.translate("admin", "bulk_selected", {num: a})) : (this.set("bulkMarkedTotal", null), this.$(".all-bulk-check").prop("checked", !1), this.$(".bulk-check").prop("checked", !1)))
		}.observes("controller.pagedList.currentData.@each.isMarked"), takePhotoEnabled: function () {
			return main.hasUserMedia || main.hasFlash || !desktopConnector.enabled() ? !0 : !1
		}.property("main.hasUserMedia", "main.hasFlash")
	});
	Tawk.WhitelabelCustomizationView = Ember.View.extend({
		template: Ember.TEMPLATES.whitelabelCustomization, elementId: "whitelabel-customization",
		willDestroyElement: function () {
			this.$("#widget-text-color").ColorSelector("destroy")
		}, willInsertElement: function () {
			var a, c = !1;
			$("iframe").each(function () {
				var a = $(this).attr("name");
				a && -1 !== a.indexOf("stripe") && (c = !0)
			});
			c || (a = document.createElement("script"), a.src = "https://js.stripe.com/v2/", $("body").append(a))
		}, didInsertElement: function () {
			var a = this;
			this.widgetFooterLabelChange();
			$("#widget-brand").css("color", a.controller.whitelabelAddOn.settings.widget.textColor);
			this.$("#widget-text-color").ColorSelector({
				appendTo: "#whitelabel-customization",
				show: function () {
					$("#widget-max").removeClass("hidden");
					$("#widget-min").addClass("hidden")
				}
			}, function (a) {
				$("#widget-brand").css("color", a)
			}, a.$("#widget-text-color"));
			this.$().delegate("#plan", "change", function () {
				var c;
				c = $(this).val();
				(c = a.controller.whitelabelAddOn ? a.controller.whitelabelAddOn.plans.findProperty("id", c) : null) && a.$("#total-price").html("Total : $ " + c.price / 100 + (1 === c.cycle ? languageParser.translate("admin", "per_month") : languageParser.translate("admin", "per_year")))
			});
			this.$("#plan").trigger("change");
			this.$().delegate("#card-selection", "change", function () {
				"new-card" === $(this).val() ? a.$("#new-card-details").removeClass("hidden") : a.$("#new-card-details").addClass("hidden")
			});
			this.$().delegate("#payment-method", "change", function () {
				"cc" === $(this).val() ? a.$("#card-details").removeClass("hidden") : a.$("#card-details").addClass("hidden")
			});
			$.validator.messages.ccExpiryFormat = $.validator.format("The format should be MM/YY");
			$.validator.messages.ccExpiryDate = $.validator.format("Invalid expiry date.");
			$.validator.messages.ccNumber =
				$.validator.messages.creditcard;
			$.validator.messages.cvcCheck = $.validator.format("Invalid cvc number.");
			this.$("#card-number").mask("9999 9999 9999? 9999 9999", {placeholder: " "});
			this.$("#card-expiry").mask("99/99", {
				placeholder: " ", completed: function () {
					a.$("#card-cvc").focus()
				}
			});
			this.$("#card-cvc").mask("999?9", {placeholder: " "});
			this.$("#card-number").keyup(function () {
				window.Stripe && (cardType = Stripe.card.cardType($(this).val())) && (cardType = cardType.replace(" ", "").toLowerCase(), a.$(".card-type").hasClass(cardType) ||
				a.$(".card-type").removeClass().addClass("icon-append card-type " + cardType))
			});
			this.$().delegate(".clear-input", "click", function () {
				$(this).next().val("").trigger("change")
			});
			this.$().delegate("#widget-label", "keyup paste change", function () {
				a.controller.whitelabelAddOn.settings.set("widget.label", $(this).val())
			});
			this.$().delegate("#widget-url", "keyup paste change", function () {
				a.controller.whitelabelAddOn.settings.set("widget.url", $(this).val())
			});
			this.$().delegate("#email-label", "keyup paste change",
				function () {
					a.controller.whitelabelAddOn.settings.set("email.label", $(this).val())
				});
			this.$().delegate("#email-url", "keyup paste change", function () {
				a.controller.whitelabelAddOn.settings.set("email.url", $(this).val())
			});
			this.$().delegate("#activate", "click", function () {
				a.$("#whitelabel-payment").submit()
			});
			this.$(".input-text").focus(function () {
				$("#widget-max").removeClass("hidden");
				$("#widget-min").addClass("hidden")
			});
			this.$("#activate-add-on").click(function () {
				a.$("#whitelabel-settings").addClass("hidden");
				a.$("#payment-container").removeClass("hidden");
				return !1
			});
			this.$("#cancel-payment-form").click(function () {
				a.$("#whitelabel-settings").removeClass("hidden");
				a.$("#payment-container").addClass("hidden");
				return !1
			});
			this.$("#whitelabel-payment").validate({
				onkeyup: !1, onfocusout: !1, onclick: !1, errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					var d = {}, b = a.$("#payment-method", c).val(), e = function (b, d, e) {
						"inDOM" === a._state && (b ? (errorSave(c, d), e && setTimeout(function () {
								a.$("#card-selection").val(e)
							},
							0), a.$("#cancel-payment-form").removeAttr("disabled"), a.$("#activate-now").removeAttr("disabled"), a.$("#activate-now").html(languageParser.translate("admin", "activate_now"))) : (a.saveSettings(function (b) {
							b ? errorSave(c) : setTimeout(function () {
								a.$("#whitelabel-settings").removeClass("hidden");
								a.$("#payment-container").addClass("hidden");
								a.set("paymentSuccess", !1)
							}, 3E3)
						}), a.set("paymentSuccess", !0)), a.set("paymentProcessing", !1))
					};
					if (!a.paymentProcessing) return a.set("paymentProcessing", !0), a.$("#cancel-payment-form").attr("disabled",
						"disabled"), a.$("#activate-now").attr("disabled", "disabled"), a.$("#activate-now").html('<i class="fa fa-refresh fa-spin"></i>'), d.planId = $("#plan", c).val(), b || (!desktopConnector.enabled() || desktopConnector.canUsePaypal()) || (b = "cc"), "cc" === b && (a.$("#card-selection").length ? d.customerId = a.$("#card-selection").val() : d.customerId = "new-card", $(c).serializeArray().map(function (a) {
						d[a.name] = a.value
					})), a.controller.handlePayment(b, d, e), !1
				}
			})
		}, saveSettings: function (a) {
			var c = {
				enabled: !0, widget: {
					label: "", url: "",
					textColor: "#000000"
				}, email: {label: "", url: ""}
			};
			if ("inDOM" !== this._state) return a(!0);
			if (!this.controller.whitelabelAddOn.isActive) return this.controller.resetSettings(), a();
			c.enabled = !0;
			c.widget = {
				label: this.$("#widget-label").val(),
				url: this.$("#widget-url").val(),
				textColor: this.$("#widget-text-color").ColorSelector("getColor").toHexString()
			};
			c.email = {label: this.$("#email-label").val(), url: this.$("#email-url").val()};
			this.controller.saveWhitelabelSettings(c, function (c) {
				c ? a(!0) : a(!1)
			})
		}, widgetFooterLabelChange: function () {
			var a,
				c;
			this.controller && (this.controller.whitelabelAddOn && "inDOM" === this._state) && ((a = this.controller.whitelabelAddOn.settings.widget.label) ? (a = encodeStr(a), (c = a.match(/_[^_]+_/gi)) && 0 < c.length && c.forEach(function (c) {
				var b;
				b = c.indexOf("_");
				var e = c.lastIndexOf("_");
				b = c.substring(0, b) + "<i>" + c.substring(b + 1, e) + "</i>" + c.substring(e + 1, c.length);
				a = a.replace(c, b)
			}), (c = a.match(/\*[^*]+\*/gi)) && 0 < c.length && c.forEach(function (c) {
				var b;
				b = c.indexOf("*");
				var e = c.lastIndexOf("*");
				b = c.substring(0, b) + '<span style="font-size: 13px; font-weight: 700">' +
					c.substring(b + 1, e) + "</span>" + c.substring(e + 1, c.length);
				a = a.replace(c, b)
			}), this.controller.whitelabelAddOn.settings.widget.url && (a = '<a href=" ' + this.controller.whitelabelAddOn.settings.widget.url + ' " target="_blank" style="text-decoration: none; color: inherit;">' + a + "</a>"), $("#widget-brand").html(a)) : $("#widget-brand").html(""))
		}.observes("controller.whitelabelAddOn.settings.widget.label")
	});
	Ember.Handlebars.helper("WhitelabelCustomizationView", Tawk.WhitelabelCustomizationView);
	Tawk.PropertySettingsView =
		Ember.View.extend(Tawk.AdminBaseView, {
			template: Ember.TEMPLATES.propertySettings,
			elementId: "property-settings-form",
			controller: null,
			classNames: "overlay-form",
			subViewId: "settings",
			didInsertElement: function () {
				var a = this;
				this._super();
				this.$().undelegate("#delete", "click");
				this.$().delegate("#delete", "click", function (c) {
					c.stopPropagation();
					a.controller.deleteSingle(function (c) {
						c ? "BILLING_HAS_SUBSCRIPTIONS_ERROR" === c ? a.saveError(languageParser.translate("admin", c)) : a.saveError(languageParser.translate("form_validation_messages",
							"delete_site_error")) : a.closeView()
					});
					return !1
				});
				this.$("#site-settings-form").validate({
					errorPlacement: function (a, d) {
						a.insertAfter(d.parent())
					}, submitHandler: function (c) {
						var d = {};
						a.clearSaveMessages();
						d.pageName = a.$("#site-name").val().trim();
						d.isEnabled = a.$("#site-status").is(":checked");
						d.secureJSAPI = a.$("#secure-api-enabled").is(":checked");
						c = a.$("#site-domain").val().trim();
						c.length && (d.domain = c, -1 === d.domain.indexOf("http://") && -1 === c.indexOf("https://") && (d.domain = "http://" + d.domain));
						a.controller.saveProperty(d,
							!1, function (b) {
								b ? a.saveError() : a.saveSuccess()
							});
						return !1
					}
				});
				this.$("#page-settings-form").validate({
					errorPlacement: function (a, d) {
						a.insertAfter(d.parent())
					}, submitHandler: function (c) {
						c = {};
						a.clearSaveMessages();
						c.pageName = a.$("#page-name").val().trim();
						c.isEnabled = a.$("#page-status").is(":checked");
						c.pageTawkId = a.$("#page-tawkid").val().trim();
						c.category = a.$(".categories-type-select").val();
						c.subcategory = a.$(".subcategories-type-select").val();
						a.controller.saveProperty(c, !1, function (c) {
							c ? a.saveError(null) :
								a.saveSuccess(null)
						});
						return !1
					}
				});
				this.$().delegate("select.categories-type-select", "change", function () {
					var c = $(this).val();
					a.changeSubCategorySelection(c)
				});
				this.$().delegate("#page-tawkid", "blur", function () {
					var c = $(this), d = c.val().trim();
					d && !c.hasClass("error") && (a.$(".small-transparent-spinner").removeClass("hidden"), a.controller.pageContentController.checkTawkId(d, function (b, e) {
						b || e ? c.addClass("invalid") : c.removeClass("invalid");
						c.val(d);
						a.$("#page-settings-form").validate().element("#page-tawkid");
						a.$(".small-transparent-spinner").addClass("hidden")
					}))
				});
				this.pageChanged()
			},
			pageChanged: function () {
				var a;
				"inDOM" === this._state && (this.controller && this.controller.activeProperty && !this.controller.activeProperty.isSite) && (a = this.controller.activeProperty.settings && this.controller.activeProperty.settings.categoryId ? this.controller.activeProperty.settings.categoryId : "1000", subCategoryId = this.controller.activeProperty.settings && this.controller.activeProperty.settings.subCategoryId ? this.controller.activeProperty.settings.subCategoryId :
					parseInt(a, 10) + 1, this.set("categoriesSelectOptions", getPageCategories()), this.set("categoriesSelectClass", "categories-type-select"), this.set("categoriesSelectValue", a), this.set("subcategoriesSelectClass", "subcategories-type-select required"), this.changeSubCategorySelection(this.categoriesSelectValue))
			}.observes("controller.activeProperty"),
			changeSubCategorySelection: function (a) {
				var c = parseInt(a, 10);
				currentCategory = this.controller.activeProperty.settings && this.controller.activeProperty.settings.categoryId ?
					parseInt(this.controller.activeProperty.settings.categoryId, 10) : 1E3;
				options = getPageSubCategories(a);
				if (a = options.findProperty("value", "" + (c === currentCategory && this.controller.activeProperty.settings ? this.controller.activeProperty.settings.subCategoryId || c + 1 : c + 1))) a.isSelected = !0;
				this.set("subcategoriesSelectOptions", options)
			}
		});
	Tawk.NewPropertyView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.newProperty,
		elementId: "new-property",
		controller: null,
		isSite: null,
		isPage: null,
		warningMessage: null,
		willInsertElement: function () {
			this.set("isSite", !0);
			this.set("isPage", !1)
		},
		didInsertElement: function () {
			var a = this;
			this._super();
			this.set("isSite", !0);
			this.set("isPage", !1);
			var c = this.$("#new-site-form").validate({
				errorPlacement: function (a, c) {
					a.insertAfter(c.parent())
				}, submitHandler: function () {
					var b = {};
					b.pageName = a.$("#site-name").val().trim();
					b.domain = a.$("#site-domain").val().trim();
					b.propertyType = "site";
					b.createdByWizard = !1;
					b.domain || delete b.domain;
					a.controller.saveProperty(b, !0, function (b) {
						b ? a.saveError(languageParser.translate("form_validation_messages",
							"site_add_error")) : ($("#property-select").val(a.controller.activeProperty.id), $("#property-select").trigger("change"), a.closeView())
					});
					return !1
				}
			}), d = this.$("#new-page-form").validate({
				errorPlacement: function (a, c) {
					a.insertAfter(c.parent())
				}, submitHandler: function () {
					var b = {};
					b.pageName = a.$("#page-name").val().trim();
					b.pageTawkId = a.$("#page-tawkid").val();
					b.propertyType = "page";
					a.controller.saveProperty(b, !0, function (b) {
						b ? a.saveError(languageParser.translate("form_validation_messages", "page_add_error")) :
							($("#property-select").val(a.controller.activeProperty.id), $("#property-select").trigger("change"), a.closeView())
					});
					return !1
				}
			});
			this.$().delegate("#site-name, #page-name", "keyup", function () {
				Tawk.webProperties[a.isSite ? "sites" : "pages"].findProperty("propertyName", $(this).val().trim()) ? (a.warningMessage ? a.$(".warning-msg").remove() : a.set("warningMessage", $('<em class="warning-msg">' + languageParser.translate("form_validation_messages", "item_add_name_duplicate") + "</em>")), a.warningMessage.insertAfter($(this).parent())) :
					a.$(".warning-msg").remove()
			});
			this.$().delegate("#page-type", "click", function () {
				a.$("#page").is(":checked") || a.$("#page").prop("checked", "checked").trigger("change")
			});
			this.$().delegate("#site-type", "click", function () {
				a.$("#site").is(":checked") || a.$("#site").prop("checked", "checked").trigger("change")
			});
			this.$('input[name="property-type"]').change(function () {
				var b = $(this).val();
				c.resetForm();
				d.resetForm();
				a.$(".input").removeClass("state-error").removeClass("state-success");
				a.warningMessage && a.warningMessage.remove();
				"site" === b ? (a.set("isSite", !0), a.set("isPage", !1)) : (a.set("isSite", !1), a.set("isPage", !0))
			});
			this.$("#submit").click(function () {
				a.isSite ? a.$("#new-site-form").submit() : a.$("#new-page-form").submit()
			});
			this.$().delegate("#page-tawkid", "blur", function () {
				var b = $(this), c = b.val().trim();
				c && !b.hasClass("error") && (a.$(".small-transparent-spinner").removeClass("hidden"), a.controller.pageContentController.checkTawkId(c, function (d, g) {
					d || g ? b.addClass("invalid") : b.removeClass("invalid");
					b.val(c);
					a.$("#new-page-form").validate().element("#page-tawkid");
					a.$(".small-transparent-spinner").addClass("hidden")
				}))
			})
		}
	});
	Tawk.MembersSettingsView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.membersSettings,
		elementId: "members-settings-form",
		controller: null,
		classNames: "overlay-form",
		inviteMember: null,
		newInvitations: null,
		roles: [{id: "admin", value: "Admin"}, {id: "agent", value: "Agent"}],
		modifiedAgents: {},
		canDelete: !0,
		subViewId: "members",
		willInsertElement: function () {
			this.set("modifiedAgents", {});
			this.set("inviteMember", !1);
			this.set("newInvitations",
				[])
		},
		needsBackView: function () {
			"inDOM" !== this.state || !this.controller.activeAgent && !this.inviteMember ? this.set("showBack", !1) : this.set("showBack", !0)
		}.observes("controller.activeAgent", "inviteMember"),
		didInsertElement: function () {
			var a = !1, c = this;
			this._super();
			this.$().undelegate(".bulk-check", "change");
			this.$().delegate(".bulk-check", "change", function () {
				var a, d = $(this).is(":checked");
				$(this).parents(".open-view").length ? a = $(this).parents(".open-view").attr("id") : $(this).parents(".open-invitation").length &&
					(a = $(this).parents(".open-invitation").attr("id"));
				a && c.controller.toggleMark(a, d)
			});
			this.$().delegate("#submit", "click", function () {
				c.$("#edit-settings-form").submit();
				return !1
			});
			this.$("#search").keyup(function () {
				var a = $(this).val().trim();
				c.controller.searchList(a)
			});
			this.$(".scrollable-list").bind("scroll.list", function (b) {
				!a && (c.controller.agentPagedList.currentData.length || c.controller.invitedPagedList.currentData.length) && $(this).scrollTop() + $(this).height() >= $(this)[0].scrollHeight - 100 && (a =
					!0, c.controller.loadNextList(function (b, d) {
					a = !1;
					!b && d && c.$(".all-bulk-check").prop("checked", !1)
				}))
			});
			var d = this.$("#add-member-form").validate({
				errorPlacement: function (a, c) {
					a.insertAfter(c.parent())
				}, submitHandler: function (a) {
					var e = [];
					c.clearSaveMessages();
					c.$(".new-invitation-field").each(function () {
						var a = {};
						a.email = $(this).find(".invited-email").val();
						a.role = $(this).find(".invited-role").val();
						e.push(a)
					});
					c.controller.inviteAgents(e, function (a, b) {
						var e, k = [], l = [];
						if (0 === a.length) c.newInvitations.clear(),
							c.set("inviteMember", !1), c.saveSuccess("Successfully sent invitation"); else {
							var m = {};
							a.forEach(function (a) {
								var b = c.$(".invited-email").get(a.index);
								a.error && (e = a.error);
								m[$(b).attr("name")] = e
							});
							b.forEach(function (a) {
								l.push(a.email);
								k.pushObject(c.newInvitations.objectAt(a.index))
							});
							d.showErrors(m);
							b.length && (c.newInvitations.removeObjects(k), c.saveSuccess("Successfully sent invitation to : <br/>" + l.join("<br/>")))
						}
					});
					return !1
				}
			});
			this.$("#invite-member").click(function (a) {
				a.preventDefault();
				c.newInvitations.clear();
				c.newInvitations.pushObject({email: "", role: "admin", id: (new Date).getTime()});
				c.set("inviteMember", !0);
				c.set("canDelete", !1);
				return !1
			});
			$("#close-view").unbind("click.closeView");
			$("#close-view").on("click", function (a) {
				a.stopPropagation();
				if (!0 === c.inviteMember) return c.set("inviteMember", !1), c.controller.closeItem(), !1;
				c.closeView()
			});
			$("body").unbind("keydown.closeView");
			$("body").bind("keydown.closeView", function (a) {
				if (27 === a.keyCode) {
					if (!0 === c.inviteMember) return a.stopPropagation(), c.set("inviteMember",
						!1), c.controller.closeItem(), !1;
					c.closeView()
				}
			});
			this.$("#add-field").click(function (a) {
				a.preventDefault();
				c.newInvitations.pushObject({email: "", role: "admin", id: (new Date).getTime()});
				return !1
			});
			this.$(".open-tab-pane").click(function () {
				var a = $(this).attr("data-id");
				c.controller.toggleAllMark(!1);
				c.$(".open-tab-pane").removeClass("active");
				$(this).addClass("active");
				c.$(".tab-pane").removeClass("active");
				c.$("#" + a).addClass("active");
				c.$(".all-bulk-check").prop("checked", !1);
				c.$(".bulk-check").prop("checked",
					!1);
				"current-tab" === a ? c.controller.set("currentView", "accepted") : c.controller.set("currentView", "pending")
			});
			this.$().delegate(".delete-field", "click", function () {
				var a;
				a = $(this).parents(".new-invitation-field");
				a = c.$(".new-invitation-field").index(a);
				0 <= a && a < c.newInvitations.length && c.newInvitations.removeAt(a)
			});
			this.$().delegate(".resend-invitation", "click", function () {
				c.controller.resendInvitation(function (a, d) {
					c.clearSaveMessages();
					a ? d ? c.saveError(d) : c.saveError(languageParser.translate("form_validation_messages",
						"error_invite_resend")) : c.saveSuccess(languageParser.translate("form_validation_messages", "success_invite_resend"))
				})
			});
			this.$().delegate(".open-invitation", "click", function (a) {
				var d = $(this).attr("id");
				$(a.target).hasClass("bulk-check") || $(a.target).hasClass("mark-select") ? a.stopPropagation() : c.controller.openInvitation(d);
				c.clearSaveMessages()
			});
			this.$().delegate("#submit-edit", "click", function (a) {
				a.preventDefault();
				c.$("#edit-member-form").submit()
			});
			this.$("#edit-member-form").validate({
				errorPlacement: function (a,
				                          c) {
					a.insertAfter(c.parent())
				}, submitHandler: function () {
					var a, d = c.$('input[name="agent-role"]:checked').val();
					c.clearSaveMessages();
					c.$("#agent-enabled") && (a = c.$("#agent-enabled").is(":checked"));
					c.controller.editAccess(a, d, function (a, b) {
						a ? c.saveError(b) : c.saveSuccess()
					});
					return !1
				}
			})
		},
		bulkMarkedChanged: function () {
			var a = 0;
			"inDOM" === this._state && (this.controller && (this.controller.agentPagedList || this.controller.invitedPagedList)) && (this.controller.agentPagedList && (a += this.controller.agentPagedList.currentData.filterProperty("isMarked",
				!0).length), this.controller.invitedPagedList && (a += this.controller.invitedPagedList.currentData.filterProperty("isMarked", !0).length), 0 < a ? this.set("bulkMarkedTotal", languageParser.translate("admin", "bulk_selected", {num: a})) : (this.set("bulkMarkedTotal", null), this.$(".all-bulk-check").prop("checked", !1), this.$(".bulk-check").prop("checked", !1)))
		}.observes("controller.agentPagedList.currentData.@each.isMarked", "controller.invitedPagedList.currentData.@each.isMarked"),
		newInvitationsChanged: function () {
			"inDOM" ===
			this.state && (1 === this.newInvitations.length ? this.set("canDelete", !1) : this.set("canDelete", !0))
		}.observes("newInvitations.length"),
		addWarning: function () {
			this.controller.hasBeenUpdated && this.updateWarning(languageParser.translate("admin", "item_has_been_updated", {
				itemType: languageParser.translate("generic", "agent"),
				itemName: this.controller.previousName
			}))
		}.observes("controller.hasBeenUpdated")
	});
	Tawk.DepartmentSettingsView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.departmentSettings,
		elementId: "department-settings-form",
		controller: null,
		classNames: "overlay-form",
		subViewId: "department",
		didInsertElement: function () {
			var a = this, c = !1;
			this._super();
			this.$("#add-department").click(function () {
				a.controller.openItem()
			});
			this.$().delegate(".name-popover", "mouseover", function () {
				$(this).popover("show")
			});
			this.$().delegate(".name-popover", "mouseout", function () {
				$(this).popover("hide")
			});
			this.$("#department-form").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function (c) {
					var b =
						[];
					c = {
						name: a.$("#department-name").val().trim(),
						description: a.$("#department-description").val().trim()
					};
					c.isEnabled = a.$("#department-status").length ? a.$("#department-status").is(":checked") : void 0;
					a.$('input[name="assigned-agents"]:checked').each(function () {
						b.push($(this).val())
					});
					c.agents = b;
					a.clearSaveMessages();
					a.controller.saveDepartment(c, function (b) {
						b ? a.saveError(a.controller.activeDepartment.id ? null : languageParser.translate("form_validation_messages", "department_add_error")) : a.saveSuccess(a.controller.activeDepartment.id ?
							null : languageParser.translate("form_validation_messages", "department_add_success"))
					});
					return !1
				}
			});
			this.$("#search").keyup(function () {
				var c = $(this).val().trim();
				a.controller.searchList(c)
			});
			this.$(".scrollable-list").bind("scroll.list", function (d) {
				!c && a.controller.pagedList.currentData.length && $(this).scrollTop() + $(this).height() >= $(this)[0].scrollHeight - 100 && (c = !0, a.controller.loadNextList(function (b, d) {
					c = !1;
					!b && d && a.$(".all-bulk-check").prop("checked", !1)
				}))
			})
		},
		addWarning: function () {
			var a = this;
			this.controller.hasBeenUpdated &&
			setTimeout(function () {
				a.updateWarning(languageParser.translate("admin", "item_has_been_updated", {
					itemType: languageParser.translate("triggers", "department"),
					itemName: a.controller.previousName
				}))
			})
		}.observes("controller.hasBeenUpdated")
	});
	Tawk.WidgetSettingsView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.widgetSettings,
		elementId: "widget-settings",
		controller: null,
		subViewId: "widget-settings",
		didInsertElement: function () {
			var a = this;
			this._super();
			this.controller.activeWidget.id ? (Tawk.routing.titlePath.subviewName =
				this.controller.activeWidget.name, Tawk.routing.titlePath.itemName = languageParser.translate("admin", "widget_settings")) : (Tawk.routing.titlePath.subviewName = "New Widget", Tawk.routing.titlePath.itemName = null);
			Tawk.routing.setTitle();
			this.$(".widget-settings-tooltip").tooltip({placement: "right"});
			this.$().undelegate("#cancel", "click");
			this.$().delegate("#cancel", "click", function () {
				a.controller.resetData();
				a.closeView();
				return !1
			});
			this.$().undelegate("#delete", "click");
			this.$().delegate("#delete", "click",
				function (c) {
					c.preventDefault();
					a.clearSaveMessages();
					a.controller.deleteSingle(function (c) {
						c ? a.saveError("Unable to delete selection") : (a.controller.closeItem(), a.closeView())
					});
					return !1
				});
			this.$(".open-info").click(function () {
				a.$(".property-info").css({display: "block"});
				return !1
			});
			setTimeout(function () {
				a.widgetChanged();
				a.$("#widget-name").focus()
			});
			this.$("#widget-settings-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function () {
					var c = null, d = !a.controller.activeWidget.id,
						b = {
							disableSoundNotification: a.$("#disable-sound").is(":checked"),
							hideEstimatedWaitTime: a.$("#hide-wait-time").is(":checked"),
							hideWidgetWhenOffline: a.$("#hide-offline").is(":checked"),
							hideWidgetOnload: a.$("#hide-onload").is(":checked"),
							hideWidgetOnMobile: a.$("#hide-mobile").is(":checked")
						};
					a.clearSaveMessages();
					a.$("#maximize-onclick").is(":checked") ? b.onClick = "max" : b.onClick = "pop";
					d ? (c = a.$("#widget-name").val().trim(), d = a.$("#inline-type").is(":checked") ? "inline" : "embed", a.controller.addNewidget(c,
						d, function (b, c) {
							b ? a.saveError(languageParser.translate("form_validation_messages", "widget_add_error")) : a.saveSuccess(languageParser.translate("form_validation_messages", "widget_add_success"))
						})) : (a.$("#widget-status").length && (c = a.$("#widget-status").is(":checked")), a.controller.saveSettings(c, null, b, function (b) {
						b ? a.saveError() : a.saveSuccess()
					}));
					return !1
				}
			})
		},
		widgetChanged: function () {
			var a = this;
			setTimeout(function () {
				"inDOM" === a._state && (a.controller && a.controller.activeWidget) && ("max" === a.controller.activeWidget.onClick ?
					a.$("#maximize-onclick").prop("checked", "checked") : a.$("#popout-onclick").prop("checked", "checked"))
			})
		}.observes("controller.activeWidget")
	});
	Tawk.WidgetBubblesGallery = Ember.View.extend({
		template: Ember.TEMPLATES.widgetBubblesGallery,
		elementId: "widget-bubbles-gallery",
		bubblesList: [],
		willInsertElement: function () {
			if (!this.bubblesList.length) {
				this.bubblesList.pushObject({
					id: "default",
					link: GLOBAL_STATIC_URL + "/images/bubbles/0.png",
					rotatable: !0
				});
				for (var a = 1; 128 >= a; a++) this.bubblesList.pushObject({
					id: "bubble-" +
					a,
					link: GLOBAL_STATIC_URL + "/images/bubbles/" + a + ".png",
					rotatable: bubbleSettings[a].isRotatable
				})
			}
		},
		visibilityChanged: function () {
			var a = this;
			this.get("isVisible") ? setTimeout(function () {
				a.$().height() < a.$(".superbox").height() && 0 === a.$("#bubbles-container").scrollTop() && a.$("#bubble-more-below").removeClass("hidden")
			}) : this.$("#bubble-more-below").addClass("hidden")
		}.observes("isVisible"),
		didInsertElement: function () {
			var a = this;
			this.$("#bubbles-container").on("scroll", function () {
				0 === $(this).scrollTop() ?
					a.$("#bubble-more-below").removeClass("hidden") : a.$("#bubble-more-below").addClass("hidden")
			})
		}
	});
	Ember.Handlebars.helper("WidgetBubbleGallery", Tawk.WidgetBubblesGallery);
	Tawk.WidgetAppearanceView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.widgetAppearance,
		elementId: "widget-appearance-view",
		controller: null,
		isGalleryView: !1,
		subViewId: "widget-appearance",
		willDestroyElement: function () {
			this.$("#widget-bg-color").ColorSelector("destroy");
			this.$("#widget-txt-color").ColorSelector("destroy");
			this.$("#bubble-bg-color").ColorSelector("destroy");
			this.$("#bubble-txt-color").ColorSelector("destroy");
			this.$("#agent-chat-bg-color").ColorSelector("destroy");
			this.$("#agent-chat-txt-color").ColorSelector("destroy");
			this.$("#visitor-chat-bg-color").ColorSelector("destroy");
			this.$("#visitor-chat-txt-color").ColorSelector("destroy");
			this._super()
		},
		willInsertElement: function () {
			this.set("positionSelectOptions", [{value: "tr", text: languageParser.translate("widgets", "top_right")}, {
				value: "tl", text: languageParser.translate("widgets",
					"top_left")
			}, {value: "cr", text: languageParser.translate("widgets", "center_right")}, {
				value: "cl",
				text: languageParser.translate("widgets", "center_left")
			}, {value: "br", text: languageParser.translate("widgets", "bottom_right")}, {
				value: "bl",
				text: languageParser.translate("widgets", "bottom_left")
			}]);
			this.set("positionSelectClass", "position-type-select")
		},
		didInsertElement: function () {
			var a = this;
			this._super();
			Tawk.routing.titlePath.subviewName = this.controller.activeWidget.name;
			Tawk.routing.titlePath.itemName = languageParser.translate("pages",
				"widget_appearance");
			Tawk.routing.setTitle();
			$("body").unbind("keydown.closeView");
			$("body").bind("keydown.closeView", function (c) {
				if (27 === c.keyCode) {
					if (!0 === a.isGalleryView) return c.stopPropagation(), a.set("isGalleryView", !1), !1;
					a.closeView()
				}
			});
			$("#close-view").unbind("click.closeView");
			$("#close-view").on("click", function (c) {
				if (!0 === a.isGalleryView) return c.stopPropagation(), a.set("isGalleryView", !1), !1;
				a.closeView()
			});
			if (/MSIE/.test(navigator.userAgent)) {
				var c = navigator.userAgent.indexOf("MSIE");
				if (-1 === c) return;
				this.set("isOldIE", 9 > parseFloat(navigator.userAgent.substring(c + 4 + 1)))
			}
			this.controller.loadWhitelabelAddon("widget-appearance", function (c) {
				c && (a.set("whitelabelCustomizationView", Tawk.WhitelabelCustomizationView.create({controller: a.controller.whitelabelController})), a.whitelabelCustomizationView.appendTo(a.$(".whitelabel-view")))
			});
			this.$("#widget-bg-color").ColorSelector({appendTo: "#widget-appearance-view"}, function (c) {
				a.controller.activeWidget.set("backgroundColor", c)
			}, a.$("#widget-bg-color"));
			this.$("#widget-txt-color").ColorSelector({appendTo: "#widget-appearance-view"}, function (c) {
				a.controller.activeWidget.set("textColor", c)
			}, a.$("#widget-txt-color"));
			this.$("#agent-chat-bg-color").ColorSelector({appendTo: "#widget-appearance-view"}, function (c) {
				a.controller.activeWidget.set("agentBubbleBg", c)
			}, this.$("#agent-chat-bg-color"));
			this.$("#agent-chat-txt-color").ColorSelector({appendTo: "#widget-appearance-view"}, function (c) {
				a.controller.activeWidget.set("agentBubbleTxt", c)
			}, this.$("#agent-chat-txt-color"));
			this.$("#visitor-chat-bg-color").ColorSelector({appendTo: "#widget-appearance-view"}, function (c) {
				a.controller.activeWidget.set("visitorBubbleBg", c)
			}, this.$("#visitor-chat-bg-color"));
			this.$("#visitor-chat-txt-color").ColorSelector({appendTo: "#widget-appearance-view"}, function (c) {
				a.controller.activeWidget.set("visitorBubbleTxt", c)
			}, this.$("#visitor-chat-txt-color"));
			this.$("#bubble-bg-color").ColorSelector({appendTo: "#widget-appearance-view"}, function (c) {
				a.controller.bubblePreview.set("bubbleBgColor",
					c)
			}, a.$("#bubble-bg-color"));
			this.$("#bubble-txt-color").ColorSelector({appendTo: "#widget-appearance-view"}, function (c) {
				a.controller.bubblePreview.set("bubbleTxColor", c)
			}, a.$("#bubble-txt-color"));
			this.controller.activeWidget && this.controller.activeWidget.isInline && (this.$().delegate("#agent-chat-bg-color, #agent-chat-txt-color, #visitor-chat-bg-color, #visitor-chat-txt-color", "show", function () {
				a.toggleChatBubbleView(!0)
			}), this.$().delegate("#agent-chat-bg-color, #agent-chat-txt-color, #visitor-chat-bg-color, #visitor-chat-txt-color",
				"hide", function () {
					a.toggleChatBubbleView()
				}));
			this.$(".top-corner.spinner").spinner({
				stop: function (c, b) {
					var e = a.$(".top-corner.spinner").spinner("value");
					null !== e && a.topCornerChanged(e)
				}
			});
			this.$(".bottom-corner.spinner").spinner({
				stop: function (c, b) {
					var e = a.$(".bottom-corner.spinner").spinner("value");
					null !== e && a.bottomCornerChanged(e)
				}
			});
			this.$(".top-corner.spinner").on("blur", function () {
				null === $(this).spinner("value") && ($(this).spinner("value", 0), a.topCornerChanged(0))
			});
			this.$(".bottom-corner.spinner").on("blur",
				function () {
					null === $(this).spinner("value") && ($(this).spinner("value", 0), a.bottomCornerChanged(0))
				});
			this.controller.activeWidget && void 0 !== this.controller.activeWidget.topCorner && this.$(".top-corner.spinner").spinner("value", this.controller.activeWidget.topCorner);
			this.controller.activeWidget && void 0 !== this.controller.activeWidget.bottomCorner && this.$(".bottom-corner.spinner").spinner("value", this.controller.activeWidget.bottomCorner);
			this.$().delegate("#open-bubble-gallery", "click", function () {
				a.set("isGalleryView",
					!0);
				return !1
			});
			this.$("#close-bubble-gallery").click(function () {
				a.set("isGalleryView", !1);
				return !1
			});
			this.$().delegate(".superbox-list", "click", function () {
				var c = $(this).attr("data-id");
				a.controller.checkAndAddOldBubble();
				c = c.replace("bubble-", "");
				$(".superbox-list").removeClass("selected");
				$(this).addClass("selected");
				$("#close-bubble-gallery").trigger("click");
				"default" === c ? a.controller.bubblePreview.set("bubbleType", "default") : a.controller.bubblePreview.set("bubbleType", "gallery");
				a.controller.bubblePreview.setProperties({
					bubbleName: c,
					bubbleInFront: 0,
					bubbleRightOffset: 0,
					bubbleBottomOffset: 0,
					bubbleLeftOffset: 0,
					bubbleTopOffset: 0,
					bubbleRotation: 0
				});
				a.set("isGalleryView", !1);
				a.set("redrawBubble", !0);
				a.bubbleChanged()
			});
			this.$().delegate("#match-bubble", "change", function () {
				a.set("redrawBubble", !0);
				a.matchTheme()
			});
			!window.FileAPIProxy && main.hasFileReader && this.$().delegate("#upload-image", "click", function () {
				$("#upload-image-input").trigger("click");
				return !1
			});
			window.FileAPIProxy && !main.hasFileReader && main.hasFlash ? (this.$("#upload-image").fileReader({
				filereader: GLOBAL_STATIC_URL +
				"/scripts/filereader.swf", debugMode: !0
			}), this.$("#upload-image").change(function (c) {
				c.target.files[0] && a.uploadBubbleFile(c.target.files[0], function () {
					a.$("#upload-image-input").val("")
				})
			})) : this.$().delegate("#upload-image-input", "change", function (c) {
				$(this)[0].files[0] && a.uploadBubbleFile($(this)[0].files[0], function () {
					a.$("#upload-image-input").val("")
				})
			});
			this.$("#turn-left").on("click", function (c) {
				c.preventDefault();
				c.stopPropagation();
				a.$(".preview-bubble.uploaded").removeClass("right-rotate left-rotate no-rotate");
				0 === a.controller.bubblePreview.bubbleRotation ? (a.controller.bubblePreview.set("bubbleRotation", -90), a.$(".preview-bubble.uploaded").addClass("right-rotate"), $(this).attr("disabled", "disabled")) : (a.controller.bubblePreview.set("bubbleRotation", 0), a.$(".preview-bubble.uploaded").addClass("no-rotate"), a.$("#turn-right").removeAttr("disabled"))
			});
			this.$("#turn-right").on("click", function (c) {
				c.preventDefault();
				c.stopPropagation();
				a.$(".preview-bubble.uploaded").removeClass("right-rotate left-rotate no-rotate");
				0 === a.controller.bubblePreview.bubbleRotation ? (a.controller.bubblePreview.set("bubbleRotation", 90), a.$(".preview-bubble.uploaded").addClass("left-rotate"), $(this).attr("disabled", "disabled")) : (a.controller.bubblePreview.set("bubbleRotation", 0), a.$(".preview-bubble.uploaded").addClass("no-rotate"), a.$("#turn-left").removeAttr("disabled"))
			});
			this.$(".preview-bubble.uploaded").draggable({
				containment: "parent", scroll: !1, start: function () {
					a.$("#preview-bubble-uploaded-limits").addClass("drag-start")
				}, stop: function () {
					a.$("#preview-bubble-uploaded-limits").removeClass("drag-start")
				}
			});
			this.$().delegate("#reset-top-corner", "click", function () {
				a.topCornerChanged(void 0)
			});
			this.$().delegate("#reset-bottom-corner", "click", function () {
				a.bottomCornerChanged(void 0)
			});
			this.$('input[name="mobile-theme"]').change(function () {
				a.controller.activeWidget.set("mobileWidget", $(this).val())
			});
			this.$('input[name="desktop-theme"]').change(function () {
				a.controller.activeWidget.set("desktopWidget", $(this).val())
			});
			this.$("#widget-appearance-form").validate({
				rules: {
					"widget-max-width": {required: !0, min: 280},
					"widget-max-height": {required: !0, min: 330},
					"widget-min-width": {required: !0, min: 126},
					"widget-min-height": {required: !0, min: 40}
				}, errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function (c) {
					a.clearSaveMessages();
					a.set("previousDimension", null);
					"upload" === a.controller.bubblePreview.bubbleType && (a.toggleChatBubbleView(), a.calculateBubbleImagePos());
					a.set("redrawBubble", !1);
					a.$("#submit").attr("disabled", "disabled").html('<i class="fa fa-refresh fa-spin"></i>');
					a.controller.saveAppearance(function (b) {
						b ?
							a.saveError() : (a.controller.deleteAllUnusedUploadedBubble(), a.whitelabelCustomizationView ? a.whitelabelCustomizationView.saveSettings(function (b) {
								b ? a.saveError() : a.saveSuccess()
							}) : a.saveSuccess());
						a.$("#widget-max").addClass("hidden");
						a.$("#widget-min").removeClass("hidden");
						a.$("#submit").removeAttr("disabled").html(languageParser.translate("buttons", "save"));
						a.set("redrawBubble", !0)
					});
					return !1
				}
			});
			this.widgetChanged();
			setTimeout(function () {
				this.$("#form-scrollable-container").height() < this.$(".table").height() &&
				0 === a.$("#form-scrollable-container").scrollTop() && a.$(".more-below").removeClass("hidden")
			});
			this.$("#form-scrollable-container").on("scroll", function () {
				"inDOM" === a._state && (0 === $(this).scrollTop() ? a.$(".more-below").removeClass("hidden") : a.$(".more-below").addClass("hidden"))
			})
		},
		isDesktopRectangle: function () {
			return "min" !== this.controller.activeWidget.desktopWidget
		}.property("controller.activeWidget.desktopWidget"),
		isDesktopWidgetFull: function () {
			return this.controller.activeWidget && "min" !== this.controller.activeWidget.desktopWidget &&
				this.controller.activeWidget.isInline
		}.property("controller.activeWidget.desktopWidget"),
		widgetChanged: function () {
			"inDOM" === this._state && (this.controller && this.controller.activeWidget) && (this.backgroundColorChanged(), this.textColorChanged(), this.agentBackgroundColorChanged(), this.agentTextColorChanged(), this.visitorBackgroundColorChanged(), this.visitorTextColorChanged(), this.minimizedWidthChanged(), this.minimizedHeightChanged(), this.controller.activeWidget && (this.topCornerChanged(this.controller.activeWidget.topCorner),
				this.bottomCornerChanged(this.controller.activeWidget.bottomCorner)), this.positionChanged(), this.bubbleChanged(!0), this.bubbleIsFrontChanged())
		}.observes("controller.activeWidget"),
		backgroundColorChanged: function () {
			this.controller.activeWidget && "inDOM" === this._state && (this.$("#widget-bg-color").ColorSelector("setColor", this.controller.activeWidget.backgroundColor), this.$(".change-background-color").css("background-color", this.controller.activeWidget.backgroundColor))
		}.observes("controller.activeWidget.backgroundColor"),
		textColorChanged: function () {
			this.controller.activeWidget && "inDOM" === this._state && (this.$("#widget-txt-color").ColorSelector("setColor", this.controller.activeWidget.textColor), this.$(".headerBoxControlsContainer").attr("class", "headerBoxControlsContainer " + getContrast(this.controller.activeWidget.textColor)), this.$(".change-text-color").css("color", this.controller.activeWidget.textColor))
		}.observes("controller.activeWidget.textColor"),
		agentBackgroundColorChanged: function () {
			this.controller.activeWidget &&
			"inDOM" === this._state && (this.$("#sample-chat-coloring .agentChatContainer").css("background-color", this.controller.activeWidget.agentBubbleBg), this.$("#agent-chat-bg-color").ColorSelector("setColor", this.controller.activeWidget.agentBubbleBg))
		}.observes("controller.activeWidget.agentBubbleBg"),
		agentTextColorChanged: function () {
			this.controller.activeWidget && "inDOM" === this._state && (this.$("#sample-chat-coloring .agentChatContainer").css("color", this.controller.activeWidget.agentBubbleTxt), this.$("#agent-chat-txt-color").ColorSelector("setColor",
				this.controller.activeWidget.agentBubbleTxt))
		}.observes("controller.activeWidget.agentBubbleTxt"),
		visitorBackgroundColorChanged: function () {
			this.controller.activeWidget && "inDOM" === this._state && (this.$("#sample-chat-coloring .visitorChatContainer").css("background-color", this.controller.activeWidget.visitorBubbleBg), this.$("#visitor-chat-bg-color").ColorSelector("setColor", this.controller.activeWidget.visitorBubbleBg))
		}.observes("controller.activeWidget.visitorBubbleBg"),
		visitorTextColorChanged: function () {
			this.controller.activeWidget &&
			"inDOM" === this._state && (this.$("#sample-chat-coloring .visitorChatContainer").css("color", this.controller.activeWidget.visitorBubbleTxt), this.$("#visitor-chat-txt-color").ColorSelector("setColor", this.controller.activeWidget.visitorBubbleTxt))
		}.observes("controller.activeWidget.visitorBubbleTxt"),
		toggleChatBubbleView: function (a) {
			void 0 !== this.$() && (a ? (this.$("#widget-max").removeClass("hidden"), this.$("#widget-min").addClass("hidden")) : (this.$("#widget-max").addClass("hidden"), this.$("#widget-min").removeClass("hidden")))
		},
		minimizedWidthChanged: function () {
			var a;
			"inDOM" === this._state && (this.controller && this.controller.activeWidget) && (a = parseInt(this.controller.activeWidget.minimizedWidth, 10), isNaN(a) || 126 > a || (390 < a ? this.$("#widget-min-preview-container").css("width", a + 10 + "px") : this.$("#widget-min-preview-container").css("width", "auto"), this.$(".inner-preview-container.rectangle-container").css("width", a - 2 + "px"), this.redrawBubble && this.bubbleChanged()))
		}.observes("controller.activeWidget.minimizedWidth"),
		minimizedHeightChanged: function () {
			var a;
			"inDOM" === this._state && (this.controller && this.controller.activeWidget) && (a = parseInt(this.controller.activeWidget.minimizedHeight, 10), isNaN(a) || 40 > a || (this.$(".inner-preview-container.rectangle-container").css("height", a - 1 + "px"), this.redrawBubble && this.bubbleChanged()))
		}.observes("controller.activeWidget.minimizedHeight"),
		topCornerChanged: function (a) {
			"inDOM" === this._state && (this.controller && this.controller.activeWidget) && (void 0 === a && (a = "tr" === this.controller.activeWidget.position || "tl" === this.controller.activeWidget.position ?
				0 : 8, this.$(".top-corner.spinner").spinner("value", a)), this.controller.activeWidget.set("topCorner", a), this.$(".inner-preview-container.rectangle-container").css({
				"border-top-right-radius": a + "px",
				"border-top-left-radius": a + "px"
			}))
		},
		bottomCornerChanged: function (a) {
			"inDOM" === this._state && (this.controller && this.controller.activeWidget) && (void 0 === a && (a = "tl" === this.controller.activeWidget.position || "tr" === this.controller.activeWidget.position ? 8 : 0, this.$(".bottom-corner.spinner").spinner("value", a)), this.controller.activeWidget.set("bottomCorner",
				a), this.$(".inner-preview-container.rectangle-container").css({
				"border-bottom-right-radius": a + "px",
				"border-bottom-left-radius": a + "px"
			}))
		},
		positionChanged: function () {
			var a, c, d;
			if ("inDOM" === this._state && this.controller && this.controller.activeWidget && this.controller.bubblePreview) {
				a = this.controller.activeWidget.position;
				c = this.controller.activeWidget.minimizedWidth;
				d = this.controller.activeWidget.minimizedHeight;
				this.$("#bubble-container").removeClass().addClass(a);
				this.$("#bubbles-container").removeClass().addClass(a);
				if ("cl" === a || "cr" === a) {
					var b = -0.5 * c + 0.5 * d, e = -0.5 * d;
					"cr" === a ? (this.isOldIE && (b = d - c), this.$(".inner-preview-container.rectangle-container").css("right", b + "px")) : (this.isOldIE && (b = 0), this.$(".inner-preview-container.rectangle-container").css("left", b + "px"));
					this.isOldIE && (e = -0.5 * c);
					this.$(".inner-preview-container.rectangle-container").css("margin", e + "px 0 0")
				}
				this.redrawBubble && (this.bubbleChanged(), "upload" === this.controller.bubblePreview.bubbleType && this.resetBubbleRotation())
			}
		}.observes("controller.activeWidget.position",
			"controller.activeWidget.minimizedWidth", "controller.activeWidget.minimizedHeight"),
		bubbleIsEnabled: function () {
			"inDOM" === this._state && (this.controller && this.controller.bubblePreview) && (this.bubbleChanged(), this.controller.bubblePreview.enabled && this.$("#form-scrollable-container").scrollTop(99999999))
		}.observes("controller.bubblePreview.enabled"),
		resetBubbleUpload: function () {
			this.hideAllBubbleSettings();
			this.$("#bubble-selection-container .btn").attr("disabled", !1)
		},
		uploadBubbleFile: function (a, c) {
			var d =
				this, b = function () {
				d.resetBubbleUpload();
				d.$("#upload-image-message-content").html(languageParser.translate("widgets", "image_upload_error"));
				d.$("#upload-image-message").removeClass("hidden")
			};
			c = c || function () {
			};
			this.hideAllBubbleSettings();
			this.$("#bubble-selection-container .btn").attr("disabled", "disabled");
			readImageFile(a, null, null, null, function (e, f) {
				e ? (d.resetBubbleUpload(), d.$("#upload-image-message-content").html(f), d.$("#upload-image-message").removeClass("hidden")) : fileUploader.getUploadHandler(function (e,
				                                                                                                                                                                        f) {
					var k, l;
					if (e) return b(), c();
					k = f.handle;
					l = a.name || a.fileName;
					progressEl = $('<div id="upload-' + k + '" class="upload-data"></div>');
					progressEl.append('<p><i class="fa fa-upload"></i>' + encodeStr(l) + "</p>");
					progressEl.append('<div class="progress progress-sm progress-striped active"><div class="progress-bar" role="progressbar" style="width: 0.5%"></div></div>');
					progressEl.on("progressUpdate", function (a, b) {
						$(this).find(".progress-bar").css("width", b + "%")
					});
					progressEl.on("uploadComplete", function (a, b) {
						$(this).remove();
						d.controller.checkAndAddOldBubble();
						d.set("redrawBubble", !1);
						d.controller.bubblePreview.setProperties({
							bubbleName: b.name,
							bubbleType: "upload",
							bubbleTopOffset: 0,
							bubbleBottomOffset: 0,
							bubbleRightOffset: 0,
							bubbleLeftOffset: 0,
							bubbleInFront: !0
						});
						d.resetBubbleUpload();
						d.$("#update-rotation-option").removeClass("hidden");
						d.bubbleChanged(!0);
						d.$("#form-scrollable-container").scrollTop(99999999)
					});
					d.$("#upload-image-progress").append(progressEl).removeClass("hidden");
					d.$("#form-scrollable-container").scrollTop(99999999);
					fileUploader.uploadBubbleFile(k, a, d.controller.activeProperty.id, !1, function (a) {
						if (a) return b(), c;
						c()
					})
				})
			})
		},
		bubbleStatusChanged: function () {
			this.controller.bubblePreview && this.controller.bubblePreview.enabled ? (this.$("#bubble-fields-container").removeClass("hidden"), this.$("#bubble-container").removeClass("hidden")) : (this.$("#bubble-fields-container").addClass("hidden"), this.$("#bubble-container").addClass("hidden"))
		},
		bubbleChanged: function (a) {
			var c, d, b, e, f;
			"inDOM" === this._state && (this.controller &&
				this.controller.activeWidget && this.controller.bubblePreview) && (this.bubbleStatusChanged(), this.hideAllBubbleSettings(), this.controller.bubblePreview.enabled && (c = this.controller.activeWidget.position, d = parseInt(this.controller.activeWidget.minimizedWidth, 10), b = parseInt(this.controller.activeWidget.minimizedHeight, 10), e = -1 !== ["cr", "tr", "br"].indexOf(c), f = -1 !== ["tr", "tl"].indexOf(c), c = -1 !== ["cr", "cl"].indexOf(c), this.controller.bubblePreview.get("isDefaultBubble") ? (this.previousDimension && this.controller.activeWidget.setProperties(self.previousDimension),
				this.drawBubble(d, b, e, f, c)) : "upload" === this.controller.bubblePreview.bubbleType ? this.setupUploadedBubbleImage(a, d, b, e, f, c) : this.setupGalleryBubble(d, b, e, f, c), this.set("redrawBubble", !0)))
		},
		setupGalleryBubble: function (a, c, d, b, e) {
			var f, g, h, k, l = {}, m = 0;
			this.$("#match-bubble-container").removeClass("hidden");
			this.$(".preview-bubble.gallery").removeClass("hidden");
			if (f = bubbleSettings[this.controller.bubblePreview.bubbleName]) if (this.set("redrawBubble", !1), this.matchTheme(), b && !f.isRotatable) this.controller.bubblePreview.setProperties({
				bubbleWidth: 0,
				bubbleHeight: 0,
				bubbleInFront: 0,
				bubbleType: "",
				bubbleName: "",
				bubbleRotation: 0,
				bubbleBottomOffset: 0,
				bubbleTopOffset: 0,
				bubbleRightOffset: 0,
				bubbleLeftOffset: 0
			}); else {
				k = f.rightOffset;
				f.isCenter ? (k = a / 2 - f.width / 2, k += 10) : "100%" === k && (k = a - f.width, k += 10);
				f.leftPadding && (k -= f.leftPadding);
				a < f.width && (k = 10);
				k = f.isCenter || "100%" === f.rightOffset ? k : f.rightOffset;
				d ? (g = k, h = 0, l.right = g + "px") : (f.isCenter ? h = k : (h = 10 + a - f.width - (k - 10), a > f.width && 0 < h ? 10 === k && (h = a - f.width) : h = 10), g = 0, l.left = h + "px");
				c = parseInt(c, 10) + f.topOffset;
				b ? l.top = c + "px" : l.bottom = c + "px";
				if (e) {
					var n, p = -1 * (0.5 * (f.width - f.height) - c), m = -0.5 * f.height;
					k -= 10;
					n = 0.5 * (a - f.width);
					m = a > f.width ? d ? m - n + k : m + n - k : m;
					d ? l.right = p + "px" : l.left = p + "px"
				}
				this.controller.bubblePreview.setProperties({
					bubbleWidth: f.width,
					bubbleHeight: f.height,
					bubbleInFront: 1 === f.zIndex ? !0 : !1,
					bubbleType: "gallery",
					bubbleRotatable: f.isRotatable
				});
				e ? this.controller.bubblePreview.setProperties({
					bubbleRotation: d ? -90 : 90,
					bubbleBottomOffset: 0,
					bubbleTopOffset: d ? g - 10 : h - 10,
					bubbleRightOffset: d ? c : 0,
					bubbleLeftOffset: d ?
						0 : c
				}) : this.controller.bubblePreview.setProperties({
					bubbleRotation: 0,
					bubbleBottomOffset: b ? 0 : c,
					bubbleTopOffset: b ? c : 0,
					bubbleRightOffset: d ? g : 0,
					bubbleLeftOffset: d ? 0 : h
				});
				l["z-index"] = f.zIndex;
				l.margin = m + "px 0 0 0";
				this.$(".preview-bubble.gallery").css(l)
			}
		},
		setupUploadedBubbleImage: function (a, c, d, b, e, f) {
			var g, h, k, l = this, m = function () {
				b ? (bubbleRight = l.controller.bubblePreview.bubbleRightOffset, bubbleLeft = "auto") : (bubbleLeft = l.controller.bubblePreview.bubbleLeftOffset, bubbleRight = "auto");
				e || f ? (bubbleBottom =
					"auto", bubbleTop = e ? l.controller.bubblePreview.bubbleTopOffset : 0.5 * (l.$("#preview-bubble-uploaded-limits").height() - c) + l.controller.bubblePreview.bubbleTopOffset) : (bubbleTop = "auto", bubbleBottom = l.controller.bubblePreview.bubbleBottomOffset);
				void 0 !== g && (g.css({
					left: bubbleLeft,
					right: bubbleRight,
					top: bubbleTop,
					bottom: bubbleBottom
				}), g.removeClass("left-rotate right-rotate no-rotate"), 90 === l.controller.bubblePreview.bubbleRotation ? (g.addClass("left-rotate"), l.$("#turn-right").attr("disabled", "disabled")) :
					-90 === l.controller.bubblePreview.bubbleRotation ? (g.addClass("right-rotate"), l.$("#turn-left").attr("disabled", "disabled")) : (g.addClass("no-rotate"), l.$("#turn-right").removeAttr("disabled"), l.$("#turn-left").removeAttr("disabled")))
			};
			this.controller && (this.controller.bubblePreview && this.controller.activeWidget) && (g = this.$(".preview-bubble.uploaded"), g.removeClass("hidden"), this.$(".upload-image-settings").removeClass("hidden"), this.$("#preview-bubble-uploaded-limits").removeClass("hidden"), a ? g.load(function () {
				h =
					g.width();
				k = g.height();
				l.controller.bubblePreview.setProperties({bubbleWidth: h, bubbleHeight: k});
				l.updateBubbleLimiter(k, h, c, d, f);
				m()
			}).attr("src", this.controller.bubblePreview.get("uploadedBubbleImage")) : (h = this.controller.bubblePreview.bubbleWidth, k = this.controller.bubblePreview.bubbleHeight, this.updateBubbleLimiter(k, h, c, d, f), m()))
		},
		updateBubbleLimiter: function (a, c, d, b, e) {
			var f = 0;
			"inDOM" === this._state && (this.controller && this.controller.bubblePreview && this.controller.activeWidget) && (e ? (0 !== this.controller.bubblePreview.bubbleRotation ?
				(e = d + 2 * a, a = c) : e = d + 2 * c, a += b + 30, f = -0.5 * e) : (e = b + a + 30, a = d + c + 5), this.$("#preview-bubble-uploaded-limits").css({
				width: a,
				height: e,
				maxWidth: a,
				maxHeight: e,
				margin: f + "px 0 0 0"
			}), 400 < a ? this.$("#widget-min-preview-container").css("width", a + 10 + "px") : this.$("#widget-min-preview-container").css("width", "auto"))
		},
		bubbleBackgroundColorChanged: function () {
			"inDOM" === this._state && this.controller.bubblePreview && (this.$("#bubble-bg-color").ColorSelector("setColor", this.controller.bubblePreview.bubbleBgColor), this.redrawBubble &&
			this.bubbleChanged())
		}.observes("controller.bubblePreview.bubbleBgColor"),
		bubbleTextColorChanged: function () {
			"inDOM" === this._state && this.controller.bubblePreview && (this.$("#bubble-txt-color").ColorSelector("setColor", this.controller.bubblePreview.bubbleTxColor), this.redrawBubble && this.bubbleChanged())
		}.observes("controller.bubblePreview.bubbleTxColor"),
		drawBubble: function (a, c, d, b, e) {
			var f, g, h = 5, k = this.controller.bubblePreview.bubbleBgColor;
			this.$("#widget-min.rtl-direction #default-bubble-container");
			this.$("#default-bubble-container").attr("style", "");
			if (f = this.$("#bubble-canvas")[0]) f.width = "146", f.height = "86", f = f.getContext("2d"), f.clearRect(0, 0, 146, 85), f.fillStyle = k, b ? (h = 15, g = 70) : g = h = 5, f.beginPath(), f.moveTo(9, h), f.lineTo(129, h), f.quadraticCurveTo(137, h, 137, h + 8), f.lineTo(137, h + 65 - 8), f.quadraticCurveTo(137, h + 65, 129, h + 65), f.lineTo(70, h + 65), f.moveTo(73, h + 65), f.lineTo(9, h + 65), f.quadraticCurveTo(1, h + 65, 1, h + 65 - 8), f.lineTo(1, h + 8), f.quadraticCurveTo(1, h, 9, h), f.closePath(), f.strokeStyle = "#e3e0e7",
				f.lineWidth = 2, f.stroke(), f.fill(), b ? (f.beginPath(), f.arc(70, h + 2, 10, 1.06 * Math.PI, 1.94 * Math.PI, !1), f.strokeStyle = "#e3e0e7", f.lineWidth = 2, f.stroke(), f.fill(), f.beginPath(), f.moveTo(83, 6), f.arc(83, 5, 5, 0, 2 * Math.PI, !1), f.closePath(), f.strokeStyle = "#e3e0e7", f.lineWidth = 2, f.stroke(), f.fill(), f.beginPath(), f.arc(135, g + 5, 10, 1.6 * Math.PI, 0.85 * Math.PI, !1)) : (f.beginPath(), f.arc(70, h + 65 - 3, 10, 0.1 * Math.PI, 0.9 * Math.PI, !1), f.strokeStyle = "#e3e0e7", f.lineWidth = 2, f.stroke(), f.fill(), f.beginPath(), f.moveTo(57, 80), f.arc(57,
				80, 5, 0, 2 * Math.PI, !1), f.closePath(), f.strokeStyle = "#e3e0e7", f.lineWidth = 2, f.stroke(), f.fill(), f.beginPath(), f.arc(135, g + 5, 10, 0.4 * Math.PI, 1.15 * Math.PI, !0)), f.fillStyle = k, f.strokeStyle = "#e3e0e7", f.lineWidth = 2, f.stroke(), f.fill(), f.beginPath(), f.moveTo(132, g + 1.5), f.lineTo(139, g + 8), f.closePath(), f.lineWidth = 2, f.strokeStyle = this.controller.bubblePreview.bubbleTxColor, f.stroke(), f.beginPath(), f.moveTo(139, g + 1.5), f.lineTo(132, g + 8), f.closePath(), f.lineWidth = 2, f.strokeStyle = this.controller.bubblePreview.bubbleTxColor,
				f.stroke(), this.$("#default-bubble-container").removeClass("hidden"), this.$(".bubble-edit-container").removeClass("hidden"), e ? (b = -1 * (30.5 - c), c = 0.5 * (a - 146), marginTop = 146 < a ? d ? -42.5 - c : -42.5 + c : -42.5, d ? (marginTop -= 10, this.$("#default-bubble-container").css("right", b + "px !important"), this.controller.get("isRTL") && (marginTop += a - 146 + 10)) : (marginTop += 10, this.$("#default-bubble-container").css("left", b + "px !important"), this.controller.get("isRTL") && (marginTop -= a - 146 + 10)), this.$("#default-bubble-container").css("margin",
				marginTop + "px 0 0 0")) : (a = a - 146 + 10 + "px", d ? this.$("#default-bubble-container").css({
				right: this.controller.get("isRTL") ? a : "10px",
				left: "auto"
			}) : this.$("#default-bubble-container").css({
				left: this.controller.get("isRTL") ? "10px" : a,
				right: "auto"
			})), this.$("#bubble-text").css("color", this.controller.bubblePreview.bubbleTxColor), this.$("#bubble-close").css("color", this.controller.bubblePreview.bubbleTxColor)
		},
		resetBubbleRotation: function () {
			"inDOM" === this._state && (this.controller && this.controller.bubblePreview) &&
			(this.$(".preview-bubble.uploaded").removeClass("left-rotate right-rotate").addClass("no-rotate"), this.$("#update-rotation-option button").removeClass("hidden"), this.controller.bubblePreview.set("bubbleRotation", 0), this.controller.bubblePreview.set("bubbleTopOffset", this.controller.activeWidget.minimizedHeight), this.controller.bubblePreview.set("bubbleBottomOffset", this.controller.activeWidget.minimizedHeight), this.controller.bubblePreview.set("bubbleLeftOffset", 0), this.controller.bubblePreview.set("bubbleRightOffset",
				0))
		},
		bubbleIsFrontChanged: function () {
			"inDOM" === this._state && (this.controller && this.controller.bubblePreview) && this.$(".preview-bubble.uploaded").css("zIndex", this.controller.bubblePreview.bubbleInFront ? 1 : 0)
		}.observes("controller.bubblePreview.bubbleInFront"),
		calculateBubbleImagePos: function () {
			var a, c, d, b, e, f, g;
			"inDOM" === this._state && (this.controller && this.controller.activeWidget && this.controller.bubblePreview) && (a = this.controller.activeWidget.position, c = parseInt(this.controller.activeWidget.minimizedWidth,
				10), parseInt(this.controller.activeWidget.minimizedHeight, 10), d = -1 !== ["cr", "tr", "br"].indexOf(a), b = -1 !== ["tr", "tl"].indexOf(a), a = -1 !== ["cr", "cl"].indexOf(a), this.$(".inner-preview-container").position(), "upload" === this.controller.bubblePreview.bubbleType && (e = this.$("#preview-bubble-uploaded-limits").width(), f = this.$("#preview-bubble-uploaded-limits").height(), g = this.$(".preview-bubble.uploaded").position()), a ? (d ? (e = 0 === this.controller.bubblePreview.bubbleRotation ? e - g.left - this.controller.bubblePreview.bubbleWidth :
				e - g.left - this.controller.bubblePreview.bubbleHeight, d = 0) : (d = g.left, e = 0), b = 0, c = g.top - 0.5 * (f - c)) : (d ? (e = e - g.left - this.controller.bubblePreview.bubbleWidth, d = 0) : (d = g.left, e = 0), b ? (b = 0, c = g.top) : (c = 0, b = f - g.top - this.controller.bubblePreview.bubbleHeight)), this.controller.bubblePreview.setProperties({
				bubbleBottomOffset: b.toFixed(2),
				bubbleTopOffset: c.toFixed(2),
				bubbleRightOffset: e.toFixed(2),
				bubbleLeftOffset: d.toFixed(2)
			}))
		},
		hideAllBubbleSettings: function () {
			this.$("#upload-image-message").addClass("hidden");
			this.$(".upload-image-settings").addClass("hidden");
			this.$("#match-bubble-container").addClass("hidden");
			this.$(".bubble-edit-container").addClass("hidden");
			this.$("#upload-image-progress").addClass("hidden");
			this.$(".gallery.preview-bubble").addClass("hidden");
			this.$("#default-bubble-container").addClass("hidden");
			this.$("#preview-bubble-uploaded-limits").addClass("hidden");
			this.$("#widget-min-preview-container").css("width", "auto")
		},
		matchTheme: function () {
			var a = this.$("#match-bubble").is(":checked"),
				c = bubbleSettings[this.controller.bubblePreview.bubbleName];
			c && (a ? (this.previousDimension || this.set("previousDimension", {
				backgroundColor: this.controller.activeWidget.backgroundColor,
				textColor: this.controller.activeWidget.textColor,
				minimizedWidth: this.controller.activeWidget.minimizedWidth,
				minimizedHeight: this.controller.activeWidget.minimizedHeight,
				agentBubbleBg: this.controller.activeWidget.agentBubbleBg,
				agentBubbleTxt: this.controller.activeWidget.agentBubbleTxt,
				visitorBubbleBg: this.controller.activeWidget.visitorBubbleBg,
				visitorBubbleTxt: this.controller.activeWidget.visitorBubbleTxt
			}), this.controller.activeWidget.set("backgroundColor", c.backgroundColor), this.controller.activeWidget.set("textColor", c.textColor), this.controller.activeWidget.set("agentBubbleBg", shadeColor(c.backgroundColor, -0.1)), this.controller.activeWidget.set("agentBubbleTxt", c.textColor), this.controller.activeWidget.set("visitorBubbleBg", "#e5e5e5"), this.controller.activeWidget.set("visitorBubbleTxt", "#333333"), c.changeWidgetSize && (this.controller.activeWidget.set("minimizedWidth",
				c.changeWidgetSize.width), this.controller.activeWidget.set("minimizedHeight", c.changeWidgetSize.height)), this.redrawBubble && this.bubbleChanged()) : this.previousDimension && this.controller.activeWidget.setProperties(this.previousDimension))
		}
	});
	Tawk.WidgetContentView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.widgetContent,
		elementId: "widget-content",
		controller: null,
		currentStatus: "online",
		isGreetings: !0,
		disabled: !1,
		currentForm: null,
		subViewId: "widget-content",
		urlPrefixList: null,
		selectedPrefixValue: null,
		prefixUrlSelectClass: null,
		parentUrlContainer: null,
		greetingsMaxLength: 150,
		newLongGreeting: null,
		isMaxLengthInvalid: !1,
		isCurrentStatusOnline: function () {
			return "online" == this.get("currentStatus")
		}.property("currentStatus"),
		isCurrentStatusAway: function () {
			return "away" == this.get("currentStatus")
		}.property("currentStatus"),
		isCurrentStatusOffline: function () {
			return "offline" == this.get("currentStatus")
		}.property("currentStatus"),
		willInsertElement: function () {
			this.set("languageSelectOptions", getVisitorLanguageSelect());
			this.set("prefixUrlSelectClass", "prefix-url-select");
			this.set("selectedPrefixValue", "http://");
			this.set("urlPrefixList", [{value: "http://", text: "http://"}, {
				value: "https://",
				text: "https://"
			}, {value: "mailto:", text: "mailto:"}])
		},
		setNewLongGreetings: function () {
			this.set("newLongGreeting", this.transformGreetings(encodeStr(this.getCurrentGreetings())))
		},
		checkMaxLength: function () {
			var a = this.transformGreetings(this.getCurrentGreetings()), c = this;
			setTimeout(function () {
				c.setNewLongGreetings()
			}, 0);
			if (!a || void 0 ===
				a) return this.set("isMaxLengthInvalid", !1);
			if (a.replace(/<\/?[^>]+(>|$)/g, "").length > this.greetingsMaxLength) return this.set("isMaxLengthInvalid", !0);
			this.set("isMaxLengthInvalid", !1)
		}.observes("currentStatus", "currentForm.text", "controller.onlineGreetingsPreview.longGreeting", "controller.awayGreetingsPreview.longGreeting"),
		checkNewLongGreetings: function () {
			this.setNewLongGreetings()
		}.observes("controller.isPrechat", "controller.prechatFormPreview.enabled"),
		didInsertElement: function () {
			var a = this, c =
				this.controller.activeWidget.languageCode;
			this._super();
			Tawk.routing.titlePath.subviewName = this.controller.activeWidget.name;
			Tawk.routing.titlePath.itemName = languageParser.translate("pages", "widget_content");
			Tawk.routing.setTitle();
			this.controller.loadWhitelabelAddon("widget-content", function (c) {
				c && (a.set("whitelabelCustomizationView", Tawk.WhitelabelCustomizationView.create({controller: a.controller.whitelabelController})), a.whitelabelCustomizationView.appendTo(a.$(".whitelabel-view")))
			});
			this.set("errorMaxLengthMsg",
				languageParser.translate("form_validation_messages", "custom_max_length", {maxLength: this.greetingsMaxLength.toString()}));
			this.setNewLongGreetings();
			this.$().undelegate("#cancel", "click");
			this.$().delegate("#cancel", "click", function () {
				a.controller.resetData();
				a.closeView();
				return !1
			});
			this.$('input[name="edit-view"]').change(function () {
				var c = $(this).val();
				"offlineForm" === c ? (a.showOfflineForm(), a.updateWindowStatus("offline")) : "prechatForm" === c ? (a.showPrechatForm(), a.updateWindowStatus("online")) : (c =
					c.split("-"), a.updateWindowStatus(c[1]), a.showGreetingsWindow())
			});
			this.$().delegate(".edit-text, .edit-icon", "click", function () {
				var c;
				c = $(this).parent();
				c.find(".edit-icon").hide();
				c.find(".edit-text").hide();
				c.find(".delete-selection").hide();
				c.next(".action-container").hide();
				$(this).hasClass("start-link") && a.$(".addLinkButtonContainer").addClass("visible");
				c = c.find(".editable-input");
				c.addClass("visible").focus();
				"textarea" === c.prop("tagName").toLowerCase() && c.height(c[0].scrollHeight + "px")
			});
			this.$().delegate(".editable-input", "blur", function () {
				var c = $(this).parent();
				a.$("#addLinkButton:hover").length ? (a.parentUrlContainer = c, a.isPositionValid() ? (this.selectionStart !== this.selectionEnd && a.$("#link-name").val(this.value.substring(this.selectionStart, this.selectionEnd)), a.$("#linkFormContainer").addClass("visible"), a.$("#widget-max-preview-container").addClass("link-form")) : (a.$("#greetingsContainer textarea.visible").focus(), a.$("#widget-form input.form-title.visible").focus(), a.$(".addLinkButtonContainer .warning.hidden").removeClass("hidden"))) :
					(a.$(".addLinkButtonContainer .warning").not(".hidden").addClass("hidden"), c.find(".edit-icon").show(), c.find(".edit-text").show(), c.find(".delete-selection").show(), c.next(".action-container").show(), c.find(".editable-input").removeClass("visible"), a.$(".addLinkButtonContainer").removeClass("visible"), $(this).valid())
			});
			this.$().delegate("#linkFormContainer #backLinkButton", "click", function () {
				a.$("#linkFormContainer").removeClass("visible");
				a.$(".warning.link-body").text("");
				a.$(".warning.link-name").text("");
				a.$(".addLinkButtonContainer .warning").not(".hidden").addClass("hidden");
				a.$("#link-body").val("");
				a.$("#link-name").val("");
				a.$("#linkFormContainer input.valid").removeClass("valid");
				a.$("#linkFormContainer .state-success").removeClass("state-success");
				a.$("#widget-max-preview-container.link-form").removeClass("link-form");
				a.$("#greetingsContainer textarea.visible").focus();
				a.$("#widget-form input.form-title.visible").focus()
			});
			this.$().delegate("textarea.editable-input", "keyup", function () {
				$(this).height("1px");
				$(this).height($(this)[0].scrollHeight + "px")
			});
			this.$("#widget-content-form").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function (c) {
					var b = a.$(".language-type-select").val();
					if ($(c).find(".max-length-error").length) $(c).find("#submit").blur(); else return a.clearSaveMessages(), a.controller.updateAllContent(b, function (b) {
						b ? a.saveError() : (a.isPrechat && a.set("currentForm", a.controller.prechatFormPreview), a.isOffline && a.set("currentForm", a.controller.offlineFormPreview),
							a.whitelabelCustomizationView ? a.whitelabelCustomizationView.saveSettings(function (b) {
								b ? a.saveError() : a.saveSuccess()
							}) : a.saveSuccess());
						setTimeout(function () {
							a.$('input[name="edit-view"]:checked').focus()
						})
					}), !1
				}
			});
			this.$().delegate("#add-phone-number", "click", function () {
				(a.isOffline || a.isPrechat && a.controller.prechatFormPreview.enabled) && a.currentForm.fieldsData.addPhoneNumber(a.controller.activeWidget.languageCode)
			});
			this.$().delegate("#add-question-inputText", "click", function () {
				(a.isOffline || a.isPrechat &&
					a.controller.prechatFormPreview.enabled) && a.currentForm.fieldsData.addInputTextQuestion(a.controller.activeWidget.languageCode)
			});
			this.$().delegate("#add-question-textArea", "click", function () {
				(a.isOffline || a.isPrechat && a.controller.prechatFormPreview.enabled) && a.currentForm.fieldsData.addTextAreaQuestion(a.controller.activeWidget.languageCode)
			});
			this.$().delegate("#add-department", "click", function () {
				(a.isOffline || a.isPrechat && a.controller.prechatFormPreview.enabled) && a.currentForm.fieldsData.addDepartment(a.controller.activeWidget.languageCode)
			});
			this.$().delegate("#add-name", "click", function () {
				(a.isOffline || a.isPrechat && a.controller.prechatFormPreview.enabled) && a.currentForm.fieldsData.addName(a.controller.activeWidget.languageCode)
			});
			this.$().delegate("#add-email", "click", function () {
				(a.isOffline || a.isPrechat && a.controller.prechatFormPreview.enabled) && a.currentForm.fieldsData.addEmail(a.controller.activeWidget.languageCode)
			});
			this.$().delegate("#add-multi-choice", "click", function () {
				(a.isOffline || a.isPrechat && a.controller.prechatFormPreview.enabled) &&
				a.currentForm.fieldsData.addMultiChoice(a.controller.activeWidget.languageCode)
			});
			this.$().delegate("#add-options", "click", function () {
				(a.isOffline || a.isPrechat && a.controller.prechatFormPreview.enabled) && a.currentForm.fieldsData.addOptions(a.controller.activeWidget.languageCode)
			});
			this.$().delegate(".add-choice", "click", function () {
				var c = $(this).parents(".field-selections"), b = $(this).attr("data-id");
				a.currentForm.fieldsData.addSelection(b);
				a.currentForm.fieldsData.fieldHasEmptySelections(b) || (c.find(".emptySelection").removeClass("selection-empty"),
					c.find(".emptySelection").valid())
			});
			this.$().delegate(".delete-selection", "click", function () {
				var c;
				c = $(this).parents(".field-selection");
				var b = c.parent(), e = $(this).parents(".field-container").attr("id");
				c = a.$("#" + e + " .field-selection").index(c);
				a.currentForm.fieldsData.removeSelection(e, c);
				a.currentForm.fieldsData.fieldHasEmptySelections(e) && (b.find(".emptySelection").addClass("selection-empty"), b.find(".emptySelection").valid())
			});
			this.$().delegate(".delete-field", "click", function () {
				var c = $(this).parents(".field-container").attr("id");
				a.currentForm.fieldsData.removeField(c)
			});
			this.$().delegate(".toggle-required", "click", function () {
				var c = $(this).parents(".field-container").attr("id");
				a.currentForm.fieldsData.toggleRequired(c)
			});
			this.$().delegate("#save-url", "click", function () {
				var c = a.$("#link-name").val(), b = a.$("#link-body").val(),
					e = a.$("select.prefix-url-select option:selected").val(),
					f = a.parentUrlContainer.find("textarea.editable-input")[0] ? a.parentUrlContainer.find("textarea.editable-input")[0] : a.parentUrlContainer.find("input.editable-input")[0],
					g = f.selectionStart, f = f.selectionEnd;
				a.checkFormUrl() || (c = "[" + c + "](" + e + b + ")", a.$("#widget-form").not(".hidden").length && a.currentForm ? a.currentForm.text ? a.currentForm.set("text", a.currentForm.text.substring(0, g) + c + a.currentForm.text.substring(f)) : a.currentForm.set("text", c) : "online" === a.get("currentStatus") ? a.controller.onlineGreetingsPreview.set("longGreeting", a.controller.onlineGreetingsPreview.longGreeting.substring(0, g) + c + a.controller.onlineGreetingsPreview.longGreeting.substring(f)) : "away" ===
					a.get("currentStatus") && a.controller.awayGreetingsPreview.set("longGreeting", a.controller.awayGreetingsPreview.longGreeting.substring(0, g) + c + a.controller.awayGreetingsPreview.longGreeting.substring(f)), a.$("#backLinkButton").click())
			});
			this.$().delegate(".language-type-select", "change", function () {
				$(this).val() !== c && (a.controller.changeGreetingsForLanguage($(this).val(), c), c = $(this).val())
			});
			this.$(".form-inner-container").sortable({
				connectWith: "form-inner-container", placeholder: "sortable-placeholder",
				forcePlaceholderSize: !0, start: function (a, b) {
					$(".form-inner-container").addClass("sortable-blurred");
					$(b.item).addClass("sortable-selected")
				}, stop: function (c, b) {
					var e = $(b.item).attr("id"), f = $(b.item).next().attr("id");
					a.$(".form-inner-container").removeClass("sortable-blurred");
					a.$(".form-inner-container").sortable("cancel");
					a.currentForm.fieldsData.moveField(e, f)
				}
			});
			this.backgroundColorChanged();
			this.textColorChanged();
			this.initializeTooltip()
		},
		checkFormUrl: function () {
			var a = this.$("#link-name").val(),
				c = this.$("#link-body").val(), d = this.$("select.prefix-url-select option:selected").val(),
				b = this.$(".warning.link-body"), e = this.$(".warning.link-name"),
				f = /[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\.[a-zA-Z]{2,})+/,
				g = /^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i;
			e.text("");
			b.text("");
			a || e.text(languageParser.translate("form_validation_messages",
				"required"));
			c ? "mailto:" !== d || g.test(c) ? d.indexOf("http") || f.test("http://" + c) || b.text(languageParser.translate("widgets", "url_invalid")) : b.text(languageParser.translate("widgets", "email_invalid")) : b.text(languageParser.translate("form_validation_messages", "required"));
			return e.text().length || b.text().length
		},
		getCurrentGreetings: function () {
			return this.isOffline || this.isPrechat && this.controller.prechatFormPreview && this.controller.prechatFormPreview.enabled && this.currentForm && this.currentForm.text ?
				this.currentForm.text : "online" === this.get("currentStatus") && this.controller.onlineGreetingsPreview ? this.controller.onlineGreetingsPreview.longGreeting : "away" === this.get("currentStatus") && this.controller.awayGreetingsPreview ? this.controller.awayGreetingsPreview.longGreeting : ""
		},
		isPositionValid: function () {
			for (var a = this.parentUrlContainer.find("textarea.editable-input").length ? this.parentUrlContainer.find("textarea.editable-input")[0] : this.parentUrlContainer.find("input.editable-input")[0], c = a.selectionStart,
				     d = a.selectionEnd, a = $(a).val(), b = /\[[^\]\(\)]+\]\((\bhttp:\/\/\b|\bhttps:\/\/\b|\bmailto:\b){1}[^\]\(\)]+\)/i, e, f, g; null !== (f = b.exec(a));) {
				e = f[0];
				g = a.indexOf(e);
				if (-1 === g) break;
				if ((c <= g || c >= g + e.length) && (d <= g || d >= g + e.length)) e = e.replace(/\[|\]|\(|\)/gi, "*"), a = a.replace(f[0], e); else return !1
			}
			return !0
		},
		initializeTooltip: function () {
			var a = this;
			setTimeout(function () {
				a.$(".action") && a.$(".action").tooltip()
			})
		},
		backgroundColorChanged: function () {
			this.controller.activeWidget && "inDOM" === this._state && $(".change-background-color").css("background-color",
				this.controller.activeWidget.backgroundColor)
		}.observes("controller.activeWidget.backgroundColor"),
		textColorChanged: function () {
			this.controller.activeWidget && "inDOM" === this._state && ($(".change-text-color").css("color", this.controller.activeWidget.textColor), $(".headerBoxControlsContainer").attr("class", "headerBoxControlsContainer " + getContrast(this.controller.activeWidget.textColor)))
		}.observes("controller.activeWidget.textColor"),
		currentStatusChanged: function () {
			this.$("#linkFormContainer.visible").length &&
			this.$("#backLinkButton").click()
		}.observes("currentStatus"),
		transformGreetings: function (a) {
			for (var c = /\[([^)]+)\]/, d = /\[[^\]\(\)]+\]\((\bhttp:\/\/\b|\bhttps:\/\/\b|\bmailto:\b){1}[^\]\(\)]+\)/i, b = a, e; null !== (e = d.exec(b)) && (b = b.replace(e[0], '<span class="link">' + c.exec(e[0])[1] + "</span>"), b !== a);) ;
			return b
		},
		closeForms: function () {
			this.set("isGreetings", !1);
			this.set("isPrechat", !1);
			this.set("isOffline", !1);
			this.set("currentForm", null);
			this.$("#widget-form").addClass("hidden");
			this.$("#chat-container-wrapper.long-wrapper").removeClass("long-wrapper");
			this.$(".fields-actions").hide()
		},
		showGreetingsWindow: function () {
			this.closeForms();
			this.set("isGreetings", !0)
		},
		updateWindowStatus: function (a) {
			["online", "away", "offline"].contains(a) && this.set("currentStatus", a)
		},
		showOfflineForm: function () {
			this.closeForms();
			this.set("isOffline", !0);
			this.set("currentForm", this.controller.offlineFormPreview);
			this.$("#widget-form").removeClass("hidden");
			this.$("#chat-container-wrapper").addClass("long-wrapper");
			this.$(".fields-actions").show().removeClass("field-disabled");
			this.initializeTooltip()
		},
		showPrechatForm: function () {
			this.closeForms();
			this.set("isPrechat", !0);
			this.set("currentForm", this.controller.prechatFormPreview);
			this.currentForm && this.currentForm.text && this.currentForm.set("text", decodeStr(this.currentForm.text));
			this.$(".fields-actions").show()
		},
		isPrechatFormEnabled: function () {
			this.isPrechat && (this.controller.activeWidget && "inDOM" === this._state) && (this.controller.prechatFormPreview && this.controller.prechatFormPreview.enabled ? (this.$("#widget-form").removeClass("hidden"),
				this.$("#chat-container-wrapper").addClass("long-wrapper"), this.$(".fields-actions").removeClass("field-disabled"), this.initializeTooltip(), 0 === this.controller.prechatFormPreview.fieldsData.parsedFields.length && (this.controller.activeProperty.isPersonal ? this.controller.prechatFormPreview.set("text", languageParser.translate("widget_preview_translation", this.controller.activeWidget.languageCode + "-prechat_title_profile")) : this.controller.prechatFormPreview.set("text", languageParser.translate("widget_preview_translation",
				this.controller.activeWidget.languageCode + "-prechat_title")))) : (this.$("#widget-form").addClass("hidden"), this.$("#chat-container-wrapper.long-wrapper").removeClass("long-wrapper"), this.$(".fields-actions").addClass("field-disabled")))
		}.observes("isPrechat", "controller.prechatFormPreview.enabled"),
		refreshSortableFields: function () {
			var a = this;
			this.currentForm && this.currentForm.fieldsData.parsedFields.length && setTimeout(function () {
				a.$(".form-inner-container") && (a.$(".form-inner-container").sortable("refresh"),
					a.$(".form-inner-container").sortable("refreshPositions"))
			}, 0)
		}.observes("currentForm.fieldsData.parsedFields.length")
	});
	Tawk.WidgetBehaviorView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.widgetBehavior,
		elementId: "widget-behavior",
		controller: null,
		subViewId: "widget-behavior",
		willInsertElement: function () {
			this.set("clickSelectOptions", [{
				value: "max",
				text: languageParser.translate("widgets", "maximize")
			}, {value: "pop", text: languageParser.translate("widgets", "popout")}]);
			this.set("clickSelectClass",
				"click-type-select")
		},
		didInsertElement: function () {
			var a = this;
			this._super();
			Tawk.routing.titlePath.subviewName = this.controller.activeWidget.name;
			Tawk.routing.titlePath.itemName = languageParser.translate("pages", "widget_behavior");
			Tawk.routing.setTitle();
			"max" === this.controller.activeWidget.onClick ? this.$("#maximize-onclick").prop("checked", "checked") : this.$("#popout-onclick").prop("checked", "checked");
			this.$("#submit").click(function () {
				a.$(".admin-form").submit()
			});
			this.$("#cancel").click(function () {
				a.closeView()
			});
			this.$(".admin-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					c = {
						disableSoundNotification: a.$("#disable-sound").is(":checked"),
						hideEstimatedWaitTime: a.$("#hide-wait-time").is(":checked"),
						hideWidgetWhenOffline: a.$("#hide-offline").is(":checked"),
						hideWidgetOnload: a.$("#hide-onload").is(":checked"),
						hideWidgetOnMobile: a.$("#hide-mobile").is(":checked")
					};
					a.$("#maximize-onclick").is(":checked") ? c.onClick = "max" : c.onClick = "pop";
					a.clearSaveMessages();
					a.controller.saveBehavior(c,
						function (c) {
							c ? a.saveError() : a.saveSuccess()
						});
					return !1
				}
			})
		}
	});
	Tawk.WidgetDomainsView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.widgetDomains,
		elementId: "widget-domains",
		controller: null,
		subViewId: "widget-domains",
		removeDomain: function (a) {
			this.controller && (this.controller.activeWidget && this.controller.domainWhiteList && "inDOM" === this.state) && (this.controller.domainWhiteList.domains.removeAt(a), 20 > this.controller.domainWhiteList.domains.length && this.controller.domainWhiteList.set("disableAdd",
				!1))
		},
		addDomain: function () {
			this.controller && (this.controller.activeWidget && this.controller.domainWhiteList && !("inDOM" !== this.state || 20 < this.controller.domainWhiteList.domains.length)) && (this.controller.domainWhiteList.domains.pushObject({
				value: "",
				id: this.controller.activeWidget.id + randomString("5", !0)
			}), 20 <= this.controller.domainWhiteList.domains.length && this.controller.domainWhiteList.set("disableAdd", !0))
		},
		didInsertElement: function () {
			var a = this;
			this._super();
			Tawk.routing.titlePath.subviewName = this.controller.activeWidget.name;
			Tawk.routing.titlePath.itemName = languageParser.translate("widgets", "domain_restriction");
			Tawk.routing.setTitle();
			this.$().undelegate("#cancel", "click");
			this.$().delegate("#cancel", "click", function () {
				a.controller.resetData();
				a.closeView();
				return !1
			});
			this.$().delegate(".delete-domain", "click", function () {
				var c = a.$("input.domain-whitelist").index($(this).nextAll("input"));
				a.removeDomain(c);
				return !1
			});
			this.$("#add-domain").click(function () {
				a.addDomain();
				return !1
			});
			this.$("#widget-domain-form").validate({
				errorPlacement: function (a,
				                          d) {
					a.insertAfter(d.parent())
				}, submitHandler: function () {
					var c = a.$("#enable-sharing").is(":checked");
					a.clearSaveMessages();
					a.controller.saveSettings(null, c, null, function (c) {
						c ? a.saveError() : a.saveSuccess()
					});
					return !1
				}
			})
		}
	});
	Tawk.WidgetSchedulerView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.widgetScheduler,
		elementId: "widget-scheduler",
		controller: null,
		scheduler: [],
		cityList: [],
		subViewId: "widget-scheduler",
		willDestroyElement: function () {
			this.scheduler.clear();
			this.cityList.clear();
			this._super()
		},
		willInsertElement: function () {
			var a = this, c = this.controller.scheduler.settings.sch, d = moment().startOf("week").day();
			Object.keys(c).forEach(function (b) {
				var e, f, g;
				e = (parseInt(b, 10) + d) % 7;
				g = c[e];
				e = 0 === g.start && 0 !== g.end ? moment().startOf("day") : 0 === g.start && 0 === g.end ? moment.duration(324E5) : moment.duration(g.start);
				f = 864E5 === g.end ? moment().add(1, "days").startOf("day") : 0 !== g.end ? moment.duration(g.end) : moment.duration(648E5);
				b = Ember.Object.create({
					index: b,
					label: moment().weekday(b).format("dddd"),
					rangeId: "range_" +
					b,
					labelId: "label_" + b,
					from: moment().locale("en").hours(e.hours()).minutes(e.minutes()).format("X"),
					to: moment().locale("en").hours(f.hours()).minutes(f.minutes()).format("X"),
					isOn: !(0 === g.start && 0 === g.end)
				});
				a.scheduler.pushObject(b)
			})
		},
		didInsertElement: function () {
			var a = this;
			this._super();
			Tawk.routing.titlePath.subviewName = this.controller.activeWidget.name;
			Tawk.routing.titlePath.itemName = languageParser.translate("widgets", "scheduler");
			Tawk.routing.setTitle();
			this.$().undelegate("#cancel", "click");
			this.$().delegate("#cancel",
				"click", function () {
					a.controller.resetData();
					a.closeView();
					return !1
				});
			setTimeout(function () {
				a.setSlider();
				a.isSchedulerEnabled()
			}, 0);
			this.$().delegate("#schedule-city", "keyup", function () {
				var c = $(this).val().trim();
				socketConnector.getCities(c, "", function (c, b) {
					var e = [], f = JSON.parse(b);
					!c && f.predictions.length && (f.predictions.forEach(function (a, b) {
						e.push({name: a.description, index: b, placeId: a.place_id})
					}), a.set("cityList", e), a.$("#schedule-city-list").removeClass("select2-display-none"))
				})
			});
			this.$().delegate(".city-select",
				"click", function () {
					var c = $(this).attr("data-id"), c = a.cityList[c];
					a.controller.scheduler.set("settings.city", c.name);
					a.controller.scheduler.set("settings.gpid", c.placeId);
					a.$("#schedule-city-list").addClass("select2-display-none")
				});
			this.$().on("click", function () {
				"inDOM" === a._state && a.$("#schedule-city-list").addClass("select2-display-none")
			});
			this.$().delegate(".day-on", "change", function () {
				var c;
				c = $(this).attr("id").replace("label_", "");
				var d = $(this).is(":checked");
				c = a.scheduler.objectAt(c);
				c.set("isOn",
					d);
				d ? (a.$("#" + c.rangeId).parent().removeClass("hidden"), a.$("#" + c.rangeId).parent().next().addClass("hidden")) : (a.$("#" + c.rangeId).parent().next().removeClass("hidden"), a.$("#" + c.rangeId).parent().addClass("hidden"))
			});
			this.$("#widget-scheduler-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function () {
					var c = {}, d = moment().startOf("week").day();
					a.clearSaveMessages();
					a.scheduler.forEach(function (a, e) {
						var f, g, h, k, l = (e + d) % 7;
						a.isOn ? (f = moment(a.from, "X").hours(), g =
							moment(a.to, "X").hours(), h = moment(a.from, "X").minutes(), k = moment(a.to, "X").minutes(), f += h / 60, g = 0 === g || isNaN(g) ? 24 : g + k / 60, c[l] = {
							start: 36E5 * f,
							end: 36E5 * g
						}) : c[l] = {start: 0, end: 0}
					});
					a.controller.saveScheduler(c, function (b) {
						b ? a.saveError() : a.saveSuccess()
					})
				}
			});
			this.$().delegate("#hours-status", "change", function () {
				a.controller.scheduler.set("enabled", $(this).is(":checked"))
			});
			this.$("#hours-status").prop("checked", a.controller.scheduler.enabled)
		},
		setSlider: function () {
			var a = this, c = {
				type: "double",
				min: moment().locale("en").startOf("day").format("X"),
				max: moment().locale("en").add(1, "days").startOf("day").format("X"),
				step: 900,
				grid_snap: !0,
				prettify_enabled: !0,
				decorate_both: !1,
				values_separator: " - ",
				prettify: function (a) {
					return moment(a, "X").format("h:mm A")
				},
				onFinish: function (c) {
					var b = parseInt($(c.input).attr("id").replace("range_", ""), 10), b = a.scheduler.objectAt(b);
					b.set("from", c.from);
					b.set("to", c.to)
				}
			};
			this.scheduler.forEach(function (d) {
				var b, e = a.$("#" + d.rangeId);
				c.from = d.from;
				"0:00" === moment(d.to, "X").locale("en").format("H:mm") && (d.to = parseInt(d.to,
					10) + 86400);
				c.to = d.to;
				e.ionRangeSlider(c);
				b = e.data("ionRangeSlider");
				a.controller.scheduler.enabled ? b.update({disable: !1}) : b.update({disable: !0});
				d.isOn ? e.parent().removeClass("hidden") : e.parent().next().removeClass("hidden")
			})
		},
		isSchedulerEnabled: function () {
			var a = this;
			"inDOM" === this.state && (this.controller && this.controller.activeWidget) && (this.controller.scheduler.enabled ? (this.$("#schedule-city").prop("disabled", !1), this.$(".day-on").each(function () {
				$(this).prop("disabled", !1)
			}), this.scheduler.forEach(function (c) {
				(c =
					a.$("#" + c.rangeId).data("ionRangeSlider")) && c.update({disable: !1})
			})) : (this.$("#schedule-city").prop("disabled", !0), this.$(".day-on").each(function () {
				$(this).prop("disabled", !0)
			}), this.scheduler.forEach(function (c) {
				(c = a.$("#" + c.rangeId).data("ionRangeSlider")) && c.update({disable: !0})
			})))
		}.observes("controller.scheduler.enabled")
	});
	Tawk.ShortcutsCSVView = Ember.View.extend({
		template: Ember.TEMPLATES.shortcutsCSVView,
		elementId: "shortcuts-csv",
		controller: null,
		classNames: "smart-form",
		saveLimit: 50,
		currentIndex: 0,
		totalSave: 0,
		successSave: [],
		didInsertElement: function () {
			var a = this;
			this.$("#cancel-upload").click(function () {
				"function" === typeof a.closeCallback && a.closeCallback()
			});
			this.$("#submit-upload").click(function () {
				a.set("isLoading", !0);
				a.$("#cancel-upload").attr("disabled", "disabled");
				a.$("#submit-upload").attr("disabled", "disabled");
				a.$(".upload-error").remove();
				a.$(".input").removeClass("state-error");
				a.saveBatch()
			});
			this.$().delegate(".remove-shortcut", "click", function () {
				var c;
				c = $(this).attr("data-id");
				(c = a.list.findProperty("id", c)) && a.list.removeObject(c)
			})
		},
		saveBatch: function () {
			var a = this, c = this.list.slice(this.currentIndex, this.currentIndex + this.saveLimit),
				d = this.$("input[name='access-type']:checked").val();
			c.length ? (this.set("currentIndex", a.currentIndex + c.length), this.set("totalSave", a.totalSave + c.length), this.controller.bulkAddShortcuts(c, d, function (b, d) {
				if (b) return "InternalServerError" === b ? errorSave(a.$(), languageParser.translate("form_validation_messages", "SERVER_ERROR")) : "UnauthorizedError" ===
				b ? errorSave(a.$(), "You do not have access to update this property.") : errorSave(a.$()), a.saveDone();
				for (var f = 0; f < d.length; f++) {
					var g = c[f], h = d[f];
					if (h.ok) a.successSave.push(g); else {
						var k;
						"SERVER_ERROR" === h.error ? k = languageParser.translate("form_validation_messages", "SERVER_ERROR") : "KEY_ALREADY_EXIST" === h.error ? (k = "This shortcut key already exists. Please remove or modify it.", a.$("#" + g.id).find(".input").addClass("state-error")) : "INVALID_ARGUMENT" === h.error && ("key" === h.field ? (k = languageParser.translate("form_validation_messages",
							"mdb_syntax"), a.$("#" + g.id).find(".input").addClass("state-error")) : "message" === h.field && (k = "Invalid message. Please make sure there is at least 1 character and at most 1000 characters", a.$("#" + g.id).find(".textarea").addClass("state-error")));
						$('<tr class="upload-error"><td colspan="3">' + k + "</td></tr>").insertAfter(a.$("#" + g.id))
					}
				}
				a.saveBatch()
			})) : this.saveDone()
		},
		saveDone: function () {
			var a = this, c = a.successSave.length, d = function () {
				a.set("totalSave", null);
				a.set("currentIndex", 0);
				a.set("isLoading",
					!1);
				a.$("#cancel-upload").removeAttr("disabled");
				a.$("#submit-upload").removeAttr("disabled");
				a.list.removeObjects(a.successSave);
				a.successSave.clear();
				0 === a.list.length && c ? (c && successSave($("#content-container"), "Successfully saved shortcuts"), a.closeCallback()) : c && successSave(a.$(), "Successfully saved " + c + " shortcuts")
			};
			c ? this.controller.reloadShortcutUpdate(function () {
				d()
			}) : d()
		}
	});
	Tawk.ShortcutsView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.propertyShortcutsView, elementId: "property-shortcuts",
		controller: null, subViewId: "shortcuts", csvListView: null, didInsertElement: function () {
			var a, c = this, d = !1, b = $("body")[0];
			this._super();
			($.hasData(b) && $._data(b)).events.keydown.every(function (b) {
				return "closeView" === b.namespace ? (a = b.handler, c.set("originalCloseFunc", a), !1) : !0
			});
			($.hasData($("#close-view")[0]) && $._data($("#close-view")[0])).events.click.every(function (a) {
				c.set("originalClickCloseFunc", a.handler);
				return !1
			});
			$("body").unbind("keydown.closeView");
			$("body").bind("keydown.closeView", function (a) {
				if (27 ===
					a.keyCode) return a.stopPropagation(), c.csvListView ? c.closeCsvListView() : c.originalCloseFunc(), !1
			});
			$("#close-view").unbind("click.closeView");
			$("#close-view").on("click.closeView", function (a) {
				a.stopPropagation();
				c.csvListView ? c.closeCsvListView() : c.originalClickCloseFunc();
				return !1
			});
			this.$().delegate("#add-shortcut", "click", function () {
				c.cleanForm();
				c.controller.openItem()
			});
			this.$().delegate('input[name="shortcut-type"]', "change", function () {
				var a = $(this).val();
				c.controller.changeShortcutType(a)
			});
			this.$().delegate('input[name="access-type"], #shortcutKey', "change", function () {
				c.$("#shortcutKey").removeClass("shortcut_exist")
			});
			this.$().delegate("#openFilter", "click", function (a) {
				$(this).parent().toggleClass("open")
			});
			$("body").bind("click.shortcutsView", function (a) {
				$(a.target).parents("#search-form").length || c.closeAdvancedFilter()
			});
			this.$("#scrollable-list").bind("scroll.list", function (a) {
				!d && c.controller.pagedList.currentData.length && $(this).scrollTop() + $(this).height() >= $(this)[0].scrollHeight -
				100 && (d = !0, c.controller.loadNextList(function (a, b) {
					d = !1;
					!a && b && c.$(".all-bulk-check").prop("checked", !1)
				}))
			});
			this.$().delegate("#search-form", "submit", function () {
				var a = {
					queryString: c.$("#search-text").val().trim(),
					isSurvey: c.$("#is-survey").is(":checked"),
					isMessage: c.$("#is-message").is(":checked"),
					isPublic: c.controller.isGlobalShortcut ? !1 : c.$("#is-public").is(":checked"),
					isPersonal: c.controller.isGlobalShortcut ? !0 : c.$("#is-personal").is(":checked"),
					isGlobal: c.controller.isGlobalShortcut
				};
				c.controller.searchList(a);
				c.closeAdvancedFilter();
				return !1
			});
			this.$().delegate("#reset-filter", "click", function () {
				c.$("#search-text").val("");
				c.$("#is-survey").prop("checked", "checked");
				c.$("#is-message").prop(":checked", "checked");
				c.$("#is-public").prop(":checked", "checked");
				c.$("#is-personal").prop(":checked", "checked");
				c.controller.resetSearch();
				c.closeAdvancedFilter();
				return !1
			});
			this.$().delegate("#close-filter", "click", function () {
				c.closeAdvancedFilter();
				return !1
			});
			this.$().delegate("#add-shortcut-option", "click", function () {
				c.controller.addOption()
			});
			this.$().delegate(".delete-option", "click", function () {
				var a = $("input.shortcut-option").index($(this).nextAll("input"));
				0 > a || 3 < a || c.controller.removeOption(a)
			});
			this.$().delegate(".open-view", "click", function () {
				c.cleanForm();
				c.resetMessageContainerHeight()
			});
			this.$("#shortcut-form").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function () {
					var a = {
						key: c.$("#shortcutKey").val(),
						message: c.$("#message").val(),
						dataType: c.$('input[name="access-type"]:checked').val(),
						options: []
					};
					c.$("input.shortcut-option").each(function () {
						var b = $(this).val().trim();
						b && a.options.push(b)
					});
					a.type = 0 < a.options.length ? "s" : "m";
					c.controller.saveShortcut(a, function (b) {
						b ? "DUPLICATE_SHORTCUT_KEY" === b ? ($.validator.messages.shortcut_exist = $.validator.format(languageParser.translate("form_validation_messages", "shortcut_exist", {
								siteName: c.controller.isGlobalShortcut ? "global" : c.controller.activeProperty.name,
								access: a.dataType
							})), c.$("#shortcutKey").addClass("shortcut_exist"), c.$("#shortcut-form").valid()) :
							c.saveError() : c.saveSuccess()
					});
					return !1
				}
			});
			this.$().delegate("#upload-csv", "click", function () {
				c.$("#csv-file").trigger("click")
			});
			this.$().delegate("#upload-csv", "mouseover", function () {
				$(this).popover("show")
			});
			this.$().delegate("#upload-csv", "mouseout", function () {
				$(this).popover("hide")
			});
			this.$().delegate("#csv-file", "change", function () {
				var a = $(this)[0].files, b = new FileReader, a = a[0], d = [];
				a && (b.readAsText(a), b.onload = function (a) {
					a = $.csv.toArrays(a.target.result);
					for (var b = 0; b < a.length; b++) {
						var e =
							a[b];
						1 < e.length && !d.findProperty("key", e[0]) && d.pushObject({
							key: e[0].trim(),
							message: e[1].trim(),
							id: d.length + randomString(10, !0),
							messageType: "message",
							messageOptions: []
						})
					}
					0 === d.length ? errorSave(c.$("#content-container"), "Nothing to be uploaded. Please make sure the data format is : <br/>shortcut1,message1<br/>shortcut2,message2") : (c.set("csvListView", Tawk.ShortcutsCSVView.create({
						controller: c.controller,
						closeCallback: c.closeCsvListView.bind(c)
					})), c.csvListView.appendTo(c.$("#content-container")), c.csvListView.set("list",
						d))
				});
				$(this).val("");
				return !1
			});
			this.resetMessageContainerHeight()
		}, closeCsvListView: function () {
			this.csvListView && (this.csvListView.remove(), this.set("csvListView", null))
		}, cleanForm: function () {
			this.$("#shortcut-form .invalid").removeClass("invalid");
			this.$("#shortcut-form .valid").removeClass("valid");
			this.$("#shortcut-form .state-error").removeClass("state-error");
			this.$("#shortcut-form .state-success").removeClass("state-success");
			this.$("#shortcut-form .shortcut_exist").removeClass("shortcut_exist");
			this.$('#shortcut-form em[for="shortcutKey"], #shortcut-form em[for="message"]').css("display", "none")
		}, resetMessageContainerHeight: function () {
			this.$("#form-scrollable-container #message").height(window.innerHeight / 4)
		}, closeAdvancedFilter: function () {
			this.$("#search-form") && this.$("#search-form .input-group-btn").removeClass("open")
		}, addWarning: function () {
			this.controller.hasBeenUpdated && this.updateWarning(languageParser.translate("admin", "item_has_been_updated", {
				itemType: languageParser.translate("shortcuts",
					"shortcut_key"), itemName: this.controller.previousName
			}))
		}.observes("controller.hasBeenUpdated")
	});
	Tawk.TriggerConditionView = Ember.View.extend({
		template: Ember.TEMPLATES["condition-view"],
		classNames: ["condition-view"],
		mainConditons: null,
		selectTypes: null,
		condition: null,
		propertyId: null,
		valueInput: null,
		valueSelection: null,
		isInputText: null,
		isSelect: null,
		populateSelectTypes: function (a, c) {
			var d, b = mainConditionsOptions[c][a], e = b.conditional_select;
			d = b.values;
			var f = this, g = {
				integer: integerCheck, string: stringsCheck,
				limit_string: limitStringsCheck
			};
			g[e] && g[e].forEach(function (a) {
				var b = {index: a, value: languageParser.translate("triggers", a)};
				f.condition && f.condition.operation === a && (b.isSelected = !0);
				f.selectTypes.push(b)
			});
			"integer" !== e && "integer_no_op" !== e || !this.condition.value || this.condition.set("value", parseInt(this.condition.value, 10));
			"boolean" === e || "integer_no_op" === e ? this.set("condition.operation", null) : this.condition.operation || this.set("condition.operation", this.selectTypes[0].index);
			d ? (this.set("isSelect",
				!0), this.set("valueSelection", []), b.values = "function" === typeof b.values ? b.values(this.propertyId) : b.values, Array.isArray(b.values) ? (b.values.forEach(function (a, c) {
				var d, e;
				"object" !== typeof a || a instanceof String ? (e = d = a, b.tolowercase && (d = d.replace(" ", "_").toLowerCase()), b.isTime && (e = parseInt(a, 10), 0 < e && 60 > e ? e = moment.duration(e, "seconds").humanize() : 60 <= e ? (e /= 60, e = 60 <= e ? moment.duration(e / 60, "hours").humanize() : moment.duration(e, "minutes").humanize()) : e = languageParser.translate("triggers", "no_delay"))) :
					(e = a.value.toString(), d = a.id);
				e = {index: d, value: e};
				f.condition && (d === f.condition.value ? e.isSelected = !0 : e.value === f.condition.value && (e.isSelected = !0));
				f.valueSelection.push(e)
			}), "boolean" === e && (!0 === this.condition.value || null === this.condition.value ? (this.set("condition.value", "is_true"), this.set("valueSelection.0.isSelected", !0)) : (this.set("condition.value", "is_false"), this.set("valueSelection.1.isSelected", !0))), this.condition.value || this.set("condition.value", this.valueSelection[0].index)) : this.condition.value ||
				this.set("condition.value", this.valueSelection.length ? this.valueSelection[0].index : "")) : "boolean" !== e && (d = Ember.Object.create({
				classNames: "required condition-input",
				id: this.condition.valueId,
				name: this.condition.valueId,
				placeholder: ""
			}), "integer" === e || "integer_no_op" === e ? d.classNames += " digits" : d.maxlength = 500, "ip" === a && (d.classNames += " ipAddress"), b.isUrl && (f.condition.operation && "eq" !== f.condition.operation && "not" !== f.condition.operation || (d.classNames += " url"), d.maxlength = 2048), f.condition && (d.value =
				0 === f.condition.value ? 0 : decodeStr(f.condition.value)), this.set("valueInput", d), this.set("isInputText", !0))
		},
		didInsertElement: function () {
			var a = this;
			this.set("mainConditons", []);
			this.set("selectTypes", []);
			this.set("valueSelection", []);
			this.set("isInputText", !1);
			this.set("isSelect", !1);
			this.set("valueInput", Ember.Object.create());
			var c = $(".run-type-select").val() || "widget_loaded";
			Object.keys(mainConditionsOptions).forEach(function (d) {
				var b = {groupKey: d, keySelection: []};
				Object.keys(mainConditionsOptions[d]).forEach(function (e) {
					var f =
						mainConditionsOptions[d][e].trigger_type_select, f = {
						triggerTypeSelect: mainConditionsOptions[d][e].trigger_type_select,
						triggerTypeEnabled: f && -1 !== f.indexOf(c),
						index: d + "-" + e,
						value: languageParser.translate("triggers", e),
						key: e
					};
					a.condition && a.condition.field === e && (a.populateSelectTypes(e, d), a.set("condition.hint", mainConditionsOptions[d][e].hint), a.set("condition.group", d), f.isSelected = !0);
					b.keySelection.push(f)
				});
				a.mainConditons.push(b)
			});
			this.condition.field || (this.set("condition.field", this.mainConditons[0].keySelection[0].key),
				this.set("condition.hint", mainConditionsOptions[this.mainConditons[0].groupKey][this.condition.field].hint), this.set("condition.group", this.mainConditons[0].groupKey), this.populateSelectTypes(this.mainConditons[0].keySelection[0].key, this.mainConditons[0].groupKey));
			this.condition.id || this.set("condition.id", this.condition.group + "-" + this.condition.field);
			this.$(".condition").change(function () {
				var c = $(this).val().split("-"), b = c[1], c = c[0];
				a.set("condition.valueId", "value" + randomString(10, !0));
				a.set("condition.value",
					null);
				a.set("condition.operation", null);
				a.set("condition.hint", mainConditionsOptions[c][b].hint);
				a.$("label.error").html("").hide();
				a.set("selectTypes", []);
				a.set("valueSelection", []);
				a.set("isInputText", !1);
				a.set("isSelect", !1);
				a.set("valueInput", Ember.Object.create());
				a.populateSelectTypes(b, c)
			});
			this.$(".condition").on("resetField", function () {
				$(this).val(a.mainConditons[0].keySelection[0].index);
				a.set("condition.field", a.mainConditons[0].keySelection[0].key);
				$(this).trigger("change")
			});
			this.$().delegate(".operation",
				"change", function () {
					var a = $(this).val(), b = $(this).parents(".condition-view").find(".condition"),
						c = $(this).parents(".condition-view").find(".condition-input");
					c.length && b.length && (b = b.find("option:selected").val(), "page_info-page_url" === b && ("contains" === a || "ncontains" === a ? c.removeClass("url") : c.addClass("url")), "visitor_location-ip" === b && ("contains" === a || "ncontains" === a ? (c.removeClass("ipAddress"), c.addClass("partial_ip")) : (c.removeClass("partial_ip"), c.addClass("ipAddress"))), c.valid())
				})
		}
	});
	Ember.Handlebars.helper("TriggerConditionView",
		Tawk.TriggerConditionView);
	Tawk.TriggerActionView = Ember.View.extend({
		template: Ember.TEMPLATES["action-view"],
		classNames: ["action-view"],
		actionsList: null,
		action: null,
		selectTypes: null,
		willInsertElement: function () {
			var a = this, c = [];
			this.set("actionsList", []);
			Object.keys(actionsOptions).forEach(function (d) {
				var b = {value: d, text: languageParser.translate("triggers", d)};
				a.actionsList.push(d);
				a.action && a.action.action === d && (a.populateInputFields(d), b.isSelected = !0);
				c.push(b)
			});
			this.set("actionSelectOptions",
				c)
		},
		populateInputFields: function (a) {
			var c = actionsOptions[a];
			a = c.type;
			var d = c.values, b = this;
			this.set("valueSelection", []);
			this.set("inputFields", []);
			this.set("isInputText", !1);
			this.set("isSelect", !1);
			"integer" === a ? (this.set("isSelect", !0), Array.isArray(this.action.value) && this.set("action.value", this.action.value.join(",")), d.forEach(function (a) {
				var d = a, g = a, h = !1;
				c.isTime && (a = parseInt(a, 10), 0 < a && 60 > a ? a = moment.duration(a, "seconds").humanize() : 60 <= a ? (a /= 60, a = 60 <= a ? moment.duration(a / 60, "hours").humanize() :
					moment.duration(a, "minutes").humanize()) : a = languageParser.translate("triggers", "no_delay"));
				parseInt(b.action.value, 10) === parseInt(g, 10) && (b.set("action.parsedValue", a), h = !0);
				b.valueSelection.push({index: d, value: a.toString(), isSelected: h})
			}), null === this.action.value && (this.set("action.value", b.valueSelection[0].value), this.set("action.parsedValue", this.action.value))) : "string" === a && (this.set("isInputText", !0), d.forEach(function (a, d) {
				var g = {
					classNames: "required action-input",
					name: b.elementId + d + b.action.valueId,
					id: b.elementId + d + b.action.valueId,
					maxlength: "500",
					placeholder: languageParser.translate("triggers", a),
					isInput: !0
				};
				"textArea" === c.inputType[d] && (g.classNames += " action-textarea", g.isInput = !1);
				b.inputFields.push(g);
				null !== b.action.value && (g.value = decodeStr(b.action.value[d]))
			}))
		},
		didInsertElement: function () {
			var a = this;
			this.action.action || (this.set("action.action", this.actionsList[0]), this.populateInputFields(this.actionsList[0]));
			this.$("select.action-type-select").change(function () {
				a.set("action.valueId",
					"value" + randomString(10, !0));
				a.set("action.value", null);
				a.populateInputFields($(this).val())
			})
		}
	});
	Ember.Handlebars.helper("TriggerActionView", Tawk.TriggerActionView);
	Tawk.TriggerFromView = Ember.View.extend({
		template: Ember.TEMPLATES.triggerForm,
		elementId: "trigger-form",
		controller: null,
		tagName: "form",
		classNames: ["smart-form", "admin-form"],
		willInsertElement: function () {
			this.set("delaySelectOptions", [{value: "0", text: languageParser.translate("triggers", "no_delay")}, {
				value: "10", text: languageParser.translate("triggers",
					"second_10")
			}, {value: "20", text: languageParser.translate("triggers", "second_20")}, {
				value: "30",
				text: languageParser.translate("triggers", "second_30")
			}, {value: "45", text: languageParser.translate("triggers", "second_45")}, {
				value: "60",
				text: languageParser.translate("triggers", "minute_1")
			}, {value: "120", text: languageParser.translate("triggers", "minute_2")}, {
				value: "180",
				text: languageParser.translate("triggers", "minute_3")
			}, {value: "240", text: languageParser.translate("triggers", "minute_4")}, {
				value: "300", text: languageParser.translate("triggers",
					"minute_5")
			}, {value: "600", text: languageParser.translate("triggers", "minute_10")}, {
				value: "900",
				text: languageParser.translate("triggers", "minute_15")
			}, {value: "1200", text: languageParser.translate("triggers", "minute_20")}, {
				value: "1800",
				text: languageParser.translate("triggers", "minute_30")
			}, {value: "3600", text: languageParser.translate("triggers", "hour_1")}]);
			this.set("delaySelectClass", "delay-type-select");
			this.set("delaySelectValue", this.controller.activeTrigger && this.controller.activeTrigger.delay ? this.controller.activeTrigger.delay :
				"0");
			this.set("runSelectOptions", [{
				value: "widget_loaded",
				text: languageParser.translate("triggers", "widget_loaded")
			}, {
				value: "chat_requested",
				text: languageParser.translate("triggers", "chat_requested")
			}, {value: "send_message", text: languageParser.translate("triggers", "chat_sent")}]);
			this.set("runSelectClass", "run-type-select");
			this.set("runSelectValue", this.controller.activeTrigger && this.controller.activeTrigger.trigger ? this.controller.activeTrigger.trigger : "widget_loaded");
			this.set("matchSelectOptions",
				[{value: "all", text: languageParser.translate("triggers", "all")}, {
					value: "any",
					text: languageParser.translate("triggers", "any")
				}]);
			this.set("matchSelectClass", "match-type-select");
			this.set("matchSelectValue", this.controller.activeTrigger && this.controller.activeTrigger.match ? this.controller.activeTrigger.match : "all")
		},
		delayChanged: function () {
			"inDOM" === this._state && this.set("delaySelectValue", this.controller.activeTrigger && this.controller.activeTrigger.delay ? this.controller.activeTrigger.delay : "0")
		}.observes("controller.activeTrigger.delay"),
		isVisible: function () {
			return this.controller && this.controller.activeTrigger ? !0 : !1
		}.property("controller.activeTrigger"),
		totalConditionsObserver: function () {
			var a = this;
			"inDOM" === this._state && (this.controller.activeTrigger && this.controller.activeTrigger.conditions) && setTimeout(function () {
				1 === a.controller.activeTrigger.conditions.length ? a.$(".delete-condition").addClass("hidden") : a.$(".delete-condition").removeClass("hidden")
			}, 100)
		}.observes("controller.activeTrigger.conditions.length"),
		totalActionsObserver: function () {
			var a =
				this;
			"inDOM" === this._state && (this.controller.activeTrigger && this.controller.activeTrigger.conditions) && setTimeout(function () {
				1 === a.controller.activeTrigger.actions.length ? a.$(".delete-action").addClass("hidden") : a.$(".delete-action").removeClass("hidden")
			}, 100)
		}.observes("controller.activeTrigger.actions.length"),
		didInsertElement: function () {
			var a = this;
			this.$().delegate("#trigger-type", "change", function () {
				$(this).val();
				a.controller.changeAddFormType($(this).val())
			});
			this.$().delegate("#add-condition",
				"click", function () {
					a.controller.addTriggerCondition()
				});
			this.$().delegate("#add-action", "click", function () {
				a.controller.addTriggerAction()
			});
			this.$().delegate(".delete-condition", "click", function () {
				var c = $(this).parent().find(".condition-item").val();
				a.controller.removeCondition(c)
			});
			this.$().delegate(".delete-action", "click", function () {
				var c = $(this).parent().find(".action-item").val();
				a.controller.removeAction(c)
			});
			this.$().delegate(".run-type-select", "change", function () {
				var c = $(this).val();
				mainConditionsOptions.chat_info.department.trigger_type_select.contains(c) ?
					a.$('option[value="chat_info-department"]').removeAttr("disabled") : a.$('option[value="chat_info-department"]').attr("disabled", !0);
				mainConditionsOptions.chat_info.message.trigger_type_select.contains(c) ? a.$('option[value="chat_info-message"]').removeAttr("disabled") : a.$('option[value="chat_info-message"]').attr("disabled", !0)
			})
		},
		activeTriggerChanged: function () {
			"inDOM" === this._state && (this.controller && this.controller.activeTrigger && this.controller.activeTrigger.isAdvanced) && (this.set("runSelectValue",
				this.controller.activeTrigger && this.controller.activeTrigger.trigger ? this.controller.activeTrigger.trigger : "widget_loaded"), this.set("matchSelectValue", this.controller.activeTrigger && this.controller.activeTrigger.match ? this.controller.activeTrigger.match : "all"))
		}.observes("controller.activeTrigger")
	});
	Ember.Handlebars.helper("TriggerFromView", Tawk.TriggerFromView);
	Tawk.TriggersView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.triggersView, elementId: "property-triggers", controller: null,
		subViewId: "triggers", didInsertElement: function () {
			var a = this;
			this._super();
			this.$("#trigger-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					a.clearSaveMessages();
					a.controller.activeTrigger.isAdvanced ? a.saveAdvancedTrigger(c) : a.saveBasicTrigger(c);
					return !1
				}
			})
		}, saveBasicTrigger: function () {
			var a = !!this.controller.activeTrigger.id, c = this, d = {
				name: c.$("#trigger-name").val().trim(),
				delay: c.$(".delay-type-select").val(),
				pageUrl: c.$("#trigger-url").length ?
					c.$("#trigger-url").val().trim().toLowerCase() : null,
				sender: c.$("#trigger-agent").val().trim(),
				message: c.$("#trigger-message").val().trim()
			};
			c.$("#trigger-status").length && (d.enabled = c.$("#trigger-status").is(":checked"));
			c.controller.saveBasicTrigger(d, function (b) {
				b ? c.saveError(a ? null : languageParser.translate("form_validation_messages", "trigger_add_error")) : c.saveSuccess(a ? null : languageParser.translate("form_validation_messages", "trigger_add_success"))
			})
		}, saveAdvancedTrigger: function (a) {
			var c = !!this.controller.activeTrigger.id,
				d = this, b = !1, e = {
					name: d.$("#trigger-name").val().trim(),
					description: d.$("#trigger-description").val().trim(),
					execute: d.$("#trigger-execute").is(":checked"),
					trigger: d.$(".run-type-select").val(),
					match: d.$(".match-type-select").val(),
					conditions: [],
					actions: []
				}, f = [];
			d.$("#trigger-status").length && (e.enabled = d.$("#trigger-status").is(":checked"));
			$(a).find(".condition-view").each(function (a, b) {
				var c, d, f;
				f = $(b).find(".condition").val();
				var n = $(b).find(".condition-input").val();
				-1 !== f.indexOf("-") ? (f = f.split("-"),
					c = f[0], f = f[1]) : c = "time_date";
				if (mainConditionsOptions[c] && mainConditionsOptions[c][f]) {
					c = mainConditionsOptions[c][f];
					c.tolowercase && (n = n.toLowerCase());
					if ("integer" === c.conditional_select || "string" === c.conditional_select || "limit_string" === c.conditional_select) d = $(b).find(".operation").val();
					"boolean" === c.conditional_select && (d = "eq", n = "is_true" === n ? !0 : !1);
					e.conditions.push({field: f, operation: d, value: n})
				}
			});
			$(a).find(".action-view").each(function (c, h) {
				var k = [], l = $(h).find(".action-type-select").val();
				if (actionsOptions[l]) {
					$(h).find(".action-input").each(function (a, b) {
						k.push($(b).val())
					});
					if (-1 !== f.indexOf(l)) return b = !0, d.saveError(languageParser.translate("triggers", "no_repeat_action"));
					$("#actions-general-error", a).html("").hide();
					e.actions.push({action: l, value: k});
					f.push(l)
				}
			});
			if (b) return !1;
			d.controller.saveTrigger(e, function (a) {
				a ? d.saveError(c ? null : languageParser.translate("form_validation_messages", "trigger_add_error")) : d.saveSuccess(c ? null : languageParser.translate("form_validation_messages",
					"trigger_add_success"))
			});
			return !1
		}
	});
	Tawk.BanView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.banView,
		elementId: "property-ban",
		controller: null,
		subViewId: "ban-list",
		didInsertElement: function () {
			var a = this, c = !1;
			this._super();
			this.$("#scrollable-list").bind("scroll.list", function (d) {
				!c && a.controller.pagedList.currentData.length && $(this).scrollTop() + $(this).height() >= $(this)[0].scrollHeight - 100 && (c = !0, a.controller.loadNextList(function (b, d) {
					c = !1;
					!b && d && a.$(".all-bulk-check").prop("checked",
						!1)
				}))
			});
			this.$("#ban-form").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function () {
					var c = a.$("#ban-reason").val(), b = a.$("#ban-entry").val();
					a.controller.submitBan(b, c, function (b) {
						b ? a.saveError() : a.saveSuccess()
					});
					return !1
				}
			});
			this.$("#search-form").submit(function () {
				var c = a.$("#search-text").val().trim();
				a.controller.searchList(c);
				return !1
			})
		}
	});
	Tawk.MailSettingsView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.mailSettings, elementId: "mail-settings-view",
		controller: null, subViewId: "mail-settings", willInsertElement: function () {
			var a, c, d = [];
			this.controller.activeProperty && this.controller.activeProperty.id && (a = Tawk.webProperties.getProperty(this.controller.activeProperty.id)) && ((c = a.currentAgents.getEach("aid")) && (d = Tawk.agentsController.agentDropDownList.filter(function (a) {
				return a.isActive && c.contains(a.id) ? !0 : !1
			})), this.set("agentList", sortList(d, "name")))
		}, didInsertElement: function () {
			var a = this, c = ["all-chats-additional-email", "new-ticket-additional-email",
				"offline-message-additional-email", "missed-additional-email"], d = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.obj.whitespace("name"),
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				local: this.agentList.copy()
			}), b;
			for (b = 0; b < d.local.length; b++) d.local[b].name = decodeStr(d.local[b].name);
			d.initialize();
			for (b = 0; b < c.length; b++) a.createTagEvents("#" + c[b], d);
			this.$().delegate("#cancel", "click", function (b) {
				b.stopPropagation();
				a.closeView();
				return !1
			});
			this._super();
			this.setAgentList();
			this.controller.getEmailSettings(function () {
				a.fillTagsInput(a.$("#all-chats-additional-email input.email-tags"),
					a.controller.emailSettings.chat.target);
				a.fillTagsInput(a.$("#new-ticket-additional-email input.email-tags"), a.controller.emailSettings.ticket.target);
				a.fillTagsInput(a.$("#offline-message-additional-email input.email-tags"), a.controller.emailSettings.offline.target);
				a.fillTagsInput(a.$("#missed-additional-email input.email-tags"), a.controller.emailSettings.missed.target);
				a.$("#all-email-select").val(a.controller.emailSettings.chat.group);
				a.$("#new-email-select").val(a.controller.emailSettings.ticket.group);
				a.$("#offline-email-select").val(a.controller.emailSettings.offline.group);
				a.$("#missed-email-select").val(a.controller.emailSettings.missed.group)
			});
			this.$().delegate("#all-email-select", "change", function () {
				a.controller.set("emailSettings.chat.group", $(this).val())
			});
			this.$().delegate("#new-email-select", "change", function () {
				a.controller.set("emailSettings.ticket.group", $(this).val())
			});
			this.$().delegate("#offline-email-select", "change", function () {
				a.controller.set("emailSettings.offline.group", $(this).val())
			});
			this.$().delegate("#missed-email-select", "change", function () {
				a.controller.set("emailSettings.missed.group", $(this).val())
			});
			this.$("#mail-settings-form").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function (b) {
					var c = a.controller.emailSettings;
					c.chat.group = a.$("#all-email-select").val();
					c.ticket.group = a.$("#new-email-select").val();
					c.offline.group = a.$("#offline-email-select").val();
					c.missed.group = a.$("#missed-email-select").val();
					a.splitAgentTagsToTagers(c.chat,
						a.$("#all-chats-additional-email input.email-tags").tagsinput("items"));
					a.splitAgentTagsToTagers(c.ticket, a.$("#new-ticket-additional-email input.email-tags").tagsinput("items"));
					a.splitAgentTagsToTagers(c.offline, a.$("#offline-message-additional-email input.email-tags").tagsinput("items"));
					a.splitAgentTagsToTagers(c.missed, a.$("#missed-additional-email input.email-tags").tagsinput("items"));
					a.controller.saveEmailSettings(c, function (b) {
						b ? a.saveError() : (a.controller.set("emailSettings", c), a.saveSuccess())
					});
					return !1
				}
			})
		}, fillTagsInput: function (a, c) {
			var d, b;
			for (d = 0; d < c.a.length; d++) (b = this.agentList.findProperty("id", c.a[d])) && a.tagsinput("add", {
				id: b.id,
				name: b.name
			});
			for (d = 0; d < c.e.length; d++) a.tagsinput("add", {id: c.e[d], name: c.e[d]})
		}, splitAgentTagsToTagers: function (a, c) {
			a.target = {a: [], e: []};
			for (var d = 0; d < c.length; d++) isEmail(c[d].id) ? a.target.e.push(c[d].id) : a.target.a.push(c[d].id)
		}, createTagEvents: function (a, c) {
			var d = this, b = a + " input.email-tags";
			d.$(b).tagsinput({
				itemText: "name",
				itemValue: "id",
				onTagExists: function (c,
				                       f) {
					var g;
					if (c.id === c.name && d.agentList.findProperty("name", c.name) && (g = d.findFreeAgentIdForName(d.$(b).tagsinput("items"), c.name))) {
						d.$(b).tagsinput("add", {id: g, name: c.name});
						return
					}
					d.$(a + " label.error-msg").text(languageParser.translate("form_validation_messages", "agent_tag_already_exist"));
					d.$(a + " .tt-menu.tt-open").removeClass("tt-open");
					d.$(a + " .tt-menu").hide()
				},
				typeaheadjs: {source: c.ttAdapter(), displayKey: "name", highlight: !0},
				freeInput: !0,
				maxChars: 255,
				maxTags: 10
			});
			d.$(b).tagsinput("input").on("keydown",
				function (a) {
					if (13 === a.keyCode && $(this).val()) return d.$(b).tagsinput("add", {
						id: d.findFreeAgentIdForName(d.$(b).tagsinput("items"), $(this).val()) || $(this).val(),
						name: $(this).val()
					}), !1;
					13 != a.keyCode && d.$("label.error-msg").text("")
				});
			d.$(b).tagsinput("input").on("blur", function () {
				$(this).val() && d.$(b).tagsinput("add", {id: $(this).val(), name: $(this).val()})
			});
			d.$(b).on("beforeItemAdd", function (b) {
				var c = null, g = $(this).tagsinput("items");
				d.$(a + " label.error-msg").text("");
				b.item && b.item.name && (255 < b.item.name.length ?
					c = languageParser.translate("form_validation_messages", "tag_length_exceed") : d.agentList.findProperty("name", b.item.name) && !d.agentList.findProperty("id", b.item.id) ? g.findProperty("name", b.item.name) && ((newId = d.findFreeAgentIdForName(g, b.item.name)) ? b.item.id = newId : c = languageParser.translate("form_validation_messages", "agent_tag_already_exist")) : d.agentList.findProperty("id", b.item.id) || "#new-ticket-additional-email" !== a ? isEmail(b.item.name) || d.agentList.findProperty("id", b.item.id) || (c = languageParser.translate("form_validation_messages",
						"email")) : c = languageParser.translate("form_validation_messages", "name_agent_not_found"), c && (b.cancel = !0, d.$(a + " label.error-msg").text(c), d.$(a + " .tt-menu.tt-open").removeClass("tt-open"), d.$(a + " .tt-menu").hide()))
			});
			d.$(b).on("itemAdded", function () {
				var a, c = d.$(".bootstrap-tagsinput").width() - 55, g = 0;
				d.$(".tag").each(function (a, b) {
					g += $(b).outerWidth(!0);
					$(b).css("max-width", c)
				});
				a = c - g;
				100 > a && (a = 100);
				d.$(".tt-input")[0].style.cssText += "min-width : " + a + "px !important";
				d.$(b).tagsinput("input").typeahead("val",
					"")
			})
		}, findFreeAgentIdForName: function (a, c) {
			for (var d = 0; d < this.agentList.length; d++) if (this.agentList[d].name === c && !a.findProperty("id", this.agentList[d].id)) return this.agentList[d].id
		}, setAgentList: function () {
			var a, c, d = [];
			"inDOM" === this._state && (this.controller.activeProperty && this.controller.activeProperty.id) && (a = Tawk.webProperties.getProperty(this.controller.activeProperty.id)) && ((c = a.currentAgents.getEach("aid")) && (d = Tawk.agentsController.agentDropDownList.filter(function (a) {
				return a.isActive &&
				c.contains(a.id) ? !0 : !1
			})), this.set("agentList", sortList(d, "name")))
		}
	});
	Tawk.PageContentView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.pageContent,
		elementId: "page-content",
		subViewId: "page-content",
		didInsertElement: function () {
			var a = this, c = {filereader: GLOBAL_STATIC_URL + "/scripts/filereader.swf", debugMode: !0};
			this._super();
			main.hasFileReader || main.hasFlash || main.showUnexpectedIssue("filereader_unsupported");
			main.hasUserMedia || (main.hasFlash || desktopConnector.enabled()) || main.showUnexpectedIssue("usermedia_unsupported");
			this.$().delegate(".page-photo-select", "click", function () {
				var c = $(this).attr("id");
				a.clearSaveMessages();
				"upload" === c && !window.FileAPIProxy && main.hasFileReader ? a.$("#photo-image").trigger("click") : "capture" === c && main.hasUserMedia ? a.controller.openCamera() : "remove" === c && a.controller.removeLogo()
			});
			window.FileAPIProxy && !main.hasFileReader && main.hasFlash ? (this.$("#upload").fileReader(c), this.$("#upload").change(function (c) {
				c.target.files[0] && a.controller.uploadPhoto(c.target.files[0], {width: 200, height: 200},
					{width: 137, height: 137}, "page-profile")
			})) : this.$().delegate("#photo-image", "change", function () {
				var c = $(this)[0].files;
				c[0] && (a.controller.uploadPhoto(c[0], {width: 200, height: 200}, {
					width: 137,
					height: 137
				}, "page-profile"), a.$("#photo-image").val(""));
				return !1
			});
			this.$().delegate(".page-header-select", "click", function () {
				var c = $(this).attr("id");
				a.clearSaveMessages();
				"upload-header" === c && !window.FileAPIProxy && main.hasFileReader ? a.$("#header-image").trigger("click") : "remove-header" === c && a.controller.removeHeader()
			});
			window.FileAPIProxy && !main.hasFileReader && main.hasFlash ? (this.$("#upload-header").fileReader(c), this.$("#upload-header").change(function (c) {
				c.target.files[0] && a.controller.uploadPhoto(c.target.files[0], {width: 500, height: 190}, {
					width: 500,
					height: 190
				}, "page-header")
			})) : this.$().delegate("#header-image", "change", function () {
				var c = $(this)[0].files;
				c[0] && (a.controller.uploadPhoto(c[0], {width: 500, height: 190}, {
					width: 500,
					height: 190
				}, "page-header"), a.$("#header-image").val(""));
				return !1
			});
			this.$().delegate("#tags",
				"keyup", function () {
					var c = [], b = !1, e = [], f = $(this);
					$(this).val() && (c = $(this).val().split(","));
					c.every(function (a) {
						a = a.trim();
						if (100 < a.length) return f.addClass("invalid-length"), e = [], b = !0, !1;
						-1 === e.indexOf(a) && e.push(encodeStr(a));
						return !0
					});
					5 < e.length && (f.addClass("invalid-total"), b = !0);
					b || ($(this).removeClass("invalid-length"), $(this).removeClass("invalid-total"), a.controller.customization.set("tagList", e), a.controller.customization.set("tags", e.join(", ")))
				});
			this.$("#page-content-form").validate({
				errorPlacement: function (a,
				                          b) {
					a.insertAfter(b.parent())
				}, submitHandler: function (c) {
					var b;
					a.$("#page-status") && (b = a.$("#page-status").is(":checked"));
					a.controller.savePageCustomization(b, void 0, function (b) {
						b ? a.saveError() : a.saveSuccess()
					});
					return !1
				}
			});
			this.$().delegate("select.country-select", "change", function () {
				a.controller.updateCountryCode($(this).val())
			});
			this.$().delegate("#search-city", "keyup", function (c) {
				c = $(this).val().trim();
				a.controller.searchCities(c, function () {
					a.$(".select2-drop").removeClass("select2-display-none")
				})
			});
			this.$().delegate(".city-select", "click", function () {
				var c = $(this).attr("data-id");
				a.controller.updatePageLocationDetails(c);
				a.$(".select2-drop").addClass("select2-display-none")
			});
			this.$().delegate(".external-link", "blur", function () {
				var c, b;
				c = a.$("input.external-link").index($(this));
				b = $(this).val();
				a.controller.extractUrl(c, b)
			});
			this.$().delegate(".delete-link", "click", function () {
				var c = a.$("input.external-link").index($(this).nextAll("input"));
				a.controller.removeExternalLink(c)
			});
			this.$().delegate("#user-tawkid",
				"blur", function () {
					var c = $(this);
					c.val().trim() && !c.hasClass("error") && (a.$(".small-transparent-spinner").removeClass("hidden"), a.controller.checkTawkId(c.val(), function (b, e) {
						b || e ? c.addClass("invalid") : c.removeClass("invalid");
						a.$("form").validate().element("#user-tawkid");
						a.$(".small-transparent-spinner").addClass("hidden")
					}))
				})
		}
	});
	Tawk.AddOnDetailView = Ember.View.extend({
		template: Ember.TEMPLATES.addOnDetail,
		elementId: "addon-details-container",
		paymentForm: null,
		previewModal: null,
		originalCloseFunc: null,
		resizeImageContainer: function () {
			"inDOM" === this._state && (this.controller.activeAddOn && this.controller.activeAddOn.productImages && 0 < this.controller.activeAddOn.productImages.length) && (imageContainerWidth = this.$("#addon-details").width(), 290 * this.controller.activeAddOn.productImages.length < imageContainerWidth ? (this.$("#right-scroll").hide().css("visibility", "hidden"), this.$("#left-scroll").hide().css("visibility", "hidden")) : this.$("#right-scroll").show())
		},
		didInsertElement: function () {
			var a = this, c, d =
				$("body")[0];
			if (this.controller.activeAddOn) {
				var b = $(HandlebarsTemplates[this.controller.activeAddOn.id]({activeAddOn: this.controller.activeAddOn}));
				this.$("#content-description-view").append(b);
				!this.controller.activeAddOn.isSubscribed && this.controller.activeAddOn.needBetaCode && this.set("needBetaCode", !0)
			}
			$(".present").tooltip();
			$(".title").tooltip();
			($.hasData(d) && $._data(d)).events.keydown.every(function (b) {
				return "closeView" === b.namespace ? (c = b.handler, a.set("originalCloseFunc", c), !1) : !0
			});
			this.$("#right-scroll").show().css("visibility",
				"hidden");
			this.resizeImageContainer();
			$(window).bind("resize.imageContainer", this.resizeImageContainer.bind(this));
			this.$().delegate("#payment-method", "change", function () {
				"cc" === $(this).val() ? a.$("#card-details").removeClass("hidden") : a.$("#card-details").addClass("hidden")
			});
			$.validator.messages.ccExpiryFormat = $.validator.format("The format should be MM/YY");
			$.validator.messages.ccExpiryDate = $.validator.format("Invalid expiry date.");
			$.validator.messages.ccNumber = $.validator.messages.creditcard;
			$.validator.messages.cvcCheck = $.validator.format("Invalid cvc number.");
			this.$("#card-number").mask("9999 9999 9999? 9999 9999", {placeholder: " "});
			this.$("#card-expiry").mask("99/99", {
				placeholder: " ", completed: function () {
					a.$("#card-cvc").focus()
				}
			});
			this.$("#card-cvc").mask("999?9", {placeholder: " "});
			this.$("#card-number").keyup(function () {
				window.Stripe && (cardType = Stripe.card.cardType($(this).val())) && (cardType = cardType.replace(" ", "").toLowerCase(), a.$(".card-type").hasClass(cardType) || a.$(".card-type").removeClass().addClass("icon-append card-type " +
					cardType))
			});
			this.set("paymentForm", this.$("#payment-form").validate({
				onkeyup: !1, onfocusout: !1, errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function (b) {
					var c = {}, d = {}, h = a.$("#payment-method", b).val(), k = function (b, c, e) {
						"inDOM" === a._state && (b ? (a.parentView.saveError(c), e && setTimeout(function () {
							a.$("#card-selection").val(e)
						}, 0), a.$("#submit").removeAttr("disabled").html("Activate Now"), a.set("paymentProcessing", !1)) : (a.set("paymentSuccess", !0), a.controller.activeAddOn.isLiveAnswering &&
						(Tawk.routing.changeRoute({
							view: "admin",
							propertyId: a.controller.activeProperty.id,
							subView: "addon-store",
							itemId: "live-answering-settings",
							subSettings: "wizard"
						}), a.controller.saveLastSubView({viewType: "settings"}), a.parentView.set("showAddonSettings", !0), a.controller.openSettings("live-answering")), a.controller.activeAddOn.isWhitelabel ? (d.enabled = !0, d.widget = {
							label: a.$("#widget-label").val(),
							url: a.$("#widget-url").val(),
							textColor: a.$("#widget-text-color").ColorSelector("getColor").toHexString()
						}, d.email =
							{
								label: a.$("#email-label").val(),
								url: a.$("#email-url").val()
							}, a.controller.saveWhitelabelSettings(d, function (b) {
							b && a.parentView.saveError();
							a.$("#submit").removeAttr("disabled").html("Activate Now");
							a.set("paymentProcessing", !1);
							a.$("#min-whitelabel-settings").hide();
							a.$("#addon-details").length && a.$("#addon-details").height() < a.$("#addon-details")[0].scrollHeight ? a.$(".more-below").removeClass("hidden") : a.$(".more-below").addClass("hidden")
						})) : (a.$("#submit").removeAttr("disabled").html("Activate Now"),
							a.set("paymentProcessing", !1))))
					};
					if (!a.paymentProcessing) return a.set("paymentProcessing", !0), a.$("#submit").attr("disabled", "disabled").html('<i class="fa fa-refresh fa-spin"></i>'), a.parentView.clearSaveMessages(), c.planId = $("#plan", b).val(), h || (!desktopConnector.enabled() || desktopConnector.canUsePaypal()) || (h = "cc"), "cc" === h && (a.$("#card-selection").length ? c.customerId = a.$("#card-selection").val() : c.customerId = "new-card", $(b).serializeArray().map(function (a) {
						c[a.name] = a.value
					})), a.controller.handlePayment(h,
						c, k), !1
				}
			}));
			this.$().delegate("#card-selection", "change", function () {
				"new-card" === $(this).val() ? a.$("#new-card-details").removeClass("hidden") : a.$("#new-card-details").addClass("hidden")
			});
			this.controller.activeAddOn && !this.controller.activeAddOn.isSubscribed && this.$("#plan").trigger("change");
			this.$().delegate(".dm-agent", "click", function () {
				var a = $(this).attr("id");
				Tawk.agentChatController.openChat(a)
			});
			this.$().delegate("#beta-unlock", "click", function () {
				var b = a.$("#beta-code").val();
				a.$("#beta-invalid").addClass("hidden");
				a.$("#beta-code").parent().removeClass("state-error");
				b === a.controller.activeAddOn.betaCode ? a.set("needBetaCode", !1) : (a.controller.activeAddOn.oldBetaCode && a.controller.activeAddOn.oldBetaCode.contains(b) ? a.$("#beta-invalid").html("Your beta code has expired. Please request a new code.") : a.$("#beta-invalid").html("Invalid beta code."), a.$("#beta-invalid").removeClass("hidden"), a.$("#beta-code").parent().addClass("state-error"))
			});
			this.$().delegate("#plan", "change", function () {
				var b;
				b = $(this).val();
				(b = a.controller.activeAddOn.plans.findProperty("id", b)) && a.$("#total-price").html("Total : $ " + b.price / 100 + (1 === b.cycle ? languageParser.translate("admin", "per_month") : languageParser.translate("admin", "per_year")))
			});
			setTimeout(function () {
				"inDOM" === a._state && (a.$("#addon-details").length && a.$("#addon-details").height() < a.$("#addon-details")[0].scrollHeight && a.$(".more-below").removeClass("hidden"), a.$("#plan").trigger("change"))
			});
			this.$().delegate(".more-below", "click", function () {
				a.$("#addon-details").scrollTop(a.$("#addon-details").height())
			});
			this.$("#addon-details").on("scroll", function () {
				"inDOM" === a._state && (0 === $(this).scrollTop() ? a.$(".more-below").removeClass("hidden") : a.$(".more-below").addClass("hidden"))
			});
			this.$("#widget-text-color").ColorSelector({appendTo: "#addon-settings-container"}, function (b) {
				a.$("#footer-container").css("color", b)
			}, a.$("#widget-text-color"));
			this.$().delegate(".clear-input", "click", function () {
				$(this).next().val("").trigger("change")
			});
			this.$().delegate("#widget-label", "keyup paste change", function () {
				a.controller.activeAddOn.settings.set("widget.label",
					$(this).val())
			});
			this.$().delegate("#widget-url", "keyup paste change", function () {
				a.controller.activeAddOn.settings.set("widget.url", $(this).val())
			});
			this.$().delegate("#email-label", "keyup paste change", function () {
				a.controller.activeAddOn.settings.set("email.label", $(this).val())
			});
			this.$().delegate("#email-url", "keyup paste change", function () {
				a.controller.activeAddOn.settings.set("email.url", $(this).val())
			});
			this.parseWidgetFooterTitle()
		},
		previewClosed: function () {
			this.originalCloseFunc && "function" ===
			typeof this.originalCloseFunc && $("body").bind("keydown.closeView", this.originalCloseFunc)
		},
		willDestroyElement: function () {
			this.previewModal && this.previewModal.remove();
			this.$(".alert").remove();
			this.set("previewModal", null);
			$(window).unbind("resize.imageContainer")
		},
		parseWidgetFooterTitle: function () {
			var a, c;
			if (this.controller && this.controller.activeAddOn && this.controller.activeAddOn.isWhitelabel && this.controller.activeAddOn.settings) {
				if (a = this.controller.activeAddOn.settings.widget.label) a = encodeStr(a);
				else return this.$("#widget-brand").html(""), "";
				(c = a.match(/_[^_]+_/gi)) && 0 < c.length && c.forEach(function (c) {
					var b;
					b = c.indexOf("_");
					var e = c.lastIndexOf("_");
					b = c.substring(0, b) + "<i>" + c.substring(b + 1, e) + "</i>" + c.substring(e + 1, c.length);
					a = a.replace(c, b)
				});
				(c = a.match(/\*[^*]+\*/gi)) && 0 < c.length && c.forEach(function (c) {
					var b;
					b = c.indexOf("*");
					var e = c.lastIndexOf("*");
					b = c.substring(0, b) + '<span style="font-size: 13px; font-weight: 700">' + c.substring(b + 1, e) + "</span>" + c.substring(e + 1, c.length);
					a = a.replace(c,
						b)
				});
				this.controller.activeAddOn.settings.widget.url && (a = '<a href=" ' + this.controller.activeAddOn.settings.widget.url + ' " target="_blank" style="text-decoration: none; color: inherit;">' + a + "</a>");
				this.$("#widget-brand").html(a)
			}
		}.observes("controller.activeAddOn.settings.widget.label")
	});
	Ember.Handlebars.helper("AddOnDetailView", Tawk.AddOnDetailView);
	Tawk.WhitelabelSettingsView = Ember.View.extend({
		template: Ember.TEMPLATES.addOnSettings,
		elementId: "addon-settings-container",
		parsedFooterTitle: null,
		settingsChanged: function () {
			"inDOM" ===
			this._state && (this.controller && this.controller.activeAddOn) && (this.controller.activeAddOn.settings && this.controller.activeAddOn.settings.widget.textColor) && (this.$("#widget-text-color").ColorSelector("setColor", this.controller.activeAddOn.settings.widget.textColor), this.$("#footer-container").css("color", this.controller.activeAddOn.settings.widget.textColor))
		}.observes("controller.activeAddOn.settings"),
		didInsertElement: function () {
			var a, c = this, d = $("body")[0];
			($.hasData(d) && $._data(d)).events.keydown.every(function (b) {
				return "closeView" ===
				b.namespace ? (a = b.handler, c.set("originalCloseFunc", a), !1) : !0
			});
			$("body").unbind("keydown.closeView");
			$("body").bind("keydown.closeView", function (b) {
				if (27 === b.keyCode) return b.stopPropagation(), c.forwardingSetup ? c.closeForwardingSetup() : (c.controller.closeItem(), Tawk.routing.titlePath.itemName = null, Tawk.routing.setTitle(), Tawk.routing.changeRoute(c.controller.lastViews), $("body").bind("keydown.closeView", a)), !1
			});
			this.settingsChanged();
			this.$("#widget-text-color").ColorSelector({appendTo: "#addon-settings-container"},
				function (a) {
					c.$("#footer-container").css("color", a)
				}, c.$("#widget-text-color"));
			this.$().delegate("#addon-status", "change", function () {
				c.controller.activeAddOn.settings.set("enabled", $(this).is(":checked"));
				$(this).is(":checked") || c.$("#footer-container").css("color", "#000000")
			});
			this.$().delegate("#add-support-email", "click", function () {
				c.set("forwardingSetup", Tawk.ForwardingSetup.create({
					controller: c.controller,
					closeCallback: c.closeForwardingSetup.bind(c)
				}));
				c.forwardingSetup.append();
				return !1
			});
			this.$("#addon-settings-form").validate({
				errorPlacement: function (a, c) {
					a.insertAfter(c.parent())
				}, submitHandler: function (a) {
					var d = {
						enabled: c.$("#addon-status").is(":checked"),
						widget: {label: "", url: "", textColor: "#000000"},
						email: {label: "", url: ""}
					};
					d.enabled && (d.widget.label = $("#widget-label", a).val(), d.widget.url = $("#widget-url", a).val(), d.widget.textColor = $("#widget-text-color", a).ColorSelector("getColor").toHexString(), d.email.label = $("#email-label", a).val(), d.email.url = $("#email-url", a).val());
					c.controller.saveWhitelabelSettings(d,
						function (a) {
							a ? c.saveError() : c.saveSuccess()
						});
					return !1
				}
			});
			this.$().delegate("#verify-forwarding", "click", function () {
				var a = $(this);
				a.html('<i class="fa fa-refresh fa-spin"></i>').attr("disabled", "disabled");
				c.clearSaveMessages();
				c.controller.verifyForwarding(function (d) {
					a.html("Verify").removeAttr("disabled");
					d ? c.saveError("Unable to verify. Please try again.") : c.saveSuccess("Done verifying")
				});
				return !1
			});
			this.$().delegate("#verify-spf", "click", function () {
				var a = $(this);
				a.html('<i class="fa fa-refresh fa-spin"></i>').attr("disabled",
					"disabled");
				c.clearSaveMessages();
				c.controller.verifySPF(function (d) {
					a.html("Verify").removeAttr("disabled");
					d ? c.saveError("Unable to verify. Please try again.") : c.saveSuccess("Done verifying")
				});
				return !1
			});
			this.$().delegate("#verify-dkim", "click", function () {
				var a = $(this);
				a.html('<i class="fa fa-refresh fa-spin"></i>').attr("disabled", "disabled");
				c.clearSaveMessages();
				c.controller.verifyDKIM(function (d) {
					a.html("Verify").removeAttr("disabled");
					d ? c.saveError("Unable to verify. Please try again.") : c.saveSuccess("Done verifying")
				});
				return !1
			});
			this.$().delegate("#edit-address-name", "click", function () {
				$(this).addClass("hidden");
				c.$("#address-name-label").addClass("hidden");
				c.$("#address-name-input").removeClass("hidden");
				c.$("#edit-address-container").removeClass("hidden");
				return !1
			});
			this.$().delegate("#cancel-address-name", "click", function () {
				c.$("#address-name-input").addClass("hidden");
				c.$("#edit-address-container").addClass("hidden");
				c.$("#edit-address-name").removeClass("hidden");
				c.$("#address-name-label").removeClass("hidden");
				return !1
			});
			this.$().delegate("#save-address-name", "click", function () {
				var a = c.$("#address-name").val();
				(a = a.trim()) ? (c.$("#cancel-address-name").attr("disabled", "disabled"), c.$("#save-address-name").attr("disabled", "disabled").html('<i class="fa fa-refresh fa-spin"></i>'), c.clearSaveMessages(), c.controller.saveForwarderName(a, function (a) {
					c.$("#cancel-address-name").removeAttr("disabled");
					c.$("#save-address-name").removeAttr("disabled").html("Save");
					a ? c.saveError("Unable to save name. Please try again.") :
						(c.saveSuccess("Successfully saved name."), c.$("#cancel-address-name").trigger("click"))
				})) : c.saveError("Name should not be empty. Please try again.")
			});
			this.$().delegate("#change-support", "click", function () {
				c.set("forwardingSetup", Tawk.ForwardingSetup.create({
					controller: c.controller,
					closeCallback: c.closeForwardingSetup.bind(c)
				}));
				c.forwardingSetup.append();
				return !1
			});
			this.$().delegate("#remove-support", "click", function () {
				var a = "If you remove <b>" + c.controller.activeAddOn.settings.address.address +
					"</b> users responding to tickets sent from this email, may not be able to answer their ongoing tickets. To contact your support, they will need to start a new ticket.";
				c.clearSaveMessages();
				checkAndSetConfirmView(!1, function (a) {
					a && c.controller.removeForwarder(function (a) {
						a ? c.saveError("Unable to remove forwarder. Please try again.") : c.saveSuccess("Successfully removed forwarder")
					})
				}, a, null, "Remove email forwarding", "I understand, proceed", !0);
				return !1
			})
		},
		closeForwardingSetup: function () {
			this.forwardingSetup &&
			(this.forwardingSetup.remove(), this.set("forwardingSetup", null))
		},
		parsedWidgetFooterTitle: function () {
			var a, c;
			if (this.controller && this.controller.activeAddOn) {
				if (a = this.controller.activeAddOn.settings.widget.label) a = encodeStr(a); else return "";
				(c = a.match(/_[^_]+_/gi)) && 0 < c.length && c.forEach(function (c) {
					var b;
					b = c.indexOf("_");
					var e = c.lastIndexOf("_");
					b = c.substring(0, b) + "<i>" + c.substring(b + 1, e) + "</i>" + c.substring(e + 1, c.length);
					a = a.replace(c, b)
				});
				(c = a.match(/\*[^*]+\*/gi)) && 0 < c.length && c.forEach(function (c) {
					var b;
					b = c.indexOf("*");
					var e = c.lastIndexOf("*");
					b = c.substring(0, b) + '<span style="font-size: 13px; font-weight: 700">' + c.substring(b + 1, e) + "</span>" + c.substring(e + 1, c.length);
					a = a.replace(c, b)
				});
				return a
			}
		}.property("controller.activeAddOn.settings.widget.label"),
		parsedEmailFooterTitle: function () {
			var a, c;
			if (this.controller && this.controller.activeAddOn) {
				if (a = this.controller.activeAddOn.settings.email.label) a = encodeStr(a); else return "";
				(c = a.match(/_[^_]+_/gi)) && 0 < c.length && c.forEach(function (c) {
					var b;
					b = c.indexOf("_");
					var e = c.lastIndexOf("_");
					b = c.substring(0, b) + "<i>" + c.substring(b + 1, e) + "</i>" + c.substring(e + 1, c.length);
					a = a.replace(c, b)
				});
				(c = a.match(/\*[^*]+\*/gi)) && 0 < c.length && c.forEach(function (c) {
					var b;
					b = c.indexOf("*");
					var e = c.lastIndexOf("*");
					b = c.substring(0, b) + '<span style="font-size: 13px; font-weight: 700">' + c.substring(b + 1, e) + "</span>" + c.substring(e + 1, c.length);
					a = a.replace(c, b)
				});
				return a
			}
		}.property("controller.activeAddOn.settings.email.label"),
		willDestroyElement: function () {
			this.closeForwardingSetup();
			this.$("#widget-text-color").ColorSelector("destroy")
		},
		saveComplete: function (a, c, d) {
			"inDOM" === this._state && (this.clearSaveMessages(), $("#content-container").append('<div class="alert ' + a + ' fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa ' + c + '"></i>' + d + "</div>"))
		},
		saveError: function (a) {
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "error_save"), this.saveComplete("alert-danger", "fa-ban", a))
		},
		saveSuccess: function (a) {
			var c = this;
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages",
				"success_update"), this.saveComplete("alert-success", "fa-check", a), clearTimeout(this.alertTimeout), this.set("alertTimeout", setTimeout(function () {
				c.clearSaveMessages()
			}, 3E3)))
		},
		clearSaveMessages: function () {
			"inDOM" === this._state && (clearTimeout(this.alertTimeout), $(".alert").remove())
		}
	});
	Tawk.LiveAnswerWizardView = Ember.View.extend({
		template: Ember.TEMPLATES.liveAnswerSettingsWizard,
		elementId: "liveAnswer-wizard-container",
		controller: null,
		submitted: {},
		objectivesChanged: function () {
			var a = this;
			"inDOM" === this._state &&
			this.controller && this.controller.activeAddOn && this.controller.activeAddOn.settings.objectives && this.controller.activeAddOn.settings.objectives.length && this.controller.activeAddOn.settings.objectives.forEach(function (c, d) {
				"predefined" === c.type ? a.$("#" + d + "-objective").val(c.content) : (a.$("#" + d + "-objective").val("other"), a.$("#" + d + "-other").val(c.content), a.$("#" + d + "-other-container").removeClass("hidden"))
			})
		}.observes("controller.objectives"),
		didInsertElement: function () {
			var a = this;
			this._super();
			var c =
				"submitBusinessForm saveOfferingForm saveCultureForm saveFAQForm saveEmergencyForm saveObjectives saveReputationForm".split(" ");
			this.$().bootstrapWizard({
				tabClass: "form-wizard", previousSelector: "#previous", nextSelector: "#next", onTabClick: function () {
					return !1
				}, onTabShow: function (c, b, e) {
					3 <= e ? a.$("#skip").removeClass("hidden") : a.$("#skip").addClass("hidden");
					6 === e ? (a.$("#done").removeClass("hidden"), a.$("#next").addClass("hidden")) : (a.$("#done").addClass("hidden"), a.$("#next").removeClass("hidden"));
					a.set("submitted." + e, !1)
				}, onNext: function (d, b, e) {
					var f = e - 1;
					d = $(d).find(".change-tab").attr("href");
					a.clearSaveMessages();
					if (!a.submitted[f]) {
						if ($(d).find(".smart-form").valid()) a[c[f]](function (b) {
							b ? (a.set("submitted." + f, !1), a.saveError()) : (a.set("submitted." + f, !0), a.bootstrapWizard.show(e))
						});
						return !1
					}
				}, onLast: function (d, b, e) {
					b = e - 1;
					d = $(d).find(".change-tab").attr("href");
					a.clearSaveMessages();
					if (!a.submitted[b]) {
						if ($(d).find(".smart-form").valid()) a[c[b]](function (b) {
							b ? (a.set("submitted." + e, !1),
								a.saveError()) : (a.set("submitted." + e, !0), a.bootstrapWizard.show(e))
						});
						return !1
					}
				}
			});
			this.set("bootstrapWizard", this.$().data("bootstrapWizard"));
			this.$().delegate("#skip", "click", function () {
				6 === a.bootstrapWizard.currentIndex() ? $("#close-view").trigger("click") : (a.set("submitted." + a.bootstrapWizard.currentIndex(), !0), a.bootstrapWizard.next())
			});
			this.$().delegate("#done", "click", function () {
				a.$("#liveAnswer-reputation").valid() && a.saveReputationForm(function (c) {
					c ? a.saveError() : $("#close-view").trigger("click")
				})
			});
			this.$("#liveAnswer-business").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function () {
					return !1
				}
			});
			this.$("#liveAnswer-offering").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function () {
					return !1
				}
			});
			this.$("#liveAnswer-culture").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function () {
					return !1
				}
			});
			this.$("#liveAnswer-faq").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function () {
					return !1
				}
			});
			this.$("#liveAnswer-emergency").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function () {
					return !1
				}
			});
			this.$("#liveAnswer-objective").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function () {
					return !1
				}
			});
			this.$("#liveAnswer-reputation").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function () {
					return !1
				}
			});
			this.$().delegate(".add-faq-question", "click", function () {
				a.controller.addFAQQuestion()
			});
			this.$().delegate(".remove-faq",
				"click", function () {
					var c = $(this).attr("data-id");
					a.controller.removeFAQQuestion(c)
				});
			this.$().delegate(".add-contact", "click", function () {
				a.controller.addEmergencyContact()
			});
			this.$().delegate(".remove-contact", "click", function () {
				var c = $(this).attr("data-id");
				a.controller.removeEmergencyContact(c)
			});
			this.$().delegate(".add-reputation-question", "click", function () {
				a.controller.addReputationQuestion()
			});
			this.$().delegate(".remove-reputation", "click", function () {
				var c = $(this).attr("data-id");
				a.controller.removeReputationQuestion(c)
			});
			this.$().delegate(".objective-select", "change", function () {
				var c = $(this).attr("id"), b = $(this).val(), c = c.replace("-objective", "-other-container");
				"other" === b ? a.$("#" + c).removeClass("hidden") : a.$("#" + c).addClass("hidden")
			});
			this.objectivesChanged()
		},
		saveComplete: function (a, c, d) {
			"inDOM" === this._state && (this.clearSaveMessages(), $("#content-container").append('<div class="alert ' + a + ' fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa ' + c + '"></i>' + d + "</div>"))
		},
		saveError: function (a) {
			"inDOM" ===
			this._state && (a = a || languageParser.translate("form_validation_messages", "error_save"), this.saveComplete("alert-danger", "fa-ban", a))
		},
		saveSuccess: function (a) {
			var c = this;
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "success_update"), this.saveComplete("alert-success", "fa-check", a), clearTimeout(this.alertTimeout), this.set("alertTimeout", setTimeout(function () {
				c.clearSaveMessages()
			}, 3E3)))
		},
		clearSaveMessages: function () {
			"inDOM" === this._state && (clearTimeout(this.alertTimeout),
				$(".alert").remove())
		},
		submitBusinessForm: function (a) {
			var c = {
				business: {
					name: this.$("#business-name").val(),
					address: this.$("#business-address").val(),
					url: this.$("#business-website").val(),
					twitter: this.$("#business-twitter").val(),
					fb: this.$("#business-facebook").val(),
					phone: this.$("#business-number").val(),
					email: this.$("#business-email").val(),
					contactPerson: {
						name: this.$("#business-contact-name").val(),
						phone: this.$("#business-contact-number").val(),
						email: this.$("#business-contact-email").val()
					}
				}
			};
			this.controller.saveHiredAgentContent(c,
				a)
		},
		saveOfferingForm: function (a) {
			var c = {offering: this.$("#offering").val()};
			this.controller.saveHiredAgentContent(c, a)
		},
		saveCultureForm: function (a) {
			var c = {culture: this.$("#culture").val()};
			this.controller.saveHiredAgentContent(c, a)
		},
		saveFAQForm: function (a) {
			var c = {faqs: []};
			this.$(".faq-data").each(function () {
				var a = $(this).find(".question").val(), b = $(this).find(".answer").val();
				a && b && c.faqs.push({q: a, a: b})
			});
			if (0 === c.faqs.length) return a(!0);
			this.controller.saveHiredAgentContent(c, a)
		},
		saveEmergencyForm: function (a) {
			var c =
				{emergency: []};
			this.$(".emergency-data").each(function () {
				var a = $(this).find(".contact-name").val(), b = $(this).find(".contact-title").val(),
					e = $(this).find(".contact-number").val(), f = $(this).find(".contact-email").val();
				a && f && c.emergency.push({name: a, title: b, phone: e, email: f})
			});
			if (0 === c.emergency.length) return a(!0);
			this.controller.saveHiredAgentContent(c, a)
		},
		saveObjectives: function (a) {
			var c = this, d = {objectives: []};
			this.$(".objective-select").each(function () {
				var a, e;
				e = $(this).attr("id");
				var f = $(this).val();
				e = e.replace("-objective", "-other");
				"other" === f ? (a = "other", e = c.$("#" + e).val()) : (a = "predefined", e = f);
				a && e && d.objectives.push({type: a, content: e})
			});
			if (0 === d.objectives.length) return a(!0);
			this.controller.saveHiredAgentContent(d, a)
		},
		saveReputationForm: function (a) {
			var c = {reputation: []};
			this.$(".reputation-data").each(function () {
				var a = $(this).find(".question").val(), b = $(this).find(".answer").val();
				a && b && c.reputation.push({q: a, a: b})
			});
			if (0 === c.reputation.length) return a(!0);
			this.controller.saveHiredAgentContent(c,
				a)
		}
	});
	Tawk.LiveAnswerSchedulerView = Ember.View.extend({
		template: Ember.TEMPLATES.liveAnswerScheduler,
		elementId: "liveAnswer-scheduler-container",
		controller: null,
		schedule: [],
		hasRemanining: !0,
		scheduler: [],
		willInsertElement: function () {
			this.schedule.clear()
		},
		willDestroyElement: function () {
			this.schedule.clear()
		},
		didInsertElement: function () {
			var a = this;
			this.$().delegate("#schedule-city", "keyup", function () {
				var c = $(this).val().trim();
				socketConnector.getCities(c, "", function (c, b) {
					var e = [], f = JSON.parse(b);
					!c && f.predictions.length &&
					(f.predictions.forEach(function (a, b) {
						e.push({name: a.description, index: b, placeId: a.place_id})
					}), a.set("cityList", e), a.$("#schedule-city-list").removeClass("select2-display-none"))
				})
			});
			this.$().delegate(".city-select", "click", function () {
				var c = $(this).attr("data-id"), c = a.cityList[c];
				a.controller.activeAddOn.settings.set("city", c.name);
				a.controller.activeAddOn.settings.set("placeId", c.placeId);
				a.$("#schedule-city-list").addClass("select2-display-none")
			});
			this.$().on("click", function () {
				"inDOM" === a._state &&
				a.$("#schedule-city-list").addClass("select2-display-none")
			});
			this.setScheduler();
			this.$().delegate(".day-on", "change", function () {
				var c = $(this).is(":checked"), d = $(this).attr("id");
				if (d = a.schedule.findProperty("id", d)) d.set("isOn", c), 0 === d.time.length ? a.addTimeForDay(d) : a.recalculateAvailableHours()
			});
			this.$().delegate(".add-time", "click", function () {
				var c = $(this).attr("data-id"), c = a.schedule.findProperty("id", c);
				a.addTimeForDay(c);
				if (0 !== a.controller.activeAddOn.settings.availableHours) return !1
			});
			this.$().delegate(".remove-schedule", "click", function () {
				var c;
				c = $(this).attr("data-id");
				var d = $(this).attr("data-parent");
				(d = a.schedule.findProperty("id", d)) && (c = d.time.findProperty("id", c)) && c.canDelete && (d.time.removeObject(c), a.recalculateAvailableHours());
				return !1
			});
			this.$("#liveAnswer-scheduler-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					a.clearSaveMessages();
					if (a.hasRemanining) return a.schedule.forEach(function (a) {
						a.isOn || a.time.clear()
					}),
						a.controller.saveLiveAnsweringSettings(a.schedule, function (c) {
							c ? c.message ? a.saveError("hours" === c.message ? "You are trying to schedule more than the purchased hours, please change the schedule and try again" : "") : a.saveError() : (a.saveSuccess("Setup was successful."), a.setScheduler())
						}), !1;
					a.saveError("You are trying to schedule more than the purchased hours, please change the schedule and try again")
				}
			})
		},
		setScheduler: function () {
			var a = this, c = this.controller.activeAddOn.settings.scheduler;
			this.schedule.clear();
			if (c) {
				for (var d = 0; d < c.length; d++) {
					for (var b = c[d], e = Ember.Object.create({
						id: "d-" + b.day,
						label: moment().locale("en").weekday(b.day).format("dddd"),
						isOn: 0 !== b.time.length,
						time: [],
						day: b.day
					}), f = 0; f < b.time.length; f++) {
						var g, h;
						time = b.time[f];
						g = 0 === time.start && 0 !== time.end ? moment().startOf("day") : 0 === time.start && 0 === time.end ? moment.duration(540) : moment.duration(time.start, "minutes");
						h = 1440 === time.end ? moment().add(1, "days").startOf("day") : 0 !== time.end ? moment.duration(time.end, "minutes") : moment.duration(1080,
							"minutes");
						g = Ember.Object.create({
							id: d + "_" + f,
							rangeId: "range_" + d + "_" + f,
							labelId: "label_" + d + "_" + f,
							startTime: time.start,
							endTime: time.end,
							from: moment().locale("en").hours(g.hours()).minutes(g.minutes()).format("X"),
							to: moment().locale("en").hours(h.hours()).minutes(h.minutes()).format("X"),
							isOn: !(0 === time.start && 0 === time.end),
							canDelete: 0 < e.time.length
						});
						e.time.pushObject(g)
					}
					a.schedule.pushObject(e)
				}
				setTimeout(function () {
					a.recalculateAvailableHours();
					a.setSlider()
				})
			}
		},
		addTimeForDay: function (a) {
			var c, d, b =
				this, e = a.day + "_" + a.time.length, f = {
				type: "double",
				min: moment().locale("en").startOf("day").format("X"),
				max: moment().locale("en").add(1, "days").startOf("day").format("X"),
				step: 900,
				grid_snap: !0,
				prettify_enabled: !0,
				decorate_both: !1,
				values_separator: " - ",
				prettify: function (a) {
					return moment(a, "X").format("h:mm A")
				},
				onFinish: function (c) {
					var d = $(c.input).attr("id").replace("range_", "").split("_");
					a = b.schedule.objectAt(d[0]);
					g = a.time.objectAt(d[1]);
					fromData = moment(c.from, "X");
					toData = moment(c.to, "X");
					g.set("from",
						moment().locale("en").hours(fromData.hours()).minutes(fromData.minutes()).format("X"));
					g.set("to", moment().locale("en").hours(toData.hours()).minutes(toData.minutes()).format("X"));
					g.set("startTime", 60 * fromData.hours() + fromData.minutes());
					g.set("endTime", 0 === toData.hours() ? 1440 : 60 * toData.hours() + toData.minutes());
					b.recalculateAvailableHours()
				}
			}, g = Ember.Object.create({
				id: e,
				rangeId: "range_" + e,
				labelId: "label_" + e,
				from: moment().locale("en").hours(9).minutes(0).format("X"),
				to: moment().locale("en").hours(17).minutes(0).format("X"),
				startTime: 540,
				endTime: 1020,
				canDelete: 0 < a.time.length
			});
			a.time.pushObject(g);
			setTimeout(function () {
				d = b.$("#" + g.rangeId);
				f.from = g.from;
				"0:00" === moment(g.to, "X").locale("en").format("H:mm") && (g.to = parseInt(g.to, 10) + 86400);
				f.to = g.to;
				d.ionRangeSlider(f);
				c = d.data("ionRangeSlider");
				b.controller.activeAddOn.settings.enabled ? c.update({disable: !1}) : c.update({disable: !0});
				a.isOn ? d.parent().removeClass("hidden") : d.parent().next().removeClass("hidden");
				b.recalculateAvailableHours()
			})
		},
		recalculateAvailableHours: function () {
			var a,
				c, d = 0;
			a = 60 * this.controller.activeAddOn.settings.entitlements.hours;
			this.schedule.forEach(function (a) {
				var c, f, g;
				if (a.isOn && a.time.length) {
					g = a.time.slice(0, a.time.length).sort(function (a, b) {
						return a.startTime < b.startTime ? -1 : a.startTime > b.startTime ? 1 : 0
					});
					c = g[0];
					a = c.startTime;
					c = c.endTime;
					for (var h = 1; h < g.length; h++) f = g[h], f.startTime <= c ? c = Math.max(f.endTime, c) : d += f.endTime - f.startTime;
					d += c - a
				}
			});
			a -= d;
			0 > a ? this.set("hasRemanining", !1) : this.set("hasRemanining", !0);
			a = moment.duration(a, "minutes");
			c = a.days() ?
				24 * a.days() + a.hours() : a.hours();
			this.controller.activeAddOn.settings.set("availableEntitlement", {hours: c, minutes: a.minutes()})
		},
		saveComplete: function (a, c, d) {
			"inDOM" === this._state && (this.clearSaveMessages(), $("#content-container").append('<div class="alert ' + a + ' fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa ' + c + '"></i>' + d + "</div>"))
		},
		saveError: function (a) {
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "error_save"), this.saveComplete("alert-danger",
				"fa-ban", a))
		},
		saveSuccess: function (a) {
			var c = this;
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "success_update"), this.saveComplete("alert-success", "fa-check", a), clearTimeout(this.alertTimeout), this.set("alertTimeout", setTimeout(function () {
				c.clearSaveMessages()
			}, 3E3)))
		},
		clearSaveMessages: function () {
			"inDOM" === this._state && (clearTimeout(this.alertTimeout), $(".alert").remove(), this.$(".error").addClass("hidden"))
		},
		setSlider: function () {
			var a = this, c = {
				type: "double",
				min: moment().locale("en").startOf("day").format("X"),
				max: moment().locale("en").add(1, "days").startOf("day").format("X"),
				step: 900,
				grid_snap: !0,
				prettify_enabled: !0,
				decorate_both: !1,
				values_separator: " - ",
				prettify: function (a) {
					return moment(a, "X").format("h:mm A")
				},
				onFinish: function (c) {
					var b = $(c.input).attr("id").replace("range_", "").split("_");
					schedule = a.schedule.objectAt(b[0]);
					time = schedule.time.objectAt(b[1]);
					fromData = moment(c.from, "X");
					toData = moment(c.to, "X");
					time.set("from", moment().locale("en").hours(fromData.hours()).minutes(fromData.minutes()).format("X"));
					time.set("to", moment().locale("en").hours(toData.hours()).minutes(toData.minutes()).format("X"));
					time.set("startTime", 60 * fromData.hours() + fromData.minutes());
					time.set("endTime", 0 === toData.hours() ? 1440 : 60 * toData.hours() + toData.minutes());
					a.recalculateAvailableHours()
				}
			};
			this.schedule.forEach(function (d) {
				d.time.forEach(function (b) {
					var d, f = a.$("#" + b.rangeId);
					c.from = b.from;
					"0:00" === moment(b.to, "X").locale("en").format("H:mm") && (b.to = parseInt(b.to, 10) + 86400);
					c.to = b.to;
					f.ionRangeSlider(c);
					d = f.data("ionRangeSlider");
					a.controller.activeAddOn.settings.enabled ? d.update({disable: !1}) : d.update({disable: !0});
					b.isOn ? f.parent().removeClass("hidden") : f.parent().next().removeClass("hidden")
				})
			})
		}
	});
	Tawk.LiveAnswerSettingsView = Ember.View.extend({
		template: Ember.TEMPLATES.liveAnswerSettings,
		elementId: "addon-settings-container",
		controller: null,
		"class": "subview",
		subView: null,
		didInsertElement: function () {
			var a = this, c, d = $("body")[0], b = Tawk.routing.getPath();
			this.$().delegate(".open-wizard", "click", function () {
				var b = Tawk.LiveAnswerWizardView.create({controller: a.controller});
				a.$("#main-view").addClass("hidden");
				b.appendTo(a.$("#subview"));
				a.$("#subview").removeClass("hidden");
				a.set("subView", b);
				$("body").unbind("keydown.closeView");
				$("#close-view").off("click", this.originalClickCloseFunc);
				a.setClickCloseView();
				Tawk.routing.changeRoute({
					view: "admin",
					propertyId: a.controller.activeProperty.id,
					subView: "addon-store",
					itemId: "live-answering-settings",
					subSettings: "wizard"
				})
			});
			this.$().delegate("#set-scheduler", "click", function () {
				var b = Tawk.LiveAnswerSchedulerView.create({controller: a.controller});
				a.$("#main-view").addClass("hidden");
				b.appendTo(a.$("#subview"));
				a.$("#subview").removeClass("hidden");
				a.set("subView", b);
				$("body").unbind("keydown.closeView");
				$("#close-view").off("click", this.originalClickCloseFunc);
				a.setClickCloseView();
				Tawk.routing.changeRoute({
					view: "admin",
					propertyId: a.controller.activeProperty.id,
					subView: "addon-store",
					itemId: "live-answering-settings",
					subSettings: "scheduler"
				})
			});
			this.$().delegate("#addon-status", "change", function () {
				a.controller.activeAddOn.settings.set("enabled",
					$(this).is(":checked"));
				a.controller.saveLiveAnsweringSettings(null, function (a) {
				})
			});
			this.$().delegate(".open-knowledgebase", "click", function () {
				a.controller.closeItem();
				$("#knowledgebase.open-view").trigger("click")
			});
			this.$().delegate(".open-alert", "click", function () {
				a.controller.closeItem();
				$("#alerts.open-view").trigger("click")
			});
			this.$().delegate(".open-shortcuts", "click", function () {
				a.controller.closeItem();
				$("#shortcuts.open-view").trigger("click")
			});
			($.hasData(d) && $._data(d)).events.keydown.every(function (b) {
				return "closeView" ===
				b.namespace ? (c = b.handler, a.set("originalCloseFunc", c), !1) : !0
			});
			$("body").bind("keydown.subviewCloseView", function (b) {
				if (27 === b.keyCode) return b.stopPropagation(), a.subView && a.closeSubView(), !1
			});
			($.hasData($("#close-view")[0]) && $._data($("#close-view")[0])).events.click.every(function (b) {
				a.set("originalClickCloseFunc", b.handler);
				return !1
			});
			b.subSettings && "wizard" === b.subSettings && this.$(".open-wizard").click();
			b.subSettings && "scheduler" === b.subSettings && this.$("#set-scheduler").click()
		},
		setClickCloseView: function () {
			var a =
				this;
			$("#close-view").on("click", function (c) {
				if (null !== a.subView) return c.stopPropagation(), a.closeSubView(), !1
			})
		},
		closeSubView: function () {
			this.subView.remove();
			this.$(".alert").remove();
			this.set("subView", null);
			this.$("#main-view").removeClass("hidden");
			Tawk.routing.changeRoute({
				view: "admin",
				propertyId: this.controller.activeProperty.id,
				subView: "addon-store",
				itemId: "live-answering-settings",
				subSettings: null
			});
			this.originalCloseFunc && "function" === typeof this.originalCloseFunc && $("body").bind("keydown.closeView",
				this.originalCloseFunc);
			if (this.originalClickCloseFunc && "function" === typeof this.originalClickCloseFunc) $("#close-view").on("click", this.originalClickCloseFunc)
		},
		willDestroyElement: function () {
			null !== this.subView && (this.subView.remove(), this.set("subView", null))
		}
	});
	Tawk.WebRTCView = Ember.View.extend({
		template: Ember.TEMPLATES.webrtcSettings, elementId: "addon-settings-container", didInsertElement: function () {
			var a, c = this, d = $("body")[0];
			($.hasData(d) && $._data(d)).events.keydown.every(function (b) {
				return "closeView" ===
				b.namespace ? (a = b.handler, c.set("originalCloseFunc", a), !1) : !0
			});
			$("body").unbind("keydown.closeView");
			$("body").bind("keydown.closeView", function (b) {
				if (27 === b.keyCode) return b.stopPropagation(), c.forwardingSetup ? c.closeForwardingSetup() : (c.controller.closeItem(), Tawk.routing.titlePath.itemName = null, Tawk.routing.setTitle(), Tawk.routing.changeRoute(c.controller.lastViews), $("body").bind("keydown.closeView", a)), !1
			});
			this.$("#addon-status").change(function () {
				$(this).is(":checked") ? (c.$(".allowed-actions-container").removeClass("disabled"),
					c.$("#video-call").removeAttr("disabled"), c.$("#screen-share").removeAttr("disabled")) : (c.$(".allowed-actions-container").addClass("disabled"), c.$("#video-call").attr("disabled", "disabled"), c.$("#screen-share").attr("disabled", "disabled"))
			});
			this.$("#addon-settings-form").validate({
				errorPlacement: function (a, c) {
					a.insertAfter(c.parent())
				}, submitHandler: function (a) {
					a = {
						enabled: c.$("#addon-status").is(":checked"),
						video: c.$("#video-call").is(":checked"),
						screen: c.$("#screen-share").is(":checked")
					};
					c.controller.saveWebRTCSettings(a,
						function (a) {
							a ? c.saveError() : c.saveSuccess()
						});
					return !1
				}
			})
		}, saveComplete: function (a, c, d) {
			"inDOM" === this._state && (this.clearSaveMessages(), $("#content-container").append('<div class="alert ' + a + ' fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa ' + c + '"></i>' + d + "</div>"))
		}, saveError: function (a) {
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "error_save"), this.saveComplete("alert-danger", "fa-ban", a))
		}, saveSuccess: function (a) {
			var c = this;
			"inDOM" === this._state && (a = a || languageParser.translate("form_validation_messages", "success_update"), this.saveComplete("alert-success", "fa-check", a), clearTimeout(this.alertTimeout), this.set("alertTimeout", setTimeout(function () {
				c.clearSaveMessages()
			}, 3E3)))
		}, clearSaveMessages: function () {
			"inDOM" === this._state && (clearTimeout(this.alertTimeout), $(".alert").remove())
		}
	});
	Tawk.AddOnSettingsView = Ember.ContainerView.extend({
		classNames: ["settings-container-view"], currentView: null, willInsertElement: function () {
			"whitelabel" ===
			this.controller.activeAddOn.id ? this.set("currentView", Tawk.WhitelabelSettingsView.create({controller: this.controller})) : "live-answering" === this.controller.activeAddOn.id ? this.set("currentView", Tawk.LiveAnswerSettingsView.create({controller: this.controller})) : "webrtc" === this.controller.activeAddOn.id && this.set("currentView", Tawk.WebRTCView.create({controller: this.controller}))
		}
	});
	Ember.Handlebars.helper("AddOnSettingsView", Tawk.AddOnSettingsView);
	Tawk.ForwardingSetup = Ember.View.extend(Tawk.ModalViewBase,
		{
			template: Ember.TEMPLATES.forwardingSetup,
			elementId: "forwarding-setup",
			classNames: ["modal"],
			controller: null,
			tabindex: null,
			didInsertElement: function () {
				var a = this;
				this._super();
				this.$().bootstrapWizard({
					tabClass: "form-wizard", previousSelector: "#previous", onTabShow: function (c, d, b) {
						a.$("#next").addClass("hidden");
						a.$("#previous").addClass("hidden");
						a.$("#verify").addClass("hidden");
						a.$("#done").addClass("hidden").attr("disabled", "disabled");
						a.$("#start-over").addClass("hidden");
						a.$("#cancel").removeClass("hidden");
						if (0 === b) a.$("#next").removeClass("hidden"); else if (1 === b) if (a.$("#support-email").valid()) a.$("#finished-check").is(":checked") ? a.$("#verify").removeAttr("disabled") : a.$("#verify").attr("disabled", "disabled"), a.$("#verify").removeClass("hidden"), a.$("#previous").removeClass("hidden"); else return a.bootstrapWizard.previous(); else if (2 === b) {
							var e = a.$("#support-email").val();
							a.$("#done").removeClass("hidden");
							a.controller.setupForwarding(e, function (b) {
								b ? a.verificationFailed() : a.verificationSuccess(e)
							})
						}
						c.prev() &&
						(c.prev().addClass("complete").find(".step.done").html('<i class="fa fa-check"></i>').removeClass("hidden"), c.prev().find(".step.pending").addClass("hidden"));
						a.resizeView()
					}
				});
				this.set("bootstrapWizard", this.$().data("bootstrapWizard"));
				this.$(".change-tab").click(function (a) {
					a.stopPropagation();
					return !1
				});
				this.$().on("hidden.bs.modal", function () {
					"function" === typeof a.closeCallback && a.closeCallback()
				});
				this.$(".next-step").click(function () {
					a.bootstrapWizard.next()
				});
				this.$("#start-over").click(function () {
					a.setupRestart()
				});
				this.$("#finished-check").change(function () {
					$(this).is(":checked") ? a.$("#verify").removeAttr("disabled") : a.$("#verify").attr("disabled", "disabled")
				});
				this.$("#support-email-form").validate({
					errorPlacement: function (a, d) {
						a.insertAfter(d.parent())
					}, submitHandler: function (a) {
						return !1
					}
				})
			},
			verificationFailed: function () {
				"inDOM" === this._state && (this.$("#fail").removeClass("hidden"), this.$("#verifying").addClass("hidden"), this.$("#cancel").removeClass("hidden"), this.$(".btn").addClass("hidden"), this.$("#start-over").removeClass("hidden"),
					$('li[data-target="#step3"').addClass("fail").find(".step.done").html('<i class="fa fa-times"></i>').removeClass("hidden"), $('li[data-target="#step3"').addClass("fail").find(".step.pending").addClass("hidden"))
			},
			verificationSuccess: function (a) {
				"inDOM" === this._state && (a = languageParser.translate("admin", "forwarder_success", {
					strongStart: "<b>",
					strongEnd: "</b>",
					email: a
				}), this.$("#success").find("#success-message").html(a), this.$("#success").removeClass("hidden"), this.$("#verifying").addClass("hidden"),
					this.$("#cancel").removeClass("hidden"), this.$(".btn").addClass("hidden"), this.$("#done").removeClass("hidden").removeAttr("disabled"), $('li[data-target="#step3"').addClass("complete").find(".step.done").html('<i class="fa fa-check"></i>').removeClass("hidden"), $('li[data-target="#step3"').addClass("complete").find(".step.pending").addClass("hidden"))
			},
			setupRestart: function () {
				this.$(".bootstrapWizard li").removeClass("complete fail active");
				this.$(".bootstrapWizard .step.done").addClass("hidden");
				this.$(".bootstrapWizard .step.pending").removeClass("hidden");
				this.$("#finished-check").prop("checked", !1);
				this.$("#verifying").removeClass("hidden");
				this.$("#fail").addClass("hidden");
				this.bootstrapWizard.first()
			}
		});
	Tawk.AddOnStoreView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.addOnStore,
		elementId: "property-add-on-store",
		controller: null,
		subViewId: "addon-store",
		scriptTag: null,
		willInsertElement: function () {
			var a, c = !1;
			$("iframe").each(function () {
				var a = $(this).attr("name");
				a && -1 !==
				a.indexOf("stripe") && (c = !0)
			});
			c || (a = document.createElement("script"), a.src = "https://js.stripe.com/v2/", $("body").append(a))
		},
		didInsertElement: function () {
			var a = this, c = Tawk.routing.getPath();
			this._super();
			$("body").unbind("keydown.closeView");
			$("body").bind("keydown.closeView", function (c) {
				if (27 === c.keyCode) return c.stopPropagation(), a.controller.closeView() ? (a.controller.saveLastSubView({subView: null}), $("#admin-select").click()) : Tawk.routing.changeRoute({
					subView: "addon-store", itemId: null, view: "admin",
					propertyId: a.controller.activeProperty.id
				}), !1
			});
			$("#close-view").unbind("click.closeView");
			$("#close-view").on("click", function (c) {
				c.stopPropagation();
				a.controller.closeView() ? (a.controller.saveLastSubView({subView: null}), $("#admin-select").click()) : Tawk.routing.changeRoute({
					subView: "addon-store",
					itemId: null,
					view: "admin",
					propertyId: a.controller.activeProperty.id
				});
				return !1
			});
			(c.itemId && -1 !== c.itemId.indexOf("-settings") || this.controller.lastViews.viewType && "settings" === this.controller.lastViews.viewType &&
				this.controller.activeAddOn && this.controller.activeAddOn.id) && this.set("showAddonSettings", !0);
			this.$().delegate(".selection-container", "click", function () {
				var c = $(this).attr("id");
				$(this).hasClass("disabled") || (a.controller.openItem(c), Tawk.routing.changeRoute({
					view: "admin",
					propertyId: a.controller.activeProperty.id,
					subView: a.subViewId,
					itemId: c
				}))
			});
			this.$().delegate(".addon-settings", "click", function (c) {
				var b = $(this).attr("data-id");
				c.stopPropagation();
				a.controller.activeProperty.isAdmin ? (Tawk.routing.changeRoute({
					view: "admin",
					propertyId: a.controller.activeProperty.id, subView: a.subViewId, itemId: b + "-settings"
				}), a.controller.saveLastSubView({viewType: "settings"}), a.set("showAddonSettings", !0), a.controller.openSettings(b)) : a.controller.openItem(b)
			})
		},
		activeAddChanged: function () {
			"inDOM" === this._state && this.controller && !this.controller.activeAddOn && (this.controller.saveLastSubView({viewType: null}), this.set("showAddonSettings", !1))
		}.observes("controller.activeAddOn")
	});
	Tawk.BillingView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.billingMain,
		elementId: "property-billing",
		controller: null,
		subViewId: "billing",
		scriptTag: null,
		willInsertElement: function () {
			var a, c = !1;
			$("iframe").each(function () {
				var a = $(this).attr("name");
				a && -1 !== a.indexOf("stripe") && (c = !0)
			});
			c || (a = document.createElement("script"), a.src = "https://js.stripe.com/v2/", $("body").append(a))
		},
		didInsertElement: function () {
			var a = this;
			this._super();
			$.validator.messages.ccExpiryFormat = $.validator.format("The format should be MM/YY");
			$.validator.messages.ccExpiryDate = $.validator.format("Invalid expiry date.");
			$.validator.messages.ccNumber = $.validator.messages.creditcard;
			$.validator.messages.cvcCheck = $.validator.format("Invalid cvc number.");
			this.$().delegate(".renew-subscription", "click", function () {
				var c = $(this).attr("data-id");
				a.controller.getAddOnPlans(c, function () {
				})
			});
			this.$().delegate(".change-payment-method, .renew-subscription", "click", function () {
				var c, d = $(this).attr("data-id");
				$(this).addClass("hidden");
				$(this).parents(".billing-list-container").find(".payment-details").removeClass("hidden");
				d &&
				(c = a.$().find('.change-payment-form[data-id="' + d + '"]'), c.length && (c.find("#card-number").mask("9999 9999 9999? 9999 9999", {placeholder: " "}), c.find("#card-expiry").mask("99/99", {
					placeholder: " ",
					completed: function () {
						c.find("#card-cvc").focus()
					}
				}), c.find("#card-cvc").mask("999?9", {placeholder: " "}), c.find("#card-number").on("keyup", function () {
					var a, d;
					d = c.find(".card-type");
					window.Stripe && (a = Stripe.card.cardType($(this).val())) && (a = a.replace(" ", "").toLowerCase(), d.hasClass(a) || d.removeClass().addClass("icon-append card-type " +
						a))
				}), c.validate({
					onkeyup: !1, onfocusout: !1, onclick: !1, errorPlacement: function (a, c) {
						a.insertAfter(c.parent())
					}, submitHandler: function () {
						var b = {}, d = $(c).parents(".billing-list-container"), f = d.find(".payment-method").val();
						if (a.paymentProcessing) return !1;
						a.set("paymentProcessing", !0);
						c.find(".submit-payment-change").attr("disabled", "disabled").html('<i class="fa fa-refresh fa-spin"></i>');
						a.clearSaveMessages();
						b.subscriptionId = c.attr("data-id");
						$(c).find(".plan").length && (b.planId = $(c).find(".plan").val());
						f || (!desktopConnector.enabled() || desktopConnector.canUsePaypal()) || (f = "cc");
						"cc" === f && (c.find(".card-selection").length ? b.customerId = c.find(".card-selection").val() : b.customerId = "new-card", $(c).serializeArray().map(function (a) {
							b[a.name] = a.value
						}));
						a.controller.changePaymentMethod(f, b, function (b, f, k) {
							b ? (a.saveError(f), k && setTimeout(function () {
								c.find(".card-selection").val(k)
							}, 0)) : (a.set("paymentSuccess", !0), d.find(".change-payment-method").removeClass("hidden"), d.find(".payment-details").addClass("hidden"));
							c.find(".submit-payment-change").removeAttr("disabled").html("Save");
							a.set("paymentProcessing", !1)
						});
						return !1
					}
				})))
			});
			this.$().delegate("#addon-store", "click", function () {
				a.closeView();
				$("#admin-main-view #addon-store").trigger("click")
			});
			this.$().delegate(".cancel-subscription", "click", function () {
				var c = $(this).attr("data-id");
				a.controller.cancelSubscription(c, function (c) {
					c ? a.saveError("Unable to cancel your subscription") : a.saveSuccess("Successfully canceled your subscription.")
				})
			});
			this.$().delegate(".toggle-email-receipts",
				"change", function () {
					var c = $(this).is(":checked"), d = $(this).attr("id");
					(d = a.controller.subscriptionList.findProperty("id", d)) && d.set("billingEmailEnabled", c)
				});
			this.$().delegate(".select-email", "change", function () {
				var a = $(this).val();
				"default-email" === a || "billing-admin" === a ? $(this).parent().next(".custom-email-field").addClass("hidden") : ($(this).parent().next(".custom-email-field").removeClass("hidden"), $(this).parent().next(".custom-email-field").find(".input-text").focus())
			});
			this.$().delegate(".payment-method",
				"change", function () {
					var a = $(this).val(), d = $(this).parents(".billing-list-container");
					"cc" === a ? d.find(".card-details").removeClass("hidden") : d.find(".card-details").addClass("hidden")
				});
			this.$().delegate(".card-selection", "change", function () {
				var a = $(this).val(), d = $(this).parents(".billing-list-container");
				"new-card" === a ? d.find(".new-card-details").removeClass("hidden") : d.find(".new-card-details").addClass("hidden")
			});
			this.$().delegate(".cancel-payment-change", "click", function () {
				var a = $(this).parents(".billing-list-container");
				a.find(".renew-subscription").length ? a.find(".renew-subscription").removeClass("hidden") : a.find(".change-payment-method").removeClass("hidden");
				a.find(".payment-details").addClass("hidden");
				return !1
			});
			this.$().delegate(".receipt-email", "submit", function () {
				var c = {}, d = $(this).find(".toggle-email-receipts").is(":checked"),
					b = $(this).find(".subscription-id").val(), e = $(this).find(".email"), f = e.val(),
					g = "custom-email" === $(this).find(".select-email").val();
				a.clearSaveMessages();
				e.removeClass("required");
				e.parent().removeClass("state-success state-error");
				e.parent().prev().removeClass("state-success state-error");
				if (d) {
					if (c.billingEmailEnabled = 1, g) if (e.addClass("required"), e.valid()) c.billingEmailAddress = f, e.parent().addClass("state-success"), e.parent().prev().addClass("state-success"); else return e.parent().addClass("state-error"), e.parent().prev().addClass("state-error"), !1
				} else c.billingEmailEnabled = 0;
				a.controller.updateEmailSettings(b, c, function (b) {
					b ? a.saveError() : a.saveSuccess()
				});
				return !1
			});
			this.$().delegate(".change-billing-address", "click",
				function () {
					$(this).addClass("hidden");
					$(this).parents(".billing-list-container").find(".change-billing-address-form").removeClass("hidden");
					$(this).parents(".billing-list-container").find(".address").addClass("hidden")
				});
			this.$().delegate(".cancel-change-billing-address", "click", function () {
				$(".change-billing-address").removeClass("hidden");
				$(this).parents(".billing-list-container").find(".change-billing-address-form").addClass("hidden");
				$(this).parents(".billing-list-container").find(".address").removeClass("hidden");
				return !1
			});
			this.$().delegate(".change-billing-address-form", "submit", function () {
				var c = $(this).find(".billing-address").val(), d = $(this).attr("data-id");
				a.controller.updateBillingAddress(d, {billingAddress: c}, function (b) {
					b ? a.saveError() : (a.saveSuccess(), a.$(".cancel-change-billing-address").trigger("click"))
				});
				return !1
			})
		}
	});
	var tabsViewCol = [];
	Tawk.TabIntegrationSettings = Ember.View.extend(Tawk.ModalViewBase, {
		template: Ember.TEMPLATES.tabsIntegrationSettings, didInsertElement: function () {
			var a = this;
			this.formatEditFields();
			this._super();
			this.initSortable();
			this.$("#close-settings").click(function () {
				"function" === typeof a.closeCallback && a.closeCallback()
			});
			this.$().delegate(".expand-list", "click", function () {
				var c = $(this).attr("data-id");
				(parent = $(this).parents("#" + c)) && parent.find(".inner-list").first().show();
				$(this).addClass("collapse-list").removeClass("expand-list");
				$(this).html('<i class="fa fa-lg fa-chevron-circle-up"></i>');
				a.resizeView()
			});
			this.$().delegate(".collapse-list", "click", function () {
				var c = $(this).attr("data-id");
				(parent = $(this).parents("#" + c)) && parent.find(".inner-list").first().hide();
				$(this).addClass("expand-list").removeClass("collapse-list");
				$(this).html('<i class="fa fa-lg fa-chevron-circle-down"></i>');
				a.resizeView()
			});
			this.$().delegate("#save-settings", "click", function () {
				var c = {};
				c.customer = a.content.customerSettings;
				c.order = a.content.orderSettings;
				Tawk.webProperties.saveShopifyConfig(a.controller.activeProperty.id, c, function (c) {
					c ? a.saveError() : a.saveSuccess()
				})
			});
			this.$().delegate(".customer-select",
				"change", function () {
					var c = $(this).is(":checked");
					a.content.customerSettings.enabled = c;
					a.customerSettings.set("enabled", c);
					a.initSortable()
				});
			this.$().delegate(".order-select", "change", function () {
				var c = $(this).is(":checked");
				a.content.orderSettings.enabled = c;
				a.orderSettings.set("enabled", c);
				a.initSortable()
			})
		}, formatEditFields: function () {
			var a = this;
			this.set("customerSettings", Ember.Object.create({fields: []}));
			this.set("orderSettings", Ember.Object.create({fields: []}));
			this.content.customerSettings.fields.forEach(function (c) {
				a.customerSettings.fields.pushObject(c)
			});
			this.content.orderSettings.fields.forEach(function (c) {
				a.orderSettings.fields.pushObject(c)
			});
			this.customerSettings.set("header", this.content.customerSettings.header);
			this.customerSettings.set("enabled", this.content.customerSettings.enabled);
			this.customerSettings.set("label", this.content.customerSettings.label);
			this.orderSettings.set("header", this.content.orderSettings.header);
			this.orderSettings.set("enabled", this.content.orderSettings.enabled);
			this.orderSettings.set("label", this.content.orderSettings.label)
		},
		initSortable: function () {
			var a = this;
			setTimeout(function () {
				a.$(".sortable-list").sortable({
					containment: "parent", placeholder: "tab-sort-placeholder", cancel: "label", stop: function (c, d) {
						var b, e;
						e = $(d.item);
						itemId = e.attr("id");
						list = e.parent();
						currentPosition = list.children("li.field").index(e);
						ancestors = e.parents(".field");
						configType = $(e.parents(".config-type"));
						e = "customer-select" === configType.attr("id") ? a.content.customerSettings : a.content.orderSettings;
						if (ancestors.length) for (b = ancestors.length - 1; 0 <= b; b--) {
							var f =
								$(ancestors[b]).attr("id");
							e = e.fields.findProperty("label", f)
						}
						if (b = e.fields.findProperty("label", itemId)) e.fields.removeObject(b), e.fields.insertAt(currentPosition, b), a.initSortable()
					}
				})
			})
		}
	});
	Tawk.TabItemView = Ember.View.extend({
		template: Ember.TEMPLATES.tabItem, tagName: "li", classNames: "sortable-item", hasNewItem: function () {
			if ("inDOM" === this._state && this.content && this.content.newItem) {
				var a = Tawk.TabItemView.create({
					elementId: this.content.newItem.id, content: this.content.newItem, controller: this.controller,
					parentId: this.content.id
				});
				a.appendTo(this.$(".sortable-list"));
				tabsViewCol.push(a);
				this.content.set("newItem", null)
			}
		}.observes("content.newItem"), didInsertElement: function () {
			var a = this;
			this.content.items && this.content.items.forEach(function (c) {
				c = Tawk.TabItemView.create({
					elementId: c.id,
					content: c,
					controller: a.controller,
					parentId: a.content.id
				});
				c.appendTo(a.$(".sortable-list"));
				tabsViewCol.push(c)
			});
			this.content.isMenu ? this.$(".menu-selection").html(this.content.title) : this.content.isText && this.$(".content").val(this.content.content);
			this.$('.tab-type[data-id="' + this.content.id + '"]').val(this.content.tabType);
			this.$().delegate('.tab-status[data-id="' + this.content.id + '"]', "change", function () {
				var c = $(this).is(":checked");
				a.content.set("enabled", c);
				a.content.items && a.content.items.setEach("enabled", c)
			});
			this.$().delegate('.tab-type[data-id="' + this.content.id + '"]', "change", function () {
				var c = $(this).val();
				a.content.set("isURL", "url" === c);
				a.content.set("isMenu", "menu" === c);
				a.content.set("isText", "text" === c);
				a.content.set("tabType", c);
				setTimeout(function () {
					"menu" !== c || a.content.items && a.content.items.length || a.controller.addMenuItem(a.content.id)
				})
			});
			this.parentId ? this.$().delegate(".item-title", "keyup", function () {
				var c = $(this).val();
				a.content.set("title", c)
			}) : this.$().delegate(".main-title", "keyup", function () {
				var c = $(this).val();
				a.content.set("title", c);
				$('.preview-item[data-id="' + a.content.id + '"]').find(".menu-selection").html(c)
			});
			this.$().delegate(".secureUrl", "keyup", function () {
				var c = $(this).val();
				a.content.set("content",
					c)
			});
			this.$().delegate(".add-menu-item", "click", function () {
				a.controller.addMenuItem(a.content.id)
			});
			this.parentId ? this.$().delegate(".remove-menu-item", "click", function () {
				a.controller.removeMenuItem(a.content.id, a.parentId);
				a.$().remove()
			}) : this.$().delegate(".remove-tab", "click", function () {
				a.controller.removeTab(a.content.id);
				a.$().remove()
			});
			this.isTextChanged()
		}, wilLDestroyElement: function () {
			this.$(".sortable-list").sortable("destroy");
			$(".sortable-list").sortable("refresh");
			$(".sortable-list").sortable("refreshPositions")
		},
		isTextChanged: function () {
			var a, c = this;
			"inDOM" === this._state && (this.content && this.content.isText) && setTimeout(function () {
				a = new SimpleMDE({
					element: c.$("textarea.content")[0],
					spellChecker: !1,
					toolbar: "bold italic heading heading-smaller | code quote link unordered-list ordered-list | clean-block preview".split(" "),
					blockStyles: {italic: "_"},
					previewRender: function (a) {
						return markdownConverter.makeHtml(encodeStr(a))
					}
				});
				a.value(c.content.content);
				c.content.set("beautifiedContent", markdownConverter.makeHtml(encodeStr(c.content.content)));
				a.codemirror.on("change", function () {
					var d = a.value();
					c.content.set("beautifiedContent", markdownConverter.makeHtml(encodeStr(d)));
					c.content.set("content", d)
				})
			})
		}.observes("content.isText")
	});
	Tawk.TabsView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.tabs,
		elementId: "property-tabs",
		controller: null,
		subViewId: "tabs",
		showContent: null,
		showInnerContent: null,
		integrationCustomization: null,
		listIsLoaded: function () {
			var a = this;
			"inDOM" === this._state && (this.controller && !this.controller.isLoading &&
				this.controller.tabList) && (this.controller.tabList.forEach(function (c) {
				c = Tawk.TabItemView.create({
					elementId: c.id,
					content: c,
					controller: a.controller,
					formValidation: a.formValidationSetup.bind(a)
				});
				c.appendTo(a.$(".sortable-list"));
				tabsViewCol.push(c)
			}), setTimeout(function () {
				var c = a.$(".preview-item.not-dropdown").first(), d = c.attr("data-id");
				c.addClass("active open");
				(tabObj = a.controller.tabList.findProperty("id", d)) && (tabObj.previewImage ? a.set("beautifiedContent", '<img src="' + tabObj.previewImage + '" />') :
					tabObj.isURL ? a.set("beautifiedContent", '<iframe src="' + tabObj.content + '" width="100%" height="100%" frameborder="0" allowtransparency="false" />') : a.set("beautifiedContent", '<div class="padding-10">' + tabObj.beautifiedContent + "</div>"))
			}), this.initSortable(), this.formValidationSetup())
		}.observes("controller.isLoading"),
		hasNewTab: function () {
			var a = this;
			if ("inDOM" === this._state && this.controller && this.controller.newTab) {
				var c = Tawk.TabItemView.create({
					elementId: this.controller.newTab.id, content: this.controller.newTab,
					controller: this.controller, formValidation: a.formValidationSetup.bind(a)
				});
				c.appendTo(this.$(".outer-list"));
				tabsViewCol.push(c);
				setTimeout(function () {
					a.initSortable()
				}, 0);
				this.controller.set("newTab", null)
			}
		}.observes("controller.newTab"),
		didInsertElement: function () {
			var a = this;
			this._super();
			this.initSortable();
			this.$().delegate("#add-tab", "click", function (c) {
				a.controller.addTab();
				return !1
			});
			this.$().delegate(".tab", "click", function () {
				var c, d = $(this).parent().attr("data-id");
				a.$().find(".preview-item").removeClass("active open");
				c = a.controller.tabList.findProperty("id", d);
				c.isMenu ? a.$('.preview-item[data-id="' + d + '"]').addClass("open") : (a.$('.preview-item[data-id="' + d + '"]').addClass("active"), a.set("tabContent", null), c.previewImage ? a.set("tabContent", {
					type: "image",
					item: c
				}) : c.isURL ? a.set("tabContent", {type: "url", item: c}) : a.set("tabContent", {
					type: "text",
					item: c
				}))
			});
			this.$().delegate(".inner-tab", "click", function () {
				var c, d = $(this).parents(".preview-item").attr("data-id");
				c = $(this).parent().attr("data-id");
				c = a.controller.tabList.findProperty("id",
					d).items.findProperty("id", c);
				a.$().find(".preview-item").removeClass("open active");
				a.$('.preview-item[data-id="' + d + '"]').addClass("active");
				a.$('.preview-item[data-id="' + d + '"]').find(".menu-selection").html(c.title);
				c.previewImage ? a.set("tabContent", {
					type: "image",
					item: c
				}) : c.isURL ? a.set("tabContent", {type: "url", item: c}) : a.set("tabContent", {
					type: "text",
					item: c
				})
			});
			this.$().delegate(".configure-integration", "click", function (c) {
				var d = $(this).attr("data-id");
				c.preventDefault();
				"shopify" === d && Tawk.webProperties.getShopifySettings(a.controller.activeProperty.id,
					function (b, c) {
						b || (null !== a.integrationCustomization ? (a.integrationCustomization.set("content", c), a.integrationCustomization.openView()) : (a.set("integrationCustomization", Tawk.TabIntegrationSettings.create({
							closeCallback: a.closeIntegrationCustomization.bind(a),
							content: c,
							controller: a.controller
						})), a.integrationCustomization.append()))
					})
			})
		},
		closeIntegrationCustomization: function () {
			this.integrationCustomization && (this.integrationCustomization.remove(), this.set("integrationCustomization", null))
		},
		currentTabChanged: function () {
			"inDOM" ===
			this._state && (null === this.tabContent ? this.set("beautifiedContent", null) : "image" === this.tabContent.type ? this.set("beautifiedContent", '<img src="' + this.tabContent.item.previewImage + '" />') : "url" === this.tabContent.type ? this.set("beautifiedContent", '<iframe src="' + this.tabContent.item.content + '" width="100%" height="100%" frameborder="0" allowtransparency="false" />') : "text" === this.tabContent.type && this.set("beautifiedContent", '<div class="padding-10">' + this.tabContent.item.beautifiedContent + "</div>"))
		}.observes("tabContent.item.content"),
		formValidationSetup: function () {
			var a = this;
			this.formValidation ? this.formValidation.resetForm() : this.set("formValidation", this.$("#tabs-content-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d)
				}, submitHandler: function (c) {
					a.controller.saveTabSettings(function (c) {
						c ? a.saveError() : a.saveSuccess()
					});
					return !1
				}
			}))
		},
		initSortable: function () {
			var a = this;
			this.$(".sortable-list").sortable({
				connectWith: ".sortable-list",
				placeholder: "tab-sort-placeholder",
				items: "li:not(.not-sortable)",
				cancel: "label",
				start: function (c,
				                 d) {
					a.set("currentTab", d.item[0]);
					a.set("currentTabParent", d.item.parent()[0])
				},
				receive: function (a, d) {
					$(this).hasClass("outer-list") ? 10 < $(this).children().length && $(d.sender).sortable("cancel") : 5 < $(this).children().length && $(d.sender).sortable("cancel")
				},
				stop: function (c, d) {
					var b, e, f, g = $(d.item).attr("id"), h = $(d.item).next().attr("id");
					b = $(d.item).prev().attr("id");
					f = $(a.currentTabParent).attr("data-id");
					e = d.item.parent().attr("data-id");
					a.currentTab === d.item[0] && a.controller.moveToList(g, f, h, b, e)
				}
			})
		},
		wilLDestroyElement: function () {
			tabsViewCol.forEach(function (a) {
				a.destroy()
			});
			tabsViewCol.clear()
		}
	});
	Tawk.AlertsView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.alertsMain,
		elementId: "property-alerts",
		controller: null,
		subViewId: "alerts",
		didInsertElement: function () {
			var a = this;
			this._super();
			this.$("#alert-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					var d = a.$("#alert-content").val();
					a.controller.saveAlert(d, function (b) {
						b ? a.saveError(d ?
							"Unable to post alert. Please try again." : "Unable to delete alert. Please try again.") : a.saveSuccess(d ? "Posted Alert" : "Successfully removed alert")
					});
					return !1
				}
			});
			this.$().delegate("#clear", "click", function () {
				a.$("#alert-content").val("");
				a.$("#alert-form").submit();
				return !1
			})
		},
		alertChanged: function () {
			"inDOM" === this._state && this.$("#alert-content").val(this.controller.alert)
		}.observes("controller.alert")
	});
	Tawk.KnowledgebaseView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.knowledgebase,
		elementId: "property-knowledgebase",
		controller: null,
		subViewId: "knowledgebase",
		editor: null,
		willDestroyElement: function () {
			var a = {}, c = this;
			$("body").unbind("keydown.closeView");
			this.controller.activeKnowledgebase && (a.categoryId = this.$("#category-select").val(), a.title = this.$("#kb-title").val() || languageParser.translate("admin", "auto_saved_draft"), a.content = this.editor.value(), a.status = this.$("#status-select").val(), a.isAutoSaved = !0, "draft" === a.status && (a.content && this.controller.activeKnowledgebase.content !=
				a.content) && this.controller.saveKBContent(a, function (a, b) {
				a || (c.controller.autoSavedDraft && c.controller.saveLastSubView({itemId: c.controller.autoSavedDraft}), Tawk.header.set("notificationText", languageParser.translate("admin", "auto_save_success")))
			}))
		},
		didInsertElement: function () {
			var a = this, c = !1;
			this._super();
			this.$().delegate("#category", "keyup", function () {
				$(this).val().trim() ? a.$("#category-list").removeClass("select2-display-none") : a.$("#category-list").addClass("select2-display-none")
			});
			this.$().delegate(".category-select",
				"click", function () {
					$(this).attr("data-id");
					var c = $(this).attr("data-content");
					a.$("#category").val(c);
					a.$("#category-list").addClass("select2-display-none")
				});
			this.$().on("click", function () {
				"inDOM" === a._state && a.$("#category-list").addClass("select2-display-none")
			});
			this.$().delegate("#category-select", "change", function () {
				"new" === $(this).val() ? a.$("#new-category-field").removeClass("hidden") : a.$("#new-category-field").addClass("hidden")
			});
			this.$("#knowledgebase-form").validate({
				errorPlacement: function (a,
				                          b) {
					a.insertAfter(b.parent())
				}, submitHandler: function (c) {
					c = {};
					c.categoryId = a.$("#category-select").val();
					"new" === c.categoryId && (c.categoryId = null, c.newCategory = a.$("#category-name").val());
					c.title = a.$("#kb-title").val();
					c.content = a.editor.value();
					c.status = a.$("#status-select").val();
					a.$("#knowledgebase-form footer button").attr("disabled", "disabled");
					a.controller.saveKBContent(c, function (b, c) {
						a.$("#knowledgebase-form footer button").removeAttr("disabled");
						b ? a.saveError(c) : a.saveSuccess()
					});
					return !1
				}
			});
			this.$("#manage-categories").click(function () {
				a.set("manageCategories", !0)
			});
			this.$().delegate(".edit-category", "click", function () {
				var a = $(this).parents("tr");
				a.find(".display-category").addClass("hidden");
				a.find(".action-buttons-container").addClass("hidden");
				a.find(".edit-category-input").removeClass("hidden");
				a.find(".edit-buttons-container").removeClass("hidden")
			});
			this.$().delegate(".cancel-edit", "click", function () {
				var a = $(this).parents("tr");
				a.find(".display-category").removeClass("hidden");
				a.find(".action-buttons-container").removeClass("hidden");
				a.find(".edit-category-input").addClass("hidden");
				a.find(".edit-buttons-container").addClass("hidden")
			});
			this.$("#add-category-form").validate({
				errorPlacement: function (a, b) {
					a.insertAfter(b.parent())
				}, submitHandler: function (c) {
					var b = $("#new-category-input", c).val();
					a.controller.addCategory(b, function (b, f) {
						b ? a.saveError(f ? f : "Unable to add category.") : (a.saveSuccess("Successfully added category."), $("#new-category-input", c).val(""))
					})
				}
			});
			this.$().delegate(".save-edit",
				"click", function () {
					var c = $(this).parents("tr"), b = $(this).attr("data-id");
					(category = c.find(".edit-category-input .input").val()) && a.controller.updateCategory(b, category, function (b, f) {
						b ? a.saveError(f ? f : "Unable to delete category.") : (a.saveSuccess("Successfully edited category."), c.find(".display-category").removeClass("hidden"), c.find(".action-buttons-container").removeClass("hidden"), c.find(".edit-category-input").addClass("hidden"), c.find(".edit-buttons-container").addClass("hidden"))
					})
				});
			this.$().delegate(".delete-category",
				"click", function () {
					var c = $(this).attr("data-id");
					a.controller.deleteCategory(c, function (b, c) {
						b ? a.saveError(c ? c : "Unable to delete category.") : a.saveSuccess("Successfully deleted category.")
					})
				});
			this.$().delegate("#search-category", "keyup", function () {
				var c = $(this).val();
				a.controller.set("categorySearchText", c.trim().toLowerCase())
			});
			this.$("#content-scrollable").bind("scroll.list", function (d) {
				!c && (a.controller.pagedList.currentData.length && !a.controller.pagedList.isLastPage()) && $(this).scrollTop() +
				$(this).height() >= $(this)[0].scrollHeight - 100 && (c = !0, a.controller.loadNextList(function (a, d) {
					c = !1
				}))
			});
			this.$().delegate("#search-kb-content", "submit", function () {
				var c = {
					query: a.$("#content-text").val().trim() || void 0,
					category: a.$(".category-select").val() || void 0,
					status: a.$(".status-select").val() || void 0
				};
				a.controller.searchList(c, function () {
					a.closeAdvancedFilter()
				});
				return !1
			});
			this.$().delegate("#openFilter", "click", function (a) {
				$(this).parent().toggleClass("open")
			});
			$("body").bind("click.knowledgebaseView",
				function (c) {
					$(c.target).parents("#search-kb-content").length || a.closeAdvancedFilter()
				});
			this.$().delegate("#reset-filter", "click", function () {
				a.$("#search-content").val("");
				a.$(".category-select").val("");
				a.$(".status-select").val("");
				a.$(".search").trigger("click");
				return !1
			});
			this.$().delegate("#close-filter", "click", function () {
				a.closeAdvancedFilter();
				return !1
			});
			this.$().delegate(".delete-content", "click", function (c) {
				var b = $(this).attr("data-id");
				c.stopPropagation();
				a.controller.deleteContent(b, function (b,
				                                        c) {
					b ? a.saveError(c ? c : "Unable to delete content.") : a.saveSuccess("Successfully deleted content.")
				})
			});
			$("#close-view").unbind("click.closeView");
			$("#close-view").on("click", function (c) {
				c.stopPropagation();
				if (!0 === a.manageCategories) return a.set("manageCategories", !1), !1;
				a.closeView()
			});
			$("body").unbind("keydown.closeView");
			$("body").bind("keydown.closeView", function (c) {
				if (27 === c.keyCode) {
					if (!0 === a.manageCategories) return c.stopPropagation(), a.set("manageCategories", !1), !1;
					a.closeView()
				}
			})
		},
		closeAdvancedFilter: function () {
			this.$("#search-kb-content") &&
			this.$("#search-kb-content .input-group-btn").removeClass("open")
		},
		checkHasContent: function () {
			"inDOM" === this._state && this.editor && (this.editor.value() ? (this.$("#published-option").removeAttr("disabled"), this.$("#outdated-option").removeAttr("disabled")) : (this.$("#status-select").val("draft"), this.$("#published-option").attr("disabled", "disabled"), this.$("#outdated-option").attr("disabled", "disabled")))
		},
		activeKBChanged: function () {
			var a = this;
			"inDOM" === this._state && (this.controller && this.controller.activeKnowledgebase) &&
			setTimeout(function () {
				a.controller.activeProperty.isAdmin ? a.controller.activeKnowledgebase.id ? (a.initializeEditor(), a.$("#status-select").val(a.controller.activeKnowledgebase.status), a.$("#category-select").val(a.controller.activeKnowledgebase.categoryId)) : (a.initializeEditor(), a.$("#category-select").val("")) : a.$("#kb-content-container").html(markdownConverter.makeHtml(encodeStr(a.controller.activeKnowledgebase.content)))
			}, 20)
		}.observes("controller.activeKnowledgebase"),
		initializeEditor: function () {
			var a =
				this;
			this.editor && (this.editor.toTextArea(), this.set("editor", null), this.$("#editor").val(""));
			this.set("editor", new SimpleMDE({
				element: this.$("#editor")[0],
				spellChecker: !1,
				toolbar: "bold italic heading heading-smaller | code quote link unordered-list ordered-list table | clean-block preview".split(" "),
				previewRender: function (a) {
					return markdownConverter.makeHtml(encodeStr(a))
				},
				initialValue: this.controller.activeKnowledgebase.content
			}));
			this.editor.codemirror.on("blur", function () {
				a.checkHasContent()
			});
			this.editor.value(this.controller.activeKnowledgebase.content);
			this.checkHasContent()
		}
	});
	Tawk.AdminView = Ember.View.extend({
		template: Ember.TEMPLATES.adminMain,
		elementId: "admin-main-view",
		controller: Tawk.PropertiesController.create(),
		listLimit: null,
		willDestroyElement: function () {
			this.modalFormView && (this.modalFormView.remove(), this.set("modalFormView", null))
		},
		widgetSelectionChange: function () {
			var a = this;
			"inDOM" === this._state && (this.controller && this.controller.widgetsController && this.controller.widgetsController.activeWidget) &&
			setTimeout(function () {
				"inDOM" === a._state && a.$("#widget-code-textarea").click()
			})
		}.observes("controller.widgetsController.activeWidget.id"),
		didInsertElement: function () {
			var a = this;
			this.controller.intializeView();
			this.$().delegate("#remove-own-access", "click", function () {
				var c;
				a.controller.activeProperty && (c = a.controller.activeProperty.name, checkAndSetConfirmView(!1, function (d) {
					d && socketConnector.removeAgentOwnAccess(a.controller.activeProperty.id, function (b) {
						b ? a.$(".innerContent").append('<div class="alert alert-danger fade in"><button class="close" data-dismiss="alert">\u00d7</button>' +
							languageParser.translate("admin", "remove_own_access_error", {propertyName: c}) + "</div>") : a.controller.intializeView(function () {
							a.set("previousPropertyName", c)
						})
					})
				}, languageParser.translate("admin", "remove_own_access_question", {propertyName: c}), null, languageParser.translate("admin", "remove_own_access"), languageParser.translate("admin", "yes_remove_access")))
			});
			this.$().delegate(".open-view", "click", function () {
				var c = $(this).attr("id");
				a.openEditForm(c)
			});
			this.$().delegate("#property-select", "change", function () {
				var a =
					$(this).find(":selected");
				a.attr("data-type");
				Tawk.routing.changeRoute({
					view: "admin",
					propertyId: a.val(),
					subView: null,
					itemId: null,
					widgetId: null
				})
			});
			this.$().delegate("#widget-select", "change", function () {
				a.controller.widgetsController.openWidget($(this).val())
			});
			this.$().delegate("#add-property", "click", function () {
				Tawk.routing.changeRoute({view: "admin", subView: "new-property"})
			});
			this.$().delegate("#add-widget", "click", function () {
				a.controller.widgetsController.openWidget();
				a.openEditForm("widget-settings")
			});
			this.$("#widget-code-textarea").click(function () {
				$(this).select()
			});
			this.$().delegate("#popout-widget-code-textarea", "click", function () {
				$(this).select()
			});
			this.calculateLimit();
			this.controller.limit = this.listLimit;
			this.set("isAddOnSeen", Tawk.userController.isNewFeatureSeen("add-on"));
			this.set("isBillingSeen", Tawk.userController.isNewFeatureSeen("billing"));
			this.set("isTabsSeen", Tawk.userController.isNewFeatureSeen("tabs"));
			this.set("isAlertsSeen", Tawk.userController.isNewFeatureSeen("alerts"));
			this.set("isKnowledgebaseSeen",
				Tawk.userController.isNewFeatureSeen("knowledgebase"))
		},
		resetPropertyList: function () {
			var a = this;
			this.controller.propertyListToReset && a.controller.activeProperty && (setTimeout(function () {
				a.$("#property-select").val(a.controller.activeProperty.id)
			}), this.controller.set("propertyListToReset", !1))
		}.observes("controller.propertyListToReset"),
		activePropertyLoaded: function () {
			var a = this;
			"inDOM" === this._state && (this.controller.activeProperty && this.controller.activeProperty.isLoaded && !this.controller.isReloadingList) &&
			(this.controller.activeProperty.id ? this.controller.lastViews && (setTimeout(function () {
				a.controller.lastViews.widgetId && "inDOM" === a._state && a.$("#widget-select").val(a.controller.lastViews.widgetId)
			}), this.controller.lastViews.subView && !this.controller.isUpdating ? (this.openEditForm(this.controller.lastViews.subView), "shortcuts" === this.controller.lastViews.subView && this.controller.lastViews.itemId && this.controller.shortcutsController.openItem(this.controller.lastViews.itemId)) : this.controller.saveLastView()) :
				a.openEditForm("new-property"))
		}.observes("controller.activeProperty.isLoaded"),
		openEditForm: function (a, c) {
			var d, b = Tawk.routing.getPath();
			this.modalFormView && (this.modalFormView.remove(), this.set("modalFormView", null));
			switch (a) {
				case "new-property":
					d = Tawk.NewPropertyView.create({
						controller: this.controller,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "settings":
					d = Tawk.PropertySettingsView.create({
						controller: this.controller,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "members":
					this.controller.openAgentList(this.listLimit);
					d = Tawk.MembersSettingsView.create({
						controller: this.controller.agentsController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "department":
					this.controller.openDepartmentList(this.listLimit);
					d = Tawk.DepartmentSettingsView.create({
						controller: this.controller.departmentController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "shortcuts":
					this.controller.openShortcutsList(this.listLimit);
					d = Tawk.ShortcutsView.create({
						controller: this.controller.shortcutsController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "triggers":
					this.controller.openTriggersList(this.listLimit);
					d = Tawk.TriggersView.create({
						controller: this.controller.triggersController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "ban-list":
					this.controller.openBanList(this.listLimit);
					d = Tawk.BanView.create({
						controller: this.controller.banController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "mail-settings":
					d = Tawk.MailSettingsView.create({
						controller: this.controller,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "addon-store":
					this.controller.openAddOnsStore(this.listLimit);
					d = Tawk.AddOnStoreView.create({
						controller: this.controller.addOnsController,
						closeForm: this.closeForm.bind(this)
					});
					Tawk.userController.setNewFeatureSeen("add-on");
					this.set("isAddOnSeen", !0);
					break;
				case "billing":
					this.controller.openBilling(this.listLimit);
					d = Tawk.BillingView.create({
						controller: this.controller.billingController,
						closeForm: this.closeForm.bind(this)
					});
					Tawk.userController.setNewFeatureSeen("billing");
					this.set("isBillingSeen", !0);
					break;
				case "tabs":
					this.controller.openTabs(this.listLimit);
					d =
						Tawk.TabsView.create({
							controller: this.controller.tabsController,
							closeForm: this.closeForm.bind(this)
						});
					Tawk.userController.setNewFeatureSeen("tabs");
					this.set("isTabsSeen", !0);
					break;
				case "alerts":
					this.controller.openAlerts(this.listLimit);
					d = Tawk.AlertsView.create({
						controller: this.controller.alertsController,
						closeForm: this.closeForm.bind(this)
					});
					Tawk.userController.setNewFeatureSeen("alerts");
					this.set("isAlertsSeen", !0);
					break;
				case "knowledgebase":
					this.controller.openKnowledgebase(this.listLimit);
					d = Tawk.KnowledgebaseView.create({
						controller: this.controller.knowledgebaseController,
						closeForm: this.closeForm.bind(this)
					});
					Tawk.userController.setNewFeatureSeen("knowledgebase");
					this.set("isKnowledgebaseSeen", !0);
					break;
				case "page-content":
					this.controller.openPage();
					d = Tawk.PageContentView.create({
						controller: this.controller.pageContentController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "widget-settings":
					d = Tawk.WidgetSettingsView.create({
						controller: this.controller.widgetsController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "widget-appearance":
					d = Tawk.WidgetAppearanceView.create({
						controller: this.controller.widgetsController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "widget-content":
					d = Tawk.WidgetContentView.create({
						controller: this.controller.widgetsController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "widget-behavior":
					d = Tawk.WidgetBehaviorView.create({
						controller: this.controller.widgetsController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "widget-domains":
					d = Tawk.WidgetDomainsView.create({
						controller: this.controller.widgetsController,
						closeForm: this.closeForm.bind(this)
					});
					break;
				case "widget-scheduler":
					d =
						Tawk.WidgetSchedulerView.create({
							controller: this.controller.widgetsController,
							closeForm: this.closeForm.bind(this)
						})
			}
			if (d) {
				this.controller.set("subView", a);
				this.controller.saveLastView();
				this.set("modalFormView", d);
				this.modalFormView.append();
				if (!c && b && "new-property" !== a) {
					if (this.controller.activeProperty && b.propertyId === this.controller.activeProperty.id && b.subView === a) return;
					if (-1 === this.controller.widgetSubViews.indexOf(a)) Tawk.routing.changeRoute({
						view: "admin", propertyId: this.controller.activeProperty ?
							this.controller.activeProperty.id : null, subView: a, itemId: b.itemId || "", widgetId: null
					}); else {
						if (this.controller.widgetsController.activeWidget && b.widgetId === this.controller.widgetsController.activeWidget.id) return;
						Tawk.routing.changeRoute({
							view: "admin",
							propertyId: this.controller.activeProperty ? this.controller.activeProperty.id : null,
							subView: a,
							itemId: b.itemId || "",
							widgetId: this.controller.widgetsController.activeWidget ? this.controller.widgetsController.activeWidget.id : ""
						})
					}
				}
				this.$().css("visibility", "hidden")
			}
		},
		closeForm: function () {
			this.$().css("visibility", "visible");
			this.set("modalFormView", null);
			this.controller.getLastViews();
			this.controller.lastViews.widgetId && this.$("#widget-select").val(this.controller.lastViews.widgetId)
		},
		forceCloseForm: function () {
			this.modalFormView && this.modalFormView.closeView()
		},
		calculateLimit: function () {
			this.set("listLimit", Math.ceil(($(window).height() - 40) / 40));
			this.controller.set("listLimit", this.listLimit)
		},
		visibilityChanged: function () {
			null !== this.modalFormView && this.modalFormView instanceof
			Tawk.AdminBaseView && (this.get("isVisible") ? this.modalFormView.show() : this.modalFormView.hide())
		}.observes("isVisible"),
		accessRemovedWarning: function () {
			if ("inDOM" === this._state && this.controller.previousPropertyName) {
				this.modalFormView && this.modalFormView.closeView();
				var a = languageParser.translate("admin", "access_removed", {propertyName: this.controller.previousPropertyName});
				this.$(".innerContent").append('<div class="alert alert-warning fade in"><button class="close" data-dismiss="alert">\u00d7</button>' +
					a + "</div>");
				this.controller.set("previousPropertyName", null)
			}
		}.observes("controller.previousPropertyName"),
		reloadPath: function () {
			var a = this, c = Tawk.routing.getPath();
			"inDOM" === this._state && (this.modalFormView && (this.modalFormView.controller.closeItem && !c.itemId) && this.modalFormView.controller.closeItem(), a.modalFormView && a.modalFormView.subViewId === c.subView && c.propertyId || this.controller.reloadPath(function () {
				a.modalFormView && (a.modalFormView.remove(), a.closeForm());
				a.controller.requestProperty ||
				c.subView && a.openEditForm(c.subView, !0)
			}))
		}
	});
	Tawk.AliasView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.aliasList,
		formView: null,
		elementId: "alias-list-view",
		controller: null,
		activeAliasChanged: function () {
			"inDOM" === this._state && (this.$("#set-default").removeAttr("checked"), this.$("#alias-status-container").removeClass("hidden"))
		}.observes("controller.activeAlias"),
		didInsertElement: function () {
			var a = this;
			this._super();
			this.$().delegate("#add-alias", "click", function () {
				a.controller.openItem()
			});
			this.$().delegate(".all-bulk-check", "change", function () {
				a.controller.toggleDefaultAlias(!1)
			});
			main.hasFileReader || main.hasFlash || main.showUnexpectedIssue("filereader_unsupported");
			main.hasUserMedia || (main.hasFlash || desktopConnector.enabled()) || main.showUnexpectedIssue("usermedia_unsupported");
			this.$().delegate(".image-action", "click", function () {
				var c = $(this).attr("id");
				a.$(".alert").length && a.$(".alert").remove();
				if ("upload" === c && !window.FileAPIProxy && main.hasFileReader) a.$("#alias-image").trigger("click");
				else if ("capture" === c) {
					if (main.hasUserMedia || main.hasFlash) a.$("#alias-photo-select").val(""), a.controller.openCamera()
				} else "remove" === c && (a.$("#alias-photo-select").val(""), a.controller.removeAliasImage())
			});
			window.FileAPIProxy && (!main.hasFileReader && main.hasFlash) && (this.$("#upload").fileReader({
				filereader: GLOBAL_STATIC_URL + "/scripts/filereader.swf",
				debugMode: !0
			}), this.$("#upload").change(function (c) {
				c.target.files[0] && a.controller.uploadPhoto(c.target.files[0], {width: 200, height: 200}, {
					width: 137,
					height: 137
				}, "page-profile")
			}));
			this.$().delegate("#alias-image", "change", function (c) {
				c = $(this)[0].files;
				c[0] && (a.controller.uploadPhoto(c[0], {width: 200, height: 200}, {
					width: 137,
					height: 137
				}, "page-profile"), a.$("#alias-image").val(""));
				return !1
			});
			this.$().delegate("#set-default", "change", function () {
				var c = a.$("#set-default").is(":checked");
				a.controller.activeAlias.isDefault || (c ? a.$("#alias-status-container").addClass("hidden") : a.$("#alias-status-container").removeClass("hidden"))
			});
			this.$("#alias-form").validate({
				errorPlacement: function (a,
				                          d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					var d;
					c = null;
					var b = !0;
					a.$("#set-default").length && (c = a.$("#set-default").is(":checked"));
					!c && a.$("#alias-status").length && (b = a.$("#alias-status").is(":checked"));
					a.controller.activeAlias.aliasId || (d = !0);
					a.controller.saveAlias(c, b, function (b) {
						b ? a.saveError(d ? languageParser.translate("form_validation_messages", "alias_add_error") : null) : a.saveSuccess(d ? languageParser.translate("form_validation_messages", "alias_add_success") : null)
					});
					return !1
				}
			});
			this.isAliasLimitReached()
		},
		isAliasLimitReached: function () {
			"inDOM" === this.state && (this.controller && this.controller.pagedList) && (30 <= this.controller.pagedList.currentData.length ? this.$("#add-alias").addClass("hidden") : this.$("#add-alias").removeClass("hidden"))
		}.observes("controller.pagedList.currentData.length")
	});
	Tawk.EditAccountView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.accountForm,
		elementId: "account-settings-form-view",
		controller: null,
		classNames: "overlay-form",
		didInsertElement: function () {
			var a = this;
			this._super();
			$("body").unbind("keydown.closeView");
			$("body").bind("keydown.closeView", function (c) {
				if (27 === c.keyCode) return c.stopPropagation(), a.closeForm(), a.remove(), !1
			});
			this.$("#account-settings-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					c = {
						name: $("#user-name").val(),
						email: $("#user-email").val(),
						password: $("#user-password").val()
					};
					a.clearSaveMessages();
					a.controller.saveUserSettings(c, function (c) {
						c ? a.saveError() : a.saveSuccess()
					});
					return !1
				}
			})
		}
	});
	Tawk.RestApiKeysView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.restApikView,
		formView: null,
		elementId: "rest-apik-view",
		controller: null,
		didInsertElement: function () {
			var a = this;
			this._super();
			this.$("#create-key").click(function () {
				a.controller.createKey(function (c) {
					c ? a.saveError("Unable to create key.") : a.saveSuccess("Successfully created key.")
				})
			});
			this.$().delegate(".delete-key", "click", function () {
				var c = $(this).attr("data-id");
				a.controller.revokeKey(c, function (c, b) {
					c ? a.saveError(b ?
						b : "Unable to revoke key.") : a.saveSuccess("Successfully revoked key.")
				})
			})
		}
	});
	Tawk.AccountView = Ember.View.extend({
		template: Ember.TEMPLATES.accountMain,
		elementId: "acount-main-view",
		controller: Tawk.AccountController.create(),
		listLimit: null,
		willInsertElement: function () {
			this.controller.openProperty()
		},
		willDestroyElement: function () {
			this.modalFormView && (this.modalFormView.remove(), this.set("modalFormView", null))
		},
		widgetSelectionChange: function () {
			var a = this;
			"inDOM" === this.state && (this.controller && this.controller.widgetsController &&
				this.controller.widgetsController.activeWidget) && setTimeout(function () {
				a.$("#widget-code-textarea").focus()
			})
		}.observes("controller.widgetsController.activeWidget.id"),
		didInsertElement: function () {
			var a = this;
			this.$().delegate(".open-view", "click", function () {
				var c = $(this).attr("id");
				a.openEditForm(c)
			});
			this.$("#edit-profile-tawkid").click(function () {
				a.$("#tawkid-text").addClass("hidden");
				a.$("#tawkid-input").removeClass("hidden")
			});
			this.$("#cancel-profile-tawkid").click(function () {
				a.$("#tawkid-text").removeClass("hidden");
				a.$("#tawkid-input").addClass("hidden")
			});
			this.$("#tawkid-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent());
					a.css({position: "absolute", margin: "0px"})
				}, submitHandler: function (c) {
					c = a.$("#page-tawkid").val();
					a.$(".alert").remove();
					a.controller.pageContentController.savePageCustomization(void 0, c, function (c) {
						c ? a.$().append('<div class="alert alert-danger fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa fa-ban"></i>' + languageParser.translate("form_validation_messages",
							"error_save") + "</div>") : (a.$().append('<div class="alert alert-success fade in"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa fa-check"></i>' + languageParser.translate("form_validation_messages", "success_update") + "</div>"), a.$("#tawkid-text").removeClass("hidden"), a.$("#tawkid-input").addClass("hidden"))
					});
					return !1
				}
			});
			this.$().delegate("#page-tawkid", "blur", function () {
				var c = $(this);
				c.val().trim() && !c.hasClass("error") && (a.$(".small-transparent-spinner").removeClass("hidden"),
					a.controller.pageContentController.checkTawkId(c.val(), function (d, b) {
						d || b ? c.addClass("invalid") : c.removeClass("invalid");
						a.$("#tawkid-form").validate().element("#page-tawkid");
						a.$(".small-transparent-spinner").addClass("hidden")
					}))
			});
			this.calculateLimit();
			this.set("isTabsSeen", Tawk.userController.isNewFeatureSeen("tabs"))
		},
		openEditForm: function (a) {
			var c;
			this.$(".alert").remove();
			switch (a) {
				case "settings":
					c = Tawk.EditAccountView.create({controller: Tawk.userController, closeForm: this.closeForm});
					break;
				case "aliases":
					this.controller.aliasController.loadList();
					c = Tawk.AliasView.create({controller: this.controller.aliasController, closeForm: this.closeForm});
					break;
				case "global-shortcuts":
					this.controller.openShortcutsList(this.listLimit, !0);
					c = Tawk.ShortcutsView.create({
						controller: this.controller.shortcutsController,
						closeForm: this.closeForm
					});
					break;
				case "shortcuts":
					this.controller.openShortcutsList(this.listLimit);
					c = Tawk.ShortcutsView.create({
						controller: this.controller.shortcutsController,
						closeForm: this.closeForm
					});
					break;
				case "ban-list":
					this.controller.openBanList(this.listLimit);
					c = Tawk.BanView.create({controller: this.controller.banController, closeForm: this.closeForm});
					break;
				case "page-content":
					c = Tawk.PageContentView.create({
						controller: this.controller.pageContentController,
						closeForm: this.closeForm
					});
					break;
				case "widget-settings":
					c = Tawk.WidgetSettingsView.create({
						controller: this.controller.widgetsController,
						closeForm: this.closeForm
					});
					break;
				case "widget-appearance":
					c = Tawk.WidgetAppearanceView.create({
						controller: this.controller.widgetsController,
						closeForm: this.closeForm
					});
					break;
				case "widget-content":
					c = Tawk.WidgetContentView.create({
						controller: this.controller.widgetsController,
						closeForm: this.closeForm
					});
					break;
				case "tabs":
					this.controller.openTabs(this.listLimit);
					c = Tawk.TabsView.create({
						controller: this.controller.tabsController,
						closeForm: this.closeForm.bind(this)
					});
					Tawk.userController.setNewFeatureSeen("tabs");
					this.set("isTabsSeen", Tawk.userController.isNewFeatureSeen("tabs"));
					break;
				case "rest-api":
					this.controller.openApiList(this.listLimit),
						c = Tawk.RestApiKeysView.create({
							controller: this.controller.restApiKeysController,
							closeForm: this.closeForm
						})
			}
			c && (this.set("modalFormView", c), this.modalFormView.append())
		},
		closeForm: function () {
			this.set("modalFormView", null)
		},
		calculateLimit: function () {
			this.set("listLimit", Math.ceil(($(window).height() - 40) / 40))
		}
	});
	Tawk.ReportingView = Ember.View.extend({
		template: Ember.TEMPLATES.reportingMain,
		elementId: "reporting-main-view",
		controller: Tawk.ReportingController.create(),
		graphEl: null,
		graph: null,
		willInsertElement: function () {
			this.controller.initializeView()
		},
		willDestroyElement: function () {
			$("body").unbind("click.reportingDateRangeForm");
			$("#analytics-tooltip").remove();
			this.controller.clearData()
		},
		didInsertElement: function () {
			var a = this;
			this.set("graphEl", this.$("#graph-container"));
			$("<div id='analytics-tooltip'></div>").appendTo("body");
			$("body").bind("click.reportingDateRangeForm", function (c) {
				a.$("#applyFilter").is(c.target) || (a.$("#closeFilter").is(c.target) || !(a.$("#analytics-filter").is(c.target) || 0 < a.$("#analytics-filter").has(c.target).length ||
					$(".ui-datepicker-header").is(c.target) || 0 < $(c.target).parents(".ui-datepicker-header").length || 0 < $(c.target).parents("#ui-datepicker-div").length)) || (c.stopPropagation(), c.preventDefault())
			});
			this.$("#analytics-from").val(moment(this.controller.filters.startDate).format("DD/MMM/YYYY"));
			this.$("#analytics-from").datepicker({
				defaultDate: this.controller.filters.startDate,
				changeMonth: !0,
				numberOfMonths: 3,
				monthNames: moment.months(),
				minDate: "-365D",
				maxDate: "-1d",
				dateFormat: "dd/M/yy",
				prevText: '<i class="fa fa-chevron-left"></i>',
				nextText: '<i class="fa fa-chevron-right"></i>',
				constrainInput: !0,
				onClose: function () {
					var c = a.$("#analytics-to").datepicker("getDate"),
						d = a.$("#analytics-from").datepicker("getDate");
					a.$("#analytics-to").datepicker("option", "minDate", d);
					d <= c && a.$("#analytics-to").val(a.$("#analytics-to").val())
				},
				onSelect: function (c) {
					"custom" !== a.$("#time-frame").val() && (a.$("#time-frame").val("custom"), a.$("#time-frame").change())
				}
			});
			this.$("#analytics-to").val(moment(this.controller.filters.endDate).format("DD/MMM/YYYY"));
			this.$("#analytics-to").datepicker({
				defaultDate: this.controller.filters.endDate,
				changeMonth: !0,
				numberOfMonths: 3,
				monthNames: moment.months(),
				minDate: "-365D",
				maxDate: "0",
				dateFormat: "dd/M/yy",
				prevText: '<i class="fa fa-chevron-left"></i>',
				nextText: '<i class="fa fa-chevron-right"></i>',
				constrainInput: !0,
				onClose: function () {
					var c = a.$("#analytics-From").datepicker("getDate"),
						d = a.$("#analytics-to").datepicker("getDate");
					a.$("#analytics-from").datepicker("option", "maxDate", d);
					d >= c && a.$("#analytics-to").val(a.$("#analytics-from").val())
				},
				onSelect: function (c) {
					"custom" !== a.$("#time-frame").val() && (a.$("#time-frame").val("custom"), a.$("#time-frame").change())
				}
			});
			this.$().delegate("#property-select", "change", function () {
				var c = $(this).find("option:selected"), d = $(c).val(), c = $(c).attr("data-type");
				a.controller.openProperty(d, c, function () {
				})
			});
			this.$().delegate("#time-frame", "change", function () {
				var c = $(this).find("option:selected"), c = $(c).val(), d = a.$("#analytics-to").datepicker("getDate"),
					b = new Date;
				b.getFullYear();
				b.getMonth();
				b.getDate();
				var e = new Date(d.getFullYear(), d.getMonth(), d.getDate() - 6);
				a.controller.set("timeFrame", c);
				switch (c) {
					case "custom":
						a.changeFilterDates(e, d);
						break;
					case "day":
						a.changeFilterDates(new Date(d.getFullYear(), d.getMonth(), d.getDate() - 1), d);
						break;
					case "week":
						d.getDay() && (d = a.getLastMonday(d), e = a.getLastMonday(new Date(d.getFullYear(), d.getMonth(), d.getDate() - 1)), d = new Date(e.getFullYear(), e.getMonth(), e.getDate() + 6));
						a.changeFilterDates(e, d);
						break;
					case "month":
						b.getMonth() === d.getMonth() ? a.changeFilterDates(new Date(b.getFullYear(),
							b.getMonth(), 1), b) : a.changeFilterDates(new Date(d.getFullYear(), d.getMonth(), 1), new Date(d.getFullYear(), d.getMonth() + 1, 0));
						break;
					case "7days":
						a.changeFilterDates(e, d);
						break;
					case "30days":
						a.changeFilterDates(new Date(d.getFullYear(), d.getMonth() - 1, d.getDate() - 1), d)
				}
			});
			this.$().delegate("#prev", "click", function () {
				var c = a.$("#analytics-from").datepicker("getDate"), d = a.$("#analytics-to").datepicker("getDate");
				switch (a.controller.timeFrame) {
					case "day":
						a.changeFilterDates(new Date(c.getFullYear(), c.getMonth(),
							c.getDate() - 1), new Date(d.getFullYear(), d.getMonth(), d.getDate() - 1));
						break;
					case "week":
						a.changeFilterDates(new Date(c.getFullYear(), c.getMonth(), c.getDate() - 7), new Date(d.getFullYear(), d.getMonth(), d.getDate() - 7));
						break;
					case "month":
						a.changeFilterDates(new Date(c.getFullYear(), c.getMonth() - 1, 1), new Date(c.getFullYear(), c.getMonth(), 0));
						break;
					case "7days":
						a.changeFilterDates(new Date(c.getFullYear(), c.getMonth(), c.getDate() - 7), new Date(d.getFullYear(), d.getMonth(), d.getDate() - 7));
						break;
					case "30days":
						a.changeFilterDates(new Date(c.getFullYear(),
							c.getMonth() - 1, c.getDate()), new Date(d.getFullYear(), d.getMonth() - 1, d.getDate()))
				}
			});
			this.$().delegate("#next", "click", function () {
				var c = a.$("#analytics-from").datepicker("getDate"), d = a.$("#analytics-to").datepicker("getDate"),
					b = new Date;
				b.getFullYear();
				b.getMonth();
				b.getDate();
				var e = null, f = null;
				switch (a.controller.timeFrame) {
					case "day":
						e = new Date(c.getFullYear(), c.getMonth(), c.getDate() + 1);
						f = new Date(d.getFullYear(), d.getMonth(), d.getDate() + 1);
						break;
					case "week":
						e = new Date(c.getFullYear(), c.getMonth(),
							c.getDate() + 7);
						f = new Date(d.getFullYear(), d.getMonth(), d.getDate() + 7);
						break;
					case "month":
						e = new Date(c.getFullYear(), c.getMonth() + 1, 1);
						f = new Date(d.getFullYear(), c.getMonth() + 2, 0);
						f.getMonth() === b.getMonth() && (e = new Date(b.getFullYear(), b.getMonth(), 1), f = b);
						break;
					case "7days":
						e = new Date(c.getFullYear(), c.getMonth(), c.getDate() + 7);
						f = new Date(d.getFullYear(), d.getMonth(), d.getDate() + 7);
						break;
					case "30days":
						e = new Date(c.getFullYear(), c.getMonth() + 1, c.getDate()), f = new Date(d.getFullYear(), d.getMonth() +
							1, d.getDate())
				}
				f && (f && f <= b) && a.changeFilterDates(e, f)
			});
			this.$().delegate("#time-frame-data-list", "change", function () {
				var c = $(this).find("option:selected"), d = parseInt($(c).val());
				a.$("#analytics-to").datepicker("getDate");
				var b = new Date;
				"month" === a.controller.timeFrame && (c = new Date(b.getFullYear(), d, 1), d = b.getMonth() === d ? b : new Date(b.getFullYear(), d + 1, 0), a.changeFilterDates(c, d))
			});
			this.$("#applyFilter").click(function () {
				var c = {
					agentId: a.$("#agent-id").val(),
					departmentId: a.$("#department-id").val(),
					tagId: a.$("#tag-id").val(),
					startDate: a.$("#analytics-from").datepicker("getDate"),
					endDate: a.$("#analytics-to").datepicker("getDate")
				};
				c.agentId = "0" === c.agentId ? null : c.agentId;
				c.departmentId = "0" === c.departmentId ? null : c.departmentId;
				c.tagId = "0" === c.tagId ? null : c.tagId;
				a.controller.applyFilters(c, function (a) {
				})
			});
			this.$("#resetFilter").click(function () {
				a.controller.resetFilters(function () {
					a.$("#agent-id").val("0");
					a.$("#department-id").val("0");
					a.$("#tag-id").val("0");
					a.$("#time-frame").val("custom");
					a.$("#analytics-from").val(moment(a.controller.filters.startDate).format("DD/MMM/YYYY"));
					a.$("#analytics-to").val(moment(a.controller.filters.endDate).format("DD/MMM/YYYY"));
					a.$("#filter-container.open").toggleClass("open")
				})
			});
			this.$(".select-graph").click(function () {
				var c = this.id, d = "get";
				if (this.id) {
					a.$(".select-graph.active").removeClass("active");
					$(this).addClass("active");
					a.controller.set("label", c.replace(/-/g, "_"));
					for (var b = 0, e = c.length; b < e; b++) d = b && "-" !== c[b - 1] ? d + c[b] : d + c[b].toUpperCase();
					a.set("graph", null);
					c = d.replace(/-/g, "");
					a.controller.changeCurrentAnalytics(c)
				}
			});
			$("#graph-container").bind("plothover", function (c, d, b) {
				b ? (c = new Date(b.datapoint[0] + 6E4 * a.controller.timeZone), d = b.datapoint[1], d = b.series.label === languageParser.translate("generic", "shortest") || b.series.label === languageParser.translate("generic", "longest") || b.series.label === languageParser.translate("reporting", "average") ? a.controller.formatTimeData([[null, 60 * d]])[0][1] : d.toFixed(0), c = "day" === a.controller.timeFrame ?
					b.series.tooltipContent.replace("%x", moment(c).format("LL") + " - " + moment(c).format("ha")).replace("%y", d) : b.series.tooltipContent.replace("%x", moment(c).format("dddd") + ", " + moment(c).format("LL")).replace("%y", d), $("#analytics-tooltip").html(c).css({
					top: b.pageY - 50,
					left: b.pageX - 100
				}).fadeIn(200)) : $("#analytics-tooltip").hide()
			})
		},
		getLastMonday: function (a) {
			var c = a.getDay(), c = a.getDate() - c + (0 === c ? -6 : 1);
			return new Date(a.setDate(c))
		},
		changeFilterDates: function (a, c) {
			this.$("#analytics-from").val(moment(a).format("DD/MMM/YYYY"));
			this.$("#analytics-to").val(moment(c).format("DD/MMM/YYYY"));
			"month" === this.controller.timeFrame && (this.controller.resetTimeFrameData(), this.$("#time-frame-data-list").val(a.getMonth()))
		},
		togglePlot: function (a) {
			var c = this.graph.getData();
			c[a].lines.exists && (c[a].lines.show = !c[a].lines.show);
			c[a].points.exists && (c[a].points.show = !c[a].points.show);
			c[a].bars.exists && (c[a].bars.show = !c[a].bars.show);
			this.graph.setData(c);
			this.graph.draw()
		},
		renderGraph: function () {
			var a = this;
			"inDOM" === this._state && (this.controller &&
				this.controller.graphLoaded) && (null === this.graph && "function" === typeof $.plot ? this.set("graph", $.plot(this.graphEl, this.controller.graphData.data, {
				xaxis: {
					minTickSize: [1, "day" === this.controller.timeFrame ? "hour" : "day"],
					mode: "time",
					timeformat: "day" === this.controller.timeFrame ? "%I%p" : "%e/%b"
				},
				yaxis: {min: 0},
				grid: {hoverable: !0},
				legend: {
					show: !0, position: "nw", labelFormatter: function (a, d) {
						return '<span class="legend-title" id="' + d.idx + '"">' + a + "</span>"
					}
				}
			})) : null !== this.graph ? (this.graph.getOptions().xaxes[0].minTickSize =
				[1, "day" === this.controller.timeFrame ? "hour" : "day"], this.graph.getOptions().xaxes[0].timeformat = "day" === this.controller.timeFrame ? "%I%p" : "%e/%b", this.graph.setData(this.controller.graphData.data), this.graph.setupGrid(), this.graph.draw()) : this.set("graph", null), (null === this.graph && "function" === typeof $.plot || null !== this.graph) && $(".legend-title").click(function () {
				this.id && ($(this).closest("tr").toggleClass("is-hidden"), a.togglePlot(this.id))
			}))
		}.observes("controller.graphLoaded")
	});
	Tawk.LeaderboardView =
		Ember.View.extend({
			template: Ember.TEMPLATES.leaderboardMain,
			elementId: "leaderboard-main-view",
			controller: Tawk.LeaderboardController.create(),
			errorMessage: null,
			didInsertElement: function () {
				var a = this;
				this.controller.getAgentStatistics(function (c, d) {
					var b = moment(a.controller.filters.startTime).format("DD/MMM/YYYY"),
						e = moment(a.controller.filters.endTime).format("DD/MMM/YYYY");
					a.$("#analytics-from").val(b);
					a.$("#analytics-to").val(e);
					a.$("#filter-from").html(b);
					a.$("#filter-to").html(e);
					c ? a.set("errorMessage",
						d) : a.set("errorMessage", null)
				});
				this.$("#table-sort").click(function () {
					a.controller.toggleSort()
				});
				this.$(".filter-period").click(function () {
					var c = $(this).attr("id"), d = moment(), b = a.$("#property-select").find("option:selected").val(),
						e = null, e = {};
					$(this).hasClass("active") || (a.$(".filter-period.active").removeClass("active"), $(this).addClass("active"), e = "period-1w" === c ? moment().startOf("day").subtract(6, "days") : "period-4w" === c ? moment().startOf("day").subtract(27, "days") : "period-1y" === c ? moment().startOf("day").subtract(1,
						"year") : "period-mtd" === c ? moment().startOf("month") : "period-qtd" === c ? moment().startOf("quarter") : "period-ytd" === c ? moment().startOf("year") : moment("2018-01-01").startOf("day"), e = {
						propertyId: "all" === b ? void 0 : b,
						startTime: e,
						endTime: d
					}, a.controller.applyFilters(e, function (b, c) {
						var d = a.controller.filters.startTime.format("DD/MMM/YYYY"),
							e = a.controller.filters.endTime.format("DD/MMM/YYYY");
						a.$("#filter-from").html(d);
						a.$("#filter-to").html(e);
						a.$("#analytics-from").val(d);
						a.$("#analytics-to").val(e);
						a.$(".smart-form.open").toggleClass("open");
						b ? a.set("errorMessage", c) : a.set("errorMessage", null)
					}))
				});
				this.$().delegate("#property-select", "change", function () {
					var c = a.$("#property-select").find("option:selected").val();
					a.controller.filters.propertyId = "all" !== c ? c : void 0;
					a.controller.getAgentStatistics(function (c, b) {
						c ? a.set("errorMessage", b) : a.set("errorMessage", null)
					})
				});
				this.$("#openFilter").click(function (a) {
					$(this).parent().toggleClass("open")
				});
				this.$("#filterBack").click(function (c) {
					a.$(".smart-form.open").toggleClass("open")
				});
				this.$("#analytics-from").datepicker({
					changeMonth: !0,
					numberOfMonths: 3,
					monthNames: moment.months(),
					minDate: "-365D",
					maxDate: "-1d",
					dateFormat: "dd/M/yy",
					prevText: '<i class="fa fa-chevron-left"></i>',
					nextText: '<i class="fa fa-chevron-right"></i>',
					constrainInput: !0,
					onClose: function () {
						var c = a.$("#analytics-to").datepicker("getDate"),
							d = a.$("#analytics-from").datepicker("getDate");
						a.$("#analytics-to").datepicker("option", "minDate", d);
						d <= c && a.$("#analytics-to").val(a.$("#analytics-to").val())
					}
				});
				this.$("#analytics-to").datepicker({
					changeMonth: !0,
					numberOfMonths: 3,
					monthNames: moment.months(),
					minDate: "-365D",
					maxDate: "0",
					dateFormat: "dd/M/yy",
					prevText: '<i class="fa fa-chevron-left"></i>',
					nextText: '<i class="fa fa-chevron-right"></i>',
					constrainInput: !0,
					onClose: function () {
						var c = a.$("#analytics-From").datepicker("getDate"),
							d = a.$("#analytics-to").datepicker("getDate");
						a.$("#analytics-from").datepicker("option", "maxDate", d);
						d >= c && a.$("#analytics-to").val(a.$("#analytics-from").val())
					}
				});
				this.$("#closeFilter").click(function () {
					a.$(".smart-form.open").toggleClass("open")
				});
				this.$("#applyFilter").click(function () {
					var c = a.$("#property-select").find("option:selected").val(), c = {
						propertyId: "all" === c ? void 0 : c,
						startTime: moment(a.$("#analytics-from").datepicker("getDate")).startOf("day"),
						endTime: moment(a.$("#analytics-to").datepicker("getDate")).endOf("day")
					};
					a.$(".smart-form.open").toggleClass("open");
					a.controller.applyFilters(c, function (c, b) {
						a.$("#filter-from").html(a.controller.filters.startTime.format("DD/MMM/YYYY"));
						a.$("#filter-to").html(a.controller.filters.endTime.format("DD/MMM/YYYY"));
						c ? a.set("errorMessage", b) : a.set("errorMessage", null)
					});
					a.$(".filter-period.active").removeClass("active");
					a.$("#period-all").addClass("active")
				})
			},
			willDestroyElement: function () {
				this.controller.clearData()
			}
		});
	Tawk.NewSetupWizardView = Ember.View.extend(Tawk.AdminBaseView, {
		template: Ember.TEMPLATES.setupWizard,
		elementId: "new-setup-form",
		controller: Tawk.WizardController.create(),
		classNames: "overlay-form",
		emails: null,
		cmsLinks: [{value: "drupal", text: "Drupal", link: "https://github.com/tawk/tawk-drupal"}, {
			value: "joomla",
			text: "Joomla",
			link: "http://extensions.joomla.org/extensions/extension/communication/live-support-hosted/tawk"
		}, {value: "magento1", text: "Magento 1.x", link: "https://github.com/tawk/tawk-magento"}, {
			value: "magento2",
			text: "Magento 2",
			link: "https://github.com/tawk/tawk-magento-2/archive/master.zip"
		}, {
			value: "opencart1",
			text: "Opencart 1.x",
			link: "https://github.com/tawk/tawk-opencart"
		}, {
			value: "opencart1-5",
			text: "Opencart 1.5.6x",
			link: "https://www.opencart.com/index.php?route=marketplace/extension/info&extension_id=16209&filter_search=tawk.to"
		},
			{
				value: "opencart2",
				text: "Opencart 2.0, 2.1, & 2.2",
				link: "https://www.opencart.com/index.php?route=marketplace/extension/info&extension_id=16209&filter_search=tawk.to"
			}, {
				value: "opencart2-3",
				text: "Opencart 2.3.0.x",
				link: "https://www.opencart.com/index.php?route=marketplace/extension/info&extension_id=16209&filter_search=tawk.to"
			}, {
				value: "pretashop",
				text: "Pretashop",
				link: "https://github.com/tawk/tawk-prestashop"
			}, {value: "shopify", text: "Shopify", link: "https://apps.shopify.com/tawk-to"}, {
				value: "whmcs",
				text: "WHMCS", link: "https://marketplace.whmcs.com/product/3134"
			}, {
				value: "wordpress",
				text: "Wordpress",
				link: "https://wordpress.org/plugins/tawkto-live-chat/",
				selected: !0
			}, {
				value: "zencart",
				text: "ZenCart",
				link: "http://storage.googleapis.com/tawk-plugins/tawk-zencart-1.0.zip"
			}],
		bootstrapWizard: null,
		enabledLanguages: JSON.parse('[{"code":"bg","title":"\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438","flagClass":"flag flag-bg"},{"code":"cat","title":"catal\u00e0","flagClass":"flag flag-cat"},{"code":"cs","title":"\u010de\u0161tina","flagClass":"flag flag-cs"},{"code":"de","title":"Deutsch","flagClass":"flag flag-de"},{"code":"en","title":"english","flagClass":"flag flag-en"},{"code":"es","title":"espa\u00f1ol","flagClass":"flag flag-es"},{"code":"fr","title":"fran\u00e7ais","flagClass":"flag flag-fr"},{"code":"hi","title":"\u0939\u093f\u0902\u0926\u0940","flagClass":"flag flag-hi"},{"code":"it","title":"italiano","flagClass":"flag flag-it"},{"code":"hu","title":"magyar","flagClass":"flag flag-hu"},{"code":"ko","title":"\ud55c\uad6d\uc5b4","flagClass":"flag flag-ko"},{"code":"nl","title":"Nederlands","flagClass":"flag flag-nl"},{"code":"pl","title":"polski","flagClass":"flag flag-pl"},{"code":"pt_br","title":"portugu\u00eas (Brasil)","flagClass":"flag flag-pt_br"},{"code":"ro","title":"rom\u00e2n\u0103","flagClass":"flag flag-ro"},{"code":"ru","title":"\u0420\u0443\u0441\u0441\u043a\u0438\u0439","flagClass":"flag flag-ru"},{"code":"sk","title":"sloven\u010dina","flagClass":"flag flag-sk"},{"code":"sv","title":"svenska","flagClass":"flag flag-sv_se"},{"code":"tr","title":"T\u00fcrk\u00e7e","flagClass":"flag flag-tr"},{"code":"vi","title":"Ti\u1ebfng Vi\u1ec7t","flagClass":"flag flag-vi"},{"code":"zh_tw","title":"\u4e2d\u6587","flagClass":"flag flag-zh_tw"}]'),
		willDestroyElement: function () {
			this.controller.resetData()
		},
		willInsertElement: function () {
			var a, c = !1;
			this.set("roleSelectLabel", languageParser.translate("sites", "role"));
			this.set("roleSelectOptions", [{
				value: "admin",
				text: languageParser.translate("generic", "admin")
			}, {value: "agent", text: languageParser.translate("generic", "agent")}]);
			this.set("roleSelectClass", "agent-role-select");
			this.set("roleSelectValue", "admin");
			$("iframe").each(function () {
				var a = $(this).attr("name");
				a && -1 !== a.indexOf("stripe") && (c =
					!0)
			});
			c || (a = document.createElement("script"), a.src = "https://js.stripe.com/v2/", $("body").append(a), this.controller.loadData())
		},
		didInsertElement: function () {
			var a = this;
			this.$("#download-link").attr("href", this.cmsLinks[11].link);
			this.$("#cms-change").change(function () {
				var c = $(this).find("option:selected");
				a.$("#download-link").attr("href", c.attr("data-link"))
			});
			this.$("#add-another-email").click(function (c) {
				c.preventDefault();
				a.controller.addInvitation();
				return !1
			});
			this.$().delegate("#next-step", "click",
				function (c) {
					c = a.bootstrapWizard.currentIndex();
					1 === c ? a.$("#wizard-site-form").submit() : 2 === c ? a.$("#wizard-agent-form").submit() : 4 === c ? a.$("#whitelabel-settings").submit() : a.markStepComplete(a.$("li.active"))
				});
			this.$("#skip-step").click(function () {
				var c = a.bootstrapWizard.currentIndex();
				a.markStepComplete(a.$("li.active"));
				4 === c && (main.updateStorageSettings("lastWizardStep", null), a.closeCallback())
			});
			this.$("#widget-code").click(function () {
				$(this).select()
			});
			this.$("#wizard-site-form").validate({
				errorPlacement: function (a,
				                          d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					var d = !0, b = a.$("#site-name").val().trim(), e = a.$("#site-domain").val().trim();
					a.controller.site && (d = !1);
					a.controller.saveSite(b, e, function (b) {
						b ? errorSave(c, d ? languageParser.translate("form_validation_messages", "site_add_error") : null) : a.markStepComplete(a.$("li.active"))
					});
					return !1
				}
			});
			this.$("#wizard-agent-form").validate({
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					var d = [];
					a.controller.invitedList.forEach(function (b) {
						var c,
							f = a.$('section[data-emailId="' + b.id + '"]');
						f.length && (c = f.find(".email").val(), c.length && d.push({
							email: f.find(".email").val(),
							role: f.find("select").val(),
							id: b.id
						}))
					});
					if (d.length) return a.controller.inviteAgents(d, function (b) {
						b.length ? b.forEach(function (b) {
							a.$('section[data-emailId="' + b.id + '"]').append('<p class="wizard-error">' + b.message + "</p>")
						}) : a.markStepComplete(a.$("li.active"))
					}), !1;
					a.markStepComplete(a.$("li.active"))
				}
			});
			this.$().delegate(".delete-email", "click", function () {
				var c = $(this).next().find("input").attr("id");
				a.controller.removeInvitation(c)
			});
			this.$(".change-tab").click(function (a) {
				a.stopPropagation();
				return !1
			});
			this.$("#wizard-done").click(function () {
				a.closeCallback()
			});
			this.$("#email-instructions").click(function () {
				a.$("#email-container").removeClass("hidden")
			});
			this.$("#cancel-email").click(function (c) {
				c.preventDefault();
				a.$("#email-container").addClass("hidden")
			});
			this.$("#send-email").click(function () {
				a.$("#wizard-email-instructions-form").submit()
			});
			this.$("#wizard-email-instructions-form").validate({
				rules: {
					emails: {
						required: !0,
						multiemail: 10
					}
				},
				messages: {emails: {multiemail: languageParser.translate("form_validation_messages", "email") + "(" + languageParser.translate("form_validation_messages", "total_recipients") + ")"}},
				errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				},
				submitHandler: function (c) {
					c = $("#emails").val().split(",");
					a.controller.emailDeveloper($.map(c, $.trim), function (c) {
						if (c) return a.saveError(languageParser.translate("form_validation_messages", "email_developer_error"));
						a.saveSuccess(languageParser.translate("form_validation_messages",
							"email_developer_success"))
					});
					return !1
				}
			});
			this.$("#widget-text-color").ColorSelector({appendTo: "#addon-settings-container"}, function (c) {
				a.$("#footer-container").css("color", c)
			}, a.$("#widget-text-color"));
			this.$().delegate("#plan", "change", function () {
				var c;
				c = $(this).val();
				(c = a.controller.activeAddOn ? a.controller.activeAddOn.plans.findProperty("id", c) : null) && a.$("#total-price").html("Total : $ " + c.price / 100 + (1 === c.cycle ? languageParser.translate("admin", "per_month") : languageParser.translate("admin",
					"per_year")))
			});
			this.$().delegate("#card-selection", "change", function () {
				"new-card" === $(this).val() ? a.$("#new-card-details").removeClass("hidden") : a.$("#new-card-details").addClass("hidden")
			});
			this.$().delegate("#payment-method", "change", function () {
				"cc" === $(this).val() ? a.$("#card-details").removeClass("hidden") : a.$("#card-details").addClass("hidden")
			});
			$.validator.messages.ccExpiryFormat = $.validator.format("The format should be MM/YY");
			$.validator.messages.ccExpiryDate = $.validator.format("Invalid expiry date.");
			$.validator.messages.ccNumber = $.validator.messages.creditcard;
			$.validator.messages.cvcCheck = $.validator.format("Invalid cvc number.");
			this.$("#card-number").mask("9999 9999 9999? 9999 9999", {placeholder: " "});
			this.$("#card-expiry").mask("99/99", {
				placeholder: " ", completed: function () {
					a.$("#card-cvc").focus()
				}
			});
			this.$("#card-cvc").mask("999?9", {placeholder: " "});
			this.$("#card-number").keyup(function () {
				window.Stripe && (cardType = Stripe.card.cardType($(this).val())) && (cardType = cardType.replace(" ", "").toLowerCase(),
				a.$(".card-type").hasClass(cardType) || a.$(".card-type").removeClass().addClass("icon-append card-type " + cardType))
			});
			this.$().delegate(".clear-input", "click", function () {
				$(this).next().val("").trigger("change")
			});
			this.$().delegate("#widget-label", "keyup paste change", function () {
				a.controller.activeAddOn.settings.set("widget.label", $(this).val())
			});
			this.$().delegate("#widget-url", "keyup paste change", function () {
				a.controller.activeAddOn.settings.set("widget.url", $(this).val())
			});
			this.$().delegate("#email-label",
				"keyup paste change", function () {
					a.controller.activeAddOn.settings.set("email.label", $(this).val())
				});
			this.$().delegate("#email-url", "keyup paste change", function () {
				a.controller.activeAddOn.settings.set("email.url", $(this).val())
			});
			this.$().delegate("#activate", "click", function () {
				a.$("#whitelabel-payment").submit()
			});
			this.$("#whitelabel-settings").validate({
				onkeyup: !1, onfocusout: !1, onclick: !1, errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					var d = {
						enabled: !0, widget: {
							label: "",
							url: "", textColor: "#000000"
						}, email: {label: "", url: ""}
					};
					if (!a.paymentProcessing) return d.widget.label = $("#widget-label", c).val(), d.widget.url = $("#widget-url", c).val(), d.widget.textColor = $("#widget-text-color", c).ColorSelector("getColor").toHexString(), d.email.label = $("#email-label", c).val(), d.email.url = $("#email-url", c).val(), a.$("button").attr("disabled", "disabled"), a.controller.saveWhitelabelSettings(d, function (b) {
						a.$("button").removeAttr("disabled");
						b ? a.saveError() : (a.$("#min-whitelabel-settings").addClass("hidden"),
							a.$("#payment-container").removeClass("hidden"), a.$("#activate").removeClass("hidden"), a.$("#cancel-activate").removeClass("hidden"), a.$("#next-step").addClass("hidden"), a.$("#previous-step").addClass("hidden"), a.$("#plan").trigger("change"))
					}), !1
				}
			});
			this.$("#whitelabel-payment").validate({
				onkeyup: !1, onfocusout: !1, onclick: !1, errorPlacement: function (a, d) {
					a.insertAfter(d.parent())
				}, submitHandler: function (c) {
					var d = {}, b = a.$("#payment-method", c).val(), e = function (b, c, d) {
						"inDOM" === a._state && (b ? (a.saveError(c),
						d && setTimeout(function () {
							a.$("#card-selection").val(d)
						}, 0), a.$("#activate").html(languageParser.translate("admin", "activate_now"))) : (a.set("paymentSuccess", !0), a.$("#activate").addClass("hidden"), a.$("#cancel-activate").addClass("hidden"), a.$("#next-step").addClass("hidden"), a.$("#skip-step").addClass("hidden"), a.$("#wizard-done").removeClass("hidden"), a.$("#min-whitelabel-settings").hide(), a.markStepComplete(a.$("li.active"))), a.$("button").removeAttr("disabled"), a.set("paymentProcessing", !1))
					};
					if (!a.paymentProcessing) return a.set("paymentProcessing", !0), a.$("button").attr("disabled", "disabled"), a.$("#activate").html('<i class="fa fa-refresh fa-spin"></i>'), d.planId = $("#plan", c).val(), b || (!desktopConnector.enabled() || desktopConnector.canUsePaypal()) || (b = "cc"), "cc" === b && (a.$("#card-selection").length ? d.customerId = a.$("#card-selection").val() : d.customerId = "new-card", $(c).serializeArray().map(function (a) {
						d[a.name] = a.value
					})), a.controller.handlePayment(b, d, e), !1
				}
			});
			this.$().delegate(".change-language",
				"click", function (c) {
					var d = $(this).attr("id");
					Tawk.userController.localeCode === d ? a.markStepComplete(a.$("li.active")) : null !== a.enabledLanguages.findProperty("code", d) && Tawk.userController.changeLanguage(d, function (a) {
						a || (main.updateStorageSettings("lastWizardStep", 0), setLocaleCookie(d), window.location = "/")
					})
				});
			this.$().delegate("#cancel-activate", "click", function () {
				a.$("#min-whitelabel-settings").removeClass("hidden");
				a.$("#payment-container").addClass("hidden");
				a.$("#activate").addClass("hidden");
				a.$("#cancel-activate").addClass("hidden");
				a.$("#next-step").removeClass("hidden");
				a.$("#previous-step").removeClass("hidden");
				a.$("#skip-step").removeClass("hidden")
			});
			this.$().delegate("#setup-later", "click", function () {
				a.controller.delaySetup(function () {
					SHOW_WIZARD = "minimal";
					a.closeCallback()
				})
			});
			this.isisLoadingChanged();
			this.settingsChanged()
		},
		markStepComplete: function (a) {
			this.bootstrapWizard && (a.addClass("complete").find(".step").html('<i class="fa fa-check"></i>'), this.bootstrapWizard.next())
		},
		inviteAgentDoneChanged: function () {
			"inDOM" === this._state && this.controller.inviteAgentDone && this.markStepComplete(this.$('li[data-target="#step2"]'))
		}.observes("controller.inviteAgentDone"),
		parsedWidgetFooterTitle: function () {
			var a, c;
			if (this.controller && this.controller.activeAddOn) {
				if (a = this.controller.activeAddOn.settings.widget.label) a = encodeStr(a); else return "";
				(c = a.match(/_[^_]+_/gi)) && 0 < c.length && c.forEach(function (c) {
					var b;
					b = c.indexOf("_");
					var e = c.lastIndexOf("_");
					b = c.substring(0, b) + "<i>" + c.substring(b +
						1, e) + "</i>" + c.substring(e + 1, c.length);
					a = a.replace(c, b)
				});
				(c = a.match(/\*[^*]+\*/gi)) && 0 < c.length && c.forEach(function (c) {
					var b;
					b = c.indexOf("*");
					var e = c.lastIndexOf("*");
					b = c.substring(0, b) + '<span style="font-size: 13px; font-weight: 700">' + c.substring(b + 1, e) + "</span>" + c.substring(e + 1, c.length);
					a = a.replace(c, b)
				});
				return a
			}
		}.property("controller.activeAddOn.settings.widget.label"),
		isisLoadingChanged: function () {
			var a, c = this;
			if ("inDOM" === this._state && !this.controller.isLoading) if (this.$().bootstrapWizard({
					tabClass: "form-wizard",
					previousSelector: "#previous-step", onTabShow: function (b, d, f) {
						b = c.$(".tab-pane#tab" + (f + 1));
						c.$("#wizard-done").addClass("hidden");
						c.$("#previous-step").addClass("hidden");
						c.$("#skip-step").addClass("hidden");
						c.$("#setup-later").addClass("hidden");
						b.height() >= c.$(".tab-content").height() ? b.css({
							marginLeft: -1 * (b.width() / 2),
							top: "0px",
							marginTop: 0,
							left: "50%"
						}) : b.css({
							marginLeft: -1 * (b.width() / 2),
							marginTop: -1 * (b.height() / 2),
							top: "50%",
							left: "50%"
						});
						0 !== f || a && !(0 >= a) || c.controller.site ? (c.$("#button-container").removeClass("hidden"),
							c.$("#next-step").removeClass("hidden"), c.$("#previous-step").removeClass("hidden"), 1 !== f || c.controller.site) ? 2 === f ? (f = c.$("#wizard-agent-intro").outerHeight(!0) + 40, c.$("#skip-step").removeClass("hidden"), c.$("#wizard-agent-form").css("max-height", c.$("#wizard").height() - f)) : 4 === f && (c.$("#skip-step").removeClass("hidden"), c.controller.activeAddOn && c.controller.activeAddOn.isSubscribed ? c.$("#next-step").removeClass("hidden") : (c.$("#next-step").removeClass("hidden"), c.$("#plan").trigger("change"))) :
							c.$("#setup-later").removeClass("hidden") : (c.$("#button-container").removeClass("hidden"), c.$("#next-step").addClass("hidden"), c.$("#setup-later").removeClass("hidden"))
					}, onNext: function (b, d, f) {
						f = 5 <= f ? 5 : f;
						c.$("#wizard-intro").html(languageParser.translate("wizard", "intro_" + (f + 1)));
						(!a || f - 1 > a) && main.updateStorageSettings("lastWizardStep", f - 1)
					}
				}), this.set("bootstrapWizard", this.$().data("bootstrapWizard")), a = main.storageSettings.lastWizardStep, void 0 !== a) {
				a = parseInt(a, 10);
				!(1 < a) || this.controller.site &&
				this.controller.site.id || (a = 0);
				4 === a ? (this.bootstrapWizard.show(a), this.$("#wizard-intro").html(languageParser.translate("wizard", "intro_" + a))) : (this.bootstrapWizard.show(a + 1), this.$("#wizard-intro").html(languageParser.translate("wizard", "intro_" + (a + 2))));
				for (var d = 0; d <= a; d++) this.$('li[data-target="#step' + (d + 1) + '"]').addClass("complete").find(".step").html('<i class="fa fa-check"></i>')
			} else this.$("#wizard-intro").html(languageParser.translate("wizard", "intro_1"))
		}.observes("controller.isLoading"),
		settingsChanged: function () {
			"inDOM" === this._state && (this.controller && this.controller.activeAddOn) && (this.controller.activeAddOn.settings && this.controller.activeAddOn.settings.widget.textColor) && (this.$("#widget-text-color").ColorSelector("setColor", this.controller.activeAddOn.settings.widget.textColor), this.$("#footer-container").css("color", this.controller.activeAddOn.settings.widget.textColor))
		}.observes("controller.activeAddOn.settings")
	});
	Tawk.RouteState = Ember.State.extend({
		navigationSelector: "#main-nav",
		currentView: null, enter: function (a) {
			a = $(this.get("navigationSelector"));
			var c = this.get("selector") || "." + this.get("path"), d = this.get("viewClass");
			a.find(".active").removeClass("active");
			a.find(c).addClass("active");
			Tawk.routing.titlePath.propertyName = null;
			Tawk.routing.titlePath.subviewName = null;
			Tawk.routing.titlePath.itemName = null;
			Tawk.routing.titlePath.widgetName = null;
			Tawk.leftPanel.closeMembersMessageList();
			if ("chat" === this.get("path")) Tawk.dynamicView.set("isVisible", !1), Tawk.mainPanel.visitorChatView.set("isShown",
				!0), Tawk.routing.titlePath.viewName = languageParser.translate("generic", "chat"); else if (d) {
				this.set("currentView", Tawk[d].create());
				Tawk.dynamicView.set("currentView", this.currentView);
				if (this.get("triggerAction")) this.currentView[this.get("triggerAction")]();
				Tawk.dynamicView.set("isVisible", !0);
				Tawk.mainPanel.visitorChatView.set("isShown", !1);
				Tawk.routing.titlePath.viewName = languageParser.translate(this.get("path"), "view_title")
			}
			Tawk.routing.setTitle()
		}, exit: function (a) {
			a.set("previousState", this.get("path"));
			this.currentView && (this.currentView.remove(), this.set("currentView", null), Tawk.dynamicView.set("currentView", null), Tawk.mainPanel.visitorChatView.set("isShown", !1));
			$("#back-top").addClass("hidden")
		}, reopenView: function () {
			if (this.get("triggerAction")) this.currentView[this.get("triggerAction")]()
		}
	});
	Tawk.routeManager = Ember.StateManager.create({
		rootView: Tawk.dynamicView,
		previousState: null,
		goToPreviousView: function () {
			null !== this.previousState && Tawk.routing.changeRoute({view: this.previousState})
		},
		dashboard: Tawk.RouteState.create({
			selector: "#dashboard-select",
			viewClass: "DashboardView"
		}),
		chat: Tawk.RouteState.create({selector: "#chat-select"}),
		aliasList: Tawk.RouteState.create({selector: "#aliasList-select", viewClass: "AliasListView"}),
		monitoring: Tawk.RouteState.create({
			selector: "#monitoring-select",
			viewClass: "VisitorMonitoringContainerView"
		}),
		messaging: Tawk.RouteState.create({selector: "#messaging-select", viewClass: "ConversationsView"}),
		admin: Tawk.RouteState.create({selector: "#admin-select", viewClass: "AdminView"}),
		account: Tawk.RouteState.create({
			selector: "#account-select",
			viewClass: "AccountView"
		}),
		reporting: Tawk.RouteState.create({selector: "#reporting-select", viewClass: "ReportingView"}),
		schedules: Tawk.RouteState.create({selector: "#schedules-select", viewClass: "SchedulerPropertiesView"}),
		leaderboard: Tawk.RouteState.create({selector: "#leaderboard-select", viewClass: "LeaderboardView"}),
		wizard: Tawk.RouteState.create()
	});
	var subviewCheck = function (a) {
		return -1 !== "settings members shortcuts triggers ban-list department mail-settings addon-store billing tabs new-property alerts knowledgebase widget-settings widget-appearance widget-content widget-domains widget-scheduler page-content".split(" ").indexOf(a)
	};
	Tawk.routing = {
		route1: routeMatcher(":view"),
		route2: routeMatcher(":view/:propertyId", {propertyId: /^([0-9A-Fa-f]{24})$/}),
		route3: routeMatcher(":view/:propertyId/:widgetId/:subView", {
			widgetId: /^(default|page|[a-z0-9]{9,11})$/,
			propertyId: /^([0-9A-Fa-f]{24})$/,
			subView: subviewCheck
		}),
		route4: routeMatcher(":view/:propertyId/:subView", {propertyId: /^([0-9A-Fa-f]{24})$/, subView: subviewCheck}),
		route5: routeMatcher(":view/:propertyId/:subView/:itemId", {
			propertyId: /^([0-9A-Fa-f]{24})$/,
			subView: subviewCheck
		}),
		route6: routeMatcher(":view/:subView",
			{subView: subviewCheck}),
		route7: routeMatcher(":view/:subView/:itemId", {subView: subviewCheck}),
		route8: routeMatcher(":view/:propertyId/:subView/:itemId/:subSettings", {
			propertyId: /^([0-9A-Fa-f]{24})$/,
			subView: subviewCheck
		}),
		titlePath: {
			brandName: "tawk.to",
			viewName: "",
			propertyName: "",
			subviewName: "",
			itemName: "",
			widgetName: ""
		},
		changeRoute: function (a) {
			var c = this.getPath(), d = "";
			a = a.widgetId ? this.route3.stringify(a).split("/") : this.route8.stringify(a).split("/");
			for (var b = 0, e = a.length; b < e; b++) a[b] && "null" !==
			a[b] && (d += "/" + a[b]);
			d !== this.route4.stringify(c) && d !== this.route3.stringify(c) && (window.location.hash = d)
		},
		getPath: function () {
			var a = window.location.hash.replace("#/", "");
			"/" === a.charAt(a.length - 1) && (a = a.replace(/\/$/, ""));
			return this.route1.parse(a) || this.route2.parse(a) || this.route3.parse(a) || this.route4.parse(a) || this.route5.parse(a) || this.route6.parse(a) || this.route7.parse(a) || this.route8.parse(a)
		},
		redirectUrl: function (a) {
			a = this.route1.parse(a) || this.route2.parse(a) || this.route3.parse(a) || this.route4.parse(a) ||
				this.route5.parse(a) || this.route6.parse(a) || this.route7.parse(a);
			this.changeRoute(a)
		},
		transitionTo: function () {
			var a;
			(a = this.getPath()) && a.view ? !Tawk.routeManager.states[a.view] || "wizard" === a.view && !main.wizard ? Tawk.routeManager.currentState || this.changeRoute({view: "dashboard"}) : Tawk.routeManager.currentState && Tawk.routeManager.currentState.name === a.view && Tawk.routeManager.currentState.currentView && "function" === typeof Tawk.routeManager.currentState.currentView.reloadPath ? Tawk.routeManager.currentState.currentView.reloadPath() :
				Tawk.routeManager.transitionTo(a.view) : this.changeRoute({view: "dashboard"})
		},
		setTitle: function () {
			var a = this.titlePath.brandName;
			this.titlePath.viewName && (a += " | " + this.titlePath.viewName);
			this.titlePath.propertyName && (a += " | " + this.titlePath.propertyName);
			this.titlePath.widgetName && (a += " | " + this.titlePath.widgetName);
			this.titlePath.subviewName && (a += " | " + this.titlePath.subviewName);
			this.titlePath.itemName && (a += " | " + this.titlePath.itemName);
			this.titlePath.chatNotification && (a = this.titlePath.chatNotification +
				" | " + a);
			document.title = a
		}
	}
} catch (e$$308) {
	TraceKit.report(e$$308)
}
;
