Ember.TEMPLATES.aliasList = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<span id="second-title"><i class="fa fa-angle-right"></i>');
		a = c["if"].call(a, "activeAlias.aliasId", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.program(4, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 2: function (a, c, d, b) {
		a = c._triageMustache.call(a, "activeAlias.displayName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_alias", {
			name: "I18n",
			hash: {context: "alias"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<tr ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":open-view isDefault:default-alias"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "aliasId"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><td>");
		d = c._triageMustache.call(a, "displayName", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isDefault", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td><td>");
		d = c._triageMustache.call(a, "positionTitle", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c["if"].call(a, "enabled",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="delete-cell">');
		d = c.unless.call(a, "isDefault", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 7: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("&nbsp;(");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "default_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(")&nbsp;");
		return ""
	}, 9: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-check txt-color-tawk-pink"></i>')
	}, 11: function (a, c, d, b) {
		b.buffer.push('<div class="smart-form"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></div>')
	}, 13: function (a, c, d,
	                 b) {
		a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 15: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="photo-placeholder" style="background-image: url(\'');
		b.buffer.push(d(c.unbound.call(a, "", {
			name: "unbound",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("')\"></div>");
		return ""
	}, 17: function (a, c, d,
	                 b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a class="image-action" href="javascript:void(0);" id="capture">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "take_photo", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 19: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a class="image-action" href="javascript:void(0);" id="remove">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "remove_photo", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 21: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><div class="inline-group" ><label class="checkbox"><input type="checkbox" id="set-default" name="set-default" /><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "set_default", {
			name: "I18n",
			hash: {context: "alias"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div></section><section id="alias-status-container"><label class="label" for="alias-status" style="display: inline-block;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "alias_status", {
			name: "I18n",
			hash: {context: "alias"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</label><label class="toggle" style="display: inline-block; width : 200px; position: relative; height : 30px;"><input type="checkbox" name="alias-status" id="alias-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAlias.enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text",
			{
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('" style="left: 0; right: auto;"></i></label></section>');
		return ""
	}, 23: function (a, c, d, b) {
		b.buffer.push('<div id="widget-min-preview-container" class="has-image"><div class="inner-preview-container"><div id="tawkchat-status-middle"><div class="header-container change-background-color change-text-color"><div class="headerBoxControlsContainer"><div class="maximize pull-right"></div></div><div id="tawkchat-minified-agent-container" class="theme-text-color">');
		d = c["with"].call(a, "activeAlias.imagePreview", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="profileDetail" class=""><div class="agentContainer"><div class="agentInformationContainer">');
		d = c["if"].call(a, "activeAlias.positionTitle", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(26, b),
			inverse: this.program(28, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d &&
		b.buffer.push(d);
		b.buffer.push("</div></div></div></div></div></div></div></div>");
		return ""
	}, 24: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="alias-image" style="background-image: url(\'');
		b.buffer.push(d(c.unbound.call(a, "", {
			name: "unbound",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("');\"></div>");
		return ""
	}, 26: function (a, c, d, b) {
		b.buffer.push('<p class="agentName">');
		d = c._triageMustache.call(a, "activeAlias.displayName", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p><p>");
		d = c._triageMustache.call(a, "activeAlias.positionTitle", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p>");
		return ""
	}, 28: function (a, c, d, b) {
		b.buffer.push('<p class="agentName" style="line-height : 41px;">');
		a = c._triageMustache.call(a, "activeAlias.displayName", {
			name: "_triageMustache", hash: {},
			hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</p>");
		return ""
	}, 30: function (a, c, d, b) {
		b.buffer.push('<div id="widget-min-preview-container"><div class="inner-preview-container"><div id="tawkchat-status-middle"><div class="headerBoxControlsContainer"><div class="header-control"><div class="maximize pull-right"></div></div><div class="clearfix"></div></div><div id="tawkchat-minified-agent-container" class="theme-text-color" style="display: block;">');
		d = c["with"].call(a, "activeAlias.imagePreview", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="profileDetail" class=""><div class="agentContainer"><div class="agentInformationContainer"><p class="agentName">');
		d = c._triageMustache.call(a, "activeAlias.displayName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeAlias.positionTitle", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(31, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div><div class="clearfix"></div></div></div></div></div></div></div>');
		return ""
	}, 31: function (a, c, d, b) {
		b.buffer.push("&nbsp;-&nbsp;");
		a = c._triageMustache.call(a, "activeAlias.positionTitle", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		a && b.buffer.push(a);
		return ""
	}, 33: function (a, c, d, b) {
		a = c.unless.call(a, "activeAlias.isDefault", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(34, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 34: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button id="delete" type="button" class="btn btn-danger ">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, 36: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.ImageCropView || a && a.ImageCropView || d).call(a, {
			name: "ImageCropView",
			hash: {controllerBinding: "view.controller"},
			hashTypes: {controllerBinding: "STRING"},
			hashContexts: {controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing,
			f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "alias"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeAlias", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeAlias:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div style="height: 40px;"><div class="text-right"><button id="add-alias" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_alias", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div><div class="scrollable-list"><table class="table"><thead><tr role="row"><th>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "display_name", {
			name: "I18n",
			hash: {context: "alias"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</th><th>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "position_title", {
			name: "I18n",
			hash: {context: "alias"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_enabled", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center delete-cell"><div class="smart-form" style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
		d = c.each.call(a, "pagedList.currentData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div id="bulk-action-container" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.bulkMarkedTotal::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
		d = c["if"].call(a, "view.bulkMarkedTotal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li></ul></div></div></div><form id="alias-form" name="alias-form" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeAlias::hidden :smart-form :admin-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div id="alias-form-container"><div id="alias-form-wrapper"><div id="form-scrollable-container" style="width: 100%; height: 100%; position: relative; overflow: auto;"><fieldset><section><div class="form-table"><div class="form-table-row"><div class="form-table-cell padding-5 image-placeholder-container"><div class="image-placeholder"><i class="fa fa-camera"></i>');
		d = c["with"].call(a, "activeAlias.imagePreview", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div class="form-table-cell padding-5" style="vertical-align: middle;"><div class="btn-group"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "action_text", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push(' <span class="caret"></span></button><ul class="dropdown-menu"><li id="upload-container"><a class="image-action" href="javascript:void(0);" id="upload">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "upload_photo", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		d = c["if"].call(a, "view.takePhotoEnabled",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeAlias.imagePreview", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div></div><input type="file" class="hidden" id="alias-image" /></div></div></section><section><label class="label">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "display_name", {
			name: "I18n",
			hash: {context: "alias"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				placeholderKey: "enter_display_name",
				value: "activeAlias.displayName",
				name: "display-name",
				id: "display-name",
				"class": "required",
				type: "text"
			},
			hashTypes: {
				placeholderKey: "STRING", value: "ID", name: "STRING", id: "STRING", "class": "STRING",
				type: "STRING"
			},
			hashContexts: {placeholderKey: a, value: a, name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "position_title", {
			name: "I18n",
			hash: {context: "alias"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				placeholderKey: "enter_position",
				value: "activeAlias.positionTitle", name: "position-title", id: "position-title", type: "text"
			},
			hashTypes: {placeholderKey: "STRING", value: "ID", name: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {placeholderKey: a, value: a, name: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section>");
		d = c.unless.call(a, "activeAlias.isDefault", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</fieldset></div></div></div><div id="widget-preview" class="hidden-mobile hidden-tablet">');
		d = c["if"].call(a, "activeAlias.imagePreview", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(23, b),
			inverse: this.program(30, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		d = c["if"].call(a, "activeAlias.aliasId", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(33, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</footer></form>");
		d = c["if"].call(a, "imageData", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(36, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.accountForm = Ember.Handlebars.template({
	compiler: [6,
		">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><p id="main-title" class="pull-left">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "settings", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="account-settings-form" name="account-settings-form" class="smart-form admin-form"><div id="form-scrollable-container"><section><label class="label" for="user-name">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "your_name", {
			name: "I18n",
			hash: {context: "account"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required" id="user-name" name="user-name" maxlength="75" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_your_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "user.decodedName"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section><section><label class="label" for="user-email">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "your_email", {
			name: "I18n",
			hash: {context: "account"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required email" id="user-email" name="user-email" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_your_email", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "user.email"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section><section><label class="label" for="user-password">');
		b.buffer.push(e((c.I18n || a && a.I18n ||
			d).call(a, "change_password", {
			name: "I18n",
			hash: {context: "account"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="password" id="user-password" name="user-password" class="passwordStrength notRequired"placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_password", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" style="padding-right : 90px" /><div class="password-meter bar-holder" style="width: 80px; padding: 0; position: absolute; top: 5px; right: 5px;"><div class="password-meter-bg progress"><div class="password-meter-bar progress-bar"></div></div></div></label><em id="password-error" for="user-password" autogenerated="true" class="error password-meter-message"></em></section><section><label class="label" for="user-password-retype">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
			"retype_password", {
				name: "I18n",
				hash: {context: "account"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</label><label class="input"><input type="password" id="user-password-retype" name="user-password-retype" equalTo="#user-password"placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_password", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.accountMain = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<li class="open-view" id="rest-api"><a href="javascript:void(0);"><i class="fa fa-cloud"></i><span class="label">Rest API Keys</span></a></li>')
	},
	3: function (a, c, d, b) {
		b.buffer.push('<div class="new-label"> </div>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push(' <div id="breadcrumb" class="hidden-md hidden-lg"><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "my_profile", {
			name: "I18n",
			hash: {context: "account"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><div class="content"><div class="row view-header"><div class="col-xs-12 col-sm-4 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "my_profile", {
			name: "I18n",
			hash: {context: "account"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h1></div></div><div class="innerContent"><div id="property-container" class="list-container"><div class="smart-form" style="max-width: 450px;margin: 0px auto;"><section><p style="text-transform: uppercase; font-size : 12px">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "account_settings", {
			name: "I18n",
			hash: {context: "account"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></section><section><ul class="list"><li class="open-view" id="settings"><a href="javascript:void(0);"><i class="fa fa-cog"></i><span class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "settings", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li class="open-view" id="aliases"><a href="javascript:void(0);"><i class="fa fa-group"></i><span class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "alias"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li class="open-view" id="global-shortcuts"><a href="javascript:void(0);"><i class="fa fa-cut"></i><span class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "global_shortcuts", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></a></li>");
		d = c["if"].call(a, "Tawk.userController.canCreateApiKey", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></section></div></div><div id="asset-container"  class="list-container"><div class="list-container-divider"><i class="fa fa-chevron-right"></i></div><div style="max-width: 450px;margin: 0px auto;"><section><p style="text-transform: uppercase; font-size : 12px">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "profile_page", {
			name: "I18n",
			hash: {context: "account"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><div style="font-size: 16px;line-height: 32px; margin: 0 0 8px 0; white-space: pre-wrap;word-wrap: break-word;"><div id="tawkid-text"><a ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "activeProperty.siteLink"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank" style="vertical-align: middle; display:inline; white-space : pre-line; word-wrap : break-word;">https://tawk.to/');
		d = c._triageMustache.call(a, "activeProperty.tawkId", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a>&nbsp;<button id="edit-profile-tawkid" class="btn btn-default btn-xs"><i class="fa fa-pencil"></i></button></div><div id="tawkid-input" class="hidden"><span style="display : inline-block; vertical-align: middle" >https://tawk.to/</span><form id="tawkid-form" name="tawkid-form" class="smart-form" style="display : inline-block; vertical-align: middle"><label class="input" style="display : inline-block; vertical-align: middle"><span class="small-transparent-spinner hidden" style="position: absolute;right: 3px;top: 8px;"></span><input type="input" class="alphaNumericWithDot required isTawkIdAvailable" id="page-tawkid" name="page-tawkid"');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeProperty.tawkId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="width : auto; padding-right : 30px;" /></label>&nbsp;<span class="btn-group"><button id="save-profile-tawkid" type="submit" class="btn btn-primary btn-xs"><i class="fa fa-save"></i></button><button id="cancel-profile-tawkid" type="button" class="btn btn-default btn-xs"><i class="fa fa-close"></i></button></span></form></div></div></section><section class="smart-form"><ul class="list"><li class="open-view" id="page-content"><a href="javascript:void(0);"><i class="fa fa-align-justify"></i><span class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_content", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li class="open-view" id="widget-settings"><a href="javascript:void(0);"><i class="fa fa-cog"></i><span class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_settings", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li class="open-view" id="widget-appearance"><a href="javascript:void(0);"><i class="fa fa-picture-o"></i><span class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_appearance", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li class="open-view"id="widget-content"><a href="javascript:void(0);"><i class="fa fa-font"></i><span class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_content", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li class="open-view" id="shortcuts"><a href="javascript:void(0);"><i class="fa fa-cut"></i><span class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_shortcuts", {
			name: "I18n",
			hash: {context: "account"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li class="open-view" id="ban-list"><a href="javascript:void(0);"><i class="fa fa-ban"></i><span class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li class="open-view" id="tabs"><a href="javascript:void(0);"><i class="fa fa-folder"></i><span class="label" style="position: relative;">Tabs');
		d = c.unless.call(a, "view.isTabsSeen", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></a></li></ul></section></div></div><div class="clear"></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.restApikView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<tr><td>");
		d = c._triageMustache.call(a, "key", {
			name: "_triageMustache", hash: {},
			hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td><td>");
		d = c._triageMustache.call(a, "formattedDate", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td><button class="btn btn-danger delete-key" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "key"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-trash-o"></i></button></td></tr>');
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">Rest API Keys</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "activeAlias:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><div style="height: 40px;"><div class="text-right"><button id="create-key" class="btn btn-primary">Create Key</button></div></div><div class="scrollable-list"><table class="table"><thead><tr role="row"><th>Key</th><th>Created On</th><th class="delete-cell"></th></tr></thead><tbody>');
		a = c.each.call(a, "list", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(1, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</tbody></table></div></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES["action-view"] = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "value"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {selected: "isSelected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "text", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 3: function (a, c, d, b) {
		b.buffer.push('<div style="margin-bottom: 5px;"><label class="select" style="margin-bottom: 5px;"><i></i><select class="action-input">');
		a = c.each.call(a, "view.valueSelection", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</select></label></div>");
		return ""
	}, 4: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "index"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {selected: "isSelected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "value", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 6: function (a, c, d, b) {
		a = c.each.call(a, "view.inputFields", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 7: function (a, c, d, b) {
		a = c["if"].call(a, "isInput", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.program(10, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 8: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div style="margin-bottom: 5px;"><label class="input" style="margin-bottom: 5px;"><input type="text" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "classNames"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "name"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "value"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("  ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {placeholder: "placeholder"},
			hashTypes: {placeholder: "STRING"},
			hashContexts: {placeholder: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {maxlength: "maxlength"},
			hashTypes: {maxlength: "STRING"},
			hashContexts: {maxlength: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /></label></div>");
		return ""
	}, 10: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div style="margin-bottom: 5px;"><label class="textarea" style="margin-bottom: 5px;">');
		b.buffer.push(e((c.textarea || a && a.textarea || d).call(a, {
			name: "textarea",
			hash: {
				maxlengthBinding: "maxlength",
				valueBinding: "value",
				nameBinding: "name",
				idBinding: "id",
				rows: "3",
				classBinding: "classNames",
				placeholderBinding: "placeholder"
			},
			hashTypes: {
				maxlengthBinding: "STRING", valueBinding: "STRING", nameBinding: "STRING", idBinding: "STRING",
				rows: "STRING", classBinding: "STRING", placeholderBinding: "STRING"
			},
			hashContexts: {
				maxlengthBinding: a,
				valueBinding: a,
				nameBinding: a,
				idBinding: a,
				rows: a,
				classBinding: a,
				placeholderBinding: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></div>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div style="margin-bottom: 5px;"><label class="select"><i></i><select class="action-type-select">');
		d = c.each.call(a, "view.actionSelectOptions",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</select></label></div>");
		d = c["if"].call(a, "view.isSelect", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(6, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<a href="javascript:void(0);" class="button-icon delete-action" data-placement="top" data-original-title="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_action", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a><input type="hidden" class="action-item" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "view.action.valueId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" />");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.addOnDetail =
	Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">$ ");
			a = c._triageMustache.call(a, "pricePretify", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 3: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><section><label class="label" style="font-weight: bold; font-size: 15px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_payment_method", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select id="payment-method"><option value="pp">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "paypal", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</option><option value="cc">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "credit_card", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option></select><i></i></label></section></li>");
			return ""
		}, 5: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="label" style="font-weight: bold; font-size: 15px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_existing_card", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select id="card-selection"><option value="new-card">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_card", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			a = c.each.call(a, "Tawk.userController.existingCards", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</select><i></i></label></section>");
			return ""
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "customerId"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {selected: "selected"},
				hashTypes: {selected: "STRING"},
				hashContexts: {selected: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c._triageMustache.call(a, "cardBrand", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(" x-");
			d = c._triageMustache.call(a, "cardNumber", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
				types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</option>");
			return ""
		}, 8: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label class="label" style="font-weight: bold; font-size: 15px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "card_details", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></section>");
			return ""
		}, 10: function (a,
		                 c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<section><label id="terms-check-label" class="checkbox"><input type="checkbox" class="required" id="terms-check" name="terms-check" /><i></i>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "live_answering_agreement", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</label></section>");
			return ""
		}, 12: function (a, c, d, b) {
			b.buffer.push("<p>You will need admin privileges to edit settings.</p><br>")
		},
		14: function (a, c, d, b) {
			b.buffer.push("<p>You will need admin privileges to purchase Add-ons.</p><br>")
		}, 16: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<li style="margin : 2px 0"><a href="javascript:void(0);" class="dm-agent" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div id="addon-details-wrapper"><div id="addon-details" style="font-size: 14px;"><div style="float : left; width : 100%; min-height : 100px;"><div style="margin-left : 120px;"><h3 style="margin : 0 0 10px 0;">');
			d = c._triageMustache.call(a, "activeAddOn.name",
				{
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push("</h3><p>");
			b.buffer.push(e(c._triageMustache.call(a, "activeAddOn.shortDescription", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</p></div></div><div style="float : left; width : 100px; margin-left: -100%; min-height : 100px;"><img ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {src: "activeAddOn.addOnLogo"},
					hashTypes: {src: "STRING"},
					hashContexts: {src: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(' /></div><div class="clearfix"></div><div id="content-description-view"></div></div><div id="payment-container"><form id="payment-form" name="payment-form" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":smart-form activeAddOn.isSubscribed:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div style="padding:20px 15px; position : absolute; top : 0; bottom : 63px; overflow: auto;"><fieldset style="background: inherit;"><ol id="payment-steps"><li><section><label class="label" style="font-weight: bold; font-size: 15px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "select_package", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select id="plan">');
			d = c.each.call(a, "activeAddOn.plans", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</select><i></i></label></section></li>");
			d = c["if"].call(a, "canUsePaypal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push(' <li id="card-details"  ');
			b.buffer.push(e(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {"class": "canUsePaypal:hidden"},
					hashTypes: {"class": "STRING"},
					hashContexts: {"class": a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			d = c["if"].call(a, "Tawk.userController.existingCards.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(8, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div id="new-card-details" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "Tawk.userController.existingCards.length:hidden"},
				hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(' style="margin-left: -16px;"><section><label class="input"><i class="icon-prepend fa fa-user" style="z-index:1;"></i><input id="cardholder-name" name="cardholder-name" type="text" class="input required" placeholder="Name on card" /></label></section><section><label class="input"><i class="icon-prepend fa fa-credit-card" style="z-index:1;"></i><i class="card-type icon-append"></i><input id="card-number" name="card-number" type="text" class="input required ccNumber" placeholder="Card number" /></label></section><div class="row"><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-calendar" style="z-index:1;"></i><input id="card-expiry" name="card-expiry" type="text" class="input required ccExpiryFormat ccExpiryDate" placeholder="MM/YY" /></label></section><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-lock" style="z-index:1;"></i><input id="card-cvc" name="card-cvc" type="text" class="input required digits cvcCheck" placeholder="CVV" minlength="3" maxlength="4" /></label></section></div><section><label class="input"><i class="icon-prepend fa fa-map-marker" style="z-index:1;"></i><input id="zip-code" name="zip-code" type="text" class="input required" placeholder="Zip code" /></label></section></div></li></ol>');
			d = c["if"].call(a, "activeAddOn.checkTerm", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</fieldset><div class="text-center"><p id="total-price" style="font-weight : bold; font-size : 15px;"></p><br/><button id="submit" type="submit" class="btn btn-primary last-step">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "activate_now", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</button></div></div><div class="text-center" style="position: absolute; bottom : 0px; left : 15px; right : 15px;"><div class="sprite-background secure-seal"></div></div></form><div id="addon-settings-button-container" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeAddOn.isSubscribed::hidden :text-center"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="padding: 20px 15px;"><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.paymentSuccess::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="success-check-container"><i class="fa fa-check"></i></div><h1 style="color: #71a06a; font-weight: 500;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "thank_you", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</h1><h5 style="color: #71a06a; font-weight: 500;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "purchase_success", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h5><p style="margin : 30px 0;">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "configure_addon", {
				name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
				types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</p></div><button class="addon-settings btn btn-primary" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "activeAddOn.id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "settings", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="text-align: center; position: absolute; top : 0; bottom :0; width : 100%; z-index: 1;"><div style="width: 100%; height : 100%; background : #fafafa; opacity : 0.7"></div><div style="position: absolute; top : 80px; width : auto; left : 15px; right : 15px; background : #fff; padding : 5px; font-size: 15px; bottom : 80px; overflow: auto;"><p style="font-size: 18px; color : red;">Sorry <i class="fa fa-frown-o"></i></p>');
			d = c["if"].call(a, "activeAddOn.isSubscribed", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.program(14, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<p>Please contact an admin for this property :</p><ul style="list-style : none; padding : 0px;">');
			d = c.each.call(a, "contactAdmins", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul></div></div><div ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin::hidden view.needBetaCode::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('  style="text-align: center; position: absolute; top : 0; bottom :0; width : auto; padding : 20px 10px; background : #eee; left :0; right:0; z-index : 10;"><div class="smart-form" style="font-size: 15px; width : 100%; height : 100%"><section><p style="margin-bottom : 5px;">Please enter your beta code :</p><label class="input"><input type="text" id="beta-code" /></label><em id="beta-invalid" class="hidden">Invalid beta code.</em></section><section><button id="beta-unlock" class="btn btn-default">Unlock</button></section><section><p>Don\'t have a beta code?<br/>Request one <a ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {href: "activeAddOn.betaCodeLink"},
				hashTypes: {href: "STRING"},
				hashContexts: {href: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' target="_blank">here</a>.</p></section></div></div></div><div ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":more-below view.showMore::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' style="position: absolute; bottom: 0; right: 250px; cursor : pointer;">More below <i class="fa fa-arrow-down"></i></div></div>');
			return ""
		}, useData: !0
	});
Ember.TEMPLATES.addOnSettings = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div style="margin : 20px 0;"><label style="margin: 5px 0;font-size: 14px;" class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "support_details", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><table class="table no-border"><tr><td>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</td><td>:</td><td><b>");
		d = c._triageMustache.call(a, "activeAddOn.settings.address.address", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</b></td><td><a id="change-support" style="margin : 0 5px;text-decoration: underline; display: inline-block;" href="javascript:void(0);">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "change", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a><a id="remove-support" style="margin : 0 5px;text-decoration: underline; display: inline-block;" href="javascript:void(0);">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "remove", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></td></tr><tr><td>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "sender_name", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td>:</td><td><b id="address-name-label">');
		d = c._triageMustache.call(a, "activeAddOn.settings.address.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</b><label id="address-name-input" class="input hidden"><input id="address-name" type="text" class="input-text" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.address.name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td><td><a id="edit-address-name" style="margin : 0 5px;text-decoration: underline;" href="javascript:void(0);">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "change", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a><div id="edit-address-container" class="hidden"><a id="cancel-address-name" style="margin : 0 5px;text-decoration: underline; display: inline-block;" href="javascript:void(0);">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a><a id="save-address-name" style="margin : 0 5px;text-decoration: underline; display: inline-block;" href="javascript:void(0);">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></div></td></tr></table></div><div style="margin : 20px 0;"><label style="font-size: 14px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "verfication_status", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><table class="table"><thead><tr><td>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "type", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"last_verified", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</td></tr></thead><tbody><tr><td>Forwarding</td><td class="text-center">');
		d = c["if"].call(a, "activeAddOn.settings.address.newFwdVerified", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.program(4, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d =
			c["if"].call(a, "activeAddOn.settings.address.fwdLastVerified", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.program(11, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center"><a href="javascript:void(0);" id="verify-forwarding" style="text-decoration: underline;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "verify", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></td></tr><tr><td>SPF</td><td class="text-center">');
		d = c["if"].call(a, "activeAddOn.settings.address.spfVerified", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.program(7, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c["if"].call(a, "activeAddOn.settings.address.spfVerified", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.program(11,
				b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center"><a id="verify-spf" href="javascript:void(0);" style="text-decoration: underline;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "verify", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></td></tr><tr><td>DKIM</td><td class="text-center">');
		d = c["if"].call(a, "activeAddOn.settings.address.dkimVerified",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c["if"].call(a, "activeAddOn.settings.address.dkimVerified", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.program(11, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center"><a href="javascript:void(0);" id="verify-dkim" style="text-decoration: underline;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "verify", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></td></tr></tbody></table></div><div style="margin : 20px 0;"><label class="label" style="font-size: 14px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "spf_record", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="input-text" readonly value=\'"v=spf1 include:mta.tawk.to ~all"\' /></label></div><div style="margin : 20px 0;"><label class="label" style="font-size: 14px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "dkim_record", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><table class="table no-border"><tbody><tr><td>CNAME</td><td><label class="input"><input type="text" class="input-text" readonly ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.address.dkim1"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td><td><label class="input"><input type="text" class="input-text" readonly ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.address.dkim2"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td></tr><tr><td>CNAME</td><td><label class="input"><input type="text" class="input-text" readonly ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.address.dkim3"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td><td><label class="input"><input type="text" class="input-text" readonly ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.address.dkim4"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td></tr></tbody></table></div><div style="margin : 20px 0;"><label class="label" style="font-size: 14px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_record_1", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><p style="margin : 10px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_record_2", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><p><a href="https://support.google.com/a/answer/178723?hl=en" target="_blank">Google Domains</a>,&nbsp;<a href="https://uk.godaddy.com/help/manage-dns-680#spfrecs" target="_blank">GoDaddy</a>,&nbsp;<a href="https://www.namecheap.com/support/knowledgebase/article.aspx/317" target="_blank">Namecheap</a>,&nbsp;<a href="https://my.bluehost.com/cgi/help/spf" target="_blank">BlueHost</a>,&nbsp;<a href="http://support.hostgator.com/articles/spf-records" target="_blank">HostGator</a>, and&nbsp;<a href="http://www.networksolutions.com/support/how-to-manage-advanced-dns-records/" target="_blank">Network Solutions</a>.</p></div>');
		return ""
	}, 2: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span style="color : green; font-weight : 700;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "verified", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 4: function (a, c, d, b) {
		a = c["if"].call(a, "activeAddOn.settings.address.pendingFwdVerified", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(5,
				b), inverse: this.program(7, b), types: ["ID"], contexts: [a], data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span style="color : orange; font-weight : 700;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "pending", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 7: function (a, c, d, b) {
		d = c.helperMissing;
		var e =
			this.escapeExpression;
		b.buffer.push('<span style="color : red; font-weight : 700;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "not_verified", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 9: function (a, c, d, b) {
		a = c._triageMustache.call(a, "activeAddOn.settings.address.fwdLastVerified", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		a ? b.buffer.push(a) : b.buffer.push("")
	}, 11: function (a, c, d, b) {
		b.buffer.push("-")
	}, 13: function (a, c, d, b) {
		a = c._triageMustache.call(a, "activeAddOn.settings.address.spfLastVerified", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 15: function (a, c, d, b) {
		a = c._triageMustache.call(a, "activeAddOn.settings.address.dkimLastVerified", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 17: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "support_email", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><button id="add-support-email" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_support_email", {
			name: "I18n", hash: {context: "admin"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, 19: function (a, c, d, b) {
		a = c["if"].call(a, "activeAddOn.settings.widget.url", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.program(22, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 20: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {href: "activeAddOn.settings.widget.url"},
			hashTypes: {href: "STRING"}, hashContexts: {href: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' target="_blank" style="text-decoration: none; color: inherit;"><span>');
		b.buffer.push(d(c._triageMustache.call(a, "view.parsedWidgetFooterTitle", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></a>");
		return ""
	}, 22: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<span>");
		b.buffer.push(d(c._triageMustache.call(a,
			"view.parsedWidgetFooterTitle", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</span>");
		return ""
	}, 24: function (a, c, d, b) {
		b.buffer.push('<span style="font-size: 11px; font-weight: 100;">Powered by <span style="font-size: 13px; font-weight: 700">tawk.to</span></span>')
	}, 26: function (a, c, d, b) {
		a = c["if"].call(a, "activeAddOn.settings.email.url", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(27,
				b), inverse: this.program(29, b), types: ["ID"], contexts: [a], data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 27: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "activeAddOn.settings.email.url"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank" style="text-decoration: underline; color: inherit;">');
		b.buffer.push(d(c._triageMustache.call(a, "view.parsedEmailFooterTitle",
			{
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</a>");
		return ""
	}, 29: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "view.parsedEmailFooterTitle", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 31: function (a, c, d, b) {
		b.buffer.push('No <span style="text-decoration:underline; color: #ec008c;">tawk.to</span> live chat account? Create one for free <span style="text-decoration:underline;">here</span>!')
	},
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<form id="addon-settings-form" name="addon-settings-form" class="smart-form admin-form"><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left" style="width: 50%;height: 100%; position: relative;"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><div style="margin-bottom : 10px;"><div style="float : left; width : 100%;"><div style="margin-left : 120px;"><h3 style="margin : 0 0 10px 0;">');
		d = c._triageMustache.call(a, "activeAddOn.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</h3><p>");
		d = c._triageMustache.call(a, "activeAddOn.shortDescription", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div></div><div style="float : left; width : 100px; margin-left: -100%;"><img ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {src: "activeAddOn.addOnLogo"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' /></div><div class="clearfix"></div></div><div class="form-table" style="width: 100%;table-layout: fixed;"><div class="form-table-row"><label class="label inline-label text-left" for="addon-status" style="width: 100%; padding-left: 0;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "addon_status", {
			name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label><div class="inline-group" style="width: auto;"><label class="toggle"><input type="checkbox" name="addon-status" id="addon-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAddOn.settings.enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text",
			{
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "disabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i></label></div></div><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "activeAddOn.settings.enabled::hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><div style="margin : 20px 0;"><table class="table no-border branding-settings"><tr><td colspan="3" style="padding : 0;"><h5>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_footer_branding", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5></td></tr><tr><td style="padding-left : 0;"><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input">');
		b.buffer.push(e((c.input || a && a.input || f).call(a, {
			name: "input",
			hash: {
				value: "activeAddOn.settings.widget.label",
				placeholder: "Enter branding text",
				"class": "input-text",
				type: "text",
				id: "widget-label"
			},
			hashTypes: {value: "ID", placeholder: "STRING", "class": "STRING", type: "STRING", id: "STRING"},
			hashContexts: {value: a, placeholder: a, "class": a, type: a, id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label><p class="font-xs pull-left" style="opacity: 0.6;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "format_eg", {
			name: "I18n",
			hash: {
				variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
				context: "admin"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></td><td><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "link_url", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input">');
		b.buffer.push(e((c.input || a && a.input || f).call(a, {
			name: "input",
			hash: {
				value: "activeAddOn.settings.widget.url",
				placeholder: "Enter branding link url",
				"class": "input-text url",
				type: "text",
				id: "widget-url"
			},
			hashTypes: {
				value: "ID", placeholder: "STRING", "class": "STRING", type: "STRING",
				id: "STRING"
			},
			hashContexts: {value: a, placeholder: a, "class": a, type: a, id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></td><td style="width : 60px; padding-right : 0;"><label class="label">Color</label><label class="input"><input type="text" id="widget-text-color" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.widget.textColor"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></td></tr></table></div><div style="margin : 20px 0;"><table class="table no-border branding-settings"><tr><td colspan="3" style="padding : 0;"><h5>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "email_footer_branding", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5></td></tr><tr><td style="padding-left : 0;"><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input">');
		b.buffer.push(e((c.input || a && a.input || f).call(a, {
			name: "input",
			hash: {
				value: "activeAddOn.settings.email.label",
				placeholder: "Enter branding text",
				"class": "input-text",
				type: "text",
				id: "email-label"
			},
			hashTypes: {value: "ID", placeholder: "STRING", "class": "STRING", type: "STRING", id: "STRING"},
			hashContexts: {value: a, placeholder: a, "class": a, type: a, id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label><p class="font-xs pull-left" style="opacity: 0.6;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "format_eg",
			{
				name: "I18n",
				hash: {
					variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
					context: "admin"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</p></td><td style="padding-right : 0;"><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "link_url", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input">');
		b.buffer.push(e((c.input || a && a.input || f).call(a, {
			name: "input",
			hash: {
				value: "activeAddOn.settings.email.url",
				placeholder: "Enter branding link url",
				"class": "input-text url",
				type: "text",
				id: "email-url"
			},
			hashTypes: {value: "ID", placeholder: "STRING", "class": "STRING", type: "STRING", id: "STRING"},
			hashContexts: {value: a, placeholder: a, "class": a, type: a, id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></td></tr></table></div><div style="margin : 20px 0;"><h5 style="margin : 10px 0;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "spf_dkim_settings", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h5>");
		d = c["if"].call(a, "activeAddOn.settings.address", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(17, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div></div></div><div class="pull-left" style="width: 50%; height: 100%; position: relative;"><div style="left: 0;right: 0;width: auto;max-width: 400px; border-left: 1px solid #e5e5e5; position: absolute; top : 0; bottom : 0; padding : 0 15px"><div><h4>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_footer_preview", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h4><div id="widget-max-preview-container" style="top : 0; margin: 20px 0;border: 2px solid rgba(0,0,0,0.0980392); border-top: none; position: relative;height: 131px;"><div style="position: absolute; bottom: 107px; top: 0; width: 100%; background-color: #fcfcfc; height: 30px; margin: 0; padding: 0; "></div><div id="actionsContainer" style="z-index: 99998; height: 107px; background-color: #fff; border-top: 2px solid #e1e1e1; position: absolute; bottom: 0; width: 100%;"><div id="ratingContainer" style="display: block;"></div><div id="textareaContainer" style="height: 53px; padding: 10px;"><div style="padding: 0; margin: 0; height: 63px; width: 100%; overflow: hidden; resize: none; border: 0; vertical-align: top; font-size: 14px !important; background-color: #fff;color: #bdbdbd; font-style: italic;">Type here and press enter...</div></div><div id="options" style="height: 32px; margin-left: 84px;"><div id="openMenu" style="position: absolute; left: 10px; bottom: 0; color: #bdbdbd; font-size: 13px; font-weight: 700; line-height: 28px; text-transform: lowercase;">options</div></div><div id="footer-container" style="position: absolute; bottom: 0; right: 6px; left: 84px; text-align: right; height: 30px; line-height: 30px; color: #000000; font-size: 13px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-right : 3px;">');
		d = c["if"].call(a, "activeAddOn.settings.enabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.program(24, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div></div><div class="margin-10"><h4>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "email_footer_preview", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h4><div style="background-color: #f5f5f5;width: 100%; padding: 0 20px; margin : 20px; 0"><div style="width: 100%; height: 40px; background-color: #fff"></div><div style="text-align: center;padding: 20px;color: #8b8b8b;text-align: center;">');
		d = c["if"].call(a, "activeAddOn.settings.enabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(26, b),
			inverse: this.program(31, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div></div></div><div class="clearfix"></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.addOnStore = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeAddOn.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		d = c["if"].call(a, "view.showAddonSettings", {
			name: "if", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(2, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 2: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span><i class="fa fa-angle-right"></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "settings", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 4: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="width: 100%; height: 100%;"><div id="addons-list" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeAddOn:hidden :row"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c.each.call(a, "addOnList",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a, "activeAddOn", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="list-loading" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isLoading::hidden"}, hashTypes: {"class": "STRING"},
			hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div>');
		return ""
	}, 5: function (a, c, d, b) {
		var e;
		d = this.escapeExpression;
		e = c.helperMissing;
		b.buffer.push('<div class="col-lg-4 col-md-4 col-sm-6 col-xs-12" style="padding: 0px"><div ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":selection-container isAvailable:active:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div style="position: relative; text-align : center; border : 1px solid #ddd; background : #f3f3f3;"><img class="addon-preview-image" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {src: "previewImage"},
			hashTypes: {src: "STRING"},
			hashContexts: {src: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /><div class="learn-more-container"><h3>');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "learn_more", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h3></div></div><div class="padding-10"><h5 style="font-weight: 500; color: #333;">');
		e = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push('</h5><p style="color: #777; height: 65px;">');
		b.buffer.push(d(c._triageMustache.call(a, "shortDescription", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p>");
		e = c["if"].call(a, "isAvailable", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(12, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push('<div class="clearfix"></div></div></div></div>');
		return ""
	}, 6: function (a, c,
	                d, b) {
		a = c["if"].call(a, "isActive", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.program(10, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 7: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		d = c.unless.call(a, "isSubscribed", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<button class="addon-settings btn btn-primary pull-right addon-select-btn" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "settings", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, 8: function (a, c, d, b) {
		b.buffer.push('<button class="btn btn-primary pull-right addon-select-btn">Renew</button>')
	},
	10: function (a, c, d, b) {
		b.buffer.push('<button class="btn btn-primary pull-right addon-select-btn">$ ');
		a = c._triageMustache.call(a, "mainPrice", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</button>");
		return ""
	}, 12: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button class="btn btn-default pull-right addon-select-btn" disabled>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "coming_soon",
			{
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</button>");
		return ""
	}, 14: function (a, c, d, b) {
		a = c["if"].call(a, "view.showAddonSettings", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.program(17, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 15: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.AddOnSettingsView ||
			a && a.AddOnSettingsView || d).call(a, {
			name: "AddOnSettingsView",
			hash: {parentViewBinding: "view", controllerBinding: "view.controller"},
			hashTypes: {parentViewBinding: "STRING", controllerBinding: "STRING"},
			hashContexts: {parentViewBinding: a, controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 17: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.AddOnDetailView || a && a.AddOnDetailView || d).call(a, {
			name: "AddOnDetailView",
			hash: {parentViewBinding: "view", controllerBinding: "view.controller"},
			hashTypes: {parentViewBinding: "STRING", controllerBinding: "STRING"},
			hashContexts: {parentViewBinding: a, controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 19: function (a, c, d, b) {
		b.buffer.push('<h2 class="text-center">Add-Ons are not available for this property. Please choose another property.</h2>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-puzzle-piece"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_on_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeAddOn", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container">');
		d = c["if"].call(a, "activeProperty.isSite", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.program(19, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.alertsMain = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button id="clear" type="submit" class="btn btn-danger pull-right" style="margin-right: 5px">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "delete_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-bell"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "alert_title",
			{
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeAlert:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><form id="alert-form" name="alert-form" class="smart-form"> <fieldset> <section> <label class="label"> ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "alerts_description", {
			name: "I18n",
			hash: {variables: '{"lineBreak" : "<br \\/>"}', context: "admin"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' </label> </section> <section><label class="textarea" style="width: 100%; max-width: 100%;"><textarea id="alert-content" name="alert-content" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enter_content", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" rows="5" maxlength="500"></textarea></label></section><section><label class="note text-left">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "alert_max_characters", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><button id="submit" type="submit" class="btn btn-primary pull-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		d = c["if"].call(a, "alert", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></section></fieldset></form></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.banView =
	Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<i class="fa fa-angle-right"></i>');
			return ""
		}, 3: function (a, c, d, b) {
			b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
			a = c["if"].call(a, "activeBan.id", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(4, b), inverse: this.program(6, b), types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 4: function (a, c, d, b) {
			a = c._triageMustache.call(a, "activeBan.displayText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 6: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_ban", {
				name: "I18n", hash: {context: "ban_list"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})))
		}, 8: function (a, c, d, b) {
			b.buffer.push('<th class="text-center delete-cell"><div class="smart-form" style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th>')
		}, 10: function (a, c, d, b) {
			var e = this.escapeExpression;
			b.buffer.push('<tr class="open-view" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {id: "id"}, hashTypes: {id: "STRING"},
				hashContexts: {id: a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><td class="text-center">');
			d = c._triageMustache.call(a, "displayText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			d = c["if"].call(a, "country", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td><td>");
			d = c._triageMustache.call(a, "reason", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center">');
			b.buffer.push(e(c._triageMustache.call(a, "bannedBy", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</td><td class="text-center">');
			d = c._triageMustache.call(a, "createdOn", {
				name: "_triageMustache",
				hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td>");
			d = c["if"].call(a, "isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(14, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tr>");
			return ""
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<div ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"class": "country"}, hashTypes: {"class": "STRING"},
				hashContexts: {"class": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push("></div>");
			a = c["if"].call(a, "city", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(12, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			return ""
		}, 12: function (a, c, d, b) {
			b.buffer.push('<span class="city">(');
			a = c._triageMustache.call(a, "city", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push(")</span>");
			return ""
		}, 14: function (a, c, d, b) {
			b.buffer.push('<td class="text-center delete-cell"><div class="smart-form"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></div></td>')
		}, 16: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push("<tr ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><td colspan="6" class="text-center"><h1>');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "empty_ban_list", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h1></td></tr>");
			return ""
		}, 18: function (a, c, d, b) {
			a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 20: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<input type="hidden" id="ban-entry" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "activeBan.entry"},
				hashTypes: {value: "ID"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' /><label class="label">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "ban_entry", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input">');
			a = c._triageMustache.call(a,
				"activeBan.displayText", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			b.buffer.push("</label>");
			return ""
		}, 22: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<label class="label" for="ban-entry">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ip_address", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="input"><input type="text" class="ipAddress required" id="ban-entry" name="ban-entry" placeholder="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_ip_address", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" /></label>');
			return ""
		}, 24: function (a, c, d, b) {
			b.buffer.push('<div class="transcript-divider"></div>')
		}, 26: function (a, c, d, b) {
			b.buffer.push('<div class="transcript-view">');
			a = c["if"].call(a, "activeBan.transcript.isLoaded", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(27,
					b), inverse: this.program(35, b), types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</div>");
			return ""
		}, 27: function (a, c, d, b) {
			b.buffer.push('<div id="transcriptBody">');
			d = c.each.call(a, "activeBan.transcript.content", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(28, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c.unless.call(a, "activeBan.transcript.content.length", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(30,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div>");
			return ""
		}, 28: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<div class="clear"></div>');
			return ""
		}, 30: function (a, c, d, b) {
			a = c["if"].call(a, "activeBan.isVisitor", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {},
				fn: this.program(31, b), inverse: this.program(33, b), types: ["ID"], contexts: [a], data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 31: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_transcript_visitor", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 33: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
				"no_transcript_ip", {
					name: "I18n",
					hash: {context: "ban_list"},
					hashTypes: {context: "STRING"},
					hashContexts: {context: a},
					types: ["ID"],
					contexts: [a],
					data: b
				})))
		}, 35: function (a, c, d, b) {
			a = c["if"].call(a, "activeBan.transcript.isError", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(36, b),
				inverse: this.program(38, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 36: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div class="load-container text-center"><button class="btn btn-danger reload-view">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "transcript_error", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button></div>");
			return ""
		}, 38: function (a, c, d, b) {
			b.buffer.push('<div class="load-container text-center"><img src="images/ajax-loader-big.gif" /></div>')
		}, 40: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<button type="button" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":btn :btn-danger activeBan.id::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' id="delete">');
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a,
		                                                     c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
			d = c.unless.call(a, "activeProperty.isPersonal", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c._triageMustache.call(a, "activeProperty.name", {
				name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
				contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-ban"></i>&nbsp;');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</span>");
			d = c["if"].call(a, "activeBan", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeBan:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div class="text-right" style="height: 40px;"><div class="pull-left" style="width: 450px"><form id="search-form"><input id="search-text" class="form-control" type="text" placeholder="Search" /></form></div><div class="pull-right"><button id="add-item" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_ip", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div><div class="clearfix"></div></div><div id="scrollable-list" style="position: absolute;top: 40px; width: 100%;bottom: 0; overflow: auto;" class="smart-form"><table class="table"><thead><tr><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_entry", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "location", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_reason", {
				name: "I18n", hash: {context: "ban_list"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "banned_by", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "banned_on", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</th>");
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tr></thead><tbody>");
			d = c.each.call(a, "pagedList.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.program(16, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</tbody></table></div><div id="list-loading" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isLoading::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><div id="bulk-action-container" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.bulkMarkedTotal::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
			d = c["if"].call(a, "view.bulkMarkedTotal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(18, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white" id="bulk-conversations-purge">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></li></ul></div></div></div><form id="ban-form" name="ban-form" ');
			b.buffer.push(f(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "activeBan::hidden :smart-form :admin-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><div id="form-scrollable-container"><fieldset><section>');
			d = c["if"].call(a, "activeBan.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.program(22, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</section><section><label class="label" for="ban-reason">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_reason", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</label><label class="textarea">');
			b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
				name: "textarea",
				hash: {
					valueBinding: "activeBan.reason",
					name: "ban-reason",
					id: "ban-reason",
					rows: "3",
					"class": "required",
					placeholderKey: "enter_ban_reason"
				},
				hashTypes: {
					valueBinding: "STRING",
					name: "STRING",
					id: "STRING",
					rows: "STRING",
					"class": "STRING",
					placeholderKey: "STRING"
				},
				hashContexts: {valueBinding: a, name: a, id: a, rows: a, "class": a, placeholderKey: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("</label></section></fieldset>");
			d = c["if"].call(a, "activeBan.transcript.content.length",
				{
					name: "if",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(24, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeBan.id", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><footer><button id="submit" type="submit" class="btn btn-primary">');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
				name: "I18n", hash: {context: "buttons"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push("</button>");
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(40, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</footer></form></div></div>");
			return ""
		}, useData: !0
	});
Ember.TEMPLATES.billingMain = Ember.Handlebars.template({
	1: function (a, c, d, b, e) {
		var f = this.escapeExpression, g = c.helperMissing;
		b.buffer.push('<div class="billing-list-container" style="width: 100%; height: auto; border-bottom: 1px solid #ddd; position: relative; padding-bottom : 10px;"><div style="display: table; width : 100%"><div style="display: table-row"><div style="table-cell; border-right: 1px solid #ddd; padding-right : 15px;"><div style="width : 100%; height : 100%; overflow : auto; position: relative; padding : 5px 0;"><div style="float : left; width : 100%;"><div style="margin-left : 120px; color : #777;"><h3 style="margin : 0 0 10px 0; float: left;">');
		d = c._triageMustache.call(a, "subscription.addOnName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</h3>");
		d = c["if"].call(a, "subscription.isCanceled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div><p style="margin-right : 80px">');
		b.buffer.push(f(c._triageMustache.call(a,
			"subscription.addOnShortDescription", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</p></div></div><div style="float : left; width : 100px; margin-left: -100%;"><img ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {src: "subscription.addOnLogo"},
			hashTypes: {src: "STRING"},
			hashContexts: {src: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></div><div class="clearfix"></div><div style="margin : 20px 0;"><h4 style="margin : 10px 0; font-weight : 500;">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "plan_billing_details", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h4><table style="width: 100%"><tr><td style="padding: 5px 5px 5px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "plan", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>');
		d = c._triageMustache.call(a, "subscription.plan.subscriptionType", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</strong></td><td style="padding: 5px 5px 5px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "plan_price", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>$ ');
		d = c._triageMustache.call(a, "subscription.plan.pricePretify", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</strong></td></tr><tr><td style="padding: 5px 5px 5px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "purchased_on", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>');
		d = c._triageMustache.call(a, "subscription.purchasedDate", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</strong></td>");
		d = c["if"].call(a, "subscription.isCanceled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b, e),
			inverse: this.program(6, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tr><tr><td style="padding: 5px 5px 5px 0;">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || g).call(a, "billing_admin", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>');
		b.buffer.push(f(c._triageMustache.call(a, "subscription.subscribedBy", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</strong></td>");
		d = c["if"].call(a, "subscription.isCanceled",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b, e),
				inverse: this.program(10, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</tr><tr><td style="padding: 5px 5px 5px 0; vertical-align: top;">Billing Address</td><td style="padding: 5px 5px 5px 0;"><p class="address" style="margin : 0;">');
		b.buffer.push(f(c._triageMustache.call(a, "subscription.billingAddressRich", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p>");
		d = c["if"].call(a, "subscription.billingAddress", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b, e),
			inverse: this.program(14, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<form class="change-billing-address-form smart-form hidden" name="change-billing-address-form" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-id": "subscription.id"}, hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><div><fieldset style="background: inherit;"><section><label class="textarea">');
		b.buffer.push(f((c.textarea || a && a.textarea || g).call(a, {
			name: "textarea",
			hash: {valueBinding: "subscription.billingAddress", rows: "5", "class": "billing-address"},
			hashTypes: {valueBinding: "STRING", rows: "STRING", "class": "STRING"},
			hashContexts: {valueBinding: a, rows: a, "class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></section></fieldset><div class="text-center"><button class="cancel-change-billing-address btn btn-default" style="margin : 0 5px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-primary submit-change-billing-address" style="margin : 0 5px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div></form></td></tr></table></div></div></div><div style="display: table-cell; width : 250px; vertical-align: top; padding-left : 15px; height : 100%;"><div style="width : 100%; height : 100%; position: relative;"><div id="receipt-list" style="width : 100%;"><h3 style="margin : 0 0 10px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "invoices", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h3><ul class="receipts-list">');
		d = c.each.call(a, "subscription.paymentReceipts", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<li class="clearfix"></li></ul><p ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":text-center hasMoreReceipts::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><a href="javascript:void(0);">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "view_more", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></p></div><div style="width : 100%; margin-top : 10px;"><form class="smart-form receipt-email"><p class="text-center hidden"><a href="javascript:void(0);">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "view_all_receipts", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></p>");
		d = c["if"].call(a, "subscription.isAvailable", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<input type="hidden" class="subscription-id" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {value: "subscription.id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' /></form></div></div></div></div><div style="display: table-row"><div class="payment-details smart-form hidden pull-right" style="display : table-cell; border-right: 1px solid #ddd; padding-right : 5px; width : 46%;"><form class="change-payment-form" name="change-payment-form" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-id": "subscription.id"},
			hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><div style="padding:20px 15px;"><fieldset style="background: inherit;"><ol id="payment-steps">');
		d = c["if"].call(a, "subscription.isCanceled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "canUsePaypal", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(30, b, e),
			inverse: this.noop, types: ["ID"], contexts: [e[1]], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" <li ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "controller.canUsePaypal:hidden :card-details"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c["if"].call(a, "Tawk.userController.existingCards.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(32, b, e),
			inverse: this.program(35, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("<div ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "Tawk.userController.existingCards.length:hidden :new-card-details"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="margin-left: -16px;"><section><label class="input"><i class="icon-prepend fa fa-user" style="z-index:1;"></i><input id="cardholder-name" name="cardholder-name" type="text" class="input required" placeholder="Name on card" /></label></section><section><label class="input"><i class="icon-prepend fa fa-credit-card" style="z-index:1;"></i><i class="card-type icon-append"></i><input id="card-number" name="card-number" type="text" class="input required ccNumber" placeholder="Card number" /></label></section><div class="row"><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-calendar" style="z-index:1;"></i><input id="card-expiry" name="card-expiry" type="text" class="input required ccExpiryFormat ccExpiryDate" placeholder="MM/YY" /></label></section><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-lock" style="z-index:1;"></i><input id="card-cvc" name="card-cvc" type="text" class="input required digits cvcCheck" placeholder="CVV" minlength="3" maxlength="4" /></label></section></div><section><label class="input"><i class="icon-prepend fa fa-map-marker" style="z-index:1;"></i><input id="zip-code" name="zip-code" type="text" class="input required" placeholder="Zip code" /></label></section></div></li></ol></fieldset><div class="text-center"><button class="cancel-payment-change btn btn-default" style="margin : 0 5px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		d = c["if"].call(a, "subscription.isCanceled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(37, b, e),
			inverse: this.program(39, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div class="text-center"><div class="sprite-background secure-seal"></div></div></form></div></div></div></div>');
		return ""
	}, 2: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<h3 style="margin : 0 0 10px 0; float: right; color : red">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "canceled", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h3>");
		return ""
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<td style="padding: 5px 5px 5px 0;">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "expires_on", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 5px 5px 5px 0;" colspan="2"><strong>');
		a = c._triageMustache.call(a, "subscription.expiryDate", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</strong></td>");
		return ""
	}, 6: function (a, c, d, b) {
		var e = c.helperMissing, f =
			this.escapeExpression;
		b.buffer.push('<td style="padding: 5px 5px 5px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "next_billing", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><strong>');
		d = c._triageMustache.call(a, "subscription.nextBillingDate", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</strong></td><td style="padding: 5px 5px 5px 0;"><a class="cancel-subscription" href="javascript:void(0);" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "subscription.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="text-decoration: underline;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></td>");
		return ""
	}, 8: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<td style="padding: 5px 5px 5px 0;" colspan="3"><button class="btn btn-primary renew-subscription" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "subscription.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a,
			"renew_subscription", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</button></td>");
		return ""
	}, 10: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<td style="padding: 5px 5px 5px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "payment_method", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 5px 5px 5px 0;"><span ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":card-type subscription.paymentMethod :card-display"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></span><span style="vertical-align : middle;">');
		d = c._triageMustache.call(a, "subscription.source", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></td><td style="padding: 5px 5px 5px 0;"><a class="change-payment-method" href="javascript:void(0);" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "subscription.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="text-decoration: underline;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "modify", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></td>");
		return ""
	}, 12: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<p><a class="change-billing-address" href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "subscription.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="text-decoration: underline;">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a,
			"modify", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</a></p>");
		return ""
	}, 14: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<a class="change-billing-address" href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "subscription.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="text-decoration: underline;">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a>");
		return ""
	}, 16: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<li class="receipt-item"><span class="receipt-amount">$');
		d = c._triageMustache.call(a, "amountPretify", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
			contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="receipt-date"><a class="view-receipt" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "paymentId"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "downloadLink"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank">');
		d = c._triageMustache.call(a,
			"transactionDate", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</a></span></li>");
		return ""
	}, 18: function (a, c, d, b) {
		var e;
		d = this.escapeExpression;
		e = c.helperMissing;
		b.buffer.push('<div style="float : left; width : 100%;"><div style="margin-right : 35px;"><label class="checkbox" style="margin-bottom : 5px;"><input type="checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {id: "subscription.id"},
			hashTypes: {id: "STRING"}, hashContexts: {id: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' class="toggle-email-receipts" name="email-receipts-select" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "subscription.billingEmailEnabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "email_receipts", {
			name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</label><div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "subscription.billingEmailEnabled::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: relative"><label class="select"><select class="select-email">');
		e = c["if"].call(a, "subscription.isSubscribedByMe", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(19,
				b), inverse: this.program(21, b), types: ["ID"], contexts: [a], data: b
		});
		null != e && b.buffer.push(e);
		e = c["if"].call(a, "subscription.billingEmailAddress", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(23, b),
			inverse: this.program(25, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push("</select><i></i></label><label ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":input subscription.billingEmailAddress::hidden :custom-email-field"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: absolute; left: 2px; top: 2px; right: 22px; height: 28px;"><input name="email-input" type="text" class="input-text email" placeholder="Enter email address" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "subscription.billingEmailAddress"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="border: 0; height: 28px;"/></label><em for="email-input" class="invalid" generated="true"></em></div></div></div><div style="float: left; margin-left : -28px;"><button class="btn btn-primary btn-sm save-email" style="padding : 3px 7px;"><i class="fa fa-save"></i></button></div><div class="clearfix"></div>');
		return ""
	}, 19: function (a, c, d, b) {
		b.buffer.push('<option value="default-email">');
		a = c._triageMustache.call(a, "Tawk.userController.user.email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 21: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<option value="billing-admin" selected>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "billing_admin", {
			name: "I18n", hash: {context: "admin"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 23: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<option value="custom-email" selected>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "another_email", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 25: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<option value="custom-email">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "another_email", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 27: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><section><label class="label" style="font-weight: bold; font-size: 15px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
			"select_package", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select class="plan">');
		a = c.each.call(a, "subscription.plans", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(28, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</select><i></i></label></section></li>");
		return ""
	}, 28: function (a,
	                 c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {selected: "selected"},
			hashTypes: {selected: "STRING"},
			hashContexts: {selected: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">$ ");
		a = c._triageMustache.call(a, "pricePretify", {
			name: "_triageMustache", hash: {}, hashTypes: {},
			hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 30: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><section><label class="label" style="font-weight: bold; font-size: 15px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_payment_method", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select class="payment-method"><option value="pp">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "paypal", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="cc">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "credit_card", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option></select><i></i></label></section></li>");
		return ""
	}, 32: function (a,
	                 c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="label" style="font-weight: bold; font-size: 15px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_existing_card", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select" style="margin-left: -16px;"><select class="card-selection"><option value="new-card">');
		b.buffer.push(e((c.I18n || a &&
			a.I18n || d).call(a, "add_card", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		a = c.each.call(a, "Tawk.userController.existingCards", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(33, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</select><i></i></label></section>");
		return ""
	}, 33: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "customerId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {selected: "selected"},
			hashTypes: {selected: "STRING"},
			hashContexts: {selected: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c._triageMustache.call(a, "cardBrand", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" x-");
		d = c._triageMustache.call(a, "cardNumber", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</option>");
		return ""
	}, 35: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="label" style="font-weight: bold; font-size: 15px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "card_details", {
			name: "I18n", hash: {context: "admin"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</label></section>");
		return ""
	}, 37: function (a, c, d, b) {
		b.buffer.push('<button class="btn btn-primary submit-payment-change" style="margin : 0 5px;">Renew</button>')
	}, 39: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button class="btn btn-primary submit-payment-change" style="margin : 0 5px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, 41: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="well text-center"><div><h5>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_addons_purchased", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h5><p>");
		b.buffer.push(e((c.I18n || a &&
			a.I18n || d).call(a, "add_on_redirect", {
			name: "I18n",
			hash: {
				variables: '{"linkStart" : "<a id=\'addon-store\' href=\'javascript:void(0);\'>", "linkEnd" : "<\\/a>"}',
				context: "admin"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div></div>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
		var f = c.helperMissing, g = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-dollar"></i>&nbsp;');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "billing", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div id="billing-list" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: absolute;top: 0; width: auto; bottom: 0; overflow: auto; left : -13px; right : -13px;">');
		d = c.each.call(a, "subscription", "as", "subscriptionList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b, e),
			inverse: this.program(41, b, e),
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="list-loading" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isLoading::hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div></div>');
		return ""
	}, useData: !0, useDepths: !0
});
Ember.TEMPLATES.widgetBubblesGallery = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":superbox-list this.rotatable::non-rotatable"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "this.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><img class="bubble" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {src: "this.link"},
			hashTypes: {src: "STRING"},
			hashContexts: {src: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /></div>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a,
	                                                     c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div id="bubbles-container" style="bottom : 73px;"><div class="superbox col-sm-12">');
		d = c.each.call(a, "view.bubblesList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="bubble-more-below" class="hidden">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "more_bubble", {
			name: "I18n", hash: {context: "widgets"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push(' <i class="fa fa-arrow-down"></i></div></div><div class="modal-footer" style="position: absolute;width: 100%; bottom: 0;"> <button type="button" class="btn btn-default" id="close-bubble-gallery">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES["condition-view"] = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "groupKey", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></optgroup>');
		a = c.each.call(a, "keySelection", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 2: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "index"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {selected: "isSelected"},
			hashTypes: {selected: "STRING"},
			hashContexts: {selected: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "value", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 4: function (a, c, d, b) {
		b.buffer.push('<div class="form-table-cell" style="padding: 0 0 0 5px; vertical-align: top;width : 33.3%;"><label class="select"><i></i><select class="operation">');
		a = c.each.call(a, "view.selectTypes", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</select></label></div>");
		return ""
	}, 6: function (a, c, d, b) {
		b.buffer.push('<div class="form-table-cell" style="padding: 0 0 0 5px; vertical-align: top; width : 33.3%;"><label class="select" ><i></i><select class="condition-input" style="text-transform: capitalize;">');
		a = c.each.call(a, "view.valueSelection", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</select></label></div>");
		return ""
	}, 8: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="form-table-cell" style="padding: 0 0 0 5px; vertical-align: top;"><label class="input"><input type="text" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.valueInput.classNames"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {id: "view.valueInput.id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "view.valueInput.name"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "view.valueInput.value"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("  ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {placeholder: "view.valueInput.placeholder"},
			hashTypes: {placeholder: "STRING"},
			hashContexts: {placeholder: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {maxlength: "view.valueInput.maxlength"},
			hashTypes: {maxlength: "STRING"},
			hashContexts: {maxlength: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /></label></div>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a,
	                                                     c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="form-table"><div class="form-table-row"><div class="form-table-cell" style="padding: 0; vertical-align: top;width : 33.3%;"><label class="select"><i></i><select class="condition">');
		d = c.each.call(a, "view.mainConditons", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</select></label></div>");
		d = c["if"].call(a,
			"view.condition.operation", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.isSelect", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(8, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div></div><p class="note" style="position : absolute;">');
		d = c._triageMustache.call(a, "view.condition.hint",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</p><a href="javascript:void(0);" class="button-icon delete-condition" data-placement="top" data-original-title="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_condition", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a><input type="hidden" class="condition-item" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "view.condition.valueId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" />");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.departmentSettings = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa  fa-angle-right"></i>');
		a = c["if"].call(a, "activeDepartment.id", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2, b), inverse: this.program(4,
				b), types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 2: function (a, c, d, b) {
		a = c._triageMustache.call(a, "activeDepartment.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_department", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})))
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<tr class="open-view" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><td>");
		d = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td><td>");
		d =
			c._triageMustache.call(a, "description", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c["if"].call(a, "assignedAgents.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.program(9, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c["if"].call(a, "isEnabled", {
			name: "if", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(11, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center delete-cell"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></td></tr>');
		return ""
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<a class="name-popover" href="javascript:void(0);" rel="popover-hover" data-placement="top" data-html="true" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-content": "agentNames"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "totalAssignedText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a>");
		return ""
	}, 9: function (a, c, d, b) {
		b.buffer.push("-")
	}, 11: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-check txt-color-tawk-pink"></i>')
	}, 13: function (a,
	                 c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td colspan="5" class="text-center"><h1>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_departments", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h1></td></tr>");
		return ""
	}, 15: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 17: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="department-status">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "status", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="department-status" id="department-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeDepartment.isEnabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
			"disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('"></i></label></div></div></div></section>');
		return ""
	}, 19: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<label class="col col-6 checkbox"><input type="checkbox" name="assigned-agents" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "aid"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /><i></i><span style="margin-left : 10px">');
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span></label>");
		return ""
	}, 21: function (a, c, d, b) {
		d = c.helperMissing;
		var e =
			this.escapeExpression;
		b.buffer.push('<button type="button" class="btn btn-danger" id="delete">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-sitemap"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "departments", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeDepartment", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeDepartment:hidden :smart-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="width : 100%; height : 100%;"><div style="height: 40px;"><div class="pull-left"><label class="input"><input type="text" id="search" placeholder="Search" style="width: 450px"/></label></div><div class="pull-right"><button id="add-department" class="btn btn-primary">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "add_department", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div><div class="clearfix"></div></div><div class="scrollable-list" style="bottom : 60px;"><table class="table"><thead><tr><th>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "department", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</th><th>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "description", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "members", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "is_enabled", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
		d = c.each.call(a, "pagedList.currentData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(13,
				b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div id="bulk-action-container" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.bulkMarkedTotal::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
		d = c["if"].call(a, "view.bulkMarkedTotal", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(15,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white" id="bulk-conversations-purge">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li></ul></div></div><p style="position: absolute; width: 100%;bottom: 0; border-top: 1px solid #ddd; padding : 5px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "prechat_department", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</p></div><form id="department-form" name="department-form" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeDepartment::hidden :smart-form :admin-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="form-scrollable-container"><fieldset><section><label class="label" for="department-name">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required" id="department-name" name="department-name" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "department_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {value: "activeDepartment.name"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' /></label></section><section><label class="label" for="department-description">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "description", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea">');
		b.buffer.push(f((c.textarea ||
			a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {
				value: "activeDepartment.description",
				name: "department-description",
				id: "department-description",
				rows: "3",
				"class": "required",
				placeholderKey: "department_description"
			},
			hashTypes: {
				value: "ID",
				name: "STRING",
				id: "STRING",
				rows: "STRING",
				"class": "STRING",
				placeholderKey: "STRING"
			},
			hashContexts: {value: a, name: a, id: a, rows: a, "class": a, placeholderKey: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section>");
		d = c["if"].call(a, "activeDepartment.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "members", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		d = c.each.call(a, "activeDepartment.agentList", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(19,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></section></fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		d = c["if"].call(a, "activeDepartment.id", {
			name: "if", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(21, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</footer></form></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.forwardingSetup = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-body"><div class="form-bootstrapWizard"><ul class="bootstrapWizard form-wizard"><li class="active" data-target="#step1"><a class="change-tab" href="#tab1" data-toggle="tab"><span class="step pending">1</span><span class="step done hidden"></span><span class="title">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "support_email", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li data-target="#step2"><a class="change-tab" href="#tab2" data-toggle="tab"><span class="step pending">2</span><span class="step done hidden"></span><span class="title">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forwarding_email", {
			name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</span></a></li><li data-target="#step3"><a class="change-tab" href="#tab3" data-toggle="tab"><span class="step pending">3</span><span class="step done hidden"></span><span class="title">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "verify_setup", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li></ul><div class="clearfix"></div></div><br /><div class="tab-content" style="margin : 20px 10px;"><div class="tab-pane active" id="tab1"><form id="support-email-form" class="smart-form"><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_support_email", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input id="support-email" type="email" class="input text required" placeholder="eg. support@your-domain.com" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.candidate.address"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></form></div><div class="tab-pane" id="tab2"><ol><li class="padding-5">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_1", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="padding-5">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_2", {
			name: "I18n",
			hash: {
				variables: '{"emailAddress" : "activeProperty.settings.forwardingEmail", "strongStart" : "<span style=\'font-size: 14px; font-weight : 700;\'>", "strongEnd" : "</span>"}',
				replaceVar: "true", context: "admin"
			},
			hashTypes: {variables: "STRING", replaceVar: "STRING", context: "STRING"},
			hashContexts: {variables: a, replaceVar: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="padding-5"><div class="checkbox"><label><input id="finished-check" type="checkbox" /> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_3", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div></li></ol></div><div class="tab-pane text-center" id="tab3"><div id="verifying"><h5>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_checking_1", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h5><h5>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_checking_2", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5><img src="https://static-a.tawk.to/v2/a34/images/default.gif" /></div><div id="fail" class="hidden"><h3 class="txt-color-red">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_fail_1", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h3><p style="font-size:14px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_fail_2", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><p style="font-size:14px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_fail_3", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><div id="success" class="hidden"><h3 class="txt-color-green">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "forward_setup_success",
			{
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</h3><p id="success-message"></p><div id="success-check-container"><i class="fa fa-check"></i></div></div></div></div></div><div class="modal-footer"><button id="cancel" type="button" class="btn btn-default pull-left" data-dismiss="modal">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "cancel", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button><button id="next" type="button" class="btn btn-primary next-step pull-right">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "next_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="verify" type="button" class="btn btn-primary hidden next-step  pull-right" disabled>');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "verify", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="done" type="button" class="btn btn-primary hidden next-step  pull-right" data-dismiss="modal" disabled>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "done", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="previous" type="button" class="btn btn-default pull-right hidden">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "previous_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="start-over" type="button" class="btn btn-primary hidden pull-right">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "start_over", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><div class="clearfix"></div></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.knowledgebase = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		a = c["if"].call(a, "activeKnowledgebase.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.program(4, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 2: function (a, c, d, b) {
		a = c._triageMustache.call(a, "activeKnowledgebase.title", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_content", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})))
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "categories", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 8: function (a, c, d, b) {
		a = c.unless.call(a, "isDeleted", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 9: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 11: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="pull-right"><button id="add-item" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_content", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="manage-categories" class="btn btn-default" style="margin-left : 5px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "manage_categories", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div>");
		return ""
	}, 13: function (a, c, d, b, e) {
		var f = this.escapeExpression;
		b.buffer.push("<tr ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "content.id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="open-view"><td style="vertical-align: middle; width : 60%;"><p><b>');
		d = c._triageMustache.call(a, "content.title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</b></p><p>");
		b.buffer.push(f(c._triageMustache.call(a, "content.snippet", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('...</p></td><td style="vertical-align: middle"  class="text-center">');
		d = c._triageMustache.call(a, "content.categoryName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td style="vertical-align: middle"  class="text-center">');
		d = c._triageMustache.call(a, "content.createdOnStr", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center" style="vertical-align: middle">');
		d = c["if"].call(a, "activeProperty.isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 14: function (a, c, d,
	                 b) {
		d = this.escapeExpression;
		b.buffer.push('<button class="btn btn-danger delete-content" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "content.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-trash-o"></i></button>');
		return ""
	}, 16: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<tr><td colspan="4" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isLoading:hidden :text-center"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("><h3>");
		a = c["if"].call(a, "loadingError", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.program(19, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</h3></td></tr>");
		return ""
	}, 17: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "load_list_error", {
			name: "I18n", hash: {context: "admin"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})))
	}, 19: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "content_unavailable", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})))
	}, 21: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<form id="knowledgebase-form" name="knowledgebase-form" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeKnowledgebase::hidden :admin-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="form-scrollable-container"><fieldset><div style=" display: inline-block; vertical-align: top; width: 65%;"><section class="smart-form" style="margin-bottom: 15px;"><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "title", {
			name: "I18n", hash: {context: "admin"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label class="input" style="max-width : 100%"><input type="text"  class="required" id="kb-title" name="kb-title" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeKnowledgebase.title"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section><section style="margin-bottom: 15px;"><div class="smart-form"><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "content_text", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><label id="kb-content-container" class="textarea" style="width : 100%; max-width : 100%;"><textarea id="editor" maxlength="5000" name="kb-content"></textarea></label><em id="kb-content-error" for="kb-content" class="invalid hidden">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"required", {
				name: "I18n",
				hash: {context: "form_validation_messages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</em></section></div><div class="smart-form" style="display: inline-block; vertical-align: text-bottom; width: 30%; margin-left: 4%; margin-right : 1%;"><section><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "status", {
			name: "I18n", hash: {context: "header"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label class="select"><select id="status-select"><option value="draft">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "draft_status", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option id="published-option" value="published" disabled="disabled">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "published_status", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option id="outdated-option" value="outdated" disabled="disabled">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "outdated_status", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option></select><i></i></label></section><section><label class="label">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "category", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><select id="category-select" name="category-select" class="required"><option selected="true" disabled="disabled"></option><option value="new">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "new_category", {
			name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push("</option>");
		d = c.each.call(a, "kbCategories", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></section><section><label id="new-category-field" class="input hidden"><input type="text" name="category-name" id="category-name" class="required" maxlength="50" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n ||
			f).call(a, "enter_category", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section></div></fieldset></div><div class="smart-form" style="position: absolute;bottom: 0;width: auto;left: 0;right: 0;"><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button><button type="button" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-danger activeKnowledgebase.id::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="delete">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "delete_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></div></form>");
		return ""
	}, 23: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div id="form-scrollable-container" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeKnowledgebase::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="kb-content-container"></div></div>');
		return ""
	}, 25: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="pull-right smart-form"><form id="add-category-form" name="add-category-form"><label class="input" style="display: inline-block; vertical-align: middle;"><input type="text" class="input"id="new-category-input"  name="category-name" maxlength="50" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_category", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label><button id="add-category" class="btn btn-primary"><i class="fa fa-save"></i></button></form></div>');
		return ""
	}, 27: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<tr><td class="smart-form" style="vertical-align: middle"><span class="display-category">');
		d = c._triageMustache.call(a,
			"name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><label class="input edit-category-input hidden"><input type="text" class="input" name="category-name" maxlength="50" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></td><td class="text-right">');
		d = c["if"].call(a,
			"controller.activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(28, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 28: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="edit-buttons-container hidden"><button class="btn btn-primary save-edit" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="margin-right : 5px;"><i class="fa fa-save"></i></button><button class="btn btn-default cancel-edit" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-times"></i></button></div><div class="action-buttons-container"><button class="btn btn-default edit-category" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' style="margin-right : 5px;"><i class="fa fa-edit"></i></button><button class="btn btn-danger delete-category" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-trash-o"></i></button></div>');
		return ""
	}, 30: function (a,
	                 c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td class="text-center"><h3>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_categories", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h3></td></tr>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
		var f = c.helperMissing, g = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-book"></i>&nbsp;');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "knowledge_base", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeKnowledgebase", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.manageCategories", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(6,
				b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.manageCategories:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: relative; width : 100%; height: 100%;"><div ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeKnowledgebase:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="text-right" style="height: 80px;"><div class="pull-left" style="width: 350px"><form id="search-kb-content"><div class="input-group"><input id="content-text" class="form-control" type="text" placeholder="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('" /><div class="input-group-btn" style="position: static;"><button id="openFilter" type="button" class="btn btn-default dropdown-toggle" style="margin-left: -1px;"><span class="caret"></span></button><div class="dropdown-menu pull-right smart-form" role="menu" id="shortcuts-filter" style="position:absolute; width : 100%"><fieldset class="padding-10"><section><label class="label">');
		b.buffer.push(g((c.I18n ||
			a && a.I18n || f).call(a, "category", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><select class="category-select"><option selected="true"></option>');
		d = c.each.call(a, "kbCategories", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></section><section><label class="label">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "status", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><select class="status-select"><option selected="true"></option><option value="draft">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "draft_status", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="published">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "published_status", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="outdated">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "outdated_status", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option></select><i></i></label></section></fieldset><footer style="position: static; width : auto;"><button type="submit" class="btn btn-primary search">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn bg-color-teal txt-color-white" id="reset-filter">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "reset",
			{
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</button><button class="btn btn-default" id="close-filter">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></div></div><div class="clearfix"></div></div></form></div>');
		d = c["if"].call(a,
			"activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><div id="content-scrollable" class="scrollable-list" style="position: absolute;top: 85px; width: 100%;bottom: 0; overflow: auto;"><table class="table"><thead><tr><th>');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "content_text", {
			name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "category", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center"');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "created_on", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</th><th></th></tr></thead><tbody>");
		d = c.each.call(a, "content", "as", "pagedList.currentData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b, e),
			inverse: this.program(16, b, e),
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</table></table></div><div id="list-loading" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isLoading::hidden"}, hashTypes: {"class": "STRING"},
			hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div>');
		d = c["if"].call(a, "activeProperty.isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b, e),
			inverse: this.program(23, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div><div ");
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.manageCategories::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="width: 100%; height : 100%; position : relative;"><div class="text-right" style="height: 40px;"><div class="pull-left" style="width: 450px"><form id="search-form"><input id="search-category" class="form-control" type="text" placeholder="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></form></div>');
		d = c["if"].call(a, "activeProperty.isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(25, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><div class="scrollable-list" style="position: absolute;top: 40px; width: 100%;bottom: 0; overflow: auto;"><table class="table"><tbody>');
		d = c.each.call(a, "filteredCategoryList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b, e),
			inverse: this.program(30,
				b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</tbody></table></div></div></div></div>");
		return ""
	}, useData: !0, useDepths: !0
});
Ember.TEMPLATES.liveAnswerSettings = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<div class="done setting-status"><i class="fa fa-check"></i></div>')
	}, 3: function (a, c, d, b) {
		b.buffer.push('<div class="not-done setting-status"></div>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div id="main-view"><div style="margin-bottom : 10px;"><div style="float : left; width : 100%;"><div style="margin-left : 120px;"><h3 style="margin : 0 0 10px 0;">');
		d = c._triageMustache.call(a, "activeAddOn.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</h3><p>");
		b.buffer.push(e(c._triageMustache.call(a, "activeAddOn.shortDescription", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</p><div class="smart-form" ><label class="toggle" style="margin: 0;"><input type="checkbox" name="addon-status" id="addon-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAddOn.settings.enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text",
			{
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "disabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" style="left:0;"></i></label></div></div></div><div style="float : left; width : 100px; margin-left: -100%;"><img ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {src: "activeAddOn.addOnLogo"},
				hashTypes: {src: "STRING"},
				hashContexts: {src: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' /></div><div class="clearfix"></div></div><div><h5>Getting Started</h5><p>Prior to allocating agents to your project, we undertake a full audit of your requirements & any required systems or processes to ensure we best represent you and your company.</p><p>We have developed a process to help us collate all the information agents will need to answer the queries of your website\'s visitors correctly and efficiently; please do take some time to go through each of the below sections to arm agents with all the tools & information they need to be effective in chat.</p><p>The more information we have, the better equipped we will be of service.</p><p>A key concept, is to always remember the following statement :</p><p>"An agent is not expected to remember everything about your business, nor are they expected to be able to memorize answers to every possible question. Agents are expected however to know "where" to find the answers."</p><ul id="live-answering-settings"><li class="setting-selection"><a href="javascript:void(0);" class="wrapper open-wizard" data-id=0><i class="fa fa-bank"></i><h5>About your business</h5></a>');
		d = c["if"].call(a, "activeAddOn.settings.isWizardSetup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</li><li class="setting-selection"><a href="javascript:void(0);" class="wrapper open-knowledgebase"><i class="fa fa-book"></i><h5>Knowledge Base</h5></a>');
		d = c["if"].call(a, "activeAddOn.settings.isKBSetup", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.program(3,
				b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</li><li class="setting-selection"><a href="javascript:void(0);" class="wrapper open-shortcuts"><i class="fa fa-cut"></i><h5>Shortcuts</h5></a>');
		d = c["if"].call(a, "activeAddOn.settings.isShortcutsSetup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</li><li class="setting-selection"><a href="javascript:void(0);" class="wrapper" id="set-scheduler"><i class="fa fa-clock-o"></i><h5>Agent Scheduler</h5></a>');
		d = c["if"].call(a, "activeAddOn.settings.isSchedulerSetup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</li><li class="setting-selection"><a href="javascript:void(0);" class="wrapper open-alert"><i class="fa fa-bell"></i><h5>Agent Alert</h5></a>');
		d = c["if"].call(a, "activeAddOn.settings.isAlertSetup", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.program(3,
				b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</li></ul></div></div><div id="subview" style="height : 100%;"></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.liveAnswerSettingsWizard = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<span class="step done"><i class="fa fa-check"></i></span>')
	}, 3: function (a, c, d, b) {
		b.buffer.push('<span class="step pending">1</span>')
	}, 5: function (a, c, d, b) {
		b.buffer.push('<span class="step pending">2</span>')
	}, 7: function (a, c,
	                d, b) {
		b.buffer.push('<span class="step pending">3</span>')
	}, 9: function (a, c, d, b) {
		b.buffer.push('<span class="step pending">4</span>')
	}, 11: function (a, c, d, b) {
		b.buffer.push('<span class="step pending">5</span>')
	}, 13: function (a, c, d, b) {
		b.buffer.push('<span class="step pending">6</span>')
	}, 15: function (a, c, d, b) {
		b.buffer.push('<span class="step pending">7</span>')
	}, 17: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<li class="padding-5 faq-data" style="position: relative;"><section style="margin-right: 15px;"><label class="input" style="display: inline-block; width : 100%;max-width : 100%;"><input type="text" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "qId"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="required question" placeholder="Question" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "q"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' maxlength="500"/></label></section><section style="margin-right: 15px;"><label class="textarea" style="max-width : 100%;">');
		b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {
				name: "aId",
				maxlength: "5000",
				value: "a",
				placeholder: "Answer",
				rows: "3",
				"class": "required answer"
			},
			hashTypes: {
				name: "ID",
				maxlength: "STRING",
				value: "ID",
				placeholder: "STRING",
				rows: "STRING",
				"class": "STRING"
			},
			hashContexts: {name: a, maxlength: a, value: a, placeholder: a, rows: a, "class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section>");
		a = c["if"].call(a, "canDelete", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(18,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</li>");
		return ""
	}, 18: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<a class="remove-faq" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);" style="color: red; position: absolute; top: 10px; right: 0px;"><i class="fa fa-times" class="fa-2-x" style="font-size: 20px"></i></a>');
		return ""
	}, 20: function (a, c, d, b) {
		b.buffer.push('<div class="text-right" style="margin-right: 15px;"><a href="javascript:void(0);" class="add-faq-question">+ Add Question</a></div>')
	}, 22: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li class="padding-5 emergency-data" style="position: relative;"><div style="margin-right : 15px; margin-top: -18px;"><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-user"></i><input type="text" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {name: "nId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' class="required contact-name" placeholder="Contact Name"');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' maxlength="100" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {name: "nId"}, hashTypes: {name: "STRING"}, hashContexts: {name: a},
			types: [], contexts: [], data: b
		})));
		b.buffer.push(' /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-black-tie"></i><input type="text" placeholder="Contact Title" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "title"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="contact-title" maxlength="100" /></label></section></div><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-phone"></i><input type="text" placeholder="Contact Number" class="required validPhoneNumber contact-number" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "phone"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "pId"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-envelope"></i><input type="text" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {name: "eId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' class="required email contact-email" placeholder="Contact Email"');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "email"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("  ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {name: "eId"}, hashTypes: {name: "STRING"}, hashContexts: {name: a}, types: [],
			contexts: [], data: b
		})));
		b.buffer.push(" /></label></section></div></div>");
		a = c["if"].call(a, "canDelete", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(23, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</li>");
		return ""
	}, 23: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<a class="remove-contact" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);" style="color: red; position: absolute; top: 10px; right: 0px;"><i class="fa fa-times" class="fa-2-x" style="font-size: 20px"></i></a>');
		return ""
	}, 25: function (a, c, d, b) {
		b.buffer.push('<div class="text-right" style="margin-right: 15px;"><a href="javascript:void(0);" class="add-contact">+ Add Another Contact</a></div>')
	}, 27: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<li class="padding-5 reputation-data" style="position: relative;"><section style="margin-right: 15px;"><label class="input" style="display: inline-block; width : 100%;max-width : 100%;"><input type="text" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "qId"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="required question" placeholder="Question" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "q"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' maxlength="500"/></label></section><section style="margin-right: 15px;"><label class="textarea" style="max-width : 100%;">');
		b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {
				name: "aId",
				maxlength: "5000",
				value: "a",
				placeholder: "Answer",
				rows: "3",
				"class": "required answer"
			},
			hashTypes: {
				name: "ID",
				maxlength: "STRING",
				value: "ID",
				placeholder: "STRING",
				rows: "STRING",
				"class": "STRING"
			},
			hashContexts: {name: a, maxlength: a, value: a, placeholder: a, rows: a, "class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section>");
		a = c["if"].call(a, "canDelete", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(28,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</li>");
		return ""
	}, 28: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<a class="remove-reputation" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);" style="color: red; position: absolute; top: 10px; right: 0px;"><i class="fa fa-times" class="fa-2-x" style="font-size: 20px"></i></a>');
		return ""
	}, 30: function (a, c, d, b) {
		b.buffer.push('<div class="text-right" style="margin-right: 15px;"><a href="javascript:void(0);" class="add-reputation-question">+ Add Question</a></div>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="form-bootstrapWizard"><ul class="bootstrapWizard form-wizard"><li ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": ":active activeAddOn.settings.hiredContent.business:complete"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' data-target="#step1" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab1" data-toggle="tab">');
		d = c["if"].call(a, "activeAddOn.settings.hiredContent.business", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "activeAddOn.settings.hiredContent.offering:complete"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' data-target="#step2" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab2" data-toggle="tab">');
		d = c["if"].call(a, "activeAddOn.settings.hiredContent.offering", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		b.buffer.push("</a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeAddOn.settings.hiredContent.culture:complete"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-target="#step3" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab3" data-toggle="tab">');
		d = c["if"].call(a, "activeAddOn.settings.hiredContent.culture", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(1, b), inverse: this.program(7, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeAddOn.settings.hiredContent.faqs.length:complete"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-target="#step4" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab4" data-toggle="tab">');
		d = c["if"].call(a,
			"activeAddOn.settings.hiredContent.faqs.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(9, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeAddOn.settings.hiredContent.emergency.length:complete"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-target="#step5" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab5" data-toggle="tab">');
		d = c["if"].call(a, "activeAddOn.settings.hiredContent.emergency.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(11, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeAddOn.settings.hiredContent.objectives.length:complete"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-target="#step6" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab6" data-toggle="tab">');
		d = c["if"].call(a, "activeAddOn.settings.hiredContent.objectives.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeAddOn.settings.hiredContent.reputation:complete"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' ndata-target="#step7" style="min-width: 35px; width : 14%;"><a class="change-tab" href="#tab7" data-toggle="tab">');
		d = c["if"].call(a, "activeAddOn.settings.hiredContent.reputation.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(15, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a></li></ul><div class="clearfix"></div></div><br /><div class="tab-content" style="margin : 0px auto; position: absolute; top: 50px;bottom: 0; height: auto; overflow : hidden; overflow-y: auto; left: 10px; right: 10px; bottom : 55px; max-width : 800px; padding : 0 15px;"><div class="tab-pane active" id="tab1"><h5 class="text-center"><b>Tell us about you and your business</b></h5><p>The more information we have, the better equipped we will be to deliver fantastic customer service on your behalf.</p><form id="liveAnswer-business" class="smart-form"><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-briefcase"></i><input type="text" class="required" id="business-name" name="business-name" placeholder="Business Name" maxlength="100"');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.business.name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-globe"></i><input type="text" class="required url_prefix" id="business-website" name="business-website" placeholder="Business Website" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "activeAddOn.settings.business.url"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('/></label></section></div><section><label class="textarea" style="max-width : 100%;"><i class="icon-append fa fa-map-marker"></i>');
		b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
			name: "textarea",
			hash: {
				value: "activeAddOn.settings.business.address",
				maxlength: "255",
				rows: "3",
				placeholder: "Business Address",
				id: "business-address",
				name: "address"
			},
			hashTypes: {
				value: "ID", maxlength: "STRING", rows: "STRING",
				placeholder: "STRING", id: "STRING", name: "STRING"
			},
			hashContexts: {value: a, maxlength: a, rows: a, placeholder: a, id: a, name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></section><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-phone"></i><input type="text" name="number" class="validPhoneNumber" id="business-number" placeholder="Contact Number"  ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "activeAddOn.settings.business.phone"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('/></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-envelope"></i><input type="email" class="required email" name="business-email" id="business-email" placeholder="Contact Email"  ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.business.email"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></section></div><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-facebook"></i><input type="text" id="business-facebook" placeholder="Facebook" class="facebookFormat" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.business.fb"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-twitter"></i><input type="text" id="business-twitter" placeholder="Twitter" class="twitterFormat" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.business.twitter"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section></div><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-user"></i><input type="text" class="required" id="business-contact-name" name="business-contact-name" placeholder="Contact Person" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.business.contactPerson.name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-envelope"></i><input type="email" class="required email" id="business-contact-email" name="business-contact-email" placeholder="Contact Person\'s Email" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "activeAddOn.settings.business.contactPerson.email"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('/></label></section></div><div class="row"><section class="col col-6"><label class="input"> <i class="icon-append fa fa-phone"></i><input type="text" class="required validPhoneNumber" id="business-contact-number" name="business-contact-number" placeholder="Contact Person\'s Number" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "activeAddOn.settings.business.contactPerson.phone"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('/></label></section></div></form></div><div class="tab-pane" id="tab2"><h5 class="text-center"><b>Your Product &/or Service offering</b></h5><p>Please describe your products and / service offerings.</p><form id="liveAnswer-offering" class="smart-form"><label class="textarea" style="max-width : 100%;">');
		b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
			name: "textarea",
			hash: {
				value: "activeAddOn.settings.offering",
				"class": "required", id: "offering", maxlength: "5000", rows: "10"
			},
			hashTypes: {value: "ID", "class": "STRING", id: "STRING", maxlength: "STRING", rows: "STRING"},
			hashContexts: {value: a, "class": a, id: a, maxlength: a, rows: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></form></div><div class="tab-pane" id="tab3"><h5 class="text-center"><b>Your Culture</b></h5><p>Please describe your company\u2019s culture. What about your company makes you stand out  from your competition? Why do your customers choose you?</p><form id="liveAnswer-culture" class="smart-form"><label class="textarea" style="max-width : 100%;">');
		b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
			name: "textarea",
			hash: {
				value: "activeAddOn.settings.culture",
				"class": "required",
				id: "culture",
				maxlength: "5000",
				rows: "10"
			},
			hashTypes: {value: "ID", "class": "STRING", id: "STRING", maxlength: "STRING", rows: "STRING"},
			hashContexts: {value: a, "class": a, id: a, maxlength: a, rows: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></form></div><div class="tab-pane" id="tab4"><h5 class="text-center"><b>Frequently Asked Questions</b></h5><p>Please list the Frequently Asked Questions we are likely to encounter, and please provide your preferred response.</p><form id="liveAnswer-faq" class="smart-form"><ol style="padding-left : 30px;">');
		d = c.each.call(a, "activeAddOn.settings.faqs", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ol>");
		d = c["if"].call(a, "activeAddOn.settings.canAddFAQ", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</form></div><div class="tab-pane" id="tab5"><h5 class="text-center"><b>Emergency Contacts</b></h5><p>In business, sometimes things go wrong. It\u2019s inevitable, and when it does.. we need to know who to contact?</p><form id="liveAnswer-emergency" class="smart-form"><ol style="padding-left : 30px;">');
		d = c.each.call(a, "activeAddOn.settings.emergency", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ol>");
		d = c["if"].call(a, "activeAddOn.settings.canAddEContact", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(25, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</form></div><div class="tab-pane" id="tab6"><h5 class="text-center"><b>Primary Objectives</b></h5><p>What are you aiming to accomplish by having Live Chat on your website?</p><form id="liveAnswer-objective" class="smart-form"><section><label class="label">Primary</label><label class="select"><select id="0-objective" class="objective-select"><option value="capture_leads">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "capture_leads", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="answer_faqs">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "answer_faqs", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="product_service_info">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "product_service_info", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="give_pricing_info">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "give_pricing_info", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="give_shipping_info">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "give_shipping_info", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="sales">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "sales", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="technical_support">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"technical_support", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</option><option value="other">Other</option></select><i></i></label><br /><label id="0-other-container" class="input hidden"><input type="text" class="required" id="0-other" name="1-other" placeholder="Specify objective" /></label></section><section><label class="label">Secondary</label><label class="select"><select id="1-objective" class="objective-select"><option value="capture_leads">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "capture_leads", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="answer_faqs">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "answer_faqs", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="product_service_info">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "product_service_info", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="give_pricing_info">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "give_pricing_info", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="give_shipping_info">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "give_shipping_info", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="sales">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "sales", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="technical_support">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"technical_support", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</option><option value="other">Other</option></select><i></i></label><br /><label id="1-other-container" class="input hidden"><input type="text" class="required" id="1-other" name="1-other" placeholder="Specify objective" /></label></section><section><label class="label">Tertiary</label><label class="select"><select id="2-objective" class="objective-select"><option value="capture_leads">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "capture_leads", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="answer_faqs">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "answer_faqs", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="product_service_info">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "product_service_info", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="give_pricing_info">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "give_pricing_info", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="give_shipping_info">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "give_shipping_info", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="sales">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "sales", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="technical_support">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"technical_support", {
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</option><option value="other">Other</option></select><i></i></label><br /><label id="2-other-container" class="input hidden"><input type="text" class="required" id="2-other" name="2-other" placeholder="Specify objective" /></label></section></form></div><div class="tab-pane" id="tab7"><h5 class="text-center"><b>Reputation Management</b></h5><p>What are examples of more common complaints / concerns of your customers? How would you like them addressed? Please include relevant contact details if different to company contact details.</p><form id="liveAnswer-reputation" class="smart-form"><ol style="padding-left : 30px;">');
		d = c.each.call(a, "activeAddOn.settings.reputation", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ol>");
		d = c["if"].call(a, "activeAddOn.settings.canAddReputation", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(30, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</form></div></div><footer><button id="done" type="button" class="btn btn-primary hidden next-step pull-right">Done</button><button id="next" type="button" class="btn btn-primary next-step pull-right">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "next_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="previous" type="button" class="btn btn-default pull-right" style="margin-right : 5px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "previous_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="skip" type="button" class="btn btn-warning pull-right hidden" style="margin-right : 5px;">Skip this step</button><div class="clearfix"></div></footer>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.liveAnswerScheduler = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li class="city-select select2-result select2-result-selectable" role="presentation" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-id": "index"},
			hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' ><div class="select2-result-label" role="option"><span>');
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span></div></li>");
		return ""
	}, 3: function (a, c, d, b) {
		b.buffer.push("&nbsp;(24/7)")
	}, 5: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div style="border-bottom: 1px solid #ddd; padding: 10px 0;"><div class="col-xs-12 col-sm-3 col-md-3 col-lg-3"><label class="checkbox">');
		d = c["if"].call(a, "schedule.isOn", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(8, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("<i></i>");
		d = c._triageMustache.call(a, "schedule.label", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</label></div><div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": ":col-xs-9 :col-sm-7 :col-md-7 :col-lg-7 schedule.isOn::hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		d = c.each.call(a, "time", "in", "schedule.time", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div><div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":col-xs-3 :col-sm-2 :col-md-2 :col-lg-2 schedule.isOn::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><button ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "schedule.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="add-time btn btn-default" style="margin : 0 5px;"><i class="fa fa-plus"></i></button></div><div class="clearfix"></div></div>');
		return ""
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.input ||
			a && a.input || d).call(a, {
			name: "input",
			hash: {checked: "checked", name: "schedule.id", id: "schedule.id", "class": "day-on", type: "checkbox"},
			hashTypes: {checked: "STRING", name: "ID", id: "ID", "class": "STRING", type: "STRING"},
			hashContexts: {checked: a, name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 8: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {name: "schedule.id", id: "schedule.id", "class": "day-on", type: "checkbox"},
			hashTypes: {
				name: "ID",
				id: "ID", "class": "STRING", type: "STRING"
			},
			hashContexts: {name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 10: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "time.id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="schedule-container" style="margin-bottom : 10px;"><div class="form-group hidden pull-left" style="width : 90%"><input ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {id: "time.rangeId"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' type="text" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "time.rangeId"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' value=""></div>');
		a = c["if"].call(a, "time.canDelete", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push('<div class="clearfix"></div><p class="error hidden" style="display: block; margin-top: 6px; padding: 0 1px; font-style: normal; font-size: 11px; line-height: 15px;color: #D56161;"></p></div>');
		return ""
	}, 11: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<a href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "time.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("  ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-parent": "schedule.id"},
			hashTypes: {"data-parent": "STRING"},
			hashContexts: {"data-parent": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="    color: red;    margin-top: 7px;    vertical-align: middle;    display: block;    margin-left: 5px;" class="pull-left remove-schedule"><i class="fa fa-times" style="    font-size: 16px;"></i></a>');
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e =
			c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<form id="liveAnswer-scheduler-form" name="liveAnswer-scheduler-form" class="admin-form smart-form"><div id="form-scrollable-container"><fieldset style="max-width : 1000px;"><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "operating_city", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section><section><label class="select custom-select" style="max-width: 500px"><div id="schedule-city-list" class="select2-drop select2-display-none"><ul class="select2-results" role="listbox">');
		d = c.each.call(a, "view.cityList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><label class="input">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				autocomplete: "off",
				valueBinding: "activeAddOn.settings.city",
				placeholderKey: "enter_text",
				name: "schedule-city",
				id: "schedule-city",
				"class": "required",
				type: "text"
			},
			hashTypes: {
				autocomplete: "STRING", valueBinding: "STRING",
				placeholderKey: "STRING", name: "STRING", id: "STRING", "class": "STRING", type: "STRING"
			},
			hashContexts: {
				autocomplete: a,
				valueBinding: a,
				placeholderKey: a,
				name: a,
				id: a,
				"class": a,
				type: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label><i></i></label></section><section><label class="label">Hours purchased : ');
		d = c._triageMustache.call(a, "activeAddOn.settings.entitlements.hours", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a,
			"activeAddOn.settings.fulltime", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</label></section><section><label class="label">Time available to be scheduled : ');
		d = c._triageMustache.call(a, "activeAddOn.settings.availableEntitlement.hours", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("hr ");
		d =
			c._triageMustache.call(a, "activeAddOn.settings.availableEntitlement.minutes", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("m</label></section>");
		d = c.each.call(a, "schedule", "in", "view.schedule", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.mailSettings = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-envelope-o"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "mail_notification", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="mail-settings-form" name="mail-settings-form" class="smart-form admin-form"><div id="form-scrollable-container"><fieldset><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_all_chat_transcript_to", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "sites"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><i></i><select id="all-email-select"><option value="none">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_none", {
			name: "I18n", hash: {context: "sites"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</option><option value="all">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_all", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="admin">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_admin", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</option><option value="department">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_department_chat", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option></select></label><div class="clearfix"></div></section><section id="all-chats-additional-email"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "other_agent_or_email",
			{
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</label><label class="input"><input type="text" class="email-tags" data-role="tagsinput" maxlength="255"/></label><label class="error-msg"></label><div class="clearfix"></div></section><br /><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_info_new_tickets_to", {
			name: "I18n",
			hash: {
				variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}',
				context: "sites"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><i></i><select id="new-email-select"><option value="all">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_all", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="none">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "email_none", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="admin">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_admin", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option></select></label><div class="clearfix"></div></section><section id="new-ticket-additional-email"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "select_agent", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="email-tags" data-role="tagsinput" maxlength="255"/></label><label class="error-msg"></label><div class="clearfix"></div></section><br /><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_offline_form_messages_to",
			{
				name: "I18n",
				hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "sites"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</label><label class="select"><i></i><select id="offline-email-select"><option value="all">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_all", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="none">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_none", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="admin">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_admin", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="department">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_department_offline", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option></select></label><div class="clearfix"></div></section><section id="offline-message-additional-email"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "other_agent_or_email", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="email-tags" data-role="tagsinput" maxlength="255"/></label><label class="error-msg"></label><div class="clearfix"></div></section><br /><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_info_unanswered_chats_to", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "sites"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><i></i><select id="missed-email-select"><option value="admin">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_admin", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="all">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_all", {
			name: "I18n", hash: {context: "sites"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</option><option value="none">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_none", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="department">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_department_chat", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</option></select></label><div class="clearfix"></div></section><section id="missed-additional-email"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "other_agent_or_email", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="email-tags" data-role="tagsinput" maxlength="255"/></label><label class="error-msg"></label><div class="clearfix"></div></section></fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.adminMain = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('&nbsp;<i class="fa fa-angle-right" style="display:inline-block;"></i>&nbsp;');
		a = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache", hash: {},
			hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.PropertySelectView || a && a.PropertySelectView || d).call(a, {
			name: "PropertySelectView",
			hash: {controllerBinding: "view.controller"},
			hashTypes: {controllerBinding: "STRING"},
			hashContexts: {controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 5: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div id="property-container" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading:hidden :list-container"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="smart-form" style="max-width: 450px;margin: 0px auto; height : 100%;"><section style="min-height: 49px;"><p style="text-transform: uppercase; font-size : 12px">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "property", {
			name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</p><div style="display:table; width: 100%; height: 32px;"><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "noProperties:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="display:table-cell; width: 100%; max-width: 300px;vertical-align: middle;">');
		d = c["if"].call(a, "hasMoreProperties", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(6, b), inverse: this.program(13, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a, "noProperties", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<button id="add-property" class="btn btn-primary" style="display:table-cell; margin-left : -2px; height: 32px;">+ ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "add", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></section><section ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "noProperties:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: absolute; top: 64px;bottom: 15px;width: 100%;overflow: auto;"><ul class="list"><li ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' id="settings"><a href="javascript:void(0);"><i class="fa fa-cog"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "property_settings", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin",
			{
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="members"><a href="javascript:void(0);"><i class="fa fa-group"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "property_members", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></a></li><li class="open-view" id="shortcuts"><a href="javascript:void(0);"><i class="fa fa-cut"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="triggers"><a href="javascript:void(0);"><i class="fa fa-flash"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "triggers", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></a></li><li class="open-view" id="ban-list"><a href="javascript:void(0);"><i class="fa fa-ban"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="department"><a href="javascript:void(0);"><i class="fa fa-sitemap"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "departments", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' id="mail-settings"><a href="javascript:void(0);"><i class="fa fa-envelope-o"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "mail_notification", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(17,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isSite::hidden :open-view"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="addon-store"><a href="javascript:void(0);"><i class="fa fa-puzzle-piece"></i><span class="label" style="position: relative;">');
		b.buffer.push(e((c.I18n || a && a.I18n ||
			f).call(a, "add_on_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "view.isAddOnSeen", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isSite::hidden activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="billing"><a href="javascript:void(0);"><i class="fa fa-dollar"></i><span class="label" style="position: relative;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "billing", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(17, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c.unless.call(a, "view.isBillingSeen", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="tabs"><a href="javascript:void(0);"><i class="fa fa-folder"></i><span class="label" style="position: relative;">Tabs');
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.unless.call(a, "view.isTabsSeen", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="alerts"><a href="javascript:void(0);"><i class="fa fa-bell"></i><span class="label" style="position: relative;">Agent Alerts');
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(17, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c.unless.call(a, "view.isAlertsSeen", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></a></li><li class="open-view" id="knowledgebase"><a href="javascript:void(0);"><i class="fa fa-book"></i><span class="label" style="position: relative;">Knowledge Base');
		d = c.unless.call(a,
			"view.isKnowledgebaseSeen", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(19, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li></ul></section></div>");
		d = c["if"].call(a, "activeProperty.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="asset-container" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":list-container isLoading:hidden noProperties:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><div class="list-container-divider"><i class="fa fa-chevron-right"></i></div><div class="smart-form" style="max-width: 450px;margin: 0px auto;"><section style="min-height: 49px;"><p style="text-transform: uppercase; font-size : 12px">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "asset", {
			name: "I18n", hash: {context: "admin"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</p>");
		d = c["if"].call(a, "activeProperty.isSite", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</section><section><ul class="list"><li ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isSite::hidden activeProperty.isAdmin::hide"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);"><i class="fa fa-code"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_code", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a><label class="textarea">');
		b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
			name: "textarea",
			hash: {
				id: "widget-code-textarea", readonly: "true",
				valueBinding: "widgetsController.activeWidget.widgetCode", rows: "7"
			},
			hashTypes: {id: "STRING", readonly: "STRING", valueBinding: "STRING", rows: "STRING"},
			hashContexts: {id: a, readonly: a, valueBinding: a, rows: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></li>");
		d = c["if"].call(a, "activeProperty.isSite", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(30, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("<li ");
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "activeProperty.isSite:hidden activeProperty.isAdmin:open-view:disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' id="page-content"><a href="javascript:void(0);"><i class="fa fa-align-justify"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "page_content", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="widget-settings"><a href="javascript:void(0);"><i class="fa fa-cog"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_settings", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' id="widget-appearance"><a href="javascript:void(0);"><i class="fa fa-picture-o"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_appearance", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(17,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin:open-view:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="widget-content"><a href="javascript:void(0);"><i class="fa fa-font"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "widget_content", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin:open-view:disabled  activeProperty.isSite::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="widget-domains"><a href="javascript:void(0);"><i class="fa fa-link"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "domain_restriction", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(17, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin:open-view:disabled  activeProperty.isSite::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="widget-scheduler"><a href="javascript:void(0);"><i class="fa fa-clock-o"></i><span class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "scheduler",
			{
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		d = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a></li></ul></section></div></div>");
		return ""
	}, 6: function (a, c, d, b) {
		b.buffer.push('<label class="select"><select id="property-select">');
		d = c["if"].call(a,
			"siteList.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "pageList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</select><i></i></label>");
		return ""
	}, 7: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a, "siteList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 8: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {value: "id"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' data-type="site" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {selected: "isSelected"},
			hashTypes: {selected: "STRING"},
			hashContexts: {selected: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 10: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a, "pageList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 11: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-type="page" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {selected: "isSelected"},
			hashTypes: {selected: "STRING"},
			hashContexts: {selected: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 13: function (a, c, d, b) {
		b.buffer.push('<label class="label" style="font-size: 16px; margin: 0;">');
		a = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label>");
		return ""
	}, 15: function (a,
	                 c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div style="display:table-cell; width: 100%; max-width: 300px;vertical-align: middle;"><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_properties", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></div>");
		return ""
	}, 17: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("&nbsp;(");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_access", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(")");
		return ""
	}, 19: function (a, c, d, b) {
		b.buffer.push('<div class="new-label"> </div>')
	}, 21: function (a, c, d, b) {
		a = c.unless.call(a, "activeProperty.isAdmin", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	},
	22: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="remove-access-button-container"><a id="remove-own-access" href="javascript:void(0)" class="btn btn-default btn-sm">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "remove_own_access", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></div>");
		return ""
	}, 24: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div style="display:table; width: 100%; height: 32px;"><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="display:table-cell; width: 100%; max-width: 300px;vertical-align: middle;">');
		d = c["if"].call(a, "widgetsController.hasMoreWidgets", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(25, b),
			inverse: this.program(28,
				b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div><button ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-primary activeProperty.isAdmin::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="add-widget" style="display:table-cell; margin-left : -2px;  height: 32px;">+ ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "add", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button></div>");
		return ""
	}, 25: function (a, c, d, b) {
		b.buffer.push('<label class="select"><select id="widget-select">');
		a = c.each.call(a, "activeProperty.widgetList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(26, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</select><i></i></label>");
		return ""
	}, 26: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 28: function (a, c, d, b) {
		b.buffer.push('<label class="label" style="font-size: 16px; margin: 0;">');
		a = c._triageMustache.call(a, "widgetsController.activeWidget.name",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</label>");
		return ""
	}, 30: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeProperty.isAdmin::hide"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="popout-widget-code-tooltip"><i class="fa fa-link"></i><span class="label">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "popout_widget_code", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span>&nbsp;&nbsp;<a class="label" href="https://www.tawk.to/knowledgebase/chat-widget/direct-chat-link" target="blank" style="text-decoration: underline;color: #71a06a; font-size : 11px;">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "learn_more", {
			name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</a></div><label class="input">');
		b.buffer.push(d((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				id: "popout-widget-code-textarea",
				readonly: "true",
				valueBinding: "widgetsController.popoutWidgetCode",
				rows: "7",
				type: "text"
			},
			hashTypes: {id: "STRING", readonly: "STRING", valueBinding: "STRING", rows: "STRING", type: "STRING"},
			hashContexts: {id: a, readonly: a, valueBinding: a, rows: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></li>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e;
		e = c.helperMissing;
		d = this.escapeExpression;
		b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><h1 class="page-title txt-color-blueDark"><i class="fa fa-gear"></i> ');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		e = c["if"].call(a,
			"activeProperty.name", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != e && b.buffer.push(e);
		b.buffer.push('</h1></div></div><div class="innerContent"><div ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="main-container-loading"><h5><i class="fa fa-refresh fa-spin"></i></h5></div>');
		e = c["if"].call(a, "requestProperty", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push('<div class="clearfix"></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.membersSettings = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		b.buffer.push(e((c.I18n || a && a.I18n ||
			d).call(a, "invite", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 3: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		a = c["if"].call(a, "activeAgent.isInvitation", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.program(6, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 4: function (a, c, d, b) {
		a = c._triageMustache.call(a, "activeAgent.email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 6: function (a, c, d, b) {
		a = c._triageMustache.call(a, "activeAgent.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 8: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<tr ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "isCurrentAgent::open-view"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td style="vertical-align: middle"><span ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "country"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></span><span class="name">');
		d = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></td><td class="text-center">');
		d = c["if"].call(a, "isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c["if"].call(a, "isEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="delete-cell">');
		d = c["if"].call(a, "canBeDeleted", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 9: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-check txt-color-tawk-pink"></i>')
	},
	11: function (a, c, d, b) {
		b.buffer.push('<label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label>')
	}, 13: function (a, c, d, b) {
		a = c.unless.call(a, "isLoading", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 14: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td colspan="3"><h1>');
		b.buffer.push(e((c.I18n || a &&
			a.I18n || d).call(a, "no_current_members", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h1></td></tr>");
		return ""
	}, 16: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<tr class="open-invitation" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td style="vertical-align: middle">');
		d = c["if"].call(a, "tawkId", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.program(19, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c["if"].call(a, "isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="delete-cell"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></td></tr>');
		return ""
	}, 17: function (a, c, d, b) {
		b.buffer.push("http://tawk.to/");
		a = c._triageMustache.call(a, "tawkId", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 19: function (a, c, d, b) {
		a = c._triageMustache.call(a, "email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 21: function (a, c, d, b) {
		a = c.unless.call(a, "isLoading", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 22: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td colspan="3" class="text-center"><h1>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_pending_invitations", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h1></td></tr>");
		return ""
	}, 24: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 26: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<tr class="new-invitation-field"><td style="border: 0; vertical-align: top"><label class="input"><input type="text" class="required email invited-email" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {name: "id"},
			hashTypes: {name: "STRING"}, hashContexts: {name: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' placeholder="Enter Email" /></label></td><td style="border: 0; vertical-align: top"><label class="select"> ');
		b.buffer.push(d(c.view.call(a, "Ember.Select", {
			name: "view",
			hash: {
				"class": "invited-role",
				value: "role",
				optionLabelPath: "content.value",
				optionValuePath: "content.id",
				content: "view.roles"
			},
			hashTypes: {
				"class": "STRING",
				value: "ID",
				optionLabelPath: "STRING",
				optionValuePath: "STRING",
				content: "ID"
			},
			hashContexts: {
				"class": a,
				value: a, optionLabelPath: a, optionValuePath: a, content: a
			},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i></i></label></td><td style="border: 0; width : 20px; vertical-align: top"><a ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":delete-field view.canDelete::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);"><i class="fa fa-times" style="font-size : 20px;"></i></a></td></tr>');
		return ""
	},
	28: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="form-table-row"><label class="label inline-label" for="agent-status">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agent_status", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><div class="form-table-cell"><label class="radio"><input type="radio" id="agent-enabled" name="agent-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAgent.isEnabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "activeAgent.isCurrentAgent"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="agent-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAgent.isDisabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {disabled: "activeAgent.isCurrentAgent"},
			hashTypes: {disabled: "STRING"}, hashContexts: {disabled: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></div></div></div>");
		return ""
	}, 30: function (a, c, d, b) {
		a = c.unless.call(a, "activeAgent.isExisting", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(31, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 31: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<section><a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "activeAgent.id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript: void(0);" class="resend-invitation">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "resend_invitation", {
			name: "I18n", hash: {context: "sites"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></section>");
		return ""
	}, 33: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<footer><button id="submit-edit" type="submit" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a,
			"activeProperty.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-group"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "members_settings", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "view.inviteMember",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeAgent", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div style="width: 100%; height : 100%;" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":smart-form view.inviteMember:hidden activeAgent:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div style="height: 40px;"><div class="pull-left"><label class="input"><input type="text" id="search" placeholder="Search" style="width: 450px"/></label></div><div class="pull-right"><button id="invite-member" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			e).call(a, "invite_agent", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div><div class="clearfix"></div></div><div style="position: absolute;top: 40px; width: 100%;bottom: 0;"><ul class="nav nav-tabs"><li class="open-tab-pane active" data-id="current-tab"><a href="javascript:void(0);">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "current_text", {
			name: "I18n", hash: {context: "visitors"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push(" (");
		d = c._triageMustache.call(a, "agentPagedList.totalItems", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(')</a></li><li class="open-tab-pane" data-id="pending-tab"><a href="javascript:void(0);">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "pending", {
			name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push(" (");
		d = c._triageMustache.call(a, "invitedPagedList.totalItems", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(')</a></li></ul><div class="tab-content"><div id="current-tab" class="tab-pane active"><div class="scrollable-list"><table class="table"><thead><tr><th>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_admin", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_enabled", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
		d = c.each.call(a, "agentPagedList.currentData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div></div></div><div id="pending-tab" class="tab-pane"><div class="scrollable-list"><table class="table"><thead><tr><th>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_admin", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
		d = c.each.call(a, "invitedPagedList.currentData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.program(21, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div></div></div><div id="list-loading" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><div id="bulk-action-container" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.bulkMarkedTotal::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
		d = c["if"].call(a, "view.bulkMarkedTotal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li></ul></div></div></div></div><form id="add-member-form" name="add-member-form" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":smart-form view.inviteMember::hidden :admin-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="form-scrollable-container"><h5>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent_description", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</h5><table class="table"><thead><tr><th style="border: 0">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th style="border: 0">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "role", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</th><th style="border: 0"></th></tr></thead><tbody>');
		d = c.each.call(a, "view.newInvitations", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(26, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table><div style="margin: 10px;"><button id="add-field" class="btn btn-default "><i class="fa fa-plus"></i> ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_another", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div><footer><button type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send_invitation", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></form><form id="edit-member-form" name="edit-member-form" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":smart-form activeAgent::hidden :admin-form"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><fieldset><section><div class="form-table">');
		d = c.unless.call(a, "activeAgent.isInvitation", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(28, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="form-table-row"><label class="label inline-label" for="agent-role">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "role", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="agent-role" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAgent.isAdmin"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "activeAgent.isCurrentAgent"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' value="admin" /><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "admin", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="agent-role" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAgent.isAgent"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "activeAgent.isCurrentAgent"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' value="agent" /><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</label></div></div></div></div></section>");
		d = c["if"].call(a, "activeAgent.isInvitation", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(30, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</fieldset>");
		d = c.unless.call(a, "activeAgent.isCurrentAgent", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(33, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.newProperty = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><p id="main-title">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n", hash: {context: "admin"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "create_property", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><p>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "select_property", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><div class="scrollable-list" style="bottom : 80px;"><div style="position: absolute; left : 0; width : 50%; top: 00px; bottom: 80px; height: auto;"><div class="padding-10" style="border-right: 1px solid #ddd;cursor : pointer;" id="site-type"><form id="new-site-form" name="new-site-form" class="smart-form admin-form"><fieldset style="width: 100%; height: 100%;" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isPage:form-disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><section><img src="https://static-a.tawk.to/v2/a34/images/site.png" /></section><section><label class="radio"><input type="radio" name="property-type" value="site" id="site" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "view.isSite"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section><div id="site-form-fields"><section><div style="margin : 0 0 0 23px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_explanation", {
			name: "I18n",
			hash: {
				variables: '{"lineBreak" : "<br />", "lineStart" : "<p>", "lineEnd" : "</p>"}',
				context: "admin"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div></section><section><label class="label" for="site-name">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_name", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required" id="site-name" maxlength="75" name="site-name" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "view.isPage"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section><section><label class="label" for="site-domain">');
		b.buffer.push(e((c.I18n || a &&
			a.I18n || d).call(a, "site_url", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="url_prefix" id="site-domain" name="site-domain" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_url", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "view.isPage"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section></div></fieldset></form></div></div><div style="position: absolute; left : 50%; width : 50%; top: 00px; bottom: 80px; height: auto;"><div class="padding-10" style="cursor : pointer;" id="page-type"><form id="new-page-form" name="new-page-form" class="smart-form admin-form"><fieldset ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "view.isSite:form-disabled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><section><img src="https://static-a.tawk.to/v2/a34/images/page.png" /></section><section><label class="radio"><input type="radio" id="page" name="property-type" value="page" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "view.isPage"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section><div id="page-form-fields"><section><div style="margin : 0 0 0 23px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_explanation", {
			name: "I18n",
			hash: {
				variables: '{"lineBreak" : "<br />", "lineStart" : "<p>", "lineEnd" : "</p>", "strongStart" : "<strong>", "strongEnd" : "</strong>"}',
				context: "admin"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div></section><section><label class="label" for="page-name">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_name", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required" id="page-name" maxlength="75" name="page-name" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "view.isSite"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></section><section><label class="label" for="page-tawkid">');
		b.buffer.push(e((c.I18n || a && a.I18n ||
			d).call(a, "page_tawk_id", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><span class="small-transparent-spinner hidden"></span><span class="text-prepend">http://tawk.to/</span><input type="text" class="alphaNumericWithDot required isTawkIdAvailable" maxlength="50" id="page-tawkid" name="page-tawkid" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_tawk_id",
			{
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "view.isSite"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section></div></fieldset></form></div></div></div><footer class="text-right"><button id="submit" class="btn btn-primary">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "create", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.pageContent = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="page-status">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_status", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><div class="form-table-cell"><label class="toggle"><input type="checkbox" name="page-status" id="page-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeProperty.enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text",
			{
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('"></i></label></div></div></div></div></section>');
		return ""
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a class="page-photo-select" href="javascript:void(0);" id="capture">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "take_photo", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 7: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a class="page-photo-select" href="javascript:void(0);" id="remove">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "remove_photo", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 9: function (a, c, d, b) {
		var e = this.escapeExpression,
			f = c.helperMissing;
		b.buffer.push('<section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell padding-5 image-placeholder-container"><div class="image-placeholder"><i class="fa fa-camera"></i><div class="photo-placeholder header" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {style: "customization.headerBackgroundStyle"},
			hashTypes: {style: "STRING"},
			hashContexts: {style: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></div></div></div><div class="form-table-cell padding-5" style="vertical-align: top;"><div class="btn-group"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "action_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' <span class="caret"></span></button><ul class="dropdown-menu"><li id="upload-container"><a class="page-header-select" href="javascript:void(0);" id="upload-header">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "upload_header", {
			name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></li>");
		d = c["if"].call(a, "customization.header", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><label class="note">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "profile_header_explanation", {
			name: "I18n",
			hash: {variables: '{"lineBreak" : "<br />"}', context: "pages"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {
				variables: a,
				context: a
			},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><input type="file" class="hidden" id="header-image" /></div></div></section>');
		return ""
	}, 10: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a class="page-header-select" href="javascript:void(0);" id="remove-header">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "remove_header", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 12: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<label class="select custom-select"><div class="select2-drop select2-display-none"><ul class="select2-results" role="listbox">');
		d = c.each.call(a, "cityList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div style="display: table;float: none;"><span style="display: table-cell; line-height: 30px; padding-left: 5px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "city", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</span><span style="width: 100%; display: table-cell; padding-right: 25px;"><input type="text" class="selected-value" id="search-city" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "customization.location.locationInfo"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("  /></span><i></i></div></label>");
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li class="city-select select2-result select2-result-selectable" role="presentation" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "index"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' ><div class="select2-result-label" role="option"><span>');
		a = c._triageMustache.call(a,
			"name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</span></div></li>");
		return ""
	}, 15: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="clearfix"></div><section><label class="input"><a href="javascript:void(0);" class="button-icon icon-append delete-link" data-placement="top" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_link", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a>');
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				placeholderKey: "enter_link",
				nameBinding: "this.id",
				idBinding: "this.id",
				value: "value",
				"class": "required url external-link",
				type: "text"
			},
			hashTypes: {
				placeholderKey: "STRING",
				nameBinding: "STRING",
				idBinding: "STRING",
				value: "ID",
				"class": "STRING",
				type: "STRING"
			},
			hashContexts: {
				placeholderKey: a,
				nameBinding: a, idBinding: a, value: a, "class": a, type: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section>");
		return ""
	}, 17: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "activeProperty.shareFbLink"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank" class="facebook-share-button pull-right"><i class="sprite-background"></i><span class="label">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "share", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></a><a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "activeProperty.shareTwLink"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="twitter-share-button pull-right" target="_blank"><i class="sprite-background"></i><span class="label">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "tweet", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></a>");
		return ""
	}, 19: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<img ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {src: "customization.logo"},
			hashTypes: {src: "STRING"},
			hashContexts: {src: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" />");
		return ""
	}, 21: function (a, c,
	                 d, b) {
		a = c["if"].call(a, "customization.logo", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b),
			inverse: this.program(24, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 22: function (a, c, d, b) {
		b.buffer.push('<div id="title-container"><h1>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</h1><p class="profile-category-text">');
		d = c._triageMustache.call(a, "customization.slogan", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div>");
		return ""
	}, 24: function (a, c, d, b) {
		b.buffer.push('<div id="title-container" class="no-logo"><h1>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</h1><p class="profile-category-text">');
		d = c._triageMustache.call(a, "customization.slogan", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div>");
		return ""
	}, 26: function (a, c, d, b) {
		a = c["if"].call(a, "customization.logo", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.program(29, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 27: function (a, c, d, b) {
		b.buffer.push('<div id="title-container" class="big-title"><h1>');
		a = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</h1></div>");
		return ""
	}, 29: function (a, c, d, b) {
		b.buffer.push('<div id="title-container" class="big-title no-logo"><h1>');
		a = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</h1></div>");
		return ""
	}, 31: function (a, c, d, b) {
		b.buffer.push('<div id="top-description-container"><div id="category">');
		d = c._triageMustache.call(a, "activeProperty.categoryName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div><p>");
		d = c._triageMustache.call(a, "customization.summary", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div>");
		return ""
	}, 33: function (a, c, d, b) {
		b.buffer.push('<div id="top-description-container" class="no-image"><div id="category">');
		d = c._triageMustache.call(a, "activeProperty.categoryName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div><p>");
		d = c._triageMustache.call(a, "customization.summary", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div>");
		return ""
	}, 35: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<img ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {src: "customization.header"},
			hashTypes: {src: "STRING"},
			hashContexts: {src: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="banner-image" style="border-top: 5px solid #fff" />');
		return ""
	}, 37: function (a, c, d, b) {
		b.buffer.push('<div id="banner-replacement"></div>')
	}, 39: function (a, c, d, b) {
		b.buffer.push('<div id="profile-content-wrapper"><div id="profile-description">');
		a = c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div></div>");
		return ""
	}, 41: function (a, c, d, b) {
		b.buffer.push('<div id="places-icon"></div><a href="javascript:void(0);">');
		d = c._triageMustache.call(a, "customization.location.city", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "customization.location.state",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(42, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</a><div class="clearfix"></div>');
		return ""
	}, 42: function (a, c, d, b) {
		b.buffer.push("&nbsp;, ");
		a = c._triageMustache.call(a, "customization.location.state", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 44: function (a, c, d, b) {
		b.buffer.push('<div class="location-tag-container"><div id="tag-icon"></div>');
		a = c.each.call(a, "customization.tagList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(45, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push('<div class="clearfix"></div></div>');
		return ""
	}, 45: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<a href="javascript:void(0);">');
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a>");
		return ""
	}, 47: function (a, c, d, b) {
		b.buffer.push('<a href="javsascript:void(0);" class="facebook-icon"></a>')
	}, 49: function (a, c, d, b) {
		b.buffer.push('<a href="javsascript:void(0);" class="flickr-icon"></a>')
	}, 51: function (a, c, d, b) {
		b.buffer.push('<a href="javsascript:void(0);" class="instagram-icon"></a>')
	}, 53: function (a, c, d, b) {
		b.buffer.push('<a href="javsascript:void(0);" class="twitter-icon"></a>')
	}, 55: function (a, c, d, b) {
		b.buffer.push('<a href="javsascript:void(0);" class="youtube-icon"></a>')
	},
	57: function (a, c, d, b) {
		b.buffer.push('<a href="javsascript:void(0);" class="vimeo-icon"></a>')
	}, 59: function (a, c, d, b) {
		b.buffer.push('<a href="javsascript:void(0);" class="linkedin-icon"></a>')
	}, 61: function (a, c, d, b) {
		b.buffer.push('<a href="javsascript:void(0);" class="gplus-icon"></a>')
	}, 63: function (a, c, d, b) {
		b.buffer.push('<a href="javascript:void(0);">');
		a = c._triageMustache.call(a, "value", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a><br/>");
		return ""
	}, 65: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.ImageCropView || a && a.ImageCropView || d).call(a, {
			name: "ImageCropView",
			hash: {controllerBinding: "view.controller"},
			hashTypes: {controllerBinding: "STRING"},
			hashContexts: {controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		d = c.unless.call(a, "activeProperty.isPersonal", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa  fa-angle-right"></i><i class="fa fa-align-justify"></i>&nbsp;');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "page_content", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span> <div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="page-content-form" name="page-content-form" class="smart-form admin-form"><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left" style="position: absolute; left: 0; right: 541px; width: auto; height : 100%;"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><fieldset>');
		d = c["if"].call(a, "activeProperty.isPersonal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell padding-5 image-placeholder-container"><div class="image-placeholder"><i class="fa fa-camera"></i><div class="photo-placeholder" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {style: "customization.logoBackgroundStyle"},
			hashTypes: {style: "STRING"},
			hashContexts: {style: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></div></div></div><div class="form-table-cell padding-5" style="vertical-align: top;"><div class="btn-group"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "action_text", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push(' <span class="caret"></span></button><ul class="dropdown-menu"><li id="upload-container"><a class="page-photo-select" href="javascript:void(0);" id="upload">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "upload_photo", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		d = c["if"].call(a, "view.takePhotoEnabled", {
			name: "if", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(5, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "customization.logo", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><label class="note">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "profile_photo_explanation", {
			name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label></div><input type="file" class="hidden" id="photo-image" /></div></div></section>');
		d = c.unless.call(a, "activeProperty.isPersonal", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "slogan", {
			name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label class="input">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				placeholderKey: "enter_slogan",
				value: "customization.slogan",
				name: "slogan",
				id: "slogan",
				type: "text"
			},
			hashTypes: {placeholderKey: "STRING", value: "ID", name: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {placeholderKey: a, value: a, name: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "summary", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea">');
		b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {
				placeholderKey: "enter_summary",
				value: "customization.summary",
				name: "summary",
				rows: "3",
				maxlength: "255",
				id: "summary"
			},
			hashTypes: {
				placeholderKey: "STRING", value: "ID", name: "STRING", rows: "STRING", maxlength: "STRING",
				id: "STRING"
			},
			hashContexts: {placeholderKey: a, value: a, name: a, rows: a, maxlength: a, id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "description", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea">');
		b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {
				placeholderKey: "enter_description",
				value: "customization.description",
				name: "description",
				rows: "5",
				maxlength: "10000",
				id: "description"
			},
			hashTypes: {
				placeholderKey: "STRING",
				value: "ID",
				name: "STRING",
				rows: "STRING",
				maxlength: "STRING",
				id: "STRING"
			},
			hashContexts: {placeholderKey: a, value: a, name: a, rows: a, maxlength: a, id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></section><section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell location-label-container"><label class="label text-center"><i class="fa fa-map-marker"></i></label></div><div class="form-table-cell"><div style="padding : 0 0 5px 0;">');
		b.buffer.push(f((c.countrySelect || a && a.countrySelect || e).call(a, {
			name: "countrySelect",
			hash: {noAll: "true", selectedValue: "customization.location.country"},
			hashTypes: {noAll: "STRING", selectedValue: "ID"},
			hashContexts: {noAll: a, selectedValue: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</div><div>");
		d = c["if"].call(a, "countryCode", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div></div></section><section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell tags-label-container"><label class="label text-center"><i class="fa fa-tag"></i></label></div><div class="form-table-cell"><label class="input">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {placeholderKey: "tags", "class": "tagLength tagTotal", name: "tags", id: "tags", type: "text"},
			hashTypes: {placeholderKey: "STRING", "class": "STRING", name: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {placeholderKey: a, "class": a, name: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></div></div></div></section><section><div class="form-table" style="width: 100%;"><div class="form-table-row"><div class="form-table-cell links-label-container"><label class="label text-center"><i class="fa fa-link"></i></label></div><div class="form-table-cell"><label class="label pull-left">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "links", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		d = c.each.call(a, "customization.links", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="pull-right"><a href="javascript:void(0);" class="btn btn-default" id="add-link"');
		b.buffer.push(f(c.action.call(a, "addLink", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_link", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></div><div class="clearfix"></div></div></div></div></section></fieldset></div></div><a ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "activeProperty.siteLink"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank" class="btn btn-default pull-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_page", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a>");
		d = c["if"].call(a, "activeProperty.isPersonal", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(17,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="page-preview"><div id="preview-header-container"><div id="preview-logo-container">');
		d = c["if"].call(a, "customization.logo", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "customization.slogan.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b),
			inverse: this.program(26,
				b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div id="inner-container"><div id="left-content-container">');
		d = c["if"].call(a, "customization.logo", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(31, b),
			inverse: this.program(33, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "customization.header", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(35, b),
			inverse: this.program(37, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["with"].call(a, "customization.description", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(39, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="location-tag-container">');
		d = c["if"].call(a, "customization.location.city", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(41, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a, "customization.tagList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(44, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="social-icon-container">');
		d = c.each.call(a, "customization.facebook", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(47, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "customization.flickr", {
			name: "each", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(49, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "customization.instagram", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(51, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "customization.twitter", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(53, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "customization.youtube", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(55, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "customization.vimeo", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(57, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "customization.linkedin", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(59, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "customization.gplus", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(61, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><div id="other-link-container">');
		d = c.each.call(a, "customization.otherLinks", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(63, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div></div><div class="clearfix"></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form>");
		d = c["if"].call(a, "imageData", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(65, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.propertySettings = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(" <option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "value"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {selected: "isSelected"},
			hashTypes: {selected: "STRING"}, hashContexts: {selected: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "text", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-gear"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "property_settings", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="site-settings-form" name="site-settings-form" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": ":smart-form :admin-form activeProperty.isSite::hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><div id="form-scrollable-container"><fieldset><section><label class="label" for="site-name">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required" id="site-name" maxlength="75" name="site-name" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeProperty.name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section><section><label class="label" for="site-domain">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			e).call(a, "site_url", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="url_prefix" id="site-domain" name="site-domain" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {value: "activeProperty.settings.domain"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' /></label></section><section><label class="label" for="site-id">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_id", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" id="site-id" name="site-id" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeProperty.id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' readonly /></label></section><section><label class="label" for="site-apikey">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "api_key", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" id="site-apikey" name="site-apikey" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeProperty.settings.apiKey"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' readonly /></label></section><section><label class="label" for="site-forwardingEmail">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_forwarding", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" id="site-forwardingEmail" name="site-forwardingEmail"');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeProperty.settings.forwardingEmail"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' readonly /></label></section><section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="site-status">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "secure_api_text", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="radio-toggle" id="secure-api-enabled" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeProperty.settings.secureJSAPI"},
			hashTypes: {checked: "ID"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enabled_text", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "disabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i></label></div></div><div class="form-table-row"><label class="label inline-label" for="site-status">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_status",
			{
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="radio-toggle" id="site-status" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeProperty.enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "enabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "disabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i></label></div></div></div></section></fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="delete" type="button" class="btn btn-danger">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></form><form id="page-settings-form" name="page-settings-form" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":smart-form :admin-form activeProperty.isSite:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="form-scrollable-container"><fieldset><section><label class="label" for="page-name">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_name", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required" id="page-name" maxlength="75" name="page-name" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeProperty.name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section><section><label class="label" for="page-tawkid">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_tawk_id", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input" style="height : 32px; border : 1px solid #BDBDBD;"><span class="small-transparent-spinner hidden"></span><span class="text-prepend">https://tawk.to/</span><input type="text" class="alphaNumericWithDot required isTawkIdAvailable" maxlength="50" id="page-tawkid" name="page-tawkid" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_tawk_id", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeProperty.tawkId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: absolute; left: 102px; right: 0; width: auto; padding-left: 0; background: inherit; border: 0" /></label></section><section><label class="label" for="site-forwardingEmail">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_forwarding", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" id="site-forwardingEmail" name="site-forwardingEmail"');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeProperty.settings.forwardingEmail"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" disabled /></label></section><section><h4>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_category", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h4><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_category_description", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_category", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.categoriesSelectClass",
				selectedValueBinding: "view.categoriesSelectValue",
				optionsBinding: "view.categoriesSelectOptions"
			},
			hashTypes: {
				selectClassBinding: "STRING", selectedValueBinding: "STRING",
				optionsBinding: "STRING"
			},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "subpage_category", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><select class="subcategories-type-select required">');
		d = c.each.call(a, "view.subcategoriesSelectOptions",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></section><section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="page-status">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_status", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="page-status" id="page-status" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeProperty.enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enabled_text", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "disabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i></label></div></div></div></section></fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button><button id="delete" type="button" class="btn btn-danger">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.shortcutsCSVView = Ember.Handlebars.template({
	1: function (a,
	             c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<tr ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td style="vertical-align:middle; width: 200px;"><label class="input">');
		b.buffer.push(d((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {valueBinding: "key", type: "text"},
			hashTypes: {valueBinding: "STRING", type: "STRING"},
			hashContexts: {valueBinding: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></td><td style="vertical-align:middle;"><label class="textarea">  ');
		b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {valueBinding: "message"},
			hashTypes: {valueBinding: "STRING"},
			hashContexts: {valueBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('  </label></td><td class="text-right" style="vertical-align:middle; width : 40px;">');
		a = c["if"].call(a, "view.isLoading", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
				b), inverse: this.program(4, b), types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</td></tr>");
		return ""
	}, 2: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-refresh fa-spin"></i>')
	}, 4: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<button class="btn btn-danger remove-shortcut" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-trash-o"></i></button>');
		return ""
	}, 6: function (a, c, d, b) {
		b.buffer.push("Saving : ");
		d = c._triageMustache.call(a, "view.totalSave", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" / ");
		d = c._triageMustache.call(a, "view.list.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div style="position: absolute;top: 0;bottom: 110px;width: 100%;overflow: auto;"><div><label class="label inline-label" style="display: inline-block; vertical-align: middle;">Import as : </label><div class="inline-group" style="display: inline-block; vertical-align: middle; margin-left : 5px;"><label class="radio"><input type="radio" name="access-type" id="is-public" value="public" checked="checked"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "public", {
			name: "I18n", hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label class="radio"><input type="radio" name="access-type" id="is-personal" value="personal"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "personal", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div></div><table class="table"><thead><tr><th>');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "shortcut_key", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "message", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</th><th></th></tr></thead><tbody>");
		d = c.each.call(a, "view.list", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div style="position: absolute; bottom: 65px; width : 100%;"><h5><span class="pull-left">Total : ');
		d = c._triageMustache.call(a, "view.list.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="pull-right">');
		d = c["if"].call(a,
			"view.totalSave", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></h5></div><footer><button id="submit-upload" type="submit" class="btn btn-primary">Save</button><button id="cancel-upload" type="submit" class="btn btn-default">Cancel</button></footer>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.propertyShortcutsView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span id="main-title"><i class="fa fa-cut">&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "global_shortcuts", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		a = c["if"].call(a, "activeShortcut", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		return ""
	},
	2: function (a, c, d, b) {
		b.buffer.push('<span id="second-title"><i class="fa fa-angle-right"></i>');
		a = c["if"].call(a, "activeShortcut.shortcutId", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 3: function (a, c, d, b) {
		a = c._triageMustache.call(a, "activeShortcut.key", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		a ? b.buffer.push(a) : b.buffer.push("")
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_shortcut", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 7: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<span id="main-title">');
		d = c.unless.call(a, "activeProperty.isPersonal", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(8, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-cut"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n", hash: {context: "shortcuts"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeShortcut", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 8: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		return ""
	}, 10: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		a = c["if"].call(a, "activeShortcut.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 12: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="form-table-row"><label class="label inline-label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "access", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="checkbox"><input type="checkbox" name="access-type[]" checked="true" id="is-public"value="publics"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "public", {
			name: "I18n", hash: {context: "shortcuts"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label></div><div class="form-table-cell"><label class="checkbox"><input type="checkbox" name="access-type[]" checked="true" id="is-personal" value="personal"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "personal", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></div></div></div>");
		return ""
	}, 14: function (a,
	                 c, d, b) {
		b.buffer.push('<button id="upload-csv" class="btn btn-default" rel="popover-hover" data-placement="bottom" data-html="true" data-content="The data format should be : <br/>shortcut1,message1<br/>shortcut2,message2">Import from CSV</button>')
	}, 16: function (a, c, d, b) {
		b.buffer.push('<th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th>')
	}, 18: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<th class="text-center">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "access", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th>');
		return ""
	}, 20: function (a, c, d, b, e) {
		d = this.escapeExpression;
		b.buffer.push('<tr class="open-view" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "item.id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td style="max-width : 300px; white-space:pre-wrap; word-wrap : break-word;">/');
		d = c._triageMustache.call(a, "item.key", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a,
			"item.shortcutTypeText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</td><td>");
		d = c._triageMustache.call(a, "item.message", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td>");
		d = c.unless.call(a, "isGlobalShortcut", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<td class="text-center delete-cell"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></td></tr>');
		return ""
	}, 21: function (a, c, d, b) {
		b.buffer.push('<td class="text-center">');
		a = c._triageMustache.call(a, "item.dataTypeText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</td>");
		return ""
	}, 23: function (a,
	                 c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td colspan="4" class="text-center"><h1>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_shortcuts", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h1></td></tr>");
		return ""
	}, 25: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 27: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section style="max-width : 500px"><label class="label" for="message">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "multiple_choice", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		d = c.each.call(a, "option", "in", "activeShortcut.options", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(28, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "showAddoptionButton", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(30, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></section>');
		return ""
	}, 28: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="input"><a href="javascript:void(0);" class="button-icon icon-append tooltip-hover delete-option" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_option", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a><input type="text" class="shortcut-option required" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_answer", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "option.val"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {readonly: "../activeShortcut.noEdit"},
			hashTypes: {readonly: "STRING"},
			hashContexts: {readonly: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /></label><em ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"for": "option.id"}, hashTypes: {"for": "STRING"},
			hashContexts: {"for": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' class="invalid"></em></section>');
		return ""
	}, 30: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><button type="button" class="btn btn-default" id="add-shortcut-option">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_option", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></section>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
		var f = this.escapeExpression, g = c.helperMissing;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container">');
		d = c["if"].call(a, "isGlobalShortcut", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b, e),
			inverse: this.program(7, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.csvListView:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="width : 100%; height : 100%;"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeShortcut:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div style="height: 40px;"><div class="pull-left" style="width: 450px"><form id="search-form"><div class="input-group"><input id="search-text" class="form-control" type="text" placeholder="Search"/><div class="input-group-btn" style="position: static;"><button id="openFilter" type="button" class="btn btn-default dropdown-toggle" style="margin-left: -1px;"><span class="caret"></span></button><div class="dropdown-menu pull-right smart-form" role="menu" id="shortcuts-filter" style="position:absolute; width : 100%"><fieldset class="padding-10"><section class="form-table">');
		d = c.unless.call(a, "isGlobalShortcut", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="form-table-row"><label class="label inline-label">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "type", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="checkbox"><input type="checkbox" name="shortcut-type[]" checked="true" id="is-message"value="message"><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "message", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="form-table-cell"><label class="checkbox"><input type="checkbox" name="shortcut-type[]" checked="true" id="is-survey" value="survey"><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "survey", {
			name: "I18n", hash: {context: "shortcuts"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label></div></div></div></section></fieldset><footer style="position: static; width : auto;"><button type="submit" class="btn btn-primary search">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "search", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn bg-color-teal txt-color-white" id="reset-filter">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || g).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-default" id="close-filter">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></div></div><div class="clearfix"></div></div></form></div><div class="pull-right"><button id="add-shortcut" class="btn btn-primary" style="margin-right: 5px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "add_shortcut", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		d = c.unless.call(a, "isGlobalShortcut", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<input type="file" class="hidden" id="csv-file" accept=".csv,text/csv" /></div><div class="clearfix"></div></div><div id="scrollable-list" style="position: absolute;top: 40px; width: 100%;bottom: 0; overflow: auto;" class="smart-form"><table class="table"><thead><tr><th>');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "shortcut_key", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "type", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			g).call(a, "message", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</th>");
		d = c["if"].call(a, "isGlobalShortcut", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b, e),
			inverse: this.program(18, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</tr></thead><tbody>");
		d = c.each.call(a, "item", "as", "pagedList.currentData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b, e),
			inverse: this.program(23, b, e),
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div id="list-loading" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><div id="bulk-action-container" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "view.bulkMarkedTotal::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
		d = c["if"].call(a, "view.bulkMarkedTotal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(25, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "delete_items", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "clear_selection", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li></ul></div></div></div><form id="shortcut-form" name="shortcut-form" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeShortcut::hidden :smart-form :admin-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="form-scrollable-container"><fieldset><section><label class="label" for="shortcutKey">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "shortcut_key", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required mdb_syntax" id="shortcutKey" name="shortcutKey" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "enter_shortcut", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {value: "activeShortcut.key"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' maxlength="100" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {readonly: "activeShortcut.noEdit"},
			hashTypes: {readonly: "STRING"},
			hashContexts: {readonly: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></section><section id="message-section"><label class="label" for="message">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a,
			"message", {
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</label><label class="textarea">');
		b.buffer.push(f((c.textarea || a && a.textarea || g).call(a, {
			name: "textarea",
			hash: {
				name: "message",
				readonly: "activeShortcut.noEdit",
				id: "message",
				rows: "5",
				"class": "required",
				placeholderKey: "enter_message",
				valueBinding: "activeShortcut.message"
			},
			hashTypes: {
				name: "STRING", readonly: "ID", id: "STRING", rows: "STRING", "class": "STRING",
				placeholderKey: "STRING", valueBinding: "STRING"
			},
			hashContexts: {name: a, readonly: a, id: a, rows: a, "class": a, placeholderKey: a, valueBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></section><section class="form-table"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":form-table-row isGlobalShortcut:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="label inline-label">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || g).call(a, "access", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="access-type" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeShortcut.isPublicAccess"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="is-public" value="public" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "activeShortcut.noEdit"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "public", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="access-type" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeShortcut.isPersonalAccess"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="is-personal" value="personal" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "activeShortcut.noEdit"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "personal",
			{
				name: "I18n",
				hash: {context: "shortcuts"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</label></div></div></div><div class="form-table-row"><label class="label inline-label">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "type", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="shortcut-type" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeShortcut.isMessageType"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="is-message" value="m" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "activeShortcut.noEdit"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "message", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="shortcut-type" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeShortcut.isSurveyType"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="is-survey" value="s" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {disabled: "activeShortcut.noEdit"},
				hashTypes: {disabled: "STRING"},
				hashContexts: {disabled: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push("><i></i>");
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "survey", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></div></div></div></section>");
		d = c["if"].call(a, "activeShortcut.showOptions", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(27, b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-danger" id="delete">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			g).call(a, "delete_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div></div></div>");
		return ""
	}, useData: !0, useDepths: !0
});
Ember.TEMPLATES.tabItem = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div class="list-item-container"><div class="list-item">');
		d = c["if"].call(a, "isInternal", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(2, b), inverse: this.program(4, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div class="reorder-icon"><i class="fa fa-reorder"></i></div><div class="action-container">');
		d = c["if"].call(a, "canDelete", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<label class="checkbox"><input type="checkbox" class="tab-status" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {checked: "enabled"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push("  ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("/><i></i></label>");
		d = c["if"].call(a, "isIntegration", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="clearfix"></div>');
		return ""
	}, 2: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<i ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":fa fontClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i> ");
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 4: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<label class="input title-container"><input type="text" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "title"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' maxlength="20" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "noMenu:item-title:main-title enabled:required"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "titleId"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' placeholder="Title" /></label><label class="select select-container"><select class="tab-type" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><option value="url">URL</option><option value="text">Text</option>');
		d = c.unless.call(a, "noMenu", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</select><i></i></label>");
		d = c["if"].call(a, "isMenu", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(7, b), inverse: this.program(10, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 5: function (a, c, d, b) {
		b.buffer.push('<option value="menu">Menu</option>')
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<ul class="sortable-list inner-list" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><li class="dummy-holder" style="margin:0; padding : 0;"></li></ul>');
		a = c["if"].call(a, "canAddItems", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 8: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div style="padding: 5px; border-radius: 3px; margin: 10px 0; border: 2px dashed #aaa; text-align: center;"><p style="font-weight: bold; font-size : 14px;"><a href="javascript:void(0);" style="color: #333;  display: block" class="add-menu-item" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><i class="fa fa-plus"></i> Add Menu Item</a></p><div>');
		return ""
	}, 10: function (a, c, d, b) {
		a = c["if"].call(a, "isURL", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 11: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<label class="input" style="display : block; width : 100%; margin : 8px 0;"><input type="text" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "enabled:required :secureUrl :content"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "urlId"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' placeholder="URL" maxlength="1024"');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "content"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("/></label>");
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<label class="textarea" style="display : block; width : 100%; margin : 8px 0;"><textarea rows="5" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":content enabled:required"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("  ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {name: "textId"},
				hashTypes: {name: "STRING"},
				hashContexts: {name: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' maxlength="5000"></textarea></label><em for="kb-content" class="invalid hidden content-error">This field is required.</em>');
		return ""
	}, 15: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.content.noMenu:remove-menu-item:remove-tab :remove"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-trash-o fa-lg"></i></a>');
		return ""
	}, 17: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<button class="btn btn-xs btn-default configure-integration" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "label"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="padding : 3px 6px;"><i class="fa fa-gear"></i></button>');
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		a = c["with"].call(a, "view.content", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, useData: !0
});
Ember.TEMPLATES.tabs = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<section class="text-center" style="padding: 10px 5px; background: #f9f9f9; border-radius: 3px; margin: 10px 0; border: 2px dashed #aaa;"><h5 style="font-weight: bold;"><a href="javascript:void(0);" style="color: #333; display: block" id="add-tab"><i class="fa fa-plus"></i> Add Tab</a></h5></section>')
	},
	3: function (a, c, d, b) {
		a = c["if"].call(a, "enabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 4: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isMenu:dropdown:not-dropdown :preview-item"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><a href="javascript:void(0);" class="tab" style="height: 36px;">');
		d = c["if"].call(a, "isInternal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(7, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isMenu", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(9, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a>");
		d = c["if"].call(a, "isMenu", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</li>");
		return ""
	}, 5: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<i ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":fa fontClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i>");
		return ""
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<span class="menu-selection">');
		b.buffer.push(d(c.unbound.call(a, "title", {
			name: "unbound",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 9: function (a, c, d, b) {
		b.buffer.push('&nbsp;<b class="caret"></b>')
	}, 11: function (a, c, d, b) {
		b.buffer.push('<ul class="dropdown-menu">');
		a = c.each.call(a, "items", {
			name: "each", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(12, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	}, 12: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li class="menu-item" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);" class="inner-tab" style="padding : 10px 20px;">');
		d =
			c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a></li>");
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<i ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": ":fa fontClass"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("></i>&nbsp;");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n", hash: {context: "admin"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-folder"></i>&nbsp;Tabs</span><div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="tabs-content-form" name="tabs-content-form" class="admin-form"><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left smart-form" style="width : 50%; height : 100%; position: relative;"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><fieldset><section><label class="label">Click and drag a tab to rearrange the order. The tab order determines what agents will first see when a visitor chat is open.</label></section><ul class="sortable-list outer-list"></ul>');
		d = c["if"].call(a, "canAddTabs", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</fieldset></div></div><div class="pull-left" style="width : 50%; height : 100%; position : relative;"><div style="border-left: 1px solid #e5e5e5; width: 100%; direction: rtl; left: 10px; right : 0px; top: 0; bottom: 0; overflow-y: hidden!important; overflow-x: auto!important; white-space: nowrap; position: absolute; height: auto;"><div style=\'direction: ltr;\'><h4 class="text-center" style="margin-bottom : 5px;">Preview</h4></div><div style="color: #333; background: #fafafa; height: 38px; direction: ltr; border: 1px solid #ddd;"><div class="pull-right" style="width: 30px; text-align: center;height: 37px;border-left: 1px solid #ddd;position: absolute;right: 0;"><i class="fa fa-times" style="font-size: 14px; margin-top: 11px;"></i></div><ul class="nav nav-tabs" style="float: right; min-width: 270px; background: #fafafa; margin-right : 28px; border : 0; text-align: right;">');
		d = c.each.call(a, "tabList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div class="tab-content" style="white-space: normal; position: absolute; top: 69px; bottom: 0; overflow: hidden; right: 0; border-right: 1px solid #ddd; left: 15px; direction: ltr;"><div class="tab-pane active" style="position: absolute; top: 0; bottom: 90px; right: 0; width : 299px; overflow-x: hidden;">');
		b.buffer.push(f(c._triageMustache.call(a, "view.beautifiedContent", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div style="position: absolute; right: 299px; top: -89px; border-right: 1px solid #ddd; border-bottom: 1px solid #ddd;"><img src="https://static-a.tawk.to/v2/a34/images/tab-left.png" /></div><div style="position: absolute; bottom: 0; right: 0px;"><img src="https://static-a.tawk.to/v2/a34/images/tab-bottom.png" /></div></div></div></div><div class="clearfix"></div></div><footer class="text-right"><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.tabsIntegrationSettings = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><div><h4 class="modal-title" id="myModalLabel"><i class="fa fa-shopping-bag" alt="test"></i><span class="modal-title-tawk">Shopify Sidebar Customization</span></h4></div></div><div class="modal-body" style="overflow:auto;"><form class="smart-form shopify-edit-container"><section id="customer-select" class="config-type"><label class="checkbox" style="display: inline-block;vertical-align: middle;margin-bottom: 0;"><input type="checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "view.customerSettings.enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="customer-select" /><i></i>Show Customer Details</label><a href="javascript:void(0);" data-id="customer-select" class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
		b.buffer.push(d((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || e).call(a, {
			name: "ShopifyEditSettingsView",
			hash: {content: "view.customerSettings"},
			hashTypes: {content: "ID"},
			hashContexts: {content: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section id="order-select" class="config-type"><label class="checkbox" style="display: inline-block;vertical-align: middle;margin-bottom: 0;"><input type="checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {checked: "view.orderSettings.enabled"},
			hashTypes: {checked: "STRING"}, hashContexts: {checked: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' class="order-select" /><i></i>Show Orders Details</label><a href="javascript:void(0);" data-id="order-select" class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
		b.buffer.push(d((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || e).call(a, {
			name: "ShopifyEditSettingsView",
			hash: {content: "view.orderSettings"},
			hashTypes: {content: "ID"},
			hashContexts: {content: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section></form></div><div class="modal-footer"><button type="button" class="btn btn-default" id="close-settings">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-primary" id="save-settings">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.triggerForm = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<section><p>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "type", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("&nbsp;:&nbsp;");
		d = c._triageMustache.call(a, "activeTrigger.typeName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p><p>");
		d = c._triageMustache.call(a, "activeTrigger.description", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></section>");
		return ""
	}, 3: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<section><label class="label" for="trigger-type">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "type", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><i></i><select id="trigger-type"><option value="basic_page">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "basic_page", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="basic_chat_rescue">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "basic_chat_rescue", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		d = c.unless.call(a, "disableBasicSite", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(4,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<option value="advanced">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "advanced", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option></select></label></section>");
		return ""
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<option value="basic_site">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "basic_site", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="label" for="trigger-description">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "trigger_description", {
			name: "I18n", hash: {context: "triggers"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label class="textarea">');
		b.buffer.push(e((c.textarea || a && a.textarea || d).call(a, {
			name: "textarea",
			hash: {
				valueBinding: "activeTrigger.description",
				name: "trigger-description",
				id: "trigger-description",
				rows: "3",
				maxlength: "500",
				"class": "required",
				placeholderKey: "trigger_description"
			},
			hashTypes: {
				valueBinding: "STRING",
				name: "STRING",
				id: "STRING",
				rows: "STRING",
				maxlength: "STRING",
				"class": "STRING",
				placeholderKey: "STRING"
			},
			hashContexts: {
				valueBinding: a,
				name: a, id: a, rows: a, maxlength: a, "class": a, placeholderKey: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></section><section><div class="inline-group" ><label class="checkbox"><input type="checkbox" id="trigger-execute" name="trigger-execute" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeTrigger.execute"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
			"execute_once", {
				name: "I18n",
				hash: {context: "triggers"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</label></div></section>");
		return ""
	}, 8: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delay", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.delaySelectClass",
				selectedValueBinding: "view.delaySelectValue",
				optionsBinding: "view.delaySelectOptions"
			},
			hashTypes: {selectClassBinding: "STRING", selectedValueBinding: "STRING", optionsBinding: "STRING"},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</section>");
		d = c["if"].call(a, "activeTrigger.isPageTrigger", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<section><label class="label" for="trigger-agent">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent_name", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required" id="trigger-agent" name="trigger-agent" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"  ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeTrigger.senderName"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></section><section><label class="label" for="trigger-message">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "trigger_message", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea">');
		b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {
				valueBinding: "activeTrigger.message",
				name: "trigger-message",
				id: "trigger-message",
				rows: "3",
				"class": "required",
				placeholderKey: "trigger_message"
			},
			hashTypes: {
				valueBinding: "STRING", name: "STRING", id: "STRING", rows: "STRING",
				"class": "STRING", placeholderKey: "STRING"
			},
			hashContexts: {valueBinding: a, name: a, id: a, rows: a, "class": a, placeholderKey: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section>");
		return ""
	}, 9: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="label" for="trigger-url">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_url", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required url" id="trigger-url" name="trigger-url" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "page_url", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"  ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeTrigger.pageUrl"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("/></label></section>");
		return ""
	}, 11: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="trigger-status">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "status", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="trigger-status" id="trigger-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeTrigger.isEnabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text",
			{
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('"></i></label></div></div></div></section>');
		return ""
	}, 13: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<section><h4 style="margin : 5px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "conditions", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h4><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "conditions_description", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "run_trigger", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.runSelectClass",
				selectedValueBinding: "view.runSelectValue",
				optionsBinding: "view.runSelectOptions"
			},
			hashTypes: {selectClassBinding: "STRING", selectedValueBinding: "STRING", optionsBinding: "STRING"},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "check", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.matchSelectClass",
				selectedValueBinding: "view.matchSelectValue",
				optionsBinding: "view.matchSelectOptions"
			},
			hashTypes: {
				selectClassBinding: "STRING", selectedValueBinding: "STRING",
				optionsBinding: "STRING"
			},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section><ol style="padding-left : 20px;">');
		d = c.each.call(a, "condition", "in", "activeTrigger.conditions", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ol></section><section>");
		d = c["if"].call(a, "activeTrigger.isAdvanced",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></section><section><h4 style="margin : 5px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "actions", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h4><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			e).call(a, "actions_description", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section> <section><ol style="padding-left : 20px;">');
		d = c.each.call(a, "activeTrigger.actions", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ol></section><section>");
		d = c["if"].call(a, "activeTrigger.isAdvanced",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></section>');
		return ""
	}, 14: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li style="margin-bottom : 20px; min-height : 50px;">');
		b.buffer.push(e((c.TriggerConditionView || a && a.TriggerConditionView || d).call(a, {
			name: "TriggerConditionView",
			hash: {
				propertyIdBinding: "activeProperty.id",
				conditionBinding: "condition"
			},
			hashTypes: {propertyIdBinding: "STRING", conditionBinding: "STRING"},
			hashContexts: {propertyIdBinding: a, conditionBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</li>");
		return ""
	}, 16: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<button type="button" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default activeTrigger.conditionsLimit:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="add-condition">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add_condition", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, 18: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li style="margin-bottom : 20px;">');
		b.buffer.push(e((c.TriggerActionView || a && a.TriggerActionView || d).call(a, {
			name: "TriggerActionView",
			hash: {actionBinding: "this"},
			hashTypes: {actionBinding: "STRING"},
			hashContexts: {actionBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</li>");
		return ""
	}, 20: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<button type="button" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default activeTrigger.actionsLimit:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="add-action">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add_action", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, 22: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button type="button" class="btn btn-danger" id="delete">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div id="form-scrollable-container"><fieldset>');
		d = c["if"].call(a, "activeTrigger.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<section><label class="label" for="trigger-name">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "trigger_name", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required" id="trigger-name" trigger="trigger-name" maxlength="50" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "trigger_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeTrigger.name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /></label></section>");
		d = c["if"].call(a, "activeTrigger.isAdvanced", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(8, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeTrigger.id", {
			name: "if", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(11, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeTrigger.isAdvanced", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</fieldset></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button>");
		d = c["if"].call(a, "activeTrigger.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</footer>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.triggersView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		a = c["if"].call(a, "activeTrigger.id", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(2, b), inverse: this.program(4, b), types: ["ID"], contexts: [a], data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 2: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		a = c._triageMustache.call(a, "activeTrigger.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_trigger", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<tr class="open-view" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "_id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><td>");
		d = c._triageMustache.call(a,
			"name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</td><td>");
		d = c._triageMustache.call(a, "description", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a, "typeName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c["if"].call(a, "isEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="bulk-check" /><i class="mark-select"></i></label></div></td></tr>');
		return ""
	}, 7: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-check txt-color-tawk-pink"></i>')
	},
	9: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td colspan="4" class="text-center"><h1>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_triggers", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h1></td></tr>");
		return ""
	}, 11: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
			contexts: [a], data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-flash"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "triggers", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a,
			"activeTrigger", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeTrigger:hidden :smart-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="width : 100%; height : 100%;"><div class="text-right" style="height: 40px;"><button id="add-item" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "canAddTrigger::hidden :btn :btn-primary"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_trigger", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button></div><div class="scrollable-list" style="bottom : 60px;"><table class="table"><thead><tr><th>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "description", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "type", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "is_enabled", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="text-center delete-cell"><div style="height: 20px;"><label class="checkbox"><input type="checkbox" class="all-bulk-check" /><i class="mark-select"></i></label></div></th></tr></thead><tbody>');
		d = c.each.call(a, "pagedList.currentData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(9, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div id="list-loading" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "isLoading::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><div id="bulk-action-container" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.bulkMarkedTotal::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
		d = c["if"].call(a, "view.bulkMarkedTotal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p><ul id="bulk-list-container"><li class="padding-10"><button class="btn btn-danger" id="bulk-delete">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "delete_items", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white" id="bulk-conversations-purge">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "clear_selection", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></li></ul></div></div><p style="position: absolute; width: 100%;bottom: 0; border-top: 1px solid #ddd; padding : 5px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "triggers_limit", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div>");
		b.buffer.push(f((c.TriggerFromView || a && a.TriggerFromView || e).call(a, {
			name: "TriggerFromView",
			hash: {controllerBinding: "view.controller"},
			hashTypes: {controllerBinding: "STRING"},
			hashContexts: {controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.webrtcSettings = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<form id="addon-settings-form" name="addon-settings-form" class="smart-form admin-form"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><div style="margin-bottom : 10px;"><div style="float : left; width : 100%;"><div style="margin-left : 120px;"><h3 style="margin : 0 0 10px 0;">');
		d = c._triageMustache.call(a, "activeAddOn.name", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</h3><p>");
		d = c._triageMustache.call(a, "activeAddOn.shortDescription", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div></div><div style="float : left; width : 100px; margin-left: -100%;"><img ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {src: "activeAddOn.addOnLogo"},
			hashTypes: {src: "STRING"},
			hashContexts: {src: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></div><div class="clearfix"></div></div><div class="form-table" style="width: 100%;table-layout: fixed; max-width : 400px;"><div class="form-table-row"><label class="label inline-label text-left" for="addon-status" style="width: 100%; padding-left: 0;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "addon_status", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="inline-group" style="width: auto;"><label class="toggle"><input type="checkbox" name="addon-status" id="addon-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAddOn.settings.enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('"></i></label></div></div><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":form-table-row :allowed-actions-container activeAddOn.settings.enabled::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="label inline-label text-left" for="video-call" style="width: 100%;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "video_call", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="inline-group" style="width: auto;"><label class="toggle"><input type="checkbox" name="video-call" id="video-call" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAddOn.settings.video"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "disabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i></label></div></div><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":form-table-row :allowed-actions-container activeAddOn.settings.enabled::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="label inline-label text-left" for="screen-share" style="width: 100%;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "screen_share", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="inline-group" style="width: auto;"><label class="toggle"><input type="checkbox" name="screen-share" id="screen-share" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeAddOn.settings.screen"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enabled_text", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "disabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i></label></div></div></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.whitelabelCustomization = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td colspan="3" class="text-center"><button id="activate-add-on" type="submit" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "activate_addon",
			{
				name: "I18n",
				hash: {context: "admin"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</button></td></tr>");
		return ""
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">$ ");
		a = c._triageMustache.call(a, "pricePretify", {
			name: "_triageMustache", hash: {}, hashTypes: {},
			hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td><label class="label text-right" style="margin-top:4px"> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "payment_method", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td><label class="select" style="width: 100%"><select id="payment-method"><option value="pp">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "paypal", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="cc">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "credit_card", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option></select><i></i></label></td></tr>");
		return ""
	}, 7: function (a,
	                c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="select" style="width: 100%"><select id="card-selection"><option value="new-card">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_card", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		a = c.each.call(a, "Tawk.userController.existingCards", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(8,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</select><i></i></label>");
		return ""
	}, 8: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "customerId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {selected: "selected"},
			hashTypes: {selected: "STRING"},
			hashContexts: {selected: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c._triageMustache.call(a, "cardBrand", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" x-");
		d = c._triageMustache.call(a, "cardNumber", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</option>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing,
			f = this.escapeExpression;
		b.buffer.push('<br /><hr /><br /><h6 style="font-weight: normal"><strong>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_on", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" : ");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_main_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</strong> - <span style="font-size: 14px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "whitelabel_deescription_widget", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "admin"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></h6><p class="small">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "whitelabel_save_notification", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</small><div id="whitelabel-settings"><table class="table no-border"><tr><td colspan="3"><h6 style="font-weight: normal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_footer_branding", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h6></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "title", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td colspan="2"><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-label" type="text" class="input-text" placeholder="Enter branding text" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "whitelabelAddOn.settings.widget.label"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('/></label><p class="font-xs pull-left" style="opacity: 0.6;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "format_eg", {
			name: "I18n",
			hash: {
				variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
				context: "wizard"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_url", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td colspan="2"><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-url" type="text" class="input-text url" placeholder="Enter branding link url" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "whitelabelAddOn.settings.widget.url"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "color", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td colspan="2"><label class="input"><input type="text" id="widget-text-color" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "whitelabelAddOn.settings.widget.textColor"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></td></tr><tr><td colspan="3"><h6 style="font-weight: normal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_footer_branding", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h6></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "title", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td colspan="2"><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-label" type="text" class="input-text" placeholder="Enter branding text" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "whitelabelAddOn.settings.email.label"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('/></label><p class="font-xs pull-left" style="opacity: 0.6;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "format_eg", {
			name: "I18n",
			hash: {
				variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
				context: "wizard"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_url", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td colspan="2"><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-url" type="text" class="input-text url" placeholder="Enter branding link url" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "whitelabelAddOn.settings.email.url"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /></label></td></tr>");
		d = c.unless.call(a, "whitelabelAddOn.isSubscribed", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</table></div><div id="payment-container" class="hidden"><form id="whitelabel-payment" name="whitelabel-payment" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.paymentSuccess:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><table class="table no-border"><tr><td><label class="label text-right" style="margin-top:4px">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "select_package", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td><label class="select" style="width: 100%"><select id="plan">');
		d = c.each.call(a, "whitelabelAddOn.plans", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</select><i></i></label></td></tr>");
		d = c["if"].call(a, "canUsePaypal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<tr id="card-details" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "canUsePaypal:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td><label class="label text-right"  style="margin-top:4px">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "payment_details", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></td><td>");
		d = c["if"].call(a, "Tawk.userController.existingCards.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="new-card-details" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "Tawk.userController.existingCards.length:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><br /><section><label class="input"><i class="icon-prepend fa fa-user" style="z-index:1;"></i><input id="cardholder-name" name="cardholder-name" type="text" class="input required" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name_on_card_placeholder", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section><section><label class="input"><i class="icon-prepend fa fa-credit-card" style="z-index:1;"></i><i class="card-type icon-append"></i><input id="card-number" name="card-number" type="text" class="input required ccNumber" placeholder="');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "card_number_placeholder", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section><div class="row"><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-calendar" style="z-index:1;"></i><input id="card-expiry" name="card-expiry" type="text" class="input required ccExpiryFormat ccExpiryDate" placeholder="MM/YY" /></label></section><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-lock" style="z-index:1;"></i><input id="card-cvc" name="card-cvc" type="text" class="input required digits cvcCheck" placeholder="CVV" minlength="3" maxlength="4" /></label></section></div><section><label class="input"><i class="icon-prepend fa fa-map-marker" style="z-index:1;"></i><input id="zip-code" name="zip-code" type="text" class="input required" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "zip_code_placeholder", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section></div></td></tr><tr><td colspan="2"><p id="total-price"  style="font-size : 14px; text-align : center; margin : 0;"></p></td></tr><tr><td class="text-center" colspan="2"><button id="cancel-payment-form" class="btn btn-default" style="margin-right : 5px;">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="activate-now" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "activate_now", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></td></tr></table></form><div id="addon-settings-button-container" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.paymentSuccess::hidden :text-center"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="padding: 20px 15px;"><div><div id="success-check-container"><i class="fa fa-check"></i></div><h1 style="color: #71a06a; font-weight: 500;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "thank_you", {
			name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</h1><h5 style="color: #71a06a; font-weight: 500;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "purchase_success", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5><p style="margin : 30px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "advanced_whitelabel_settings", {
			name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push("</p></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.widgetAppearance = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		return ""
	},
	3: function (a, c, d, b) {
		d = c["if"].call(a, "activeProperty.isSite", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.isGalleryView", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 4: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa  fa-angle-right"></i>');
		a =
			c._triageMustache.call(a, "activeWidget.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span id="third-title"><i class="fa  fa-angle-right"></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "bubbles_gallery", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 8: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td colspan="3"><h6 style="font-weight: normal">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "desktop_widget_description", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h6></td></tr><tr class="desktop-container"><td style="height : 55px;"><div class="round" style="height : 53px;"><label class="radio"><input type="radio" id="round" name="desktop-theme"');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeWidget.isRoundDesktop"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' value="min" /><i></i></label><div class="tawkchat-status-icon change-background-color change-text-color"></div></div></td><td colspan="2"><div class="rectangle" style="height : 42px;"><label class="radio rectangle"><input type="radio" id="rectangle" name="desktop-theme"');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {checked: "activeWidget.isRectangleDesktop"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' value="full" /><i></i></label><div class="tawkchat-status-icon change-background-color change-text-color"><div class="text">');
		a = c._triageMustache.call(a, "onlineGreetingsPreview.shortGreeting", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div></div></div></td></tr>");
		return ""
	}, 10: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td colspan="3"><h6 style="font-weight: normal">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_size_description", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h6></td></tr>");
		return ""
	}, 12: function (a,
	                 c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td colspan="3"><h6 style="font-weight: normal">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_size_description_embed", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h6></td></tr><tr><td colspan="3"><h6 class="widget-details">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "embed_dimensions_details", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("<h6></td></tr>");
		return ""
	}, 14: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<tr ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><td><label class="label text-right">Minimized Width</label></td><td class="fix-mid-size"><label class="input text-center" style="width : 70px; margin : 0px auto;">');
		b.buffer.push(d((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				value: "activeWidget.minimizedWidth",
				name: "widget-min-width",
				id: "widget-min-width",
				"class": "required dimension",
				type: "text"
			},
			hashTypes: {
				value: "ID", name: "STRING", id: "STRING",
				"class": "STRING", type: "STRING"
			},
			hashContexts: {value: a, name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></td><td class="fix-end-size"><button ');
		b.buffer.push(d(c.action.call(a, "resetMinWidth", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "default_text", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button></td></tr><tr ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td><label class="label text-right">Minimized Height</label></td><td class="fix-mid-size"><label class="input text-center" style="width : 70px; margin : 0px auto;">');
		b.buffer.push(d((c.input ||
			a && a.input || e).call(a, {
			name: "input",
			hash: {
				value: "activeWidget.minimizedHeight",
				name: "widget-min-height",
				id: "widget-min-height",
				"class": "required dimension",
				type: "text"
			},
			hashTypes: {value: "ID", name: "STRING", id: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {value: a, name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></td><td class="fix-end-size"><button ');
		b.buffer.push(d(c.action.call(a, "resetMinHeight", {
			name: "action", hash: {}, hashTypes: {}, hashContexts: {}, types: ["STRING"],
			contexts: [a], data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "default_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Top Corners Roundness</label></td><td class="fix-mid-size">');
		b.buffer.push(d((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				"class": "spinner top-corner",
				min: "0", type: "text"
			},
			hashTypes: {"class": "STRING", min: "STRING", type: "STRING"},
			hashContexts: {"class": a, min: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</td><td class="fix-end-size"><button id="reset-top-corner" type="button" class="btn restore-default">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "default_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></td></tr><tr ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><td><label class="label text-right">Bottom Corners Roundness</label></td><td class="fix-mid-size">');
		b.buffer.push(d((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {"class": "spinner bottom-corner", min: "0", type: "text"},
			hashTypes: {"class": "STRING", min: "STRING", type: "STRING"},
			hashContexts: {"class": a, min: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</td><td class="fix-end-size"><button id="reset-bottom-corner" type="button" class="btn restore-default">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "default_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></td></tr>");
		return ""
	}, 16: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div id="widget-min" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isRTL:rtl-direction"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="left: 0; right : 0; width : auto; max-width : 100%;"><div id="widget-min-preview-container" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopRectangle:isRectangle:isRound"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="bubble-container"><div id="default-bubble-container" class="hidden"><div id="bubble-graphics-container"><canvas id="bubble-canvas"></canvas></div><div id="bubble-text-container"><p id="bubble-text">');
		d = c._triageMustache.call(a, "bubblePreview.bubbleText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div></div><div id="preview-bubble-uploaded-limits"><img class="bubble preview-bubble uploaded hidden" /></div><img ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {src: "bubblePreview.galleryBubbleImage"},
			hashTypes: {src: "STRING"},
			hashContexts: {src: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":bubble :preview-bubble :gallery :hidden bubblePreview.bubbleRotatable::non-rotatable"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /></div><div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":inner-preview-container :change-background-color :change-text-color :rectangle-container activeWidget.position"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="widget-container"><div class="header-container"><div class="headerBoxControlsContainer white"><div class="maximize pull-right"></div></div><div class="headerAccountStateContainer"><p class="headerAccountState">');
		d = c._triageMustache.call(a, "onlineGreetingsPreview.shortGreeting", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div></div></div></div><div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":inner-preview-container :round-container activeWidget.position"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="widget-container change-background-color change-text-color change-background-color change-text-color"></div></div></div></div>');
		return ""
	}, 18: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.WidgetBubbleGallery || a && a.WidgetBubbleGallery ||
			d).call(a, {
			name: "WidgetBubbleGallery",
			hash: {isVisibleBinding: "view.isGalleryView"},
			hashTypes: {isVisibleBinding: "STRING"},
			hashContexts: {isVisibleBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		d = c.unless.call(a, "activeProperty.isPersonal", {
			name: "unless", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(1, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-picture-o"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_appearance", {
			name: "I18n", hash: {context: "pages"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeWidget.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="widget-appearance-form" name="widget-appearance-form" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":smart-form :admin-form view.isGalleryView:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left" style="width : 50%; height : 100%;"><div id="form-scrollable-container" style="width: 100%; height: 100%; position: relative; overflow: auto;"><fieldset><table class="table no-border"><tr><td colspan="3"><h6 style="font-weight: normal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_color_description", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h6></td></tr><tr><td style="width: 100px;"><label class="label text-right">Header Background</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="widget-bg-color" name="widget-bg-color" /></label></td><td class="fix-end-size"><button type="button" class="btn restore-default" ');
		b.buffer.push(f(c.action.call(a, "resetHeaderBgColor", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Header Text</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="widget-txt-color" name="widget-txt-color" /></label></td><td class="fix-end-size"><button class="btn restore-default" ');
		b.buffer.push(f(c.action.call(a, "resetHeaderTxtColor", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Agent Message Background</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="agent-chat-bg-color" name="agent-chat-bg-color" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeWidget.agentBubbleBg"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td><td class="fix-end-size"><button ');
		b.buffer.push(f(c.action.call(a, "resetAgentBgColor", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset",
			{
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Agent Message Text</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="agent-chat-txt-color" name="agent-chat-txt-color" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeWidget.agentBubbleTxt"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td><td class="fix-end-size"><button  ');
		b.buffer.push(f(c.action.call(a, "resetAgentTxtColor", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Visitor Message Background</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="visitor-chat-bg-color" name="visitor-chat-bg-color" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeWidget.visitorBubbleBg"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td><td class="fix-end-size"><button ');
		b.buffer.push(f(c.action.call(a, "resetVisitorBgColor", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"reset", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Visitor Message Text</label></td><td class="fix-mid-size"><label class="input text-center"><input type="text" id="visitor-chat-txt-color" name="visitor-chat-txt-color" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "activeWidget.visitorBubbleTxt"}, hashTypes: {value: "STRING"},
			hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' /></label></td><td class="fix-end-size"><button ');
		b.buffer.push(f(c.action.call(a, "resetVisitorTxtColor", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></td></tr>");
		d = c["if"].call(a, "activeWidget.isInline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeWidget.isInline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.program(12, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<tr><td><label class="label text-right">Maximized Width</label></td><td class="fix-mid-size"><label class="input text-center" style="width : 70px; margin : 0px auto;">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				value: "activeWidget.width",
				name: "widget-max-width",
				id: "widget-max-width",
				"class": "required dimension",
				type: "text"
			},
			hashTypes: {value: "ID", name: "STRING", id: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {value: a, name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></td><td class="fix-end-size"><button ');
		b.buffer.push(f(c.action.call(a, "resetMaxWidth", {
			name: "action", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "default_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></td></tr><tr><td><label class="label text-right">Maximized Height</label></td><td class="fix-mid-size"><label class="input text-center" style="width : 70px; margin : 0px auto;">');
		b.buffer.push(f((c.input ||
			a && a.input || e).call(a, {
			name: "input",
			hash: {
				value: "activeWidget.height",
				name: "widget-max-height",
				id: "widget-max-height",
				"class": "required dimension",
				type: "text"
			},
			hashTypes: {value: "ID", name: "STRING", id: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {value: a, name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></td><td class="fix-end-size"><button ');
		b.buffer.push(f(c.action.call(a, "resetMaxHeight", {
			name: "action", hash: {}, hashTypes: {}, hashContexts: {}, types: ["STRING"],
			contexts: [a], data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "default_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></td></tr>");
		d = c["if"].call(a, "activeWidget.isInline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<tr><td><label class="label text-right">Position</label></td><td class="fix-mid-size">');
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.positionSelectClass",
				selectedValue: "activeWidget.position",
				optionsBinding: "view.positionSelectOptions"
			},
			hashTypes: {selectClassBinding: "STRING", selectedValue: "ID", optionsBinding: "STRING"},
			hashContexts: {selectClassBinding: a, selectedValue: a, optionsBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</td><td class="fix-end-size"><button ');
		b.buffer.push(f(c.action.call(a, "resetPosition", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "default_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></td></tr><tr><td colspan="3"><h6 style="font-weight: normal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "mobile_widget_description", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h6></td></tr><tr class="mobile-container"><td style="height : 55px;"><div class="round" style="height : 53px;"><label class="radio"><input type="radio" id="round" name="mobile-theme"');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeWidget.isRoundMobile"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' value="round" /><i></i></label><div class="tawkchat-status-icon change-background-color change-text-color"></div></div></td><td colspan="2"><div class="rectangle" style="height : 42px;"><label class="radio rectangle"><input type="radio" id="rectangle" name="mobile-theme"');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {checked: "activeWidget.isRectangleMobile"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' value="rectangle" /><i></i></label><div class="tawkchat-status-icon change-background-color change-text-color"><div class="text">Chat</div></div></div></td></tr><tr ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td colspan="3"><h6 style="font-weight: normal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "bubble_description", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "widgets"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h6></td></tr><tr ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><td><label class="label text-right">Show Bubble</label></td><td colspan="2"><label class="toggle" style="height : 30px; margin : 0;">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {checked: "bubblePreview.enabled", name: "bubble-status", id: "bubble-status", type: "checkbox"},
			hashTypes: {checked: "ID", name: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {checked: a, name: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i data-swchon-text="yes" data-swchoff-text="no" for="bubble-status"></i></label></td></tr><tr ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "bubblePreview.enabled::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><td ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' colspan="2"><label class="pull-left"><button id="upload-image" type="button" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "upload_image", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></label><label class=pull-right><button id="open-bubble-gallery" type="button" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			e).call(a, "open_gallery", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></label><input type="file" class="hidden" id="upload-image-input" /><div class="clearfix"></div></td><td ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden :fix-end-size"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><label><button ");
		b.buffer.push(f(c.action.call(a, "resetBubbleSettings", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' type="button" class="btn restore-default">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></label></td></tr><tr id="match-bubble-container"><td colspan="3" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><div><label class="checkbox" style="height: 22px; display: inline-block; vertical-align: middle;"><input type="checkbox" id="match-bubble" /><i></i></label><label class="label" for="match-bubble" style="display: inline-block;vertical-align: middle;height: 40px;line-height: 40px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "match_bubble",
			{
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</label></div></td></tr><tr class="bubble-edit-container hidden"><td ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="label text-right">Content</label></td><td colspan="2" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "view.isDesktopWidgetFull::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><label class="input" style="width : 100%">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				value: "bubblePreview.bubbleText",
				name: "bubble-text",
				maxlength: "45",
				id: "bubble-text-input",
				"class": "required",
				placeholderKey: "bubble_text",
				type: "text"
			},
			hashTypes: {
				value: "ID", name: "STRING", maxlength: "STRING", id: "STRING",
				"class": "STRING", placeholderKey: "STRING", type: "STRING"
			},
			hashContexts: {value: a, name: a, maxlength: a, id: a, "class": a, placeholderKey: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></td></tr><tr class="bubble-edit-container hidden"><td ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="label text-right">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "bubble_colors", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></td><td ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden :fix-mid-size"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="input text-left"><input type="text" id="bubble-bg-color" name="bubble-bg-color" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "bubblePreview.bubbleBgColor"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /></label></td><td ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden :fix-end-size"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="input text-left"><input type="text" id="bubble-txt-color" name="bubble-txt-color" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "bubblePreview.bubbleTxColor"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></td></tr><tr class="hidden upload-image-settings"><td ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="label text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rotate_bubble", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></td><td ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden :fix-mid-size"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><button id="turn-left" class="btn btn-default"><i class="fa fa-rotate-left"></i><span class="hidden-mobile hidden-tablet">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "turn_left", {
			name: "I18n",
			hash: {variables: '{"deg" : "&deg;"}', context: "widgets"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></button></td><td ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden :fix-end-size"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><button id="turn-right" class="btn btn-default"><i class="fa fa-rotate-right"></i><span class="hidden-mobile hidden-tablet">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "turn_right", {
			name: "I18n",
			hash: {variables: '{"deg" : "&deg;"}', context: "widgets"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></button></td></tr><tr class="hidden upload-image-settings"><td colspan="3" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label id="upload-image-order" class="checkbox" style="height: 22px; display: inline-block; vertical-align: middle;">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {id: "bubble-in-front", checkedBinding: "bubblePreview.bubbleInFront", type: "checkbox"},
			hashTypes: {id: "STRING", checkedBinding: "STRING", type: "STRING"},
			hashContexts: {id: a, checkedBinding: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i></i></label><label class="label" for="bubble-in-front" style="display: inline-block;vertical-align: middle;height: 40px;line-height: 40px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "image_to_front", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td></tr><tr class="hidden upload-image-settings"><td colspan="3" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isDesktopWidgetFull::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="note">* ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "image_upload_note", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td></tr><tr><td colspan="3" class="whitelabel-view"></td></tr></table></fieldset><div id="upload-image-message" class="hidden"><span class="state-error"></span><em id="upload-image-message-content"></em></div><div id="upload-image-progress" class="hidden"></div></div></div><div class="pull-left" style="width : 50%; height : 100%; position : relative"><div id="title-preview">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "desktop_preview", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		d = c["if"].call(a, "activeWidget.isInline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="widget-max" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "activeWidget.isInline:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="border-left: 1px solid #e5e5e5; left: 0; right: 0; width: auto; max-width: 100%; height: 100%; overflow: auto; bottom: 1px;"><div id="widget-max-preview-container" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isRTL:rtl-direction activeWidget.isInline::embed"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="border-wrapper"></div><div class="inner-preview-container"><div class="header-container change-background-color change-text-color"><div id="header-wrapper"><div class="headerBoxControlsContainer black"><div class="end-chat pull-right"></div><div class="popout pull-right"></div><div class="minimize pull-right"></div></div><div class="headerAccountStateContainer"><p class="headerAccountState">');
		d = c._triageMustache.call(a, "onlineGreetingsPreview.shortGreeting",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div></div></div><div id="widget-chat-container"><div id="chat-container-wrapper"><div id="sample-chat-coloring"><div class="visitorChatContainer clearfix"><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div></div><div class="agentChatContainer clearfix"><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div></div></div></div><div id="bottom-container"><div id="actionsContainer"><div id="action-message">Type here and press enter...</div><div id="ratingContainer"></div><div id="footer-container"><div id="options" style="height: 32px; margin-left: 84px;"><div id="openMenu" style="position: absolute; left: 3px; bottom: 0; background:url(https://static-a.tawk.to/v2/a34/images/widget-menu.png); height : 29px; width : 80px;"></div></div><div id="widget-brand" style="position: absolute; bottom: 0; right: 6px; left: 86px; text-align: right; height: 30px; line-height: 30px; color: #000; font-size: 13px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-right : 3px; font-weight : normal;"><a href="https://tawk.to" target="_blank" style="text-decoration: none; color: inherit;">Powered by <span style="font-size: 13px; font-weight: 700">tawk.to</span></a></div></div></div></div></div></div></div></div></div><div class="clearfix"></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer><div class="more-below hidden" style="position: absolute; bottom: 64px; right: 50%; height: 21px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "more_bubble", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' <i class="fa fa-arrow-down"></i></div></form>');
		d = c["if"].call(a, "activeWidget.isInline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.widgetContent = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		return ""
	}, 3: function (a, c, d, b) {
		a = c["if"].call(a, "activeProperty.isSite", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 4: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		a = c._triageMustache.call(a,
			"activeWidget.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="toggle" style="margin-left: 5px;display : inline-block; height : 32px;">');
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				checked: "prechatFormPreview.enabled",
				name: "prechat-status",
				id: "prechat-status",
				type: "checkbox"
			},
			hashTypes: {checked: "ID", name: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {checked: a, name: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "on", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "off", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" for="prechat-status"></i></label>');
		return ""
	}, 8: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		d = c["if"].call(a, "view.currentForm.fieldsData.isNameAvailable", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.currentForm.fieldsData.isEmailAvailable", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(11, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c.unless.call(a, "activeProperty.isPersonal", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.currentForm.fieldsData.isPhoneNumberAvailable", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d &&
		b.buffer.push(d);
		b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-question-inputText">+ ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_question_input", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></div><div class="form-setting"><a href="javascript:void(0);" id="add-question-textArea">+ ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_question_text", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></div><div class="form-setting"><a href="javascript:void(0);" id="add-multi-choice">+ ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_multiple_choice", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></div><div class="form-setting"><a href="javascript:void(0);" id="add-options">+ ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_options_choice", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></div>");
		return ""
	}, 9: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-name">+ ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_name", {
			name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></div>");
		return ""
	}, 11: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-email">+ ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_email", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></div>");
		return ""
	}, 13: function (a, c, d,
	                 b) {
		a = c["if"].call(a, "view.currentForm.fieldsData.isDepartmentAvailable", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 14: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-department">+ ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_department", {
			name: "I18n", hash: {context: "widgets"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></div>");
		return ""
	}, 16: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="form-setting"><a href="javascript:void(0);" id="add-phone-number">+ ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_phone_number", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></div>");
		return ""
	}, 18: function (a, c, d, b) {
		b.buffer.push('<div class="headerAccountStateContainer"><p class="headerAccountState">');
		a = c["if"].call(a, "view.isPrechat", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.program(21, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</p></div>");
		return ""
	}, 19: function (a, c, d, b) {
		a = c._triageMustache.call(a, "onlineGreetingsPreview.shortGreeting", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
			contexts: [a], data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 21: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<span class="edit-text">');
		d = c["if"].call(a, "onlineGreetingsPreview.shortGreeting.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.program(22, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				name: "online-short-message",
				valueBinding: "onlineGreetingsPreview.shortGreeting",
				maxlength: "60",
				"class": "editable-input required",
				type: "text"
			},
			hashTypes: {
				name: "STRING",
				valueBinding: "STRING",
				maxlength: "STRING",
				"class": "STRING",
				type: "STRING"
			},
			hashContexts: {name: a, valueBinding: a, maxlength: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i class="fa fa-pencil edit-icon"></i>');
		return ""
	}, 22: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span class="empty-text">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "widget_header", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 24: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="headerAccountStateContainer"><p class="headerAccountState"><span class="edit-text">');
		d = c["if"].call(a, "awayGreetingsPreview.shortGreeting.length", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(25,
				b), inverse: this.program(22, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				name: "away-short-message",
				valueBinding: "awayGreetingsPreview.shortGreeting",
				maxlength: "60",
				"class": "editable-input required",
				type: "text"
			},
			hashTypes: {
				name: "STRING",
				valueBinding: "STRING",
				maxlength: "STRING",
				"class": "STRING",
				type: "STRING"
			},
			hashContexts: {name: a, valueBinding: a, maxlength: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i class="fa fa-pencil edit-icon"></i></p></div>');
		return ""
	}, 25: function (a, c, d, b) {
		a = c._triageMustache.call(a, "awayGreetingsPreview.shortGreeting", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 27: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="headerAccountStateContainer"><p class="headerAccountState"><span class="edit-text">');
		d = c["if"].call(a,
			"offlineFormPreview.shortGreeting.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(28, b),
				inverse: this.program(22, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				name: "offline-short-message",
				valueBinding: "offlineFormPreview.shortGreeting",
				maxlength: "60",
				"class": "editable-input required",
				type: "text"
			},
			hashTypes: {
				name: "STRING", valueBinding: "STRING", maxlength: "STRING", "class": "STRING",
				type: "STRING"
			},
			hashContexts: {name: a, valueBinding: a, maxlength: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i class="fa fa-pencil edit-icon"></i></p></div>');
		return ""
	}, 28: function (a, c, d, b) {
		a = c._triageMustache.call(a, "offlineFormPreview.shortGreeting", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 30: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "view.newLongGreeting",
			{
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
	}, 32: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span class="empty-text">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "form_header", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 34: function (a, c, d, b) {
		d =
			c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				valueBinding: "view.currentForm.text",
				"class": "editable-input form-title required",
				type: "text"
			},
			hashTypes: {valueBinding: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {valueBinding: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 36: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				valueBinding: "view.currentForm.text",
				"class": "editable-input form-title", type: "text"
			},
			hashTypes: {valueBinding: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {valueBinding: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 38: function (a, c, d, b) {
		b.buffer.push('<div class="max-length-error">');
		a = c._triageMustache.call(a, "view.errorMaxLengthMsg", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</di v>");
		return ""
	}, 40: function (a, c, d, b) {
		var e = this.escapeExpression,
			f = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="field-container" style="cursor: move; position: relative; margin: 5px 0;"><div class="field-label label" style="margin-right: 35px;"><span class="edit-text" style="cursor: text;">');
		d = c["if"].call(a, "label.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(41, b),
			inverse: this.program(43,
				b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		b.buffer.push(e((c.input || a && a.input || f).call(a, {
			name: "input",
			hash: {
				name: "name",
				valueBinding: "label",
				maxlength: "150",
				"class": "editable-input required",
				type: "text"
			},
			hashTypes: {name: "ID", valueBinding: "STRING", maxlength: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {name: a, valueBinding: a, maxlength: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i class="fa fa-pencil edit-icon"></i></div><div class="action-container" style="position: absolute; right: 0; top: 5px; width : 28px;">');
		d = c["if"].call(a, "allowRequiredToggle", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(45, b),
			inverse: this.program(46, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "canBeDeleted", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(50, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a, "isInputText", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(52, b),
			inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isName", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(52, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isEmail", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(52, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isPhone", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(52, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isMessage", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(54, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isTextArea", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(54, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isDepartment", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(56, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isMultiChoice", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(59, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isOptions", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(64, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		return ""
	}, 41: function (a, c, d, b) {
		a = c._triageMustache.call(a, "label", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 43: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span class="empty-text">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "field_label", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 45: function (a, c, d, b) {
		b.buffer.push('<a class="action toggle-required tooltip-hover" href="javascript:void(0);" data-placement="bottom" data-original-title="Set as required">');
		a = c["if"].call(a, "isRequired", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(46, b),
			inverse: this.program(48, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a>");
		return ""
	}, 46: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-asterisk" style="color: red; font-size: 14px;"></i>')
	},
	48: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-asterisk" style="font-size: 14px;"></i>')
	}, 50: function (a, c, d, b) {
		b.buffer.push('<a class="action delete-field tooltip-hover" href="javascript:void(0);" data-placement="bottom" data-original-title="Delete field"><i class="fa fa-trash-o" style="font-size: 14px;"></i></a>')
	}, 52: function (a, c, d, b) {
		b.buffer.push('<div class="input-container"><input type="text" disabled="disabled" /></div>')
	}, 54: function (a, c, d, b) {
		b.buffer.push('<div class="input-container"><textarea disabled="disabled"></textarea></div>')
	},
	56: function (a, c, d, b) {
		a = c.unless.call(a, "activePage.isPersonal", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(57, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 57: function (a, c, d, b) {
		b.buffer.push('<div class="input-container"><select disabled></select></div>')
	}, 59: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div class="field-selections">');
		d = c.each.call(a, "selection", "in", "selections", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(60, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<input type="hidden" class="emptySelection" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "name"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" />");
		d = c["if"].call(a, "canAddSelection", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(62, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		return ""
	}, 60: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="field-selection" style="padding: 5px;"><input type="checkbox" disabled="disabled" style="display: inline-block;width: auto;vertical-align: middle; margin-right: 3px;"><label><span class="edit-text" style="cursor: text;">');
		d = c._triageMustache.call(a, "selection.text", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				valueBinding: "selection.text",
				maxlength: "150",
				"class": "editable-input required",
				type: "text"
			},
			hashTypes: {valueBinding: "STRING", maxlength: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {valueBinding: a, maxlength: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i class="fa fa-pencil edit-icon"></i><i class="fa fa-trash-o delete-selection" style="color: #333; margin: 0 0 0 5px; font-size: 14px;  cursor: pointer;"></i></label></div>');
		return ""
	}, 62: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<a href="javascript:void(0);" class="add-choice" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">+ ");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add_choice", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a>");
		return ""
	}, 64: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div class="field-selections">');
		d = c.each.call(a, "selection", "in", "selections", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(65, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<input type="hidden" class="emptySelection" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {name: "name"}, hashTypes: {name: "STRING"},
			hashContexts: {name: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(" />");
		d = c["if"].call(a, "canAddSelection", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(62, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		return ""
	}, 65: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="field-selection" style="padding: 5px;"><input type="radio" disabled="disabled" style="display: inline-block;width: auto;vertical-align: middle; margin-right: 3px;"><label><span class="edit-text" style="cursor: text;">');
		d = c._triageMustache.call(a, "selection.text", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				valueBinding: "selection.text",
				maxlength: "150",
				"class": "editable-input required",
				type: "text"
			},
			hashTypes: {valueBinding: "STRING", maxlength: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {valueBinding: a, maxlength: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i class="fa fa-pencil edit-icon"></i><i class="fa fa-trash-o delete-selection" style="color: #333; margin: 0 0 0 5px; font-size: 14px;  cursor: pointer;"></i></label></div>');
		return ""
	}, 67: function (a, c, d, b) {
		a = c["if"].call(a, "view.isCurrentStatusOffline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(68, b),
			inverse: this.program(70, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 68: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.langPreview || a && a.langPreview || d).call(a, "submit", {
			name: "langPreview",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 70: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.langPreview || a && a.langPreview || d).call(a, "start_chat", {
			name: "langPreview",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 72: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<span class="edit-text start-link">');
		b.buffer.push(d(c._triageMustache.call(a, "view.newLongGreeting", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {valueBinding: "onlineGreetingsPreview.longGreeting", "class": "editable-input"},
			hashTypes: {valueBinding: "STRING", "class": "STRING"},
			hashContexts: {valueBinding: a, "class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i class="fa fa-pencil edit-icon start-link"></i>');
		return ""
	}, 74: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<span class="edit-text start-link">');
		b.buffer.push(d(c._triageMustache.call(a, "view.newLongGreeting", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		b.buffer.push(d((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {
				valueBinding: "awayGreetingsPreview.longGreeting",
				"class": "editable-input"
			},
			hashTypes: {valueBinding: "STRING", "class": "STRING"},
			hashContexts: {valueBinding: a, "class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i class="fa fa-pencil edit-icon start-link"></i>');
		return ""
	}, 76: function (a, c, d, b) {
		b.buffer.push('<div id="embedArrow" class="widget-greetings-arrow"></div>')
	}, 78: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<span class="edit-text">');
		d = c._triageMustache.call(a, "onlineGreetingsPreview.actionMessage", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				maxlength: "60",
				valueBinding: "onlineGreetingsPreview.actionMessage",
				"class": "editable-input required",
				type: "text"
			},
			hashTypes: {maxlength: "STRING", valueBinding: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {maxlength: a, valueBinding: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i class="fa fa-pencil edit-icon"></i>');
		return ""
	}, 80: function (a, c, d, b) {
		a = c._triageMustache.call(a, "onlineGreetingsPreview.actionMessage", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		d = c.unless.call(a, "activeProperty.isPersonal",
			{
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-font"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_content", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeWidget.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><form id="widget-content-form" name="widget-content-form" class="smart-form admin-form"><div style="position : absolute; top : 0; bottom : 80px; width : 100%;"><div class="pull-left" style="width : 50%; height : 100%; position: relative;"><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 0; width: auto; overflow: auto; padding-right : 15px;"><fieldset><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "language_title", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClass: "language-type-select",
				selectedValue: "activeWidget.languageCode",
				optionsBinding: "view.languageSelectOptions"
			},
			hashTypes: {selectClass: "STRING", selectedValue: "ID", optionsBinding: "STRING"},
			hashContexts: {selectClass: a, selectedValue: a, optionsBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "content_description", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="radio"><input type="radio" name="edit-view" checked="checked" value="greetings-online" /><i></i>');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "when_online", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="radio"><input type="radio" name="edit-view" value="greetings-away" /><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "when_away", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="radio"><input type="radio" name="edit-view" value="offlineForm" /><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "when_offline", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div><label class="radio" style="display : inline-block"><input type="radio" name="edit-view" value="prechatForm" /><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "prechat_form", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		d = c["if"].call(a, "view.isPrechat", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="clearfix"></div></section><section class="padding-10 fields-actions">');
		d = c["if"].call(a, "view.currentForm.fieldsData.canAddFields", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</section><section class="whitelabel-view"></selection></fieldset></div></div><div class="pull-left" style="width : 50%; height : 100%; position : relative;"><div style="left: 0;right: 0;width: auto;max-width: 400px; border-left: 1px solid #e5e5e5; position: absolute; top : 0; bottom : 0; padding : 0 15px"><div><h4>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "content_editor", {
			name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</h4><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "content_editor_description", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div id="widget-max-preview-container" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isRTL:rtl-direction activeWidget.isInline::embed"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="border-wrapper"></div><div class="inner-preview-container"><div class="header-container change-background-color change-text-color"><div id="header-wrapper"><div class="headerBoxControlsContainer white"><div class="end-chat pull-right"></div><div class="popout pull-right"></div><div class="minimize pull-right"></div></div>');
		d = c["if"].call(a, "view.isCurrentStatusOnline", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(18, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.isCurrentStatusAway", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.isCurrentStatusOffline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div id="widget-chat-container"><div id="linkFormContainer"><div id="backLinkButton"><i class="fa fa-angle-left"></i><span>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "back", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></div><section><label class="capitalize">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_name", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><input type="text" id="link-name"><span class="warning link-name"></span></section><section><label class="uppercase">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "url", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="select-container">');
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.prefixUrlSelectClass",
				selectedValueBinding: "view.selectedPrefixValue",
				optionsBinding: "view.urlPrefixList"
			},
			hashTypes: {
				selectClassBinding: "STRING", selectedValueBinding: "STRING",
				optionsBinding: "STRING"
			},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</div><span class="input-container"><input type="text" id="link-body"></span><span class="warning link-body"></span></section><section class="save-button-container"><div id="save-url" class="link-form-button">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</div></section></div><div id="widget-form" class="form-container hidden"><div class="form-scroller"><p class="form-greetings-container"><span class="edit-text start-link">');
		d = c["if"].call(a, "view.currentForm.text.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(30, b),
			inverse: this.program(32, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		d = c["if"].call(a, "view.isPrechat", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(34, b),
			inverse: this.program(36, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i class="fa fa-pencil edit-icon start-link"></i></p>');
		d = c["if"].call(a, "view.isMaxLengthInvalid", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(38, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="addLinkButtonContainer"><div class="warning hidden">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "invalid_position", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div id="addLinkButton" class="link-form-button">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_link", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-link"></i></div></div><div class="form-fieldset"><div class="form-inner-container">');
		d = c.each.call(a, "view.currentForm.fieldsData.parsedFields", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(40, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div><div class="form-button-container"><div class="button-element change-background-color change-text-color">');
		d = c["with"].call(a, "activeWidget.languageCode", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(67, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div><div id="chat-container-wrapper"><div id="greetingsOverlay"><div id="greetingsWrapper"><div id="greetingsContainer">');
		d = c["if"].call(a, "view.isCurrentStatusOnline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(72, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.isCurrentStatusAway", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(74,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a, "view.longGreeting", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(76, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.isMaxLengthInvalid", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(38, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="addLinkButtonContainer"><div class="warning hidden">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invalid_position", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div id="addLinkButton" class="link-form-button">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_link", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-link"></i></div></div></div></div></div><div id="bottom-container"><div id="action-message">');
		d = c["if"].call(a, "view.isCurrentStatusOnline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(78, b),
			inverse: this.program(80, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="ratingContainer"></div><div id="footer-container"><div id="options" style="height: 32px; margin-left: 84px;"><div id="openMenu" style="position: absolute; left: 3px; bottom: 0; background:url(https://static-a.tawk.to/v2/a34/images/widget-menu.png); height : 29px; width : 80px;"></div></div><div id="widget-brand" style="position: absolute; bottom: 0; right: 6px; left: 86px; text-align: right; height: 30px; line-height: 30px; color: #000; font-size: 13px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-right : 3px; font-weight : normal;"><a href="https://tawk.to" target="_blank" style="text-decoration: none; color: inherit;">Powered by <span style="font-size: 13px; font-weight: 700">tawk.to</span></a></div></div></div></div></div></div></div></div><div class="clearfix"></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.widgetDomains = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		a = c["if"].call(a, "activeProperty.isSite", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		a ? b.buffer.push(a) : b.buffer.push("")
	}, 2: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa  fa-angle-right"></i>');
		a = c._triageMustache.call(a, "activeWidget.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 4: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<section><label class="checkbox">');
		d = c["if"].call(a, "activeWidget.sessionsShared",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.program(7, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("<i></i>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_restriction_share", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></section>");
		return ""
	}, 5: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" id="enable-sharing" checked="checked" />')
	},
	7: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" id="enable-sharing" />')
	}, 9: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="input"><a href="javascript:void(0);" class="button-icon icon-append delete-domain tooltip-hover" data-placement="top" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_domain", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a>');
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				placeholderKey: "add_domain",
				nameBinding: "this.id",
				idBinding: "this.id",
				value: "value",
				"class": "required validDomain domain-whitelist",
				type: "text"
			},
			hashTypes: {
				placeholderKey: "STRING",
				nameBinding: "STRING",
				idBinding: "STRING",
				value: "ID",
				"class": "STRING",
				type: "STRING"
			},
			hashContexts: {placeholderKey: a, nameBinding: a, idBinding: a, value: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section>");
		return ""
	}, 11: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button id="add-domain" type="button" class="btn btn-default">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_domain", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-link"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_restriction", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeWidget.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container" class="smart-form"><form id="widget-domain-form" name="widget-domain-form" class="admin-form"><div id="form-scrollable-container"><section><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "domain_restriction_description", {
			name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</p></section>");
		d = c["if"].call(a, "domainWhiteList.domains.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "domainWhiteList.domains", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.unless.call(a, "domainWhiteList.disableAdd",
			{
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.widgetScheduler = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		return ""
	}, 3: function (a, c, d, b) {
		a = c["if"].call(a, "activeProperty.isSite", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(4, b),
			inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 4: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		a = c._triageMustache.call(a, "activeWidget.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li class="city-select select2-result select2-result-selectable" role="presentation" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "index"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' ><div class="select2-result-label" role="option"><span>');
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span></div></li>");
		return ""
	}, 8: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div style="margin-bottom : 10px; height : 40px;"><div class="col-xs-6 col-sm-6 col-md-6 col-lg-2"><label class="checkbox">');
		d = c["if"].call(a, "schedule.isOn", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.program(11, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("<i></i>");
		d = c._triageMustache.call(a, "schedule.label", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		b.buffer.push('</label></div><div class="col-xs-6 col-sm-6 col-md-6 col-lg-10"><div class="form-group hidden"><input ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "schedule.rangeId"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' type="text" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "schedule.rangeId"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' value=""></div><p class="closed hidden" style="margin-top : 5px; color : red">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "operation_closed", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><div class="clearfix"></div></div>');
		return ""
	}, 9: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				checked: "checked",
				name: "schedule.labelIds",
				id: "schedule.labelId",
				"class": "day-on",
				type: "checkbox"
			},
			hashTypes: {
				checked: "STRING",
				name: "ID", id: "ID", "class": "STRING", type: "STRING"
			},
			hashContexts: {checked: a, name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 11: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {name: "schedule.labelIds", id: "schedule.labelId", "class": "day-on", type: "checkbox"},
			hashTypes: {name: "ID", id: "ID", "class": "STRING", type: "STRING"},
			hashContexts: {name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, compiler: [6,
		">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		d = c.unless.call(a, "activeProperty.isPersonal", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache", hash: {},
			hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-clock-o"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "scheduler", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeWidget.id", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(3, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container" class="smart-form"><form id="widget-scheduler-form" name="widget-scheduler-form" class="admin-form"><div id="form-scrollable-container"><section><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "scheduler_explanation", {
			name: "I18n", hash: {context: "admin"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</p></section><section><div class="col-xs-6 col-sm-6 col-md-6 col-lg-2"><label class="label" style="height: 30px; line-height: 30px; vertical-align: middle; margin: 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enable_scheduler", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="col-xs-6 col-sm-6 col-md-6 col-lg-10"><label class="toggle" style="height: 30px; line-height: 30px; vertical-align: middle; margin: 0;">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {name: "hours-status", id: "hours-status", type: "checkbox"},
			hashTypes: {name: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {name: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('<i data-swchon-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "yes", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "no", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" for="hours-status"></i></label></div><div class="clearfix"></div></section><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "scheduler.enabled::form-disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="margin-right : 10px;"><section><div class="col-xs-6 col-sm-6 col-md-6 col-lg-2"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "operating_city", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="col-xs-6 col-sm-6 col-md-6 col-lg-10"><label class="select custom-select" style="max-width: 500px"><div id="schedule-city-list" class="select2-drop select2-display-none"><ul class="select2-results" role="listbox">');
		d = c.each.call(a, "view.cityList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><label class="input">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				autocomplete: "off",
				valueBinding: "scheduler.settings.city",
				placeholderKey: "enter_text",
				name: "schedule-city",
				id: "schedule-city",
				"class": "required",
				type: "text"
			},
			hashTypes: {
				autocomplete: "STRING",
				valueBinding: "STRING",
				placeholderKey: "STRING",
				name: "STRING",
				id: "STRING",
				"class": "STRING",
				type: "STRING"
			},
			hashContexts: {
				autocomplete: a,
				valueBinding: a,
				placeholderKey: a,
				name: a,
				id: a,
				"class": a,
				type: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label><i></i></label></div><div class="clearfix"></div></section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "operating_hours", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		d = c.each.call(a,
			"schedule", "in", "view.scheduler", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID", "ID", "ID"],
				contexts: [a, a, a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</section></div></div><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.widgetSettings = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<i class="fa fa-angle-right"></i>');
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span id="second-title"><i class="fa fa-angle-right"></i><i class="fa fa-cog"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_settings", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		a = c["if"].call(a, "activeProperty.isSite", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 4: function (a, c, d, b) {
		b.buffer.push('<span id="third-title"><i class="fa fa-angle-right"></i>');
		a = c._triageMustache.call(a, "activeWidget.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span id="second-title"><i class="fa fa-angle-right"></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_widget", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 8: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="label" for="site-name">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_name", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input">');
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				placeholderKey: "widget_name",
				value: "activeWidget.name",
				maxlength: "75",
				name: "widget-name",
				id: "widget-name",
				"class": "required",
				type: "text"
			},
			hashTypes: {
				placeholderKey: "STRING",
				value: "ID",
				maxlength: "STRING",
				name: "STRING",
				id: "STRING",
				"class": "STRING",
				type: "STRING"
			},
			hashContexts: {placeholderKey: a, value: a, maxlength: a, name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section>");
		a = c["if"].call(a, "activeWidget.id", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(9, b), inverse: this.program(11,
				b), types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 9: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_type", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" : ");
		d = c._triageMustache.call(a, "activeWidget.type", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</label></section><section><div class="form-table"><div class="form-table-row"><label class="label inline-label" for="widget-status" style="padding-left: 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_status", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group" ><label class="toggle"><input type="checkbox" name="widget-status" id="widget-status" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "activeWidget.isEnabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i data-swchon-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "disabled_text",
			{
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('"></i></label></div></div></div><div class="clearfix"></div></section>');
		return ""
	}, 11: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><div class="form-table"><div class="form-table-row"><label class="label inline-label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_type", {
			name: "I18n", hash: {context: "widgets"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('&nbsp;<button id="open-site-info" class="btn btn-info open-info"><i class="fa fa-question"></i></button>&nbsp;:&nbsp;</label><div class="inline-group" ><div class="form-table-cell"><label class="radio"><input type="radio" id="inline-type" name="widget-type" checked="checked" /><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "inline", {
			name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" id="embed-type" name="widget-type" /><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "embed", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div></div></div></div><div class="ajax-dropdown property-info" style="top: auto;"><div><h4>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "widget_type_explained", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h4><p>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "inline_widget_explanation", {
			name: "I18n",
			hash: {
				variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u><\\/strong>", "linkStart" : "<a href=\'http:\\/\\/tawk.to\' target=\'_blank\' class=\'link\'>", "linkEnd" : "<\\/a>"}',
				context: "widgets"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p><p>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "embed_widget_explanation", {
			name: "I18n",
			hash: {
				externalLink: '{"variable" : "linkStart", "controller" : "webProperties", "property" : "personalPage.profilePageLink"}',
				replaceVar: "true",
				variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u><\\/strong>", "linkEnd" : "<\\/a>"}',
				context: "widgets"
			},
			hashTypes: {externalLink: "STRING", replaceVar: "STRING", variables: "STRING", context: "STRING"},
			hashContexts: {externalLink: a, replaceVar: a, variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div></div></section>");
		return ""
	}, 13: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push("<section><div><p>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "behavior_description", {
			name: "I18n", hash: {context: "widgets"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</p></div></section>");
		d = c["if"].call(a, "activeWidget.isInline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<section><label class="checkbox">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {checkedBinding: "activeWidget.hideEstimatedWaitTime", id: "hide-wait-time", type: "checkbox"},
			hashTypes: {
				checkedBinding: "STRING",
				id: "STRING", type: "STRING"
			},
			hashContexts: {checkedBinding: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("<i></i>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "hide_estimate", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="clearfix"></div><label class="checkbox ">');
		b.buffer.push(f((c.input || a && a.input || e).call(a, {
			name: "input",
			hash: {
				checkedBinding: "activeWidget.disableSound",
				id: "disable-sound", type: "checkbox"
			},
			hashTypes: {checkedBinding: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {checkedBinding: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("<i></i>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "sound_disable", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="clearfix"></div>');
		d = c["if"].call(a, "activeWidget.isInline", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</section>");
		return ""
	}, 14: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="label pull-left" style="margin-right : 8px; margin-top : 4px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "on_click", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : </label><div class="inline-group" ><label class="radio"><input type="radio" id="maximize-onclick" name="onclick-action"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "maximize", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="radio"><input type="radio" id="popout-onclick" name="onclick-action"><i></i>');
		b.buffer.push(e((c.I18n || a &&
			a.I18n || d).call(a, "popout", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="clearfix"></div></section>');
		return ""
	}, 16: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="checkbox ">');
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {checkedBinding: "activeWidget.hideOffline", id: "hide-offline", type: "checkbox"},
			hashTypes: {
				checkedBinding: "STRING",
				id: "STRING", type: "STRING"
			},
			hashContexts: {checkedBinding: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("<i></i>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "hide_offline", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="clearfix"></div><label class="checkbox widget-settings-tooltip" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "hide_on_load_tooltip",
			{
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('">');
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {checkedBinding: "activeWidget.hideOnload", id: "hide-onload", type: "checkbox"},
			hashTypes: {checkedBinding: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {checkedBinding: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("<i></i>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
			"hide_load", {
				name: "I18n",
				hash: {context: "widgets"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</label><div class="clearfix"></div><label class="checkbox ">');
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {checkedBinding: "activeWidget.hideOnMobile", id: "hide-mobile", type: "checkbox"},
			hashTypes: {checkedBinding: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {checkedBinding: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("<i></i>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "hide_mobile", {
			name: "I18n",
			hash: {context: "widgets"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		return ""
	}, 18: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button id="delete" type="button" class="btn btn-danger">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><div id="title-breadcrumb-container"><span id="main-title">');
		d = c.unless.call(a, "activeProperty.isPersonal", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "activeProperty.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		d = c["if"].call(a, "activeWidget.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(6, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container" class="smart-form"><form id="widget-settings-form" name="widget-settings-form" class="admin-form"><fieldset>');
		d = c["if"].call(a, "activeProperty.isSite", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeWidget.id", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</fieldset><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		d = c.unless.call(a, "activeWidget.isDefault", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</footer></form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.alertBox = Ember.Handlebars.template({
	compiler: [6,
		">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><i class="fa fa-exclamation-triangle"></i><span class="modal-title-tawk">');
		d = c._triageMustache.call(a, "view.title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;">');
		b.buffer.push(e(c._triageMustache.call(a, "view.message", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div class="modal-footer"><button id="cancel" type="button" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ok", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.banListView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<p class="filter-query-text">&nbsp;:&nbsp;');
		a = c._triageMustache.call(a, "searchQueryText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</p>");
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<table id="ban-list-list" class="table table-striped table-bordered table-hover dataTable no-footer" role="grid" aria-describedby="dt_basic_info"><thead><tr role="row"><th aria-controls="dt_basic" class="text-center" style="width: 15%">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_entry", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th aria-controls="dt_basic" class="text-center" style="width: 10%">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "location", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th aria-controls="dt_basic" class="text-center" style="width: 10%">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_page", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th  aria-controls="dt_basic" class="text-center">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_reason", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th aria-controls="dt_basic" class="text-center" style="width: 15%">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "banned_by", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th aria-controls="dt_basic" class="text-center" style="width: 10%">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "banned_on", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th class="delete-cell padding-top-0 padding-bottom-0">');
		d = c["if"].call(a, "hasBansToDelete", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</th></tr></thead><tbody>");
		d = c.each.call(a, "list", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</tbody></table>");
		d = c.unless.call(a, "list.length", {
			name: "unless", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(15, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 4: function (a, c, d, b) {
		b.buffer.push('<a href="javascript:void(0);" id="bulk-unban" class="btn btn-default txt-color-blueDark" ><i class="fa fa-trash-o fa-lg"></i></a>')
	}, 6: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<tr class="show-ban-list" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-id": "this.id"}, hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><td class="text-center">');
		d = c._triageMustache.call(a, "displayText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c["if"].call(a, "country", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		b.buffer.push(e(c._triageMustache.call(a, "propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</td><td>");
		d = c._triageMustache.call(a, "reason", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		b.buffer.push(e(c._triageMustache.call(a, "bannedBy", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a, "createdOn", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="delete-cell">');
		d = c["if"].call(a, "isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "country"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></div>");
		a = c["if"].call(a, "city", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 8: function (a, c, d, b) {
		b.buffer.push('<span class="city">(');
		a = c._triageMustache.call(a, "city", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push(")</span>");
		return ""
	}, 10: function (a, c, d, b) {
		b.buffer.push('<div class="smart-form"><label class="checkbox">');
		a = c["if"].call(a, "toBeDeleted", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push('<i class="delete-select"></i></label></div>');
		return ""
	}, 11: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" class="delete-checkbox" checked="checked"/>')
	}, 13: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" class="delete-checkbox"/>')
	}, 15: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="no-data"><p class="no-history">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "empty_ban_list", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div>");
		return ""
	}, 17: function (a, c, d, b) {
		a = c["if"].call(a, "view.error", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.program(20, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 18: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="load-container text-center"><button class="btn btn-danger reload-view">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "reload_error", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div>");
		return ""
	}, 20: function (a, c, d, b) {
		b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div id="breadcrumb" class="hidden-md hidden-lg"><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><div class="content"><div class="row view-header"><div class="col-xs-12 col-sm-6 col-md-6 col-lg-6"><h1 class="page-title txt-color-blueDark">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n", hash: {context: "ban_list"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</h1></div><div  id="add-button-container" class="col-xs-12 col-sm-2 col-md-2 col-lg-2" style="margin-top: -3px;"><button id="ban-ip" type="button" class="btn btn-primary pull-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_ip", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div><div id="search-list-container" class="col-xs-12 col-sm-4 col-md-4 col-lg-4"><form id="search-ban-list"><fieldset><div class="input-group"><input type="text" class="form-control" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search_ban_list", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" id="search-text" /><div class="input-group-btn"><button id="open-filter" type="button" class="btn btn-default" tabindex="-1" aria-expanded="false"><span class="caret"></span></button><button type="button" class="btn btn-primary search" tabindex="-1"><i class="fa fa-search"></i></button><div class="dropdown-menu pull-right smart-form" role="menu" id="ban-list-filter"><fieldset><section>');
		d = c._triageMustache.call(a, "webPropertySelect", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</section></fieldset><footer><button type="submit" class="btn btn-primary search">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn bg-color-teal txt-color-white" id="reset-filter">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-default" id="close-filter">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></div></div></div></fieldset></form></div></div><div class="innerContent" style="bottom : 50px;"><section id="widget-ban-list" class="col-sm-12"><div class="row"><div id="ban-list-section" class="view-section"><article><div class="jarviswidget" id="wid-id-0" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" style="margin: 0;"><header><span class="widget-icon"> <i class="fa fa-ban"></i> </span><h2>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h2>");
		d = c["if"].call(a, "searchQueryText", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</header><div role="content">');
		d = c["if"].call(a, "view.loaded", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(17, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></article></div></div></section></div><div class="view-footer"><div class="btn-group pull-right" style="margin-top: 8.5px;"><a id="prev-page" ');
		b.buffer.push(f(c.action.call(a, "previousPage", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :prev previousDisabled:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);" data-placement="top" data-original-title="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "previous_text", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-page" ');
		b.buffer.push(f(c.action.call(a, "nextPage", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :next nextDisabled:disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);" data-placement="top" data-original-title="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"next_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('"><i class="fa fa-chevron-right"></i></a></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.banForm = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span class="modal-title-tawk">&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_ip", {
			name: "I18n", hash: {context: "ban_list"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span class="modal-title-tawk">&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "edit_ban", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="select">');
		b.buffer.push(e((c.webPropertySelect || a && a.webPropertySelect || d).call(a, {
			name: "webPropertySelect",
			hash: {adminOnly: "true", noAll: "true"},
			hashTypes: {adminOnly: "STRING", noAll: "STRING"},
			hashContexts: {adminOnly: a, noAll: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label>");
		return ""
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<input type="hidden" id="property-id" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {value: "itemInEditMode.propertyId"},
				hashTypes: {value: "ID"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' /><label class="label">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "site_page", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input">');
		a = c._triageMustache.call(a, "itemInEditMode.propertyName", {
			name: "_triageMustache", hash: {},
			hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label>");
		return ""
	}, 9: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="label" for="ban-entry">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ip_address", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="ipAddress required" id="ban-entry" name="ban-entry" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_ip_address", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label>');
		return ""
	}, 11: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<input type="hidden" id="ban-entry" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "itemInEditMode.entry"},
			hashTypes: {value: "ID"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /><label class="label">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "ban_entry", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input">');
		a = c._triageMustache.call(a, "itemInEditMode.displayText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label>");
		return ""
	}, 13: function (a, c, d, b) {
		b.buffer.push('<div class="transcript-divider"></div>')
	}, 15: function (a, c, d, b) {
		b.buffer.push('<div class="transcript-view">');
		a = c["if"].call(a, "itemInEditMode.transcript.isLoaded", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.program(24, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, 16: function (a, c, d, b) {
		b.buffer.push('<div id="transcriptBody">');
		d = c.each.call(a, "itemInEditMode.transcript.content",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c.unless.call(a, "itemInEditMode.transcript.content.length", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		return ""
	}, 17: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<div class="clear"></div>');
		return ""
	}, 19: function (a, c, d, b) {
		a = c["if"].call(a, "itemInEditMode.isVisitor", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.program(22, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 20: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "no_transcript_visitor", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 22: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_transcript_ip", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 24: function (a, c, d, b) {
		a = c["if"].call(a, "itemInEditMode.transcript.isError",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(25, b),
				inverse: this.program(27, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 25: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="load-container text-center"><button class="btn btn-danger reload-view">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "transcript_error", {
			name: "I18n", hash: {context: "ban_list"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button></div>");
		return ""
	}, 27: function (a, c, d, b) {
		b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
	}, 29: function (a, c, d, b) {
		a = c["if"].call(a, "itemInEditMode.isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(30, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 30: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<button type="button" class="btn btn-danger delete-ban" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "itemInEditMode.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-propertyId": "itemInEditMode.propertyId"},
			hashTypes: {"data-propertyId": "STRING"},
			hashContexts: {"data-propertyId": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "delete_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><div><h4 class="modal-title" id="myModalLabel"><i class="fa fa-scissors" alt="test"></i>');
		d = c["if"].call(a, "itemInEditMode.newEntry", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</h4></div></div><div class="modal-body" style="overflow:auto;"><form id="ban-form" name="ban-form" class="smart-form"><input type="hidden" id="ban-id" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "itemInEditMode.id"},
			hashTypes: {value: "ID"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /><input type="hidden" id="ban-type" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "itemInEditMode.type"},
			hashTypes: {value: "ID"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><section>");
		d = c["if"].call(a, "itemInEditMode.newEntry", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(7, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</section><section>");
		d = c["if"].call(a, "itemInEditMode.newEntry", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.program(11, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</section><section><label class="label" for="ban-reason">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_reason", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea">');
		b.buffer.push(e((c.textarea || a && a.textarea || f).call(a, {
			name: "textarea",
			hash: {
				valueBinding: "itemInEditMode.reason",
				name: "ban-reason",
				id: "ban-reason",
				rows: "3",
				"class": "required",
				placeholderKey: "enter_ban_reason"
			},
			hashTypes: {
				valueBinding: "STRING",
				name: "STRING",
				id: "STRING",
				rows: "STRING",
				"class": "STRING",
				placeholderKey: "STRING"
			},
			hashContexts: {valueBinding: a, name: a, id: a, rows: a, "class": a, placeholderKey: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section></form>");
		d = c["if"].call(a, "itemInEditMode.transcript.content.length",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c.unless.call(a, "itemInEditMode.newEntry", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</button>");
		d = c.unless.call(a, "itemInEditMode.newEntry", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(29, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<button type="button" class="btn btn-primary" id="submit">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.browserAppSessions = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		a = c.each.call(a, "existingSessions.list", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.program(7, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 2: function (a, c, d, b) {
		var e =
			this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div><div class="session-info pull-left"><span ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "this.countryFlag"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></span>&nbsp;<span ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "this.browser"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></span>&nbsp;<span>");
		d = c._triageMustache.call(a, "ip", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></div><div class="pull-right">');
		d = c["if"].call(a, "removing", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "errorRemoving", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(5, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<button class="btn btn-tawk-pink btn-sm end-session" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "this.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "end_session", {
			name: "I18n",
			hash: {context: "browser_app_sessions"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div><div class="clearfix"></div>');
		return ""
	}, 3: function (a, c, d, b) {
		b.buffer.push("<i class='fa fa-refresh fa-spin'></i>")
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span class="label label-danger"><i class="fa-fw fa fa-warning"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "end_session_fail", {
			name: "I18n",
			hash: {context: "browser_app_sessions"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 7: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="no-data"><p class="no-history">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "empty_session_list", {
			name: "I18n",
			hash: {context: "browser_app_sessions"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div>");
		return ""
	}, 9: function (a, c, d, b) {
		a = c["if"].call(a, "view.error", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.program(12, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 10: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="load-container text-center"><button class="btn btn-danger reload-view">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "reload_error", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div>");
		return ""
	}, 12: function (a, c, d, b) {
		b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><div><h4 class="modal-title" id="myModalLabel"><i class="fa fa-user" alt="test"></i><span class="modal-title-tawk">&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "browser_app_sessions", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></h4></div></div><div class="modal-body">');
		d = c["if"].call(a, "view.loaded", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(9, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.agentChat = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-group"></i>')
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<i ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "view.content.status :agent-status"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("></i>");
		return ""
	}, 5: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.content.groupName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "view.content.name", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})))
	}, 9: function (a, c, d, b) {
		b.buffer.push('<a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn invite-groups" rel="tooltip" data-placement="bottom" data-original-title="Invite agent to groups"><i class="fa fa-group"></i><i class="fa fa-plus" style="font-size: 10px;"></i></a>')
	}, 11: function (a, c, d, b) {
		b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0; float: right;"><li class="open-view open-group-details active"><a href="javascript:void(0);" class="tab" rel="tooltip" data-toggle="dropdown" data-placement="bottom"><i class="fa fa-info"></i></a></li></ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown"><li><a href="javascript:void(0);" class="open-group-details text-left"><i class="fa fa-ticket"></i> Group Details</a></li>');
		a = c["if"].call(a, "view.menuFits", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul></div>");
		return ""
	}, 12: function (a, c, d, b) {
		b.buffer.push('<li><a href="javascript:void(0);" class="edit-group-name text-left"><i class="fa fa-edit"></i> Edit group name</a></li><li><a href="javascript:void(0);" class="invite-member text-left"><i class="fa fa-user fa-lg"></i><i class="fa fa-plus" style="font-size: 12px;"></i> Add Member</a></li><li><a href="javascript:void(0);" class="leave-group text-left"><i class="fa fa-sign-out fa-lg"></i> Leave group</a></li>')
	},
	14: function (a, c, d, b) {
		b.buffer.push('<div class="alert alert-danger fade in text-center" style="z-index: 1; position:absolute; top :  0; left : 0; right : 0;"><button class="close" data-dismiss="alert">\u00d7</button><a href="javascript:void(0);" style="color : #fff; text-decoration: underline;" class="reload-message">Unable to load messages. Click here to retry.</a></div>')
	}, 16: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="unseen-message-container" style="z-index: 1; top : 0;"><span class="text">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_messages", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span><i class="fa fa-arrow-up"></i><a class="mark-read" href="javascript:void(0);" style="position: absolute;right: 8px;color: #fff;border-left: 1px solid #fff;padding-left: 8px;top: 0; bottom: 0;" data-placement="bottom" data-original-title="Mark as read"><i class="fa fa-close"></i></a></div>');
		return ""
	}, 18: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":agent-chat-older view.isLoadingHistory:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><p>");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "scroll_up_to_load", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div>");
		return ""
	}, 20: function (a, c, d, b) {
		b.buffer.push('<div class="loading-old-chat"><img src="https://static-a.tawk.to/v2/a34/images/ajax-loader-small.gif" /></div>')
	}, 22: function (a, c, d, b) {
		b.buffer.push('<div class="date-container"><div class="line"></div><div class="date">');
		d = c._triageMustache.call(a, "date", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		d = c.each.call(a,
			"inner", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		return ""
	}, 23: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="conversation-block"><p class="agent-name">');
		b.buffer.push(d(c._triageMustache.call(a, "agentName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><div class="clear"></div>');
		a = c.each.call(a, "messages", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push('</div><div class="clear"></div>');
		return ""
	}, 24: function (a, c, d, b) {
		var e = this.escapeExpression;
		d = c["if"].call(a, "co", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(25, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="conversation-content">');
		b.buffer.push(e(c._triageMustache.call(a, "m", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		d = c["if"].call(a, "isNew", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 25: function (a, c, d, b) {
		b.buffer.push('<div class="msg-time">');
		a = c._triageMustache.call(a, "co", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, 27: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="new-message-container"><div class="left-border"><div class="border"></div></div><div class="text">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_messages", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div class="right-border"><div class="border"></div></div></div>');
		return ""
	}, 29: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="alert alert-info fade in"><button class="close" data-dismiss="alert">\u00d7</button>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "invited_group", {
			name: "I18n",
			hash: {context: "agent_chat"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 31: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="chat-details-container" style="white-space: normal;"><div class="details-container"><div class="details-view menu-content"><div class="section-header" style="display: none;"><div class="title-container"><p>');
		d = c._triageMustache.call(a, "view.sectionHeader", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div class="group-members-container" style="position : relative; width : 100%; height : 100%"><div style="position : absolute; top : 0; bottom : 0; height : auto; width : auto; overflow : auto; left : 10px; right : 10px;"><h3><i class="fa fa-group"></i> ');
		d = c._triageMustache.call(a, "view.content.participants.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(' Members</h3><ul class="list-unstyled" style="list-style: none; padding : 5px;">');
		d = c.each.call(a, "view.content.participants", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(32, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div></div><div class="hidden agents-list smart-form floating-view-container" style="width: 100%; height : 100%;"><div style="position : absolute; top : 0; bottom : 45px; height : auto; left : 0; right : 0; width : auto; padding : 0 8px;"><div class="select-group-container"><label class="select">');
		d = c._triageMustache.call(a, "webPropertySelect", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</label></div><div><label class="input"><input type="text" class="filter-agent" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "find_agent", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></div>');
		d = c["if"].call(a, "view.agentList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(34, b),
			inverse: this.program(41, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div style="position: absolute; bottom : 0; height : 40px; width : 100%; text-align : center; border-top: 1px solid #ccc;"><button type="submit" class="btn btn-default close-agent-list" style="margin: 4px 2%;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-primary select-agents" style=" margin: 4px 2%;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div><div class="group-name-form-container hidden floating-view-container" style="width: 100%; height : 100%;"><form class="group-name-form smart-form" name="group-name-form" style="width: 100%; height : 100%; padding : 10px;"><fieldset><section><label class="input"><input type="text" class="required groupNameFormat group-name" placeholder="Group Name" maxlength="21" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "view.content.name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section></fieldset><footer><button class="btn btn-primary save-name">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-default cancel-name-edit">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></form></div></div></div></div><div class="details-button-container"><button class="btn btn-default button-icon edit-group-name" data-placement="top"data-original-title="Edit Group Name"><i class="fa fa-edit"></i></button><button class="btn btn-primary button-icon invite-member" data-placement="top"data-original-title="Add Member"><i class="fa fa-user fa-lg"></i><i class="fa fa-plus" style="font-size: 12px;"></i></button><button class="btn btn-danger button-icon leave-group" rel="tooltip" data-placement="top"data-original-title="Leave Group" ><i class="fa fa-sign-out fa-lg"></i></button></div><i class="fa fa-ellipsis-v"></i></div>');
		return ""
	}, 32: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li style="margin-bottom : 10px;"><div><p style="margin : 0; white-space: pre-wrap; word-wrap: break-word;"><i ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "status :agent-status"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i>");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</p></div></li>");
		return ""
	}, 34: function (a, c, d, b) {
		b.buffer.push('<ul class="list-unstyled" style="position: absolute; top : 100px; bottom : 0; overflow : auto; left : 8px; right : 8px; width : auto;">');
		a = c["if"].call(a, "view.filterMatch", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(35, b),
			inverse: this.program(39, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	},
	35: function (a, c, d, b) {
		a = c.each.call(a, "view.agentList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(36, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 36: function (a, c, d, b) {
		a = c["if"].call(a, "isShown", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(37, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 37: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li class="padding-5" style="word-wrap: break-word;"><label class="checkbox"><input type="checkbox" name="checkbox" class="agent-select" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></li>");
		return ""
	}, 39: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="empty-list-message">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_agent_match_filter", {
			name: "I18n",
			hash: {context: "other_html"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 41: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="empty-list-message">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_agent_to_invite_in_current_list", {
			name: "I18n",
			hash: {context: "other_html"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 43: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="chat-details-container group-invitation-list hidden"><div class="details-container"><div class="details-view menu-content"><div class="section-header" style="display: none;"><div class="title-container"><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "details", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div class="smart-form invite-groups-form floating-view-container" style="padding : 10px;"><fieldset>');
		d = c["if"].call(a, "view.availableGroups.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(44, b),
			inverse: this.program(47, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</fieldset><footer><button class="btn btn-primary select-groups" style=" margin: 4px 2%;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-default close-groups-list" style="margin: 4px 2%;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></div></div></div></div><div class="details-button-container"></div></div>');
		return ""
	}, 44: function (a, c, d, b) {
		b.buffer.push('<p style="margin-bottom : 10px;">Select the groups you would like to invite this agent to :</p><section><label class="checkbox"><input type="checkbox" class="all-groups" name="all-groups" /><i></i>Select All</label><hr/></section>');
		a = c.each.call(a, "view.availableGroups", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(45, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push('<div class="message-container" style="position: absolute; bottom : 0; left :0; right : 0;"></div>');
		return ""
	}, 45: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<section><label class="checkbox"><input type="checkbox" class="group-participants" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "groupId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "groupName"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' name="group-list[]" /><i></i>');
		a = c._triageMustache.call(a, "groupName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label></section>");
		return ""
	}, 47: function (a, c, d, b) {
		b.buffer.push('<div class="empty-list-message">This agent is already part of all your groups.</div>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":jarviswidget view.content.inView:focus-chat newChat:unseen"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-widget-editbutton="false" data-widget-custombutton="false" data-widget-fullscreenbutton="false"><header ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":chat-header view.content.newMessage:flash-new-message"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: relative;"><ul class="header-list"><li class="name-text-container"><div class="name-container"><div class="agent-status-container">');
		d = c["if"].call(a, "view.content.isGroup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><h2 class="name-text">');
		d = c["if"].call(a, "view.content.isGroup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(7, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</h2></div></li><li class="menu-container" style="float: right; margin-left : -100%;"><div class="jarviswidget-ctrls" role="menu">');
		d = c.unless.call(a, "view.content.isGroup", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn popout-chat" rel="tooltip" data-placement="bottom" data-original-title="Popout chat window"><i class="fa fa-external-link fa-rotate-90"></i></a><a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn end-chat" rel="tooltip" title="" data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "end", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a></div>');
		d = c["if"].call(a, "view.content.isGroup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></li><ul/></header><div class="chat-message-container"><div class="chat-content-container" role="content">');
		d = c["if"].call(a, "view.content.loadError", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.content.hasMoreUnseen", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="chat-body custom-scroll scrollable-view"><div class="chat-table-wrapper"><div class="chat-row-wrapper"><div class="chat-wrapper">');
		d = c["if"].call(a, "view.content.hasOlder", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="previouschat-content padding-10">');
		d = c["if"].call(a, "view.isLoadingHistory", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "view.content.previousConversation", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="chat-content padding-10"></div>');
		d = c["if"].call(a, "view.content.invited", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(29, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a, "view.content.invited", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(29, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div><div class="chat-footer"><div class="textarea-div"><div class="drop-text"><span>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "drag_drop_text", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></div><div class="typearea"><a class="open-emoji" href="javascript:void(0);"><i class="fa fa-smile-o"></i></a><textarea class="custom-scroll chat-input message-input" style="height: 40px; min-height : auto; overflow-y: hidden;"></textarea></div></div></div></div>');
		d = c["if"].call(a, "view.content.isGroup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(31, b),
			inverse: this.program(43, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.popoutAgentChat = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<span style=" width: 120px;"><i class="fa fa-group"></i>');
		a = c._triageMustache.call(a, "groupName", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<span  style=" width: 120px;"><i ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {title: "status"},
			hashTypes: {title: "STRING"},
			hashContexts: {title: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i>");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 5: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<a href="javascript:void(0);" class="control edit-group" data-original-title="Edit Group Name" data-placement="bottom"><i class="fa fa-edit fa-lg"></i></a><a href="javascript:void(0);"  class="control invite-agents" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "view.agentTooltip"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="bottom"><i class="fa fa-user fa-lg"></i><span class="total-participants">');
		d = c._triageMustache.call(a, "participants.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></a><a href="javascript:void(0);" class="control leave-group pull-right" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "leave_group", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="bottom"><i class="fa fa-sign-out fa-lg"></i></a>');
		return ""
	}, 7: function (a, c, d, b) {
		b.buffer.push('<a href="javascript:void(0);" class="control invite-groups" data-original-title="Invite agent to groups" data-placement="bottom"><i class="fa fa-group"></i><i class="fa fa-plus"></i></a>')
	},
	9: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="group-participants smart-form"><ul class="list-unstyled">');
		d = c.each.call(a, "participants", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul><footer><button type="submit" class="btn btn-default close-agent-list">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-primary add-agents">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></div><div class="group-name-container smart-form"><form class="group-name-form" name="group-name-form"><fieldset><section><label class="input"><input type="text" class="required groupNameFormat group-name" placeholder="Group Name" maxlength="21" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "name"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></section></fieldset><footer><button type="submit" class="btn btn-default close-group-form">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-primary save-name">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></form></div><div class="agents-list smart-form"><div class="select-group-container" style="padding : 5px;"><label class="select">');
		d = c._triageMustache.call(a, "webPropertySelect", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</label></div><div style="padding : 5px;"><label class="input"><input type="text" class="filter-agent" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "find_agent", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></div>');
		d = c["if"].call(a, "view.agentList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b),
			inverse: this.program(19, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<footer><button type="submit" class="btn btn-default close-agent-list">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-primary select-agents">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button></footer></div>");
		return ""
	}, 10: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "status"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i></i><p class="agent-name">');
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache", hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"}, hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</p></li>");
		return ""
	}, 12: function (a, c, d, b) {
		b.buffer.push('<ul class="list-unstyled member-list">');
		a = c["if"].call(a, "view.filterMatch", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.program(17, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	}, 13: function (a, c, d, b) {
		a = c.each.call(a, "view.agentList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 14: function (a, c, d, b) {
		a = c["if"].call(a, "isShown", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 15: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li><label class="checkbox"><input type="checkbox" name="checkbox" class="agent-select" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></li>");
		return ""
	}, 17: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="empty-list-message">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_agent_match_filter", {
			name: "I18n",
			hash: {context: "other_html"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 19: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="empty-list-message">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_agent_to_invite_in_current_list", {
			name: "I18n",
			hash: {context: "other_html"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 21: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="group-invitation-list hidden smart-form"><ul class="list-unstyled">');
		d = c["if"].call(a, "view.availableGroups.length", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(22, b), inverse: this.program(25, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul><div class="message-container" style="position: absolute; bottom : 0; z-index : 1;"></div><footer><button type="submit" class="btn btn-default close-groups-list">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		d = c["if"].call(a, "view.availableGroups.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</footer></div>");
		return ""
	}, 22: function (a, c, d, b) {
		b.buffer.push('<li>Select the groups you would like to invite this agent to :</li><li><label class="checkbox"><input type="checkbox" class="all-groups" name="all-groups" /><i></i>Select All</label><hr/></li>');
		a = c.each.call(a, "view.availableGroups",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		return ""
	}, 23: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li><label class="checkbox"><input type="checkbox" class="group-participants" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "groupId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-id": "groupName"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' name="group-list[]" /><i></i>');
		a = c._triageMustache.call(a, "groupName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label></li>");
		return ""
	}, 25: function (a, c, d, b) {
		b.buffer.push("This agent is already part of all your groups.")
	}, 27: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button type="submit" class="btn btn-primary select-groups">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "invite", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, 29: function (a, c, d, b) {
		b.buffer.push('<div class="alert alert-danger fade in text-center" style="z-index: 1; position:absolute; top :  0; left : 0; right : 0;"><button class="close" data-dismiss="alert">\u00d7</button><a href="javascript:void(0);" style="color : #fff; text-decoration: underline;" class="reload-message">Unable to load messages. Click here to retry.</a></div>')
	},
	31: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="unseen-message-container" style="z-index: 1; top : 0;"><span class="text">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_messages", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span><i class="fa fa-arrow-up"></i><a class="mark-read" href="javascript:void(0);" style="position: absolute;right: 8px;color: #fff;border-left: 1px solid #fff;padding-left: 8px;top: 0; bottom: 0;" data-placement="bottom" data-original-title="Mark as read"><i class="fa fa-close"></i></a></div>');
		return ""
	}, 33: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":agent-chat-older view.isLoadingHistory:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><p>");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "scroll_up_to_load", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div>");
		return ""
	}, 35: function (a, c, d, b) {
		b.buffer.push('<div class="loading-old-chat"><img src="https://static-a.tawk.to/v2/a34/images/ajax-loader-small.gif" /></div>')
	}, 37: function (a, c, d, b) {
		b.buffer.push('<div class="date-container"><div class="line"></div><div class="date">');
		d = c._triageMustache.call(a, "date", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		d = c.each.call(a,
			"inner", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(38, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		return ""
	}, 38: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="conversation-block"><p class="agent-name">');
		b.buffer.push(d(c._triageMustache.call(a, "agentName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><div class="clear"></div>');
		a = c.each.call(a, "messages", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(39, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push('</div><div class="clear"></div>');
		return ""
	}, 39: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div class="msg-time">');
		d = c._triageMustache.call(a, "co", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="conversation-content">');
		b.buffer.push(e(c._triageMustache.call(a, "m", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		d = c["if"].call(a, "isNew", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(40, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 40: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="new-message-container"><div class="left-border"><div class="border"></div></div><div class="text">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_messages", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div class="right-border"><div class="border"></div></div></div>');
		return ""
	}, 42: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="alert alert-info fade in"><button class="close" data-dismiss="alert">\u00d7</button>');
		b.buffer.push(e((c.I18n || a && a.I18n ||
			d).call(a, "invited_group", {
			name: "I18n",
			hash: {context: "agent_chat"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="ui-widget ui-chatbox"><div class="ui-widget-header ui-chatbox-titlebar ui-dialog-header" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-chat-status": "status"},
			hashTypes: {"data-chat-status": "STRING"},
			hashContexts: {"data-chat-status": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c["if"].call(a, "isGroup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<a href="javascript:void(0);" data-placement="top" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "hide", {
			name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" class="ui-chatbox-icon close-chat" role="button"><i class="fa fa-times"></i></a><a href="javascript:void(0);" data-placement="top" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "minimize", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" class="ui-chatbox-icon minimize-chat" role="button"><i class="fa fa-minus"></i></a><a href="javascript:void(0);" data-placement="top" data-original-title="Inline chat view" class="ui-chatbox-icon popin-chat" role="button"><i class="fa fa-external-link fa-flip-horizontal"></i></a></div><div class="ui-widget-content ui-chatbox-content"><div class="agent-chat-controls pull-right">');
		d = c["if"].call(a, "isGroup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(7, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="clearfix"></div>');
		d = c["if"].call(a, "isGroup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.program(21, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.content.loadError", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(29, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.content.hasMoreUnseen", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(31, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":ui-widget-content :ui-chatbox-log isGroup::agent-view :scrollable-view"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(">");
		d = c["if"].call(a, "hasOlder", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(33, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="previouschat-content">');
		d = c["if"].call(a, "view.isLoadingHistory", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(35, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "previousConversation", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(37, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="chat-content"></div>');
		d = c["if"].call(a, "view.content.invited", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(42, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="ui-widget-content ui-chatbox-input"><textarea class="ui-widget-content ui-chatbox-input-box"></textarea><a class="open-emoji" href="javascript:void(0);"><i class="fa fa-smile-o"></i></a></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.agentChatContainer = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-groupid": "this.groupId"},
			hashTypes: {"data-groupid": "STRING"},
			hashContexts: {"data-groupid": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);" ');
		b.buffer.push(d(c.action.call(a, "showHiddenChat", "groupId", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID"],
			contexts: [a, a],
			data: b
		})));
		b.buffer.push('><span class="name">');
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</span><span class="fa fa-times close-hidden-chat"></span></a></li>');
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.popoutAgentChat || a && a.popoutAgentChat || d).call(a, {
			name: "popoutAgentChat",
			hash: {idBinding: "this.groupId", contentBinding: "this"},
			hashTypes: {idBinding: "STRING", contentBinding: "STRING"},
			hashContexts: {idBinding: a, contentBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	},
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		b.buffer.push('<div id="hiddenChatListContainer" class="hidden"><a id="openHiddenList" href="javascript:void(0);" class="btn btn-default" data-toggle="dropdown"><i class="fa fa-comments-o fa-lg"></i><span>');
		d = c._triageMustache.call(a, "hiddenChatList.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><i class="fa fa-caret-up"></i></a><ul id="hiddenList" class="dropdown-menu" role="dropdown">');
		d = c.each.call(a, "hiddenChatList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></div>");
		d = c.each.call(a, "popoutChatList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, useData: !0
});
Ember.TEMPLATES.clientDataView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<ul style="padding-left : 15px;"><li><p><b>Primary Objective :</b></p><p>');
		d = c._triageMustache.call(a, "view.content.objectives.0.content", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></li><li><p><b>Secondary Objective :</b></p><p>");
		d = c._triageMustache.call(a, "view.content.objectives.1.content", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></li><li><p><b>Tertiary Objective :</b></p><p>");
		d = c._triageMustache.call(a, "view.content.objectives.2.content", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></li></ul>");
		return ""
	}, 3: function (a, c, d, b) {
		b.buffer.push("<p>No data provided</p>")
	}, 5: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<div><p><b>Business Name :</b><br />");
		d = c._triageMustache.call(a, "view.content.business.name", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div><div><p><b>Business Website :</b><br /><a ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "view.content.business.url"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank">');
		d = c._triageMustache.call(a, "view.content.business.url", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d &&
		b.buffer.push(d);
		b.buffer.push("</a></p></div><div><p><b>Business Address :</b><br />");
		d = c._triageMustache.call(a, "view.content.business.address", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div><div><p><b>Business Number :</b><br />");
		d = c._triageMustache.call(a, "view.content.business.phone", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div><div><p><b>Business Email :</b><br />");
		d = c._triageMustache.call(a, "view.content.business.email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div><div><p><b>Business Facebook :</b><br />");
		d = c._triageMustache.call(a, "view.content.business.fb", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div><div><p><b>Business Twitter :</b><br />");
		d = c._triageMustache.call(a, "view.content.business.twitter", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div><div><p><b>Contact Person Name :</b><br />");
		d = c._triageMustache.call(a, "view.content.business.contactPerson.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div><div><p><b>Contact Person Email :</b><br />");
		d = c._triageMustache.call(a, "view.content.business.contactPerson.email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div><div><p><b>Contact Person Number :</b><br /");
		d = c._triageMustache.call(a, "view.content.business.contactPerson.phone", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></div>");
		return ""
	}, 7: function (a,
	                c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<p>");
		b.buffer.push(e((c.breaklines || a && a.breaklines || d).call(a, "", {
			name: "breaklines",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p>");
		return ""
	}, 9: function (a, c, d, b) {
		b.buffer.push('<ol style="padding-left : 15px;">');
		a = c.each.call(a, "view.content.faqs", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a &&
		b.buffer.push(a);
		b.buffer.push("</ol>");
		return ""
	}, 10: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push("<li><p><b>");
		d = c._triageMustache.call(a, "q", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</b><br />");
		b.buffer.push(f((c.breaklines || a && a.breaklines || e).call(a, "a", {
			name: "breaklines",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></li>");
		return ""
	}, 12: function (a, c, d, b) {
		b.buffer.push('<ol style="padding-left : 15px;">');
		a = c.each.call(a, "view.content.emergency", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ol>");
		return ""
	}, 13: function (a, c, d, b) {
		b.buffer.push("<li><p>Name : ");
		d = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p><p>Title : ");
		d = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p><p>Email : ");
		d = c._triageMustache.call(a, "email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p><p>Phone : ");
		d = c._triageMustache.call(a, "phone", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></li>");
		return ""
	}, 15: function (a, c, d, b) {
		b.buffer.push('<ol style="padding-left : 15px;">');
		a = c.each.call(a, "view.content.reputation", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ol>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>Client Data</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isLoading:hidden :padding-10"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="smart-form"><label class="select"><select id="client-data-select"><option value="objectives">Objectives</option><option value="business">Business</option><option value="offering">Offering</option><option value="culture">Culture</option><option value="faqs">FAQs</option><option value="emergency">Emergency Contacts</option><option value="reputation">Reputation</option></select><i></i></label></div><div id="objectives-view" class="client-data padding-10">');
		d = c["if"].call(a, "view.content.objectives", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="business-view" class="client-data hidden padding-10">');
		d = c["if"].call(a, "view.content.business", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="offering-view" class="client-data hidden padding-10"><p><b>Products and / service offerings</b></p>');
		d = c["with"].call(a, "view.content.offering", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="culture-view" class="hidden client-data padding-10"><p><b>Company\'s culture</b></p>');
		d = c["with"].call(a, "view.content.culture", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d &&
		b.buffer.push(d);
		b.buffer.push('</div><div id="faqs-view" class="client-data padding-10 hidden"><p><b>FAQs</b></p>');
		d = c["if"].call(a, "view.content.faqs.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="emergency-view" class="client-data padding-10 hidden"><p><b>Emergency Contacts</b></p>');
		d = c["if"].call(a, "view.content.emergency.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="reputation-view" class="client-data padding-10 hidden"><p><b>Business Reputation</b></p>');
		d = c["if"].call(a, "view.content.reputation.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div><div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isLoading::hidden :text-center"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 100px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorChatContainer = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "simulate_chat", {
			name: "I18n",
			hash: {
				variables: '{"lineStart" : "<h5>", "lineEnd" : "</h5>", "linkStart3" : "<a href=\'javascript:void(0);\' id=\'simulate-chat\'>", "linkEnd3" : "</a>", "linkStart1" : "<a href=\'javascript:void(0);\' id=\'view-sites\'>", "linkEnd1" : "</a>", "linkStart2" : "<a href=\'javascript:void(0);\' id=\'view-pages\'>", "linkEnd2" : "</a>"}',
				context: "visitors"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "simulate_chat_active", {
			name: "I18n",
			hash: {
				variables: '{"lineStart" : "<h5>", "lineEnd" : "</h5>", "linkStart3" : "<a href=\'javascript:void(0);\' id=\'simulate-chat\'>", "linkEnd3" : "</a>", "linkStart1" : "<a href=\'javascript:void(0);\' id=\'view-sites\'>", "linkEnd1" : "</a>", "linkStart2" : "<a href=\'javascript:void(0);\' id=\'view-pages\'>", "linkEnd2" : "</a>"}',
				context: "visitors"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-3 col-sm-3 col-md-3 col-lg-3"><h1 class="page-title txt-color-blueDark"><i class="fa-fw fa fa-comments"></i><p id="view-title">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
			"view_title", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</p></h1></div><div class="col-xs-9 col-sm-9 col-md-9 col-lg-9"><div style="display: table;"><div style="display: table-cell; width: 1%"><div id="visitor-chat-action-container"><i id="button-details-toggle" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":fa :fa-columns view.isChatDetailsHidden::active"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' aria-hidden="true" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "view.sidebarToggleTooltip"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="bottom"></i><div class="btn-group"><a id="prev-chat" class="btn btn-default btn-circle disabled prev" href="javascript:void(0);" data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "previous_text", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-chat" class="btn btn-default btn-circle disabled next" href="javascript:void(0);" data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "next_text", {
			name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('"><i class="fa fa-chevron-right"></i></a></div><div class="slider-container"><div id="slider"></div><div class="tooltip fade bottom" style="top: 20px;"><div class="tooltip-arrow" style="left: 0%;"></div><div class="tooltip-inner" style="width: 80px; margin-left: -40px;"></div></div></div></div></div></div></div></div><div id="inner-content" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "view.columnStyle :innerContent"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><div id="chat-scroller"><div id="no-chat-message" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":well :text-center view.chatListView.length:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="simulate-chat-text">');
		a = c.unless.call(a, "Tawk.liveMonitoringController.allServedList.length", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div></div></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.transcriptCopyView = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container" ><p>Copy Transcript</p></div><div class="icon-container"><a class="close-copy-form btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><form class="smart-form"><fieldset><label class="textarea" style="height: 100%;">');
		b.buffer.push(e((c.textarea || a && a.textarea || d).call(a, {
			name: "textarea",
			hash: {readonly: "true", "class": "copy-transcript", valueBinding: "view.copyContent"},
			hashTypes: {readonly: "STRING", "class": "STRING", valueBinding: "STRING"},
			hashContexts: {readonly: a, "class": a, valueBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></fieldset><footer><button type="button" class="btn btn-primary copy-clipboard">Copy</button><button type="button" class="btn btn-default close-copy-form">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.transcriptEmailView = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container" ><p>Email Transcript</p></div><div class="icon-container"><a class="close-notes btn btn-default btn-sm back-to-main-view" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><form class="smart-form emailTranscript"><fieldset><section><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email_recipients", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea"> <i class="icon-append fa fa-question-circle"></i><textarea id="emails" name="emails" class="emails" rows="4"></textarea><b class="tooltip tooltip-top-right "><i class="fa fa-warning txt-color-teal"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email_info",
			{
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</b></label></section></fieldset><footer><button type="submit" class="btn btn-primary sendEmail">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-default close-email-form">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorChat = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0;">');
		d = c.each.call(a, "view.tabSettings", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown">');
		d = c.each.call(a, "view.tabSettings", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(15, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.menuFits", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div class="clearfix"></div>');
		return ""
	}, 2: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isMenu:dropdown:open-view"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-type": "label"},
			hashTypes: {"data-type": "STRING"},
			hashContexts: {"data-type": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":tab isMenu:main-menu"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' rel="tooltip" data-toggle="dropdown" data-placement="bottom" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "title"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c["if"].call(a,
			"isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isMenu", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a>");
		d = c["if"].call(a, "isMenu", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</li>");
		return ""
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<i ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":fa fontClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i>");
		return ""
	}, 5: function (a, c, d, b) {
		b.buffer.push('<span class="menu-title">');
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
			contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 7: function (a, c, d, b) {
		b.buffer.push('&nbsp;<b class="caret"></b>')
	}, 9: function (a, c, d, b) {
		b.buffer.push('<ul class="dropdown-menu" role="dropdown">');
		a = c.each.call(a, "items", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	}, 10: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="open-view inner-item" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-type": "label"},
			hashTypes: {"data-type": "STRING"},
			hashContexts: {"data-type": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);">');
		a = c["if"].call(a, "isInternal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a></li>");
		return ""
	}, 11: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<i ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":fa fontClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i>&nbsp;");
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache", hash: {}, hashTypes: {},
			hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 13: function (a, c, d, b) {
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 15: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isMenu:dropdown-submenu:open-view"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c["if"].call(a, "isMenu", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.program(19, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</li>");
		return ""
	}, 16: function (a, c, d, b) {
		b.buffer.push('<a href="javascript:void(0);" class="minimized-dropdown left text-left" data-toggle="dropdown">');
		d = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a><ul class="dropdown-menu multi-level"  style="right:100%; left : auto;">');
		d = c.each.call(a, "items", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul>");
		return ""
	}, 17: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="open-view inner-item"><a href="javascript:void(0);" class="text-left">');
		a = c["if"].call(a, "isInternal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a></li>");
		return ""
	}, 19: function (a, c, d, b) {
		b.buffer.push('<a href="javascript:void(0);" class="text-left">');
		a = c["if"].call(a, "isInternal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a>");
		return ""
	}, 21: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a href="javascript:void(0);" class="ticket-create open-subview text-left"><i class="fa fa-ticket"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "create_ticket", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a href="javascript:void(0);" class="copy-select text-left"><i class="fa fa-clipboard"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "copy_transcript", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a href="javascript:void(0);" class="print-select text-left"><i class="fa fa-print"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "print", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		d = c.unless.call(a, "view.content.ns", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.content.isVisitorPresent", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 22: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a href="javascript:void(0);" class="add-note text-left"><i class="fa fa-edit"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 24: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a href="javascript:void(0);" class="tag-transcript text-left"><i class="fa fa-tags"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a href="javascript:void(0);" class="ban-visitor text-left"><i class="fa fa-ban"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.content.ignore:hide :ignore-current-chat :text-left"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-eye-slash"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ignore_visitor", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 26: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="preview-chat-message padding-10">');
		b.buffer.push(d(c._triageMustache.call(a, "view.content.messagePreview", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('...<img src="https://static-a.tawk.to/v2/a34/images/pencil.gif" /></div>');
		return ""
	}, 28: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="preview-chat-message padding-10">');
		b.buffer.push(d(c._triageMustache.call(a, "message", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 30: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":select2-results-dept-1 :select2-result :select2-result-selectable suggestion.selected:select2-highlighted"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' role="presentation" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "suggestion.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' ><div class="select2-result-label" role="option" style="display: table;"><span style="display: table-cell;">');
		b.buffer.push(d(c._triageMustache.call(a, "suggestion.key", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;:&nbsp;</span><span style="white-space: normal; word-wrap: break-word; display: table-cell;">');
		b.buffer.push(d(c._triageMustache.call(a, "suggestion.fullMessage",
			{
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		a = c["if"].call(a, "suggestion.options", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(31, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span></div></li>");
		return ""
	}, 31: function (a, c, d, b) {
		b.buffer.push("[+]")
	}, 33: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div style="width: 100%; height: 100%;"><div class="drop-text"><span>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "drag_drop_text", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></div><div class="typearea"><a class="open-emoji" href="javascript:void(0);"><i class="fa fa-smile-o"></i></a><form enctype="multipart/form-data" class="upload-form" method="post"><input type="file" class="hidden file-input" name="file[]" multiple="multiple" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {id: "view.content.fileId"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' /><label class="upload-file fa fa-paperclip fa-lg fa-flip-vertical input-tooltip" title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "upload_file", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"for": "view.content.fileId"},
			hashTypes: {"for": "STRING"}, hashContexts: {"for": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "upload_file", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="left"></label></form><div style="position: absolute;right: 28px;bottom: 10px;text-align: right;"><a class="video-call-visitor padding-5  input-tooltip" href="javascript:void(0);" style="color : #ccc; display: none;" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "video_call", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-video-camera fa-lg" style="font-weight: bold"></i></a><a class="phone-call-visitor padding-5 input-tooltip" href="javascript:void(0);" style="color : #ccc; display: none;" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "voice_call", {
			name: "I18n", hash: {context: "admin"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('"><i class="fa fa-phone fa-lg" style="font-weight: bold"></i></a><a class="screen-share-visitor padding-5  input-tooltip" href="javascript:void(0);" style="color : #ccc; display: none;" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "screen_share", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-desktop fa-lg" style="font-weight: bold;"></i></a></div><textarea placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "write_reply", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" class="custom-scroll chat-input message-input" style="height: 40px; min-height : 40px; overflow-y: hidden;"></textarea></div></div>');
		return ""
	}, 35: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="join-container"><div class="profile-overlay"></div><div ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":profile-select :smart-form view.content.isVisitorPresent::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c["if"].call(a, "view.content.isPersonalPage", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(36, b),
			inverse: this.program(38, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push('<div class="clearfix"></div></div></div>');
		return ""
	}, 36: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section class="only-button"><a href="javascript:void(0);" class="btn btn-primary join-chat">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "join", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></section>");
		return ""
	}, 38: function (a,
	                 c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="warning">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "another_joined_agent", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><label class="select"><select class="profile-id">');
		d = c.each.call(a, "view.content.agentProfiles", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(39, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select> <i></i></label><a href="javascript:void(0);" class="btn btn-primary join-chat">');
		d = c["if"].call(a, "view.requireConfirmation", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(41, b),
			inverse: this.program(43, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a><div><a href="javascript:void(0);" class="cancel-join-chat">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "no_join_chat", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></div>");
		return ""
	}, 39: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "aliasId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {selected: "isDefault"}, hashTypes: {selected: "STRING"},
			hashContexts: {selected: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d(c._triageMustache.call(a, "displayName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 41: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "yes_join_chat", {
			name: "I18n", hash: {context: "visitors"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})))
	}, 43: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "join", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 45: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="chat-details-container" style="white-space: normal;"><div class="details-container"><div class="details-view menu-content hidden"></div><div class="shortcuts-view menu-content hidden"></div><div class="history-view menu-content hidden"></div><div class="knowledgebase-view menu-content hidden" style="white-space: normal;"></div><div class="menu-content client-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content shopify-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content custom-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="floating-view hidden" style="white-space: normal;"></div></div><div class="details-button-container"><button class="btn btn-default button-icon ticket-create open-subview" rel="tooltip" data-placement="top"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "create_ticket", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ><i class="fa fa-ticket"></i></button><button class="btn btn-default button-icon copy-select" rel="tooltip" data-placement="top"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "copy_transcript", {
			name: "I18n", hash: {context: "visitors"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" ><i class="fa fa-clipboard"></i></button><button class="btn btn-default button-icon print-select" rel="tooltip" data-placement="top"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "print", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ><i class="fa fa-print"></i></button>');
		d = c.unless.call(a, "view.content.ns", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(46, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("<br />");
		d = c["if"].call(a, "view.content.isVisitorPresent", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(48, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><i class="fa fa-ellipsis-v"></i></div>');
		return ""
	}, 46: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button class="btn btn-default button-icon add-note" rel="tooltip" data-placement="top"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ><i class="fa fa-edit"></i></button>');
		return ""
	}, 48: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button class="btn btn-primary tag-transcript button-icon" rel="tooltip"data-placement="top"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat",
			{
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('"><i class="fa fa-tags"></i></button><button class="btn btn-danger ban-visitor button-icon" rel="tooltip" data-placement="top"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-ban"></i></button><button ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.content.ignore:hide :btn :btn-default :ignore-current-chat :button-icon"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' rel="tooltip" data-placement="top"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ignore_visitor", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" style="background : #ddd;"><i class="fa fa fa-eye-slash"></i></button>');
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":jarviswidget view.content.inView:focus-chat"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-widget-editbutton="false" data-widget-custombutton="false" data-widget-fullscreenbutton="false"><header ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":chat-header view.content.cr:waiting view.content.incomingCall:waiting view.content.isClientProperty:client-property"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: relative;"><ul class="header-list"><li class="name-text-container"><div class="details-flag-container"><span ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "view.content.countryFlag"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('></span></div><h2 class="name-text">');
		d = c._triageMustache.call(a, "view.content.displayName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" - ");
		d = c._triageMustache.call(a, "view.content.propertyName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</h2></li><li class="menu-container"><div class="jarviswidget-ctrls" role="menu"><a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn end-chat" rel="tooltip" title="" data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "end", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a></div>');
		d = c["if"].call(a,
			"view.tabSettings.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</li></ul></header><div class="chat-message-container"><div class="chat-content-container" role="content"><div class="chat-body custom-scroll" style="bottom : 145px;"><div class="chat-table-wrapper"><div class="chat-row-wrapper"><div class="chat-wrapper"><div class="chat-content padding-10"></div>');
		d = c["if"].call(a,
			"view.content.messagePreview", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(26, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "view.content.typingAgents", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(28, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div></div><div class="select2-drop select2-drop-active hidden"><ul class="select2-results" role="listbox" >');
		d = c.each.call(a, "suggestion", "in", "view.suggestions", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(30, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></div><div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.requireConfirmation:confirmation-requested :chat-footer"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><ul class="nav nav-tabs" style="position:absolute; bottom : 100%;"><li data-id ="reply-tab" class="open-tab-pane active"><a href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "message", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li data-id="whisper-tab" class="open-tab-pane whisper-tab"><a href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "whisper", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li></ul><div class="textarea-div tab-content" style="height : 100%;"><div class="tab-pane active reply-tab">');
		d = c["if"].call(a, "view.content.hasJoinedConversation", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(33, b),
			inverse: this.program(35, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="tab-pane whisper-tab"><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":profile-overlay view.content.isVisitorPresent:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></div><div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":typearea view.content.isVisitorPresent::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a class="open-emoji" href="javascript:void(0);"><i class="fa fa-smile-o"></i></a><textarea placeholder="Whisper to agents in the chat. The visitor will not see this message." class="custom-scroll chat-input whisper-input" style="height: 60px; min-height : auto; overflow-y: hidden;"></textarea></div></div></div></div></div>');
		d = c["if"].call(a, "view.tabSettings.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(45, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorDetailsView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		a = c["if"].call(a, "view.content.visitor", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) :
			b.buffer.push("")
	}, 2: function (a, c, d, b) {
		b.buffer.push('<button class="icon-append btn btn-primary btn-xs save-visitor-attributes"><i class="fa fa-save"></i></button>')
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="textarea"><button class="icon-append btn btn-primary btn-xs save-visitor-attributes"><i class="fa fa-save"></i></button>');
		b.buffer.push(e((c.textarea || a && a.textarea || d).call(a, {
			name: "textarea",
			hash: {
				rows: "2", valueBinding: "view.content.notesValue",
				placeholderKey: "notes", "class": "visitor-note"
			},
			hashTypes: {rows: "STRING", valueBinding: "STRING", placeholderKey: "STRING", "class": "STRING"},
			hashContexts: {rows: a, valueBinding: a, placeholderKey: a, "class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label>");
		a = c["if"].call(a, "view.notesUpdatedBy", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</section>");
		return ""
	}, 5: function (a, c, d, b) {
		b.buffer.push('<p class="note">');
		a = c._triageMustache.call(a, "view.notesUpdatedBy", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</p>");
		return ""
	}, 7: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.content.cy", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push(",&nbsp;");
		return ""
	}, 9: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="device-detail" rel="popover" data-placement="right" data-content="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "duration", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c._triageMustache.call(a, "view.content.formattedDuration", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, 11: function (a, c, d, b) {
		b.buffer.push('<div class="device-detail" rel="popover" data-placement="top" data-content="Chat Duration">');
		a = c._triageMustache.call(a, "view.chatDuration", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, 13: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="device-detail" rel="popover" data-placement="top" data-content="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "chats", {
			name: "I18n", hash: {context: "sidebar"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('">');
		d = c._triageMustache.call(a, "view.content.cs", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" ");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "chats", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 15: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<li class="parent_li"><div class="timeline-label"><span class="label">');
		d = c._triageMustache.call(a, "time", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span>&nbsp;</div><div class="timeline-data">');
		b.buffer.push(e(c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d =
			c.each.call(a, "data", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></li>");
		return ""
	}, 16: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<p class="no-margin">');
		d = c._triageMustache.call(a, "key", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" : ");
		b.buffer.push(e(c._triageMustache.call(a,
			"value", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</p>");
		return ""
	}, 18: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div style="padding: 0 5px;"><i class="fa fa-chevron-right"></i>&nbsp;<a ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "view.content.rf"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('  target="_blank" class="linkable">');
		b.buffer.push(d(c._triageMustache.call(a, "view.content.rf", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></div>");
		return ""
	}, 20: function (a, c, d, b) {
		b.buffer.push('<div class="fields-container"  style="border-bottom : 0; border-top: 1px solid #ccc;"><ul class="attributes-list">');
		d = c["if"].call(a, "view.content.tags", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(21, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "view.content.customAttributes.data", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></div>");
		return ""
	}, 21: function (a, c, d, b) {
		b.buffer.push('<li style="margin-bottom: 8px;"><i class="fa fa-tags"></i>&nbsp;');
		a = c.each.call(a, "view.content.tags", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(22,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</li>");
		return ""
	}, 22: function (a, c, d, b) {
		b.buffer.push('<span class="label label-info">');
		a = c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 24: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<li><i class="fa fa-dot-circle-o"></i>&nbsp;');
		d = c._triageMustache.call(a,
			"key", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('<br /><span style="padding-left: 10px">');
		b.buffer.push(e(c._triageMustache.call(a, "value", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></li>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "details", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div class="fields-container"><form class="smart-form visitor-attributes"><section><label class="input visitor-name-field">');
		d = c["if"].call(a, "view.content.isHistory", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(2, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<input type="text" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "view.content.visitorName"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="required visitor-name-input"placeholder="');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "visitor_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" style="padding-right : 38px;" /></label></section><section><label class="input">');
		d = c["if"].call(a, "view.content.isHistory", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(2, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<input type="text" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "view.content.e"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="email visitor-email-input"placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor_email", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"  style="padding-right : 38px;"/></label></section>');
		d =
			c["if"].call(a, "view.content.ns", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></form><div style="position: relative; word-wrap: break-word; white-space: pre-line; border : 1px solid #BDBDBD; padding: 5px 10px; min-height: 22px; line-height: 22px;"><div class="location-details"><div class="country-name hover-location" rel="popover" title="" data-placement="right" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "view.content.htn"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c["if"].call(a, "view.content.cy", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "view.content.cn", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="pull-right"><span class="visitor-ip hover-location" rel="popover" title="" data-placement="top" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "view.content.htn"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c._triageMustache.call(a, "view.content.ip", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="visitor-time hover-location" rel="popover" title="" data-placement="bottom" data-content="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "local_time", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		d = c._triageMustache.call(a, "view.content.visitorLocalTime", {
			name: "_triageMustache", hash: {}, hashTypes: {},
			hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></div><div class="clearfix"></div></div></div></div><div class="fields-container"><div><div class="device-detail" rel="popover" data-placement="right" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "view.content.ua"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><span ");
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "view.content.browser"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' style="margin : 0 2px; vertical-align: middle;"></span><span ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.content.operatingSystem"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="vertical-align: middle;"></span><div class="clearfix"></div></div>');
		d = c["if"].call(a, "view.content.formattedDuration", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="device-detail" rel="popover" data-placement="right" data-content="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_visit", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		d = c._triageMustache.call(a, "view.minifiedVisit", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a, "view.content.isHistory", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div class="fields-container" style="border-bottom : 0;"><div class="chat-timeline-container tree">');
		d = c.each.call(a, "view.content.timeline", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.content.rf", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		d = c["if"].call(a, "view.hasCustomData", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(20,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorHistoryListView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push(" ");
		a = c._triageMustache.call(a, "view.propertyHistory.totalItems", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push(" ");
		return ""
	}, 3: function (a, c, d, b) {
		b.buffer.push(" ... ")
	}, 5: function (a,
	                c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div style="position: absolute; top: 0;  bottom: 64px;  overflow: auto;  height: auto; width : 100%;"><table class="table table-hover history-table"><tbody>');
		d = c.each.call(a, "view.currentHistoryList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div class="history-list-footer"><div class="btn-group pull-right"><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :prev :prev-visitor-history-list view.content.historyList.hasPrevious::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Newer"><i class="fa fa-chevron-left"></i></a><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :next :next-visitor-history-list view.content.historyList.hasNext::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Older"><i class="fa fa-chevron-right"></i></a></div></div></div>');
		return ""
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<tr class="open-transcript open-subview" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "this._id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td class="agent-cell">');
		b.buffer.push(d(c._triageMustache.call(a, "agentsName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="time-cell text-center">');
		d = c._triageMustache.call(a, "time", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="messages-cell text-center">');
		d = c._triageMustache.call(a, "messageCount", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 8: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="padding-10 text-center"><h5>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_history", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h5></div>");
		return ""
	}, 10: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 12: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div style="position: absolute; top: 0;  bottom: 64px;  overflow: auto;  height: auto; width : 100%;"><table class="table table-hover history-table"><tbody>');
		d = c.each.call(a, "view.currentPropertyHistoryList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div class="history-list-footer"><div class="btn-group pull-right"><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :prev :prev-property-history-list view.propertyHistory..hasPrevious::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Newer"><i class="fa fa-chevron-left"></i></a><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :next :next-property-history-list view.propertyHistory..hasNext::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Older"><i class="fa fa-chevron-right"></i></a></div><div></div>');
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<tr class="open-property-transcript open-subview" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "this._id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td class="agent-cell">');
		d = c._triageMustache.call(a, "visitorName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="time-cell text-center">');
		d = c._triageMustache.call(a, "time", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="messages-cell text-center">');
		d = c._triageMustache.call(a,
			"messageCount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="history-list"><div class="section-header" style="display: none;"><div class="title-container"><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n", hash: {context: "history"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</p></div><div class="icon-container"><a class="btn btn-default btn-sm back-to-chat" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><ul class="nav"><li role="presentation" class="history-type-select"><a href="javascript:void(0);" class="history-type-tab view-visitor-history active">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor",
			{
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push(" (");
		d = c._triageMustache.call(a, "view.content.historyList.totalItems", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(')</a></li><li role="presentation" class="history-type-select"><a href="javascript:void(0);" class="history-type-tab view-property-history">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "property", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" (");
		d = c["if"].call(a, "view.propertyHistory", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(")</a></li></ul><div ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "view.isLoading:hidden :search-container"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><div class="visitor-history">');
		d = c["if"].call(a, "view.currentHistoryList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(8, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="property-history hidden"><div class="padding-5"><form class="property-history-search"><fieldset><div class="input-group"><input type="text" class="form-control search-text" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /><div class="input-group-btn dropdown-menu-container" style="position: static;"><button type="button" class="btn btn-default openPropertyHistoryFilter" tabindex="-1" aria-expanded="false"><span class="caret"></span></button><button type="button" class="btn btn-primary search" tabindex="-1"><i class="fa fa-search"></i></button><div class="dropdown-menu smart-form" style="position: absolute;width: 100%;"><fieldset class="padding-5"><section class="col col-6"><label class="input"><input type="text" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "min_num_message", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" class="min-messages" /></label></section><section class="col col-6"><label class="input"><input type="text" name="tags" class="tags" data-role="tagsinput" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags", {
			name: "I18n", hash: {context: "conversations"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" name="from-date" class="from-date" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_from", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" name="to-date" class="to-date" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_to", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section><section class="col col-lg-12"><label class="select custom-select"><div><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : <span class="selected-value">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></p></div><i></i><select class="assignee"><option value="0">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		d = c.each.call(a, "view.agentList",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</select></label></section></fieldset><footer><button type="submit" class="btn btn-primary search"><i class="fa fa-search"></i></button><button type="submit" class="btn bg-color-teal txt-color-white resetPropertyHistoryFilter"><i class="fa fa-undo"></i></button><button type="submit" class="btn btn-default closePropertyHistoryFilter"><i class="fa fa-close"></i></button></footer></div></div></div></fieldset></form></div><div style="position: absolute; top : 44px; bottom : 0; left : 0; right : 0;">');
		d = c["if"].call(a, "view.currentPropertyHistoryList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b),
			inverse: this.program(8, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div></div><div ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isLoading::hidden :text-center"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 34px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div></div><div class="transcript-view-container hidden"></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorKBListView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.kbContent.title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "knowledgebase", {
			name: "I18n", hash: {context: "header"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["STRING"], contexts: [a], data: b
		})))
	}, 5: function (a, c, d, b) {
		a = c.unless.call(a, "isDeleted", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 8: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<li class="padding-10" style="border-bottom : 1px solid #ddd;"><p style="font-size : 14px; margin : 0; font-weight : bold;"><a href="javascript:void(0);" style="color : #71a06a;" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' class="view-kb">');
		b.buffer.push(e(c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></b></p><p class="note" style="margin-top: 0; font-size: 12px;"><span class="pull-left" style="text-transform : uppercase;">');
		d = c._triageMustache.call(a, "categoryName",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="pull-right">');
		d = c._triageMustache.call(a, "createdOn", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="clearfix"></span></p><p>');
		b.buffer.push(e(c._triageMustache.call(a, "snippet", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</p></li>");
		return ""
	}, 10: function (a, c, d, b) {
		b.buffer.push('<li class="padding-10 text-center"><h5>No content.</h5></li>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>');
		d = c["if"].call(a, "view.kbContent", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.program(3,
				b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div><div class="icon-container"><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-sm view.kbContent:back-to-main-view:back-to-chat"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div class="kb-list"><form class="smart-form padding-10 search-kb"><section><label class="input"><input type="text" class="search-kb-text" placeholder="Search" /><div class="clean-filter-kb"><i class="fa fa-times" aria-hidden="true"></i></div></label></section><section><label class="select"><select class="search-kb-category"><option value="">Select Category</option>');
		d = c.each.call(a, "view.kbCategories", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></section></form><ul style="margin : 0; list-style: none; margin : 0; padding : 0; word-wrap : break-word; position : absolute; top : 100px; bottom : 53px; overflow : auto; left :0; right : 0;" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "view.isLoading:hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		d = c.each.call(a, "view.kbContentList.currentData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.program(10, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul><div class="paged-list-footer"><div class="btn-group pull-right"><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :prev :prev-kb view.kbContentList.hasPrevious::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Newer"><i class="fa fa-chevron-left"></i></a><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :next :next-kb view.kbContentList.hasNext::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Older"><i class="fa fa-chevron-right"></i></a></div></div><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isLoading::hidden :text-center"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 100px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div><div class="kb-view hidden"><div class="editor-preview">');
		b.buffer.push(e(c._triageMustache.call(a, "view.kbContent.content", {
			name: "_triageMustache", hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"}, hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorNotesView = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container" ><p>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notes", {
			name: "I18n", hash: {context: "tooltip"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</p></div><div style="float : left; margin-left : -100%;"><a class="close-notes btn btn-default btn-sm back-to-main-view" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><form class="smart-form visitor-notes"><fieldset><label class="textarea"><textarea class="visitor-note required" rows="5" placeholder="');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "notes", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></textarea></label></fieldset><footer><button type="submit" class="btn btn-primary save-details">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-default close-notes-form">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.refundOrder = Ember.Handlebars.template({
	1: function (a, c, d, b, e) {
		b.buffer.push('<tr style="height : 50px;"><td style="width : 45% vertical-align: middle;">');
		d = c._triageMustache.call(a, "name", {
			name: "_triageMustache", hash: {}, hashTypes: {},
			hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-right" style="vertical-align: middle;">');
		d = c["if"].call(a, "isRefunded", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b, e),
			inverse: this.program(4, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-right" style="width : 15%; vertical-align: middle;">');
		d = c["if"].call(a, "isRefunded", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(6, b, e), inverse: this.program(8, b, e), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 2: function (a, c, d, b) {
		b.buffer.push("Already Refunded")
	}, 4: function (a, c, d, b, e) {
		d = c.helperMissing;
		var f = this.escapeExpression;
		e = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push(" ");
		e = c._triageMustache.call(a, "price",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != e && b.buffer.push(e);
		b.buffer.push("&nbsp;x&nbsp;");
		b.buffer.push(f((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {id: "id", value: "0", "class": "spinner item-quantity", max: "quantity", min: "0", type: "text"},
			hashTypes: {id: "ID", value: "STRING", "class": "STRING", max: "ID", min: "STRING", type: "STRING"},
			hashContexts: {id: a, value: a, "class": a, max: a, min: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		return ""
	}, 6: function (a,
	                c, d, b, e) {
		a = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("&nbsp;0.00");
		return ""
	}, 8: function (a, c, d, b, e) {
		a = c["if"].call(a, "view.isCalculating", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b, e),
			inverse: this.program(11, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 9: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-refresh fa-spin"></i>')
	},
	11: function (a, c, d, b, e) {
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "refundAmount", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 13: function (a, c, d, b) {
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache", hash: {}, hashTypes: {},
			hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "view.subTotal", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 15: function (a, c, d, b, e) {
		b.buffer.push('<tr><td class="text-right" style="vertical-align: middle;">Shipping (');
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
			contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "view.shippingRefund", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(' remaining)</td><td class="text-right"style="width : 15%"><label class="input" style="position: relative;"><input type="text" class="shipping-refund" style="padding-left: 37px; text-align: right;"value="0.00" /><span style="position: absolute;left: 5px;top: 7px;display: block;">');
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></label></td></tr>");
		return ""
	}, 17: function (a, c, d, b) {
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "view.totalTax", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 19: function (a, c, d, b, e) {
		var f = this.escapeExpression;
		b.buffer.push('<tr><td class="text-right" style="vertical-align: middle;">');
		d = c._triageMustache.call(a, "type", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-right" style="width : 15%; vertical-align: middle;"><label class="input" style="position: relative;"><input type="text" class="refund-amount" style="padding-left: 37px; text-align: right;"');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "amount"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /><span style="position: absolute;left: 5px;top: 7px;display: block;">');
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></label></td></tr>");
		return ""
	}, 21: function (a, c, d, b) {
		b.buffer.push('<tr><td colspan="2" class="text-right"><label class="checkbox" style="display: inline-block;"><input type="checkbox" class="restock-items" checked /><i></i>');
		a = c._triageMustache.call(a, "view.refundQuantityText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label></td></tr>");
		return ""
	}, 23: function (a, c, d, b) {
		b.buffer.push('<section><label class="label">Reason for discrepancy in refund amount</label><label class="select"><select class="discrepancy-reason"><option value="restock">Customer was charged restocking fee</option><option value="damage">Customer returned the item damaged</option><option value="customer">Customer was unhappy with the order</option><option value="other">Other</option></select><i></i></label></section>')
	},
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
		var f = c.helperMissing, g = this.escapeExpression;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><span class="modal-title-tawk">Refund Order ');
		d = c._triageMustache.call(a, "view.order.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;"><form id="confirmation" name="confirmation" class="smart-form"><div style="border-bottom : 1px solid #ddd; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody>');
		d = c.each.call(a, "view.lineItems", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div style="border-bottom : 1px solid #ddd; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody><tr><td class="text-right">Subtotal</td><td class="text-right" style="width : 15%">');
		d = c["if"].call(a, "view.isCalculating", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b, e),
			inverse: this.program(13, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		d = c["if"].call(a, "view.shippingRefund", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<tr><td class="text-right">Tax</td><td class="text-right"style="width : 15%">');
		d = c["if"].call(a, "view.isCalculating", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b, e),
			inverse: this.program(17, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">Total available to refund</td><td class="text-right" style="width : 15%">');
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "view.totalRefundValue",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr></tbody></table></div><div class="padding-5" style="background : #fafafa; border-radius : 5px; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody><tr><td class="text-right">Refund Amount</td><td class="text-right" style="width : 15%"></td></tr>');
		d = c.each.call(a, "view.gateways", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(19, b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.refundQuantity", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</tbody></table></div>");
		d = c["if"].call(a, "view.hasDiscrepancy", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(23, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		b.buffer.push('<section><label class="checkbox"><input type="checkbox" class="notify-customer" checked/><i></i>Send a notification to the customer</label></section><section><label class="label">Reason for refund (optional)</label><label class="textarea"><textarea class="refund-reason"></textarea></label></section></form></div><div class="modal-footer"><button id="close" type="button" class="btn btn-default" data-dismiss="modal">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a,
			"cancel", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</button><button id="submit" type="button" class="btn btn-primary proceed-refund" disabled>Proceed</button></div></div></div>');
		return ""
	}, useData: !0, useDepths: !0
});
Ember.TEMPLATES.duplicateOrder = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><span class="modal-title-tawk">Duplicate Order #');
		d = c._triageMustache.call(a, "view.order_number", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;"><form class="smart-form duplicate-order-form"><section><label class="checkbox"><input type="checkbox" checked class="send-receipt" /><i></i>Send receipt to customer\'s email</label></section><section><label class="checkbox"><input type="checkbox" checked class="send-fullfillment" /><i></i>Send fulfillment receipt to customer\'s email</label></section><section><label class="label">Payment Status</label><label class="select"><select class="payment-status"><option value="same">Same as current order</option><option value="paid">Mark as Paid</option><option value="pending">Mark as Pending</option></select><i></i></label></section><section><label class="label">Inventory</label><label class="select"><select class="inventory-status"><option value="bypass">Bypass : Do not claim inventory</option><option value="decrement_ignoring_policy">Ignore : Claim inventory even if insufficient</option><option value="decrement_obeying_policy">Obey : Claim inventory according to inventory policy</option></select><i></i></label></section></form></div><div class="modal-footer"><button id="close" type="button" class="btn btn-default" data-dismiss="modal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-primary submit-form">Proceed</button></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.cancelOrder = Ember.Handlebars.template({
	1: function (a, c, d, b, e) {
		b.buffer.push('<tr style="height : 50px;"><td style="width : 45% vertical-align: middle;">');
		d = c._triageMustache.call(a,
			"name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-right" style="vertical-align: middle;">');
		d = c["if"].call(a, "isRefunded", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b, e),
			inverse: this.program(4, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-right" style="width : 15%; vertical-align: middle;">');
		d = c["if"].call(a,
			"isRefunded", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b, e),
				inverse: this.program(8, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 2: function (a, c, d, b) {
		b.buffer.push("Already Refunded")
	}, 4: function (a, c, d, b, e) {
		d = c.helperMissing;
		var f = this.escapeExpression;
		e = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push(" ");
		e = c._triageMustache.call(a, "price", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push("&nbsp;x&nbsp;");
		b.buffer.push(f((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				id: "id",
				value: "quantity",
				"class": "spinner item-quantity",
				max: "quantity",
				min: "0",
				type: "text"
			},
			hashTypes: {id: "ID", value: "ID", "class": "STRING", max: "ID", min: "STRING", type: "STRING"},
			hashContexts: {
				id: a, value: a, "class": a, max: a, min: a,
				type: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		return ""
	}, 6: function (a, c, d, b, e) {
		a = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("&nbsp;0.00");
		return ""
	}, 8: function (a, c, d, b, e) {
		a = c["if"].call(a, "view.isCalculating", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b, e),
			inverse: this.program(11, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) :
			b.buffer.push("")
	}, 9: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-refresh fa-spin"></i>')
	}, 11: function (a, c, d, b, e) {
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "refundAmount", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 13: function (a,
	                 c, d, b) {
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "view.subTotal", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 15: function (a, c, d, b, e) {
		b.buffer.push('<tr><td class="text-right" style="vertical-align: middle;">Shipping (');
		d = c._triageMustache.call(a,
			"view.order.currency", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "view.shippingRefund", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(' remaining)</td><td class="text-right"style="width : 15%"><label class="input" style="position: relative;"><input type="text" class="shipping-refund" style="padding-left: 37px; text-align: right;"value="0.00" /><span style="position: absolute;left: 5px;top: 7px;display: block;">');
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></label></td></tr>");
		return ""
	}, 17: function (a, c, d, b) {
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "view.totalTax", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 19: function (a, c, d, b, e) {
		b.buffer.push('<div class="padding-5" style="background : #fafafa; border-radius : 5px; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody><tr><td class="text-right">Refund Amount</td><td class="text-right" style="width : 15%"></td></tr>');
		a = c.each.call(a, "view.gateways", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(20,
				b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</tbody></table></div>");
		return ""
	}, 20: function (a, c, d, b, e) {
		var f = this.escapeExpression;
		b.buffer.push('<tr><td class="text-right" style="vertical-align: middle;">');
		d = c._triageMustache.call(a, "type", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-right" style="width : 15%; vertical-align: middle;"><label class="input" style="position: relative;"><input type="text" class="refund-amount" style="padding-left: 37px; text-align: right;"');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "amount"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /><span style="position: absolute;left: 5px;top: 7px;display: block;">');
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></label></td></tr>");
		return ""
	}, 22: function (a, c, d, b) {
		b.buffer.push('<section><label class="checkbox" style="display: inline-block;"><input type="checkbox" class="restock-items" checked /><i></i>');
		a = c._triageMustache.call(a, "view.refundQuantityText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label></section>");
		return ""
	}, 24: function (a, c, d, b) {
		b.buffer.push('<section><label class="label">Reason for discrepancy in refund amount</label><label class="select"><select class="discrepancy-reason"><option value="restock">Customer was charged restocking fee</option><option value="damage">Customer returned the item damaged</option><option value="customer">Customer was unhappy with the order</option><option value="other">Other</option></select><i></i></label></section>')
	},
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
		var f = c.helperMissing, g = this.escapeExpression;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><span class="modal-title-tawk">Cancel Order ');
		d = c._triageMustache.call(a, "view.order.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;"><form id="confirmation" name="confirmation" class="smart-form"><div><label class="label">What\u2019s the reason for canceling this order?</label><label class="select"><select class="cancel-reason"><option value="customer">Customer changed/canceled order</option><option value="inventory">Items Unavailable</option><option value="fraud">Fraudulent Order</option><option value="other">Other</option></select><i></i></label></div><div style="border-bottom : 1px solid #ddd; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody>');
		d = c.each.call(a, "view.lineItems", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><div style="border-bottom : 1px solid #ddd; margin-bottom : 10px;"><table class="table no-border" style="table-layout: fixed;"><tbody><tr><td class="text-right">Subtotal</td><td class="text-right" style="width : 15%">');
		d = c["if"].call(a, "view.isCalculating", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b, e),
			inverse: this.program(13, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		d = c["if"].call(a, "view.shippingRefund", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<tr><td class="text-right">Tax</td><td class="text-right"style="width : 15%">');
		d = c["if"].call(a, "view.isCalculating", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b, e),
			inverse: this.program(17, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">Total available to refund</td><td class="text-right" style="width : 15%">');
		d = c._triageMustache.call(a, "view.order.currency", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "view.totalRefundValue",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr></tbody></table></div>");
		d = c["if"].call(a, "view.gateways.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.refundQuantity", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.hasDiscrepancy", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<section><label class="checkbox"><input type="checkbox" class="notify-customer" checked/><i></i>Send a notification to the customer</label></section></form></div><div class="modal-footer"><button id="close" type="button" class="btn btn-default" data-dismiss="modal">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="submit" type="button" class="btn btn-primary proceed-cancel">Proceed</button></div></div></div>');
		return ""
	}, useData: !0, useDepths: !0
});
Ember.TEMPLATES.visitorShopifyView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div style="float: left;margin-left: -40px;vertical-align : middle;"><a class="edit-fields tooltip-button btn btn-default" data-placement="left" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "customize_shopify", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" style="background: #f1f1f1; color: #777; height: 38px; box-shadow: none;"><i class="fa fa-gear" style="font-size: 15px;margin-top: 4px;"></i></a></div>');
		return ""
	}, 3: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="panel-group" role="tablist" aria-multiselectable="true" style="margin : 2px 0 8px;"><div class="panel panel-default" style="border-radius: 5px;"><div class="panel-heading" role="tab" style="background : #ffffff;border-radius: 5px; padding: 5px;"><h5 class="panel-title padding-5"><a class="tab-header collapsed tab-with-button tab-with-xs-button" role="button" data-toggle="collapse" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "mainIdHref"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('> <b class="tab-header-text">');
		d = c._triageMustache.call(a, "header", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</b></a> <a class="btn btn-default btn-xs tooltip-button single-btn" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "view.customerUrl"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank" data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_customer", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" style="position: relative;"><i class="fa fa-external-link"></i></a><div class="clearfix"></div></h5></div><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "mainId"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="panel-collapse collapse" role="tabpanel"><div class="panel-body" style="padding : 0;">');
		d = c.each.call(a, "fields", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div></div></div>");
		return ""
	}, 4: function (a,
	                c, d, b) {
		b.buffer.push("<div>");
		a = c["if"].call(a, "isInner", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(7, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div style="padding : 5px 10px;">');
		b.buffer.push(e((c.ShopifyInnerDataView || a && a.ShopifyInnerDataView || d).call(a, {
			name: "ShopifyInnerDataView", hash: {content: ""}, hashTypes: {content: "ID"},
			hashContexts: {content: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 7: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div style="width : 32%; display: inline-block; padding : 5px; vertical-align : middle;">');
		d = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div style="width : 5px; display : inline-block;vertical-align : middle;"> : </div><div style="display : inline-block; padding : 5px; width : 60%; vertical-align : middle;">');
		b.buffer.push(e(c._triageMustache.call(a, "value", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 9: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="panel-group" role="tablist" aria-multiselectable="true" style="margin : 2px 0 8px;"><div class="panel panel-default" style="border-radius: 5px;"><div class="panel-heading" role="tab" style="background : #ffffff;border-radius: 5px; padding: 5px;"><h5 class="panel-title padding-5"><a class="tab-header collapsed tab-with-button" role="button" data-toggle="collapse" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "mainIdHref"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('> <b class="tab-header-text">');
		d = c._triageMustache.call(a, "header", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</b></a><div class="btn-group"><button class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-reorder"></i> <span class="caret"></span></button><ul class="dropdown-menu" style="left : auto; right : 0;">');
		d = c["if"].call(a, "canRefund", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<li><a href="javascript:void(0);" class="duplicate_order" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "mainId"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "duplicate_order",
			{
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</a></li>");
		d = c["if"].call(a, "canCancel", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul> <a class="btn btn-default btn-xs tooltip-button" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {href: "orderUrl"}, hashTypes: {href: "STRING"},
			hashContexts: {href: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' target="_blank" data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_order", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-external-link"></i></a></div><div class="clearfix"></div></h5></div><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {id: "mainId"},
			hashTypes: {id: "STRING"}, hashContexts: {id: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' class="panel-collapse collapse main-tab" role="tabpanel"><div class="panel-body" style="padding : 0;">');
		d = c.each.call(a, "fields", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div></div></div>");
		return ""
	}, 10: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<li><a href="javascript:void(0);" class="refund_order" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "mainId"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "refund_order", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 12: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<li><a href="javascript:void(0);" class="cancel_order" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "mainId"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "cancel_order", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 14: function (a, c, d, b) {
		b.buffer.push("<div>");
		a = c["if"].call(a, "isInner", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(15, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, 15: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div style="width : 32%; display: inline-block; padding : 5px; vertical-align :middle;">');
		d = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div style="width : 5px; display : inline-block;vertical-align : middle;"> : </div><div style="display : inline-block; padding : 5px; width : 60%; vertical-align : middle;">');
		b.buffer.push(e(c._triageMustache.call(a, "value", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 17: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="text-center" style="margin : 10px 0;"><button class="btn btn-default load-orders">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "load_orders", {
			name: "I18n", hash: {context: "conversations"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push("</button></div>");
		return ""
	}, 19: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isEdit::hidden :shopify-edit-container :smart-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="width : 100%; height : 100%;"><div style="left : 10px; right : 10px; width : auto; position: absolute; top: 10px; bottom: 64px;overflow: auto;"><section><p>');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "customize_field", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></section><section id="customer-select" class="config-type"><label class="checkbox" style="display: inline-block;vertical-align: middle;margin-bottom: 0;"><input type="checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {checked: "view.customerSettings.enabled"},
			hashTypes: {checked: "STRING"}, hashContexts: {checked: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' class="customer-select" /><i></i>');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "show_customer_details", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><a href="javascript:void(0);" data-id="customer-select" class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
		b.buffer.push(d((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || e).call(a, {
			name: "ShopifyEditSettingsView",
			hash: {contentBinding: "view.customerSettings"},
			hashTypes: {contentBinding: "ID"},
			hashContexts: {contentBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section id="order-select" class="config-type"><label class="checkbox" style="display: inline-block;vertical-align: middle;margin-bottom: 0;"><input type="checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "view.orderSettings.enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="order-select" /><i></i>');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "show_order_details", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><a href="javascript:void(0);" data-id="order-select" class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
		b.buffer.push(d((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || e).call(a, {
			name: "ShopifyEditSettingsView",
			hash: {contentBinding: "view.orderSettings"},
			hashTypes: {contentBinding: "ID"},
			hashContexts: {contentBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section></div><footer class="form-footer" style="position: absolute; bottom : 0; left : 0; right : 0;"><button type="submit" class="btn btn-primary save-edit">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-default  cancel-edit" id="cancel-form">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></div>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing,
			f = this.escapeExpression;
		b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "shopify_details", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isLoading:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="width:100%;height:100%;"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isEdit:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><form class="search-shopify smart-form padding-10"><div ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "view.isAdminAgent:admin-access-property"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><label class="input" style="vertical-align : middle;"><i class="fa fa-search"></i><input type="search" required="required" class="search-query" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search_shopify", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /><a class="clean-filter clean-search-shopify hidden" href="javascript:void(0);"><i class="fa fa-times txt-color-red" aria-hidden="true"></i></a></label></div>');
		d = c["if"].call(a, "view.isAdminAgent", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</form><div style="left : 10px; right : 10px;width : auto; position: absolute;top: 58px;bottom: 0;overflow: auto; overflow-x:hidden"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.emptyResults:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><div>");
		d = c["with"].call(a, "view.customerValues", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "view.orderValues", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(9,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.hasMoreOrders", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div><div ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.emptyResults::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><p style="    text-align: center;    font-style: italic;    color: #999;    margin: 20px 0;"><i class="fa fa-exclamation-circle"></i> ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "no_results", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div><div ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.showImage::hidden :text-center"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><img src="https://static-a.tawk.to/v2/a34/images/shopify.png" style="background-size: contain; width: 100%; margin: 20px 0; max-width : 320px" /></div></div></div>');
		d = c["if"].call(a, "view.isAdminAgent", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div><div ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isLoading::hidden :text-center"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 100px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorShopifyInnerDataView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<a class="btn btn-default btn-xs tooltip-button single-btn edit-shipping-address" href="javascript:void(0);" data-placement="bottom" data-original-title="Edit Shipping Address" style="position: relative;" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "view.content.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-edit"></i></a>');
		return ""
	}, 3: function (a, c, d, b) {
		b.buffer.push("<div>");
		a = c["if"].call(a, "isInner", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.program(6, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div style="padding : 5px 10px;">');
		b.buffer.push(e((c.ShopifyInnerDataView ||
			a && a.ShopifyInnerDataView || d).call(a, {
			name: "ShopifyInnerDataView",
			hash: {content: ""},
			hashTypes: {content: "ID"},
			hashContexts: {content: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 6: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div style="width : 32%; display: inline-block; padding : 5px; vertical-align : middle;">');
		d = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div style="width : 5px; display : inline-block;vertical-align : middle;"> : </div><div style="display : inline-block; padding : 5px; vertical-align : middle; width : 60%">');
		b.buffer.push(e(c._triageMustache.call(a, "value", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 8: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="panel-body hidden edit-view" style="padding : 0;"><form class="smart-form shipping-address-form"><fieldset><section><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "address_line_1", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" name="address1" class="address1 required" /></label></section><section><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "address_line_2", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" name="address2" class="address2" /></label></section><section><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "address_city", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" name="city" class="city required" /></label></section><section><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "address_zip", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" name="zip" class="zip required" /></label></section></fieldset><footer><button type="submit" class="btn btn-primary submit-address-edit">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "save", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button><button class="btn btn-default cancel-address-edit">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div class="panel-group" role="tablist" aria-multiselectable="true" style="margin : 2px 0 8px;"><div class="panel panel-default" style="border-radius: 5px;"><div class="panel-heading" role="tab" style="background : #ffffff;border-radius: 5px; padding: 0;"><h5 class="panel-title padding-5"><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":tab-header :collapsed view.content.isShippingAddress:tab-with-button view.content.isShippingAddress:tab-with-xs-button"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' role="button" data-toggle="collapse" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "view.content.href"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('> <span class="tab-header-text">');
		d = c._triageMustache.call(a, "view.content.header", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></a>");
		d = c["if"].call(a, "view.content.isShippingAddress", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></h5></div><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "view.content.id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="panel-collapse collapse inner-tab" role="tabpanel"><div class="panel-body content-view" style="padding : 0;">');
		d = c.each.call(a, "fields", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a,
			"view.content.isShippingAddress", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorShopifySettingEdit = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div style="margin-left:8px; padding : 0;"><p class="note">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "shopify_header",
			{
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</p><label ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.content.enabled::disabled :input"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				name: "view.content.label", valueBinding: "view.content.header",
				"class": "field-header", type: "text"
			},
			hashTypes: {name: "ID", valueBinding: "STRING", "class": "STRING", type: "STRING"},
			hashContexts: {name: a, valueBinding: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></div>");
		return ""
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li class="field" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "label"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div><label style="display: inline-block;vertical-align: middle;margin-bottom: 0;" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.content.enabled::disabled :checkbox"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="field-selection" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "enabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "label"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		d = c._triageMustache.call(a, "label", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</label>");
		d = c["if"].call(a, "fields", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div>');
		d = c["if"].call(a, "fields", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</li>");
		return ""
	}, 4: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<a href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "label"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="expand-list" style="display: inline-block;padding: 0;border: 0;vertical-align: middle;margin-left: 5px;color: #555; margin-top : -3px;"><i class="fa fa-lg fa-chevron-circle-down"></i></a>');
		return ""
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.ShopifyEditSettingsView || a && a.ShopifyEditSettingsView || d).call(a, {
			name: "ShopifyEditSettingsView",
			hash: {keyId: "label", content: ""},
			hashTypes: {keyId: "ID", content: "ID"},
			hashContexts: {keyId: a, content: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression;
		d = c["if"].call(a, "view.content.header", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<ul class="sortable-list" style="list-style:none; margin-left : 5px;"><li class="dummy-holder" style="margin:0; padding : 0;"></li>');
		d = c.each.call(a, "view.content.fields", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul><div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":overlay view.content.enabled:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorShortcutsListView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		a = c["if"].call(a, "view.activeShortcut.keyPlaintext", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.program(4, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	},
	2: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.activeShortcut.keyPlaintext", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_shortcut", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 6: function (a, c, d, b) {
		d =
			c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})))
	}, 8: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<section style="max-width : 500px"><label class="label" for="message">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "multiple_choice", {
			name: "I18n", hash: {context: "shortcuts"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</label>");
		d = c.each.call(a, "option", "in", "view.activeShortcut.optionsList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<section><button type="button" class="btn btn-default" id="add-shortcut-option">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_option", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button></section><div class="clearfix"></div></section>');
		return ""
	}, 9: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><label class="input"><a href="javascript:void(0);" class="button-icon icon-append tooltip-hover delete-option" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_option", {
			name: "I18n", hash: {context: "tooltip"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a><input type="text" class="shortcut-option required" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enter_answer", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "option.val"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("</label><em ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"for": "option.id"},
			hashTypes: {"for": "STRING"},
			hashContexts: {"for": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="invalid"></em></section>');
		return ""
	}, 11: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<li class="tab-select-shortcut" style="padding : 5px 10px; cursor: pointer" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><div class="details"><p style="margin-bottom :0 ;"><b>/');
		b.buffer.push(e(c._triageMustache.call(a, "key", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</b></p>");
		d = c["if"].call(a, "shortMessage", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(12,
				b), inverse: this.program(15, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="edit"><button class="btn btn-default edit-shortcut" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-pencil-square-o" aria-hidden="true"></i></button></div></li>');
		return ""
	}, 12: function (a, c, d, b) {
		var e = this.escapeExpression,
			f = c.helperMissing;
		b.buffer.push('<p class="short-message">');
		b.buffer.push(e(c._triageMustache.call(a, "shortMessage", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c["if"].call(a, "options", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i class="expand-message fa fa-chevron-down tooltip-hover" aria-hidden="true" title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "expand_shortcut_text", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i></p><p class="full-message hidden">');
		b.buffer.push(e(c._triageMustache.call(a, "fullMessage", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c["if"].call(a, "options", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i class="compress-message fa fa-chevron-up tooltip-hover" aria-hidden="true" title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "collapse_shortcut_text", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i></p>');
		return ""
	}, 13: function (a, c, d, b) {
		b.buffer.push("[+]")
	},
	15: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<p style="padding-left : 5px;">');
		b.buffer.push(d(c._triageMustache.call(a, "fullMessage", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		a = c["if"].call(a, "options", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</p>");
		return ""
	}, 17: function (a,
	                 c, d, b) {
		b.buffer.push('<li style="padding : 5px 10px;">No shortcuts found</li>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":section-header view.activeShortcut::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="title-container"><p>');
		d = c["if"].call(a, "view.activeShortcut", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(6, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div><div class="icon-container"><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-sm view.activeShortcut:back-to-main-view:back-to-chat"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":section-content view.activeShortcut:inner-view"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><form name="shortcut-form" class="smart-form admin-form shortcut-form hidden"><div class="form-scrollable-container"><fieldset><section><label class="label" for="shortcutKey">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "shortcut_key", {
			name: "I18n", hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required mdb_syntax" id="shortcutKey" name="shortcutKey" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "enter_shortcut", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "view.activeShortcut.keyPlaintext"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' maxlength="100"/></label></section><section id="message-section"><label class="label" for="message">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "message", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea">');
		b.buffer.push(e((c.textarea ||
			a && a.textarea || f).call(a, {
			name: "textarea",
			hash: {
				name: "message",
				id: "message",
				rows: "5",
				"class": "required",
				placeholderKey: "enter_message",
				valueBinding: "view.activeShortcut.plainText"
			},
			hashTypes: {
				name: "STRING",
				id: "STRING",
				rows: "STRING",
				"class": "STRING",
				placeholderKey: "STRING",
				valueBinding: "STRING"
			},
			hashContexts: {name: a, id: a, rows: a, "class": a, placeholderKey: a, valueBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label></section><section class="form-table"><div class="form-table-row"><label class="label inline-label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "access", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="access-type" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "view.activeShortcut.isPublicShortcut"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('id="is-public" value="public"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "public", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="access-type" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "view.activeShortcut.isPersonalShortcut"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('id="is-personal" value="personal"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "personal", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div></div></div><div class="form-table-row"><label class="label inline-label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "type", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push(' : </label><div class="inline-group"><div class="form-table-cell"><label class="radio"><input type="radio" name="shortcut-type" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "view.activeShortcut.isMessageShortcut"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('id="is-message" value="m"><i></i>');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "message", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="form-table-cell"><label class="radio"><input type="radio" name="shortcut-type" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "view.activeShortcut.isSurveyShortcut"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('id="is-survey" value="s"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "survey", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></div></div></div></section>");
		d = c["if"].call(a, "view.isSurveyShortcut", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</fieldset></div><footer class="form-footer"><div ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":form-loading view.isShortcutFormLoading::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div><button type="submit" class="btn btn-primary" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "view.isShortcutFormLoading"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-default back-to-main-view" id="cancel-form" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "view.isShortcutFormLoading"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a &&
			a.I18n || f).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></form><div class="shortcut-list-container"><div class="smart-form padding-10 search-shortcuts-container"><label class="input"><input type="text" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "search", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" class="filter-shortcuts"><div class="clean-filter-shortcuts"><i class="fa fa-times" aria-hidden="true"></i></div></label><div class="smart-form show-shortcut-form"><button class="btn btn-primary open-shortcut-form">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "add", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div><ul class="shortcuts-tab-list" style="">');
		d = c.each.call(a, "view.pagedShortcutsList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.program(17, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul><div class="paged-list-footer"><div class="btn-group pull-right"><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :prev :prev-shortcut view.propertyShortcuts.hasPrevious::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Newer"><i class="fa fa-chevron-left"></i></a><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :next :next-shortcut view.propertyShortcuts.hasNext::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" data-original-title="Older"><i class="fa fa-chevron-right"></i></a></div></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorInnerTranscriptView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<div class="transcriptBody modal-body" style="overflow:auto; word-wrap: break-word; white-space: pre-line;"><div class="transcript transcript-pane">');
		d = c["if"].call(a, "referrer", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "messages", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		return ""
	}, 2: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="conversation-participant"><div class="conversation-content italic">');
		b.buffer.push(d(c._triageMustache.call(a, "referrer", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div></div>");
		return ""
	}, 4: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<div class="clear"></div>');
		return ""
	}, 6: function (a, c, d, b) {
		a = c["if"].call(a, "view.transcriptError", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.program(9, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 7: function (a, c, d, b) {
		b.buffer.push('<h5 class="text-center padding-5"><i class="fa fa-exclamation-circle"></i> Error in loading transcript</h5>')
	}, 9: function (a, c, d, b) {
		b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="section-header" ><div class="title-container" ><p>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "transcript", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><div style="float : left; margin-left : -100%;"><a class="close-transcript btn btn-default btn-sm back-to-main-view" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content inner-view">');
		a = c["with"].call(a, "view.transcriptData",
			{
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.program(6, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.confirmSimpleDelete = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<label class="input"><input id="check" type="text" /></label>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><span class="modal-title-tawk">');
		d = c._triageMustache.call(a, "view.confirmationHeader", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></h4></div><div class="modal-body" style="overflow:auto;"><form id="confirmation" name="confirmation" class="smart-form">');
		b.buffer.push(e(c._triageMustache.call(a, "view.confirmationQuestion", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c["if"].call(a, "view.needInput", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</form></div><div class="modal-footer"><button id="close" type="button" class="btn btn-default" data-dismiss="modal">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="submit" type="button" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn view.positiveProceeed:btn-primary:btn-danger"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c._triageMustache.call(a, "view.confirmationProceedText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</button></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.contactView = Ember.Handlebars.template({
	1: function (a, c, d, b, e) {
		b.buffer.push('<div class="ticket-block"><p class="ticket-header">');
		d = c["if"].call(a, "isVisit", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isChat", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		d = c["if"].call(a, "isTicket", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="time">');
		d = c._triageMustache.call(a, "time", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span><span>");
		d = c._triageMustache.call(a, "title", {
			name: "_triageMustache", hash: {}, hashTypes: {},
			hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></p>");
		d = c["if"].call(a, "messages", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		return ""
	}, 2: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-globe"></i>')
	}, 4: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-comments-o"></i>')
	}, 6: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-ticket"></i>')
	},
	8: function (a, c, d, b, e) {
		b.buffer.push('<div class="ticket-body">');
		d = c.each.call(a, "message", "as", "messages", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b, e),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<p style="padding : 0 8px; margin-top : -8px;">...</p></div>');
		d = c["if"].call(a, "isChat", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isTicket", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 9: function (a, c, d, b, e) {
		a = c["if"].call(a, "isChat", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b, e),
			inverse: this.program(12, b, e),
			types: ["ID"],
			contexts: [e[1]],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 10: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a,
			"message", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
	}, 12: function (a, c, d, b) {
		a = c._triageMustache.call(a, "message", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 14: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<a href="javascript:void(0);" class="view-transcript" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(">");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "view_transcript", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a>");
		return ""
	}, 16: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<a href="javascript:void(0);" class="view-ticket" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "view_ticket", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a>");
		return ""
	}, 18: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<tr><td class="text-center" colspan="3"><strong>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_known", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</strong></td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ip_address", {
			name: "I18n",
			hash: {context: "ban_list"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.lastKnown.ip", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "hostname_text", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a,
			"contactData.lastKnown.htn", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "country", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.lastKnown.cn",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "city", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c["if"].call(a, "contactData.lastKnown.cy", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(19, b), inverse: this.program(21, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "browser", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.lastKnown.bw", {
			name: "_triageMustache", hash: {},
			hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "os", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.lastKnown.os", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 19: function (a, c, d, b) {
		a = c._triageMustache.call(a, "contactData.lastKnown.cy", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 21: function (a, c, d, b) {
		b.buffer.push("-")
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
		var f = c.helperMissing, g = this.escapeExpression;
		b.buffer.push('<div id="conversation-action-header"><button id="close-conversation" class="btn btn-default pull-left" data-placement="bottom"data-original-title="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "back_to_list", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-arrow-left"></i></button><div id="chat-with">');
		d = c._triageMustache.call(a, "contactData.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="conversation-paging" ');
		b.buffer.push(g(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":btn-group :pull-right contactData.indexNum::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><a id="prev-conversation" ');
		b.buffer.push(g(c.action.call(a, "previousContact", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' class="btn btn-default prev" href="javascript:void(0);"data-placement="bottom" data-original-title="');
		b.buffer.push(g((c.I18n ||
			a && a.I18n || f).call(a, "previous_text", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-conversation" ');
		b.buffer.push(g(c.action.call(a, "nextContact", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' class="btn btn-default next" href="javascript:void(0);"data-placement="bottom" data-original-title="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "next_text", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-chevron-right"></i></a></div><a id="open-details-view" href="javascript:void(0);"><i class="fa fa-arrow-circle-left"></i></a><div class="clearfix"></div></div><div id="conversations-messages-container" class="contacts-view"><div class="message-container"><div ');
		b.buffer.push(g(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":ticket-block :text-center contactData.timelineEnded:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><button id="loader-contact-timeline" class="btn btn-default btn-sm">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "load_old_history", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' <i class="fa fa-arrow-up"></i></button></div>');
		d = c.each.call(a, "contactData.timeline", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div id="message-opacity-block" class="opacity-block"></div><div id="conversation-details-container"><table class="side-container"><tbody><tr><td class="text-right">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "name", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "email", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "total_visits", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.visitCount", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "total_chats", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.chatCount", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "total_tickets", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a,
			"contactData.ticketCount", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "first_visit", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.firstVisit",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "last_activity", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "contactData.lastActive", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		d = c["if"].call(a, "contactData.lastKnown", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div><a id="close-details-view" href="javascript:void(0);"><i class="fa fa-arrow-circle-right"></i></a>');
		return ""
	}, useData: !0, useDepths: !0
});
Ember.TEMPLATES.contactsListView =
	Ember.Handlebars.template({
		1: function (a, c, d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push("<tr ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {id: "_id"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="open-contact"><td style="width : 150px;"><span ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "countryFlag"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></span>");
			d = c["if"].call(a, "lastKnown.cy", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</td><td><strong>");
			d = c._triageMustache.call(a, "name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</strong>&nbsp;<p style="word-break: break-all; display : inline-block"><');
			d = c._triageMustache.call(a,
				"email", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('></p></td><td class="text-center"  style="width : 120px; max-width : 120px;">');
			d = c["if"].call(a, "lastKnown", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center last-active-cell" style="width : 150px; max-width : 150px;">');
			d = c._triageMustache.call(a, "lastActive", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</td><td class="text-center btn-cell" style="width : 60px;  min-width : 60px; max-width : 60px;"><a  href="javascript:void(0);" class="btn btn-default btn-sm create-ticket-contact" title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "create_ticket", {
				name: "I18n", hash: {context: "conversations"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('" ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "_id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><i class="fa fa-ticket"></i></a></td></tr>');
			return ""
		}, 2: function (a, c, d, b) {
			b.buffer.push("&nbsp;(");
			a = c._triageMustache.call(a, "lastKnown.cy", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push(")");
			return ""
		}, 4: function (a, c, d, b) {
			a = c._triageMustache.call(a, "lastKnown.ip", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			var e = c.helperMissing;
			b.buffer.push('<div id="no-conversations" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":well :well-light :text-center isLoading:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("><h3>");
			b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "no_contacts", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</h3></div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<div id="contacts-list-container"><table class="table" style="position : absolute; top : 0;"><thead><tr><th style="width : 150px">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "country", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" (");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "city", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(")</th><th>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "details", {
				name: "I18n", hash: {context: "tooltip"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</th><th class="text-center" style="width : 120px;">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ip_address", {
				name: "I18n",
				hash: {context: "ban_list"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</th><th class="text-center" style="width : 150px">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "last_activity", {
				name: "I18n", hash: {context: "conversations"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</th><th style="width : 80px;"></th></tr></thead></table><div id="contacts" class="view-section"><table class="table"><tbody>');
			d = c.each.call(a, "activeProperty.list.currentData", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</tbody></table></div></div>");
			d = c.unless.call(a, "activeProperty.list.currentData.length",
				{
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(6, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			return ""
		}, useData: !0
	});
Ember.TEMPLATES.imagePreview = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container"><div id="image-container" style="position : absolute; top : 0; bottom : 73px; width: 100%; overflow: auto; height: auto;"><img id="preview" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isLoading:hidden :image"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><img  ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isLoading::hidden :image"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' src="a34/images/ajax-loader-big.gif" /></div><div ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":modal-footer view.readOnly:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="position: absolute;width: 100%; bottom: 0; padding: 20px 20px 0; height : 54px;"><a target="_blank" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "view.imageSrc"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="btn btn-primary" id="close-bubble-gallery">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "download", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.conversationsProperties = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push("<li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {id: "property.id"}, hashTypes: {id: "STRING"},
			hashContexts: {id: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":get-tickets property.isSelected:open :active"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><p class="property-name"><i class="fa"></i><span class="title-section">');
		b.buffer.push(e(c._triageMustache.call(a, "property.propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		d = c["if"].call(a, "property.aggregate.all", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p><ul ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":inner-list :list-unstyled property.isSelected::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":get-contacts isContacts:active"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "contacts", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": ":get-spam isSpam:active"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "spam", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":get-trash isTrash:active"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "trash", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</li></ul></li>");
		return ""
	}, 2: function (a, c, d, b) {
		b.buffer.push('<span class="badge bg-color-red txt-color-white">');
		a = c._triageMustache.call(a, "property.aggregate.all", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div id="add-button-container"><button id="create-ticket" class="btn btn-primary"><i class="fa fa-plus"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "new_ticket", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div><ul class="properties-list">');
		a = c.each.call(a, "property", "as", "propertiesList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.conversationsView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push("&nbsp;assignee:me")
	}, 3: function (a, c, d, b) {
		b.buffer.push("&nbsp;label:spam")
	}, 5: function (a, c, d, b) {
		b.buffer.push("&nbsp;label:trash")
	}, 7: function (a, c,
	                d, b) {
		b.buffer.push("&nbsp;label:contacts")
	}, 9: function (a, c, d, b) {
		d = c["if"].call(a, "departments.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "agents.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 10: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "departments", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" id="department">');
		a = c.each.call(a, "departments", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 11: function (a, c, d, b) {
		d =
			this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 13: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agents", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" id="agent">');
		a = c.each.call(a, "agents", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 15: function (a, c, d, b) {
		a = c["if"].call(a,
			"isContactsList", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.program(18, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 16: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.ContactsListView || a && a.ContactsListView || d).call(a, {
			name: "ContactsListView",
			hash: {controllerBinding: "view.controller"},
			hashTypes: {controllerBinding: "STRING"},
			hashContexts: {controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	},
	18: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.ConversationsListView || a && a.ConversationsListView || d).call(a, {
			name: "ConversationsListView",
			hash: {controllerBinding: "view.controller"},
			hashTypes: {controllerBinding: "STRING"},
			hashContexts: {controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 20: function (a, c, d, b) {
		a = c["if"].call(a, "isChat", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b),
			inverse: this.program(23, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 21: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.ConversationsTranscriptView || a && a.ConversationsTranscriptView || d).call(a, {
			name: "ConversationsTranscriptView",
			hash: {contentBinding: "this", controllerBinding: "view.controller"},
			hashTypes: {contentBinding: "STRING", controllerBinding: "STRING"},
			hashContexts: {contentBinding: a, controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 23: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.TicketConversationsView || a && a.TicketConversationsView || d).call(a, {
			name: "TicketConversationsView",
			hash: {contentBinding: "this", controllerBinding: "view.controller"},
			hashTypes: {contentBinding: "STRING", controllerBinding: "STRING"},
			hashContexts: {contentBinding: a, controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 25: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.ContactView || a && a.ContactView || d).call(a, {
			name: "ContactView",
			hash: {controllerBinding: "view.controller"},
			hashTypes: {controllerBinding: "STRING"},
			hashContexts: {controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark"><i class="fa fa-inbox"></i> ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n", hash: {context: "conversations"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</h1></div><div id="search-list-container" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":col-xs-8 :col-sm-8 :col-md-8 :col-lg-8 activeProperty::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><form id="conversations-search" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isContactsList:hidden"}, hashTypes: {"class": "STRING"},
			hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><fieldset><div class="input-group"><div id="property-selected-name"><span id="property-label">in:');
		b.buffer.push(f(c._triageMustache.call(a, "activeProperty.propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c["if"].call(a, "isMyTickets", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isSpam", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isTrash", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isContactsList", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(7,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="chevron"></span></div><input type="text" class="form-control" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "search", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" id="search-text"/><div class="input-group-btn"><button id="openFilter" type="button" class="btn btn-default" tabindex="-1" aria-expanded="false"><span class="caret"></span></button><button type="button" class="btn btn-primary search" tabindex="-1"><i class="fa fa-search"></i></button><div class="dropdown-menu pull-right smart-form"><fieldset><section class="col col-6"><label class="input"><input type="text" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "min_num_message", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" id="min-messages" /></label></section><section class="col col-6"><label class="select custom-select"><div><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : <span class="selected-value">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></p></div><i></i><select id="search-status"><option value="0">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="1000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_open", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="2000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_awaiting", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="3000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_close", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option></select></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" name="from-date" id="from-date" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_from", {
			name: "I18n", hash: {context: "placeholders"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" /></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" name="to-date" id="to-date" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_to", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section><section class="col col-6"><label class="select custom-select"><div><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent_department", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : <span class="selected-value">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></p></div><i></i><select id="assignee"><option value="0">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="1">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "assigned_text", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="-1">');
		b.buffer.push(f((c.I18n || a &&
			a.I18n || e).call(a, "unassigned", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option><option ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "Tawk.userController.user.id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "me", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push(" (");
		b.buffer.push(f(c._triageMustache.call(a, "Tawk.userController.user.fullName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(")</option>");
		d = c["with"].call(a, "assigneeList", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select></label></section><section class="col col-6"><label class="input"><input type="text" name="tags" id="tags" data-role="tagsinput" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section></fieldset><footer><button type="submit" class="btn btn-primary search">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			e).call(a, "search", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn bg-color-teal txt-color-white" id="resetFilter">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-default" id="closeFilter">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></div></div></div></fieldset></form><form id="contacts-search" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isContactsList::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><fieldset><div class="input-group"><div id="property-selected-name"><span id="property-label">in:');
		d = c._triageMustache.call(a, "activeProperty.propertyName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isMyTickets", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isSpam", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isTrash", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isContactsList", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="chevron"></span></div><input type="text" class="form-control" placeholder="');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "search_contact", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" id="contact-query" /><div class="input-group-btn"><button type="button" class="btn btn-primary search-contact-btn" tabindex="-1"><i class="fa fa-search"></i></button></div></div></fieldset></form></div></div><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": ":innerContent conversationData:is-message-view"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><a id="open-properties-list" href="javascript:void(0);"><i class="fa fa-arrow-circle-right"></i></a><a id="close-properties-list" href="javascript:void(0);"><i class="fa fa-arrow-circle-left"></i></a><div id="list-opacity-block" class="opacity-block"></div>');
		b.buffer.push(f((c.ConversationsPropertiesView || a && a.ConversationsPropertiesView || e).call(a, {
			name: "ConversationsPropertiesView",
			hash: {controllerBinding: "view.controller"},
			hashTypes: {controllerBinding: "STRING"},
			hashContexts: {controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		d = c["if"].call(a, "activeProperty", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["with"].call(a, "conversationData", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "contactData",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(25, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="list-loading"><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.conversationListView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('&nbsp;<span class="badge bg-color-red txt-color-white">');
		a = c._triageMustache.call(a, "activeProperty.aggregate.all", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 3: function (a, c, d, b) {
		d = c["if"].call(a, "departments.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "agents.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d &&
		b.buffer.push(d);
		return ""
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a href="javascript:void(0);" class="submenu submenu-title">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "departments", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a><ul class="dropdown-menu">');
		a = c.each.call(a, "departments", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(5,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul></li>");
		return ""
	}, 5: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 7: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a href="javascript:void(0);" class="submenu submenu-title">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agents", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a><ul class="dropdown-menu">');
		a = c.each.call(a, "agents",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(5, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul></li>");
		return ""
	}, 9: function (a, c, d, b) {
		b.buffer.push('&nbsp;<span class="badge bg-color-red txt-color-white">');
		a = c._triageMustache.call(a, "activeProperty.aggregate.assignee", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	},
	11: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "updated_on", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 13: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "created_on", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 15: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "priority", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 17: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "status", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 19: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-sort-numeric-asc"></i>')
	}, 21: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-sort-numeric-desc"></i>')
	}, 23: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":smart-form activeProperty.list.totalItems::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="height : 30px;"><label class="checkbox"><input class="all-bulk-check" type="checkbox" /><i class="mark-select" style="top: 6px; right: 15px; left: auto;"></i></label></div>');
		return ""
	}, 25: function (a, c, d, b) {
		a = c["if"].call(a, "requester", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(26, b),
			inverse: this.program(35, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 26: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<tr ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "_id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":open-conversation isClosed:entry-closed isRead:entry-read"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><td class="text-center conversation-intro" style="font-style: normal;"><div class="circle">');
		d = c._triageMustache.call(a, "requester.firstLetterName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></td><td class="conversation-details"><p class="entry-info">');
		d = c._triageMustache.call(a, "requester.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('&nbsp;<span class="entry-email">');
		d = c._triageMustache.call(a, "requester.email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></p><small class="entry-metadata">[#');
		d = c._triageMustache.call(a, "humanId", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("] ");
		d = c._triageMustache.call(a, "subject", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</small>");
		d = c["if"].call(a, "hasAttach", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "assignee",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(29, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="hidden-xs text-center conversation-icon"><i class="fa fa-ticket"></i>');
		d = c["if"].call(a, "hasDraft", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(31, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="hidden-xs hidden-sm text-center conversation-status"><span ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":label :label-default statusLabel"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('  style="text-transform : uppercase;">');
		d = c._triageMustache.call(a, "currentStatus", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></td><td class="text-center conversation-sort">');
		d = c._triageMustache.call(a,
			"sorted", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center delete-cell">');
		d = c["if"].call(a, "hasAdminAccess", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(33, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 27: function (a, c, d, b) {
		b.buffer.push('<span class="has-attachment"><i class="fa fa-paperclip"></i></span>')
	},
	29: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<span class="agent-name-item">');
		b.buffer.push(d(c._triageMustache.call(a, "assignee", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 31: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('&nbsp;<br/><small class="txt-color-red">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "draft",
			{
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</small>");
		return ""
	}, 33: function (a, c, d, b) {
		b.buffer.push('<div class="smart-form"><label class="checkbox"><input class="bulk-check" type="checkbox" /><i class="mark-select"></i></label></div>')
	}, 35: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<tr ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {id: "_id"}, hashTypes: {id: "STRING"},
			hashContexts: {id: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":open-conversation isClosed:entry-closed isRead:entry-read"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td class="text-center conversation-intro" style="font-style: normal;"><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": ":circle countryFlag"}, hashTypes: {"class": "STRING"},
			hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('></div></td><td class="conversation-details"><p class="entry-info">');
		d = c._triageMustache.call(a, "visitorName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "visitorEmail", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(36, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p><small class="entry-metadata">');
		d = c["if"].call(a, "offlineForm", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(38, b),
			inverse: this.program(40, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</small>");
		d = c.each.call(a, "name", "in", "agentsNameList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(42, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="hidden-xs text-center conversation-icon"><i class="fa fa-comment-o"></i></td><td class="hidden-xs hidden-sm text-center conversation-status"><span ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":label :label-default statusLabel"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="text-transform : uppercase;">');
		d = c._triageMustache.call(a, "currentStatus", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></td><td class="text-center conversation-sort">');
		d = c._triageMustache.call(a,
			"sorted", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center delete-cell">');
		d = c["if"].call(a, "hasAdminAccess", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(33, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 36: function (a, c, d, b) {
		b.buffer.push('&nbsp;<span class="entry-email">');
		a = c._triageMustache.call(a,
			"visitorEmail", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 38: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "from_offline_form", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 40: function (a, c, d, b) {
		var e = c.helperMissing;
		d = c._triageMustache.call(a,
			"totalMessages", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push(", ");
		d = c._triageMustache.call(a, "duration", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" ");
		d = (c.rating || a && a.rating || e).call(a, "rating", {
			name: "rating",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	},
	42: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<span class="agent-name-item">');
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, 44: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.bulkMarkedTotal", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) :
			b.buffer.push("")
	}, 46: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="default-greeting" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isFilter:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div style="width : 50%;vertical-align: middle;display: inline-block; padding : 20px; height : 100%;">');
		b.buffer.push(d(c._triageMustache.call(a, "view.defaultGreeting", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<div class="smart-form"><label class="input" style="display: block;margin-bottom: 9px;"><input type="input" readonly ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {value: "activeProperty.forwardingEmail"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' style="cursor : text;"/></label></div>');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "checkout_video", {
			name: "I18n",
			hash: {variables: '{"lineStart" : "<p>", "lineEnd" : "</p>"}', context: "conversations"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div style="width : 50%;vertical-align: middle;display: inline-block; border-left: 1px solid #ddd; height : 100%;"><div id="youtube-container" style="position: relative; min-height: 300px; height: 100%; display:none;"><iframe src="https://www.youtube.com/embed/f0KsdPXGzzY?ecver=2" width="640" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div></div></div><div id="no-conversations" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":well :well-light :text-center isFilter::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c["if"].call(a, "isStatusAll", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(47, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isStatusOpen", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(49,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isStatusPending", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(51, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isStatusClosed", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(53, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		return ""
	}, 47: function (a,
	                 c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<h3>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_conversation", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h3>");
		return ""
	}, 49: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<h3>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_open_conversation", {
			name: "I18n", hash: {context: "conversations"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</h3>");
		return ""
	}, 51: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<h3>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_pending_conversation", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h3>");
		return ""
	}, 53: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<h3>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_closed_conversation", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h3>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div id="conversation-list-container"><div id="list-wrapper"><table class="table"><thead><tr><th class="column-head-details inner-wrapper smart-form"><ul ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isTrash:hidden isSpam:hide"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><li><div id="filter-assignee" class="dropdown"><a role="button" data-toggle="dropdown" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isMyMessageList:inactive"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);"><span class="filter-value">');
		d = c._triageMustache.call(a, "assigneeFilterTitle", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "displayAllMessageListNumber", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span>&nbsp;<i class="fa fa-sort"></i></a><ul class="dropdown-menu multi-level"><li id="0"><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li id="1"><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "assigned_text", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li id="-1"><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "unassigned", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		d = c["with"].call(a, "assigneeList", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div></li><li id="select-my-message" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "isMyMessageList::inactive"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "mine", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c["if"].call(a, "activeProperty.aggregate.assignee", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</li></ul></th><th class="hidden-xs column-head-icons text-right"><ul class="smart-form inline-group" style="float: right; margin: 0;"><li><label class="checkbox" style="margin-right: 15px;"><input type="checkbox" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "includeChats"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="only-chats"><i></i><span class="hidden-lg"><i class="icon fa fa-comment-o"></i>&nbsp;</span><span class="visible-lg">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "chats", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></label></li><li><label class="checkbox" style="margin-right: 15px;"><input type="checkbox" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "includeTickets"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="only-tickets"><i></i><span class="hidden-lg"><i class="icon fa fa-ticket"></i>&nbsp;</span><span class="visible-lg">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "tickets", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></label></li></ul></th><th class="hidden-xs hidden-sm column-head-assign text-center smart-form"><ul><li><div id="status-container" class="dropdown"><a role="button" data-toggle="dropdown" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isStatusOpen:inactive"}, hashTypes: {"class": "STRING"},
			hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' href="javascript:void(0);"><span class="filter-value">');
		d = c._triageMustache.call(a, "statusFilterTitle", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span>&nbsp;<i class="fa fa-sort"></i></a><ul class="dropdown-menu multi-level pull-right"><li id="0"><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n ||
			f).call(a, "any", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li id="2000"><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "status_awaiting", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li id="3000"><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "status_close", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li></ul></div></li><li id="select-open-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isStatusOpen::inactive"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n ||
			f).call(a, "status_open", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li></ul></th><th class="column-head-sort text-center"><div id="sort-container" class="dropdown"><a id="sortby" role="button" data-toggle="dropdown" class="btn btn-default btn-sm" href="javascript:void(0);"><span class="sort-value">');
		d = c["if"].call(a, "isUpdatedOnSort", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(11,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isCreatedOnSort", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isPrioritySort", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isStatusSort", {
			name: "if", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(17, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c["if"].call(a, "isAscending", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.program(21, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span>&nbsp;<span class="caret"></span></a><ul class="dropdown-menu multi-level pull-right"><li class="dropdown-submenu"><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "updated_on", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a><ul class="dropdown-menu"><li><a class="change-sort" href="javascript:void(0);" id="uo-new-old"><i class="fa fa-sort-numeric-desc"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "newest_oldest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a class="change-sort" href="javascript:void(0);" id="uo-old-new"><i class="fa fa-sort-numeric-asc"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "oldest_newest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li></ul></li><li class="dropdown-submenu"><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "created_on", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a><ul class="dropdown-menu"><li><a class="change-sort" href="javascript:void(0);" id="co-new-old"><i class="fa fa-sort-numeric-desc"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "newest_oldest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a class="change-sort" href="javascript:void(0);" id="co-old-new"><i class="fa fa-sort-numeric-asc"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "oldest_newest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li></ul></li><li class="dropdown-submenu"><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"priority", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</a><ul class="dropdown-menu"><li><a class="change-sort" href="javascript:void(0);" id="p-high-low"><i class="fa fa-sort-numeric-desc"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "highest_lowest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a class="change-sort" href="javascript:void(0);" id="p-low-high"><i class="fa fa-sort-numeric-asc"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "lowest_highest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li></ul></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":dropdown-submenu isStatusAll::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a class="submenu-title" href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "status", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a><ul class="dropdown-menu"><li><a class="change-sort" href="javascript:void(0);" id="st-open-closed"><i class="fa fa-sort-numeric-desc"></i> ');
		b.buffer.push(e((c.I18n || a &&
			a.I18n || f).call(a, "open_closed", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a class="change-sort" href="javascript:void(0);" id="st-closed-open"><i class="fa fa-sort-numeric-asc"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "closed_open", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li></ul></li></ul></div></th><th class="column-head-setting">');
		d = c["if"].call(a, "activeProperty.isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(23, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</th></tr><div class="clear"></div></thead></table><div id="conversation-list" class="view-section"><table class="table"><tbody>');
		d = c.each.call(a, "activeProperty.list.currentData", {
			name: "each", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(25, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</tbody></table><div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":alert :alert-info :text-center activeProperty.list.pendingData.length:active:fade activeProperty.list.pendingData.length::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="new-history"><button class="close" data-dismiss="alert">\u00d7</button><a id="retrieveHistory" href="javascript:void(0);" title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "retrieve_history", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><h4 class="alert-heading message">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "new_message", {
			name: "I18n",
			hash: {context: "sound_settings"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" : ");
		d = c._triageMustache.call(a, "activeProperty.list.pendingData.length",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</h4></a></div></div><div id="bulk-action-container" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.bulkMarkedTotal::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="bulk-action-wrapper"><p id="bulk-total-selected">');
		d = c["if"].call(a, "view.bulkMarkedTotal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(44, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p><ul id="bulk-list-container"><li ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isTrash:hidden :padding-10"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><button class="btn btn-danger" id="bulk-conversations-delete">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"delete_messages", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</button></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isSpam::hidden :padding-10"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><button class="btn btn-default" id="bulk-conversations-unspam">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"unspam_messages", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</button></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isTrash::hidden :padding-10"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><button class="btn btn-default" id="bulk-conversations-restore">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"restore_messages", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</button></li><li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isTrash::hidden :padding-10"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><button class="btn btn-default" id="bulk-conversations-purge">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a,
			"purge_messages", {
				name: "I18n",
				hash: {context: "conversations"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</button></li><li class="padding-10"><button id="clear-bulk-selection" class="btn bg-color-teal txt-color-white" id="bulk-conversations-purge">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "clear_selection", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></li></ul></div></div></div></div>");
		d = c.unless.call(a, "activeProperty.list.currentData.length", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(46, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, useData: !0
});
Ember.TEMPLATES.newTicketView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<section>");
		b.buffer.push(e((c.webPropertySelect || a && a.webPropertySelect ||
			d).call(a, {
			name: "webPropertySelect",
			hash: {noAll: "true", selectedValueBinding: "view.currentProperty"},
			hashTypes: {noAll: "STRING", selectedValueBinding: "STRING"},
			hashContexts: {noAll: a, selectedValueBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</section>");
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "departments", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a, "view.departments", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 4: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agents", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a, "view.agents", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 7: function (a, c, d, b) {
		a = c.unless.call(a, "disabled", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 8: function (a, c, d, b) {
		d =
			this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("&nbsp;");
		a = c["if"].call(a, "isPropertyClient", {
			name: "if", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(9, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 9: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("(");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "client", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(")");
		return ""
	}, 11: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<label>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "attached_files", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		return ""
	}, 13: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<p class="element"><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "downloadUrl"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank">');
		d = c._triageMustache.call(a, "fileName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" (");
		d = c._triageMustache.call(a, "fileSize", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(')</a><a href="javascript:void(0);" class="button-icon delete-attachment" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {id: "handle"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><i class="fa fa-times"></i></a></p><div class="clearfix"></div>');
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="section-header"><div class="title-container"><p><i class="fa fa-ticket" aria-hidden="true"></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "create_ticket", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat cancel-ticket-form btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="modal-body"><form class="ticket-form" name="ticket-form"><div class="smart-form">');
		d = c.unless.call(a, "view.fromChat", {
			name: "unless", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(1, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "recipient_name", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required requester-name" name="requester-name" placeholder="');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "enter_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "view.recipientName"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "recipient_email", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required email requester-email" name="requester-email"placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enter_email", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {value: "view.recipientEmail"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' /></label></section><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "subject", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><input type="text" class="required ticket-subject" name="ticket-subject" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "enter_subject", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section><section class="ticket-message-container"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "message", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea editable-message-container"><div name="ticket-message" contenteditable="true" class="editable-div ticket-message"></div><input type="text" class="hidden ticket-watchers" /><input type="text" class="hidden ticket-shortcuts" /></label><em for="ticket-message" class="invalid hidden">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "required", {
			name: "I18n",
			hash: {context: "form_validation_messages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</em><input type="text" class="hidden required" id="rich-message" /></section><section><label class="label" for="ticket-assignee">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "assign_to", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><i></i><select class="ticket-assignee"><option ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "Tawk.userController.user.id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' selected="true">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "me", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" (");
		b.buffer.push(f(c._triageMustache.call(a, "Tawk.userController.user.fullName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(')</option><option value="0"}}>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "none", {
			name: "I18n",
			hash: {context: "sound_settings"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		d = c["if"].call(a, "view.departments.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.agents.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select></label></section><section><label class="label" for="ticket-priority">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select "><i></i><select class="ticket-priority"><option value="1000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_highest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="2000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_high", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="3000" selected>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_medium", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="4000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_low", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="5000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_lowest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option></select></label></section></div><section><label>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div><input type="text" class="new-ticket-tags" data-role="tagsinput" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_tags", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></div></section></form><section class="upload-attachment-container"><div class="attachment-upload-container">');
		d = c["if"].call(a, "view.attachedFiles.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "view.attachedFiles", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div><form enctype="multipart/form-data" class="new-upload-form" method="post"><input type="file" class="hidden file-input attach-files-list" name="file[]" multiple="multiple" /><label title="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "upload_file", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" class="attach-trigger-label"><span class="fa fa-paperclip fa-lg fa-flip-vertical"></span><span class="text-upload">&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_attachment", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></label></form></div></section></div><div class="modal-footer"><button type="button" class="btn btn-default cancel-ticket-form" data-dismiss="modal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-primary submit">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"create", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</button></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.newTicketViewModal = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content">');
		b.buffer.push(e((c.NewTicketView || a && a.NewTicketView || d).call(a, {
			name: "NewTicketView",
			hash: {
				parentViewBinding: "view",
				showCancelButton: "true",
				recipientEmailBinding: "view.recipientEmail",
				recipientNameBinding: "view.recipientName",
				controllerBinding: "view.controller",
				currentPropertyBinding: "view.currentProperty",
				fromHistoryBinding: "view.fromHistory"
			},
			hashTypes: {
				parentViewBinding: "STRING",
				showCancelButton: "STRING",
				recipientEmailBinding: "STRING",
				recipientNameBinding: "STRING",
				controllerBinding: "STRING",
				currentPropertyBinding: "STRING",
				fromHistoryBinding: "STRING"
			},
			hashContexts: {
				parentViewBinding: a,
				showCancelButton: a,
				recipientEmailBinding: a,
				recipientNameBinding: a,
				controllerBinding: a,
				currentPropertyBinding: a,
				fromHistoryBinding: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.tagMessageView = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "view.isLoading::hidden :text-center"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' style="position: absolute; bottom: 0; left: 0; right: 0; top : 34px;"><h5><i class="fa fa-refresh fa-spin"></i></h5></div><form ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isLoading:hidden :smart-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><fieldset><div><input type="text" class="message-tags" data-role="tagsinput" placeholder="');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "add_tags", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" maxlength="255"');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "view.customTags.data"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></div></fieldset><footer><button type="submit" class="btn btn-primary save-tags">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-default close-tag-form">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form>");
		return ""
	},
	useData: !0
});
Ember.TEMPLATES.ticketDetailsView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "chat_transcript", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td><a class="open-ticket-transcript" href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "view.content.chatId"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "click_view", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></td></tr>");
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(' <label class="input">');
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {value: "view.content.visitorName", name: "convert-name", id: "convert-name", type: "text"},
			hashTypes: {value: "ID", name: "STRING", id: "STRING", type: "STRING"},
			hashContexts: {value: a, name: a, id: a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label><em id="convert-name-error" for="convert-name" autogenerated="true" class="invalid"></em>');
		return ""
	}, 5: function (a, c, d, b) {
		a = c._triageMustache.call(a,
			"view.content.req.name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 7: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="input">');
		b.buffer.push(e((c.input || a && a.input || d).call(a, {
			name: "input",
			hash: {
				value: "view.content.visitor.e",
				minlength: "1",
				name: "convert-email",
				id: "convert-email",
				"class": "email required",
				type: "text"
			},
			hashTypes: {
				value: "ID", minlength: "STRING",
				name: "STRING", id: "STRING", "class": "STRING", type: "STRING"
			},
			hashContexts: {value: a, minlength: a, name: a, id: a, "class": a, type: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label><em id="convert-email-error" for="convert-email" autogenerated="true" class="invalid"></em>');
		return ""
	}, 9: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.content.req.email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 11: function (a,
	                 c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "created_on", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td>');
		d = c._triageMustache.call(a, "view.content.startDateTime", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		d = c.unless.call(a, "view.content.cbe", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.content.watchersString", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "status", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td class="smart-form"><label class="select"><i></i><select id="current-ticket-status"><option value="1000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_open", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="2000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_awaiting", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="3000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status_close", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option></select></label></td></tr>");
		return ""
	}, 12: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "created_by", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td>');
		a = c._triageMustache.call(a, "view.content.crtrN", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</td></tr>");
		return ""
	}, 14: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "watchers", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td>');
		b.buffer.push(e(c._triageMustache.call(a,
			"view.content.watchersString", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</td></tr>");
		return ""
	}, 16: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "departments", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a, "assigneeList.departments", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 17: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d(c._triageMustache.call(a,
			"name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</option>");
		return ""
	}, 19: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agents", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a,
			"assigneeList.agents", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 20: function (a, c, d, b) {
		a = c.unless.call(a, "disabled", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 21: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("&nbsp;");
		a = c["if"].call(a, "isPropertyClient", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(22, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 22: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("(");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "client", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(")");
		return ""
	}, 24: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tags_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td><input type="text" id="ticket-tags" data-role="tagsinput" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></td></tr>');
		return ""
	}, 26: function (a, c, d, b) {
		b.buffer.push('<div class="fields-container"  style="border-bottom : 0; border-top: 1px solid #ccc;"><ul class="attributes-list"><li><i class="fa fa-tags"></i>&nbsp;');
		a = c.each.call(a, "view.content.tags", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</li></ul></div>");
		return ""
	}, 27: function (a, c, d, b) {
		b.buffer.push('<span class="label label-info">');
		a =
			c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="section-header" style="display: none;"><div class="title-container"><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "details", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</p></div><div class="icon-container"><a class="back-to-chat btn btn-default btn-sm" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a></div><div class="clearfix"></div></div><div class="section-content"><form id="details-form"><table class="side-container smart-form"><tbody>');
		d = c["if"].call(a, "view.content.chatId", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td>');
		d = c["if"].call(a, "view.content.isNewConvert", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td>');
		d = c["if"].call(a, "view.content.isNewConvert", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.program(9, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		d = c.unless.call(a, "view.content.isNewConvert", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td class="smart-form"><label class="select"><i></i><select id="current-ticket-priority"><option value="1000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_highest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="2000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_high", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="3000">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "priority_medium", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="4000">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "priority_low", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="5000">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			e).call(a, "priority_lowest", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option></select></label></td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "assignee", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td class="centered"> : </td><td class="smart-form"><label class="select"><i></i><select id="current-ticket-assignee"><option value="0">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_none", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option><option ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "Tawk.userController.user.id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' selected="true">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "me", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" (");
		b.buffer.push(f(c._triageMustache.call(a, "Tawk.userController.user.fullName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(")</option>");
		d = c["if"].call(a, "assigneeList.departments.length", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(16,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "assigneeList.agents.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</select></label></td></tr>");
		d = c["if"].call(a, "conversationData.isNewConvert", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d &&
		b.buffer.push(d);
		b.buffer.push("</tbody></table></form>");
		d = c["if"].call(a, "view.content.tags", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(26, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.modalTicketView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<span ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "countryFlag"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("></span>");
		return ""
	}, 3: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div id="ticket" class="transcript-pane">');
		d = c.each.call(a, "messages", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="details" class="transcript-pane hidden"><table style="border-collapse: separate; border-spacing: 5px 10px;  margin: 0 1%;"><tbody><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_id", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>#');
		d = c._triageMustache.call(a, "hId", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			e).call(a, "name", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "req.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "req.email", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "created_on", {
			name: "I18n", hash: {context: "conversations"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		d = c._triageMustache.call(a, "startDateTime", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		d = c.unless.call(a, "cbe", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a,
			"watchersString", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td><div id="tags-display-container"><span style="margin-right: 5px; vertical-align: middle;">');
		b.buffer.push(f(c._triageMustache.call(a, "tagString", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></div></td></tr></tbody></table></div>");
		return ""
	}, 4: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	},
	6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "created_by", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		a = c._triageMustache.call(a, "crtrN", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</td></tr>");
		return ""
	}, 8: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<tr><td class="text-right">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "watchers", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td><td style="padding: 0 5px;"> : </td><td>');
		a = c._triageMustache.call(a, "watchersString", {
			name: "_triageMustache", hash: {},
			hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</td></tr>");
		return ""
	}, 10: function (a, c, d, b) {
		b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content" style="width: 100%; height: 100%;"><div ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "modalTicketData::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' style="width: 100%;top: 0;position: absolute;bottom: 73px;"><div id="transcriptHeader" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":modal-header modalTicketData.isPopover:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div><div class="btn-group modal-title-tawk-nav" role="group"><a class="transcript-btn btn btn-default active" data-original-title="Ticket" href="javascript:void(0);" data-target="#ticket" data-placement="bottom"><i class="fa fa-ticket"></i></a><a class="transcript-btn btn btn-default" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "details", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" href="javascript:void(0);" data-target="#details" data-placement="bottom"><i class="fa fa-info"></i></a></div><h4 class="modal-title" id="myModalLabel">');
		d = c["if"].call(a, "modalTicketData.countryFlag", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="modal-title-tawk"> #');
		d = c._triageMustache.call(a, "modalTicketData.hId", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;:&nbsp;");
		d = c._triageMustache.call(a, "modalTicketData.subj", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(' </span></h4><div style="clear: both;"></div></div></div><div id="transcriptBody" class="modal-body" style="overflow:auto;">');
		d = c["with"].call(a, "modalTicketData", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		d = c.unless.call(a, "modalTicketData", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="transcriptFooter" class="modal-footer" style="position:absolute; bottom : 0; width: 100%;"><button type="button" class="btn btn-default" data-dismiss="modal">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.ticketConversationsView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		a = c._triageMustache.call(a, "conversationData.subj", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) :
			b.buffer.push("")
	}, 3: function (a, c, d, b) {
		b.buffer.push("#");
		d = c._triageMustache.call(a, "conversationData.hId", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;:&nbsp;");
		d = c._triageMustache.call(a, "conversationData.subj", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 5: function (a, c, d, b) {
		b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0;">');
		d = c.each.call(a, "activeProperty.tabSettings", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown">');
		d = c.each.call(a, "activeProperty.tabSettings", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div class="clearfix"></div>');
		return ""
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isMenu:dropdown:open-view"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-type": "label"},
			hashTypes: {"data-type": "STRING"},
			hashContexts: {"data-type": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": ":tab isMenu:main-menu"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' rel="tooltip" data-toggle="dropdown" data-placement="bottom" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "title"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c["if"].call(a, "isInternal", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(7, b), inverse: this.program(9,
				b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "isMenu", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a>");
		d = c["if"].call(a, "isMenu", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</li>");
		return ""
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<i ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":fa fontClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i>");
		return ""
	}, 9: function (a, c, d, b) {
		b.buffer.push('<span class="menu-title">');
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 11: function (a, c, d, b) {
		b.buffer.push('&nbsp;<b class="caret"></b>')
	},
	13: function (a, c, d, b) {
		b.buffer.push('<ul class="dropdown-menu" role="dropdown">');
		a = c.each.call(a, "items", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	}, 14: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="open-view inner-item" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-type": "label"},
			hashTypes: {"data-type": "STRING"},
			hashContexts: {"data-type": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);">');
		a = c["if"].call(a, "isInternal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.program(17, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a></li>");
		return ""
	}, 15: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<i ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":fa fontClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i>&nbsp;");
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		return ""
	}, 17: function (a, c, d, b) {
		a = c._triageMustache.call(a, "title",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 19: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isMenu:dropdown-submenu:open-view"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		a = c["if"].call(a, "isMenu", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.program(23, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</li>");
		return ""
	}, 20: function (a, c, d, b) {
		b.buffer.push('<a href="javascript:void(0);" class="minimized-dropdown left text-left" data-toggle="dropdown">');
		d = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a><ul class="dropdown-menu multi-level"  style="right:100%; left : auto;">');
		d = c.each.call(a, "items", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(21, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul>");
		return ""
	}, 21: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' class="open-view inner-item"><a href="javascript:void(0);" class="text-left">');
		a = c["if"].call(a, "isInternal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.program(17, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a></li>");
		return ""
	}, 23: function (a, c, d, b) {
		b.buffer.push('<a href="javascript:void(0);" class="text-left">');
		a = c["if"].call(a, "isInternal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.program(17, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a>");
		return ""
	}, 25: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0;"><li class="open-view active" data-id="id"><a href="javascript:void(0);" class="tab" rel="tooltip" data-toggle="dropdown" data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "details", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-info"></i></a></li></ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown"><li class="open-view"><a href="javascript:void(0);" class="text-left"><i class="fa fa-info"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "details", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a href="javascript:void(0);" class="tag-transcript text-left"><i class="fa fa-tags"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		d = c["if"].call(a, "isSpam", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(26, b),
			inverse: this.program(28, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeProperty.isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(30, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></div>");
		return ""
	}, 26: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a id="single-ticket-not-spam" href="javascript:void(0);" class="text-left"><i class="fa fa-exclamation text-danger"></i><i class="fa fa-shield"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "not_spam", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 28: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a id="single-ticket-spam" href="javascript:void(0);" class="text-left"><i class="fa fa-shield"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "mark_spam", {
			name: "I18n", hash: {context: "conversations"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 30: function (a, c, d, b) {
		a = c["if"].call(a, "isTrash", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(31, b),
			inverse: this.program(33, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 31: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a id="single-ticket-restore" href="javascript:void(0);" class="text-left"><i class="fa  fa-rotate-left"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 33: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a id="single-ticket-delete" href="javascript:void(0);" class="text-left"><i class="fa fa-trash-o"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
			name: "I18n", hash: {context: "tooltip"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 35: function (a, c, d, b) {
		a = c.each.call(a, "conversationData.messages", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(36, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 36: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})))
	}, 38: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><a id="open-note" href="#reply-tab" data-toggle="tab">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "note", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 40: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="repliers-text-container"><p>');
		b.buffer.push(d(c._triageMustache.call(a, "conversationData.repliersText", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div>");
		return ""
	}, 42: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<p class="element"><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "downloadUrl"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank">');
		d = c._triageMustache.call(a, "fileName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" (");
		d = c._triageMustache.call(a, "fileSize", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(')</a><a href="javascript:void(0);" class="button-icon delete-attachment" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {id: "handle"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><i class="fa fa-times"></i></a></p><div class="clearfix"></div>');
		return ""
	}, 44: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "convert_incomplete", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 46: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "required", {
			name: "I18n",
			hash: {context: "form_validation_messages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 48: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button id="discard-convert" class="btn btn-default" style="margin : 0 5px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "discard", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button");
		return ""
	}, 50: function (a, c, d, b) {
		a = c.unless.call(a, "conversationData.isClosed", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(51, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 51: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button id="single-ticket-close" class="btn btn-default" style="margin : 0 5px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, 53: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 55: function (a, c, d, b) {
		a = c["if"].call(a,
			"conversationData.isNewConvert", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(56, b),
				inverse: this.program(58, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 56: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "create", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 58: function (a, c, d, b) {
		d = c.helperMissing;
		var e =
			this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 60: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "addnote_open", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 62: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send_open", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 64: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "addnote_pending", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 66: function (a,
	                 c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send_pending", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 68: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "addnote_close", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 70: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "send_close", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 72: function (a, c, d, b) {
		b.buffer.push('<div class="shortcuts-view menu-content hidden"></div><div class="history-view menu-content hidden"></div><div class="knowledgebase-view menu-content hidden" style="white-space: normal;"></div><div class="menu-content client-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content shopify-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div></div><div class="menu-content custom-view hidden" style="word-wrap: break-word; white-space : normal;"></div>')
	},
	74: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="details-button-container"><button class="btn btn-primary tag-transcript button-icon" rel="tooltip"data-placement="top"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-tags"></i></button>');
		d = c["if"].call(a, "isSpam",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(75, b),
				inverse: this.program(77, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeProperty.isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(79, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		return ""
	}, 75: function (a, c, d, b) {
		b.buffer.push('<button id="single-ticket-not-spam" class="btn btn-default" data-placement="top"data-original-title="Not Spam"><i class="fa fa-exclamation text-danger"></i><i class="fa fa-shield"></i></button>')
	},
	77: function (a, c, d, b) {
		b.buffer.push('<button id="single-ticket-spam" class="btn btn-default" data-placement="top"data-original-title="Mark as Spam"><i class="fa fa-shield"></i></button>')
	}, 79: function (a, c, d, b) {
		a = c["if"].call(a, "isTrash", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(80, b),
			inverse: this.program(82, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 80: function (a, c, d, b) {
		b.buffer.push('<button id="single-ticket-restore" class="btn btn-default" data-placement="top"data-original-title="Restore"><i class="fa  fa-rotate-left"></i></button>')
	},
	82: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button id="single-ticket-delete" class="btn btn-default" data-placement="top"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-trash-o"></i></button>');
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e =
			this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="jarviswidget" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-fullscreenbutton="false"><header class="chat-header" style="position: relative;"><ul class="header-list"><li class="name-text-container"><h2 class="name-text">');
		d = c["if"].call(a, "conversationData.isNewConvert", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		b.buffer.push('</h2></li><li class="menu-container"><div class="jarviswidget-ctrls" role="menu"><a id="prev-conversation" ');
		b.buffer.push(e(c.action.call(a, "previousConversation", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":button-icon :jarviswidget-delete-btn :prev conversationData.indexNum::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="" href="javascript:void(0);"data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "newer", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-conversation" ');
		b.buffer.push(e(c.action.call(a, "nextConversation", {
			name: "action", hash: {}, hashTypes: {}, hashContexts: {},
			types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":button-icon :jarviswidget-delete-btn :next conversationData.indexNum::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);"data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "older", {
			name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('"><i class="fa fa-chevron-right"></i></a><a href="javascript:void(0);" id="close-conversation" class="button-icon jarviswidget-delete-btn" rel="tooltip" title="" data-placement="bottom" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "back_to_list", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a></div>');
		d = c["if"].call(a, "activeProperty.tabSettings.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(25, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</li></ul></header><div class="chat-message-container"><div class="chat-content-container" role="content" style="right: 300px; width : auto;"><div class="chat-body message-container"><div class="chat-content">');
		d = c["if"].call(a, "conversationData.hId", {
			name: "if", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(35, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div class="conversation-input-container smart-form"><ul class="nav nav-tabs"><li class="active"><a id="open-reply" href="#reply-tab" data-toggle="tab">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "message", {
			name: "I18n",
			hash: {context: "triggers"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		d = c.unless.call(a, "conversationData.isNewConvert", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(38, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul>");
		d = c["if"].call(a, "conversationData.repliersText", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(40, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="tab-content"><div ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":tab-pane :active view.isNote:note-view"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' id="reply-tab"><div id="reply-container" class="editable-message-container"><table class="inner-reply-container"><tr><td><div id="reply-ticket-message" name="reply-ticket-message" contenteditable="true" class="editable-div chat-input"></div><div id="reply-note-message" name="reply-note-message" contenteditable="true" class="editable-div chat-input"></div></td></tr></table><div id="reply-attachments-container"><div id="reply-ticket-attachments-wrapper">');
		d = c.each.call(a, "view.ticketAttachedFiles", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(42, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="reply-note-attachments-wrapper">');
		d = c.each.call(a, "view.noteAttachedFiles", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(42, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div><div ");
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":btn-group :dropup conversationData.isNewConvert:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><form enctype="multipart/form-data" id="reply-upload-form" method="post"><input type="file" class="hidden file-input" name="file[]" id="reply-ticket-attachment" multiple="multiple" /><label title="Upload File" class="upload-file sprite-background" for="reply-ticket-attachment"></label></form></div><div class="drop-text"><span>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "drag_drop_text", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></div></div><em for="reply-ticket-message" class="invalid hidden" style="position: absolute; bottom : 10px;">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "required", {
			name: "I18n",
			hash: {context: "form_validation_messages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</em><input type="text" class="hidden" id="reply-ticket-watchers" /><input type="text" class="hidden" id="reply-ticket-shortcuts" /><input type="text" class="hidden" id="reply-note-watchers" /><input type="text" class="hidden" id="reply-note-shortcuts" /><em for="reply-ticket-message" class="invalid hidden" style="position: absolute; bottom : 10px;">');
		d = c["if"].call(a, "conversationData.isNewConvert", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(44,
				b), inverse: this.program(46, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</em><div class="btn-group dropup">');
		d = c["if"].call(a, "conversationData.isNewConvert", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(48, b),
			inverse: this.program(50, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<button class="btn btn-primary btn-sm submit-reply">');
		d = c["if"].call(a, "view.isNote", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(53,
				b), inverse: this.program(55, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</button><button ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-primary :dropdown-toggle :btn-sm conversationData.isNewConvert:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-toggle="dropdown" aria-expanded="false"><span class="caret"></span></button><ul class="dropdown-menu"><li><a href="javascript:void(0);" class="submit-reply" data-id="1000">');
		d = c["if"].call(a, "view.isNote", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(60, b),
			inverse: this.program(62, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a></li><li><a href="javascript:void(0);" class="submit-reply" data-id="2000">');
		d = c["if"].call(a, "view.isNote", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(64, b),
			inverse: this.program(66, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a></li><li><a href="javascript:void(0);" class="submit-reply" data-id="3000">');
		d = c["if"].call(a, "view.isNote", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(68, b),
			inverse: this.program(70, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a></li></ul></div></div></div><div id="error-submit" class="hidden">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "type_here", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div></div></div><div class="chat-details-container" style="white-space: normal;"><div class="details-container"><div class="details-view menu-content"></div>');
		d = c["if"].call(a, "activeProperty.tabSettings.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(72, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="floating-view hidden" style="white-space: normal;"></div></div>');
		d = c.unless.call(a, "conversationData.isNewConvert", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(74, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i class="fa fa-ellipsis-v"></i></div></div></div><div id="ticket-action-error" class="alert alert-danger fade in hidden text-center"><button class="close" data-dismiss="alert">\u00d7</button><i class="fa-fw fa fa-exclamation"></i><span class="error-message"></span></div><div id="conversation-purged-notification" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":alert :alert-warning :text-center conversationData.isPurged::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "conversation_purged_notification", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<button class="close">\u00d7</button><i class="fa-fw fa fa-warning"></i></div><div class="overlay"><div class="text-center animated"><h5>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "saving", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' <i class="fa fa-refresh fa-spin"></i></h5></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.transcript = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		d = c["if"].call(a, "modalTranscriptData.visitor", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(2, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" href="javascript:void(0);" data-target="#email" data-placement="bottom"><i class="fa fa-envelope-o"></i></a>');
		d = c["if"].call(a,
			"modalTranscriptData.visitor", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(4, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "activeProperty.isAdmin", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 2: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notes", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" href="javascript:void(0);" data-target="#notes" data-placement="bottom"><i class="fa fa-edit"></i></a>');
		return ""
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
			"ban", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('" href="javascript:void(0);" data-target="#ban" data-placement="bottom"><i class="fa fa-ban"></i></a>');
		return ""
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
			name: "I18n", hash: {context: "tooltip"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" href="javascript:void(0);" data-target="#delete" data-placement="bottom"><i class="fa fa-trash-o"></i></a>');
		return ""
	}, 8: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<span ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "countryFlag"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></span>");
		return ""
	},
	10: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div id="transcript" class="transcript-pane">');
		d = c["if"].call(a, "referrer", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "messages", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="details" class="transcript-pane hidden"><div class="details-container"><ul class="list-unstyled"><li><span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span><span>");
		b.buffer.push(f(c._triageMustache.call(a, "pgn", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></li>");
		d = c["if"].call(a, "visitor.e", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(15, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<li><span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "device", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span><span ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "browser"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></span>&nbsp;<span ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "operatingSystem"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></span></li><li><span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "time_text", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span><span> ");
		d = c._triageMustache.call(a, "startedOn", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></li><li><span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_visit", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span><span> ");
		d = c._triageMustache.call(a, "visitor.lastVisitDate", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></li>");
		d = c["if"].call(a, "visitor.lastChatDate", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(17, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "tags", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a,
			"customAttributes.data", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(22, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div class="map-container">');
		d = c["if"].call(a, "view.mapError", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(24, b),
			inverse: this.program(26, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div id="timeline" class="transcript-pane hidden"><ul class="chat-timeline">');
		d = c.each.call(a, "timeline", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(29, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div id="notes" class="transcript-pane hidden"><form id="notesForm" class="smart-form"><fieldset><section><label class="input"><input type="text" class="required note-name" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor_name", {
			name: "I18n", hash: {context: "placeholders"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "visitorName"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></label></section><section><label class="input"><input type="text" class="note-email" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor_email", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "e"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></label></section><section><label class="textarea">');
		b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {rows: "7", valueBinding: "ns", placeholderKey: "notes", "class": "note-text"},
			hashTypes: {
				rows: "STRING", valueBinding: "STRING", placeholderKey: "STRING",
				"class": "STRING"
			},
			hashContexts: {rows: a, valueBinding: a, placeholderKey: a, "class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</label></section>");
		d = c["if"].call(a, "notesUpdatedBy", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(32, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</fieldset></form></div><div id="email" class="transcript-pane hidden"><form id="emailTranscript" class="smart-form"><fieldset><section><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_recipients", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea"> <i class="icon-append fa fa-question-circle"></i><textarea id="transcript-modal-emails" name="emails" class="emails" rows="2"></textarea><b class="tooltip tooltip-top-right"><i class="fa fa-warning txt-color-teal"></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"email_info", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</b></label></section></fieldset></form></div><div id="ban" class="transcript-pane hidden">');
		d = c["if"].call(a, "visitor.b", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(34, b),
			inverse: this.program(36, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="copy" class="transcript-pane hidden"><form class="smart-form"><fieldset><section><label class="textarea"><textarea readonly class="copy-transcript" style="height: 200px;"></textarea></label></section></fieldset></form></div>');
		return ""
	}, 11: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="conversation-participant"><div class="conversation-content italic">');
		b.buffer.push(d(c._triageMustache.call(a, "referrer", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div></div>");
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache", hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"}, hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('<div class="clear"></div>');
		return ""
	}, 15: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="title">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span><span>");
		a = c._triageMustache.call(a, "visitor.e",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</span></li>");
		return ""
	}, 17: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="title">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "served_by", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span><span> ");
		d = c._triageMustache.call(a,
			"visitor.lastChatAgent", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push(", ");
		d = c._triageMustache.call(a, "visitor.lastChatDate", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></li>");
		return ""
	}, 19: function (a, c, d, b) {
		b.buffer.push('<li style="margin-bottom: 8px;"><i class="fa fa-tags"></i>&nbsp;');
		a = c.each.call(a, "tags",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</li>");
		return ""
	}, 20: function (a, c, d, b) {
		b.buffer.push('<span class="label label-info">');
		a = c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 22: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<li><i class="fa fa-dot-circle-o"></i>&nbsp;');
		d = c._triageMustache.call(a, "key", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<br /><span style="padding-left: 10px">');
		b.buffer.push(e(c._triageMustache.call(a, "value", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></li>");
		return ""
	}, 24: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<p class="error"><i class="fa fa-exclamation-circle"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "map_error", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p>");
		return ""
	}, 26: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<a class="linkToMap btn" href="javascript:void(0);" target="_blank">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_on_maps",
			{
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</a><div class="map"></div><p>');
		d = c["if"].call(a, "cy", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "cn", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" : &nbsp;<span>");
		d = c._triageMustache.call(a, "ip", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span></p>");
		return ""
	}, 27: function (a, c, d, b) {
		a = c._triageMustache.call(a, "cy", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push(",&nbsp;");
		return ""
	}, 29: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<li class="parent_li"><div class="timeline-label"><span class="label">');
		d = c._triageMustache.call(a, "time", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span>&nbsp;</div><div class="timeline-data">');
		b.buffer.push(e(c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c.each.call(a, "data", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(30,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></li>");
		return ""
	}, 30: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<p class="no-margin">');
		d = c._triageMustache.call(a, "key", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" : ");
		b.buffer.push(e(c._triageMustache.call(a, "value", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</p>");
		return ""
	}, 32: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section><p class="note">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "last_note_update", {
			name: "I18n",
			hash: {
				variables: '{"notesUpdatedBy" : "notesUpdatedBy", "notesUpdatedOn" : "notesUpdatedOn"}',
				replaceVar: "true",
				context: "visitors"
			},
			hashTypes: {variables: "STRING", replaceVar: "STRING", context: "STRING"},
			hashContexts: {
				variables: a,
				replaceVar: a, context: a
			},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></section>");
		return ""
	}, 34: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="no-data"><p>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "visitor_is_banned", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div>");
		return ""
	}, 36: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<form id="banVisitor" class="smart-form"><fieldset><section><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_question", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea"><textarea id="banReason" name="banReason" class="required" rows="2" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_reason", {
			name: "I18n", hash: {context: "placeholders"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" maxlength="500"></textarea></label></section><section><label class="checkbox"><input type="checkbox" name="banIp" id="banIp"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban_ip", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></section></fieldset></form>");
		return ""
	}, 38: function (a,
	                 c, d, b) {
		b.buffer.push('<div class="load-container text-center"><img src="a34/images/ajax-loader-big.gif" /></div>')
	}, 40: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<button id="submitBan" type="button" class="btn btn-primary hidden other-btn">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content" style="width: 100%; height: 100%;"><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "modalTranscriptData::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="width: 100%;top: 0;position: absolute;bottom: 73px;"><div id="transcriptHeader" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":modal-header modalTranscriptData.isPopover:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div><div class="btn-group modal-title-tawk-nav" role="group"><a class="transcript-btn btn btn-default active" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "transcript", {
			name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" href="javascript:void(0);" data-target="#transcript" data-placement="bottom"><i class="fa fa-comments-o"></i></a><a class="transcript-btn btn btn-default" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "details", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" href="javascript:void(0);" data-target="#details" data-placement="bottom"><i class="fa fa-map-marker"></i></a><a class="transcript-btn btn btn-default" data-original-title="Timeline" href="javascript:void(0);" data-target="#timeline" data-placement="bottom"><i class="fa fa-clock-o"></i></a>');
		d = c.unless.call(a, "isConversationInView", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<a class="transcript-btn btn btn-default" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "print", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" href="javascript:void(0);" data-target="#print" data-placement="bottom"><i class="fa fa-print"></i></a><a class="transcript-btn btn btn-default" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "copy", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" href="javascript:void(0);" data-target="#copy" data-placement="bottom"><i class="fa fa-copy"></i></a></div><h4 class="modal-title" id="myModalLabel">');
		d = c["if"].call(a, "countryFlag", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="modal-title-tawk"> ');
		b.buffer.push(e(c._triageMustache.call(a, "n", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' </span></h4><div style="clear: both;"></div></div></div><div id="transcriptBody" class="modal-body" style="overflow:auto;">');
		d = c["with"].call(a, "modalTranscriptData", {
			name: "with", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(10,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div>");
		d = c.unless.call(a, "modalTranscriptData", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(38, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="transcriptFooter" class="modal-footer" style="position:absolute; bottom : 0; width: 100%;"><button type="button" class="btn btn-default" data-dismiss="modal">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="submit-notes" type="button" class="btn btn-primary hidden other-btn">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="sendEmail" type="button" class="btn btn-primary hidden other-btn">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "send", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button>");
		d = c.unless.call(a, "modalTranscriptData.visitor.b", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(40, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorTranscriptView =
	Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<ul class="menu nav nav-tabs" style="border : 0;">');
			d = c.each.call(a, "activeProperty.tabSettings", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(2, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul><div class="minimized-tab hidden jarviswidget-ctrls"><a href="javascript:void(0);" class="button-icon minimized-dropdown" data-toggle="dropdown" style="height: 32px; width: 36px;"><i class="fa fa-reorder"></i><span class="caret"></span></a><ul class="minimized-dropdown-menu dropdown-menu dropdown-menu-right" role="dropdown">');
			d = c.each.call(a, "activeProperty.tabSettings", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(15, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.menuFits", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(21, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</ul></div><div class="clearfix"></div>');
			return ""
		}, 2: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isMenu:dropdown:open-view"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-type": "label"}, hashTypes: {"data-type": "STRING"},
				hashContexts: {"data-type": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push('><a href="javascript:void(0);" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":tab isMenu:main-menu"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' rel="tooltip" data-toggle="dropdown" data-placement="bottom" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-original-title": "title"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			d = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(5, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(7, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</a>");
			d = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</li>");
			return ""
		}, 3: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa fontClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>");
			return ""
		}, 5: function (a, c, d, b) {
			b.buffer.push('<span class="menu-title">');
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</span>");
			return ""
		}, 7: function (a, c, d, b) {
			b.buffer.push('&nbsp;<b class="caret"></b>')
		}, 9: function (a, c, d, b) {
			b.buffer.push('<ul class="dropdown-menu" role="dropdown">');
			a = c.each.call(a, "items", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(10, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</ul>");
			return ""
		}, 10: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="open-view inner-item" ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-type": "label"},
				hashTypes: {"data-type": "STRING"},
				hashContexts: {"data-type": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('><a href="javascript:void(0);">');
			a = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, 11: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<i ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":fa fontClass"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i>&nbsp;");
			a = c._triageMustache.call(a,
				"title", {
					name: "_triageMustache",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a && b.buffer.push(a);
			return ""
		}, 13: function (a, c, d, b) {
			a = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 15: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr", hash: {"data-id": "id"}, hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a}, types: [], contexts: [], data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "isMenu:dropdown-submenu:open-view"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c["if"].call(a, "isMenu", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(16, b),
				inverse: this.program(19, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</li>");
			return ""
		},
		16: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);" class="minimized-dropdown left text-left" data-toggle="dropdown">');
			d = c._triageMustache.call(a, "title", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</a><ul class="dropdown-menu multi-level"  style="right:100%; left : auto;">');
			d = c.each.call(a, "items", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</ul>");
			return ""
		}, 17: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<li ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"data-id": "id"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="open-view inner-item"><a href="javascript:void(0);" class="text-left">');
			a = c["if"].call(a, "isInternal", {
				name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(11,
					b), inverse: this.program(13, b), types: ["ID"], contexts: [a], data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></li>");
			return ""
		}, 19: function (a, c, d, b) {
			b.buffer.push('<a href="javascript:void(0);" class="text-left">');
			a = c["if"].call(a, "isInternal", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(11, b),
				inverse: this.program(13, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a>");
			return ""
		}, 21: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<li><a href="javascript:void(0);" class="copy-select text-left"><i class="fa fa-clipboard"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "copy_transcript", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="print-select text-left"><i class="fa fa-print"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "print", {
				name: "I18n", hash: {context: "visitors"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="add-note text-left"><i class="fa fa-edit"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="tag-visitor text-left"><i class="fa fa-tags"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "tag_chat", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</a></li><li><a href="javascript:void(0);" class="ban-visitor text-left"><i class="fa fa-ban"></i> ');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</a></li>");
			return ""
		}, 23: function (a, c, d, b) {
			d = c.helperMissing;
			a = (c.rating || a && a.rating || d).call(a, "rt", {
				name: "rating",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 25: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push(d(c._triageMustache.call(a, "", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('<div class="clear"></div>');
			return ""
		},
		27: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button class="btn btn-default close-history">');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "close", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</button>");
			return ""
		}, 29: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<div class="chat-details-container" style="white-space: normal;"><div class="details-container"><div class="details-view menu-content"></div><div class="shortcuts-view menu-content hidden"></div><div class="history-view menu-content hidden"></div><div class="knowledgebase-view menu-content hidden" style="white-space: normal;"></div><div class="menu-content shopify-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content client-data-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="menu-content custom-view hidden" style="word-wrap: break-word; white-space : normal;"></div><div class="floating-view hidden" style="white-space: normal;"></div></div><div class="details-button-container"><button class="btn btn-default button-icon create-ticket-history open-subview" rel="tooltip" data-placement="top"data-original-title="Convert to ticket" ><i class="fa fa-ticket"></i></button><button class="btn btn-default button-icon copy-select" rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "copy_transcript", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ><i class="fa fa-clipboard"></i></button><button class="btn btn-default email-transcript" data-placement="bottom"data-original-title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-envelope-o"></i></button><button class="btn btn-default button-icon print-transcript" rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "print", {
				name: "I18n",
				hash: {context: "visitors"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ><i class="fa fa-print"></i></button><br />');
			d = c["if"].call(a, "conversationData.visitor", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<button class="btn btn-primary tag-transcript button-icon" rel="tooltip"data-placement="top"data-original-title="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tag_chat", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-tags"></i></button>');
			d = c["if"].call(a, "conversationData.visitor", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(33, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "activeProperty.isAdmin", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(35, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><i class="fa fa-ellipsis-v"></i></div>');
			return ""
		}, 30: function (a, c, d, b) {
			a = c.unless.call(a, "conversationData.ns",
				{
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(31, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != a ? b.buffer.push(a) : b.buffer.push("")
		}, 31: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button class="btn btn-default button-icon add-note" rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "add_note", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('" ><i class="fa fa-edit"></i></button>');
			return ""
		}, 33: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button class="btn btn-danger ban-visitor button-icon" rel="tooltip" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ban", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-ban"></i></button>');
			return ""
		}, 35: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<button class="btn btn-default single-conversation-delete" data-placement="top"data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "delete_text", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-trash-o"></i></button>');
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c,
		                                                     d, b) {
			var e = this.escapeExpression, f = c.helperMissing;
			b.buffer.push('<div class="jarviswidget" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-fullscreenbutton="false"><header class="chat-header" style="position: relative;"><ul class="header-list"><li class="name-text-container"><div class="details-flag-container"><span ');
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "conversationData.countryFlag"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push('></span></div><h2 class="name-text">');
			b.buffer.push(e(c._triageMustache.call(a, "conversationData.visitorName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</h2></li><li class="menu-container"><div class="jarviswidget-ctrls" role="menu"><a id="prev-conversation" ');
			b.buffer.push(e(c.action.call(a, "previousConversation", {
				name: "action", hash: {},
				hashTypes: {}, hashContexts: {}, types: ["STRING"], contexts: [a], data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":button-icon :jarviswidget-delete-btn :prev conversationData.indexNum::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' class="" href="javascript:void(0);"data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "newer", {
				name: "I18n", hash: {context: "tooltip"},
				hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-conversation" ');
			b.buffer.push(e(c.action.call(a, "nextConversation", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(" ");
			b.buffer.push(e(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": ":button-icon :jarviswidget-delete-btn :next conversationData.indexNum::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(' href="javascript:void(0);"data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "older", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-chevron-right"></i></a><a id="close-conversation" href="javascript:void(0);" class="button-icon jarviswidget-delete-btn" rel="tooltip" title="" data-placement="bottom" data-original-title="');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "back_to_list", {
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('"><i class="fa fa-times"></i></a></div>');
			d = c["if"].call(a, "activeProperty.tabSettings.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</li></ul></header><div class="chat-message-container"><div class="chat-content-container" role="content" style="right: 300px; width : auto;"><div class="chat-body custom-scroll"><div id="conversation-started">');
			d = c._triageMustache.call(a, "conversationData.startedOn", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("&nbsp;");
			d = c["with"].call(a, "conversationData", {
				name: "with",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(23, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div><div class="current-transcript"><div class="chat-table-wrapper"><div class="chat-row-wrapper"><div class="chat-wrapper"><div class="chat-content padding-10">');
			d = c.each.call(a, "conversationData.messages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(25, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</div></div></div></div></div></div><div class="chat-footer"><div class="textarea-div tab-content" style="height : 100%;"><div class="tab-pane active reply-tab"><div class="join-container"><div class="profile-overlay"></div><div class="transcript-button-container">');
			d = c.unless.call(a, "conversationData.isClosed",
				{
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(27, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('<button class="btn btn-primary create-ticket-history">');
			b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "convert_ticket", {
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('</button></div><div class="clearfix"></div></div></div></div></div></div>');
			d = c["if"].call(a, "activeProperty.tabSettings.length", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(29, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div>");
			return ""
		}, useData: !0
	});
Ember.TEMPLATES.dashboardAnalytics = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<section id="widget-analytics" class="col-sm-12"><article><div class="jarviswidget" id="wid-id-0" data-widget-togglebutton="false"data-widget-editbutton="false" data-widget-fullscreenbutton="false"data-widget-colorbutton="false" data-widget-deletebutton="false"><header><span class="widget-icon"> <i class="glyphicon glyphicon-stats txt-color-darken"></i> </span><h2>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h2><ul class="nav nav-tabs pull-right in"><li role="presentation" class="active"><a data-toggle="tab" role="tab" href="#latest"><i class="fa fa-dashboard"></i>&nbsp;<span class="hidden-mobile hidden-tablet">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "latest", {
			name: "I18n", hash: {context: "analytics"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</span></a></li><li role="presentation"><a data-toggle="tab" role="tab" href="#historical"><i class="fa fa-calendar"></i>&nbsp;<span class="hidden-mobile hidden-tablet">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "historical", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li></ul></header><div class="no-padding" role="content"><div class="widget-body"><div id="analyticsTabContent" class="tab-content">');
		b.buffer.push(e((c.AnalyticsTodayTabView || a && a.AnalyticsTodayTabView || d).call(a, {
			name: "AnalyticsTodayTabView",
			hash: {activeTabBinding: "view.activeTab", controllerBinding: "analytics"},
			hashTypes: {activeTabBinding: "STRING", controllerBinding: "STRING"},
			hashContexts: {activeTabBinding: a, controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(e((c.AnalyticsHistoricalTabView || a && a.AnalyticsHistoricalTabView || d).call(a, {
			name: "AnalyticsHistoricalTabView",
			hash: {activeTabBinding: "view.activeTab", controllerBinding: "analytics"},
			hashTypes: {activeTabBinding: "STRING", controllerBinding: "STRING"},
			hashContexts: {activeTabBinding: a, controllerBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</div></div></div></div></article></section>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.dashboardAnalyticsTodayTab = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "view.loaded::hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><div class="row no-space"><div id="live-graph-container" class="col-xs-12 col-sm-12 col-md-8 col-lg-8"><h4 class="text-center">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "live_visitors", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h4><div class='yaxisLabel'><div style=\"padding : 0 5px;\">");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "visitor_count", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div></div><div id="live-graph" class="chart-large txt-color-blue" style="width : 100%; height : 235px;"></div></div><div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 show-stats"><div class="row">');
		b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
			name: "AnalyticsBarView",
			hash: {
				segmentFormat: "text",
				barColor: "bg-color-red",
				label: "missedChats",
				totalBinding: "recent.today.summary.chats",
				segmentBinding: "recent.today.summary.missedChats"
			},
			hashTypes: {
				segmentFormat: "STRING",
				barColor: "STRING",
				label: "STRING",
				totalBinding: "STRING",
				segmentBinding: "STRING"
			},
			hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
			name: "AnalyticsBarView",
			hash: {
				segmentFormat: "percentage",
				barColor: "bg-color-blue",
				label: "positiveSentiment",
				totalBinding: "recent.today.summary.chats",
				segmentBinding: "recent.today.summary.positiveSentiment"
			},
			hashTypes: {
				segmentFormat: "STRING",
				barColor: "STRING",
				label: "STRING",
				totalBinding: "STRING",
				segmentBinding: "STRING"
			},
			hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
			name: "AnalyticsBarView",
			hash: {
				segmentFormat: "percentage",
				barColor: "bg-color-blue",
				label: "returnVisitors",
				totalBinding: "recent.today.summary.visitors",
				segmentBinding: "recent.today.summary.returnVisitors"
			},
			hashTypes: {
				segmentFormat: "STRING",
				barColor: "STRING",
				label: "STRING",
				totalBinding: "STRING",
				segmentBinding: "STRING"
			},
			hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
			name: "AnalyticsBarView",
			hash: {
				segmentFormat: "percentage",
				barColor: "bg-color-blue",
				label: "engagement",
				totalBinding: "recent.today.summary.visits",
				segmentBinding: "recent.today.summary.chats"
			},
			hashTypes: {
				segmentFormat: "STRING",
				barColor: "STRING",
				label: "STRING",
				totalBinding: "STRING",
				segmentBinding: "STRING"
			},
			hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d((c.AnalyticsBarView || a && a.AnalyticsBarView || e).call(a, {
			name: "AnalyticsBarView",
			hash: {
				segmentFormat: "percentage",
				barColor: "bg-color-blue",
				label: "availability",
				totalBinding: "recent.today.summary.availabilityTime",
				segmentBinding: "recent.today.summary.onlineTime"
			},
			hashTypes: {
				segmentFormat: "STRING",
				barColor: "STRING",
				label: "STRING",
				totalBinding: "STRING",
				segmentBinding: "STRING"
			},
			hashContexts: {segmentFormat: a, barColor: a, label: a, totalBinding: a, segmentBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</div></div></div><div class="show-stat-microcharts">');
		b.buffer.push(d((c.AnalyticsMicroChartView || a && a.AnalyticsMicroChartView || e).call(a,
			{
				name: "AnalyticsMicroChartView",
				hash: {
					loadedBinding: "view.controller.recent.status",
					tooltipLowest: "visitors_lowest",
					tooltipHighest: "visitors_highest",
					tooltip: "visitors_compare",
					dataBinding: "recent.series.visitors",
					sparkColor: "#71843f",
					circleColor: "#217ebb",
					label: "visitors"
				},
				hashTypes: {
					loadedBinding: "STRING",
					tooltipLowest: "STRING",
					tooltipHighest: "STRING",
					tooltip: "STRING",
					dataBinding: "STRING",
					sparkColor: "STRING",
					circleColor: "STRING",
					label: "STRING"
				},
				hashContexts: {
					loadedBinding: a, tooltipLowest: a, tooltipHighest: a,
					tooltip: a, dataBinding: a, sparkColor: a, circleColor: a, label: a
				},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(d((c.AnalyticsMicroChartView || a && a.AnalyticsMicroChartView || e).call(a, {
			name: "AnalyticsMicroChartView",
			hash: {
				loadedBinding: "view.controller.recent.status",
				tooltipLowest: "visits_lowest",
				tooltipHighest: "visits_highest",
				tooltip: "visits_compare",
				dataBinding: "recent.series.visits",
				sparkColor: "#57889c",
				circleColor: "#64db91",
				label: "visits"
			},
			hashTypes: {
				loadedBinding: "STRING",
				tooltipLowest: "STRING",
				tooltipHighest: "STRING",
				tooltip: "STRING",
				dataBinding: "STRING",
				sparkColor: "STRING",
				circleColor: "STRING",
				label: "STRING"
			},
			hashContexts: {
				loadedBinding: a,
				tooltipLowest: a,
				tooltipHighest: a,
				tooltip: a,
				dataBinding: a,
				sparkColor: a,
				circleColor: a,
				label: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d((c.AnalyticsMicroChartView || a && a.AnalyticsMicroChartView || e).call(a, {
			name: "AnalyticsMicroChartView",
			hash: {
				loadedBinding: "view.controller.recent.status",
				tooltipLowest: "page_views_lowest",
				tooltipHighest: "page_views_highest",
				tooltip: "page_views_compare",
				dataBinding: "recent.series.pageViews",
				sparkColor: "#404040",
				circleColor: "#00adee",
				label: "page_views"
			},
			hashTypes: {
				loadedBinding: "STRING",
				tooltipLowest: "STRING",
				tooltipHighest: "STRING",
				tooltip: "STRING",
				dataBinding: "STRING",
				sparkColor: "STRING",
				circleColor: "STRING",
				label: "STRING"
			},
			hashContexts: {
				loadedBinding: a,
				tooltipLowest: a,
				tooltipHighest: a,
				tooltip: a,
				dataBinding: a,
				sparkColor: a,
				circleColor: a,
				label: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d((c.AnalyticsMicroChartView || a && a.AnalyticsMicroChartView ||
			e).call(a, {
			name: "AnalyticsMicroChartView",
			hash: {
				loadedBinding: "view.controller.recent.status",
				tooltipLowest: "chats_lowest",
				tooltipHighest: "chats_highest",
				tooltip: "chats_compare",
				dataBinding: "recent.series.chats",
				sparkColor: "#a90329",
				circleColor: "#fb6ea6",
				label: "chats"
			},
			hashTypes: {
				loadedBinding: "STRING",
				tooltipLowest: "STRING",
				tooltipHighest: "STRING",
				tooltip: "STRING",
				dataBinding: "STRING",
				sparkColor: "STRING",
				circleColor: "STRING",
				label: "STRING"
			},
			hashContexts: {
				loadedBinding: a, tooltipLowest: a, tooltipHighest: a,
				tooltip: a, dataBinding: a, sparkColor: a, circleColor: a, label: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</div></div><div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":load-container :text-center view.error::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><button class="btn btn-danger reload-view">');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "reload_error", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</button></div><div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":load-container :text-center view.loaded:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><img src="a34/images/ajax-loader-big.gif" /></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.dashboardAnalyticsBar = Ember.Handlebars.template({
	1: function (a,
	             c, d, b) {
		a = c._triageMustache.call(a, "view.percentage", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 3: function (a, c, d, b) {
		d = c._triageMustache.call(a, "view.segment", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("/");
		d = c._triageMustache.call(a, "view.total", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
			contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<span class="text">');
		d = c._triageMustache.call(a, "view.labelText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="pull-right">');
		d = c["if"].call(a, "view.showAsPercentage", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1, b), inverse: this.program(3,
				b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></span><div class="progress"><div class="progress-bar" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {style: "view.barWidth"},
			hashTypes: {style: "STRING"},
			hashContexts: {style: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.dashboardAnalyticsMicroChart = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div class="microcharts-container"><div class="pie-chart-container"><div class="easy-pie-chart" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-percent": "view.data.summary.growth"},
			hashTypes: {"data-percent": "STRING"},
			hashContexts: {"data-percent": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "view.tooltipText"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><span class="percent percent-sign">');
		d = c._triageMustache.call(a, "view.data.summary.growth", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></div></div><div class="microchart-sparkline-container"><div class="sparkline"></div><ul class="smaller-stat"><li><span class="label bg-color-greenLight text-center" data-placement="bottom" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-original-title": "view.tooltipHighestText"},
				hashTypes: {"data-original-title": "STRING"},
				hashContexts: {"data-original-title": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><i class="fa fa-caret-up"></i>');
		d = c._triageMustache.call(a, "view.data.summary.highest", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></li><li><span class="label bg-color-blueLight text-center" data-placement="bottom" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "view.tooltipLowestText"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-caret-down"></i>');
		d = c._triageMustache.call(a, "view.data.summary.lowest", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></li></ul></div></div><p class="easy-pie-title text-center">');
		d = c._triageMustache.call(a, "view.labelText", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.dashboardAnalyticsHistoricalTab = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="widget-body-toolbar bg-color-white" style="position: relative;"><div class="btn-group open pull-left" style="margin-right: 15px; position : static;"><button class="btn dropdown-toggle btn-xs btn-primary" data-toggle="dropdown" aria-expanded="true" style="margin-top: 0px;">');
		d = c._triageMustache.call(a, "view.getHistorialTimeRange", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(' <i class="fa fa-caret-down"></i></button><div class="dropdown-menu smart-form" role="menu" style="position: absolute; top : 30px; left : 10px;" id="date-range-form"><form><fieldset><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" class="form-control input-sm" id="historical-from" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_from", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></label></section><section class="col col-6"><label class="input"> <i class="icon-append fa fa-calendar"></i><input type="text" class="form-control input-sm" id="historical-to" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "date_to", {
			name: "I18n", hash: {context: "placeholders"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('"></label></section></fieldset></form><footer><button type="submit" class="btn btn-primary" id="applyFilter">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "apply", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-default" id="closeFilter">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></div></div><div class="smart-form pull-right"><div id="legends" class="pull-left"></div><div class="inline-group pull-left"><label for="gra-chats" class="checkbox"><input type="checkbox" class="graph-filters" name="gra-chats" id="gra-chats" data-segment="chats" checked="checked"><i></i>');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "chats", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label for="gra-page-views" class="checkbox"><input type="checkbox" class="graph-filters" name="gra-page-views" id="gra-page-views" data-segment="pageViews" checked="checked"><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "page_views", {
			name: "I18n", hash: {context: "analytics"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label for="gra-visits" class="checkbox"><input type="checkbox" class="graph-filters" name="gra-visits" id="gra-visits" data-segment="visits" checked="checked"><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visits", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label for="gra-visitors" class="checkbox"><input type="checkbox" class="graph-filters" name="gra-visitors" id="gra-visitors" data-segment="visitors" checked="checked"><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitors", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div><div class="clearfix"></div></div><div class="clearfix"></div></div><div id="historical-graph-container" class="col-xs-12 col-sm-12 col-md-12 col-lg-12 hidden"><div id="historical-graph"></div></div><div class="load-container text-center reload-view hidden"><button class="btn btn-danger reload-button">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reload_error", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div><div class="load-container text-center loading-view"><img src="a34/images/ajax-loader-big.gif" /></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.dashboardHistory = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("&nbsp;:&nbsp;");
		b.buffer.push(d(c._triageMustache.call(a, "history.activeProperty.propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		return ""
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="change-history-list"><a href="javascript:void(0);">');
		b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></li>");
		return ""
	}, 5: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<tr class="open-transcript" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "this._id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td style="width: 42%; max-width : 30%"><span style="margin-right : 5px; margin-top : 0; vertical-align : middle;" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "countryFlag"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></span><span style="margin : 0">');
		d = c._triageMustache.call(a, "visitorName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></td><td style="width: 42%; max-width : 30%">');
		d = c["if"].call(a, "agentsName", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(8, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a, "sorted", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "agentsName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 8: function (a, c, d, b) {
		b.buffer.push("-")
	}, 10: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":no-data history.isLoading:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><p class="no-history">');
		b.buffer.push(d((c.I18n ||
			a && a.I18n || e).call(a, "no_history", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div>");
		return ""
	}, 12: function (a, c, d, b) {
		b.buffer.push('<div class="load-container text-center" style="position: absolute; top: 0; bottom: 0; width: 100%; background: transparent !important; float: none;"><div style=" position: absolute; top: 0; bottom: 0; left: 0; background: #fff; opacity: 0.5; right: 0;"></div><img src="a34/images/ajax-loader-big.gif" style="position: absolute; top: 50%; margin-top: -30px;" /></div>')
	},
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<article class="col-xs-12 col-sm-12 col-md-12 col-lg-8"><div class="jarviswidget" id="wid-id-1" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false"><header><span class="widget-icon"> <i class="fa fa-history"></i> </span><h2>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"view_title", {
				name: "I18n",
				hash: {context: "history"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</h2><div class="widget-toolbar" role="menu"><div class="btn-group"><button class="btn dropdown-toggle btn-xs btn-default" data-toggle="dropdown" aria-expanded="false">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_page", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		d = c["if"].call(a, "history.activeProperty", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('&nbsp;<i class="fa fa-caret-down"></i></button><ul class="dropdown-menu pull-right" style="max-height : 200px; overflow: auto;">');
		d = c.each.call(a, "history.propertiesList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div></div></header><div role="content"><table id="history-list" class="table table-striped table-bordered table-hover dataTable no-footer" width="100%" role="grid" aria-describedby="dt_basic_info" style="width: 100%;"><thead><tr role="row"><th tabindex="0" aria-controls="dt_basic" class="text-center" style="width: 30%; max-width : 30%">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "visitor", {
			name: "I18n", hash: {context: "history"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</th><th tabindex="0" aria-controls="dt_basic" class="text-center" style="width: 30%; max-width : 30%">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agent", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th><th tabindex="0" aria-controls="dt_basic" class="text-center" style="width: 15%; max-width : 15%">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "time_text", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</th></tr></thead><tbody class="test">');
		d = c.each.call(a, "history.activeProperty.list.currentData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</tbody><tfoot ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "history.activeProperty.list.totalItems::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><tr><td colspan="3"><a id="next-page"');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :next :pull-right history.activeProperty.list.hasNext::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' href="javascript:void(0);" data-placement="top" data-original-title="Older">Load More</a></td></tr></tfoot></table><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":alert :alert-info :text-center history.activeProperty.list.pendingData.length:active:fade history.activeProperty.list.pendingData.length::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' id="new-history" style="position:absolute; top : 0; width: 100%"><button class="close" data-dismiss="alert">\u00d7</button><a id="retrieveHistory" href="javascript:void(0);" style="text-decoration:underline" title="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "retrieve_history", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><h4 class="alert-heading message">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "new_message", {
			name: "I18n",
			hash: {context: "sound_settings"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" : ");
		d = c._triageMustache.call(a, "history.activeProperty.list.pendingData.length",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</h4></a></div>");
		d = c.unless.call(a, "history.activeProperty.list.totalItems", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a, "history.isLoading", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(12, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></article>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.dashboardHeaderSpark = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c["if"].call(a, "view.isPostiveGrowth", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.isNegativeGrowth", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(4, b), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "view.data.summary.growth", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("%");
		return ""
	}, 2: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-arrow-circle-up"></i>&nbsp;')
	}, 4: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-arrow-circle-down"></i>&nbsp;')
	}, 6: function (a, c, d, b) {
		d = c["if"].call(a, "view.iconClass", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c._triageMustache.call(a, "view.data.summary.current", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<i ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.iconClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i>&nbsp;");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<h5 data-placement="bottom" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "view.tooltipText"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c._triageMustache.call(a, "view.labelText", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;<span ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.textColorClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c["if"].call(a, "view.showAsPercentage", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(6, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		b.buffer.push('</span></h5><div class="sparkline"></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.dashboardView = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="alert alert-info" style="background-color: #fd7fb1!important;border-color: #fb6ea6!important;font-size: 14px;color: #ffffff!important;margin-bottom : 10px">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "resume_setup", {
			name: "I18n",
			hash: {
				variables: '{"linkStart" : "<a id=\'resume-wizard\' href=\'javascript:void(0);\' style=\'text-decoration: underline; color: inherit; cursor: pointer\'>", "linkEnd" : "<\\/a>"}',
				context: "dashboard"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 3: function (a, c, d, b) {
		a = c["if"].call(a, "Tawk.webProperties.sites.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 4: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c.view.call(a, "view.bannerView",
			{name: "view", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b})))
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e;
		e = c.helperMissing;
		d = this.escapeExpression;
		b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark"><i class="fa fa-dashboard"></i> ');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n", hash: {context: "dashboard"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</span></h1></div><div class="col-xs-8 col-sm-8 col-md-8 col-lg-8"><ul id="sparks">');
		b.buffer.push(d((c.HeaderSpark || a && a.HeaderSpark || e).call(a, {
			name: "HeaderSpark",
			hash: {
				dataBinding: "analytics.recent.series.visitors",
				tooltip: "visitors_today",
				icon: "fa-user",
				sparkColor: "#217ebb",
				textColorClass: "txt-color-tawk-dark-blue",
				label: "visitors"
			},
			hashTypes: {
				dataBinding: "STRING",
				tooltip: "STRING",
				icon: "STRING",
				sparkColor: "STRING",
				textColorClass: "STRING",
				label: "STRING"
			},
			hashContexts: {dataBinding: a, tooltip: a, icon: a, sparkColor: a, textColorClass: a, label: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d((c.HeaderSpark || a && a.HeaderSpark || e).call(a, {
			name: "HeaderSpark",
			hash: {
				dataBinding: "analytics.recent.series.visits",
				tooltip: "visits_today",
				icon: "fa-exchange",
				sparkColor: "#64db91",
				textColorClass: "txt-color-tawk-green",
				label: "visits"
			},
			hashTypes: {
				dataBinding: "STRING",
				tooltip: "STRING",
				icon: "STRING",
				sparkColor: "STRING",
				textColorClass: "STRING",
				label: "STRING"
			},
			hashContexts: {dataBinding: a, tooltip: a, icon: a, sparkColor: a, textColorClass: a, label: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(d((c.HeaderSpark || a && a.HeaderSpark || e).call(a, {
			name: "HeaderSpark",
			hash: {
				dataBinding: "analytics.recent.series.chats",
				tooltip: "chats_today",
				icon: "fa-comments",
				sparkColor: "#fb6ea6",
				textColorClass: "txt-color-tawk-pink",
				label: "chats"
			},
			hashTypes: {
				dataBinding: "STRING",
				tooltip: "STRING",
				icon: "STRING",
				sparkColor: "STRING",
				textColorClass: "STRING",
				label: "STRING"
			},
			hashContexts: {
				dataBinding: a,
				tooltip: a, icon: a, sparkColor: a, textColorClass: a, label: a
			},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</ul></div></div><div class="innerContent">');
		e = c["if"].call(a, "view.showResumeWizard", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push(d(c.view.call(a, "view.analyticsView", {
			name: "view",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("<section>");
		b.buffer.push(d(c.view.call(a, "view.historyView", {
			name: "view",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		e = c.unless.call(a, "Tawk.userController.bannerClosed", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push(d(c.view.call(a, "view.feedsView", {
			name: "view",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</section></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.dashboardFeeds = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li><a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "link"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank">');
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a></li>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<article class="col-xs-12 col-sm-12 col-md-12 col-lg-4"><div class="jarviswidget" id="wid-id-1" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false"><header><span class="widget-icon"> <i class="fa fa-rss-square"></i> </span><h2>');
		b.buffer.push(e((c.I18n || a && a.I18n ||
			d).call(a, "blog_post", {
			name: "I18n",
			hash: {context: "dashboard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h2></header><div id="feed-content" role="content"><ul>');
		a = c.each.call(a, "feeds.feedsList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul></div></div></article>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.dashboardBanner =
	Ember.Handlebars.template({
		1: function (a, c, d, b) {
			b.buffer.push('<div class="button-container"><a href="/#/admin/addon-store" class="btn btn-primary">');
			a = c._triageMustache.call(a, "view.bannerButton", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</a></div>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push('<article class="col-xs-12 col-sm-12 col-md-12 col-lg-4"><div class="jarviswidget" id="wid-id-1" data-widget-togglebutton="false" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false"><header><span class="widget-icon"> <i ');
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {"class": "view.iconClassName"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push("></i> </span><h2>");
			d = c._triageMustache.call(a, "view.bannerTitle", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</h2><span class="close-banner"><i class="fa fa-times"></i></span></header><div class="content-container" role="content">');
			d = c._triageMustache.call(a, "view.bannerSubtitle", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.bannerButton", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</div></div></article>");
			return ""
		}, useData: !0
	});
Ember.TEMPLATES.headerNotification = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<b class="badge"> ');
		a = c._triageMustache.call(a, "view.totalNotifications", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push(" </b>");
		return ""
	}, 3: function (a, c, d, b) {
		d = c["if"].call(a, "Tawk.userController.isAddOnSeen", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.program(9, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "invitations", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(11, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 4: function (a, c, d, b) {
		d = c.unless.call(a, "Tawk.userController.newAddonSeen", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.unless.call(a, "Tawk.userController.webrtcAddonSeen", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addon_live_agents", {
			name: "I18n",
			hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div style="margin: 6px 0;display: inline-block; width: 100px;"><img class="addon-preview-image" src="https://static-a.tawk.to/v2/a34/images/hireagent-logo.png" /></div><div style="display: inline-block; width: 219px; vertical-align: middle;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_live_agent_description", {
			name: "I18n",
			hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
			hashTypes: {
				variables: "STRING",
				context: "STRING"
			},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><span class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-hire-agent" data-bindattr-794="794">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-hire-agent" data-bindattr-795="795">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></span></span></li>");
		return ""
	}, 7: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addon_video_screensharing",
			{
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</div><div style="margin: 6px 0;display: inline-block; width: 100px;"><img class="addon-preview-image" src="https://static-a.tawk.to/v2/a34/images/video-chat-logo.png" /></div><div style="display: inline-block; width: 219px; vertical-align: middle;">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "notification_video_screensharing_description", {
			name: "I18n",
			hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><span class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-webrtc" data-bindattr-794="794">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info",
			{
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-webrtc" data-bindattr-795="795">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></span></span></li>");
		return ""
	}, 9: function (a,
	                c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addons", {
			name: "I18n",
			hash: {
				variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>", "icon" : "<i class=\'fa fa-puzzle-piece\'></i>"}',
				context: "header"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div style="background-color: #4f4f4f; padding : 5px 0; margin : 3px 0;"><span style="color : #fff; float :left; width : 49%; text-align: right; margin-right : 1%;">powered by</span><span style="color : #fff; float :left; width : 49%; text-align: left; margin-left : 1%;"><span style="color : #fb6ea6; font-size: 14px; font-weight : 700; vertical-align : middle;">YourBrand</span><span style="text-decoration: line-through; display: block; margin-top: -8px;">&nbsp;tawk.to&nbsp;</span></span><div class="clearfix"></div></div><div>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addons_description", {
			name: "I18n",
			hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><span class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-add-on" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-invite-id": "id"},
			hashTypes: {"data-invite-id": "STRING"},
			hashContexts: {"data-invite-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-add-on" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-invite-id": "id"}, hashTypes: {"data-invite-id": "STRING"},
			hashContexts: {"data-invite-id": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></span></span></li>");
		return ""
	}, 11: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="padding-10"><em class="badge padding-5 no-border-radius bg-color-blueLight txt-color-white pull-left margin-right-5"><i class="fa fa-user fa-fw fa-2x"></i></em><span><span>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "invitation", {
			name: "I18n",
			hash: {
				replaceVar: "true",
				variables: '{"propertyName" : "propertyName", "inviterName" : "inviterName"}',
				context: "header"
			},
			hashTypes: {replaceVar: "STRING", variables: "STRING", context: "STRING"},
			hashContexts: {replaceVar: a, variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;</span><span class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 accept" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-invite-id": "id"},
				hashTypes: {"data-invite-id": "STRING"},
				hashContexts: {"data-invite-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "accept", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 reject" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-invite-id": "id"},
			hashTypes: {"data-invite-id": "STRING"},
			hashContexts: {"data-invite-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "reject", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></span></span></span></li>");
		return ""
	}, 13: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="padding-10 no-notifications">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_notifications", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("<span></li>");
		return ""
	}, 15: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-group-icr" id="group-icr-min" checked="checked" />')
	}, 17: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-group-icr" id="group-icr-min" />')
	}, 19: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-visitor-details" id="visitor-details-toggle-min" checked="checked" />')
	},
	21: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-visitor-details" id="visitor-details-toggle-min" />')
	}, 23: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-all-chats" id="list-view-toggle-min" />')
	}, 25: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-all-chats" checked="checked" id="list-view-toggle-min" />')
	}, 27: function (a, c, d, b) {
		b.buffer.push('<span class="badge" style="background-color: #0091d9; color : #fff;">');
		a = c._triageMustache.call(a,
			"view.totalNotifications", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, 29: function (a, c, d, b) {
		d = c["if"].call(a, "Tawk.userController.isAddOnSeen", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(30, b),
			inverse: this.program(35, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "invitations", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(37,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 30: function (a, c, d, b) {
		d = c.unless.call(a, "Tawk.userController.newAddonSeen", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(31, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.unless.call(a, "Tawk.userController.webrtcAddonSeen", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(33, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		return ""
	}, 31: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addon_live_agents", {
			name: "I18n",
			hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div style="margin: 6px 0;display: inline-block; width: 100px;"><img class="addon-preview-image" src="https://static-a.tawk.to/v2/a34/images/hireagent-logo.png" /></div><div style="display: inline-block; width: 219px; vertical-align: middle;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_live_agent_description", {
			name: "I18n",
			hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
			hashTypes: {
				variables: "STRING",
				context: "STRING"
			},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-hire-agent" data-bindattr-794="794">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-hire-agent" data-bindattr-795="795">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></span></li>");
		return ""
	}, 33: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addon_video_screensharing",
			{
				name: "I18n",
				hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</div><div style="margin: 6px 0;display: inline-block; width: 100px;"><img class="addon-preview-image" src="https://static-a.tawk.to/v2/a34/images/video-chat-logo.png" /></div><div style="display: inline-block; width: 219px; vertical-align: middle;">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "notification_video_screensharing_description", {
			name: "I18n",
			hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-webrtc" data-bindattr-794="794">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-webrtc" data-bindattr-795="795">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></span></li>");
		return ""
	}, 35: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="padding-10"><div><div class="new-label" style="position : relative; top : 4px; right : 0;"></div> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addons", {
			name: "I18n",
			hash: {
				variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>", "icon" : "<i class=\'fa fa-puzzle-piece\'></i>"}',
				context: "header"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div style="background-color: #4f4f4f; padding : 5px 0; margin : 3px 0;"><span style="color : #fff; float :left; width : 49%; text-align: right; margin-right : 1%;">powered by</span><span style="color : #fff; float :left; width : 49%; text-align: left; margin-left : 1%;"><span style="color : #fb6ea6; font-size: 14px; font-weight : 700; vertical-align : middle;">YourBrand</span><span style="text-decoration: line-through; display: block; margin-top: -8px;">&nbsp;tawk.to&nbsp;</span></span><div class="clearfix"></div></div><div>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "notification_addons_description", {
			name: "I18n",
			hash: {variables: '{"bigTextStart" : "<b>", "bigTextEnd" : "</b>"}', context: "header"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div><div class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 view-add-on" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-invite-id": "id"},
			hashTypes: {"data-invite-id": "STRING"},
			hashContexts: {"data-invite-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "more_info", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 dismiss-add-on" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-invite-id": "id"}, hashTypes: {"data-invite-id": "STRING"},
			hashContexts: {"data-invite-id": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "dismiss", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></span></li>");
		return ""
	}, 37: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li><span class="padding-10"><em class="badge padding-5 no-border-radius bg-color-blueLight txt-color-white pull-left margin-right-5"><i class="fa fa-user fa-fw fa-2x"></i></em><span><span>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "invitation", {
			name: "I18n",
			hash: {
				replaceVar: "true",
				variables: '{"propertyName" : "propertyName", "inviterName" : "inviterName"}',
				context: "header"
			},
			hashTypes: {replaceVar: "STRING", variables: "STRING", context: "STRING"},
			hashContexts: {replaceVar: a, variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;</span><div class="button-container text-right"><button class="btn btn-xs btn-primary margin-right-5 accept" ');
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-invite-id": "id"},
				hashTypes: {"data-invite-id": "STRING"},
				hashContexts: {"data-invite-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "accept", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-xs btn-danger margin-right-5 reject" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-invite-id": "id"},
			hashTypes: {"data-invite-id": "STRING"},
			hashContexts: {"data-invite-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "reject", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></span></span></li>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div id="full-header-menu" style=""><a href="javascript:void(0);" id="group-icr" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":sidebar-visitors-action Tawk.userController.groupIncomingRequests:selected"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="bottom"><i class="fa fa-object-group"></i></a><a href="javascript:void(0);" id="visitor-details-toggle" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":sidebar-visitors-action Tawk.userController.visitorDetailsHoverEnabled:selected"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-original-title="Disabled visitor details on hover." data-placement="bottom"><i class="fa fa-id-card-o"></i></a><a href="javascript:void(0);" id="list-view-toggle" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":sidebar-visitors-action Tawk.userController.sidebarChatListAll:selected"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('  data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "chat_list_details", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="bottom"><i class="fa fa-filter"></i></a><div id="invitation-notification-container"><span id="activity" class="activity-dropdown"><i class="fa fa-bell"></i>');
		d = c["if"].call(a, "view.hasNotifications", {
			name: "if", hash: {}, hashTypes: {},
			hashContexts: {}, fn: this.program(1, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><div class="ajax-dropdown"><div class="ajax-notifications custom-scroll"><ul class="notification-body">');
		d = c["if"].call(a, "view.hasNotifications", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div></div></div></div><div id="minified-header-menu" class="dropdown"><a href="javascript:void(0);" data-toggle="dropdown"><i class="fa fa-navicon"></i></a><ul class="dropdown-menu multi-level text-left" role="menu" style="min-width : 300px; margin-top : 13px; border-radius: 5px;"><li><div class="smart-form" style=\'padding : 5px 20px;\'><label class="toggle" style="font-size : inherit">');
		d = c["if"].call(a, "Tawk.userController.groupIncomingRequests", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.program(17, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "yes", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "no", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i><span class="fa fa-object-group"></span> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "group_icr", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div></li><li><div class="smart-form" style=\'padding : 5px 20px;\'><label class="toggle" style="font-size : inherit">');
		d = c["if"].call(a, "Tawk.userController.visitorDetailsHoverEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.program(21, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "yes", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "no", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i><span class="fa fa-id-card-o"></span> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "show_visitor_details", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div></li><li><div class="smart-form" style=\'padding : 5px 20px;\'><label class="toggle" style="font-size : inherit">');
		d = c["if"].call(a, "Tawk.userController.sidebarChatListAll", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(23, b),
			inverse: this.program(25, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "yes", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a &&
			a.I18n || f).call(a, "no", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i><span class="fa fa-filter"></span> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "show_my_chats", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></div></li><li class="divider"></li><li class="dropdown-submenu"><a tabindex="-1" href="javascript:void(0);"><i class="fa fa-bell"></i> ');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "notifications", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("&nbsp;");
		d = c["if"].call(a, "view.hasNotifications", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a><ul class="notification-body dropdown-menu" style="min-width : 400px; max-height : 300px; overflow: auto;">');
		d = c["if"].call(a, "view.hasNotifications", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(29, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></li></ul></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.imageCropView = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div id="image-crop" class="hidden"><div id="crop-container"><div class="jcrop-holder"><div id="cropper"><div id="cropper-frame"><canvas id="moveable-image"></canvas><div class="jcrop-hline" style=""></div><div class="jcrop-hline bottom"></div><div class="jcrop-vline right"></div><div class="jcrop-vline"></div><div class="jcrop-tracker"></div></div></div><canvas id="static-image" class="pull-left"></canvas><canvas id="source-image"></canvas></div></div><div id="crop-control-container"><div class="form-group"><input id="range-slider-3" type="text" name="range_2a" value="" /></div><div class="text-right button-container"><button class="btn btn-default cancel">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-tawk-pink" id="apply-crop">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "apply", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div></div><div id="image-camera-view" class="hidden"><div id="camera-container"><video id="v" width="320" height="240" autoplay class="hidden"></video></div><div class="text-right button-container hidden"><button class="btn btn-default cancel">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button class="btn btn-tawk-pink" id="capture-image">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "capture", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.leaderboardMain = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-type="site">');
		b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<tr><td ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":text-center isFirst:is-first"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c["if"].call(a, "isFirst", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.program(6, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a, "agentName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a, "chats", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a, "positive", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a, "negative", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a, "hours", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="text-center">');
		d = c._triageMustache.call(a, "chatsPerHour", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 4: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-trophy" style="color:rgb(255,0,115); font-size : 20px;"></i>')
	}, 6: function (a, c, d, b) {
		a = c._triageMustache.call(a, "index", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 8: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<p class="empty-leaderboard">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "leaderboard_empty", {
			name: "I18n",
			hash: {context: "leaderboard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p>");
		return ""
	}, 10: function (a, c, d, b) {
		b.buffer.push('<p class="error"><i class="fa fa-exclamation"></i> ');
		a = c._triageMustache.call(a,
			"view.errorMessage", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</p>    ");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e;
		e = c.helperMissing;
		d = this.escapeExpression;
		b.buffer.push('<div class="content"><div id="headerContainer" class="row view-header"><div class="col-xs-12 col-sm-12 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark"><i class="fa fa-trophy"></i> ');
		b.buffer.push(d((c.I18n ||
			a && a.I18n || e).call(a, "view_title", {
			name: "I18n",
			hash: {context: "leaderboard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h1></div><div id="view-controls-container" class="col-xs-12 col-sm-12 col-md-8 col-lg-8"><div class="smart-form"><div id="view-controls" class="pull-right"><div id="filter-clients-container" class="pull-left"><label class="select"><select id="property-select" class=""><option value="all">All Clients</option>');
		e = c.each.call(a,
			"clientProperties", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != e && b.buffer.push(e);
		b.buffer.push('</select><i></i></label></div><div id="filter-period-container" class="pull-left"><ul><li class="filter-period active" id="period-1w">1w</li><li class="filter-period" id="period-4w">4w</li><li class="filter-period" id="period-1y">1y</li><li class="filter-period" id="period-mtd">Mtd</li><li class="filter-period" id="period-qtd">Qtd</li><li class="filter-period" id="period-ytd">Ytd</li><li class="filter-period" id="period-all">All</li></ul></div><div id="filter-date-container" class="pull-left"><div id="filter-container" class="smart-form"><button id="openFilter" type="button" class="btn dropdown-toggle btn-xs btn-default"><span id="filter-from"></span><span class="to"> - </span><span id="filter-to"></span><span> <i class="fa fa-caret-down"></i></span></button><div id="filterBack"></div><div class="dropdown-menu pull-right smart-form" role="menu" id="analytics-filter"><form><fieldset><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">From</label><label class="input"><i class="icon-append fa fa-calendar"></i><input type="text" id="analytics-from" /></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">To</label><label class="input"><i class="icon-append fa fa-calendar"></i><input type="text" id="analytics-to" /></label></section></fieldset></form><footer><button type="submit" class="btn btn-primary search" id="applyFilter">Submit</button><button type="submit" class="btn btn-default" id="closeFilter">Close</button></footer></div><div class="clearfix"></div></div></div><div style="clear:both;"></div></div></div></div><div style="clear:both;"></div></div><div class="innerContent"><div id="view-table-container"><table id="view-table" class="table table-bordered table-striped table-hover dataTable no-footer">  <thead>    <tr>      <th id="table-sort" class="text-center">Position <span><i id="table-sort-icon" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":fa isReversed:fa-sort-amount-asc:fa-sort-amount-desc"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></i></span></th>      <th class="text-center">Agent</th>      <th class="text-center">Chats</th>      <th class="text-center">Likes</th>      <th class="text-center">Dislikes</th>      <th class="text-center">Hours</th>      <th class="text-center">Chats / Hour</th>    </tr>  </thead>  <tbody ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading:visibilityHidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">  ");
		e = c.each.call(a, "tableData", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push("  </tbody></table>");
		e = c["if"].call(a, "isTableDataEmpty", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(8, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != e && b.buffer.push(e);
		e = c["if"].call(a, "view.errorMessage", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != e && b.buffer.push(e);
		b.buffer.push('</div><div id="list-loading" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.leftPanel = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<div style="padding: 10px 5px; text-align : center;">');
		d = c["with"].call(a, "unAnsweredIgnoredCount", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["with"].call(a, "unAnsweredCount", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		return ""
	}, 2: function (a, c, d, b) {
		a = c["if"].call(a, "num", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="active-chats"><p style="color : #fff; text-transform : none;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "incoming_ignored", {
			name: "I18n",
			hash: {variables: '{"num" : "num"}', replaceVar: "true", context: "sidebar"},
			hashTypes: {variables: "STRING", replaceVar: "STRING", context: "STRING"},
			hashContexts: {variables: a, replaceVar: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></div>");
		return ""
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="active-chats"><p style="color : #fff; text-transform : none;">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "incoming_pending", {
			name: "I18n",
			hash: {variables: '{"num" : "num"}', replaceVar: "true", context: "sidebar"},
			hashTypes: {variables: "STRING", replaceVar: "STRING", context: "STRING"},
			hashContexts: {variables: a, replaceVar: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p>");
		d = c["if"].call(a, "num", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div>");
		d = c["if"].call(a,
			"num", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		return ""
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<a id="open-oldest" href="javascript:void(0);" class="btn btn-default btn-xs" style="text-transform : none;">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "open_next", {
			name: "I18n", hash: {context: "sidebar"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</a>");
		return ""
	}, 8: function (a, c, d, b) {
		b.buffer.push('<a id="open-oldest" href="javascript:void(0);" class="btn btn-default btn-xs active-chats-short">I (');
		a = c._triageMustache.call(a, "num", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push(")</a>");
		return ""
	}, 10: function (a, c, d, b) {
		a = c["if"].call(a, "Tawk.userController.user.isHiredAgent", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.program(15, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 11: function (a, c, d, b) {
		a = c["if"].call(a, "Tawk.leftPanelController.hasMoreICR", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b),
			inverse: this.program(15, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 12: function (a, c, d, b) {
		b.buffer.push('<ul id="incomingChats" class="visitor-list" style="display : block;">');
		a = c.each.call(a, "Tawk.leftPanelController.compressICR", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":padding-5 :waiting :unseen :compressed-icr isClientProperty:client-property"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);" class="open-next-icr" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "propertyId"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="padding : 0;"><span style="display: inline-block;">');
		d = c._triageMustache.call(a, "propertyName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d &&
		b.buffer.push(d);
		b.buffer.push('</span><span style="border : 1px solid #fff; border-radius : 3px; display: inline-block; width: 24px; text-align: center; font-weight : bold; float: right;margin-left : -100%;">');
		d = c._triageMustache.call(a, "chatsTotal", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><div class="clearfix"></div></a></li>');
		return ""
	}, 15: function (a, c, d, b) {
		b.buffer.push('<ul id="incomingChats" class="visitor-list" style="display : block;">');
		a = c.each.call(a, "Tawk.liveMonitoringController.allUnansweredList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	}, 16: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.VisitorItem || a && a.VisitorItem || d).call(a, {
			name: "VisitorItem",
			hash: {isActive: "true", contentBinding: "this"},
			hashTypes: {isActive: "STRING", contentBinding: "STRING"},
			hashContexts: {
				isActive: a,
				contentBinding: a
			},
			types: [],
			contexts: [],
			data: b
		})))
	}, 18: function (a, c, d, b) {
		a = c["if"].call(a, "property.list.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 19: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":property-list :top-menu-invisible property.isOpen:open"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a class="list-name-container" href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "property.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="padding-right :5px;" ><p style="float: left; width: 100%; display: block; margin : 0;"><span class="property-name full-name">');
		d = c._triageMustache.call(a, "property.name",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="property-name-short add-tooltip" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "property.name"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="right">');
		b.buffer.push(e(c._triageMustache.call(a, "property.firstCharName",
			{
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</span></p><span style="color : #bbc0cf; border : 1px solid #bbc0cf; border-radius : 3px; display: inline-block; width: 24px; text-align: center; font-weight : bold; float: right;margin-left : -100%;">');
		d = c._triageMustache.call(a, "property.list.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><div class="clearfix"></div></a>');
		d = c["if"].call(a, "property.isOpen", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</li>");
		return ""
	}, 20: function (a, c, d, b) {
		b.buffer.push('<ul class="visitor-list">');
		a = c.each.call(a, "property.list", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	}, 22: function (a, c, d, b) {
		a = c["if"].call(a, "property.list.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(23, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 23: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":property-list :top-menu-invisible property.isOpen:open"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a class="list-name-container" href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "property.id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="padding-right :5px;"><p style="float: left; width: 100%; display: block; margin : 0;"><span class="property-name full-name">');
		d = c._triageMustache.call(a, "property.name",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="property-name-short add-tooltip" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "property.name"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="right">');
		b.buffer.push(e(c._triageMustache.call(a, "property.firstCharName",
			{
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</span></p><span style="color : #bbc0cf; border : 1px solid #bbc0cf; border-radius : 3px; display: inline-block; width: 24px; text-align: center; font-weight : bold; float: right;margin-left : -100%;">');
		d = c._triageMustache.call(a, "property.list.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><div class="clearfix"></div></a>');
		d = c["if"].call(a, "property.isOpen", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</li>");
		return ""
	}, 25: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.HoverView || a && a.HoverView || d).call(a, {
			name: "HoverView",
			hash: {isVisibleBinding: "view.hoverContentVisible", contentBinding: "view.hoverContent"},
			hashTypes: {isVisibleBinding: "STRING", contentBinding: "STRING"},
			hashContexts: {isVisibleBinding: a, contentBinding: a},
			types: [],
			contexts: [],
			data: b
		})))
	}, 27: function (a, c, d, b) {
		a = c.each.call(a, "view.groupSearch", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(28, b),
			inverse: this.program(33, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 28: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":add-tooltip newChat:waiting unSeen:unseen inView:in-view showFlash:flash-new-message :chat-item :pin-parent"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "groupName", "data-chat-id": "groupId"},
			hashTypes: {"data-original-title": "STRING", "data-chat-id": "STRING"},
			hashContexts: {"data-original-title": a, "data-chat-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="right"><a href="javascript:void(0);" class="pull-left chat-open group-chat"><div class="agent-name-container">');
		d = c["if"].call(a, "hasDraft", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(29, b),
			inverse: this.program(31, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="text">');
		b.buffer.push(e(c._triageMustache.call(a, "highLighted", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</span></div></a><a href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-thumb-tack"></i></a></div>');
		return ""
	}, 29: function (a, c, d, b) {
		b.buffer.push("<i class=\"fa fa-pencil\" style='font-weight : bold;'></i>")
	}, 31: function (a,
	                 c, d, b) {
		b.buffer.push('<i class="fa fa-group"></i>')
	}, 33: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="chat-item padding-10">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "not_found", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 35: function (a, c, d, b) {
		a = c.each.call(a, "Tawk.agentChatController.latestGroupMessagesList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(36, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 36: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":add-tooltip newChat:waiting unSeen:unseen inView:in-view showFlash:flash-new-message :chat-item :pin-parent"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "groupName", "data-chat-id": "groupId"},
			hashTypes: {"data-original-title": "STRING", "data-chat-id": "STRING"},
			hashContexts: {"data-original-title": a, "data-chat-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="right"><a href="javascript:void(0);" class="pull-left chat-open group-chat"><div class="agent-name-container">');
		d = c["if"].call(a, "hasDraft", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(29,
				b), inverse: this.program(31, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="text">');
		d = c._triageMustache.call(a, "groupName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></div></a><a href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-thumb-tack"></i></a></div>');
		return ""
	}, 38: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li class="text-center browse-list" style="margin : 5px 0;"><button class="btn btn-default btn-sm open-group-list">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "browse_groups", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></li>");
		return ""
	}, 40: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<div id="agentList" class="list-section nonVisitorsList"><div class="sidebar-title"><div class="active-chats-long"><div class="sidebar-search-container"><div style="margin-right: 22px;position: relative;"><i class="icon-append fa fa-search"></i><a href="javascript:void(0);" class="hidden clear-dm-search clear-search"> <i class="fa fa-close"></i></a><input type="text" id="search-dm" class="search-input" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {placeholder: "view.dmSearchPlaceholder"},
			hashTypes: {placeholder: "STRING"},
			hashContexts: {placeholder: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></div></div><a id="toggle-inline-dm-chat" href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":dropdown-toggle :add-tooltip :toggle-agent-chat-view Tawk.agentChatController.inlineDirectMessage:active"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-toggle="dropdown" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "view.inlineDMTooltip"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="bottom" aria-haspopup="true" aria-expanded="false"><span class="fa fa-window-restore" style="font-size: 13px;"></span></a><div class="clearfix"></div></div><div class="active-chats-short"><a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" style="color : inherit;"><i class="fa fa-lg fa-fw fa-comment-o"></i></a><ul class="dropdown-menu" style="position: fixed; width : 300px; left : 80px;"><li><a href="javascript:void(0);" class="open-dm-list"><i class="fa fa-comment-o"></i> ');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "browse_dm", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li class="divider"></li><li class="smart-form" style="padding: 10px 11px;"><label class="checkbox"><input type="checkbox" id="dm-chat-view" name="checkbox-toggle" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "Tawk.agentChatController.inlineDirectMessage"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "show_dm_inline", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></li></ul></div></div><ul id="agents" class="chat-users"><li><div class="display-users">');
		d = c["if"].call(a, "view.hasDMSearch", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(41, b),
			inverse: this.program(45,
				b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></li>");
		d = c["if"].call(a, "view.hasDMSearch", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(48, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></div>");
		return ""
	}, 41: function (a, c, d, b) {
		a = c.each.call(a, "view.dmSearch", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(42, b),
			inverse: this.program(33, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 42: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":add-tooltip newChat:waiting unSeen:unseen inView:in-view showFlash:flash-new-message :chat-item :pin-parent"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("  ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "name", "data-chat-id": "id"},
			hashTypes: {"data-original-title": "STRING", "data-chat-id": "STRING"},
			hashContexts: {"data-original-title": a, "data-chat-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="right"><a href="javascript:void(0);" class="pull-left chat-open agent-chat" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-chat-status": "status"},
			hashTypes: {"data-chat-status": "STRING"},
			hashContexts: {"data-chat-status": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c.action.call(a,
			"openAgentChat", "id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
		b.buffer.push(' ><div class="agent-name-container">');
		d = c["if"].call(a, "hasDraft", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(29, b),
			inverse: this.program(43, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="text">');
		b.buffer.push(e(c._triageMustache.call(a, "highLighted", {
			name: "_triageMustache", hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"}, hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</span></div></a><a href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-thumb-tack"></i></a></div>');
		return ""
	}, 43: function (a, c, d, b) {
		b.buffer.push('<i class="status-indicator"></i>')
	}, 45: function (a,
	                 c, d, b) {
		a = c.each.call(a, "Tawk.agentChatController.latestDirectMessagesList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(46, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 46: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push("<div ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":add-tooltip newChat:waiting unSeen:unseen inView:in-view showFlash:flash-new-message :chat-item :pin-parent"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("  ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "name", "data-chat-id": "id"},
			hashTypes: {"data-original-title": "STRING", "data-chat-id": "STRING"},
			hashContexts: {"data-original-title": a, "data-chat-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="right"><a href="javascript:void(0);" class="pull-left chat-open agent-chat" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-chat-status": "status"},
			hashTypes: {"data-chat-status": "STRING"},
			hashContexts: {"data-chat-status": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c.action.call(a, "openAgentChat", "id", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID"],
			contexts: [a, a],
			data: b
		})));
		b.buffer.push(' ><div class="agent-name-container">');
		d = c["if"].call(a, "hasDraft", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(29, b),
			inverse: this.program(43, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="text">');
		b.buffer.push(e(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></div></a><a href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-thumb-tack"></i></a></div>');
		return ""
	}, 48: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<li class="text-center browse-list" style="margin : 5px 0;"><button class="btn btn-default btn-sm open-dm-list">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "browse_dm", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></li>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div id="unseen-top" class="hidden"><span class="text">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "unseen", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span>&nbsp;<i class="fa fa-arrow-up"></i></div><nav id="visitors"><div id="visitorsScrollContainer"><div ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":list-section Tawk.liveMonitoringController.allUnansweredList.length::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' style="border-bottom: 1px solid #1A1817!important;"><div id="icr-title" class="sidebar-title"  style="padding-right :5px;"><p style="float: left; width: 100%; display: block; margin : 0;"><span class="active-chats full-name">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "incoming", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></p><span style="color : #bbc0cf; border : 1px solid #bbc0cf; border-radius : 3px; display: inline-block; width: 24px; text-align: center; font-weight : bold; float: right;margin-left : -100%;">');
		d = c._triageMustache.call(a, "Tawk.liveMonitoringController.allUnansweredList.length", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><div class="clearfix"></div></div>');
		d = c["if"].call(a, "Tawk.userController.groupIncomingRequests", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(10, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="list-section"><ul id="activeVisitors" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "Tawk.userController.sidebarChatListAll::hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		d = c.each.call(a, "property", "in", "chatsListByProperty", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul><ul id="myChatsList" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "Tawk.userController.sidebarChatListAll:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c.each.call(a, "property", "in", "myChatsListByProperty", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></div>");
		d = c["if"].call(a, "view.visitorDetailsHoverIsEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(25, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="channelList" class="list-section nonVisitorsList"><div class="sidebar-title"><div class="active-chats-long"><div class="sidebar-search-container"><div style="margin-right: 40px;position: relative;"><i class="icon-append fa fa-search"></i><a href="javascript:void(0);" class="hidden clear-group-search clear-search"> <i class="fa fa-close"></i></a><input type="text" class="search-input" id="search-group" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {placeholder: "view.groupSearchPlaceholder"},
			hashTypes: {placeholder: "STRING"},
			hashContexts: {placeholder: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></div></div><a id="toggle-inline-group-chat" href="javascript:void(0);" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":dropdown-toggle :add-tooltip :toggle-agent-chat-view Tawk.agentChatController.inlineGroupChat:active"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-toggle="dropdown" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-original-title": "view.inlineGroupTooltip"},
			hashTypes: {"data-original-title": "STRING"},
			hashContexts: {"data-original-title": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="bottom" aria-haspopup="true" aria-expanded="false"><span class="fa fa-window-restore" style="font-size: 13px;"></span></a><a id="new-group" href="javascript:void(0);" class="add-tooltip new-group" data-original-title="');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "new_group", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="bottom"><span class="fa-stack"><i class="fa fa-circle-o fa-stack-2x"></i><i class="fa fa-plus fa-stack-1x"></i></span></a><div class="clearfix"></div></div><div class="active-chats-short"><a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" style="color : inherit;"><i class="fa fa-lg fa-fw fa-group"></i></a><ul class="dropdown-menu" style="position: fixed; width : 300px; left : 80px;"><li><a href="javascript:void(0);" class="new-group"><i class="fa fa-plus"></i> ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "create_group", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li><a href="javascript:void(0);" class="open-group-list"><i class="fa fa-group"></i> ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "browse_groups", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li class="divider"></li><li class="smart-form" style="padding: 10px 11px;"><label class="checkbox"><input type="checkbox" id="group-chat-view" name="checkbox-toggle" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "Tawk.agentChatController.inlineGroupChat"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "show_group_inline", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></li></ul></div></div><ul id="channels" class="chat-users"><li><div class="display-users" style="overflow: auto;">');
		d = c["if"].call(a, "view.hasGroupSearch", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(27, b),
			inverse: this.program(35, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></li>");
		d = c["if"].call(a, "view.hasGroupSearch",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(38, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></div>");
		d = c["if"].call(a, "Tawk.agentChatController.directMessagesList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(40, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></nav><div id="unseen-bottom" class="hidden"><span class="text">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "unseen", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span>&nbsp;<i class="fa fa-arrow-down"></i></div><span class="minifyme" data-action="minifyMenu" style="position: absolute; bottom : 10px;"><i class="fa fa-arrow-circle-left hit"></i></span>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorItem = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<span ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":fa incomingCall:fa-phone:fa-volume-control-phone"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></span>");
		return ""
	}, 3: function (a, c, d, b) {
		b.buffer.push("<i></i>")
	}, 5: function (a, c, d, b) {
		a = c.each.call(a, "view.content.participatingAgentsNamesArr", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ?
			b.buffer.push(a) : b.buffer.push("")
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<p class="participating-agents" style="border: 1px dashed #fff;padding: 1px 3px; margin: 4px 0 0 5px; white-space: nowrap; overflow: hidden;text-overflow: ellipsis; text-align: center; width : 62px; ">');
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p>");
		return ""
	}, 8: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<span ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":unseen-count view.totalUnseen::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "view.totalUnseen", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</span>");
		return ""
	}, compiler: [6,
		">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<a href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":visitor-name view.content.highlightColor view.content.inView:in-view view.content.currentFocus:focused view.content.isClientProperty:client-property view.content.unSeen:unseen"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-chat-status": "view.content.st"},
				hashTypes: {"data-chat-status": "STRING"},
				hashContexts: {"data-chat-status": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(' style="padding: 5px;"><div style="display : table; width : 100%; table-layout: fixed;"><div style="display : table-row"><div style="vertical-align: middle;display: table-cell; "><div style="display: table; width : 100%; table-layout: fixed;"><div style="display: table-row"><div style="display: table-cell; width : 16px; text-align : center;vertical-align: middle;"><span ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "countryFlag"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="margin : 0; display: block;"></span></div><div style="display: table-cell; vertical-align: middle;"><span class="menu-item-parent" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding-left : 5px;">');
		d = c._triageMustache.call(a, "view.content.displayName", {
			name: "_triageMustache", hash: {},
			hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></div></div><div style="display: table-row"><div class="status-display" style="vertical-align: middle;display: table-cell; text-align : center;">');
		d = c["if"].call(a, "ongoingCall", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div style="display: table-cell; padding-left : 5px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; vertical-align: middle">');
		d = c._triageMustache.call(a, "view.content.propertyName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div></div><div style="vertical-align: middle; display: table-cell; width: 67px; text-align: right;"><button ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.content.cr::hidden :ignore-visitor :text-right :btn :btn-default :btn-xs"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-placement="bottom" data-original-title="Ignore Chat"><i class="fa fa-eye-slash fa-lg"></i></button>');
		d = c["if"].call(a, "view.content.ha", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div></div>");
		d = c["if"].call(a, "view.content.isOpen", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorDetails = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li class="participating-agents"><p><i class="fa fa-eye"></i>');
		b.buffer.push(d(c._triageMustache.call(a, "view.content.participatingAgentsNames", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</p></li>");
		return ""
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "view.content.pt", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 5: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.content.pu", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li><p><a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "view.content.rf"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank" class="linkable"> &gt; ');
		b.buffer.push(d(c._triageMustache.call(a, "view.content.rf", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</a></p></li>");
		return ""
	}, 9: function (a,
	                c, d, b) {
		b.buffer.push("<li><p>");
		a = c._triageMustache.call(a, "view.content.departmentName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</p></li>");
		return ""
	}, 11: function (a, c, d, b) {
		a = c._triageMustache.call(a, "view.content.cy", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push(",");
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<p>(");
		b.buffer.push(d(c._triageMustache.call(a, "view.content.htn", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(")</p>");
		return ""
	}, 15: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<span class="pull-left ignore-visitor"><i class="fa fa-eye-slash"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "ignore_visitor", {
			name: "I18n", hash: {context: "visitors"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("&nbsp;</span>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<a href="javascript:void(0);" class="visitor-name"><span class="menu-item-parent">');
		b.buffer.push(e(c._triageMustache.call(a, "view.content.n", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a><ul class="visitor-details"><li class="property"><p><i class="fa fa-bookmark-o"></i>');
		d = c._triageMustache.call(a, "view.content.propertyName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p></li>");
		d = c["if"].call(a, "view.content.ha", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		b.buffer.push("<li><p><a ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "view.content.pu"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank" class="linkable" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {alt: "view.content.pu"},
			hashTypes: {alt: "STRING"},
			hashContexts: {alt: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c["if"].call(a, "view.content.pt", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</a></p></li>");
		d = c["if"].call(a, "view.content.rf", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.content.dpt", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("<li><p>");
		d = c["if"].call(a, "view.content.cy", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;");
		d = c._triageMustache.call(a, "view.content.cn", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("&nbsp;(");
		d = c._triageMustache.call(a, "view.content.ip", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(")</p>");
		d = c["if"].call(a, "view.content.htn", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</li><li><p><span class="pull-left"><span ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.content.browser"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></span>&nbsp;<span ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.content.operatingSystem"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></span></span><span class="clearfix"></span></p></li><li><p class="device-details">');
		d = c.unless.call(a, "view.content.ignore", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="pull-left ban-visitor"><i class="fa fa-ban"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_visitor", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('&nbsp;</span><span class="clearfix"></span></p></li><li><p class="stats-details"><span class="label label-default">');
		d = c._triageMustache.call(a, "view.content.v", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" ");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "visits", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span><span class="label label-default">');
		d = c._triageMustache.call(a, "view.content.cs", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" ");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "chats", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span><span class="label label-default">');
		d = c._triageMustache.call(a, "view.content.formattedDuration", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span><span class="clearfix"></span></p></li></ul><div class="ban-form"><form class="smart-form"><fieldset><section><label class="label">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_question", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="textarea"><textarea name="banReason" class="required banReason" rows="2" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_reason", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" maxlength="500"></textarea></label></section><section><label class="checkbox"><input type="checkbox" name="banIp" class="banIp"><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban_ip", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section></fieldset><footer><button type="submit" class="btn btn-primary ban-visitor">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban",
			{
				name: "I18n",
				hash: {context: "buttons"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</button><button type="button" class="btn btn-default close-ban-form">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.mainNav = Ember.Handlebars.template({
	1: function (a,
	             c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(' <li class="dropdown-header">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</li>");
		a = c.each.call(a, "view.sites", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push('<li class="divider"></li>');
		return ""
	}, 2: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<li><div class="smart-form" style=\'padding : 5px 20px;\'><label class="toggle" style="font-size : inherit">');
		d = c["if"].call(a, "isStatusEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i data-swchon-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "yes", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "no", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i>');
		b.buffer.push(f(c._triageMustache.call(a, "propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></div></li>");
		return ""
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<input type="checkbox" name="checkbox-toggle" checked="checked" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-property-id": "id"},
			hashTypes: {"data-property-id": "STRING"},
			hashContexts: {"data-property-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		return ""
	}, 5: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<input type="checkbox" name="checkbox-toggle" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-property-id": "id"},
			hashTypes: {"data-property-id": "STRING"},
			hashContexts: {"data-property-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		return ""
	}, 7: function (a, c, d, b) {
		a = c._triageMustache.call(a, "ScheduledPropertiesHeaderView", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 9: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<li class="presentation" id="desktop-notification-container"><div class="smart-form" style=\'padding : 5px 20px;\'><section style="margin-bottom : 0;"><label class="toggle" style="font-size : inherit">');
		d = c["if"].call(a, "view.desktopNotificationIsEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.program(12, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i data-swchon-text="');
		b.buffer.push(f((c.I18n || a && a.I18n ||
			e).call(a, "on", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "off", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "desktop_notifications", {
			name: "I18n", hash: {context: "header"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</label></section></div></li>");
		return ""
	}, 10: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-toggle" class="desktop-notification-switch" checked="checked">')
	}, 12: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-toggle" class="desktop-notification-switch">')
	}, 14: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-toggle" class="sound-notification-switch" checked="checked">')
	},
	16: function (a, c, d, b) {
		b.buffer.push('<input type="checkbox" name="checkbox-toggle" class="sound-notification-switch">')
	}, 18: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<img src="a34/images/blank.gif"  ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "flagClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {alt: "title"},
			hashTypes: {alt: "STRING"}, hashContexts: {alt: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("><span>&nbsp;");
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("&nbsp;</span>");
		return ""
	}, 20: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li><a href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {id: "code"}, hashTypes: {id: "STRING"},
			hashContexts: {id: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' class="change-language"><img src="a34/images/blank.gif" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "flagClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {alt: "title"},
			hashTypes: {alt: "STRING"},
			hashContexts: {alt: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" />&nbsp;");
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a></li>");
		return ""
	}, 22: function (a, c, d, b) {
		b.buffer.push('<li id="schedules-select" class="navigate-view menu-tooltip nav-select" data-placement="right"data-original-title="Live Answering Schedule"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-calendar"></i></a></li><li id="leaderboard-select" class="navigate-view menu-tooltip nav-select" data-placement="right"data-original-title="Leaderboard"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-trophy"></i></a></li><li id="schedules-select" class="menu-tooltip nav-select" data-placement="right"data-original-title="Client News"><a href="https://af.tawk.link/" class="nav-item" target="_blank"><i class="fa fa-newspaper-o"></i></a></li>')
	},
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div id="profile-nav"><div class="dropdown nav-select"><a href="javascript:void(0);" class="nav-item" data-toggle="dropdown"><i class="fa fa-user"></i><div id="profile-image"></div><div style="    position: absolute;    position: absolute;    bottom: -2.5px;    right: -3px;    width: 15px;    height: 15px;    background: #666;    border-radius: 50%;"></div><div id="account-status" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.statusClassName"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></div></a><ul id="account-menu-container" class="dropdown-menu multi-level text-left" role="menu" style="min-width : 250px; margin-top : 13px;"><li><a tabindex="-1" href="javascript:void(0);" class="navigate-view" id="account-select">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "my_profile", {
			name: "I18n",
			hash: {context: "account"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li class="dropdown-submenu" id="status-select"><a href="javascript:void(0);"><span ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.statusClassName"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></span>&nbsp;<span style="display: inline-block; vertical-align: middle">');
		d =
			c._triageMustache.call(a, "view.statusDisplayText", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></a><ul class="dropdown-menu"><li><a tabindex="-1" href="javascript:void(0);" class="status-select" id="online"><span class="status-online"></span>&nbsp;<span style="display: inline-block; vertical-align: middle">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "online", {
			name: "I18n", hash: {context: "status_types"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</span></a></li><li><a href="javascript:void(0);" class="status-select" id="away"><span class="status-away"></span>&nbsp;<span style="display: inline-block; vertical-align: middle">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "away", {
			name: "I18n",
			hash: {context: "status_types"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li><a href="javascript:void(0);" class="status-select" id="invisible"><span class="status-invisible"></span>&nbsp;<span style="display: inline-block; vertical-align: middle">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "invisible", {
			name: "I18n",
			hash: {context: "status_types"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li></ul></li><li class="dropdown-submenu" id="property-status-toggle"><a href="javascript:void(0);">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "accept_chats_from", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a><ul class="dropdown-menu" style="min-width : 420px; max-height : 300px; overflow: auto;">');
		d = c["if"].call(a, "view.sites.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<li class="dropdown-header">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n", hash: {context: "pages"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push("</li>");
		d = c.each.call(a, "view.pages", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></li>");
		d = c["if"].call(a, "Tawk.userController.user.isHiredAgent", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<li class="divider"></li>');
		d = c["if"].call(a, "view.hasDesktopNotificationFeature", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<li class="presentation" id="sound-notification-container"><div class="smart-form" style=\'padding : 5px 20px;\'><section style="margin-bottom : 0;"><label class="toggle" style="font-size : inherit">');
		d = c["if"].call(a, "view.soundNotificationIsEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.program(16, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<i data-swchon-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "on", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "off", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('"></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "sound_notifications", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section></div></li><li class="presentation"><a href="javascript:void(0);" class="manage-sounds">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "manage_sounds", {
			name: "I18n", hash: {context: "header"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</a></li><li class="divider"></li><li class="presentation"><a href="javascript:void(0);" class="manage-sessions">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "browser_app_sessions", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li class="divider"></li><li class="presentation"><a href="javascript:void(0);" class="support-popout"><i class="fa fa-support"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "help", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li class="presentation"><a href="https://www.tawk.to/knowledgebase/" target="_blank"><i class="fa fa-book"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "knowledgebase", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></li><li class="dropdown-submenu dropup"><a tabindex="-1" href="javascript:void(0);">');
		d = c["with"].call(a, "view.selectedLanguage", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a><ul id="dashboard-lang-selection" class="dropdown-menu">');
		d = c.each.call(a, "view.enabledLanguages", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(20, b),
			inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></li><li class="divider"></li><li><a ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "view.logoutUrl"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-power-off"></i>&nbsp;');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "logout", {
			name: "I18n", hash: {context: "header"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</a></li><div class="block"></div></ul></div></div><div id="other-nav"><ul id="nav-list"><li class="navigate-view menu-tooltip nav-select" id="dashboard-select" data-placement="right"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "dashboard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" style="margin-top: 11px;"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-dashboard"></i></a></li><li class="navigate-view menu-tooltip nav-select" id="monitoring-select" data-placement="right"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><span class="fa-stack fa-lg" style="font-size: 27px;width: 27px;height: 27px;line-height: 27px;"><i class="fa fa-desktop fa-stack-2x" style="font-size: 27px;left: -1px;"></i><i class="fa fa-line-chart fa-stack-1x" style="font-size: 19px;left: -3px;bottom: 3px;"></i></span></a><span class="badge">');
		d = c._triageMustache.call(a, "Tawk.liveMonitoringController.totalVisitorsCount", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></li><li class="navigate-view menu-tooltip nav-select" id="chat-select" data-placement="right"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "active_chats", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-comments"></i></a></li><li class="navigate-view menu-tooltip nav-select" id="messaging-select" data-placement="right"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "conversations"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-inbox"></i></a><span class="badge">');
		d = c._triageMustache.call(a, "Tawk.conversationsController.totalOpen", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></li><li class="navigate-view menu-tooltip nav-select" id="reporting-select" data-placement="right"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-bar-chart"></i></a></li><li class="navigate-view menu-tooltip nav-select" id="addon-select" data-placement="right"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "add_on_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-puzzle-piece" style="margin-left: 4px; padding-top: 6px;"></i></a></li><li class="navigate-view menu-tooltip nav-select" id="admin-select" data-placement="right"data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "header_title", {
			name: "I18n",
			hash: {context: "admin"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><a href="javascript: void(0);" class="nav-item"><i class="fa fa-gear"></i></a></li>');
		d = c["if"].call(a, "Tawk.userController.user.isHiredAgent", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.membersMessageList = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<a class="pull-left" id="back-view" href="javascript:void(0);"><i class="fa fa-chevron-left"></i></a>')
	}, 3: function (a, c, d, b) {
		b.buffer.push("Create New Group")
	}, 5: function (a, c, d, b) {
		a = c["if"].call(a, "view.isDM", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(8, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	},
	6: function (a, c, d, b) {
		b.buffer.push("Direct Messages")
	}, 8: function (a, c, d, b) {
		b.buffer.push("Groups")
	}, 10: function (a, c, d, b) {
		a = c["if"].call(a, "isGroup", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.program(13, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 11: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<li class="agent-entry group-chat pin-parent" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {id: "groupId"},
			hashTypes: {id: "STRING"}, hashContexts: {id: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><div class="pull-left" style="width: 100%;"><p style="margin-right : 26px;">');
		d = c._triageMustache.call(a, "groupName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div><a href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-thumb-tack"></i></a><div class="clearfix"></div></li>');
		return ""
	}, 13: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<li class="agent-entry pin-parent" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="pull-left" style="width: 100%;"><div style="margin-right : 26px;"><div style="display: inline-block; vertical-align: middle; margin-right : 5px; width : 40px; text-align: center;">');
		d = c["if"].call(a, "aliasImage", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.program(16, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div style="display: inline-block; vertical-align: middle;"><p><i ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "status :agent-status"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></i>");
		b.buffer.push(e(c._triageMustache.call(a,
			"name", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</p></div></div></div><a href="javascript:void(0);" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":pull-left pin:unpin-chat:pin-chat"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><i class="fa fa-thumb-tack"></i></a><div class="clearfix"></div></li>');
		return ""
	}, 14: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<img ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {src: "aliasImage"},
			hashTypes: {src: "STRING"},
			hashContexts: {src: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {alt: "name"},
			hashTypes: {alt: "STRING"},
			hashContexts: {alt: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' width="40" height="40" />');
		return ""
	}, 16: function (a, c, d, b) {
		b.buffer.push('<i class="fa fa-user"></i>')
	},
	18: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="col-xs-12 col-sm-6 col-md-6 col-lg-6"><label class="checkbox"><input type="checkbox" class="group-participants" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' name="group-participants[]" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "selected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" /><i></i>");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></div>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"],
	main: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<div class="property-form"><div id="close-button-container">');
		d = c["if"].call(a, "view.showBack", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="title-breadcrumb-container"><p id="main-title" class="pull-left">');
		d = c["if"].call(a, "view.isNewGroupView", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(3, b), inverse: this.program(5, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</p></div><a id="close-view" href="javascript:void(0);"><i class="fa fa-close"></i></a></div><div id="content-container" class="smart-form "><div style="width: 100%; height : 100%;" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isNewGroupView:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div style="height: 40px;"><div class="pull-left"><label class="input"><input type="text" id="search" placeholder="Search List" style="width: 450px"/></label></div><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":pull-right view.isDM:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><button id="create-group" class="btn btn-primary">New Group</button></div><div class="clearfix"></div></div><div class="scrollable-list"><ul>');
		d = c.each.call(a, "view.list", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div></div><form id="group-chat-form" name="group-chat-form" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.isNewGroupView::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div id="form-scrollable-container" style="left: 0; right : 0; bottom : 80px; width: auto; overflow: auto;"><fieldset><section><label class="input"><input type="text" id="group-name" class="required groupNameFormat" placeholder="Enter Group Name" maxlength="21" /></label></section><div class="clearfix"></div></fieldset><div style="border-top: 1px solid #ddd; margin-top: 10px;padding-top: 10px;"><section><label class="label">Select group members</label></section><section><label class="select" style="max-width : 300px;">');
		d = c._triageMustache.call(a, "webPropertySelect", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</label></section><div class="col-xs-12 col-sm-6 col-md-6 col-lg-6"><label class="checkbox"><input type="checkbox" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' checked="checked" disabled="disabled" /><i></i>');
		b.buffer.push(e(c._triageMustache.call(a, "Tawk.userController.user.fullName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" (");
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "me", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(")</label></div>");
		d = c.each.call(a, "view.propertyMembers", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div class="clearfix"></div></div></div><p id="error-container" class="invalid hidden" style="position : absolute; bottom : 70px;"></p><footer><button id="submit" type="submit" class="btn btn-primary">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "create", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button><button id="cancel" type="button" class="btn btn-default">');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></footer></form></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.hoverBan = Ember.Handlebars.template({
	compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing,
			f = this.escapeExpression;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-body"><form class="smart-form ban-form"><fieldset><section><label class="label">');
		d = c._triageMustache.call(a, "view.ban_question", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(' </label><label class="textarea"><textarea name="banReason" class="required banReason" rows="3" placeholder="');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "ban_reason", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"maxlength="500"></textarea></label></section><section><label class="checkbox"><input type="checkbox" name="banIp" class="banIp"><i></i>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban_ip", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section></fieldset></form></div><div class="modal-footer"><button type="button" class="btn btn-default close-ban-form"  data-dismiss="modal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-danger submit-ban-form">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ban", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.liveListContainer = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push("<tr ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "highlightColor inView:in-view isClientProperty:client-property"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "_id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><td class="property-name-cell"><div class="detail-hover" data-toggle="popover" data-placement="right" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "propertyName"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><span class="property-box" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {style: "propertyColor"},
			hashTypes: {style: "STRING"},
			hashContexts: {style: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c._triageMustache.call(a, "propertyShortName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></div></td><td class="flag-cell"><div class="detail-hover" data-toggle="popover" data-placement="right" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "locationDetails"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><span ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "countryFlag"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></span></div></td><td class="name-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "visitorName"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c._triageMustache.call(a, "visitorName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></td><td class="ip-cell">');
		d = c["if"].call(a, "htn", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(2,
				b), inverse: this.program(4, b), types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td><td class="page-title-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "pu"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><a ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {href: "pu"}, hashTypes: {href: "STRING"},
			hashContexts: {href: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' target="_blank">');
		d = c["if"].call(a, "pt", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(8, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</a></div></td><td class="referrer-cell">');
		d = c["if"].call(a, "rf", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.program(12, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td>");
		d = c["if"].call(a, "participatingAgentsNames", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<td class="device-details-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "ua"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><span ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "browser"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("></span>&nbsp;<span ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "operatingSystem"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></span></div></td><td class="duration-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "duration", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><span>');
		d = c._triageMustache.call(a, "formattedDuration", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></div></td><td class="counter-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "visits", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		d = c._triageMustache.call(a, "v", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></td><td class="counter-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || f).call(a, "chats", {
			name: "I18n",
			hash: {context: "sidebar"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		d = c._triageMustache.call(a, "cs", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></td><td class="tags-cell"><div ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "detail-hover customTags.data::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-toggle="bottom" data-placement="top"data-content="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "tags_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-tag"></i>&nbsp;');
		d = c._triageMustache.call(a, "customTags.data", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></td><td class="button-cell"><div class="detail-hover"><button class="btn btn-danger btn-sm ban-visitor" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-id": "_id"},
			hashTypes: {"data-id": "STRING"},
			hashContexts: {"data-id": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "ban", {
			name: "I18n", hash: {context: "tooltip"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('"data-placement="bottom"><i class="fa fa-ban"></i></button>');
		d = c["if"].call(a, "ignore", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.program(18, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></td></tr>");
		return ""
	}, 2: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="detail-hover" data-toggle="popover" data-placement="top" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-content": "htn"},
				hashTypes: {"data-content": "STRING"},
				hashContexts: {"data-content": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "ip", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, 4: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "unknown_hostname", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c._triageMustache.call(a, "ip", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</div>");
		return ""
	}, 6: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push(d(c._triageMustache.call(a, "pt", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 8: function (a, c, d, b) {
		a = c._triageMustache.call(a, "pu", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 10: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<div class="detail-hover" data-toggle="popover" data-placement="top" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "decodedReferrer"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "decodedReferrer"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank">');
		a = c._triageMustache.call(a, "decodedReferrer", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a></div>");
		return ""
	}, 12: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="text-center margin-bottom-0 italic no-referrer">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "no_referrer", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div>");
		return ""
	}, 14: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<td class="agents-cell"><div class="detail-hover" data-toggle="popover" data-placement="top" data-content="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "served_by", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		b.buffer.push(e(c._triageMustache.call(a, "participatingAgentsNames", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div></td>");
		return ""
	}, 16: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<button class="btn btn-default btn-sm ignore-visitor" ');
		b.buffer.push(d(c.action.call(a, "ignoreChat", "_id", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID"],
			contexts: [a, a],
			data: b
		})));
		b.buffer.push('title="');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "unignore", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="bottom"><i class="fa fa-eye"></i></button>');
		return ""
	}, 18: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<button class="btn btn-sm ignore-visitor" ');
		b.buffer.push(d(c.action.call(a, "ignoreChat", "_id", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID"],
			contexts: [a, a],
			data: b
		})));
		b.buffer.push('title="');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "ignore_visitor", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="bottom"><i class="fa fa-eye-slash"></i></button>');
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		b.buffer.push("<tbody>");
		a = c.each.call(a, "view.list", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</tbody>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.visitorMonitoringContainer = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isSelected:active :timeout-select"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "value"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="select-timeout">');
		a = c._triageMustache.call(a, "text", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a></li>");
		return ""
	}, 3: function (a, c, d, b, e) {
		var f = this.escapeExpression, g = c.helperMissing;
		b.buffer.push("<li ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><label class="checkbox" ');
		b.buffer.push(f(c.action.call(a, "toggleSiteSelection", "id", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID"],
			contexts: [a, a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="sites-checkbox inner-checkbox" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		d = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</label><ul ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isSelected:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><li><label class="checkbox" ');
		b.buffer.push(f(c.action.call(a,
			"toggleAllWidgetForSite", "id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
		b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isAllWidgetSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(f((c.I18n || a && a.I18n || g).call(a, "all_widgets", {
			name: "I18n", hash: {context: "monitoring"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</label><ul>");
		d = c.each.call(a, "widget", "in", "widgetsList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b, e),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></li></ul>");
		d = c["if"].call(a, "departmentsList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</li>");
		return ""
	}, 4: function (a, c, d, b, e) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "widget.id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isAllWidgetSelected:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><label ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":checkbox isHighlighted:highlight"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c.action.call(a, "toggleWidgetSelectionForSite", "widget.id", "id", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID", "ID"],
			contexts: [a, a, e[1]],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "widget.isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		a = c._triageMustache.call(a, "widget.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label></li>");
		return ""
	}, 6: function (a, c, d, b, e) {
		d = this.escapeExpression;
		var f = c.helperMissing;
		b.buffer.push("<ul ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "isSelected:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><li><label class="checkbox" ');
		b.buffer.push(d(c.action.call(a, "toggleAllDepartment", "id", "site", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID", "STRING"],
			contexts: [a, a, a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isAllDepartmentSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(d((c.I18n || a && a.I18n || f).call(a, "all_departments", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label><ul>");
		a = c.each.call(a, "department", "in", "departmentsList", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(7, b,
				e), inverse: this.noop, types: ["ID", "ID", "ID"], contexts: [a, a, a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul></li></ul>");
		return ""
	}, 7: function (a, c, d, b, e) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "department.id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isAllDepartmentSelected:hidden"}, hashTypes: {"class": "STRING"},
			hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("><label ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":checkbox isHighlighted:highlight"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c.action.call(a, "toggleDepartmentSelection", "department.id", "id", "site", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID", "ID", "STRING"],
			contexts: [a, a, e[1], a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "department.isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		a = c._triageMustache.call(a, "department.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label></li>");
		return ""
	}, 9: function (a,
	                c, d, b, e) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="checkbox" ');
		b.buffer.push(d(c.action.call(a,
			"togglePageSelection", "id", {
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING", "ID"],
				contexts: [a, a],
				data: b
			})));
		b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		d = c._triageMustache.call(a, "name", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"],
			contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</label>");
		d = c["if"].call(a, "departmentsList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</li>");
		return ""
	}, 10: function (a, c, d, b, e) {
		d = this.escapeExpression;
		var f = c.helperMissing;
		b.buffer.push("<ul ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isSelected:visible:hidden"}, hashTypes: {"class": "STRING"},
			hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><li><label class="checkbox" ');
		b.buffer.push(d(c.action.call(a, "toggleAllDepartment", "id", "page", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID", "STRING"],
			contexts: [a, a, a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isAllDepartmentSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(d((c.I18n || a && a.I18n || f).call(a, "all_departments", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label><ul>");
		a = c.each.call(a, "department", "in", "departmentsList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b, e),
			inverse: this.noop,
			types: ["ID", "ID", "ID"],
			contexts: [a, a, a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul></li></ul>");
		return ""
	}, 11: function (a, c, d, b, e) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "department.id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isAllDepartmentSelected:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><label ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":checkbox isHighlighted:highlight"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c.action.call(a, "toggleDepartmentSelection", "department.id", "id", "page", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID", "ID", "STRING"],
			contexts: [a, a, e[1], a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "department.isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		a = c._triageMustache.call(a, "department.name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label></li>");
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {id: "label"},
				hashTypes: {id: "STRING"},
				hashContexts: {id: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "countries-by-index isViewable:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><p class="index-header">');
		d = c._triageMustache.call(a, "label", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</p><ul>");
		d = c.each.call(a, "countries", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(14, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></li>");
		return ""
	}, 14: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="checkbox" ');
		b.buffer.push(d(c.action.call(a, "toggleCountrySelection", "id", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID"],
			contexts: [a, a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="pages-checkbox inner-checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {checked: "isSelected"},
				hashTypes: {checked: "STRING"},
				hashContexts: {checked: a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push("><i></i>");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></li>");
		return ""
	}, 16: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<li class="select-country-index" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"data-id": "label"},
				hashTypes: {"data-id": "STRING"},
				hashContexts: {"data-id": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isViewable:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);">');
		a = c._triageMustache.call(a, "label", {
			name: "_triageMustache", hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</a></li>");
		return ""
	}, 18: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="checkbox" ');
		b.buffer.push(d(c.action.call(a, "toggleAgentSelection", "id", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID"],
			contexts: [a, a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="agents-checkbox inner-checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		a = c._triageMustache.call(a,
			"name", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a && b.buffer.push(a);
		b.buffer.push("</label></li>");
		return ""
	}, 20: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "isHighlighted:visible isNotHighlighted:hidden"},
			hashTypes: {"class": "STRING"}, hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('><label class="label checkbox" ');
		b.buffer.push(d(c.action.call(a, "toggleTagSelection", "id", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING", "ID"],
			contexts: [a, a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" class="tags-checkbox inner-checkbox" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isSelected"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</label></li>");
		return ""
	}, 22: function (a, c, d, b) {
		a = c._triageMustache.call(a, "formattedFilter.filterByProperties.shortValues", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("&nbsp;...");
		return ""
	}, 24: function (a, c, d, b) {
		a = c._triageMustache.call(a, "formattedFilter.filterByProperties.values", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 26: function (a, c, d, b) {
		a = c._triageMustache.call(a, "formattedFilter.filterByCountries.shortValues", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("&nbsp;...");
		return ""
	}, 28: function (a,
	                 c, d, b) {
		a = c._triageMustache.call(a, "formattedFilter.filterByCountries.values", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 30: function (a, c, d, b) {
		a = c._triageMustache.call(a, "formattedFilter.filterByAgentsInclude.shortValues", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("&nbsp;...");
		return ""
	}, 32: function (a, c, d, b) {
		a = c._triageMustache.call(a,
			"formattedFilter.filterByAgentsInclude.values", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 34: function (a, c, d, b) {
		a = c._triageMustache.call(a, "formattedFilter.filterByTagsInclude.shortValues", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("&nbsp;...");
		return ""
	}, 36: function (a, c, d, b) {
		a = c._triageMustache.call(a, "formattedFilter.filterByTagsInclude.values",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 38: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<span class="badge bg-color-blueLight">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "status", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" : ");
		d = c._triageMustache.call(a, "values",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "remove_filter", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="bottom"data-type="status"><i class="fa fa-close"></i></button></span>');
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b, e) {
		var f = c.helperMissing, g = this.escapeExpression;
		b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-4 col-sm-3 col-md-3 col-lg-3"><h1 class="page-title txt-color-blueDark"><span class="fa-stack fa-lg" style="font-size: 24px;width: 24px;height: 24px;line-height: 24px;vertical-align: middle;margin-right: 3px;"><i class="fa fa-desktop fa-stack-2x" style="font-size: 24px;left: -2px;"></i><i class="fa fa-line-chart fa-stack-1x" style="font-size: 16px;left: -5px;bottom: 3px;"></i></span>');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h1></div><div class="col-xs-8 col-sm-9 col-md-9 col-lg-9 pull-right"><form id="searchMonitoring" class="pull-right"><fieldset><div class="input-group"><div class="input-group-btn"><button id="openFilter" type="button" class="btn btn-default pull-right" tabindex="-1" aria-expanded="false"><i class="fa fa-filter"></i> ');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "filter_visitors", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' <span class="caret"></span></button><div class="dropdown-menu pull-right smart-form" role="menu" id="visitors-filter"><fieldset><section class="col col-6"><label id="properties" class="select custom-select open-selection"><div><p>');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title",
			{
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("/");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><i></i></label></section><section class="col col-6"><label id="countries" class="select custom-select open-selection"><div><p>');
		b.buffer.push(g((c.I18n ||
			a && a.I18n || f).call(a, "countries", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><i></i></label></section><section class="col col-6"><label id="agents" class="select custom-select open-selection"><div><p>');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "agents", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><i></i></label></section><section class="col col-6"><label id="tags" class="select custom-select open-selection"><div><p>');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "tags_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div><i></i></label></section><section class="col col-6">');
		b.buffer.push(g(c.view.call(a, "view.statusSelectView", {
			name: "view",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</section></fieldset><footer><button type="submit" class="btn btn-primary search">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "filter_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn bg-color-teal txt-color-white" id="resetFilter">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-default" id="closeFilter">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></footer></div></div></div></fieldset></form><div class="input-group pull-right sleep-button"><button id="set-timeout" class="btn btn-default bg-color-blue txt-color-white" data-toggle="dropdown" rel="popover-hover" data-placement="left" data-content="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a,
			"sleep_title", {
				name: "I18n",
				hash: {context: "monitoring"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('"><i class="fa fa-clock-o"></i></button><ul class="dropdown-menu">');
		d = c.each.call(a, "view.monitoringTimeoutOptions", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div></div></div><div id="properties-list-container" class="smart-form selection-main-container"><div class="list-header"><label class="search-field input pull-right"><input type="input" placeholder="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" id="search-property-input" class="search-input" /><button><i class="fa fa-search"></i></button></label><label class="checkbox pull-left" ');
		b.buffer.push(g(c.action.call(a, "toggleAllProperties", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" name="all-properties-checkbox" id="all-properties-checkbox" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "allPropertiesIncluded"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_site_page", {
			name: "I18n",
			hash: {context: "shortcuts"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="clearfix"></div></div><div class="list-content"><ul id="sites-selection-container"><li id="all-sites" class="dropdown-header"><label class="checkbox" ');
		b.buffer.push(g(c.action.call(a, "toggleAllSites", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" id="all-sites-checkbox" name="all-sites-checkbox" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "allSitesIncluded"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_sites", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label></li>");
		d = c.each.call(a, "sitesList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul><ul id="pages-selection-container"><li id="all-pages" class="dropdown-header"><label class="checkbox" ');
		b.buffer.push(g(c.action.call(a, "toggleAllPages",
			{
				name: "action",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('><input type="checkbox" id="all-pages-checkbox" name="all-pages-checkbox" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "allPagesIncluded"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_tawk_pages", {
			name: "I18n", hash: {context: "monitoring"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</label></li>");
		d = c.each.call(a, "pagesList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div class="list-button-container"><button id="close-properties-selection" class="btn btn-primary close-selection">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "done", {
			name: "I18n", hash: {context: "buttons"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button></div></div><div id="countries-list-container" class="smart-form selection-main-container"><div id="all-countries" class="list-header"><label class="search-field input pull-right"><input type="input" placeholder="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" id="search-country-input" class="search-input" /><button><i class="fa fa-search"></i></button></label><label class="checkbox pull-left" ');
		b.buffer.push(g(c.action.call(a, "toggleAllCountries", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" name="all-countries-checkbox" id="all-countries-checkbox" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {checked: "allCountriesIncluded"},
			hashTypes: {checked: "STRING"}, hashContexts: {checked: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_countries", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="clearfix"></div></div><div class="list-content"><ul>');
		d = c.each.call(a, "countriesDirectory", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(13,
				b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div id="countries-indexes"><ul>');
		d = c.each.call(a, "countriesDirectory", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b, e),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div class="list-button-container"><button id="close-countries-selection" class="btn btn-primary close-selection">');
		b.buffer.push(g((c.I18n ||
			a && a.I18n || f).call(a, "done", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div><div id="agents-list-container" class="smart-form selection-main-container"><div class="list-header"><label class="search-field input pull-right"><input type="input" placeholder="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('" id="search-agent-input" class="search-input" /><button><i class="fa fa-search"></i></button></label><label class="checkbox pull-left" ');
		b.buffer.push(g(c.action.call(a, "toggleAllAgents", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" name="all-agents-checkbox" id="all-agents-checkbox" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {checked: "allAgentsIncluded"},
			hashTypes: {checked: "STRING"}, hashContexts: {checked: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_agents", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="clearfix"></div></div><div class="list-content"><ul>');
		d = c.each.call(a, "agentsList", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(18, b, e), inverse: this.noop,
			types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div class="list-button-container"><button id="close-agents-selection" class="btn btn-primary close-selection">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "done", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div><div id="tags-list-container" class="smart-form selection-main-container"><div class="list-header"><label class="search-field input pull-right"><input type="input" placeholder="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "search", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" id="search-tag-input" class="search-input" /><button><i class="fa fa-search"></i></button></label><label class="checkbox pull-left" ');
		b.buffer.push(g(c.action.call(a, "toggleAllTags", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('><input type="checkbox" name="all-tags-checkbox" id="all-tags-checkbox" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "allTagsIncluded"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><i></i>");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "all_tags", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="clearfix"></div></div><div class="list-content"><ul>');
		d = c.each.call(a, "tagsList",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(20, b, e),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div><div class="list-button-container"><button id="close-tags-selection" class="btn btn-primary close-selection">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "done", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div><div class="inner-content"><div id="live-monitoring-view"><div id="visitor-list"><div id="filters-details" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "formattedFilter:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "filtered_by", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" :&nbsp;<span ");
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":badge :bg-color-blueLight formattedFilter.filterByProperties.shortValues:filters-popover formattedFilter.filterByProperties:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('data-toggle="popover" data-placement="bottom" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "formattedFilter.filterByProperties.values"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("/");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "view_title", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" :&nbsp;");
		d = c["if"].call(a, "formattedFilter.filterByProperties.shortValues", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(22, b, e),
			inverse: this.program(24, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "remove_filter", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="bottom"data-type="properties"><i class="fa fa-close"></i></button></span><span ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":badge :bg-color-blueLight formattedFilter.filterByCountries:visible:hidden formattedFilter.filterByCountries.shortValues:filters-popover"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('data-toggle="popover" data-placement="bottom" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "formattedFilter.filterByCountries.values"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "countries", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push(" :&nbsp;");
		d = c["if"].call(a, "formattedFilter.filterByCountries.shortValues", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(26, b, e),
			inverse: this.program(28, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "remove_filter", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('"data-placement="bottom" data-type="countries"><i class="fa fa-close"></i></button></span><span ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":badge :bg-color-blueLight formattedFilter.filterByAgentsInclude.shortValues:filters-popover formattedFilter.filterByAgentsInclude:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('data-toggle="popover" data-placement="bottom" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "formattedFilter.filterByAgentsInclude.values"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "agents", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" :&nbsp;");
		d = c["if"].call(a, "formattedFilter.filterByAgentsInclude.shortValues",
			{
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(30, b, e),
				inverse: this.program(32, b, e),
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "remove_filter", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="bottom"data-type="agents-include"><i class="fa fa-close"></i></button></span><span ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":badge :bg-color-blueLight formattedFilter.filterByTagsInclude.shortValues:filters-popover formattedFilter.filterByTagsInclude:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('data-toggle="popover" data-placement="bottom" ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-content": "formattedFilter.filterByTagsInclude.values"},
			hashTypes: {"data-content": "STRING"},
			hashContexts: {"data-content": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "tags_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" :&nbsp;");
		d = c["if"].call(a, "formattedFilter.filterByTagsInclude.shortValues", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(34, b, e),
			inverse: this.program(36, b, e),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null !=
		d && b.buffer.push(d);
		b.buffer.push('<button class="btn btn-default txt-color-red remove-filter" title="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "remove_filter", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-placement="bottom"data-type="tags-include"><i class="fa fa-close"></i></button></span>');
		d = c["with"].call(a, "formattedFilter.filterByStatus", {
			name: "with", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(38, b, e), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div id="list-container"><div ');
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "unansweredList.length:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><p class="list-title"><i class="fa fa-chevron-down"></i> ');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "unanswered", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" (");
		d = c._triageMustache.call(a, "unansweredList.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(")</p><div>");
		b.buffer.push(g((c.LiveListView || a && a.LiveListView || f).call(a, {
			name: "LiveListView",
			hash: {listBinding: "unansweredList"},
			hashTypes: {listBinding: "STRING"},
			hashContexts: {listBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</div></div><div ");
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "servedList.length:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><p class="list-title"><i class="fa fa-chevron-down"></i> ');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "served", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" (");
		d = c._triageMustache.call(a, "servedList.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(")</p><div>");
		b.buffer.push(g((c.LiveListView || a && a.LiveListView || f).call(a, {
			name: "LiveListView",
			hash: {listBinding: "servedList"},
			hashTypes: {listBinding: "STRING"},
			hashContexts: {listBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</div></div><div ");
		b.buffer.push(g(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "hasActiveVisitors:visible:hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><p class="list-title"><i class="fa fa-chevron-down"></i> ');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "active", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" (");
		d = c._triageMustache.call(a, "activeVisitors.length", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" / ");
		d = c._triageMustache.call(a, "totalActiveVisitors", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(")</p><div>");
		b.buffer.push(g((c.LiveListView || a && a.LiveListView || f).call(a, {
			name: "LiveListView",
			hash: {listBinding: "activeVisitors"},
			hashTypes: {listBinding: "STRING"},
			hashContexts: {listBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("</div></div><div ");
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "hasIdleVisitors:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><p class="list-title"><i class="fa fa-chevron-down"></i> ');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "idle", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" (");
		d = c._triageMustache.call(a, "idleVisitors.length", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" / ");
		d = c._triageMustache.call(a, "totalIdleVisitors", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(")</p><div>");
		b.buffer.push(g((c.LiveListView || a && a.LiveListView || f).call(a, {
			name: "LiveListView", hash: {listBinding: "idleVisitors"},
			hashTypes: {listBinding: "STRING"}, hashContexts: {listBinding: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("</div></div></div><div ");
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "hasNoVisitors::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="well text-center"><div id="simulate-chat-text">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "simulate_visitor", {
			name: "I18n",
			hash: {
				variables: '{"lineStart" : "<h5>", "lineEnd" : "</h5>", "linkStart3" : "<a href=\'javascript:void(0);\' id=\'simulate-visitor\'>", "linkEnd3" : "</a>", "linkStart1" : "<a href=\'javascript:void(0);\' id=\'monitoring-view-sites\'>", "linkEnd1" : "</a>", "linkStart2" : "<a href=\'javascript:void(0);\' id=\'monitoring-view-pages\'>", "linkEnd2" : "</a>"}',
				context: "monitoring"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</div></div></div><div ");
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "hasNoFilteredVisitors::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div class="well text-center"><h5>');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "no_filtered_visitors", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h5></div></div></div><div ");
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":load-container :text-center isLoading:visible:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><img src="a34/images/ajax-loader-big-black.gif" /></div><div class="view-footer"><div class="btn-group pull-right"><a id="prev-page" ');
		b.buffer.push(g(c.action.call(a, "previousPage", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :prev hasPreviousPage::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" title="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "previous_text",
			{
				name: "I18n",
				hash: {context: "tooltip"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('"><i class="fa fa-chevron-left"></i></a><a id="next-page" ');
		b.buffer.push(g(c.action.call(a, "nextPage", {
			name: "action",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(g(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":btn :btn-default :btn-circle :next hasNextPage::disabled"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('href="javascript:void(0);" data-placement="top" title="');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "next_text", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-chevron-right"></i></a></div></div></div><div id="list-block"></div></div><div id="subscription-ended-container" class="hidden"><div class="overlay"></div><div class="notification"><h1>');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "resubscribe_message_header", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h1><div class="counter-container"><div class="counter-display"><div id="incoming-total" class="counter-block"><span>');
		d = c._triageMustache.call(a, "allUnansweredCount", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span><p>");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "unanswered", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div></div><div class="counter-display"><div id="served-total" class="counter-block"><span>');
		d = c._triageMustache.call(a, "allServedCount", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span><p>");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "served", {
			name: "I18n",
			hash: {context: "monitoring"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div></div><div class="counter-display"><div id="visitors-total" class="counter-block"><span>');
		d = c._triageMustache.call(a, "totalVisitorsCount", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span><p>");
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "visitors", {
			name: "I18n",
			hash: {context: "visitors"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div></div></div><div id="resubscribe-information">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "resubscribe_message", {
			name: "I18n",
			hash: {
				variables: '{"lineStart" : "<p>", "lineEnd" : "<\\/p>", "headerStart" : "<h3>","headerEnd" : "<\\/h3>", "lineBreak" : "<\\/br>"}',
				context: "monitoring"
			},
			hashTypes: {
				variables: "STRING",
				context: "STRING"
			},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<button id="resubscribe-monitor" class="btn btn-primary btn-lg">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "resubscribe_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></div></div><div id="timeout-notification-timer" class="alert alert-block alert-warning text-align-center hidden">');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "inactive_message", {
			name: "I18n",
			hash: {variables: '{"lineStart" : "<p>", "lineEnd" : "<\\/p>"}', context: "monitoring"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<br><button id="continue-monitor" class="btn btn-default"><strong>');
		b.buffer.push(g((c.I18n || a && a.I18n || f).call(a, "continue_subscribing", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</strong>&nbsp;(<span class="timer-update"></span>)</button></div></div>');
		return ""
	}, useData: !0, useDepths: !0
});
Ember.TEMPLATES.setupWizard = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "code"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="language-select" style="width : 100px; display: inline-block; vertical-align : top; margin : 10px 0;"><a href="javascript:void(0);" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "code"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' class="change-language padding-5"><p><span ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":circle flagClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('></span></p><p class="language-text" style="text-transform: capitalize; display: inline-block;">');
		a = c._triageMustache.call(a, "title", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</p></a></li>");
		return ""
	}, 3: function (a, c, d, b) {
		a = c.unless.call(a, "toBeDeleted", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 4: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<section style="padding-right: 15px; position: relative;" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-emailId": "id"},
			hashTypes: {"data-emailId": "STRING"},
			hashContexts: {"data-emailId": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);" class="button-icon icon-append delete-email" data-placement="top" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "delete_option", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a><section class="col col-8"><label class="input"><i class="icon-prepend fa fa-envelope fa-fw"></i>');
		d = c["if"].call(a, "agentEmail", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(5, b),
			inverse: this.program(7, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</label></section><section class="col col-4">');
		b.buffer.push(e((c.GenericSelect || a && a.GenericSelect || f).call(a, {
			name: "GenericSelect",
			hash: {
				selectedValueBinding: "view.roleSelectValue",
				selectClassBinding: "view.roleSelectClass",
				optionsBinding: "view.roleSelectOptions",
				labelBinding: "view.roleSelectLabel"
			},
			hashTypes: {
				selectedValueBinding: "STRING",
				selectClassBinding: "STRING",
				optionsBinding: "STRING",
				labelBinding: "STRING"
			},
			hashContexts: {selectedValueBinding: a, selectClassBinding: a, optionsBinding: a, labelBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><div class="clearfix"></div></section>');
		return ""
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<input class="agent-email email" type="text" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email_placeholder", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "id"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {id: "id"}, hashTypes: {id: "STRING"}, hashContexts: {id: a},
			types: [], contexts: [], data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "agentEmail"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" readonly disabled />");
		return ""
	}, 7: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<input class="agent-email email" type="text" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email_placeholder", {
			name: "I18n", hash: {context: "wizard"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "id"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "agentEmail"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" />");
		return ""
	}, 9: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "value"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-link": "link"}, hashTypes: {"data-link": "STRING"},
			hashContexts: {"data-link": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {selected: "selected"},
			hashTypes: {selected: "STRING"},
			hashContexts: {selected: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "text", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 11: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">$ ");
		a = c._triageMustache.call(a, "pricePretify", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 13: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<div class="row"><section class="col col-4"><label class="label text-right" style="margin-top:4px"> ');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "payment_method", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section><section class="col col-8"><label class="select"><select id="payment-method"><option value="pp">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "paypal", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="cc">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "credit_card", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option></select><i></i></label></section></div>");
		return ""
	}, 15: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="select"><select id="card-selection"><option value="new-card">');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "add_card", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		a = c.each.call(a, "Tawk.userController.existingCards", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</select><i></i></label><br />");
		return ""
	}, 16: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "customerId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {selected: "selected"},
			hashTypes: {selected: "STRING"},
			hashContexts: {selected: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c._triageMustache.call(a, "cardBrand", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push(" x-");
		d = c._triageMustache.call(a, "cardNumber", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</option>");
		return ""
	}, 18: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<a ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {href: "activeAddOn.settings.widget.url"},
			hashTypes: {href: "STRING"},
			hashContexts: {href: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' target="_blank" style="text-decoration: none; color: inherit;"><span>');
		b.buffer.push(d(c._triageMustache.call(a, "view.parsedWidgetFooterTitle", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></a>");
		return ""
	}, 20: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<span>");
		b.buffer.push(d(c._triageMustache.call(a, "view.parsedWidgetFooterTitle", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="property-form"><div id="close-button-container"><h3 id="wizard-intro" style="margin : 0;"></h3><div class="form-bootstrapWizard"><ul class="bootstrapWizard form-wizard"><li class="active" data-target="#step1"><a class="change-tab" href="#tab1" data-toggle="tab"><span class="step">1</span> <span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "language_selection", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li data-target="#step2"><a class="change-tab" href="#tab2" data-toggle="tab"><span class="step">2</span> <span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_info", {
			name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</span></a></li><li data-target="#step3"><a class="change-tab" href="#tab3" data-toggle="tab"><span class="step">3</span> <span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "team_members", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li data-target="#step4"><a class="change-tab" href="#tab4" data-toggle="tab"><span class="step">4</span> <span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "install_widget", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li data-target="#step5"><a class="change-tab" href="#tab5" data-toggle="tab"><span class="step">5</span> <span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_main_title", {
			name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</span></a></li></ul><div class="clearfix"></div></div></div><div id="content-container" style="top : 90px;"><div id="wizard" style="position: absolute;top: 0; bottom: 60px;height: auto;overflow: auto; text-align: center;"><div class="tab-content" style="max-width : 900px; margin : 0 auto; width : 100%; height : 100%"><div class="tab-pane active" id="tab1"><h3><strong>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "language_selection", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</strong></h3><h5>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "language_selection_2", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5><div id="language-selection-container"><ul style="list-style: none; margin : 10px;">');
		d = c.each.call(a, "view.enabledLanguages",
			{
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</ul></div></div><div class="tab-pane" id="tab2"><h3><strong>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_info", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</strong></h3><h5>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"site_info_2", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</h5><br /><form id="wizard-site-form" class="smart-form" style="max-width: 500px; margin : 0px auto;"><fieldset><div><section><label class="wizard-label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><i class="icon-prepend fa fa-home fa-fw"></i><input class="required" type="text" id="site-name" name="site-name" maxlength="75" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "decodedSiteName"}, hashTypes: {value: "STRING"},
			hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' /></label></section></div><div><section><label class="wizard-label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><i class="icon-prepend fa fa-link fa-fw"></i><input class="url_prefix" type="text" id="site-domain" name="site-domain" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url_placeholder", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "site.propertyUrl"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section></div></fieldset></form></div><div class="tab-pane" id="tab3"><h3>');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "team_members", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h3><h5>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent_intro", {
			name: "I18n",
			hash: {
				variables: '{"lineBreak" : "<br />" , "strongStart" : "<strong>" , "strongEnd" : "</strong>"}',
				context: "wizard"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5><br /><form id="wizard-agent-form" class="smart-form" style="overflow:auto;"><fieldset><div>');
		d = c.each.call(a, "invitedList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div><section class="text-right"><button type="button" class="btn btn-default"  id="add-another-email">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_another", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></section></div></fieldset></form></div><div class="tab-pane" id="tab4"><h3><strong>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "install_widget", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</strong></h3><h5>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"manual_install", {
				name: "I18n",
				hash: {
					variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u></strong>", "tag" : "<strong>&lt;/body&gt;</strong>"}',
					context: "wizard"
				},
				hashTypes: {variables: "STRING", context: "STRING"},
				hashContexts: {variables: a, context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</h5><div class="smart-form"><div style="margin : 10px 0"><div style="float : left; width : 48%; margin : 0 2% 0 0; text-align : center;"><div style="position:relative;height:0;padding-bottom:56.21%"><iframe src="https://www.youtube.com/embed/bHvEqNIW9sE?ecver=2" style="position:absolute;width:100%;height:100%;left:0" width="641" height="360" frameborder="0" allowfullscreen></iframe></div><br /><button id="email-instructions" class="btn txt-color-white" style="background: #999;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_developer", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><div class="clearfix"></div><br /><div class="hidden" id="email-container"><form id="wizard-email-instructions-form"><label class="textarea"><textarea id="emails" name="emails" class="emails" rows="2"></textarea><span class="note">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_info",
			{
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</span></label><div style="text-align: right; padding: 10px 0;"><button id="cancel-email" type="button" class="btn btn-default" style="margin-right : 5px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="send-email" type="button" class="btn btn-primary">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "send", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></div></form></div></div><div style="float : left; width : 48%; margin : 0 0 0 2%"><label class="textarea">');
		b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {valueBinding: "widgetCode", readonly: "true", rows: "7", id: "widget-code"},
			hashTypes: {
				valueBinding: "STRING", readonly: "STRING",
				rows: "STRING", id: "STRING"
			},
			hashContexts: {valueBinding: a, readonly: a, rows: a, id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label><div id="download-plugin-container" style="margin: inherit;"><br /><hr /><br /><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "plugin_install", {
			name: "I18n",
			hash: {
				variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u></strong>"}',
				context: "wizard"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><br /><section><label class="select" style="position: absolute;left: 0; right: 40px;"><i></i><select id="cms-change">');
		d = c.each.call(a, "view.cmsLinks", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select></label><a id="download-link" href="#" target="_blank" class="btn btn-info pull-right"><i class="fa fa-download"></i></a><div class="clearfix"></div></section><div class="clearfix"></div></div></div><div class="clearfix"></div></div></div></div><div class="tab-pane" id="tab5"><h3>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_main_title", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h3><h5 class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_info_1", {
			name: "I18n",
			hash: {variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>"}', context: "wizard"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5><h5 class="text-center">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "rebrand_info_2", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5><br /><div class="smart-form"><div style="float : left; width : 100%;"><div style="margin-right : 350px; position: relative;"><div id="min-whitelabel-settings"><form id="whitelabel-settings" name="whitelabel-settings"><div class="form-table" style="width: 100%;table-layout: fixed;"><div><div style="margin : 0; "><h5>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "widget_footer_branding", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5><div class="edit-container" ><div><table class="table no-border branding-settings"><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "title", {
			name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-label" type="text" class="input-text" placeholder="Enter branding text" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.widget.label"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label><p class="font-xs pull-left" style="opacity: 0.6;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "format_eg", {
			name: "I18n",
			hash: {
				variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
				context: "wizard"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_url",
			{
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="widget-url" type="text" class="input-text url" placeholder="Enter branding link url" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "activeAddOn.settings.widget.url"}, hashTypes: {value: "STRING"},
			hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' /></label></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "color", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td><label class="input"><input type="text" id="widget-text-color" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "activeAddOn.settings.widget.textColor"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('/></label></td></tr></table></div></div><div class="clearfix"></div></div><div style="margin : 20px 0;"><h5>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_footer_branding", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5><div><div class="edit-container"><table class="table no-border branding-settings"><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "title", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-label" type="text" class="input-text" placeholder="Enter branding text" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "activeAddOn.settings.email.label"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push('/></label><p class="font-xs pull-left" style="opacity: 0.6;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "format_eg", {
			name: "I18n",
			hash: {
				variables: '{"strongStart" : "<strong>", "strongEnd" : "</strong>", "italicStart" : "<i>", "italicEnd" : "</i>"}',
				context: "wizard"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></td></tr><tr><td style="padding-left : 0; vertical-align : middle;"><label class="label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "link_url", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></td><td><label class="input"><a class="icon-append fa fa-close clear-input" style="color: red;" href="javascript:void(0);"></a><input id="email-url" type="text" class="input-text url" placeholder="Enter branding link url" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "activeAddOn.settings.email.url"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' /></label></td></tr></table></div></div><div class="clearfix"></div></div></div></div></form></div><div id="payment-container" class="hidden"><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.paymentSuccess:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><form id="whitelabel-payment" name="whitelabel-payment"><fieldset style="background: inherit;"><div class="row"><section class="col col-4"><label class="label text-right" style="margin-top:4px">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "select_package", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section><section class="col col-8"><label class="select"><select id="plan">');
		d = c.each.call(a, "activeAddOn.plans", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</select><i></i></label></section></div>");
		d = c["if"].call(a, "canUsePaypal", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="card-details" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "canUsePaypal:hidden :row"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><section class="col col-4"><label class="label text-right"  style="margin-top:4px">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "payment_details", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label></section><section class="col col-8">');
		d = c["if"].call(a, "Tawk.userController.existingCards.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<div id="new-card-details" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "Tawk.userController.existingCards.length:hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><section><label class="input"><i class="icon-prepend fa fa-user" style="z-index:1;"></i><input id="cardholder-name" name="cardholder-name" type="text" class="input required" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "name_on_card_placeholder", {
			name: "I18n", hash: {context: "wizard"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('" /></label></section><section><label class="input"><i class="icon-prepend fa fa-credit-card" style="z-index:1;"></i><i class="card-type icon-append"></i><input id="card-number" name="card-number" type="text" class="input required ccNumber" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "card_number_placeholder", {
			name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('" /></label></section><div class="row"><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-calendar" style="z-index:1;"></i><input id="card-expiry" name="card-expiry" type="text" class="input required ccExpiryFormat ccExpiryDate" placeholder="MM/YY" /></label></section><section class="col col-6"><label class="input"><i class="icon-prepend fa fa-lock" style="z-index:1;"></i><input id="card-cvc" name="card-cvc" type="text" class="input required digits cvcCheck" placeholder="CVV" minlength="3" maxlength="4" /></label></section></div><section><label class="input"><i class="icon-prepend fa fa-map-marker" style="z-index:1;"></i><input id="zip-code" name="zip-code" type="text" class="input required" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "zip_code_placeholder", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" /></label></section></div></section></div><div class="row"><section class="col col-4"></section><section class="col col-8" style="margin-top : -15px;"><p id="total-price" style="font-size : 14px; text-align : center; margin : 0;"></p></section><div></fieldset></form></div><div id="addon-settings-button-container" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.paymentSuccess::hidden :text-center"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' style="padding: 20px 15px;"><div><div id="success-check-container"><i class="fa fa-check"></i></div><h1 style="color: #71a06a; font-weight: 500;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "thank_you", {
			name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</h1><h5 style="color: #71a06a; font-weight: 500;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "purchase_success", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h5><p style="margin : 30px 0;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "advanced_whitelabel_settings", {
			name: "I18n", hash: {context: "wizard"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["STRING"], contexts: [a], data: b
		})));
		b.buffer.push('</p></div></div></div></div></div><div style="float: left; width : 320px; margin: 20px 0;position: relative;  margin-left : -320px; height : 335px; margin-top : -1px"><div style="left: 0;right: 0;width: auto;max-width: 400px;position: absolute;top: 0;bottom: 0;padding: 0 15px;"><div id="widget-max-preview-container" style="top : 0;"><div id="border-wrapper"></div><div class="inner-preview-container"><div class="header-container" style="background-color: rgb(221, 221, 221); color: rgb(72, 178, 75);"><div id="header-wrapper"><div class="headerBoxControlsContainer black"><div class="end-chat pull-right"></div><div class="popout pull-right"></div><div class="minimize pull-right"></div></div><div class="headerAccountStateContainer"><p class="headerAccountState">Online</p></div></div></div><div id="widget-chat-container"><div id="chat-container-wrapper"><div id="greetingsOverlay"><div id="greetingsWrapper"><div id="greetingsContainer"><div id="embedArrow" class="widget-greetings-arrow"></div></div></div></div></div><div id="bottom-container"><div id="actionsContainer"><div id="action-message">Type here and press enter...</div><div id="ratingContainer"></div><div id="footer-container"><div id="options" style="height: 32px; margin-left: 84px;"><div id="openMenu" style="position: absolute; left: 3px; bottom: 0; background:url(https://static-a.tawk.to/v2/a34/images/widget-menu.png); height : 29px; width : 80px;"></div></div><div style="position: absolute; bottom: 0; right: 6px; left: 86px; text-align: right; height: 30px; line-height: 30px; color: inherit; font-size: 13px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; padding-right : 3px; font-weight : normal;">');
		d = c["if"].call(a, "activeAddOn.settings.widget.url", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.program(20, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div></div></div></div></div></div></div></div><div class="clearfix"></div></div></div></div></div><footer id="button-container" class="hidden"><button id="wizard-done" class="btn btn-primary hidden pull-right margin-right-5">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"done", {
				name: "I18n",
				hash: {context: "wizard"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</button><button id="next-step" class="btn btn-primary pull-right margin-right-5">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "next_text", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="previous-step" class="btn btn-default hidden pull-left margin-right-5">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "previous_text", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="cancel-activate" class="btn btn-default pull-left margin-right-5 hidden">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="activate" class="btn btn-primary pull-right margin-right-5 hidden">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "activate_now", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="skip-step" class="btn btn-warning pull-right hidden margin-right-5"><span class="small">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "skip", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></button><button id="setup-later" class="btn btn-warning pull-right margin-right-5"><span class="small">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "setup_later", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</span></button></footer></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.propertySelect = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<span class="modal-title-tawk">Select Property & Widget</span>')
	},
	3: function (a, c, d, b) {
		b.buffer.push('<span class="modal-title-tawk">Select Property</span>')
	}, 5: function (a, c, d, b) {
		a = c["if"].call(a, "siteList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 6: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n", hash: {context: "sites"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a, "siteList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "id"}, hashTypes: {value: "STRING"}, hashContexts: {value: a},
			types: [], contexts: [], data: b
		})));
		b.buffer.push(' data-type="site">');
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 9: function (a, c, d, b) {
		a = c["if"].call(a, "pageList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(10, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 10: function (a, c, d,
	                 b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a, "pageList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	},
	11: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-type="page">');
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title">');
		d = c["if"].call(a, "requestWidget", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</h4></div><div class="modal-body" style="overflow:auto;"><div class="smart-form"><section><label class="label">Property</label><label class="select"><select id="property-path-select">');
		d = c.unless.call(a, "view.hideSiteList", {
			name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(5, b),
			inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "view.showPageList", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></section><section class="hidden" id="widget-selection-container"><label class="label">Widget</label><label class="select"><select id="widget-path-select">');
		d = c.each.call(a, "view.widgetList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(13, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></section></div></div><div class="modal-footer"><button id="select" type="button" class="btn btn-primary">Select</button></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.reportingMain = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n ||
			a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a, "siteList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 2: function (a, c, d, b) {
		a = c["if"].call(a, "enabled", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(3,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-type="site">');
		b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<optgroup label="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "view_title", {
			name: "I18n",
			hash: {context: "pages"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('">');
		a = c.each.call(a, "pageList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</optgroup>");
		return ""
	}, 6: function (a, c, d, b) {
		a = c["if"].call(a, "enabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' data-type="page">');
		b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 9: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 11: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id", "class": "enabled::hidden"},
			hashTypes: {value: "STRING", "class": "STRING"},
			hashContexts: {value: a, "class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "text", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 13: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "this"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {}, hashTypes: {}, hashContexts: {}, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, 15: function (a, c, d, b) {
		b.buffer.push('<h1 class="text-center"><i class="fa fa-exclamation txt-color-red"></i> Unable to load graph</h1>')
	}, 17: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<th class="text-center">');
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</th>");
		return ""
	}, 19: function (a, c, d, b) {
		b.buffer.push("<tr>");
		a = c.each.call(a, "", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</tr>");
		return ""
	}, 20: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<td>");
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache", hash: {unescaped: "true"}, hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push("</td>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"><h1 class="page-title txt-color-blueDark"><i class="fa fa-bar-chart"></i> ');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
			name: "I18n", hash: {context: "reporting"}, hashTypes: {context: "STRING"},
			hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</h1></div><div class="clearfix"></div></div><div class="innerContent"><div id="sidebar-navigation" class="smart-form"><label class="select"><select id="property-select">');
		d = c["if"].call(a, "siteList.length", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c["if"].call(a, "pageList.length", {
			name: "if", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(5, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label><div id="view-select-container"><h4><strong>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "chats", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</strong></h4><ul><li class="select-graph active" id="chat-volume">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a,
			"chat_volume", {
				name: "I18n",
				hash: {context: "reporting"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('</li><li class="select-graph" id="missed-chat-volume">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "missed_and_offline", {
			name: "I18n",
			hash: {context: "analytics"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="select-graph" id="chat-duration">');
		b.buffer.push(f((c.I18n ||
			a && a.I18n || e).call(a, "average_chat_duration", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="select-graph" id="chat-satisfaction">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "user_satisfaction", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="select-graph" id="chat-wait-time">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "first_response_time", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</li></ul><h4><strong>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tickets", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</strong></h4><ul><li class="select-graph" id="ticket-volume">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "volume_new_tickets", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="select-graph" id="solved-tickets">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "solved_tickets", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="select-graph" id="ticket-source">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_source", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="select-graph" id="ticket-resolution-time">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "resolution_time", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="select-graph" id="ticket-reopened">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "ticket_reopened", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li><li class="select-graph" id="ticket-first-time-response">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "first_response_time", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</li></ul></div></div><div id="graph-display-container"><div id="filter-container" class="smart-form padding-10"><button id="openFilter" type="button" class="btn btn-default pull-right" data-toggle="dropdown"><i class="fa fa-filter"></i> Filter <span class="caret"></span></button><div class="dropdown-menu pull-right smart-form" role="menu" id="analytics-filter"><form><fieldset><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "agents", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><select id="agent-id" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "isSelectAgentDisabled", "class": "isSelectAgentDisabled:disabled"},
			hashTypes: {disabled: "STRING", "class": "STRING"},
			hashContexts: {disabled: a, "class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><option value="0">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		d = c.each.call(a, "propertyAgents", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "departments", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><select id="department-id"><option value="0">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		d = c.each.call(a,
			"propertyDepartments", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(9, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "time_frames", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><select id="time-frame"><option value="custom">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "custom", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="day">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "day", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="week">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "week", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="month">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "month", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="7days">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_7", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</option><option value="30days">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "last_30", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option></select><i></i></label></section><section ");
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":col :col-6 :time-frame-tool-container showFrameTimeTool::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "time_frame_tool_selection", {
			name: "I18n",
			hash: {context: "reporting"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><div id="prev"><i class="fa fa-chevron-left" aria-hidden="true"></i></div><div id="next"><i class="fa fa-chevron-right" aria-hidden="true"></i></div><div ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":time-frame-list-container showMonthSelector::hidden"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><label class="select"><select id="time-frame-data-list">');
		d = c.each.call(a, "timeFrameDataList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(11, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></div></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">From</label><label class="input"><input type="text" id="analytics-from" /></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">To</label><label class="input"><input type="text" id="analytics-to" /></label></section><section class="col col-6"><label style="font-size: 10px; color: #aaa; text-transform: uppercase;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "tags_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="select"><select id="tag-id"><option value="0">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		d = c.each.call(a,
			"propertyTags", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(13, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</select><i></i></label></section></fieldset></form><footer><button type="submit" class="btn btn-primary search" id="applyFilter">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "filter_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-default" id="resetFilter">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "reset", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="submit" class="btn btn-default" id="closeFilter">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
			name: "I18n", hash: {context: "buttons"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</button></footer></div><div class="clearfix"></div></div><div id="display-container">');
		d = c["if"].call(a, "currentAnalyticsError", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(15, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("<div ");
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isLoading:visibilityHidden currentAnalyticsError:hidden :inner-container"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><div class='yaxisLabel'><div style=\"padding : 0 5px; font-size : 18px;\">");
		d = c._triageMustache.call(a, "graphData.label", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></div><div id="graph-container"></div><div id="table-container"><table class="table table-striped table-hover dataTable no-footer"><thead><tr role="row">');
		d = c.each.call(a,
			"tableData.header", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(17, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push("</tr></thead><tbody>");
		d = c.each.call(a, "tableData.values", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table></div></div></div></div><div id="list-loading" ');
		b.buffer.push(f(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "isLoading::hidden"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><h5><i class="fa fa-refresh fa-spin"></i></h5></div></div></div>');
		return ""
	}, useData: !0
});
Ember.TEMPLATES.headerScheduledProperties = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		b.buffer.push('<li class="client-property">');
		a = c["if"].call(a, "isEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</li>");
		return ""
	}, 2: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push("<div ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "toBeAnswered::not-scheduled :padding-5 :smart-form"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><div><label class="label inline-label" style="display: inline-block;margin: 0;vertical-align: middle;width: 230px;white-space: pre-line;word-wrap: break-word;">');
		b.buffer.push(d(c._triageMustache.call(a, "property.propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><div class="inline-group" style="display: inline-block;margin: 0;width: 140px;vertical-align: middle;"><label class="checkbox" style="margin-left : 0"><input type="checkbox" class="notification-status" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-id": "property.id"},
			hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "autoSchedule"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('value="auto" /><i></i>Auto</label><label class="toggle" style="margin-left : 0"><input type="checkbox" class="property-status" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"data-id": "property.id"},
			hashTypes: {"data-id": "STRING"}, hashContexts: {"data-id": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "autoSchedule"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "toBeAnswered"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /><i data-swchon-text="');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "yes", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "no", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i></label></div></div><small><i>');
		a = c["if"].call(a, "hasExpired", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</i></small></div>");
		return ""
	}, 3: function (a, c, d, b) {
		b.buffer.push("Subscription has expired")
	}, 5: function (a, c, d, b) {
		a = c["if"].call(a, "noSchedule", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.program(8, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 6: function (a, c, d, b) {
		b.buffer.push("No schedule set")
	},
	8: function (a, c, d, b) {
		a = c.unless.call(a, "toBeAnswered", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(9, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 9: function (a, c, d, b) {
		b.buffer.push("Not scheduled to be answered")
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = this.escapeExpression;
		var e = c.helperMissing;
		b.buffer.push('<a href="javascript:void(0);">Client Properties</a><ul id="client-properties-container" ');
		b.buffer.push(d(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": ":dropdown-menu isGlobalEnabled::not-scheduled"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push('><li class="padding-10"><div class="smart-form"><label class="toggle" style="margin-right: 24px; font-size : 13px;"><input type="checkbox" id="global-answer-status" name="global-answer-status" ');
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {checked: "isGlobalEnabled"},
			hashTypes: {checked: "STRING"},
			hashContexts: {checked: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /><i data-swchon-text="');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "yes", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" data-swchoff-text="');
		b.buffer.push(d((c.I18n || a && a.I18n || e).call(a, "no", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"></i>Receive chat notification for all client properties</label></div></li><li class="divider"></li>');
		a = c.each.call(a, "propertiesSchedule", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</ul>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.schedulesProperties = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "propertyId"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 3: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<tr><th class="text-center">');
		d = c._triageMustache.call(a, "label", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</th><td ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "data.0.length::not-scheduled-day"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><ul>");
		d = c.each.call(a, "data.0", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["STRING"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></td><td ");
		b.buffer.push(e(c["bind-attr"].call(a,
			{
				name: "bind-attr",
				hash: {"class": "data.1.length::not-scheduled-day"},
				hashTypes: {"class": "STRING"},
				hashContexts: {"class": a},
				types: [],
				contexts: [],
				data: b
			})));
		b.buffer.push("><ul>");
		d = c.each.call(a, "data.1", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["STRING"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></td><td ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {"class": "data.2.length::not-scheduled-day"}, hashTypes: {"class": "STRING"},
			hashContexts: {"class": a}, types: [], contexts: [], data: b
		})));
		b.buffer.push("><ul>");
		d = c.each.call(a, "data.2", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["STRING"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></td><td ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "data.3.length::not-scheduled-day"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><ul>");
		d = c.each.call(a, "data.3", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["STRING"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></td><td ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "data.4.length::not-scheduled-day"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><ul>");
		d = c.each.call(a, "data.4", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(4, b), inverse: this.noop, types: ["STRING"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></td><td ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "data.5.length::not-scheduled-day"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><ul>");
		d = c.each.call(a, "data.5", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["STRING"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></td><td ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "data.6.length::not-scheduled-day"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><ul>");
		d = c.each.call(a, "data.6", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(4, b),
			inverse: this.noop,
			types: ["STRING"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</ul></td></tr>");
		return ""
	}, 4: function (a,
	                c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<li>");
		b.buffer.push(d(c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</li>");
		return ""
	}, 6: function (a, c, d, b) {
		a = c["if"].call(a, "isSelected", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 7: function (a,
	                c, d, b) {
		d = this.escapeExpression;
		b.buffer.push('<table class="table schedule-table"><tbody><tr><th class="data-label">Property</th><td class="data-answer">');
		b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</td></tr><tr><th class="data-label">Status</th><td class="data-answer">');
		d = c["if"].call(a, "isEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(8, b),
			inverse: this.program(10, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><th class="data-label">Timezone</th><td class="data-answer">');
		d = c["if"].call(a, "timezone", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(12, b),
			inverse: this.program(14, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><th class="data-label">Property Local Time</th><td class="data-answer"><span style="vertical-align: middle">');
		d = c._triageMustache.call(a, "propertyTime", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</span>");
		d = c["if"].call(a, "timezone", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(16, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><th class="data-label">Property Local Day</th><td class="data-answer">');
		d = c._triageMustache.call(a, "propertyDay",
			{
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><th class="data-label">Hours Purchased</th><td class="data-answer">');
		d = c._triageMustache.call(a, "purchasedHours", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</td></tr><tr><th class="data-label">Property Local Schedule</th>');
		d = c["if"].call(a, "schedule", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(18, b),
			inverse: this.program(22, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</tr></tbody></table>");
		return ""
	}, 8: function (a, c, d, b) {
		b.buffer.push("Enabled")
	}, 10: function (a, c, d, b) {
		b.buffer.push("Disabled")
	}, 12: function (a, c, d, b) {
		a = c._triageMustache.call(a, "formattedTimezone", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 14: function (a,
	                 c, d, b) {
		b.buffer.push("Not Set")
	}, 16: function (a, c, d, b) {
		b.buffer.push('<button class="btn btn-xs btn-default refresh-property-time" style="margin : 0 3px;"><i class="fa fa-refresh"></i></button>')
	}, 18: function (a, c, d, b) {
		b.buffer.push('<td class="data-answer"><table class="table table-striped" style="max-width : 400px;"><tbody>');
		a = c.each.call(a, "schedule", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(19, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</tbody></table></td>");
		return ""
	}, 19: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<tr ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "isSelected:scheduled-day"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push("><th>");
		d = c._triageMustache.call(a, "dayName", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</th><td>");
		d = c.each.call(a, "slots", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(20, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</td></tr>");
		return ""
	}, 20: function (a, c, d, b) {
		a = c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("<br />");
		return ""
	}, 22: function (a, c, d, b) {
		a = c["if"].call(a, "isFullTime", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(23, b),
			inverse: this.program(25, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 23: function (a, c, d, b) {
		b.buffer.push('<td class="data-answer">24/7</td>')
	}, 25: function (a, c, d, b) {
		b.buffer.push('<td class="data-answer">Not Set</td>')
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = this.escapeExpression;
		b.buffer.push('<div class="content"><div class="row view-header"><div class="col-xs-6 col-sm-4 col-md-4 col-lg-4"><h1 class="page-title txt-color-blueDark"><i class="fa fa-calendar"></i> Live Answering Schedule</h1></div><div id="filter-property-container" class="col-xs-4 col-sm-4 col-md-4 col-lg-4 pull-right" style="margin-top: -3px; margin-right: 15px;"><div class="smart-form"><label class="select"><select id="schedule-property-select"><optgroup label="By Property"><option value="0">All Properties</option>');
		d = c.each.call(a, "view.prettifiedSchedule", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</optgroup><optgroup label="By Plan"><option value="247">24/7 Properties</option><option value="not-fulltime">Part time Properties</option></optgroup><option value="mine">My Schedule</option></select><i></i></label></div></div><div class="clearfix"></div></div><div class="innerContent" style="background : #fff;"><table id="my-schedule" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": ":table :table-bordered :hidden view.todayHighlight"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><thead><tr><th></th><th class="text-center">Sunday</th><th class="text-center">Monday</th><th class="text-center">Tuesday</th><th class="text-center">Wednesday</th><th class="text-center">Thursday</th><th class="text-center">Friday</th><th class="text-center">Saturday</th></tr></thead><tbody>');
		d = c.each.call(a, "view.mySchedule", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</tbody></table><div id="properties-schedule">');
		d = c.each.call(a, "view.prettifiedSchedule", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(6, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</div></div></div>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.webPropertySelect =
	Ember.Handlebars.template({
		1: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})))
		}, 3: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<select id="property-id" disabled>');
			d = c.unless.call(a, "view.noAll", {
				name: "unless", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(4, b),
				inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.extra", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<optgroup label="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "sites"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			d = c.each.call(a,
				"view.sites", {
					name: "each",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(8, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			b.buffer.push('</optgroup><optgroup label="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			d = c.each.call(a, "view.pages", {
				name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(8,
					b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</optgroup></select>");
			return ""
		}, 4: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push('<option value="0" selected>');
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 6: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a, {
				name: "bind-attr",
				hash: {value: "view.extra.value"},
				hashTypes: {value: "STRING"},
				hashContexts: {value: a},
				types: [],
				contexts: [],
				data: b
			})));
			b.buffer.push(">");
			a = c._triageMustache.call(a, "view.extra.text", {
				name: "_triageMustache",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != a && b.buffer.push(a);
			b.buffer.push("</option>");
			return ""
		}, 8: function (a, c, d, b) {
			d = this.escapeExpression;
			b.buffer.push("<option ");
			b.buffer.push(d(c["bind-attr"].call(a,
				{
					name: "bind-attr",
					hash: {value: "id"},
					hashTypes: {value: "STRING"},
					hashContexts: {value: a},
					types: [],
					contexts: [],
					data: b
				})));
			b.buffer.push(">");
			b.buffer.push(d(c._triageMustache.call(a, "propertyName", {
				name: "_triageMustache",
				hash: {unescaped: "true"},
				hashTypes: {unescaped: "STRING"},
				hashContexts: {unescaped: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push("</option>");
			return ""
		}, 10: function (a, c, d, b) {
			var e = c.helperMissing, f = this.escapeExpression;
			b.buffer.push('<select id="property-id">');
			d = c.unless.call(a,
				"view.noAll", {
					name: "unless",
					hash: {},
					hashTypes: {},
					hashContexts: {},
					fn: this.program(4, b),
					inverse: this.noop,
					types: ["ID"],
					contexts: [a],
					data: b
				});
			null != d && b.buffer.push(d);
			d = c["if"].call(a, "view.extra", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(6, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('<optgroup label="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"},
				hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
			})));
			b.buffer.push('">');
			d = c.each.call(a, "view.sites", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push('</optgroup><optgroup label="');
			b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "view_title", {
				name: "I18n",
				hash: {context: "pages"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push('">');
			d = c.each.call(a, "view.pages", {
				name: "each",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(8, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</optgroup></select>");
			return ""
		}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
			d = c.helperMissing;
			var e = this.escapeExpression;
			b.buffer.push("<div><p>");
			b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "site_page", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
			b.buffer.push(' : <span class="selected-value">');
			d = c.unless.call(a, "view.noAll", {
				name: "unless",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(1, b),
				inverse: this.noop,
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			b.buffer.push("</span></p></div><i></i>");
			d = c["if"].call(a, "view.readonly", {
				name: "if",
				hash: {},
				hashTypes: {},
				hashContexts: {},
				fn: this.program(3, b),
				inverse: this.program(10, b),
				types: ["ID"],
				contexts: [a],
				data: b
			});
			null != d && b.buffer.push(d);
			return ""
		}, useData: !0
	});
Ember.TEMPLATES.agentSelect = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "id"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		b.buffer.push(d(c._triageMustache.call(a, "name", {
			name: "_triageMustache",
			hash: {unescaped: "true"},
			hashTypes: {unescaped: "STRING"},
			hashContexts: {unescaped: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<div><p>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "agent", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push(' : <span class="selected-value">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
			name: "I18n", hash: {context: "generic"},
			hashTypes: {context: "STRING"}, hashContexts: {context: a}, types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</span></p></div><i></i><select id="agent-id"><option value="0">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		a = c.each.call(a, "Tawk.agentsController.agentDropDownList", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {}, fn: this.program(1,
				b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</select>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.countrySelect = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})))
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<option value="0">');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "all_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</option>");
		return ""
	}, 5: function (a, c, d, b) {
		b.buffer.push("<option></option>")
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "id"}, hashTypes: {value: "STRING"}, hashContexts: {value: a},
			types: [], contexts: [], data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "value", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push("<div><p>");
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "country", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push(' :&nbsp;<span class="selected-value">');
		d = c.unless.call(a, "view.noAll", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</span></p></div><i></i><select class="country-select">');
		d = c.unless.call(a, "view.noAll", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		d = c.each.call(a, "view.list", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(7, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</select>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.genericSelect = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		a = c._triageMustache.call(a, "", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("&nbsp;:&nbsp;");
		return ""
	}, 3: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "value"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "text", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d,
	                                                     b) {
		var e = this.escapeExpression;
		b.buffer.push("<div><p>");
		d = c["with"].call(a, "view.label", {
			name: "with",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('<span class="selected-value"></span></p></div><i></i><select ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"class": "view.selectClass"},
			hashTypes: {"class": "STRING"},
			hashContexts: {"class": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {disabled: "view.readonly"},
			hashTypes: {disabled: "STRING"},
			hashContexts: {disabled: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		d = c.each.call(a, "view.options", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push("</select>");
		return ""
	}, useData: !0
});
Ember.TEMPLATES.soundSettings = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		d =
			c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="radio"><input type="radio" id="status-enabled" name="sound-status" checked="checked" /><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="radio"><input type="radio" name="sound-status" /><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
			"disabled_text", {
				name: "I18n",
				hash: {context: "generic"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push("</label>");
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<label class="radio"><input type="radio" id="status-enabled" name="sound-status" /><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "enabled_text", {
			name: "I18n", hash: {context: "generic"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label class="radio"><input type="radio" name="sound-status" checked="checked" /><i></i>');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "disabled_text", {
			name: "I18n",
			hash: {context: "generic"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</label>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><div><h4 class="modal-title" id="myModalLabel"><i class="fa fa-volume-up" alt="test"></i><span class="modal-title-tawk">&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "manage_sounds", {
			name: "I18n",
			hash: {context: "header"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></h4></div></div><div class="modal-body"><form id="sound-settings-form" name="sound-settings-form" class="smart-form"><div class="row"><section class="col"><label class="label pull-left" for="sound-status"  style="line-height: 25px;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "sound_status",
			{
				name: "I18n",
				hash: {context: "sound_settings"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["ID"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('&nbsp;:&nbsp;</label><div class="inline-group pull-left" style="margin : 0 0 0 5px;">');
		d = c["if"].call(a, "view.soundNotificationIsEnabled", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.program(3, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div></section></div><div class="row"><section class="col col-4" data-event-name="icr">');
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.newChatSelectClass",
				selectedValueBinding: "view.newChatSound",
				optionsBinding: "view.soundOptions",
				labelBinding: "view.newChatLabel"
			},
			hashTypes: {
				selectClassBinding: "STRING",
				selectedValueBinding: "STRING",
				optionsBinding: "STRING",
				labelBinding: "STRING"
			},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section class="col col-8" id="icr-control"><i class="fa fa-volume-off  pull-left"></i><div data-event-name="icr" id="icr-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i><div class="pull-left">');
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.repeatSelectClass",
				selectedValueBinding: "view.newChatRepeat",
				optionsBinding: "view.repeatOptions",
				labelBinding: "view.repeatLabel"
			},
			hashTypes: {
				selectClassBinding: "STRING",
				selectedValueBinding: "STRING",
				optionsBinding: "STRING",
				labelBinding: "STRING"
			},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</div><div class="clearfix"></div></section></div><div class="row"><section class="col col-4" data-event-name="iv">');
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.newVisitorSelectClass",
				selectedValueBinding: "view.newVisitorSound",
				optionsBinding: "view.soundOptions",
				labelBinding: "view.newVisitorLabel"
			},
			hashTypes: {
				selectClassBinding: "STRING",
				selectedValueBinding: "STRING",
				optionsBinding: "STRING",
				labelBinding: "STRING"
			},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section class="col col-8" id="iv-control"><i class="fa fa-volume-off pull-left"></i><div data-event-name="iv" id="iv-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i></section></div><div class="row"><section class="col col-4" data-event-name="im">');
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.newMessageSelectClass",
				selectedValueBinding: "view.newMessageSound",
				optionsBinding: "view.soundOptions",
				labelBinding: "view.newMessageLabel"
			},
			hashTypes: {
				selectClassBinding: "STRING",
				selectedValueBinding: "STRING",
				optionsBinding: "STRING",
				labelBinding: "STRING"
			},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section class="col col-8" id="im-control"><i class="fa fa-volume-off pull-left"></i><div data-event-name="im" id="im-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i></section></div><div class="row"><section class="col col-4" data-event-name="dc">');
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.agentDisconnectSelectClass",
				selectedValueBinding: "view.agentDisconnectSound",
				optionsBinding: "view.soundOptions",
				labelBinding: "view.agentDisconnectLabel"
			},
			hashTypes: {
				selectClassBinding: "STRING",
				selectedValueBinding: "STRING",
				optionsBinding: "STRING",
				labelBinding: "STRING"
			},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section class="col col-8" id="dc-control"><i class="fa fa-volume-off pull-left"></i><div data-event-name="dc" id="dc-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i></section></div><div class="row"><section class="col col-4" data-event-name="acm">');
		b.buffer.push(f((c.GenericSelect || a && a.GenericSelect || e).call(a, {
			name: "GenericSelect",
			hash: {
				selectClassBinding: "view.agentChatSelectClass",
				selectedValueBinding: "view.agentChatSound",
				optionsBinding: "view.soundOptions",
				labelBinding: "view.agentChatLabel"
			},
			hashTypes: {
				selectClassBinding: "STRING",
				selectedValueBinding: "STRING",
				optionsBinding: "STRING",
				labelBinding: "STRING"
			},
			hashContexts: {selectClassBinding: a, selectedValueBinding: a, optionsBinding: a, labelBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><section class="col col-8" id="acm-control"><i class="fa fa-volume-off pull-left"></i><div data-event-name="acm" id="acm-slider" class="volume-slider pull-left"></div><i class="fa fa-volume-up pull-left"></i></section></div></form></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "close", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button type="button" class="btn btn-primary" id="submit">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "save", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</button></div></div></div>");
		return ""
	},
	useData: !0
});
Ember.TEMPLATES.wizard = Ember.Handlebars.template({
	1: function (a, c, d, b) {
		a = c.unless.call(a, "toBeDeleted", {
			name: "unless",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(2, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a ? b.buffer.push(a) : b.buffer.push("")
	}, 2: function (a, c, d, b) {
		var e = this.escapeExpression, f = c.helperMissing;
		b.buffer.push('<section style="padding-right: 15px; position: relative;" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-emailId": "id"},
			hashTypes: {"data-emailId": "STRING"},
			hashContexts: {"data-emailId": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('><a href="javascript:void(0);" class="button-icon icon-append delete-email" data-placement="top" data-original-title="');
		b.buffer.push(e((c.I18n || a && a.I18n || f).call(a, "delete_option", {
			name: "I18n",
			hash: {context: "tooltip"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('"><i class="fa fa-times"></i></a><section class="col col-8"><label class="input"><i class="icon-prepend fa fa-envelope fa-fw"></i>');
		d = c["if"].call(a, "agentEmail", {
			name: "if",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(3, b),
			inverse: this.program(5, b),
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</label></section><section class="col col-4">');
		b.buffer.push(e((c.GenericSelect || a && a.GenericSelect || f).call(a, {
			name: "GenericSelect",
			hash: {
				selectedValueBinding: "view.roleSelectValue",
				selectClassBinding: "view.roleSelectClass",
				optionsBinding: "view.roleSelectOptions",
				labelBinding: "view.roleSelectLabel"
			},
			hashTypes: {
				selectedValueBinding: "STRING",
				selectClassBinding: "STRING",
				optionsBinding: "STRING",
				labelBinding: "STRING"
			},
			hashContexts: {selectedValueBinding: a, selectClassBinding: a, optionsBinding: a, labelBinding: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</section><div class="clearfix"></div></section>');
		return ""
	}, 3: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<input class="agent-email email" type="text" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a,
			"email", {
				name: "I18n",
				hash: {context: "placeholders"},
				hashTypes: {context: "STRING"},
				hashContexts: {context: a},
				types: ["STRING"],
				contexts: [a],
				data: b
			})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "id"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "agentEmail"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" readonly disabled />");
		return ""
	}, 5: function (a, c, d, b) {
		d = c.helperMissing;
		var e = this.escapeExpression;
		b.buffer.push('<input class="agent-email email" type="text" placeholder="');
		b.buffer.push(e((c.I18n || a && a.I18n || d).call(a, "email", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["STRING"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {name: "id"},
			hashTypes: {name: "STRING"},
			hashContexts: {name: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {id: "id"},
			hashTypes: {id: "STRING"},
			hashContexts: {id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(e(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "agentEmail"}, hashTypes: {value: "STRING"},
			hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(" />");
		return ""
	}, 7: function (a, c, d, b) {
		d = this.escapeExpression;
		b.buffer.push("<option ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "value"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(" ");
		b.buffer.push(d(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {"data-link": "link"},
			hashTypes: {"data-link": "STRING"},
			hashContexts: {"data-link": a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(">");
		a = c._triageMustache.call(a, "text", {
			name: "_triageMustache",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != a && b.buffer.push(a);
		b.buffer.push("</option>");
		return ""
	}, compiler: [6, ">= 2.0.0-beta.1"], main: function (a, c, d, b) {
		var e = c.helperMissing, f = this.escapeExpression;
		b.buffer.push('<div class="modal-dialog"><div class="modal-content"><div class="modal-body"><div class="row"><div id="wizard" class="col-sm-12"><div class="form-bootstrapWizard"><ul class="bootstrapWizard form-wizard"><li class="active" data-target="#step1"><a class="change-tab" href="#tab1" data-toggle="tab"><span class="step">1</span> <span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_info", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li data-target="#step2"><a class="change-tab" href="#tab2" data-toggle="tab"><span class="step">2</span> <span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li><li data-target="#step3"><a class="change-tab" href="#tab3" data-toggle="tab"><span class="step">3</span> <span class="title">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "install_widget", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></a></li></ul><div class="clearfix"></div></div><div class="tab-content"><div class="tab-pane active" id="tab1"><br /><h3><strong>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "step1", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</strong> - ");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_info", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h3><div class="row"><div class="col-sm-12 wizard-intro">');
		b.buffer.push(f((c.I18n || a &&
			a.I18n || e).call(a, "intro", {
			name: "I18n",
			hash: {variables: '{"lineBreak" : "<br />"}', context: "wizard"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</div></div><form id="wizard-site-form" class="smart-form"><fieldset><div class="row"><section><label class="wizard-label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
			name: "I18n", hash: {context: "sites"}, hashTypes: {context: "STRING"}, hashContexts: {context: a},
			types: ["ID"], contexts: [a], data: b
		})));
		b.buffer.push('</label><label class="input"><i class="icon-prepend fa fa-home fa-fw"></i><input class="required" type="text" id="site-name" name="site-name" maxlength="75" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_name", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr", hash: {value: "decodedSiteName"},
			hashTypes: {value: "STRING"}, hashContexts: {value: a}, types: [], contexts: [], data: b
		})));
		b.buffer.push(' /></label></section></div><div class="row"><section><label class="wizard-label">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url", {
			name: "I18n",
			hash: {context: "sites"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</label><label class="input"><i class="icon-prepend fa fa-link fa-fw"></i><input class="url_prefix" type="text" id="site-domain" name="site-domain" placeholder="');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "site_url", {
			name: "I18n",
			hash: {context: "placeholders"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('" ');
		b.buffer.push(f(c["bind-attr"].call(a, {
			name: "bind-attr",
			hash: {value: "site.propertyUrl"},
			hashTypes: {value: "STRING"},
			hashContexts: {value: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push(' /></label></section></div></fieldset></form></div><div class="tab-pane" id="tab2"><div class="row"><div id="wizard-agent-intro" class="col-sm-12"><br /><h3><strong>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "step2", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</strong> - ");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</h3><p>");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "invite_agent_intro", {
			name: "I18n",
			hash: {variables: '{"lineBreak" : "<br />"}', context: "wizard"},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p></div></div><form id="wizard-agent-form" class="smart-form"><fieldset><div class="row">');
		d = c.each.call(a, "invitedList", {
			name: "each",
			hash: {},
			hashTypes: {},
			hashContexts: {},
			fn: this.program(1, b),
			inverse: this.noop,
			types: ["ID"],
			contexts: [a],
			data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</div><div class="row"><section class="text-right"><button type="button" class="btn btn-default"  id="add-another-email">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "add_another", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button></section></div></fieldset></form></div><div class="tab-pane" id="tab3"><br><h3><strong>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "step3", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push("</strong> - ");
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "install_widget", {
			name: "I18n",
			hash: {context: "wizard"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</h3><div class="row smart-form"><div class="col-sm-12 wizard-intro">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "manual_install", {
			name: "I18n",
			hash: {
				variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u></strong>", "tag" : "&lt;/body&gt;"}',
				context: "wizard"
			},
			hashTypes: {
				variables: "STRING",
				context: "STRING"
			},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('<br /><br /><label class="textarea">');
		b.buffer.push(f((c.textarea || a && a.textarea || e).call(a, {
			name: "textarea",
			hash: {valueBinding: "widgetCode", readonly: "true", rows: "5", id: "widget-code"},
			hashTypes: {valueBinding: "STRING", readonly: "STRING", rows: "STRING", id: "STRING"},
			hashContexts: {valueBinding: a, readonly: a, rows: a, id: a},
			types: [],
			contexts: [],
			data: b
		})));
		b.buffer.push('</label><br /><button id="email-instructions" class="btn pull-right txt-color-white" style="background: #999;">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_developer", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><div class="clearfix"></div><br /><div class="hidden" id="email-container"><form id="wizard-email-instructions-form" class="smart-form"><label class="textarea"><i class="icon-append fa fa-question-circle"></i><textarea id="emails" name="emails" class="emails" rows="2"></textarea><b class="tooltip tooltip-top-right"><i class="fa fa-warning txt-color-teal"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "email_info", {
			name: "I18n",
			hash: {context: "history"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</b></label><div style="text-align: right; padding: 10px 0;"><button id="cancel-email" type="button" class="btn btn-default" style="margin-right : 5px;">Cancel</button><button id="send-email" type="button" class="btn btn-primary">Send</button></div></form></div><div id="download-plugin-container" class="row" style="margin: inherit;"><hr /><br /><p>');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "plugin_install", {
			name: "I18n",
			hash: {
				variables: '{"strongStartUnderline" : "<strong><u>", "strongEndUnderline" : "</u></strong>"}',
				context: "wizard"
			},
			hashTypes: {variables: "STRING", context: "STRING"},
			hashContexts: {variables: a, context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</p><br /><section class="col col-8"><label class="select"><i></i><select id="cms-change">');
		d = c.each.call(a, "view.cmsLinks", {
			name: "each", hash: {}, hashTypes: {}, hashContexts: {},
			fn: this.program(7, b), inverse: this.noop, types: ["ID"], contexts: [a], data: b
		});
		null != d && b.buffer.push(d);
		b.buffer.push('</select></label></section><section class="col col-4"><a id="download-link" href="#" target="_blank" class="btn btn-info"><i class="fa fa-download"></i>&nbsp;');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "download", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</a></section><div class="clearfix"></div></div></div></div></div></div></div></div></div><div class="modal-footer"><button id="skip-wizard" class="btn btn-default pull-left"><span class="normal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "skip_wizard", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span><span class="small">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "cancel", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></button><button id="wizard-done" class="btn btn-primary hidden pull-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "done", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="next-step" class="btn btn-primary pull-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "next_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="previous-step" class="btn btn-default hidden pull-right">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "previous_text", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</button><button id="skip-step" class="btn btn-warning pull-right"><span class="normal">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "skip_step", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span><span class="small">');
		b.buffer.push(f((c.I18n || a && a.I18n || e).call(a, "skip", {
			name: "I18n",
			hash: {context: "buttons"},
			hashTypes: {context: "STRING"},
			hashContexts: {context: a},
			types: ["ID"],
			contexts: [a],
			data: b
		})));
		b.buffer.push('</span></button><div class="clearfix"></div></div></div></div>');
		return ""
	}, useData: !0
});